; ModuleID = '4bpjdg3tq3cdsoeo'
source_filename = "4bpjdg3tq3cdsoeo"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"core::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%"core::fmt::builders::DebugList" = type { %"core::fmt::builders::DebugInner" }
%"core::fmt::builders::DebugInner" = type { %"core::fmt::Formatter"*, i8, i8, [6 x i8] }
%"core::fmt::Opaque" = type {}
%"core::fmt::Arguments" = type { { [0 x { [0 x i8]*, i64 }]*, i64 }, { i64*, i64 }, { [0 x { i8*, i64* }]*, i64 } }
%"core::panic::location::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"[closure@src/test_arrays.rs:48:1: 66:2]" = type {}
%"[closure@src/test_arrays.rs:32:1: 36:2]" = type {}
%"[closure@src/test_arrays.rs:70:1: 82:2]" = type {}
%"[closure@src/test_arrays.rs:40:1: 44:2]" = type {}
%"[closure@src/test_arrays.rs:86:1: 104:2]" = type {}
%"[closure@src/test_arrays.rs:108:1: 126:2]" = type {}
%"alloc::vec::Vec<i32>" = type { { i32*, i64 }, i64 }
%"core::ptr::metadata::PtrComponents<u8>" = type { {}*, {} }
%"core::ptr::metadata::PtrRepr<u8>" = type { [1 x i64] }
%"core::alloc::layout::LayoutError" = type {}
%"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::ops::range::RangeFull" = type {}
%"[closure@alloc::raw_vec::handle_reserve::{closure#0}]" = type {}
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok" = type { {} }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]" = type {}
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::alloc::AllocError" = type {}
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<core::fmt::Arguments>" = type { {}*, [5 x i64] }
%"core::option::Option<core::fmt::Arguments>::Some" = type { %"core::fmt::Arguments" }
%"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]" = type {}
%"alloc::alloc::Global" = type {}
%"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]" = type { i8**, i8**, i64* }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>" = type { [2 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some" = type { { i8*, { i64, i64 } } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue" = type { [1 x i64], { i8*, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ptr::metadata::PtrRepr<[i32]>" = type { [2 x i64] }
%"packed_arrays::event_queue_t" = type { %"packed_arrays::event_queue_t_Inner" }
%"packed_arrays::event_queue_t_Inner" = type { i32 }
%"incomplete_arrays::sized_array" = type { i64, [0 x i32] }
%"test::types::TestDescAndFn" = type { %"test::types::TestDesc", %"test::types::TestFn" }
%"test::types::TestDesc" = type { %"test::types::TestName", { i8*, i64 }, %"test::options::ShouldPanic", i8, i8, i8, i8, [4 x i8] }
%"test::types::TestName" = type { i8, [39 x i8] }
%"test::options::ShouldPanic" = type { i64, [2 x i64] }
%"test::types::TestFn" = type { i64, [2 x i64] }
%"unwind::libunwind::_Unwind_Exception" = type { i64, void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [6 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

@vtable.0 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8* }> <{ i8* bitcast (void (i64**)* @"_ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h3168fd86cd542110E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i32 (i64**)* @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h9b0e5466779f4103E" to i8*), i8* bitcast (i32 (i64**)* @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h1dbdd53c3505487dE" to i8*), i8* bitcast (i32 (i64**)* @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h1dbdd53c3505487dE" to i8*) }>, align 8, !dbg !0
@vtable.1 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (i32**)* @"_ZN4core3ptr28drop_in_place$LT$$RF$i32$GT$17h2e40cf13126c2945E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i32**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9fdbb99fdc519e06E" to i8*) }>, align 8, !dbg !24
@alloc126 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc127 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc126, i32 0, i32 0, i32 0), [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc284 = private unnamed_addr constant <{}> zeroinitializer, align 8
@alloc431 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/mod.rs" }>, align 1
@alloc432 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc431, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\88\01\00\00\0D\00\00\00" }>, align 8
@vtable.2 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (i8**)* @"_ZN4core3ptr29drop_in_place$LT$$RF$bool$GT$17h049972998a46580cE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i8**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hce03d97be8db13b2E" to i8*) }>, align 8, !dbg !34
@vtable.3 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (i32**)* @"_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17h6bea87460d2c111dE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i32**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h67c8af7d0ce2e79aE" to i8*) }>, align 8, !dbg !44
@vtable.4 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void ([2 x i32]**)* @"_ZN4core3ptr49drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$2$u5d$$GT$17hdf2d5ba04d5e48c9E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ([2 x i32]**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8162c2433ccb8bc2E" to i8*) }>, align 8, !dbg !54
@alloc115 = private unnamed_addr constant <{ [4 x i8] }> zeroinitializer, align 4
@alloc117 = private unnamed_addr constant <{ [67 x i8] }> <{ [67 x i8] c"the test returned a termination value with a non-zero status code (" }>, align 1
@alloc119 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c") which indicates a failure" }>, align 1
@alloc118 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [67 x i8] }>, <{ [67 x i8] }>* @alloc117, i32 0, i32 0, i32 0), [8 x i8] c"C\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [27 x i8] }>, <{ [27 x i8] }>* @alloc119, i32 0, i32 0, i32 0), [8 x i8] c"\1B\00\00\00\00\00\00\00" }>, align 8
@alloc442 = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/test/src/lib.rs" }>, align 1
@alloc443 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [71 x i8] }>, <{ [71 x i8] }>* @alloc442, i32 0, i32 0, i32 0), [16 x i8] c"G\00\00\00\00\00\00\00\B8\00\00\00\05\00\00\00" }>, align 8
@SOME_INTS = constant <{ [16 x i8] }> <{ [16 x i8] c"\02\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00" }>, align 4, !dbg !66
@rust_SOME_INTS = constant <{ [16 x i8] }> <{ [16 x i8] c"\02\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00" }>, align 4, !dbg !74
@_ZN11array_tests6arrays11rust_simple17hdaa33264b2630333E = internal global <{ [9 x i8] }> <{ [9 x i8] c"mystring\00" }>, align 1, !dbg !76
@alloc13 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"mystring\00" }>, align 1
@_ZN11array_tests6arrays8rust_foo17h5210be68efd147e1E = internal global <{ i8* }> <{ i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc13, i32 0, i32 0, i32 0) }>, align 8, !dbg !84
@alloc546 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"src/arrays.rs" }>, align 1
@alloc445 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\1C\00\00\00\05\00\00\00" }>, align 8
@str.5 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc447 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\1F\00\00\00\05\00\00\00" }>, align 8
@alloc449 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00$\00\00\00\05\00\00\00" }>, align 8
@alloc17 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"abc\00" }>, align 1
@alloc451 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00+\00\00\00\09\00\00\00" }>, align 8
@alloc453 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00/\00\00\00\09\00\00\00" }>, align 8
@alloc455 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\003\00\00\00\09\00\00\00" }>, align 8
@alloc457 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\007\00\00\00\09\00\00\00" }>, align 8
@alloc459 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00@\00\00\00\09\00\00\00" }>, align 8
@alloc461 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00D\00\00\00\09\00\00\00" }>, align 8
@alloc463 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00H\00\00\00\09\00\00\00" }>, align 8
@alloc465 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00M\00\00\00\09\00\00\00" }>, align 8
@alloc467 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00Q\00\00\00\09\00\00\00" }>, align 8
@alloc469 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00W\00\00\00\09\00\00\00" }>, align 8
@alloc471 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00[\00\00\00\09\00\00\00" }>, align 8
@alloc473 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00_\00\00\00\09\00\00\00" }>, align 8
@alloc475 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00c\00\00\00\09\00\00\00" }>, align 8
@alloc18 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"abcd\00" }>, align 1
@alloc477 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00k\00\00\00\09\00\00\00" }>, align 8
@alloc479 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00o\00\00\00\09\00\00\00" }>, align 8
@alloc481 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00s\00\00\00\09\00\00\00" }>, align 8
@alloc483 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00w\00\00\00\09\00\00\00" }>, align 8
@alloc19 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"abc" }>, align 1
@alloc485 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\7F\00\00\00\09\00\00\00" }>, align 8
@alloc487 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\83\00\00\00\09\00\00\00" }>, align 8
@alloc489 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\87\00\00\00\09\00\00\00" }>, align 8
@alloc20 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"abc\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 1
@alloc491 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\8F\00\00\00\09\00\00\00" }>, align 8
@alloc493 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\93\00\00\00\09\00\00\00" }>, align 8
@alloc495 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\97\00\00\00\09\00\00\00" }>, align 8
@alloc497 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\9B\00\00\00\09\00\00\00" }>, align 8
@alloc499 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\9F\00\00\00\09\00\00\00" }>, align 8
@alloc501 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\A3\00\00\00\09\00\00\00" }>, align 8
@alloc503 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\A7\00\00\00\09\00\00\00" }>, align 8
@alloc21 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"x\00\00\00\00\00\00\00" }>, align 1
@alloc505 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\AF\00\00\00\09\00\00\00" }>, align 8
@alloc507 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\B2\00\00\00\09\00\00\00" }>, align 8
@alloc22 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"x\00\00\00\00\00\00\00\00\00\00\00" }>, align 1
@alloc509 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\B9\00\00\00\09\00\00\00" }>, align 8
@alloc511 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\BC\00\00\00\09\00\00\00" }>, align 8
@alloc513 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\BF\00\00\00\09\00\00\00" }>, align 8
@alloc23 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"x\00\00\00" }>, align 1
@alloc515 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\C6\00\00\00\09\00\00\00" }>, align 8
@alloc517 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\C9\00\00\00\09\00\00\00" }>, align 8
@alloc519 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\CD\00\00\00\09\00\00\00" }>, align 8
@alloc521 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\D1\00\00\00\09\00\00\00" }>, align 8
@alloc523 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\D5\00\00\00\09\00\00\00" }>, align 8
@alloc525 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\D9\00\00\00\09\00\00\00" }>, align 8
@alloc527 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\DD\00\00\00\09\00\00\00" }>, align 8
@alloc529 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\E1\00\00\00\09\00\00\00" }>, align 8
@alloc531 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\E5\00\00\00\09\00\00\00" }>, align 8
@alloc533 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\E9\00\00\00\09\00\00\00" }>, align 8
@alloc535 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\ED\00\00\00\09\00\00\00" }>, align 8
@alloc537 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\F1\00\00\00\09\00\00\00" }>, align 8
@alloc539 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\F5\00\00\00\09\00\00\00" }>, align 8
@alloc541 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\F9\00\00\00\09\00\00\00" }>, align 8
@alloc543 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\FD\00\00\00\09\00\00\00" }>, align 8
@alloc545 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\01\01\00\00\09\00\00\00" }>, align 8
@alloc547 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc546, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\05\01\00\00\09\00\00\00" }>, align 8
@alloc620 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"src/variable_arrays.rs" }>, align 1
@alloc549 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\10\00\00\00\0F\00\00\00" }>, align 8
@str.6 = internal constant [33 x i8] c"attempt to multiply with overflow"
@alloc551 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\16\00\00\00\13\00\00\00" }>, align 8
@alloc553 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\1A\00\00\00\1B\00\00\00" }>, align 8
@alloc555 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\1C\00\00\00*\00\00\00" }>, align 8
@alloc557 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\1C\00\00\00\1D\00\00\00" }>, align 8
@alloc559 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\1D\00\00\00\1D\00\00\00" }>, align 8
@alloc561 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\1F\00\00\00\11\00\00\00" }>, align 8
@alloc563 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\22\00\00\00\0D\00\00\00" }>, align 8
@alloc565 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00%\00\00\00\09\00\00\00" }>, align 8
@alloc567 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00)\00\00\001\00\00\00" }>, align 8
@alloc569 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00)\00\00\00\11\00\00\00" }>, align 8
@alloc571 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00*\00\00\00\11\00\00\00" }>, align 8
@alloc573 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\003\00\00\00\0F\00\00\00" }>, align 8
@alloc575 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\009\00\00\00\13\00\00\00" }>, align 8
@alloc577 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00=\00\00\00\1B\00\00\00" }>, align 8
@alloc579 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00?\00\00\00*\00\00\00" }>, align 8
@alloc581 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00?\00\00\00\1D\00\00\00" }>, align 8
@alloc583 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00@\00\00\00\1D\00\00\00" }>, align 8
@alloc585 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00B\00\00\00\11\00\00\00" }>, align 8
@alloc587 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00E\00\00\00\0D\00\00\00" }>, align 8
@alloc589 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00H\00\00\00\09\00\00\00" }>, align 8
@alloc591 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00a\00\00\00\1B\00\00\00" }>, align 8
@alloc593 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00b\00\00\000\00\00\00" }>, align 8
@alloc595 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00c\00\00\00\11\00\00\00" }>, align 8
@alloc597 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00f\00\00\00\0D\00\00\00" }>, align 8
@alloc599 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00i\00\00\00\09\00\00\00" }>, align 8
@alloc601 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00q\00\00\003\00\00\00" }>, align 8
@alloc603 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00s\00\00\00\13\00\00\00" }>, align 8
@alloc605 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00u\00\00\00\09\00\00\00" }>, align 8
@alloc607 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\96\00\00\00\1B\00\00\00" }>, align 8
@alloc609 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\97\00\00\000\00\00\00" }>, align 8
@alloc611 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\98\00\00\00\11\00\00\00" }>, align 8
@alloc613 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\9B\00\00\00\0D\00\00\00" }>, align 8
@alloc615 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\9E\00\00\00\09\00\00\00" }>, align 8
@alloc617 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\AA\00\00\00&\00\00\00" }>, align 8
@alloc619 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\AC\00\00\00\13\00\00\00" }>, align 8
@alloc621 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc620, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\AE\00\00\00\09\00\00\00" }>, align 8
@alloc622 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"src/incomplete_arrays.rs" }>, align 1
@alloc623 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [24 x i8] }>, <{ [24 x i8] }>* @alloc622, i32 0, i32 0, i32 0), [16 x i8] c"\18\00\00\00\00\00\00\00D\00\00\00\09\00\00\00" }>, align 8
@alloc666 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"src/test_arrays.rs" }>, align 1
@alloc625 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00\22\00\00\00\09\00\00\00" }>, align 8
@alloc627 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00*\00\00\00\09\00\00\00" }>, align 8
@alloc629 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00?\00\00\00\14\00\00\00" }>, align 8
@alloc631 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00?\00\00\00#\00\00\00" }>, align 8
@alloc633 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00?\00\00\00\09\00\00\00" }>, align 8
@alloc635 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00@\00\00\00\14\00\00\00" }>, align 8
@alloc637 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00@\00\00\00#\00\00\00" }>, align 8
@alloc307 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"index: " }>, align 1
@alloc308 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [7 x i8] }>, <{ [7 x i8] }>* @alloc307, i32 0, i32 0, i32 0), [8 x i8] c"\07\00\00\00\00\00\00\00" }>, align 8
@alloc639 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00@\00\00\00\09\00\00\00" }>, align 8
@alloc641 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00P\00\00\00\05\00\00\00" }>, align 8
@alloc643 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00Q\00\00\00\05\00\00\00" }>, align 8
@alloc645 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00e\00\00\00\14\00\00\00" }>, align 8
@alloc647 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00e\00\00\00#\00\00\00" }>, align 8
@alloc649 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00e\00\00\00\09\00\00\00" }>, align 8
@alloc651 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00f\00\00\00\14\00\00\00" }>, align 8
@alloc653 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00f\00\00\00#\00\00\00" }>, align 8
@alloc655 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00f\00\00\00\09\00\00\00" }>, align 8
@alloc657 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00{\00\00\00\14\00\00\00" }>, align 8
@alloc659 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00{\00\00\00#\00\00\00" }>, align 8
@alloc661 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00{\00\00\00\09\00\00\00" }>, align 8
@alloc663 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00|\00\00\00\14\00\00\00" }>, align 8
@alloc665 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00|\00\00\00#\00\00\00" }>, align 8
@alloc667 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc666, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00|\00\00\00\09\00\00\00" }>, align 8
@alloc32 = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"test_arrays::test_sized_array_impls" }>, align 1
@alloc331 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [35 x i8] }>, <{ [35 x i8] }>* @alloc32, i32 0, i32 0, i32 0), [8 x i8] c"#\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17h164bb907954cf641E to i8*), [8 x i8] undef }>, align 8
@alloc42 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"test_arrays::test_global_incomplete_array" }>, align 1
@alloc332 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [41 x i8] }>, <{ [41 x i8] }>* @alloc42, i32 0, i32 0, i32 0), [8 x i8] c")\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17hb61f48e33c63604dE to i8*), [8 x i8] undef }>, align 8
@alloc52 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"test_arrays::test_buffer" }>, align 1
@alloc333 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [24 x i8] }>, <{ [24 x i8] }>* @alloc52, i32 0, i32 0, i32 0), [8 x i8] c"\18\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17h08e82f09d96cd0c3E to i8*), [8 x i8] undef }>, align 8
@alloc62 = private unnamed_addr constant <{ [25 x i8] }> <{ [25 x i8] c"test_arrays::test_buffer2" }>, align 1
@alloc334 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [25 x i8] }>, <{ [25 x i8] }>* @alloc62, i32 0, i32 0, i32 0), [8 x i8] c"\19\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17h5854d64ef78d1e60E to i8*), [8 x i8] undef }>, align 8
@alloc72 = private unnamed_addr constant <{ [33 x i8] }> <{ [33 x i8] c"test_arrays::test_variable_arrays" }>, align 1
@alloc335 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [33 x i8] }>, <{ [33 x i8] }>* @alloc72, i32 0, i32 0, i32 0), [8 x i8] c"!\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17hdda276033a1f8518E to i8*), [8 x i8] undef }>, align 8
@alloc82 = private unnamed_addr constant <{ [31 x i8] }> <{ [31 x i8] c"test_arrays::test_alloca_arrays" }>, align 1
@alloc336 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [31 x i8] }>, <{ [31 x i8] }>* @alloc82, i32 0, i32 0, i32 0), [8 x i8] c"\1F\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17heffa5958092a6e7dE to i8*), [8 x i8] undef }>, align 8
@alloc337 = private unnamed_addr constant <{ i8*, i8*, i8*, i8*, i8*, i8* }> <{ i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc331, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc332, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc333, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc334, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc335, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc336, i32 0, i32 0, i32 0) }>, align 8
@__rustc_debug_gdb_scripts_section__ = linkonce_odr unnamed_addr constant [34 x i8] c"\01gdb_load_rust_pretty_printers.py\00", section ".debug_gdb_scripts", align 1

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h39c8e5f5acb73393E"(i8* %unique) unnamed_addr #0 !dbg !194 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %unique.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  store i8* %unique, i8** %unique.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %unique.dbg.spill, metadata !215, metadata !DIExpression()), !dbg !216
  store i8* %unique, i8** %self.dbg.spill, align 8, !dbg !217
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !218, metadata !DIExpression()), !dbg !226
  store i8* %unique, i8** %self.dbg.spill1, align 8, !dbg !226
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !227, metadata !DIExpression()), !dbg !232
  store i8* %unique, i8** %ptr.dbg.spill, align 8, !dbg !232
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !234, metadata !DIExpression()), !dbg !239
  store i8* %unique, i8** %0, align 8, !dbg !239
  %1 = load i8*, i8** %0, align 8, !dbg !241, !nonnull !23, !noundef !23
  ret i8* %1, !dbg !241
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hc4cd94cd5fec9894E"(i64 %kind.0, i64 %kind.1) unnamed_addr #0 !dbg !242 {
start:
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0
  store i64 %kind.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1
  store i64 %kind.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !273, metadata !DIExpression()), !dbg !274
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !275
  store i64 %kind.0, i64* %3, align 8, !dbg !275
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !275
  store i64 %kind.1, i64* %4, align 8, !dbg !275
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !276
  %6 = load i64, i64* %5, align 8, !dbg !276
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !276
  %8 = load i64, i64* %7, align 8, !dbg !276, !range !277, !noundef !23
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !276
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !276
  ret { i64, i64 } %10, !dbg !276
}

; std::sys_common::backtrace::__rust_begin_short_backtrace
; Function Attrs: noinline nonlazybind uwtable
define internal void @_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h1410d71afaa7f375E(void ()* %f) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !278 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %dummy.dbg.spill = alloca {}, align 1
  %f.dbg.spill = alloca void ()*, align 8
  %result.dbg.spill = alloca {}, align 1
  call void @llvm.dbg.declare(metadata {}* %result.dbg.spill, metadata !286, metadata !DIExpression()), !dbg !291
  store void ()* %f, void ()** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata void ()** %f.dbg.spill, metadata !285, metadata !DIExpression()), !dbg !292
  call void @llvm.dbg.declare(metadata {}* %dummy.dbg.spill, metadata !293, metadata !DIExpression()), !dbg !302
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17h8ef4047210f3fd1aE(void ()* %f), !dbg !304
  br label %bb1, !dbg !304

bb1:                                              ; preds = %start
  call void asm sideeffect "", "r,~{memory}"({}* undef), !dbg !302, !srcloc !305
  br label %bb4, !dbg !302

bb4:                                              ; preds = %bb1
  ret void, !dbg !306

bb2:                                              ; No predecessors!
  br label %bb3, !dbg !307

bb3:                                              ; preds = %bb2
  %1 = bitcast { i8*, i32 }* %0 to i8**, !dbg !308
  %2 = load i8*, i8** %1, align 8, !dbg !308
  %3 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !308
  %4 = load i32, i32* %3, align 8, !dbg !308
  %5 = insertvalue { i8*, i32 } undef, i8* %2, 0, !dbg !308
  %6 = insertvalue { i8*, i32 } %5, i32 %4, 1, !dbg !308
  resume { i8*, i32 } %6, !dbg !308
}

; std::rt::lang_start
; Function Attrs: nonlazybind uwtable
define hidden i64 @_ZN3std2rt10lang_start17h960a6574b95da718E(void ()* %main, i64 %argc, i8** %argv) unnamed_addr #2 !dbg !309 {
start:
  %v.dbg.spill = alloca i64, align 8
  %argv.dbg.spill = alloca i8**, align 8
  %argc.dbg.spill = alloca i64, align 8
  %main.dbg.spill = alloca void ()*, align 8
  %_8 = alloca i64*, align 8
  %_4 = alloca i64, align 8
  store void ()* %main, void ()** %main.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata void ()** %main.dbg.spill, metadata !316, metadata !DIExpression()), !dbg !321
  store i64 %argc, i64* %argc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %argc.dbg.spill, metadata !317, metadata !DIExpression()), !dbg !322
  store i8** %argv, i8*** %argv.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.dbg.spill, metadata !318, metadata !DIExpression()), !dbg !323
  %0 = bitcast i64** %_8 to void ()**, !dbg !324
  store void ()* %main, void ()** %0, align 8, !dbg !324
  %_5.0 = bitcast i64** %_8 to {}*, !dbg !325
; call std::rt::lang_start_internal
  %1 = call i64 @_ZN3std2rt19lang_start_internal17h498f9556b87c8e5fE({}* align 1 %_5.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8*, i8*, i8* }>* @vtable.0 to [3 x i64]*), i64 %argc, i8** %argv), !dbg !326
  store i64 %1, i64* %_4, align 8, !dbg !326
  br label %bb1, !dbg !326

bb1:                                              ; preds = %start
  %v = load i64, i64* %_4, align 8, !dbg !327
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !327
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !319, metadata !DIExpression()), !dbg !328
  ret i64 %v, !dbg !329
}

; std::rt::lang_start::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h1dbdd53c3505487dE"(i64** align 8 %_1) unnamed_addr #0 !dbg !330 {
start:
  %self.dbg.spill = alloca i8*, align 8
  %_1.dbg.spill = alloca i64**, align 8
  %self = alloca i8, align 1
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  %0 = load i64**, i64*** %_1.dbg.spill, align 8, !nonnull !23, !align !336, !noundef !23
  %1 = bitcast i64** %0 to void ()**
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !335, metadata !DIExpression(DW_OP_deref)), !dbg !337
  call void @llvm.dbg.declare(metadata i8* %self, metadata !338, metadata !DIExpression()), !dbg !356
  %2 = bitcast i64** %_1 to void ()**, !dbg !358
  %_4 = load void ()*, void ()** %2, align 8, !dbg !358, !nonnull !23, !noundef !23
; call std::sys_common::backtrace::__rust_begin_short_backtrace
  call void @_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h1410d71afaa7f375E(void ()* %_4), !dbg !357
  br label %bb1, !dbg !357

bb1:                                              ; preds = %start
; call <() as std::process::Termination>::report
  %3 = call i8 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17hc82e88fc6d5dfe88E"(), !dbg !357
  store i8 %3, i8* %self, align 1, !dbg !357
  br label %bb2, !dbg !357

bb2:                                              ; preds = %bb1
  store i8* %self, i8** %self.dbg.spill, align 8, !dbg !356
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !359, metadata !DIExpression()), !dbg !367
  %_6 = load i8, i8* %self, align 1, !dbg !367
  %4 = zext i8 %_6 to i32, !dbg !367
  ret i32 %4, !dbg !369
}

; <bool as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN41_$LT$bool$u20$as$u20$core..fmt..Debug$GT$3fmt17h5097fa134885aec6E"(i8* align 1 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #0 !dbg !370 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !427, metadata !DIExpression()), !dbg !429
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !428, metadata !DIExpression()), !dbg !430
; call <bool as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN43_$LT$bool$u20$as$u20$core..fmt..Display$GT$3fmt17h2dce19af35182c57E"(i8* align 1 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !431
  br label %bb1, !dbg !431

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !432
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h67c8af7d0ce2e79aE"(i32** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !433 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i32**, align 8
  store i32** %self, i32*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32*** %self.dbg.spill, metadata !439, metadata !DIExpression()), !dbg !443
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !440, metadata !DIExpression()), !dbg !444
  %_6 = load i32*, i32** %self, align 8, !dbg !445, !nonnull !23, !align !446, !noundef !23
; call core::fmt::num::<impl core::fmt::Debug for u32>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hd89f1680b69491a7E"(i32* align 4 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !447
  br label %bb1, !dbg !447

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !448
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7f6552a0aa4df737E"({ [0 x i32]*, i64 }* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !449 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { [0 x i32]*, i64 }*, align 8
  store { [0 x i32]*, i64 }* %self, { [0 x i32]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }** %self.dbg.spill, metadata !459, metadata !DIExpression()), !dbg !463
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !460, metadata !DIExpression()), !dbg !464
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self, i32 0, i32 0, !dbg !465
  %_6.0 = load [0 x i32]*, [0 x i32]** %0, align 8, !dbg !465, !nonnull !23, !align !446, !noundef !23
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self, i32 0, i32 1, !dbg !465
  %_6.1 = load i64, i64* %1, align 8, !dbg !465
; call <[T] as core::fmt::Debug>::fmt
  %2 = call zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17h99d9fb204600c614E"([0 x i32]* align 4 %_6.0, i64 %_6.1, %"core::fmt::Formatter"* align 8 %f), !dbg !466
  br label %bb1, !dbg !466

bb1:                                              ; preds = %start
  ret i1 %2, !dbg !467
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8162c2433ccb8bc2E"([2 x i32]** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !468 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca [2 x i32]**, align 8
  store [2 x i32]** %self, [2 x i32]*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [2 x i32]*** %self.dbg.spill, metadata !473, metadata !DIExpression()), !dbg !477
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !474, metadata !DIExpression()), !dbg !478
  %_6 = load [2 x i32]*, [2 x i32]** %self, align 8, !dbg !479, !nonnull !23, !align !446, !noundef !23
; call core::array::<impl core::fmt::Debug for [T; N]>::fmt
  %0 = call zeroext i1 @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17hf61e17d33cd8cebbE"([2 x i32]* align 4 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !480
  br label %bb1, !dbg !480

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !481
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9fdbb99fdc519e06E"(i32** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !482 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i32**, align 8
  store i32** %self, i32*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32*** %self.dbg.spill, metadata !487, metadata !DIExpression()), !dbg !489
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !488, metadata !DIExpression()), !dbg !490
  %_6 = load i32*, i32** %self, align 8, !dbg !491, !nonnull !23, !align !446, !noundef !23
; call core::fmt::num::<impl core::fmt::Debug for i32>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17h9112b2fdc544d21eE"(i32* align 4 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !492
  br label %bb1, !dbg !492

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !493
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hce03d97be8db13b2E"(i8** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !494 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8**, align 8
  store i8** %self, i8*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill, metadata !499, metadata !DIExpression()), !dbg !503
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !500, metadata !DIExpression()), !dbg !504
  %_6 = load i8*, i8** %self, align 8, !dbg !505, !nonnull !23, !align !506, !noundef !23
; call <bool as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN41_$LT$bool$u20$as$u20$core..fmt..Debug$GT$3fmt17h5097fa134885aec6E"(i8* align 1 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !507
  br label %bb1, !dbg !507

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !508
}

; <[T] as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17h99d9fb204600c614E"([0 x i32]* align 4 %self.0, i64 %self.1, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !509 {
start:
  %self.dbg.spill1 = alloca { [0 x i32]*, i64 }, align 8
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %_6 = alloca %"core::fmt::builders::DebugList", align 8
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i32]* %self.0, [0 x i32]** %0, align 8
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !514, metadata !DIExpression()), !dbg !516
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !515, metadata !DIExpression()), !dbg !517
; call core::fmt::Formatter::debug_list
  call void @_ZN4core3fmt9Formatter10debug_list17h2e70d1c34e8cb782E(%"core::fmt::builders::DebugList"* sret(%"core::fmt::builders::DebugList") %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !518
  br label %bb1, !dbg !518

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !519
  store [0 x i32]* %self.0, [0 x i32]** %2, align 8, !dbg !519
  %3 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !519
  store i64 %self.1, i64* %3, align 8, !dbg !519
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill1, metadata !520, metadata !DIExpression()), !dbg !542
; call core::slice::iter::Iter<T>::new
  %4 = call { i32*, i32* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17he358f5b01646211cE"([0 x i32]* align 4 %self.0, i64 %self.1), !dbg !542
  %_8.0 = extractvalue { i32*, i32* } %4, 0, !dbg !542
  %_8.1 = extractvalue { i32*, i32* } %4, 1, !dbg !542
  br label %bb4, !dbg !542

bb4:                                              ; preds = %bb1
; call core::fmt::builders::DebugList::entries
  %_4 = call align 8 %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList7entries17he1b33f36e666fe23E(%"core::fmt::builders::DebugList"* align 8 %_6, i32* %_8.0, i32* %_8.1), !dbg !518
  br label %bb2, !dbg !518

bb2:                                              ; preds = %bb4
; call core::fmt::builders::DebugList::finish
  %5 = call zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17ha896c0aa3642bf32E(%"core::fmt::builders::DebugList"* align 8 %_4), !dbg !518
  br label %bb3, !dbg !518

bb3:                                              ; preds = %bb2
  ret i1 %5, !dbg !543
}

; <usize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hcad913c0659dde8dE"(i64 %start1, i64 %n) unnamed_addr #0 !dbg !544 {
start:
  %0 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  store i64 %start1, i64* %start.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !552, metadata !DIExpression()), !dbg !554
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !553, metadata !DIExpression()), !dbg !555
  store i64 %start1, i64* %self.dbg.spill, align 8, !dbg !556
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !557, metadata !DIExpression()), !dbg !565
  store i64 %n, i64* %rhs.dbg.spill, align 8, !dbg !566
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !564, metadata !DIExpression()), !dbg !565
  %1 = add nuw i64 %start1, %n, !dbg !565
  store i64 %1, i64* %0, align 8, !dbg !565
  %2 = load i64, i64* %0, align 8, !dbg !565
  br label %bb1, !dbg !565

bb1:                                              ; preds = %start
  ret i64 %2, !dbg !567
}

; core::cmp::Ord::max
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3cmp3Ord3max17h3bd0472e5607e6b1E(i64 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !568 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %_8 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %3 = alloca i64, align 8
  %other = alloca i64, align 8
  %self = alloca i64, align 8
  store i64 %0, i64* %self, align 8
  store i64 %1, i64* %other, align 8
  call void @llvm.dbg.declare(metadata i64* %self, metadata !572, metadata !DIExpression()), !dbg !576
  call void @llvm.dbg.declare(metadata i64* %other, metadata !573, metadata !DIExpression()), !dbg !577
  store i8 1, i8* %_9, align 1, !dbg !578
  store i8 1, i8* %_8, align 1, !dbg !578
; invoke core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %4 = invoke i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h73e7147305a364e9E"(i64* align 8 %self, i64* align 8 %other)
          to label %bb1 unwind label %cleanup, !dbg !578, !range !579

bb8:                                              ; preds = %cleanup
  br label %bb13, !dbg !580

cleanup:                                          ; preds = %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb8

bb1:                                              ; preds = %start
  store i8 %4, i8* %_3, align 1, !dbg !578
  %_7 = load i8, i8* %_3, align 1, !dbg !578, !range !579, !noundef !23
  switch i8 %_7, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ], !dbg !581

bb13:                                             ; preds = %bb8
  %10 = load i8, i8* %_9, align 1, !dbg !580, !range !582, !noundef !23
  %11 = trunc i8 %10 to i1, !dbg !580
  br i1 %11, label %bb12, label %bb9, !dbg !580

bb3:                                              ; preds = %bb1
  unreachable, !dbg !578

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_8, align 1, !dbg !583
  %12 = load i64, i64* %other, align 8, !dbg !583
  store i64 %12, i64* %3, align 8, !dbg !583
  br label %bb5, !dbg !583

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_9, align 1, !dbg !584
  %13 = load i64, i64* %self, align 8, !dbg !584
  store i64 %13, i64* %3, align 8, !dbg !584
  br label %bb5, !dbg !584

bb5:                                              ; preds = %bb4, %bb2
  %14 = load i8, i8* %_8, align 1, !dbg !580, !range !582, !noundef !23
  %15 = trunc i8 %14 to i1, !dbg !580
  br i1 %15, label %bb10, label %bb6, !dbg !580

bb6:                                              ; preds = %bb10, %bb5
  %16 = load i8, i8* %_9, align 1, !dbg !580, !range !582, !noundef !23
  %17 = trunc i8 %16 to i1, !dbg !580
  br i1 %17, label %bb11, label %bb7, !dbg !580

bb10:                                             ; preds = %bb5
  br label %bb6, !dbg !580

bb9:                                              ; preds = %bb12, %bb13
  %18 = bitcast { i8*, i32 }* %2 to i8**, !dbg !585
  %19 = load i8*, i8** %18, align 8, !dbg !585
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !585
  %21 = load i32, i32* %20, align 8, !dbg !585
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0, !dbg !585
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1, !dbg !585
  resume { i8*, i32 } %23, !dbg !585

bb12:                                             ; preds = %bb13
  br label %bb9, !dbg !580

bb7:                                              ; preds = %bb11, %bb6
  %24 = load i64, i64* %3, align 8, !dbg !586
  ret i64 %24, !dbg !586

bb11:                                             ; preds = %bb6
  br label %bb7, !dbg !580
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h73e7147305a364e9E"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #0 !dbg !587 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  %0 = alloca i8, align 1
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !594, metadata !DIExpression()), !dbg !596
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !595, metadata !DIExpression()), !dbg !597
  %_4 = load i64, i64* %self, align 8, !dbg !598
  %_5 = load i64, i64* %other, align 8, !dbg !599
  %_3 = icmp ult i64 %_4, %_5, !dbg !598
  br i1 %_3, label %bb1, label %bb2, !dbg !598

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8, !dbg !600
  %_8 = load i64, i64* %other, align 8, !dbg !601
  %_6 = icmp eq i64 %_7, %_8, !dbg !600
  br i1 %_6, label %bb3, label %bb4, !dbg !600

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1, !dbg !602
  br label %bb6, !dbg !603

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !dbg !604, !range !579, !noundef !23
  ret i8 %1, !dbg !604

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1, !dbg !605
  br label %bb5, !dbg !606

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1, !dbg !607
  br label %bb5, !dbg !606

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6, !dbg !603
}

; core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hbeede2e4dd026a93E"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #0 !dbg !608 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !613, metadata !DIExpression()), !dbg !615
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !614, metadata !DIExpression()), !dbg !616
  %_3 = load i64, i64* %self, align 8, !dbg !617
  %_4 = load i64, i64* %other, align 8, !dbg !618
  %0 = icmp ult i64 %_3, %_4, !dbg !617
  ret i1 %0, !dbg !619
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h4a588785c5f75a8eE(i64* align 8 %x) unnamed_addr #0 !dbg !620 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (i64*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca i64*, align 8
  %x.dbg.spill = alloca i64*, align 8
  %2 = alloca { i8*, i64* }, align 8
  store i64* %x, i64** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill, metadata !634, metadata !DIExpression()), !dbg !635
  store i64* %x, i64** %x.dbg.spill1, align 8, !dbg !636
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill1, metadata !637, metadata !DIExpression()), !dbg !646
  store i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE", i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !648
  call void @llvm.dbg.declare(metadata i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !645, metadata !DIExpression()), !dbg !646
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !646
  %_4 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !646, !nonnull !23, !noundef !23
  br label %bb1, !dbg !646

bb1:                                              ; preds = %start
  %3 = bitcast i64* %x to %"core::fmt::Opaque"*, !dbg !646
  store %"core::fmt::Opaque"* %3, %"core::fmt::Opaque"** %0, align 8, !dbg !646
  %_6 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !646, !nonnull !23, !align !506, !noundef !23
  br label %bb2, !dbg !646

bb2:                                              ; preds = %bb1
  %4 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**, !dbg !646
  store %"core::fmt::Opaque"* %_6, %"core::fmt::Opaque"** %4, align 8, !dbg !646
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !646
  %6 = bitcast i64** %5 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !646
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_4, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !646
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !649
  %8 = load i8*, i8** %7, align 8, !dbg !649, !nonnull !23, !align !506, !noundef !23
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !649
  %10 = load i64*, i64** %9, align 8, !dbg !649, !nonnull !23, !noundef !23
  %11 = insertvalue { i8*, i64* } undef, i8* %8, 0, !dbg !649
  %12 = insertvalue { i8*, i64* } %11, i64* %10, 1, !dbg !649
  ret { i8*, i64* } %12, !dbg !649
}

; core::fmt::num::<impl core::fmt::Debug for i32>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17h9112b2fdc544d21eE"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #0 !dbg !650 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i32*, align 8
  %0 = alloca i8, align 1
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !657, metadata !DIExpression()), !dbg !659
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !658, metadata !DIExpression()), !dbg !660
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h861f5ddbf758e4f9E(%"core::fmt::Formatter"* align 8 %f), !dbg !661
  br label %bb1, !dbg !661

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4, !dbg !661

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h21ddf2be2e6a0fd5E(%"core::fmt::Formatter"* align 8 %f), !dbg !662
  br label %bb5, !dbg !662

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h46ab6094afed2354E"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !663
  %2 = zext i1 %1 to i8, !dbg !663
  store i8 %2, i8* %0, align 1, !dbg !663
  br label %bb3, !dbg !663

bb3:                                              ; preds = %bb2
  br label %bb11, !dbg !664

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !dbg !665, !range !582, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !665
  ret i1 %4, !dbg !665

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8, !dbg !662

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h52a4838d0eaa2babE"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !666
  %6 = zext i1 %5 to i8, !dbg !666
  store i8 %6, i8* %0, align 1, !dbg !666
  br label %bb9, !dbg !666

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h827553a54a7e037dE"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !667
  %8 = zext i1 %7 to i8, !dbg !667
  store i8 %8, i8* %0, align 1, !dbg !667
  br label %bb7, !dbg !667

bb7:                                              ; preds = %bb6
  br label %bb10, !dbg !668

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11, !dbg !664

bb9:                                              ; preds = %bb8
  br label %bb10, !dbg !668
}

; core::fmt::num::<impl core::fmt::Debug for u32>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hd89f1680b69491a7E"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #0 !dbg !669 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i32*, align 8
  %0 = alloca i8, align 1
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !674, metadata !DIExpression()), !dbg !676
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !675, metadata !DIExpression()), !dbg !677
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h861f5ddbf758e4f9E(%"core::fmt::Formatter"* align 8 %f), !dbg !678
  br label %bb1, !dbg !678

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4, !dbg !678

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h21ddf2be2e6a0fd5E(%"core::fmt::Formatter"* align 8 %f), !dbg !679
  br label %bb5, !dbg !679

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u32$GT$3fmt17h4598978fc11d0a5fE"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !680
  %2 = zext i1 %1 to i8, !dbg !680
  store i8 %2, i8* %0, align 1, !dbg !680
  br label %bb3, !dbg !680

bb3:                                              ; preds = %bb2
  br label %bb11, !dbg !681

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !dbg !682, !range !582, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !682
  ret i1 %4, !dbg !682

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8, !dbg !679

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h518f5e83165fbe37E"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !683
  %6 = zext i1 %5 to i8, !dbg !683
  store i8 %6, i8* %0, align 1, !dbg !683
  br label %bb9, !dbg !683

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h1d19ab97b54bf162E"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !684
  %8 = zext i1 %7 to i8, !dbg !684
  store i8 %8, i8* %0, align 1, !dbg !684
  br label %bb7, !dbg !684

bb7:                                              ; preds = %bb6
  br label %bb10, !dbg !685

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11, !dbg !681

bb9:                                              ; preds = %bb8
  br label %bb10, !dbg !685
}

; core::fmt::builders::DebugList::entries
; Function Attrs: nonlazybind uwtable
define internal align 8 %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList7entries17he1b33f36e666fe23E(%"core::fmt::builders::DebugList"* align 8 %self, i32* %entries.0, i32* %entries.1) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !686 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %entries.dbg.spill = alloca { i32*, i32* }, align 8
  %self.dbg.spill = alloca %"core::fmt::builders::DebugList"*, align 8
  %entry = alloca i32*, align 8
  %_7 = alloca i32*, align 8
  %iter = alloca { i32*, i32* }, align 8
  store %"core::fmt::builders::DebugList"* %self, %"core::fmt::builders::DebugList"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::builders::DebugList"** %self.dbg.spill, metadata !701, metadata !DIExpression()), !dbg !710
  %1 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %entries.dbg.spill, i32 0, i32 0
  store i32* %entries.0, i32** %1, align 8
  %2 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %entries.dbg.spill, i32 0, i32 1
  store i32* %entries.1, i32** %2, align 8
  call void @llvm.dbg.declare(metadata { i32*, i32* }* %entries.dbg.spill, metadata !702, metadata !DIExpression()), !dbg !711
  call void @llvm.dbg.declare(metadata { i32*, i32* }* %iter, metadata !703, metadata !DIExpression()), !dbg !712
  call void @llvm.dbg.declare(metadata i32** %entry, metadata !705, metadata !DIExpression()), !dbg !713
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %3 = call { i32*, i32* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hbedba93d2b3aafecE"(i32* %entries.0, i32* %entries.1), !dbg !714
  %_4.0 = extractvalue { i32*, i32* } %3, 0, !dbg !714
  %_4.1 = extractvalue { i32*, i32* } %3, 1, !dbg !714
  br label %bb1, !dbg !714

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %iter, i32 0, i32 0, !dbg !714
  store i32* %_4.0, i32** %4, align 8, !dbg !714
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %iter, i32 0, i32 1, !dbg !714
  store i32* %_4.1, i32** %5, align 8, !dbg !714
  br label %bb2, !dbg !715

bb2:                                              ; preds = %bb8, %bb1
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %6 = invoke align 4 i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7353489ac595ce3aE"({ i32*, i32* }* align 8 %iter)
          to label %bb3 unwind label %cleanup, !dbg !712

bb11:                                             ; preds = %bb10, %cleanup
  br label %bb12, !dbg !716

cleanup:                                          ; preds = %bb2
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb11

bb3:                                              ; preds = %bb2
  store i32* %6, i32** %_7, align 8, !dbg !712
  %12 = bitcast i32** %_7 to {}**, !dbg !712
  %13 = load {}*, {}** %12, align 8, !dbg !712
  %14 = icmp eq {}* %13, null, !dbg !712
  %_10 = select i1 %14, i64 0, i64 1, !dbg !712
  switch i64 %_10, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ], !dbg !712

bb5:                                              ; preds = %bb3
  unreachable, !dbg !712

bb6:                                              ; preds = %bb3
  br label %bb9, !dbg !716

bb4:                                              ; preds = %bb3
  %15 = load i32*, i32** %_7, align 8, !dbg !717, !nonnull !23, !align !446, !noundef !23
  store i32* %15, i32** %entry, align 8, !dbg !717
  %_14.0 = bitcast i32** %entry to {}*, !dbg !718
; invoke core::fmt::builders::DebugList::entry
  %_12 = invoke align 8 %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList5entry17h5007920add23274dE(%"core::fmt::builders::DebugList"* align 8 %self, {}* align 1 %_14.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.1 to [3 x i64]*))
          to label %bb7 unwind label %cleanup1, !dbg !719

bb10:                                             ; preds = %cleanup1
  br label %bb11, !dbg !720

cleanup1:                                         ; preds = %bb4
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb10

bb7:                                              ; preds = %bb4
  br label %bb8, !dbg !720

bb8:                                              ; preds = %bb7
  br label %bb2, !dbg !715

bb12:                                             ; preds = %bb11
  %21 = bitcast { i8*, i32 }* %0 to i8**, !dbg !721
  %22 = load i8*, i8** %21, align 8, !dbg !721
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !721
  %24 = load i32, i32* %23, align 8, !dbg !721
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0, !dbg !721
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1, !dbg !721
  resume { i8*, i32 } %26, !dbg !721

bb9:                                              ; preds = %bb6
  ret %"core::fmt::builders::DebugList"* %self, !dbg !722
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments6new_v117h91724e5e2039d987E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %0, [0 x { [0 x i8]*, i64 }]* align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* align 8 %args.0, i64 %args.1) unnamed_addr #0 !dbg !723 {
start:
  %args.dbg.spill = alloca { [0 x { i8*, i64* }]*, i64 }, align 8
  %pieces.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %_24 = alloca { i64*, i64 }, align 8
  %_16 = alloca %"core::fmt::Arguments", align 8
  %_3 = alloca i8, align 1
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %1, align 8
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, metadata !791, metadata !DIExpression()), !dbg !793
  %3 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %3, align 8
  %4 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, metadata !792, metadata !DIExpression()), !dbg !794
  %_4 = icmp ult i64 %pieces.1, %args.1, !dbg !795
  br i1 %_4, label %bb1, label %bb2, !dbg !795

bb2:                                              ; preds = %start
  %_12 = add i64 %args.1, 1, !dbg !796
  %_9 = icmp ugt i64 %pieces.1, %_12, !dbg !797
  %5 = zext i1 %_9 to i8, !dbg !795
  store i8 %5, i8* %_3, align 1, !dbg !795
  br label %bb3, !dbg !795

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1, !dbg !795
  br label %bb3, !dbg !795

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %_3, align 1, !dbg !795, !range !582, !noundef !23
  %7 = trunc i8 %6 to i1, !dbg !795
  br i1 %7, label %bb4, label %bb6, !dbg !795

bb6:                                              ; preds = %bb3
  %8 = bitcast { i64*, i64 }* %_24 to {}**, !dbg !798
  store {}* null, {}** %8, align 8, !dbg !798
  %9 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !799
  %10 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 0, !dbg !799
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %10, align 8, !dbg !799
  %11 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 1, !dbg !799
  store i64 %pieces.1, i64* %11, align 8, !dbg !799
  %12 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1, !dbg !799
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 0, !dbg !799
  %14 = load i64*, i64** %13, align 8, !dbg !799, !align !336
  %15 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 1, !dbg !799
  %16 = load i64, i64* %15, align 8, !dbg !799
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 0, !dbg !799
  store i64* %14, i64** %17, align 8, !dbg !799
  %18 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 1, !dbg !799
  store i64 %16, i64* %18, align 8, !dbg !799
  %19 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2, !dbg !799
  %20 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 0, !dbg !799
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %20, align 8, !dbg !799
  %21 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 1, !dbg !799
  store i64 %args.1, i64* %21, align 8, !dbg !799
  ret void, !dbg !800

bb4:                                              ; preds = %bb3
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h91724e5e2039d987E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_16, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc127 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc284 to [0 x { i8*, i64* }]*), i64 0), !dbg !801
  br label %bb5, !dbg !801

bb5:                                              ; preds = %bb4
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_16, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc432 to %"core::panic::location::Location"*)) #15, !dbg !801
  unreachable, !dbg !801
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3mem7replace17ha2dc615712323ff3E(i64* align 8 %dest, i64 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !802 {
start:
  %dst.dbg.spill = alloca i64*, align 8
  %result.dbg.spill = alloca i64, align 8
  %slot.dbg.spill = alloca i64, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill3 = alloca i64, align 8
  %self.dbg.spill = alloca i64*, align 8
  %src.dbg.spill2 = alloca i64*, align 8
  %src.dbg.spill = alloca i64, align 8
  %dest.dbg.spill = alloca i64*, align 8
  %tmp = alloca i64, align 8
  %src1 = alloca i64, align 8
  store i64* %dest, i64** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dest.dbg.spill, metadata !808, metadata !DIExpression()), !dbg !812
  store i64 %src, i64* %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %src.dbg.spill, metadata !809, metadata !DIExpression()), !dbg !813
  call void @llvm.dbg.declare(metadata i64* %src1, metadata !814, metadata !DIExpression()), !dbg !823
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !825, metadata !DIExpression()), !dbg !844
  store i64* %dest, i64** %src.dbg.spill2, align 8, !dbg !846
  call void @llvm.dbg.declare(metadata i64** %src.dbg.spill2, metadata !833, metadata !DIExpression()), !dbg !847
  %1 = bitcast i64* %tmp to {}*, !dbg !848
  store i64* %tmp, i64** %self.dbg.spill, align 8, !dbg !844
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !855, metadata !DIExpression()), !dbg !862
  %2 = bitcast i64* %tmp to i8*, !dbg !844
  %3 = bitcast i64* %dest to i8*, !dbg !844
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !844
  %self = load i64, i64* %tmp, align 8, !dbg !844
  store i64 %self, i64* %self.dbg.spill3, align 8, !dbg !844
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill3, metadata !864, metadata !DIExpression()), !dbg !878
  br label %bb4, !dbg !878

bb4:                                              ; preds = %start
  store i64 %self, i64* %slot.dbg.spill, align 8, !dbg !878
  call void @llvm.dbg.declare(metadata i64* %slot.dbg.spill, metadata !880, metadata !DIExpression()), !dbg !887
  store i64 %self, i64* %result.dbg.spill, align 8, !dbg !887
  call void @llvm.dbg.declare(metadata i64* %result.dbg.spill, metadata !810, metadata !DIExpression()), !dbg !889
  store i64* %dest, i64** %dst.dbg.spill, align 8, !dbg !890
  call void @llvm.dbg.declare(metadata i64** %dst.dbg.spill, metadata !822, metadata !DIExpression()), !dbg !823
  store i64 %src, i64* %src1, align 8, !dbg !891
  %4 = bitcast i64* %dest to i8*, !dbg !823
  %5 = bitcast i64* %src1 to i8*, !dbg !823
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 8, i1 false), !dbg !823
  ret i64 %self, !dbg !892

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !893

bb1:                                              ; preds = %bb2, %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !894
  %7 = load i8*, i8** %6, align 8, !dbg !894
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !894
  %9 = load i32, i32* %8, align 8, !dbg !894
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !894
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !894
  resume { i8*, i32 } %11, !dbg !894

bb2:                                              ; preds = %bb3
  br label %bb1, !dbg !893
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h251db5f99c8c8fc4E"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !895 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill4 = alloca i8, align 1
  %a.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill2 = alloca i64, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i8 }, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !899, metadata !DIExpression()), !dbg !904
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !900, metadata !DIExpression()), !dbg !905
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !906
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !907, metadata !DIExpression()), !dbg !920
  store i64 %rhs, i64* %rhs.dbg.spill2, align 8, !dbg !921
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill2, metadata !916, metadata !DIExpression()), !dbg !920
  %3 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs), !dbg !920
  %4 = extractvalue { i64, i1 } %3, 0, !dbg !920
  %5 = extractvalue { i64, i1 } %3, 1, !dbg !920
  %6 = zext i1 %5 to i8, !dbg !920
  %7 = bitcast { i64, i8 }* %1 to i64*, !dbg !920
  store i64 %4, i64* %7, align 8, !dbg !920
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !920
  store i8 %6, i8* %8, align 8, !dbg !920
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !920
  %_13.0 = load i64, i64* %9, align 8, !dbg !920
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !920
  %11 = load i8, i8* %10, align 8, !dbg !920, !range !582, !noundef !23
  %_13.1 = trunc i8 %11 to i1, !dbg !920
  br label %bb5, !dbg !920

bb5:                                              ; preds = %start
  store i64 %_13.0, i64* %a.dbg.spill, align 8, !dbg !920
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !917, metadata !DIExpression()), !dbg !922
  %12 = zext i1 %_13.1 to i8, !dbg !920
  store i8 %12, i8* %b.dbg.spill, align 1, !dbg !920
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !919, metadata !DIExpression()), !dbg !922
  %13 = bitcast { i64, i8 }* %_5 to i64*, !dbg !922
  store i64 %_13.0, i64* %13, align 8, !dbg !922
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !922
  %15 = zext i1 %_13.1 to i8, !dbg !922
  store i8 %15, i8* %14, align 8, !dbg !922
  %16 = bitcast { i64, i8 }* %_5 to i64*, !dbg !923
  %a = load i64, i64* %16, align 8, !dbg !923
  store i64 %a, i64* %a.dbg.spill3, align 8, !dbg !923
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill3, metadata !901, metadata !DIExpression()), !dbg !924
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !925
  %18 = load i8, i8* %17, align 8, !dbg !925, !range !582, !noundef !23
  %b = trunc i8 %18 to i1, !dbg !925
  %19 = zext i1 %b to i8, !dbg !925
  store i8 %19, i8* %b.dbg.spill4, align 1, !dbg !925
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill4, metadata !903, metadata !DIExpression()), !dbg !926
  %20 = call i1 @llvm.expect.i1(i1 %b, i1 false), !dbg !927
  %21 = zext i1 %20 to i8, !dbg !927
  store i8 %21, i8* %0, align 1, !dbg !927
  %22 = load i8, i8* %0, align 1, !dbg !927, !range !582, !noundef !23
  %_8 = trunc i8 %22 to i1, !dbg !927
  br label %bb1, !dbg !927

bb1:                                              ; preds = %bb5
  br i1 %_8, label %bb2, label %bb3, !dbg !927

bb3:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !928
  store i64 %a, i64* %23, align 8, !dbg !928
  %24 = bitcast { i64, i64 }* %2 to i64*, !dbg !928
  store i64 1, i64* %24, align 8, !dbg !928
  br label %bb4, !dbg !929

bb2:                                              ; preds = %bb1
  %25 = bitcast { i64, i64 }* %2 to i64*, !dbg !930
  store i64 0, i64* %25, align 8, !dbg !930
  br label %bb4, !dbg !929

bb4:                                              ; preds = %bb3, %bb2
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !931
  %27 = load i64, i64* %26, align 8, !dbg !931, !range !932, !noundef !23
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !931
  %29 = load i64, i64* %28, align 8, !dbg !931
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !931
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !931
  ret { i64, i64 } %31, !dbg !931
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h5275f3d8f38f5cedE"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !933 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill4 = alloca i8, align 1
  %a.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill2 = alloca i64, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i8 }, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !935, metadata !DIExpression()), !dbg !940
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !936, metadata !DIExpression()), !dbg !941
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !942
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !943, metadata !DIExpression()), !dbg !950
  store i64 %rhs, i64* %rhs.dbg.spill2, align 8, !dbg !951
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill2, metadata !946, metadata !DIExpression()), !dbg !950
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !950
  %4 = extractvalue { i64, i1 } %3, 0, !dbg !950
  %5 = extractvalue { i64, i1 } %3, 1, !dbg !950
  %6 = zext i1 %5 to i8, !dbg !950
  %7 = bitcast { i64, i8 }* %1 to i64*, !dbg !950
  store i64 %4, i64* %7, align 8, !dbg !950
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !950
  store i8 %6, i8* %8, align 8, !dbg !950
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !950
  %_13.0 = load i64, i64* %9, align 8, !dbg !950
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !950
  %11 = load i8, i8* %10, align 8, !dbg !950, !range !582, !noundef !23
  %_13.1 = trunc i8 %11 to i1, !dbg !950
  br label %bb5, !dbg !950

bb5:                                              ; preds = %start
  store i64 %_13.0, i64* %a.dbg.spill, align 8, !dbg !950
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !947, metadata !DIExpression()), !dbg !952
  %12 = zext i1 %_13.1 to i8, !dbg !950
  store i8 %12, i8* %b.dbg.spill, align 1, !dbg !950
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !949, metadata !DIExpression()), !dbg !952
  %13 = bitcast { i64, i8 }* %_5 to i64*, !dbg !952
  store i64 %_13.0, i64* %13, align 8, !dbg !952
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !952
  %15 = zext i1 %_13.1 to i8, !dbg !952
  store i8 %15, i8* %14, align 8, !dbg !952
  %16 = bitcast { i64, i8 }* %_5 to i64*, !dbg !953
  %a = load i64, i64* %16, align 8, !dbg !953
  store i64 %a, i64* %a.dbg.spill3, align 8, !dbg !953
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill3, metadata !937, metadata !DIExpression()), !dbg !954
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !955
  %18 = load i8, i8* %17, align 8, !dbg !955, !range !582, !noundef !23
  %b = trunc i8 %18 to i1, !dbg !955
  %19 = zext i1 %b to i8, !dbg !955
  store i8 %19, i8* %b.dbg.spill4, align 1, !dbg !955
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill4, metadata !939, metadata !DIExpression()), !dbg !956
  %20 = call i1 @llvm.expect.i1(i1 %b, i1 false), !dbg !957
  %21 = zext i1 %20 to i8, !dbg !957
  store i8 %21, i8* %0, align 1, !dbg !957
  %22 = load i8, i8* %0, align 1, !dbg !957, !range !582, !noundef !23
  %_8 = trunc i8 %22 to i1, !dbg !957
  br label %bb1, !dbg !957

bb1:                                              ; preds = %bb5
  br i1 %_8, label %bb2, label %bb3, !dbg !957

bb3:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !958
  store i64 %a, i64* %23, align 8, !dbg !958
  %24 = bitcast { i64, i64 }* %2 to i64*, !dbg !958
  store i64 1, i64* %24, align 8, !dbg !958
  br label %bb4, !dbg !959

bb2:                                              ; preds = %bb1
  %25 = bitcast { i64, i64 }* %2 to i64*, !dbg !960
  store i64 0, i64* %25, align 8, !dbg !960
  br label %bb4, !dbg !959

bb4:                                              ; preds = %bb3, %bb2
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !961
  %27 = load i64, i64* %26, align 8, !dbg !961, !range !932, !noundef !23
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !961
  %29 = load i64, i64* %28, align 8, !dbg !961
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !961
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !961
  ret { i64, i64 } %31, !dbg !961
}

; core::ops::function::FnOnce::call_once{{vtable.shim}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h9b0e5466779f4103E"(i64** %_1) unnamed_addr #0 !dbg !962 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  %_2 = alloca {}, align 1
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !971, metadata !DIExpression()), !dbg !976
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !972, metadata !DIExpression()), !dbg !976
  %0 = load i64*, i64** %_1, align 8, !dbg !976, !nonnull !23, !noundef !23
; call core::ops::function::FnOnce::call_once
  %1 = call i32 @_ZN4core3ops8function6FnOnce9call_once17hd34dde841114cb1fE(i64* %0), !dbg !976
  br label %bb1, !dbg !976

bb1:                                              ; preds = %start
  ret i32 %1, !dbg !976
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h08e82f09d96cd0c3E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !977 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_arrays.rs:48:1: 66:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_arrays.rs:48:1: 66:2]"* %_1, metadata !983, metadata !DIExpression()), !dbg !987
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !984, metadata !DIExpression()), !dbg !987
; invoke array_tests::test_arrays::test_buffer::{{closure}}
  invoke void @"_ZN11array_tests11test_arrays11test_buffer28_$u7b$$u7b$closure$u7d$$u7d$17hac85ceb01446f1c5E"(%"[closure@src/test_arrays.rs:48:1: 66:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !987

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !987

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !987

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !987
  %7 = load i8*, i8** %6, align 8, !dbg !987
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !987
  %9 = load i32, i32* %8, align 8, !dbg !987
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !987
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !987
  resume { i8*, i32 } %11, !dbg !987

bb2:                                              ; preds = %bb1
  ret void, !dbg !987
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h164bb907954cf641E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !988 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_arrays.rs:32:1: 36:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_arrays.rs:32:1: 36:2]"* %_1, metadata !994, metadata !DIExpression()), !dbg !998
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !995, metadata !DIExpression()), !dbg !998
; invoke array_tests::test_arrays::test_sized_array_impls::{{closure}}
  invoke void @"_ZN11array_tests11test_arrays22test_sized_array_impls28_$u7b$$u7b$closure$u7d$$u7d$17h6b18364a9b840387E"(%"[closure@src/test_arrays.rs:32:1: 36:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !998

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !998

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !998

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !998
  %7 = load i8*, i8** %6, align 8, !dbg !998
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !998
  %9 = load i32, i32* %8, align 8, !dbg !998
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !998
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !998
  resume { i8*, i32 } %11, !dbg !998

bb2:                                              ; preds = %bb1
  ret void, !dbg !998
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h5854d64ef78d1e60E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !999 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_arrays.rs:70:1: 82:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_arrays.rs:70:1: 82:2]"* %_1, metadata !1005, metadata !DIExpression()), !dbg !1009
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1006, metadata !DIExpression()), !dbg !1009
; invoke array_tests::test_arrays::test_buffer2::{{closure}}
  invoke void @"_ZN11array_tests11test_arrays12test_buffer228_$u7b$$u7b$closure$u7d$$u7d$17he1c17185810d04e8E"(%"[closure@src/test_arrays.rs:70:1: 82:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1009

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1009

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1009

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1009
  %7 = load i8*, i8** %6, align 8, !dbg !1009
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1009
  %9 = load i32, i32* %8, align 8, !dbg !1009
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1009
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1009
  resume { i8*, i32 } %11, !dbg !1009

bb2:                                              ; preds = %bb1
  ret void, !dbg !1009
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h8ef4047210f3fd1aE(void ()* %_1) unnamed_addr #0 !dbg !1010 {
start:
  %_1.dbg.spill = alloca void ()*, align 8
  %_2 = alloca {}, align 1
  store void ()* %_1, void ()** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata void ()** %_1.dbg.spill, metadata !1012, metadata !DIExpression()), !dbg !1016
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1013, metadata !DIExpression()), !dbg !1016
  call void %_1(), !dbg !1016
  br label %bb1, !dbg !1016

bb1:                                              ; preds = %start
  ret void, !dbg !1016
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hb61f48e33c63604dE() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1017 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_arrays.rs:40:1: 44:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_arrays.rs:40:1: 44:2]"* %_1, metadata !1023, metadata !DIExpression()), !dbg !1027
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1024, metadata !DIExpression()), !dbg !1027
; invoke array_tests::test_arrays::test_global_incomplete_array::{{closure}}
  invoke void @"_ZN11array_tests11test_arrays28test_global_incomplete_array28_$u7b$$u7b$closure$u7d$$u7d$17h7f805434574bb4ecE"(%"[closure@src/test_arrays.rs:40:1: 44:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1027

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1027

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1027

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1027
  %7 = load i8*, i8** %6, align 8, !dbg !1027
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1027
  %9 = load i32, i32* %8, align 8, !dbg !1027
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1027
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1027
  resume { i8*, i32 } %11, !dbg !1027

bb2:                                              ; preds = %bb1
  ret void, !dbg !1027
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3ops8function6FnOnce9call_once17hd34dde841114cb1fE(i64* %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1028 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca i64*, align 8
  store i64* %0, i64** %_1, align 8
  call void @llvm.dbg.declare(metadata i64** %_1, metadata !1032, metadata !DIExpression()), !dbg !1034
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1033, metadata !DIExpression()), !dbg !1034
; invoke std::rt::lang_start::{{closure}}
  %2 = invoke i32 @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h1dbdd53c3505487dE"(i64** align 8 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1034

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1034

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1034

bb4:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %1 to i8**, !dbg !1034
  %9 = load i8*, i8** %8, align 8, !dbg !1034
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !1034
  %11 = load i32, i32* %10, align 8, !dbg !1034
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0, !dbg !1034
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1, !dbg !1034
  resume { i8*, i32 } %13, !dbg !1034

bb2:                                              ; preds = %bb1
  ret i32 %2, !dbg !1034
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hdda276033a1f8518E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1035 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_arrays.rs:86:1: 104:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_arrays.rs:86:1: 104:2]"* %_1, metadata !1041, metadata !DIExpression()), !dbg !1045
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1042, metadata !DIExpression()), !dbg !1045
; invoke array_tests::test_arrays::test_variable_arrays::{{closure}}
  invoke void @"_ZN11array_tests11test_arrays20test_variable_arrays28_$u7b$$u7b$closure$u7d$$u7d$17h36e6b28ca8e568caE"(%"[closure@src/test_arrays.rs:86:1: 104:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1045

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1045

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1045

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1045
  %7 = load i8*, i8** %6, align 8, !dbg !1045
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1045
  %9 = load i32, i32* %8, align 8, !dbg !1045
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1045
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1045
  resume { i8*, i32 } %11, !dbg !1045

bb2:                                              ; preds = %bb1
  ret void, !dbg !1045
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17heffa5958092a6e7dE() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1046 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_arrays.rs:108:1: 126:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_arrays.rs:108:1: 126:2]"* %_1, metadata !1052, metadata !DIExpression()), !dbg !1056
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1053, metadata !DIExpression()), !dbg !1056
; invoke array_tests::test_arrays::test_alloca_arrays::{{closure}}
  invoke void @"_ZN11array_tests11test_arrays18test_alloca_arrays28_$u7b$$u7b$closure$u7d$$u7d$17h4849e9a2f935d764E"(%"[closure@src/test_arrays.rs:108:1: 126:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1056

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1056

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1056

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1056
  %7 = load i8*, i8** %6, align 8, !dbg !1056
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1056
  %9 = load i32, i32* %8, align 8, !dbg !1056
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1056
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1056
  resume { i8*, i32 } %11, !dbg !1056

bb2:                                              ; preds = %bb1
  ret void, !dbg !1056
}

; core::ptr::drop_in_place<&i32>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$i32$GT$17h2e40cf13126c2945E"(i32** %_1) unnamed_addr #0 !dbg !1057 {
start:
  %_1.dbg.spill = alloca i32**, align 8
  store i32** %_1, i32*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32*** %_1.dbg.spill, metadata !1062, metadata !DIExpression()), !dbg !1063
  ret void, !dbg !1063
}

; core::ptr::drop_in_place<&u32>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17h6bea87460d2c111dE"(i32** %_1) unnamed_addr #0 !dbg !1064 {
start:
  %_1.dbg.spill = alloca i32**, align 8
  store i32** %_1, i32*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32*** %_1.dbg.spill, metadata !1069, metadata !DIExpression()), !dbg !1072
  ret void, !dbg !1072
}

; core::ptr::drop_in_place<&bool>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr29drop_in_place$LT$$RF$bool$GT$17h049972998a46580cE"(i8** %_1) unnamed_addr #0 !dbg !1073 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !1078, metadata !DIExpression()), !dbg !1081
  ret void, !dbg !1081
}

; core::ptr::drop_in_place<alloc::vec::Vec<i32>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17h035ad200dd80b9a9E"(%"alloc::vec::Vec<i32>"* %_1) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1082 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"alloc::vec::Vec<i32>"*, align 8
  store %"alloc::vec::Vec<i32>"* %_1, %"alloc::vec::Vec<i32>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"** %_1.dbg.spill, metadata !1106, metadata !DIExpression()), !dbg !1109
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h70905a73bf71b336E"(%"alloc::vec::Vec<i32>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !1109

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<i32>"* %_1 to { i32*, i64 }*, !dbg !1109
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<i32>>
  invoke void @"_ZN4core3ptr54drop_in_place$LT$alloc..raw_vec..RawVec$LT$i32$GT$$GT$17he1e32f1b987f78a7E"({ i32*, i64 }* %1) #16
          to label %bb1 unwind label %abort, !dbg !1109

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<i32>"* %_1 to { i32*, i64 }*, !dbg !1109
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<i32>>
  call void @"_ZN4core3ptr54drop_in_place$LT$alloc..raw_vec..RawVec$LT$i32$GT$$GT$17he1e32f1b987f78a7E"({ i32*, i64 }* %7), !dbg !1109
  br label %bb2, !dbg !1109

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !1109
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !1109
  unreachable, !dbg !1109

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1109
  %10 = load i8*, i8** %9, align 8, !dbg !1109
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1109
  %12 = load i32, i32* %11, align 8, !dbg !1109
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !1109
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !1109
  resume { i8*, i32 } %14, !dbg !1109

bb2:                                              ; preds = %bb4
  ret void, !dbg !1109
}

; core::ptr::drop_in_place<&[i32; 2]>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr49drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$2$u5d$$GT$17hdf2d5ba04d5e48c9E"([2 x i32]** %_1) unnamed_addr #0 !dbg !1110 {
start:
  %_1.dbg.spill = alloca [2 x i32]**, align 8
  store [2 x i32]** %_1, [2 x i32]*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [2 x i32]*** %_1.dbg.spill, metadata !1115, metadata !DIExpression()), !dbg !1118
  ret void, !dbg !1118
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<i32>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr54drop_in_place$LT$alloc..raw_vec..RawVec$LT$i32$GT$$GT$17he1e32f1b987f78a7E"({ i32*, i64 }* %_1) unnamed_addr #2 !dbg !1119 {
start:
  %_1.dbg.spill = alloca { i32*, i64 }*, align 8
  store { i32*, i64 }* %_1, { i32*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %_1.dbg.spill, metadata !1124, metadata !DIExpression()), !dbg !1127
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb421582263d5d1b2E"({ i32*, i64 }* align 8 %_1), !dbg !1127
  br label %bb1, !dbg !1127

bb1:                                              ; preds = %start
  ret void, !dbg !1127
}

; core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17h0df015e9a232d0deE"({ i64*, i64 }* %_1) unnamed_addr #2 !dbg !1128 {
start:
  %_1.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %_1, { i64*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %_1.dbg.spill, metadata !1138, metadata !DIExpression()), !dbg !1141
; call <alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop>::drop
  call void @"_ZN83_$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5f4f1e79ad2e8108E"({ i64*, i64 }* align 8 %_1), !dbg !1141
  br label %bb1, !dbg !1141

bb1:                                              ; preds = %start
  ret void, !dbg !1141
}

; core::ptr::drop_in_place<std::rt::lang_start<()>::{{closure}}>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h3168fd86cd542110E"(i64** %_1) unnamed_addr #0 !dbg !1142 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !1146, metadata !DIExpression()), !dbg !1149
  ret void, !dbg !1149
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17he9f80aa4e18ed60cE"(i8* %ptr) unnamed_addr #0 !dbg !1150 {
start:
  %ptr.dbg.spill2 = alloca i8*, align 8
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %_15 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_14 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_5 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1167, metadata !DIExpression()), !dbg !1168
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !1169, metadata !DIExpression()), !dbg !1179
  store i8* %ptr, i8** %self.dbg.spill, align 8, !dbg !1194
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1192, metadata !DIExpression()), !dbg !1195
  store i8* %ptr, i8** %self.dbg.spill1, align 8, !dbg !1195
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !1196, metadata !DIExpression()), !dbg !1203
  %3 = bitcast {}** %1 to i64*, !dbg !1205
  store i64 0, i64* %3, align 8, !dbg !1205
  %data_address = load {}*, {}** %1, align 8, !dbg !1205
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !1205
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1178, metadata !DIExpression()), !dbg !1179
  br label %bb4, !dbg !1205

bb4:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_15 to {}**, !dbg !1179
  store {}* %data_address, {}** %4, align 8, !dbg !1179
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_14 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !1179
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !1179
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_15 to i8*, !dbg !1179
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !1179
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_14 to i8**, !dbg !1179
  %other = load i8*, i8** %8, align 8, !dbg !1179
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !1179
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !1202, metadata !DIExpression()), !dbg !1203
  %9 = icmp eq i8* %ptr, %other, !dbg !1203
  %10 = zext i1 %9 to i8, !dbg !1203
  store i8 %10, i8* %0, align 1, !dbg !1203
  %11 = load i8, i8* %0, align 1, !dbg !1203, !range !582, !noundef !23
  %_3 = trunc i8 %11 to i1, !dbg !1203
  br label %bb5, !dbg !1203

bb5:                                              ; preds = %bb4
  %_2 = xor i1 %_3, true, !dbg !1213
  br i1 %_2, label %bb1, label %bb2, !dbg !1213

bb2:                                              ; preds = %bb5
  %12 = bitcast i8** %2 to {}**, !dbg !1214
  store {}* null, {}** %12, align 8, !dbg !1214
  br label %bb3, !dbg !1215

bb1:                                              ; preds = %bb5
  store i8* %ptr, i8** %ptr.dbg.spill2, align 8, !dbg !1216
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill2, metadata !1217, metadata !DIExpression()), !dbg !1220
  store i8* %ptr, i8** %_5, align 8, !dbg !1220
  %13 = load i8*, i8** %_5, align 8, !dbg !1222, !nonnull !23, !noundef !23
  store i8* %13, i8** %2, align 8, !dbg !1222
  br label %bb3, !dbg !1215

bb3:                                              ; preds = %bb2, %bb1
  %14 = load i8*, i8** %2, align 8, !dbg !1223
  ret i8* %14, !dbg !1223
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hf0c8e6a807a2d16cE"({ i64, i64 }* align 8 %self) unnamed_addr #0 !dbg !1224 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !1237, metadata !DIExpression()), !dbg !1240
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h728e80b1bfdf1381E"({ i64, i64 }* align 8 %self), !dbg !1241
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !1241
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !1241
  br label %bb1, !dbg !1241

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !1242
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1, !dbg !1242
  ret { i64, i64 } %4, !dbg !1242
}

; core::alloc::layout::Layout::from_size_valid_align
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17h553c75429d506699E(i64 %size, i64 %align) unnamed_addr #0 !dbg !1243 {
start:
  %n.dbg.spill = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %_11 = alloca { i64, i64 }, align 8
  %self1 = alloca i64, align 8
  %self = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %size, i64* %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !1265, metadata !DIExpression()), !dbg !1267
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !1266, metadata !DIExpression()), !dbg !1268
  call void @llvm.dbg.declare(metadata i64* %self, metadata !1269, metadata !DIExpression()), !dbg !1280
  call void @llvm.dbg.declare(metadata i64* %self1, metadata !1282, metadata !DIExpression()), !dbg !1289
  store i64 %align, i64* %self1, align 8, !dbg !1281
  %_15 = load i64, i64* %self1, align 8, !dbg !1289, !range !1290, !noundef !23
  store i64 %_15, i64* %n.dbg.spill, align 8, !dbg !1289
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1291, metadata !DIExpression()), !dbg !1306
  store i64 %_15, i64* %self, align 8, !dbg !1306
  %_8 = load i64, i64* %self, align 8, !dbg !1280
  %_7 = sub i64 %_8, 1, !dbg !1308
  %_5 = sub i64 9223372036854775807, %_7, !dbg !1309
  %_3 = icmp ugt i64 %size, %_5, !dbg !1310
  br i1 %_3, label %bb1, label %bb2, !dbg !1310

bb2:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %_11 to i64*, !dbg !1311
  store i64 %size, i64* %1, align 8, !dbg !1311
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !1311
  store i64 %align, i64* %2, align 8, !dbg !1311
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 0, !dbg !1312
  %4 = load i64, i64* %3, align 8, !dbg !1312
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !1312
  %6 = load i64, i64* %5, align 8, !dbg !1312, !range !1290, !noundef !23
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1312
  store i64 %4, i64* %7, align 8, !dbg !1312
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1312
  store i64 %6, i64* %8, align 8, !dbg !1312
  br label %bb3, !dbg !1313

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1314
  store i64 0, i64* %9, align 8, !dbg !1314
  br label %bb3, !dbg !1313

bb3:                                              ; preds = %bb2, %bb1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1313
  %11 = load i64, i64* %10, align 8, !dbg !1313
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1313
  %13 = load i64, i64* %12, align 8, !dbg !1313, !range !277, !noundef !23
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !1313
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !1313
  ret { i64, i64 } %15, !dbg !1313
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h68d132fe5c72c262E(i64 %n) unnamed_addr #0 !dbg !1315 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill5 = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill3 = alloca %"core::alloc::layout::LayoutError", align 1
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %n.dbg.spill = alloca i64, align 8
  %self1 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1319, metadata !DIExpression()), !dbg !1344
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !1345, metadata !DIExpression()), !dbg !1390
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !1392, metadata !DIExpression()), !dbg !1403
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %err.dbg.spill, metadata !1399, metadata !DIExpression()), !dbg !1403
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill, metadata !1322, metadata !DIExpression()), !dbg !1404
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill2, metadata !1405, metadata !DIExpression()), !dbg !1417
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !1387, metadata !DIExpression()), !dbg !1419
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill3, metadata !1412, metadata !DIExpression()), !dbg !1420
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h5275f3d8f38f5cedE"(i64 4, i64 %n), !dbg !1391
  store { i64, i64 } %2, { i64, i64 }* %self1, align 8, !dbg !1391
  br label %bb1, !dbg !1391

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %self1 to i64*, !dbg !1403
  %_15 = load i64, i64* %3, align 8, !dbg !1403, !range !932, !noundef !23
  switch i64 %_15, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !1403

bb9:                                              ; preds = %bb1
  unreachable, !dbg !1403

bb8:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %self to i64*, !dbg !1403
  store i64 1, i64* %4, align 8, !dbg !1403
  br label %bb11, !dbg !1403

bb10:                                             ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !1403
  %v = load i64, i64* %5, align 8, !dbg !1403
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !1403
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !1400, metadata !DIExpression()), !dbg !1421
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1421
  store i64 %v, i64* %6, align 8, !dbg !1421
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !1421
  store i64 0, i64* %7, align 8, !dbg !1421
  br label %bb11, !dbg !1403

bb11:                                             ; preds = %bb8, %bb10
  %8 = bitcast { i64, i64 }* %self to i64*, !dbg !1390
  %_18 = load i64, i64* %8, align 8, !dbg !1390, !range !932, !noundef !23
  switch i64 %_18, label %bb13 [
    i64 0, label %bb14
    i64 1, label %bb12
  ], !dbg !1390

bb13:                                             ; preds = %bb11
  unreachable, !dbg !1390

bb14:                                             ; preds = %bb11
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1390
  %v4 = load i64, i64* %9, align 8, !dbg !1390
  store i64 %v4, i64* %v.dbg.spill5, align 8, !dbg !1390
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill5, metadata !1384, metadata !DIExpression()), !dbg !1422
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !1422
  store i64 %v4, i64* %10, align 8, !dbg !1422
  %11 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1422
  store i64 0, i64* %11, align 8, !dbg !1422
  br label %bb2, !dbg !1390

bb12:                                             ; preds = %bb11
  %12 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1419
  store i64 1, i64* %12, align 8, !dbg !1419
  br label %bb2, !dbg !1390

bb2:                                              ; preds = %bb14, %bb12
  %13 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1391
  %_9 = load i64, i64* %13, align 8, !dbg !1391, !range !932, !noundef !23
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !1391

bb4:                                              ; preds = %bb2
  unreachable, !dbg !1391

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !1391
  %val = load i64, i64* %14, align 8, !dbg !1391
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !1391
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !1342, metadata !DIExpression()), !dbg !1423
  store i64 %val, i64* %array_size.dbg.spill, align 8, !dbg !1423
  call void @llvm.dbg.declare(metadata i64* %array_size.dbg.spill, metadata !1320, metadata !DIExpression()), !dbg !1424
  store i64 4, i64* %align.dbg.spill, align 8, !dbg !1425
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !1435, metadata !DIExpression()), !dbg !1449
  store i64 4, i64* %0, align 8, !dbg !1449
  %_14 = load i64, i64* %0, align 8, !dbg !1449, !range !1290, !noundef !23
  br label %bb15, !dbg !1449

bb5:                                              ; preds = %bb2
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h1bf1f66310464536E"(), !dbg !1420
  br label %bb16, !dbg !1420

bb16:                                             ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1420
  store i64 0, i64* %15, align 8, !dbg !1420
  br label %bb7, !dbg !1451

bb7:                                              ; preds = %bb6, %bb16
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !1451
  %17 = load i64, i64* %16, align 8, !dbg !1451
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1451
  %19 = load i64, i64* %18, align 8, !dbg !1451, !range !277, !noundef !23
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !1451
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !1451
  ret { i64, i64 } %21, !dbg !1451

bb15:                                             ; preds = %bb3
; call core::alloc::layout::Layout::from_size_valid_align
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17h553c75429d506699E(i64 %val, i64 %_14), !dbg !1452
  store { i64, i64 } %22, { i64, i64 }* %1, align 8, !dbg !1452
  br label %bb6, !dbg !1452

bb6:                                              ; preds = %bb15
  br label %bb7, !dbg !1451
}

; core::array::<impl core::fmt::Debug for [T; N]>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17hf61e17d33cd8cebbE"([2 x i32]* align 4 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !1453 {
start:
  %slice.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %self.dbg.spill4 = alloca { [0 x i32]*, i64 }, align 8
  %self.dbg.spill3 = alloca [2 x i32]*, align 8
  %self.dbg.spill2 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill1 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca [2 x i32]*, align 8
  %_5 = alloca { [0 x i32]*, i64 }, align 8
  store [2 x i32]* %self, [2 x i32]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [2 x i32]** %self.dbg.spill, metadata !1460, metadata !DIExpression()), !dbg !1462
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !1461, metadata !DIExpression()), !dbg !1463
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill, metadata !1464, metadata !DIExpression()), !dbg !1474
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill1, metadata !1476, metadata !DIExpression()), !dbg !1486
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %self.dbg.spill2, metadata !1488, metadata !DIExpression()), !dbg !1496
  store [2 x i32]* %self, [2 x i32]** %self.dbg.spill3, align 8, !dbg !1475
  call void @llvm.dbg.declare(metadata [2 x i32]** %self.dbg.spill3, metadata !1471, metadata !DIExpression()), !dbg !1474
  %_11.0 = bitcast [2 x i32]* %self to [0 x i32]*, !dbg !1474
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !1474
  store [0 x i32]* %_11.0, [0 x i32]** %0, align 8, !dbg !1474
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !1474
  store i64 2, i64* %1, align 8, !dbg !1474
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill4, metadata !1485, metadata !DIExpression()), !dbg !1486
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !1486
  store [0 x i32]* %_11.0, [0 x i32]** %2, align 8, !dbg !1486
  %3 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !1486
  store i64 2, i64* %3, align 8, !dbg !1486
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %slice.dbg.spill, metadata !1495, metadata !DIExpression()), !dbg !1496
  %4 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %_5, i32 0, i32 0, !dbg !1498
  store [0 x i32]* %_11.0, [0 x i32]** %4, align 8, !dbg !1498
  %5 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %_5, i32 0, i32 1, !dbg !1498
  store i64 2, i64* %5, align 8, !dbg !1498
; call <&T as core::fmt::Debug>::fmt
  %6 = call zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7f6552a0aa4df737E"({ [0 x i32]*, i64 }* align 8 %_5, %"core::fmt::Formatter"* align 8 %f), !dbg !1499
  br label %bb1, !dbg !1499

bb1:                                              ; preds = %start
  ret i1 %6, !dbg !1500
}

; core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h3b0eace8b98ef178E"([2 x i32]* align 4 %self, [2 x i32]* align 4 %other) unnamed_addr #0 !dbg !1501 {
start:
  %other.dbg.spill = alloca [2 x i32]*, align 8
  %self.dbg.spill = alloca [2 x i32]*, align 8
  store [2 x i32]* %self, [2 x i32]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [2 x i32]** %self.dbg.spill, metadata !1508, metadata !DIExpression()), !dbg !1513
  store [2 x i32]* %other, [2 x i32]** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [2 x i32]** %other.dbg.spill, metadata !1509, metadata !DIExpression()), !dbg !1514
; call <T as core::array::equality::SpecArrayEq<U,_>>::spec_eq
  %0 = call zeroext i1 @"_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h1bfe710c6ea46e74E"([2 x i32]* align 4 %self, [2 x i32]* align 4 %other), !dbg !1515
  br label %bb1, !dbg !1515

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !1516
}

; core::clone::impls::<impl core::clone::Clone for i32>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i32$GT$5clone17h63aa2151c872ffb9E"(i32* align 4 %self) unnamed_addr #0 !dbg !1517 {
start:
  %self.dbg.spill = alloca i32*, align 8
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !1525, metadata !DIExpression()), !dbg !1526
  %0 = load i32, i32* %self, align 4, !dbg !1527
  ret i32 %0, !dbg !1528
}

; core::clone::impls::<impl core::clone::Clone for usize>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h53131a1e2f102773E"(i64* align 8 %self) unnamed_addr #0 !dbg !1529 {
start:
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !1534, metadata !DIExpression()), !dbg !1535
  %0 = load i64, i64* %self, align 8, !dbg !1536
  ret i64 %0, !dbg !1537
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h11aa4d5bc39de937E"([0 x i32]* align 4 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1538 {
start:
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i32]* %self.0, [0 x i32]** %0, align 8
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !1548, metadata !DIExpression()), !dbg !1549
  %2 = bitcast [0 x i32]* %self.0 to i32*, !dbg !1550
  ret i32* %2, !dbg !1551
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h219c650c35cacae1E"([0 x i32]* align 4 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1552 {
start:
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i32]* %self.0, [0 x i32]** %0, align 8
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !1561, metadata !DIExpression()), !dbg !1562
  %2 = bitcast [0 x i32]* %self.0 to i32*, !dbg !1563
  ret i32* %2, !dbg !1564
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal [4 x [5 x i32]]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h57ea2a9e05028a3eE"([0 x [4 x [5 x i32]]]* align 4 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1565 {
start:
  %self.dbg.spill = alloca { [0 x [4 x [5 x i32]]]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x [4 x [5 x i32]]]*, i64 }, { [0 x [4 x [5 x i32]]]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x [4 x [5 x i32]]]* %self.0, [0 x [4 x [5 x i32]]]** %0, align 8
  %1 = getelementptr inbounds { [0 x [4 x [5 x i32]]]*, i64 }, { [0 x [4 x [5 x i32]]]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x [4 x [5 x i32]]]*, i64 }* %self.dbg.spill, metadata !1579, metadata !DIExpression()), !dbg !1582
  %2 = bitcast [0 x [4 x [5 x i32]]]* %self.0 to [4 x [5 x i32]]*, !dbg !1583
  ret [4 x [5 x i32]]* %2, !dbg !1584
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hac7faaeaafda87e0E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1585 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1594, metadata !DIExpression()), !dbg !1597
  %2 = bitcast [0 x i8]* %self.0 to i8*, !dbg !1598
  ret i8* %2, !dbg !1599
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal [5 x i32]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hd2020a2d1ced27d1E"([0 x [5 x i32]]* align 4 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1600 {
start:
  %self.dbg.spill = alloca { [0 x [5 x i32]]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x [5 x i32]]*, i64 }, { [0 x [5 x i32]]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x [5 x i32]]* %self.0, [0 x [5 x i32]]** %0, align 8
  %1 = getelementptr inbounds { [0 x [5 x i32]]*, i64 }, { [0 x [5 x i32]]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x [5 x i32]]*, i64 }* %self.dbg.spill, metadata !1610, metadata !DIExpression()), !dbg !1613
  %2 = bitcast [0 x [5 x i32]]* %self.0 to [5 x i32]*, !dbg !1614
  ret [5 x i32]* %2, !dbg !1615
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h1eda4966a3efb19dE"([0 x i32]* align 4 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1616 {
start:
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i32]* %self.0, [0 x i32]** %0, align 8
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !1620, metadata !DIExpression()), !dbg !1621
  %2 = bitcast [0 x i32]* %self.0 to i32*, !dbg !1622
  ret i32* %2, !dbg !1623
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32*, i32* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17he358f5b01646211cE"([0 x i32]* align 4 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !1624 {
start:
  %ptr.dbg.spill11 = alloca i32*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill10 = alloca i64, align 8
  %self.dbg.spill9 = alloca i8*, align 8
  %count.dbg.spill8 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca i32*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca i32*, align 8
  %1 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %2 = alloca {}*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca i32*, align 8
  %ptr.dbg.spill = alloca i32*, align 8
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %slice.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %_31 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_18 = alloca i32*, align 8
  %end = alloca i32*, align 8
  %3 = alloca { i32*, i32* }, align 8
  %4 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i32]* %slice.0, [0 x i32]** %4, align 8
  %5 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %slice.dbg.spill, metadata !1627, metadata !DIExpression()), !dbg !1632
  call void @llvm.dbg.declare(metadata i32** %end, metadata !1630, metadata !DIExpression()), !dbg !1633
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !1634, metadata !DIExpression()), !dbg !1641
  %6 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !1657
  store [0 x i32]* %slice.0, [0 x i32]** %6, align 8, !dbg !1657
  %7 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !1657
  store i64 %slice.1, i64* %7, align 8, !dbg !1657
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !1658, metadata !DIExpression()), !dbg !1662
  %ptr = bitcast [0 x i32]* %slice.0 to i32*, !dbg !1662
  store i32* %ptr, i32** %ptr.dbg.spill, align 8, !dbg !1662
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill, metadata !1628, metadata !DIExpression()), !dbg !1663
  store i32* %ptr, i32** %self.dbg.spill1, align 8, !dbg !1656
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill1, metadata !1654, metadata !DIExpression()), !dbg !1664
  %self = bitcast i32* %ptr to i8*, !dbg !1664
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !1664
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !1665, metadata !DIExpression()), !dbg !1672
  %8 = bitcast {}** %2 to i64*, !dbg !1674
  store i64 0, i64* %8, align 8, !dbg !1674
  %data_address = load {}*, {}** %2, align 8, !dbg !1674
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !1674
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1640, metadata !DIExpression()), !dbg !1641
  br label %bb5, !dbg !1674

bb5:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to {}**, !dbg !1641
  store {}* %data_address, {}** %9, align 8, !dbg !1641
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !1641
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !1641
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to i8*, !dbg !1641
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !1641
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to i8**, !dbg !1641
  %other = load i8*, i8** %13, align 8, !dbg !1641
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !1641
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !1671, metadata !DIExpression()), !dbg !1672
  %14 = icmp eq i8* %self, %other, !dbg !1672
  %15 = zext i1 %14 to i8, !dbg !1672
  store i8 %15, i8* %1, align 1, !dbg !1672
  %16 = load i8, i8* %1, align 1, !dbg !1672, !range !582, !noundef !23
  %_6 = trunc i8 %16 to i1, !dbg !1672
  br label %bb6, !dbg !1672

bb6:                                              ; preds = %bb5
  %_5 = xor i1 %_6, true, !dbg !1682
  call void @llvm.assume(i1 %_5), !dbg !1683
  br label %bb1, !dbg !1683

bb1:                                              ; preds = %bb6
  br i1 false, label %bb2, label %bb3, !dbg !1684

bb2:                                              ; preds = %bb1
  %self6 = bitcast i32* %ptr to i8*, !dbg !1685
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !1685
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !1686, metadata !DIExpression()), !dbg !1693
  store i64 %slice.1, i64* %count.dbg.spill8, align 8, !dbg !1694
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill8, metadata !1692, metadata !DIExpression()), !dbg !1693
  store i8* %self6, i8** %self.dbg.spill9, align 8, !dbg !1693
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill9, metadata !1695, metadata !DIExpression()), !dbg !1702
  store i64 %slice.1, i64* %count.dbg.spill10, align 8, !dbg !1693
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill10, metadata !1701, metadata !DIExpression()), !dbg !1702
  %17 = getelementptr i8, i8* %self6, i64 %slice.1, !dbg !1702
  store i8* %17, i8** %0, align 8, !dbg !1702
  %_10 = load i8*, i8** %0, align 8, !dbg !1702
  br label %bb7, !dbg !1702

bb3:                                              ; preds = %bb1
  store i32* %ptr, i32** %self.dbg.spill3, align 8, !dbg !1704
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill3, metadata !1705, metadata !DIExpression()), !dbg !1712
  store i64 %slice.1, i64* %count.dbg.spill, align 8, !dbg !1713
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !1711, metadata !DIExpression()), !dbg !1712
  store i32* %ptr, i32** %self.dbg.spill4, align 8, !dbg !1712
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill4, metadata !1714, metadata !DIExpression()), !dbg !1721
  store i64 %slice.1, i64* %count.dbg.spill5, align 8, !dbg !1712
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !1720, metadata !DIExpression()), !dbg !1721
  %18 = getelementptr inbounds i32, i32* %ptr, i64 %slice.1, !dbg !1721
  store i32* %18, i32** %end, align 8, !dbg !1721
  br label %bb8, !dbg !1721

bb8:                                              ; preds = %bb3
  br label %bb4, !dbg !1723

bb4:                                              ; preds = %bb7, %bb8
  store i32* %ptr, i32** %ptr.dbg.spill11, align 8, !dbg !1724
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill11, metadata !1725, metadata !DIExpression()), !dbg !1731
  store i32* %ptr, i32** %_18, align 8, !dbg !1731
  %_21 = load i32*, i32** %end, align 8, !dbg !1733
  %19 = bitcast { i32*, i32* }* %3 to i32**, !dbg !1734
  %20 = load i32*, i32** %_18, align 8, !dbg !1734, !nonnull !23, !noundef !23
  store i32* %20, i32** %19, align 8, !dbg !1734
  %21 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %3, i32 0, i32 1, !dbg !1734
  store i32* %_21, i32** %21, align 8, !dbg !1734
  %22 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %3, i32 0, i32 0, !dbg !1735
  %23 = load i32*, i32** %22, align 8, !dbg !1735, !nonnull !23, !noundef !23
  %24 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %3, i32 0, i32 1, !dbg !1735
  %25 = load i32*, i32** %24, align 8, !dbg !1735
  %26 = insertvalue { i32*, i32* } undef, i32* %23, 0, !dbg !1735
  %27 = insertvalue { i32*, i32* } %26, i32* %25, 1, !dbg !1735
  ret { i32*, i32* } %27, !dbg !1735

bb7:                                              ; preds = %bb2
  %28 = bitcast i8* %_10 to i32*, !dbg !1685
  store i32* %28, i32** %end, align 8, !dbg !1685
  br label %bb4, !dbg !1723
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h40accc27149908dbE"(i64 %0, i64 %1) unnamed_addr #0 !dbg !1736 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca {}, align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !1772, metadata !DIExpression()), !dbg !1781
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %op.dbg.spill, metadata !1773, metadata !DIExpression()), !dbg !1782
  call void @llvm.dbg.declare(metadata {}* %t.dbg.spill, metadata !1774, metadata !DIExpression()), !dbg !1783
  store i8 1, i8* %_11, align 1, !dbg !1784
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1784
  %6 = load i64, i64* %5, align 8, !dbg !1784, !range !1785, !noundef !23
  %7 = sub i64 %6, -9223372036854775807, !dbg !1784
  %8 = icmp eq i64 %7, 0, !dbg !1784
  %_3 = select i1 %8, i64 0, i64 1, !dbg !1784
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !1786

bb2:                                              ; preds = %start
  unreachable, !dbg !1784

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %2 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !1787
  %10 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"* %9 to {}*, !dbg !1787
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !1787
  store i64 -9223372036854775807, i64* %11, align 8, !dbg !1787
  br label %bb7, !dbg !1788

bb1:                                              ; preds = %start
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !1789
  %e.0 = load i64, i64* %12, align 8, !dbg !1789
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1789
  %e.1 = load i64, i64* %13, align 8, !dbg !1789, !range !277, !noundef !23
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !1789
  store i64 %e.0, i64* %14, align 8, !dbg !1789
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !1789
  store i64 %e.1, i64* %15, align 8, !dbg !1789
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !1776, metadata !DIExpression()), !dbg !1790
  store i8 0, i8* %_11, align 1, !dbg !1791
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !1791
  store i64 %e.0, i64* %16, align 8, !dbg !1791
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !1791
  store i64 %e.1, i64* %17, align 8, !dbg !1791
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !1791
  %19 = load i64, i64* %18, align 8, !dbg !1791
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !1791
  %21 = load i64, i64* %20, align 8, !dbg !1791, !range !277, !noundef !23
; call alloc::raw_vec::handle_reserve::{{closure}}
  %22 = call { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hebfde7fac505f1d2E"(i64 %19, i64 %21), !dbg !1791
  %_7.0 = extractvalue { i64, i64 } %22, 0, !dbg !1791
  %_7.1 = extractvalue { i64, i64 } %22, 1, !dbg !1791
  br label %bb4, !dbg !1791

bb4:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !1792
  store i64 %_7.0, i64* %23, align 8, !dbg !1792
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !1792
  store i64 %_7.1, i64* %24, align 8, !dbg !1792
  br label %bb7, !dbg !1793

bb7:                                              ; preds = %bb3, %bb4
  %25 = load i8, i8* %_11, align 1, !dbg !1794, !range !582, !noundef !23
  %26 = trunc i8 %25 to i1, !dbg !1794
  br i1 %26, label %bb6, label %bb5, !dbg !1794

bb5:                                              ; preds = %bb6, %bb7
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !1795
  %28 = load i64, i64* %27, align 8, !dbg !1795
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !1795
  %30 = load i64, i64* %29, align 8, !dbg !1795, !range !1785, !noundef !23
  %31 = insertvalue { i64, i64 } undef, i64 %28, 0, !dbg !1795
  %32 = insertvalue { i64, i64 } %31, i64 %30, 1, !dbg !1795
  ret { i64, i64 } %32, !dbg !1795

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !1794
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h5f0e4ab3a95b708bE"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !1796 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::layout::LayoutError" }, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !1816, metadata !DIExpression()), !dbg !1824
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]"* %op.dbg.spill, metadata !1817, metadata !DIExpression()), !dbg !1825
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !1820, metadata !DIExpression()), !dbg !1826
  store i8 1, i8* %_11, align 1, !dbg !1827
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1827
  %6 = load i64, i64* %5, align 8, !dbg !1827, !range !277, !noundef !23
  %7 = icmp eq i64 %6, 0, !dbg !1827
  %_3 = select i1 %7, i64 1, i64 0, !dbg !1827
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !1828

bb2:                                              ; preds = %start
  unreachable, !dbg !1827

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !1829
  %t.0 = load i64, i64* %8, align 8, !dbg !1829
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1829
  %t.1 = load i64, i64* %9, align 8, !dbg !1829, !range !1290, !noundef !23
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !1829
  store i64 %t.0, i64* %10, align 8, !dbg !1829
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !1829
  store i64 %t.1, i64* %11, align 8, !dbg !1829
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !1818, metadata !DIExpression()), !dbg !1830
  %12 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !1831
  %13 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %12, i32 0, i32 1, !dbg !1831
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !1831
  store i64 %t.0, i64* %14, align 8, !dbg !1831
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !1831
  store i64 %t.1, i64* %15, align 8, !dbg !1831
  %16 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !1831
  store i64 0, i64* %16, align 8, !dbg !1831
  br label %bb7, !dbg !1832

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !1833
  %17 = bitcast { %"core::alloc::layout::LayoutError" }* %_9 to %"core::alloc::layout::LayoutError"*, !dbg !1833
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h85ee4a4416ba06c4E"(), !dbg !1833
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !1833
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !1833
  br label %bb4, !dbg !1833

bb4:                                              ; preds = %bb1
  %19 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !1834
  %20 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %19, i32 0, i32 1, !dbg !1834
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !1834
  store i64 %_7.0, i64* %21, align 8, !dbg !1834
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !1834
  store i64 %_7.1, i64* %22, align 8, !dbg !1834
  %23 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !1834
  store i64 1, i64* %23, align 8, !dbg !1834
  br label %bb7, !dbg !1835

bb7:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !1836, !range !582, !noundef !23
  %25 = trunc i8 %24 to i1, !dbg !1836
  br i1 %25, label %bb6, label %bb5, !dbg !1836

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !1837

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !1836
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc3512111e253ca43E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i8* %1, i64 %2, i64* align 8 %op) unnamed_addr #0 !dbg !1838 {
start:
  %t.dbg.spill = alloca { i8*, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %op.dbg.spill = alloca i64*, align 8
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::AllocError" }, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !1884, metadata !DIExpression()), !dbg !1893
  store i64* %op, i64** %op.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %op.dbg.spill, metadata !1885, metadata !DIExpression()), !dbg !1894
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !1888, metadata !DIExpression()), !dbg !1895
  store i8 1, i8* %_11, align 1, !dbg !1896
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !1896
  %6 = load {}*, {}** %5, align 8, !dbg !1896
  %7 = icmp eq {}* %6, null, !dbg !1896
  %_3 = select i1 %7, i64 1, i64 0, !dbg !1896
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !1897

bb2:                                              ; preds = %start
  unreachable, !dbg !1896

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0, !dbg !1898
  %t.0 = load i8*, i8** %8, align 8, !dbg !1898, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !1898
  %t.1 = load i64, i64* %9, align 8, !dbg !1898
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !1898
  store i8* %t.0, i8** %10, align 8, !dbg !1898
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !1898
  store i64 %t.1, i64* %11, align 8, !dbg !1898
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %t.dbg.spill, metadata !1886, metadata !DIExpression()), !dbg !1899
  %12 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*, !dbg !1900
  %13 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %12, i32 0, i32 1, !dbg !1900
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 0, !dbg !1900
  store i8* %t.0, i8** %14, align 8, !dbg !1900
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 1, !dbg !1900
  store i64 %t.1, i64* %15, align 8, !dbg !1900
  %16 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !1900
  store i64 0, i64* %16, align 8, !dbg !1900
  br label %bb7, !dbg !1901

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !1902
  %17 = bitcast { %"core::alloc::AllocError" }* %_9 to %"core::alloc::AllocError"*, !dbg !1902
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17haf09d5e4bec9f614E"(i64* align 8 %op), !dbg !1902
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !1902
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !1902
  br label %bb4, !dbg !1902

bb4:                                              ; preds = %bb1
  %19 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !1903
  %20 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %19, i32 0, i32 1, !dbg !1903
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !1903
  store i64 %_7.0, i64* %21, align 8, !dbg !1903
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !1903
  store i64 %_7.1, i64* %22, align 8, !dbg !1903
  %23 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !1903
  store i64 1, i64* %23, align 8, !dbg !1903
  br label %bb7, !dbg !1904

bb7:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !1905, !range !582, !noundef !23
  %25 = trunc i8 %24 to i1, !dbg !1905
  br i1 %25, label %bb6, label %bb5, !dbg !1905

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !1906

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !1905
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define internal void @_ZN4core9panicking13assert_failed17h2667433552fdca02E(i8 %kind, i8* align 1 %0, i8* align 1 %1, %"core::option::Option<core::fmt::Arguments>"* %args, %"core::panic::location::Location"* align 8 %2) unnamed_addr #3 !dbg !1907 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_13 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca i8*, align 8
  %left = alloca i8*, align 8
  store i8* %0, i8** %left, align 8
  store i8* %1, i8** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !1925, metadata !DIExpression()), !dbg !1931
  call void @llvm.dbg.declare(metadata i8** %left, metadata !1926, metadata !DIExpression()), !dbg !1932
  call void @llvm.dbg.declare(metadata i8** %right, metadata !1927, metadata !DIExpression()), !dbg !1933
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::fmt::Arguments>"* %args, metadata !1928, metadata !DIExpression()), !dbg !1934
  %_7.0 = bitcast i8** %left to {}*, !dbg !1935
  %_10.0 = bitcast i8** %right to {}*, !dbg !1936
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_13 to i8*, !dbg !1937
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*, !dbg !1937
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !1937
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8 %kind, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.2 to [3 x i64]*), {}* align 1 %_10.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.2 to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* %_13, %"core::panic::location::Location"* align 8 %2) #15, !dbg !1938
  unreachable, !dbg !1938
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define internal void @_ZN4core9panicking13assert_failed17h5179245ed6beeeebE(i8 %kind, i32* align 4 %0, i32* align 4 %1, %"core::option::Option<core::fmt::Arguments>"* %args, %"core::panic::location::Location"* align 8 %2) unnamed_addr #3 !dbg !1939 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_13 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca i32*, align 8
  %left = alloca i32*, align 8
  store i32* %0, i32** %left, align 8
  store i32* %1, i32** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !1943, metadata !DIExpression()), !dbg !1949
  call void @llvm.dbg.declare(metadata i32** %left, metadata !1944, metadata !DIExpression()), !dbg !1950
  call void @llvm.dbg.declare(metadata i32** %right, metadata !1945, metadata !DIExpression()), !dbg !1951
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::fmt::Arguments>"* %args, metadata !1946, metadata !DIExpression()), !dbg !1952
  %_7.0 = bitcast i32** %left to {}*, !dbg !1953
  %_10.0 = bitcast i32** %right to {}*, !dbg !1954
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_13 to i8*, !dbg !1955
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*, !dbg !1955
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !1955
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8 %kind, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.1 to [3 x i64]*), {}* align 1 %_10.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.1 to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* %_13, %"core::panic::location::Location"* align 8 %2) #15, !dbg !1956
  unreachable, !dbg !1956
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define internal void @_ZN4core9panicking13assert_failed17h7946be7cdd9dfe58E(i8 %kind, i32* align 4 %0, i32* align 4 %1, %"core::option::Option<core::fmt::Arguments>"* %args, %"core::panic::location::Location"* align 8 %2) unnamed_addr #3 !dbg !1957 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_13 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca i32*, align 8
  %left = alloca i32*, align 8
  store i32* %0, i32** %left, align 8
  store i32* %1, i32** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !1961, metadata !DIExpression()), !dbg !1967
  call void @llvm.dbg.declare(metadata i32** %left, metadata !1962, metadata !DIExpression()), !dbg !1968
  call void @llvm.dbg.declare(metadata i32** %right, metadata !1963, metadata !DIExpression()), !dbg !1969
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::fmt::Arguments>"* %args, metadata !1964, metadata !DIExpression()), !dbg !1970
  %_7.0 = bitcast i32** %left to {}*, !dbg !1971
  %_10.0 = bitcast i32** %right to {}*, !dbg !1972
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_13 to i8*, !dbg !1973
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*, !dbg !1973
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !1973
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8 %kind, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.3 to [3 x i64]*), {}* align 1 %_10.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.3 to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* %_13, %"core::panic::location::Location"* align 8 %2) #15, !dbg !1974
  unreachable, !dbg !1974
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define internal void @_ZN4core9panicking13assert_failed17hb55f4f60b0e09d92E(i8 %kind, [2 x i32]* align 4 %0, [2 x i32]* align 4 %1, %"core::option::Option<core::fmt::Arguments>"* %args, %"core::panic::location::Location"* align 8 %2) unnamed_addr #3 !dbg !1975 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_13 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca [2 x i32]*, align 8
  %left = alloca [2 x i32]*, align 8
  store [2 x i32]* %0, [2 x i32]** %left, align 8
  store [2 x i32]* %1, [2 x i32]** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !1979, metadata !DIExpression()), !dbg !1985
  call void @llvm.dbg.declare(metadata [2 x i32]** %left, metadata !1980, metadata !DIExpression()), !dbg !1986
  call void @llvm.dbg.declare(metadata [2 x i32]** %right, metadata !1981, metadata !DIExpression()), !dbg !1987
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::fmt::Arguments>"* %args, metadata !1982, metadata !DIExpression()), !dbg !1988
  %_7.0 = bitcast [2 x i32]** %left to {}*, !dbg !1989
  %_10.0 = bitcast [2 x i32]** %right to {}*, !dbg !1990
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_13 to i8*, !dbg !1991
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*, !dbg !1991
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !1991
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8 %kind, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.4 to [3 x i64]*), {}* align 1 %_10.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.4 to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* %_13, %"core::panic::location::Location"* align 8 %2) #15, !dbg !1992
  unreachable, !dbg !1992
}

; test::assert_test_result
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4test18assert_test_result17he193e499d4e0e61dE() unnamed_addr #2 !dbg !1993 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (i32*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca i32*, align 8
  %x.dbg.spill = alloca i32*, align 8
  %right_val.dbg.spill = alloca i32*, align 8
  %left_val.dbg.spill = alloca i32*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %result.dbg.spill = alloca {}, align 1
  %_30 = alloca { i8*, i64* }, align 8
  %_29 = alloca [1 x { i8*, i64* }], align 8
  %_22 = alloca %"core::fmt::Arguments", align 8
  %_21 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %_5 = alloca { i32*, i32* }, align 8
  %self = alloca i8, align 1
  %code = alloca i32, align 4
  call void @llvm.dbg.declare(metadata {}* %result.dbg.spill, metadata !1997, metadata !DIExpression()), !dbg !2008
  call void @llvm.dbg.declare(metadata i32* %code, metadata !1998, metadata !DIExpression()), !dbg !2009
  call void @llvm.dbg.declare(metadata i8* %self, metadata !2010, metadata !DIExpression()), !dbg !2014
; call <() as std::process::Termination>::report
  %2 = call i8 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17hc82e88fc6d5dfe88E"(), !dbg !2015
  store i8 %2, i8* %self, align 1, !dbg !2015
  br label %bb1, !dbg !2015

bb1:                                              ; preds = %start
  store i8* %self, i8** %self.dbg.spill, align 8, !dbg !2014
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2016, metadata !DIExpression()), !dbg !2020
  %_36 = load i8, i8* %self, align 1, !dbg !2020
  %3 = zext i8 %_36 to i32, !dbg !2020
  store i32 %3, i32* %code, align 4, !dbg !2020
  %4 = bitcast { i32*, i32* }* %_5 to i32**, !dbg !2022
  store i32* %code, i32** %4, align 8, !dbg !2022
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_5, i32 0, i32 1, !dbg !2022
  store i32* bitcast (<{ [4 x i8] }>* @alloc115 to i32*), i32** %5, align 8, !dbg !2022
  %6 = bitcast { i32*, i32* }* %_5 to i32**, !dbg !2022
  %left_val = load i32*, i32** %6, align 8, !dbg !2022, !nonnull !23, !align !446, !noundef !23
  store i32* %left_val, i32** %left_val.dbg.spill, align 8, !dbg !2022
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill, metadata !2000, metadata !DIExpression()), !dbg !2023
  %7 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_5, i32 0, i32 1, !dbg !2022
  %right_val = load i32*, i32** %7, align 8, !dbg !2022, !nonnull !23, !align !446, !noundef !23
  store i32* %right_val, i32** %right_val.dbg.spill, align 8, !dbg !2022
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill, metadata !2004, metadata !DIExpression()), !dbg !2023
  %_12 = load i32, i32* %left_val, align 4, !dbg !2023
  %_13 = load i32, i32* %right_val, align 4, !dbg !2023
  %_11 = icmp eq i32 %_12, %_13, !dbg !2023
  %_10 = xor i1 %_11, true, !dbg !2023
  br i1 %_10, label %bb2, label %bb4, !dbg !2023

bb4:                                              ; preds = %bb1
  ret void, !dbg !2024

bb2:                                              ; preds = %bb1
  store i32* %code, i32** %x.dbg.spill, align 8, !dbg !2025
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill, metadata !2026, metadata !DIExpression()), !dbg !2032
  store i32* %code, i32** %x.dbg.spill1, align 8, !dbg !2032
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill1, metadata !2034, metadata !DIExpression()), !dbg !2042
  store i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h52a4838d0eaa2babE", i1 (i32*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !2032
  call void @llvm.dbg.declare(metadata i1 (i32*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !2041, metadata !DIExpression()), !dbg !2042
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h52a4838d0eaa2babE" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !2042
  %_39 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !2042, !nonnull !23, !noundef !23
  br label %bb5, !dbg !2042

bb5:                                              ; preds = %bb2
  %8 = bitcast i32* %code to %"core::fmt::Opaque"*, !dbg !2042
  store %"core::fmt::Opaque"* %8, %"core::fmt::Opaque"** %0, align 8, !dbg !2042
  %_41 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !2042, !nonnull !23, !align !506, !noundef !23
  br label %bb6, !dbg !2042

bb6:                                              ; preds = %bb5
  %9 = bitcast { i8*, i64* }* %_30 to %"core::fmt::Opaque"**, !dbg !2042
  store %"core::fmt::Opaque"* %_41, %"core::fmt::Opaque"** %9, align 8, !dbg !2042
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_30, i32 0, i32 1, !dbg !2042
  %11 = bitcast i64** %10 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !2042
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_39, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %11, align 8, !dbg !2042
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_30, i32 0, i32 0, !dbg !2025
  %13 = load i8*, i8** %12, align 8, !dbg !2025, !nonnull !23, !align !506, !noundef !23
  %14 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_30, i32 0, i32 1, !dbg !2025
  %15 = load i64*, i64** %14, align 8, !dbg !2025, !nonnull !23, !noundef !23
  %16 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_29, i64 0, i64 0, !dbg !2025
  %17 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %16, i32 0, i32 0, !dbg !2025
  store i8* %13, i8** %17, align 8, !dbg !2025
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %16, i32 0, i32 1, !dbg !2025
  store i64* %15, i64** %18, align 8, !dbg !2025
  %_26.0 = bitcast [1 x { i8*, i64* }]* %_29 to [0 x { i8*, i64* }]*, !dbg !2025
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h91724e5e2039d987E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_22, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc118 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_26.0, i64 1), !dbg !2025
  br label %bb3, !dbg !2025

bb3:                                              ; preds = %bb6
  %19 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_21 to %"core::option::Option<core::fmt::Arguments>::Some"*, !dbg !2025
  %20 = bitcast %"core::option::Option<core::fmt::Arguments>::Some"* %19 to %"core::fmt::Arguments"*, !dbg !2025
  %21 = bitcast %"core::fmt::Arguments"* %20 to i8*, !dbg !2025
  %22 = bitcast %"core::fmt::Arguments"* %_22 to i8*, !dbg !2025
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 48, i1 false), !dbg !2025
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h5179245ed6beeeebE(i8 0, i32* align 4 %left_val, i32* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_21, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc443 to %"core::panic::location::Location"*)) #15, !dbg !2025
  unreachable, !dbg !2025
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h1bf1f66310464536E"() unnamed_addr #2 !dbg !2044 {
start:
  %t.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %t.dbg.spill, metadata !2050, metadata !DIExpression()), !dbg !2053
  ret void, !dbg !2054
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2b07192e84e96dafE"(i64 %t.0, i64 %t.1) unnamed_addr #2 !dbg !2055 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0
  store i64 %t.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1
  store i64 %t.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !2059, metadata !DIExpression()), !dbg !2062
  %2 = insertvalue { i64, i64 } undef, i64 %t.0, 0, !dbg !2063
  %3 = insertvalue { i64, i64 } %2, i64 %t.1, 1, !dbg !2063
  ret { i64, i64 } %3, !dbg !2063
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h45d528083251d0c9E"() unnamed_addr #2 !dbg !2064 {
start:
  %t.dbg.spill = alloca %"core::alloc::AllocError", align 1
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %t.dbg.spill, metadata !2068, metadata !DIExpression()), !dbg !2071
  ret void, !dbg !2072
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h64518824e4990ab0E"(i64 %self.0, i64 %self.1) unnamed_addr #2 !dbg !2073 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !2076, metadata !DIExpression()), !dbg !2080
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %2 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hc4cd94cd5fec9894E"(i64 %self.0, i64 %self.1), !dbg !2081
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !2081
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !2081
  br label %bb1, !dbg !2081

bb1:                                              ; preds = %start
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !2082
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !2082
  ret { i64, i64 } %6, !dbg !2082
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define internal i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb680b17b26dd4c2bE"(i8* %self) unnamed_addr #2 !dbg !2083 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2085, metadata !DIExpression()), !dbg !2089
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h39c8e5f5acb73393E"(i8* %self), !dbg !2090
  br label %bb1, !dbg !2090

bb1:                                              ; preds = %start
  ret i8* %0, !dbg !2091
}

; <i32 as alloc::vec::is_zero::IsZero>::is_zero
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN51_$LT$i32$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero17h62226bc174662b0aE"(i32* align 4 %self) unnamed_addr #0 !dbg !2092 {
start:
  %self.dbg.spill = alloca i32*, align 8
  %_3 = alloca i32, align 4
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !2099, metadata !DIExpression()), !dbg !2100
  %_4 = load i32, i32* %self, align 4, !dbg !2101
  store i32 %_4, i32* %_3, align 4, !dbg !2102
  %0 = load i32, i32* %_3, align 4, !dbg !2102
; call <i32 as alloc::vec::is_zero::IsZero>::is_zero::{{closure}}
  %1 = call zeroext i1 @"_ZN51_$LT$i32$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero28_$u7b$$u7b$closure$u7d$$u7d$17hafb7477db7bfbec0E"(%"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"* align 1 bitcast (<{}>* @alloc284 to %"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"*), i32 %0), !dbg !2102
  br label %bb1, !dbg !2102

bb1:                                              ; preds = %start
  ret i1 %1, !dbg !2103
}

; <i32 as alloc::vec::is_zero::IsZero>::is_zero::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN51_$LT$i32$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero28_$u7b$$u7b$closure$u7d$$u7d$17hafb7477db7bfbec0E"(%"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"* align 1 %_1, i32 %x) unnamed_addr #0 !dbg !2104 {
start:
  %x.dbg.spill = alloca i32, align 4
  %_1.dbg.spill = alloca %"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"*, align 8
  store %"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"* %_1, %"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"** %_1.dbg.spill, metadata !2112, metadata !DIExpression()), !dbg !2113
  store i32 %x, i32* %x.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill, metadata !2111, metadata !DIExpression()), !dbg !2114
  %0 = icmp eq i32 %x, 0, !dbg !2115
  ret i1 %0, !dbg !2116
}

; <() as std::process::Termination>::report
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17hc82e88fc6d5dfe88E"() unnamed_addr #0 !dbg !2117 {
start:
  %self.dbg.spill = alloca {}, align 1
  call void @llvm.dbg.declare(metadata {}* %self.dbg.spill, metadata !2122, metadata !DIExpression()), !dbg !2123
  ret i8 0, !dbg !2124
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h79b40160d0f7335fE"(%"alloc::vec::Vec<i32>"* align 8 %self) unnamed_addr #0 !dbg !2125 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i32*, align 8
  %ptr.dbg.spill = alloca i32*, align 8
  %self.dbg.spill5 = alloca i32*, align 8
  %self.dbg.spill4 = alloca i32*, align 8
  %self.dbg.spill2 = alloca { i32*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<i32>"*, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<i32>"* %self, %"alloc::vec::Vec<i32>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"** %self.dbg.spill, metadata !2131, metadata !DIExpression()), !dbg !2134
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !2135, metadata !DIExpression()), !dbg !2140
  %self1 = bitcast %"alloc::vec::Vec<i32>"* %self to { i32*, i64 }*, !dbg !2151
  store { i32*, i64 }* %self1, { i32*, i64 }** %self.dbg.spill2, align 8, !dbg !2151
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill2, metadata !2152, metadata !DIExpression()), !dbg !2160
  %2 = bitcast { i32*, i64 }* %self1 to i32**, !dbg !2160
  %self3 = load i32*, i32** %2, align 8, !dbg !2160, !nonnull !23, !noundef !23
  store i32* %self3, i32** %self.dbg.spill4, align 8, !dbg !2160
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill4, metadata !2161, metadata !DIExpression()), !dbg !2167
  store i32* %self3, i32** %self.dbg.spill5, align 8, !dbg !2167
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill5, metadata !2169, metadata !DIExpression()), !dbg !2175
  store i32* %self3, i32** %ptr.dbg.spill, align 8, !dbg !2175
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill, metadata !2132, metadata !DIExpression()), !dbg !2177
  store i32* %self3, i32** %self.dbg.spill6, align 8, !dbg !2150
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill6, metadata !2148, metadata !DIExpression()), !dbg !2178
  %self7 = bitcast i32* %self3 to i8*, !dbg !2178
  store i8* %self7, i8** %self.dbg.spill8, align 8, !dbg !2178
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !2179, metadata !DIExpression()), !dbg !2184
  %3 = bitcast {}** %1 to i64*, !dbg !2186
  store i64 0, i64* %3, align 8, !dbg !2186
  %data_address = load {}*, {}** %1, align 8, !dbg !2186
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !2186
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !2139, metadata !DIExpression()), !dbg !2140
  br label %bb2, !dbg !2186

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to {}**, !dbg !2140
  store {}* %data_address, {}** %4, align 8, !dbg !2140
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !2140
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !2140
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to i8*, !dbg !2140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !2140
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to i8**, !dbg !2140
  %other = load i8*, i8** %8, align 8, !dbg !2140
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !2140
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !2183, metadata !DIExpression()), !dbg !2184
  %9 = icmp eq i8* %self7, %other, !dbg !2184
  %10 = zext i1 %9 to i8, !dbg !2184
  store i8 %10, i8* %0, align 1, !dbg !2184
  %11 = load i8, i8* %0, align 1, !dbg !2184, !range !582, !noundef !23
  %_5 = trunc i8 %11 to i1, !dbg !2184
  br label %bb3, !dbg !2184

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true, !dbg !2192
  call void @llvm.assume(i1 %_4), !dbg !2193
  br label %bb1, !dbg !2193

bb1:                                              ; preds = %bb3
  ret i32* %self3, !dbg !2194
}

; alloc::vec::Vec<T,A>::extend_with
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$11extend_with17hede6bdad7b718868E"(%"alloc::vec::Vec<i32>"* align 8 %self, i64 %n, i32 %0) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2195 {
start:
  %self.dbg.spill15 = alloca { i64*, i64 }*, align 8
  %dst.dbg.spill14 = alloca i32*, align 8
  %self.dbg.spill12 = alloca { i64*, i64 }*, align 8
  %1 = alloca i32*, align 8
  %self.dbg.spill11 = alloca i32*, align 8
  %dst.dbg.spill = alloca i32*, align 8
  %self.dbg.spill8 = alloca { i64, i64 }*, align 8
  %len.dbg.spill = alloca i64*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill7 = alloca i64, align 8
  %self.dbg.spill6 = alloca i32*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill5 = alloca %"alloc::vec::Vec<i32>"*, align 8
  %self.dbg.spill4 = alloca i32*, align 8
  %3 = alloca { i8*, i32 }, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<i32>"*, align 8
  %_35 = alloca i8, align 1
  %src2 = alloca i32, align 4
  %src = alloca i32, align 4
  %_19 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %local_len = alloca { i64*, i64 }, align 8
  %ptr = alloca i32*, align 8
  %value = alloca i32, align 4
  store i32 %0, i32* %value, align 4
  store %"alloc::vec::Vec<i32>"* %self, %"alloc::vec::Vec<i32>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"** %self.dbg.spill, metadata !2202, metadata !DIExpression()), !dbg !2213
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !2203, metadata !DIExpression()), !dbg !2214
  call void @llvm.dbg.declare(metadata i32* %value, metadata !2204, metadata !DIExpression()), !dbg !2215
  call void @llvm.dbg.declare(metadata i32** %ptr, metadata !2205, metadata !DIExpression()), !dbg !2216
  call void @llvm.dbg.declare(metadata { i64*, i64 }* %local_len, metadata !2207, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !2218, metadata !DIExpression()), !dbg !2230
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter, metadata !2209, metadata !DIExpression()), !dbg !2232
  call void @llvm.dbg.declare(metadata i32* %src, metadata !2233, metadata !DIExpression()), !dbg !2240
  call void @llvm.dbg.declare(metadata i32* %src2, metadata !2242, metadata !DIExpression()), !dbg !2247
  store i8 1, i8* %_35, align 1, !dbg !2249
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h52ed96e7b828c642E"(%"alloc::vec::Vec<i32>"* align 8 %self, i64 %n)
          to label %bb1 unwind label %cleanup, !dbg !2249

bb17:                                             ; preds = %bb13, %cleanup
  %4 = load i8, i8* %_35, align 1, !dbg !2250, !range !582, !noundef !23
  %5 = trunc i8 %4 to i1, !dbg !2250
  br i1 %5, label %bb16, label %bb14, !dbg !2250

cleanup:                                          ; preds = %bb10, %bb1, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb17

bb1:                                              ; preds = %start
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %self3 = invoke i32* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h79b40160d0f7335fE"(%"alloc::vec::Vec<i32>"* align 8 %self)
          to label %bb2 unwind label %cleanup, !dbg !2251

bb2:                                              ; preds = %bb1
  store i32* %self3, i32** %self.dbg.spill4, align 8, !dbg !2251
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill4, metadata !2252, metadata !DIExpression()), !dbg !2259
  store %"alloc::vec::Vec<i32>"* %self, %"alloc::vec::Vec<i32>"** %self.dbg.spill5, align 8, !dbg !2260
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"** %self.dbg.spill5, metadata !2261, metadata !DIExpression()), !dbg !2267
  %11 = getelementptr inbounds %"alloc::vec::Vec<i32>", %"alloc::vec::Vec<i32>"* %self, i32 0, i32 1, !dbg !2267
  %count = load i64, i64* %11, align 8, !dbg !2267
  store i64 %count, i64* %count.dbg.spill, align 8, !dbg !2267
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !2258, metadata !DIExpression()), !dbg !2259
  store i32* %self3, i32** %self.dbg.spill6, align 8, !dbg !2259
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill6, metadata !2268, metadata !DIExpression()), !dbg !2275
  store i64 %count, i64* %count.dbg.spill7, align 8, !dbg !2259
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill7, metadata !2274, metadata !DIExpression()), !dbg !2275
  %12 = getelementptr inbounds i32, i32* %self3, i64 %count, !dbg !2275
  store i32* %12, i32** %2, align 8, !dbg !2275
  %_39 = load i32*, i32** %2, align 8, !dbg !2275
  br label %bb18, !dbg !2275

bb18:                                             ; preds = %bb2
  store i32* %_39, i32** %ptr, align 8, !dbg !2275
  %_14 = getelementptr inbounds %"alloc::vec::Vec<i32>", %"alloc::vec::Vec<i32>"* %self, i32 0, i32 1, !dbg !2277
  store i64* %_14, i64** %len.dbg.spill, align 8, !dbg !2277
  call void @llvm.dbg.declare(metadata i64** %len.dbg.spill, metadata !2278, metadata !DIExpression()), !dbg !2285
  %_43 = load i64, i64* %_14, align 8, !dbg !2285
  %13 = bitcast { i64*, i64 }* %local_len to i64**, !dbg !2285
  store i64* %_14, i64** %13, align 8, !dbg !2285
  %14 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !2285
  store i64 %_43, i64* %14, align 8, !dbg !2285
  %15 = bitcast { i64, i64 }* %self1 to i64*, !dbg !2231
  store i64 1, i64* %15, align 8, !dbg !2231
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !2231
  store i64 %n, i64* %16, align 8, !dbg !2231
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !2230
  %_15.0 = load i64, i64* %17, align 8, !dbg !2230
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !2230
  %_15.1 = load i64, i64* %18, align 8, !dbg !2230
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0, !dbg !2231
  store i64 %_15.0, i64* %19, align 8, !dbg !2231
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1, !dbg !2231
  store i64 %_15.1, i64* %20, align 8, !dbg !2231
  br label %bb3, !dbg !2287

bb3:                                              ; preds = %bb20, %bb18
  store { i64, i64 }* %iter, { i64, i64 }** %self.dbg.spill8, align 8, !dbg !2232
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill8, metadata !2288, metadata !DIExpression()), !dbg !2292
; invoke <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %21 = invoke { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h728e80b1bfdf1381E"({ i64, i64 }* align 8 %iter)
          to label %bb19 unwind label %cleanup9, !dbg !2292

bb13:                                             ; preds = %cleanup9
; invoke core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17h0df015e9a232d0deE"({ i64*, i64 }* %local_len) #16
          to label %bb17 unwind label %abort, !dbg !2293

cleanup9:                                         ; preds = %bb8, %bb4, %bb3
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb13

bb19:                                             ; preds = %bb3
  store { i64, i64 } %21, { i64, i64 }* %_19, align 8, !dbg !2292
  %27 = bitcast { i64, i64 }* %_19 to i64*, !dbg !2232
  %_22 = load i64, i64* %27, align 8, !dbg !2232, !range !932, !noundef !23
  switch i64 %_22, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ], !dbg !2232

bb5:                                              ; preds = %bb19
  unreachable, !dbg !2232

bb6:                                              ; preds = %bb19
  %_29 = icmp ugt i64 %n, 0, !dbg !2294
  br i1 %_29, label %bb8, label %bb10, !dbg !2294

bb4:                                              ; preds = %bb19
  %dst = load i32*, i32** %ptr, align 8, !dbg !2295
  store i32* %dst, i32** %dst.dbg.spill, align 8, !dbg !2295
  call void @llvm.dbg.declare(metadata i32** %dst.dbg.spill, metadata !2239, metadata !DIExpression()), !dbg !2240
; invoke <alloc::vec::ExtendElement<T> as alloc::vec::ExtendWith<T>>::next
  %28 = invoke i32 @"_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4next17h9f98ea69187512e2E"(i32* align 4 %value)
          to label %bb7 unwind label %cleanup9, !dbg !2296

bb7:                                              ; preds = %bb4
  store i32 %28, i32* %src, align 4, !dbg !2296
  %29 = bitcast i32* %dst to i8*, !dbg !2240
  %30 = bitcast i32* %src to i8*, !dbg !2240
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 4, i1 false), !dbg !2240
  %self10 = load i32*, i32** %ptr, align 8, !dbg !2297
  store i32* %self10, i32** %self.dbg.spill11, align 8, !dbg !2297
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill11, metadata !2298, metadata !DIExpression()), !dbg !2303
  %31 = getelementptr inbounds i32, i32* %self10, i64 1, !dbg !2303
  store i32* %31, i32** %1, align 8, !dbg !2303
  %_50 = load i32*, i32** %1, align 8, !dbg !2303
  br label %bb20, !dbg !2303

bb20:                                             ; preds = %bb7
  store i32* %_50, i32** %ptr, align 8, !dbg !2304
  store { i64*, i64 }* %local_len, { i64*, i64 }** %self.dbg.spill12, align 8, !dbg !2305
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill12, metadata !2306, metadata !DIExpression()), !dbg !2314
  %32 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !2314
  %33 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !2314
  %34 = load i64, i64* %33, align 8, !dbg !2314
  %35 = add i64 %34, 1, !dbg !2314
  store i64 %35, i64* %32, align 8, !dbg !2314
  br label %bb3, !dbg !2287

bb10:                                             ; preds = %bb9, %bb6
; invoke core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17h0df015e9a232d0deE"({ i64*, i64 }* %local_len)
          to label %bb11 unwind label %cleanup, !dbg !2293

bb8:                                              ; preds = %bb6
  %dst13 = load i32*, i32** %ptr, align 8, !dbg !2315
  store i32* %dst13, i32** %dst.dbg.spill14, align 8, !dbg !2315
  call void @llvm.dbg.declare(metadata i32** %dst.dbg.spill14, metadata !2246, metadata !DIExpression()), !dbg !2247
  store i8 0, i8* %_35, align 1, !dbg !2316
  %_33 = load i32, i32* %value, align 4, !dbg !2316
; invoke <alloc::vec::ExtendElement<T> as alloc::vec::ExtendWith<T>>::last
  %36 = invoke i32 @"_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4last17ha28606eb736bcb7bE"(i32 %_33)
          to label %bb9 unwind label %cleanup9, !dbg !2316

bb9:                                              ; preds = %bb8
  store i32 %36, i32* %src2, align 4, !dbg !2316
  %37 = bitcast i32* %dst13 to i8*, !dbg !2247
  %38 = bitcast i32* %src2 to i8*, !dbg !2247
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 4 %38, i64 4, i1 false), !dbg !2247
  store { i64*, i64 }* %local_len, { i64*, i64 }** %self.dbg.spill15, align 8, !dbg !2317
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill15, metadata !2318, metadata !DIExpression()), !dbg !2323
  %39 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !2323
  %40 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !2323
  %41 = load i64, i64* %40, align 8, !dbg !2323
  %42 = add i64 %41, 1, !dbg !2323
  store i64 %42, i64* %39, align 8, !dbg !2323
  br label %bb10, !dbg !2324

abort:                                            ; preds = %bb13
  %43 = landingpad { i8*, i32 }
          cleanup, !dbg !2325
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !2325
  unreachable, !dbg !2325

bb11:                                             ; preds = %bb10
  %44 = load i8, i8* %_35, align 1, !dbg !2250, !range !582, !noundef !23
  %45 = trunc i8 %44 to i1, !dbg !2250
  br i1 %45, label %bb15, label %bb12, !dbg !2250

bb14:                                             ; preds = %bb16, %bb17
  %46 = bitcast { i8*, i32 }* %3 to i8**, !dbg !2325
  %47 = load i8*, i8** %46, align 8, !dbg !2325
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !2325
  %49 = load i32, i32* %48, align 8, !dbg !2325
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0, !dbg !2325
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1, !dbg !2325
  resume { i8*, i32 } %51, !dbg !2325

bb16:                                             ; preds = %bb17
  br label %bb14, !dbg !2250

bb12:                                             ; preds = %bb15, %bb11
  ret void, !dbg !2326

bb15:                                             ; preds = %bb11
  br label %bb12, !dbg !2250
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h52ed96e7b828c642E"(%"alloc::vec::Vec<i32>"* align 8 %self, i64 %additional) unnamed_addr #2 !dbg !2327 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<i32>"*, align 8
  store %"alloc::vec::Vec<i32>"* %self, %"alloc::vec::Vec<i32>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"** %self.dbg.spill, metadata !2331, metadata !DIExpression()), !dbg !2333
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !2332, metadata !DIExpression()), !dbg !2334
  %_4 = bitcast %"alloc::vec::Vec<i32>"* %self to { i32*, i64 }*, !dbg !2335
  %0 = getelementptr inbounds %"alloc::vec::Vec<i32>", %"alloc::vec::Vec<i32>"* %self, i32 0, i32 1, !dbg !2336
  %_5 = load i64, i64* %0, align 8, !dbg !2336
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h25e84a25c1d24822E"({ i32*, i64 }* align 8 %_4, i64 %_5, i64 %additional), !dbg !2335
  br label %bb1, !dbg !2335

bb1:                                              ; preds = %start
  ret void, !dbg !2337
}

; alloc::vec::from_elem
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5alloc3vec9from_elem17hce8d745a37188a40E(%"alloc::vec::Vec<i32>"* sret(%"alloc::vec::Vec<i32>") %0, i32 %elem, i64 %n) unnamed_addr #2 !dbg !2338 {
start:
  %n.dbg.spill = alloca i64, align 8
  %elem.dbg.spill = alloca i32, align 4
  store i32 %elem, i32* %elem.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %elem.dbg.spill, metadata !2342, metadata !DIExpression()), !dbg !2344
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !2343, metadata !DIExpression()), !dbg !2345
; call <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem
  call void @"_ZN62_$LT$T$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17h466e1c1691e18845E"(%"alloc::vec::Vec<i32>"* sret(%"alloc::vec::Vec<i32>") %0, i32 %elem, i64 %n), !dbg !2346
  br label %bb1, !dbg !2346

bb1:                                              ; preds = %start
  ret void, !dbg !2347
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17heed9f1286d8c0c5fE(%"alloc::alloc::Global"* align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #0 !dbg !2348 {
start:
  %ptr.dbg.spill38 = alloca { [0 x i8]*, i64 }, align 8
  %data_address.dbg.spill35 = alloca {}*, align 8
  %self.dbg.spill33 = alloca i8*, align 8
  %data.dbg.spill32 = alloca i8*, align 8
  %self.dbg.spill31 = alloca i8*, align 8
  %ptr.dbg.spill29 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %addr.dbg.spill = alloca i64, align 8
  %n.dbg.spill28 = alloca i64, align 8
  %self.dbg.spill27 = alloca { i64, i64 }*, align 8
  %self.dbg.spill26 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill25 = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill24 = alloca i8*, align 8
  %len.dbg.spill23 = alloca i64, align 8
  %data.dbg.spill22 = alloca i8*, align 8
  %self.dbg.spill21 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill20 = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %n.dbg.spill18 = alloca i64, align 8
  %self.dbg.spill17 = alloca { i64, i64 }*, align 8
  %self.dbg.spill16 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill15 = alloca { i64, i64 }*, align 8
  %self.dbg.spill14 = alloca { i64, i64 }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %self.dbg.spill13 = alloca { i64, i64 }*, align 8
  %e.dbg.spill12 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %residual.dbg.spill5 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %_94 = alloca { i8*, i64 }, align 8
  %_93 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self11 = alloca i64, align 8
  %self10 = alloca i64, align 8
  %self9 = alloca i64, align 8
  %self8 = alloca i64, align 8
  %_51 = alloca { i8*, i64 }, align 8
  %_50 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self7 = alloca i64, align 8
  %self6 = alloca i64, align 8
  %_24 = alloca { i8*, i64 }, align 8
  %self4 = alloca i8*, align 8
  %self3 = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout2 = alloca { i64, i64 }, align 8
  %layout1 = alloca { i64, i64 }, align 8
  %raw_ptr = alloca i8*, align 8
  %data = alloca i8*, align 8
  %_6 = alloca { i8*, i64 }, align 8
  %3 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !2354, metadata !DIExpression()), !dbg !2380
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2355, metadata !DIExpression()), !dbg !2381
  %6 = zext i1 %zeroed to i8
  store i8 %6, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !2356, metadata !DIExpression()), !dbg !2382
  call void @llvm.dbg.declare(metadata i8** %data, metadata !2383, metadata !DIExpression()), !dbg !2390
  call void @llvm.dbg.declare(metadata i8** %raw_ptr, metadata !2359, metadata !DIExpression()), !dbg !2392
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout1, metadata !2393, metadata !DIExpression()), !dbg !2398
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout2, metadata !2400, metadata !DIExpression()), !dbg !2403
  call void @llvm.dbg.declare(metadata i8** %self3, metadata !2405, metadata !DIExpression()), !dbg !2447
  call void @llvm.dbg.declare(metadata i8** %self4, metadata !2449, metadata !DIExpression()), !dbg !2459
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %err.dbg.spill, metadata !2455, metadata !DIExpression()), !dbg !2459
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !2363, metadata !DIExpression()), !dbg !2460
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill5, metadata !2461, metadata !DIExpression()), !dbg !2472
  call void @llvm.dbg.declare(metadata i64* %self6, metadata !2474, metadata !DIExpression()), !dbg !2478
  call void @llvm.dbg.declare(metadata i64* %self7, metadata !2494, metadata !DIExpression()), !dbg !2498
  call void @llvm.dbg.declare(metadata i64* %self8, metadata !2499, metadata !DIExpression()), !dbg !2503
  call void @llvm.dbg.declare(metadata i64* %self9, metadata !2510, metadata !DIExpression()), !dbg !2514
  call void @llvm.dbg.declare(metadata i64* %self10, metadata !2515, metadata !DIExpression()), !dbg !2519
  call void @llvm.dbg.declare(metadata i64* %self11, metadata !2526, metadata !DIExpression()), !dbg !2530
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !2444, metadata !DIExpression()), !dbg !2531
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill12, metadata !2467, metadata !DIExpression()), !dbg !2532
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill13, align 8, !dbg !2533
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill13, metadata !2534, metadata !DIExpression()), !dbg !2538
  %7 = bitcast { i64, i64 }* %layout to i64*, !dbg !2538
  %_4 = load i64, i64* %7, align 8, !dbg !2538
  %8 = icmp eq i64 %_4, 0, !dbg !2539
  br i1 %8, label %bb2, label %bb1, !dbg !2539

bb2:                                              ; preds = %start
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill26, align 8, !dbg !2493
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill26, metadata !2491, metadata !DIExpression()), !dbg !2540
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill27, align 8, !dbg !2540
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill27, metadata !2484, metadata !DIExpression()), !dbg !2541
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2541
  %10 = load i64, i64* %9, align 8, !dbg !2541, !range !1290, !noundef !23
  store i64 %10, i64* %self7, align 8, !dbg !2541
  %_33 = load i64, i64* %self7, align 8, !dbg !2498, !range !1290, !noundef !23
  store i64 %_33, i64* %n.dbg.spill28, align 8, !dbg !2498
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill28, metadata !2542, metadata !DIExpression()), !dbg !2549
  store i64 %_33, i64* %self6, align 8, !dbg !2549
  %addr = load i64, i64* %self6, align 8, !dbg !2478
  store i64 %addr, i64* %addr.dbg.spill, align 8, !dbg !2478
  call void @llvm.dbg.declare(metadata i64* %addr.dbg.spill, metadata !2551, metadata !DIExpression()), !dbg !2557
  %11 = bitcast i8** %2 to i64*, !dbg !2557
  store i64 %addr, i64* %11, align 8, !dbg !2557
  %ptr = load i8*, i8** %2, align 8, !dbg !2557
  store i8* %ptr, i8** %ptr.dbg.spill29, align 8, !dbg !2557
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill29, metadata !2559, metadata !DIExpression()), !dbg !2563
  br label %bb13, !dbg !2557

bb1:                                              ; preds = %start
  store i64 %_4, i64* %size.dbg.spill, align 8, !dbg !2565
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !2357, metadata !DIExpression()), !dbg !2566
  br i1 %zeroed, label %bb3, label %bb4, !dbg !2567

bb4:                                              ; preds = %bb1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !2568
  %13 = load i64, i64* %12, align 8, !dbg !2568
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2568
  %15 = load i64, i64* %14, align 8, !dbg !2568, !range !1290, !noundef !23
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 0, !dbg !2568
  store i64 %13, i64* %16, align 8, !dbg !2568
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 1, !dbg !2568
  store i64 %15, i64* %17, align 8, !dbg !2568
  store { i64, i64 }* %layout2, { i64, i64 }** %self.dbg.spill16, align 8, !dbg !2403
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill16, metadata !2569, metadata !DIExpression()), !dbg !2573
  %18 = bitcast { i64, i64 }* %layout2 to i64*, !dbg !2573
  %_67 = load i64, i64* %18, align 8, !dbg !2573
  store { i64, i64 }* %layout2, { i64, i64 }** %self.dbg.spill17, align 8, !dbg !2403
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill17, metadata !2523, metadata !DIExpression()), !dbg !2575
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 1, !dbg !2575
  %20 = load i64, i64* %19, align 8, !dbg !2575, !range !1290, !noundef !23
  store i64 %20, i64* %self11, align 8, !dbg !2575
  %_74 = load i64, i64* %self11, align 8, !dbg !2530, !range !1290, !noundef !23
  store i64 %_74, i64* %n.dbg.spill18, align 8, !dbg !2530
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill18, metadata !2576, metadata !DIExpression()), !dbg !2583
  store i64 %_74, i64* %self10, align 8, !dbg !2583
  %_69 = load i64, i64* %self10, align 8, !dbg !2519
  %21 = call i8* @__rust_alloc(i64 %_67, i64 %_69) #18, !dbg !2403
  store i8* %21, i8** %raw_ptr, align 8, !dbg !2403
  br label %bb15, !dbg !2403

bb3:                                              ; preds = %bb1
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !2585
  %23 = load i64, i64* %22, align 8, !dbg !2585
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2585
  %25 = load i64, i64* %24, align 8, !dbg !2585, !range !1290, !noundef !23
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 0, !dbg !2585
  store i64 %23, i64* %26, align 8, !dbg !2585
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !2585
  store i64 %25, i64* %27, align 8, !dbg !2585
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill14, align 8, !dbg !2398
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill14, metadata !2586, metadata !DIExpression()), !dbg !2590
  %28 = bitcast { i64, i64 }* %layout1 to i64*, !dbg !2590
  %_57 = load i64, i64* %28, align 8, !dbg !2590
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill15, align 8, !dbg !2398
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill15, metadata !2507, metadata !DIExpression()), !dbg !2592
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !2592
  %30 = load i64, i64* %29, align 8, !dbg !2592, !range !1290, !noundef !23
  store i64 %30, i64* %self9, align 8, !dbg !2592
  %_64 = load i64, i64* %self9, align 8, !dbg !2514, !range !1290, !noundef !23
  store i64 %_64, i64* %n.dbg.spill, align 8, !dbg !2514
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !2593, metadata !DIExpression()), !dbg !2600
  store i64 %_64, i64* %self8, align 8, !dbg !2600
  %_59 = load i64, i64* %self8, align 8, !dbg !2503
  %31 = call i8* @__rust_alloc_zeroed(i64 %_57, i64 %_59) #18, !dbg !2398
  store i8* %31, i8** %raw_ptr, align 8, !dbg !2398
  br label %bb14, !dbg !2398

bb14:                                             ; preds = %bb3
  br label %bb5, !dbg !2602

bb5:                                              ; preds = %bb15, %bb14
  %_18 = load i8*, i8** %raw_ptr, align 8, !dbg !2603
; call core::ptr::non_null::NonNull<T>::new
  %32 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17he9f80aa4e18ed60cE"(i8* %_18), !dbg !2448
  store i8* %32, i8** %self4, align 8, !dbg !2448
  br label %bb6, !dbg !2448

bb15:                                             ; preds = %bb4
  br label %bb5, !dbg !2602

bb6:                                              ; preds = %bb5
  %33 = bitcast i8** %self4 to {}**, !dbg !2459
  %34 = load {}*, {}** %33, align 8, !dbg !2459
  %35 = icmp eq {}* %34, null, !dbg !2459
  %_77 = select i1 %35, i64 0, i64 1, !dbg !2459
  switch i64 %_77, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ], !dbg !2459

bb17:                                             ; preds = %bb6
  unreachable, !dbg !2459

bb16:                                             ; preds = %bb6
  %36 = bitcast i8** %self3 to {}**, !dbg !2459
  store {}* null, {}** %36, align 8, !dbg !2459
  br label %bb19, !dbg !2459

bb18:                                             ; preds = %bb6
  %v = load i8*, i8** %self4, align 8, !dbg !2459, !nonnull !23, !noundef !23
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !2459
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !2456, metadata !DIExpression()), !dbg !2604
  store i8* %v, i8** %self3, align 8, !dbg !2604
  br label %bb19, !dbg !2459

bb19:                                             ; preds = %bb16, %bb18
  %37 = bitcast i8** %self3 to {}**, !dbg !2447
  %38 = load {}*, {}** %37, align 8, !dbg !2447
  %39 = icmp eq {}* %38, null, !dbg !2447
  %_80 = select i1 %39, i64 1, i64 0, !dbg !2447
  switch i64 %_80, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !2447

bb21:                                             ; preds = %bb19
  unreachable, !dbg !2447

bb22:                                             ; preds = %bb19
  %v19 = load i8*, i8** %self3, align 8, !dbg !2447, !nonnull !23, !noundef !23
  store i8* %v19, i8** %v.dbg.spill20, align 8, !dbg !2447
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill20, metadata !2441, metadata !DIExpression()), !dbg !2605
  store i8* %v19, i8** %_15, align 8, !dbg !2605
  br label %bb7, !dbg !2447

bb20:                                             ; preds = %bb19
  %40 = bitcast i8** %_15 to {}**, !dbg !2531
  store {}* null, {}** %40, align 8, !dbg !2531
  br label %bb7, !dbg !2447

bb7:                                              ; preds = %bb22, %bb20
  %41 = bitcast i8** %_15 to {}**, !dbg !2448
  %42 = load {}*, {}** %41, align 8, !dbg !2448
  %43 = icmp eq {}* %42, null, !dbg !2448
  %_20 = select i1 %43, i64 1, i64 0, !dbg !2448
  switch i64 %_20, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !2448

bb9:                                              ; preds = %bb7
  unreachable, !dbg !2448

bb8:                                              ; preds = %bb7
  %val = load i8*, i8** %_15, align 8, !dbg !2448, !nonnull !23, !noundef !23
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !2448
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !2378, metadata !DIExpression()), !dbg !2606
  store i8* %val, i8** %ptr.dbg.spill, align 8, !dbg !2606
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2361, metadata !DIExpression()), !dbg !2607
  store i8* %val, i8** %data.dbg.spill, align 8, !dbg !2608
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !2609, metadata !DIExpression()), !dbg !2614
  store i64 %_4, i64* %len.dbg.spill, align 8, !dbg !2616
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2613, metadata !DIExpression()), !dbg !2614
  store i8* %val, i8** %self.dbg.spill21, align 8, !dbg !2614
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill21, metadata !2617, metadata !DIExpression()), !dbg !2621
  store i8* %val, i8** %data.dbg.spill22, align 8, !dbg !2621
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill22, metadata !2623, metadata !DIExpression()), !dbg !2634
  store i64 %_4, i64* %len.dbg.spill23, align 8, !dbg !2614
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill23, metadata !2633, metadata !DIExpression()), !dbg !2634
  store i8* %val, i8** %self.dbg.spill24, align 8, !dbg !2634
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill24, metadata !2636, metadata !DIExpression()), !dbg !2644
  %data_address = bitcast i8* %val to {}*, !dbg !2644
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !2644
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !2646, metadata !DIExpression()), !dbg !2653
  store i64 %_4, i64* %metadata.dbg.spill, align 8, !dbg !2634
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !2652, metadata !DIExpression()), !dbg !2653
  %44 = bitcast { i8*, i64 }* %_94 to {}**, !dbg !2653
  store {}* %data_address, {}** %44, align 8, !dbg !2653
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 1, !dbg !2653
  store i64 %_4, i64* %45, align 8, !dbg !2653
  %46 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_93 to { i8*, i64 }*, !dbg !2653
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 0, !dbg !2653
  %48 = load i8*, i8** %47, align 8, !dbg !2653
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 1, !dbg !2653
  %50 = load i64, i64* %49, align 8, !dbg !2653
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 0, !dbg !2653
  store i8* %48, i8** %51, align 8, !dbg !2653
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 1, !dbg !2653
  store i64 %50, i64* %52, align 8, !dbg !2653
  %53 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_93 to { [0 x i8]*, i64 }*, !dbg !2653
  %54 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 0, !dbg !2653
  %ptr.0 = load [0 x i8]*, [0 x i8]** %54, align 8, !dbg !2653
  %55 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 1, !dbg !2653
  %ptr.1 = load i64, i64* %55, align 8, !dbg !2653
  %56 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill25, i32 0, i32 0, !dbg !2653
  store [0 x i8]* %ptr.0, [0 x i8]** %56, align 8, !dbg !2653
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill25, i32 0, i32 1, !dbg !2653
  store i64 %ptr.1, i64* %57, align 8, !dbg !2653
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill25, metadata !2655, metadata !DIExpression()), !dbg !2661
  %58 = bitcast { i8*, i64 }* %_24 to { [0 x i8]*, i64 }*, !dbg !2661
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 0, !dbg !2661
  store [0 x i8]* %ptr.0, [0 x i8]** %59, align 8, !dbg !2661
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 1, !dbg !2661
  store i64 %ptr.1, i64* %60, align 8, !dbg !2661
  %61 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 0, !dbg !2663
  %62 = load i8*, i8** %61, align 8, !dbg !2663, !nonnull !23, !noundef !23
  %63 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !2663
  %64 = load i64, i64* %63, align 8, !dbg !2663
  %65 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !2663
  store i8* %62, i8** %65, align 8, !dbg !2663
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !2663
  store i64 %64, i64* %66, align 8, !dbg !2663
  br label %bb11, !dbg !2664

bb10:                                             ; preds = %bb7
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h45d528083251d0c9E"(), !dbg !2532
  br label %bb23, !dbg !2532

bb23:                                             ; preds = %bb10
  %67 = bitcast { i8*, i64 }* %3 to {}**, !dbg !2532
  store {}* null, {}** %67, align 8, !dbg !2532
  br label %bb12, !dbg !2665

bb12:                                             ; preds = %bb11, %bb23
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !2665
  %69 = load i8*, i8** %68, align 8, !dbg !2665
  %70 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !2665
  %71 = load i64, i64* %70, align 8, !dbg !2665
  %72 = insertvalue { i8*, i64 } undef, i8* %69, 0, !dbg !2665
  %73 = insertvalue { i8*, i64 } %72, i64 %71, 1, !dbg !2665
  ret { i8*, i64 } %73, !dbg !2665

bb11:                                             ; preds = %bb13, %bb8
  br label %bb12, !dbg !2665

bb13:                                             ; preds = %bb2
  store i8* %ptr, i8** %data, align 8, !dbg !2563
  %self30 = load i8*, i8** %data, align 8, !dbg !2390, !nonnull !23, !noundef !23
  store i8* %self30, i8** %self.dbg.spill31, align 8, !dbg !2390
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill31, metadata !2666, metadata !DIExpression()), !dbg !2670
  store i8* %self30, i8** %data.dbg.spill32, align 8, !dbg !2670
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill32, metadata !2672, metadata !DIExpression()), !dbg !2677
  store i8* %self30, i8** %self.dbg.spill33, align 8, !dbg !2677
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill33, metadata !2679, metadata !DIExpression()), !dbg !2683
  %data_address34 = bitcast i8* %self30 to {}*, !dbg !2683
  store {}* %data_address34, {}** %data_address.dbg.spill35, align 8, !dbg !2683
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill35, metadata !2685, metadata !DIExpression()), !dbg !2690
  %74 = bitcast { i8*, i64 }* %_51 to {}**, !dbg !2690
  store {}* %data_address34, {}** %74, align 8, !dbg !2690
  %75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 1, !dbg !2690
  store i64 0, i64* %75, align 8, !dbg !2690
  %76 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_50 to { i8*, i64 }*, !dbg !2690
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 0, !dbg !2690
  %78 = load i8*, i8** %77, align 8, !dbg !2690
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 1, !dbg !2690
  %80 = load i64, i64* %79, align 8, !dbg !2690
  %81 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %76, i32 0, i32 0, !dbg !2690
  store i8* %78, i8** %81, align 8, !dbg !2690
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %76, i32 0, i32 1, !dbg !2690
  store i64 %80, i64* %82, align 8, !dbg !2690
  %83 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_50 to { [0 x i8]*, i64 }*, !dbg !2690
  %84 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %83, i32 0, i32 0, !dbg !2690
  %ptr.036 = load [0 x i8]*, [0 x i8]** %84, align 8, !dbg !2690
  %85 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %83, i32 0, i32 1, !dbg !2690
  %ptr.137 = load i64, i64* %85, align 8, !dbg !2690
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill38, i32 0, i32 0, !dbg !2690
  store [0 x i8]* %ptr.036, [0 x i8]** %86, align 8, !dbg !2690
  %87 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill38, i32 0, i32 1, !dbg !2690
  store i64 %ptr.137, i64* %87, align 8, !dbg !2690
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill38, metadata !2692, metadata !DIExpression()), !dbg !2696
  %88 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*, !dbg !2696
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 0, !dbg !2696
  store [0 x i8]* %ptr.036, [0 x i8]** %89, align 8, !dbg !2696
  %90 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 1, !dbg !2696
  store i64 %ptr.137, i64* %90, align 8, !dbg !2696
  %91 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !2698
  %92 = load i8*, i8** %91, align 8, !dbg !2698, !nonnull !23, !noundef !23
  %93 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !2698
  %94 = load i64, i64* %93, align 8, !dbg !2698
  %95 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !2698
  store i8* %92, i8** %95, align 8, !dbg !2698
  %96 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !2698
  store i64 %94, i64* %96, align 8, !dbg !2698
  br label %bb11, !dbg !2699
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17hf4b384061ffd400cE(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #0 !dbg !2700 {
start:
  %count.dbg.spill54 = alloca i64, align 8
  %dst.dbg.spill53 = alloca i8*, align 8
  %ptr.dbg.spill52 = alloca i8*, align 8
  %self.dbg.spill50 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill49 = alloca { i8*, i64 }, align 8
  %self.dbg.spill48 = alloca { i8*, i64 }, align 8
  %self.dbg.spill47 = alloca { i8*, i64 }, align 8
  %src.dbg.spill = alloca i8*, align 8
  %self.dbg.spill46 = alloca i8*, align 8
  %new_ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill45 = alloca { i8*, i64 }, align 8
  %v.dbg.spill44 = alloca { i8*, i64 }, align 8
  %old_size.dbg.spill43 = alloca i64, align 8
  %ptr.dbg.spill42 = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill41 = alloca i8*, align 8
  %len.dbg.spill40 = alloca i64, align 8
  %data.dbg.spill39 = alloca i8*, align 8
  %self.dbg.spill38 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %count.dbg.spill37 = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %count.dbg.spill36 = alloca i64, align 8
  %self.dbg.spill35 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %count.dbg.spill34 = alloca i64, align 8
  %self.dbg.spill33 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill32 = alloca i8*, align 8
  %ptr.dbg.spill31 = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill30 = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %raw_ptr.dbg.spill = alloca i8*, align 8
  %n.dbg.spill28 = alloca i64, align 8
  %self.dbg.spill27 = alloca { i64, i64 }*, align 8
  %self.dbg.spill26 = alloca { i64, i64 }*, align 8
  %new_size.dbg.spill25 = alloca i64, align 8
  %ptr.dbg.spill24 = alloca i8*, align 8
  %self.dbg.spill23 = alloca i8*, align 8
  %self.dbg.spill22 = alloca { i64, i64 }*, align 8
  %new_size.dbg.spill = alloca i64, align 8
  %self.dbg.spill21 = alloca { i64, i64 }*, align 8
  %old_size.dbg.spill = alloca i64, align 8
  %n.dbg.spill20 = alloca i64, align 8
  %self.dbg.spill19 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill18 = alloca { i64, i64 }*, align 8
  %self.dbg.spill17 = alloca { i64, i64 }*, align 8
  %e.dbg.spill15 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill14 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill13 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %residual.dbg.spill6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill5 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill3 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]", align 8
  %self16 = alloca i8*, align 8
  %_135 = alloca { i8*, i64 }, align 8
  %_134 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self12 = alloca i64, align 8
  %self11 = alloca i64, align 8
  %self10 = alloca i64, align 8
  %self9 = alloca i64, align 8
  %self8 = alloca i64, align 8
  %self7 = alloca i64, align 8
  %self4 = alloca { i8*, i64 }, align 8
  %_55 = alloca { i8*, i64 }, align 8
  %_50 = alloca { i8*, i64 }, align 8
  %self2 = alloca i8*, align 8
  %self1 = alloca i8*, align 8
  %_33 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %5 = alloca { i8*, i64 }, align 8
  %new_layout = alloca { i64, i64 }, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %3, i64* %9, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !2704, metadata !DIExpression()), !dbg !2730
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2705, metadata !DIExpression()), !dbg !2731
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !2706, metadata !DIExpression()), !dbg !2732
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !2707, metadata !DIExpression()), !dbg !2733
  %10 = zext i1 %zeroed to i8
  store i8 %10, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !2708, metadata !DIExpression()), !dbg !2734
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2735, metadata !DIExpression()), !dbg !2742
  call void @llvm.dbg.declare(metadata i8** %self1, metadata !2744, metadata !DIExpression()), !dbg !2754
  call void @llvm.dbg.declare(metadata i8** %self2, metadata !2756, metadata !DIExpression()), !dbg !2764
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %err.dbg.spill, metadata !2760, metadata !DIExpression()), !dbg !2764
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !2718, metadata !DIExpression()), !dbg !2765
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill3, metadata !2766, metadata !DIExpression()), !dbg !2773
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self4, metadata !2775, metadata !DIExpression()), !dbg !2802
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill5, metadata !2726, metadata !DIExpression()), !dbg !2804
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill6, metadata !2805, metadata !DIExpression()), !dbg !2812
  call void @llvm.dbg.declare(metadata i64* %self7, metadata !2814, metadata !DIExpression()), !dbg !2818
  call void @llvm.dbg.declare(metadata i64* %self8, metadata !2825, metadata !DIExpression()), !dbg !2829
  call void @llvm.dbg.declare(metadata i64* %self9, metadata !2830, metadata !DIExpression()), !dbg !2834
  call void @llvm.dbg.declare(metadata i64* %self10, metadata !2841, metadata !DIExpression()), !dbg !2845
  call void @llvm.dbg.declare(metadata i64* %self11, metadata !2846, metadata !DIExpression()), !dbg !2850
  call void @llvm.dbg.declare(metadata i64* %self12, metadata !2857, metadata !DIExpression()), !dbg !2861
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !2751, metadata !DIExpression()), !dbg !2862
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill13, metadata !2770, metadata !DIExpression()), !dbg !2863
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill14, metadata !2799, metadata !DIExpression()), !dbg !2864
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill15, metadata !2809, metadata !DIExpression()), !dbg !2865
  call void @llvm.dbg.declare(metadata i8** %self16, metadata !2866, metadata !DIExpression()), !dbg !2870
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]"* %runtime, metadata !2879, metadata !DIExpression()), !dbg !2899
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill17, align 8, !dbg !2901
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill17, metadata !2902, metadata !DIExpression()), !dbg !2906
  %11 = bitcast { i64, i64 }* %old_layout to i64*, !dbg !2906
  %_8 = load i64, i64* %11, align 8, !dbg !2906
  %12 = icmp eq i64 %_8, 0, !dbg !2907
  br i1 %12, label %bb1, label %bb3, !dbg !2907

bb1:                                              ; preds = %start
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !2908
  %_11.0 = load i64, i64* %13, align 8, !dbg !2908
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !2908
  %_11.1 = load i64, i64* %14, align 8, !dbg !2908, !range !1290, !noundef !23
; call alloc::alloc::Global::alloc_impl
  %15 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17heed9f1286d8c0c5fE(%"alloc::alloc::Global"* align 1 %self, i64 %_11.0, i64 %_11.1, i1 zeroext %zeroed), !dbg !2909
  store { i8*, i64 } %15, { i8*, i64 }* %5, align 8, !dbg !2909
  br label %bb2, !dbg !2909

bb3:                                              ; preds = %start
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill18, align 8, !dbg !2824
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill18, metadata !2822, metadata !DIExpression()), !dbg !2910
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !2910
  %17 = load i64, i64* %16, align 8, !dbg !2910, !range !1290, !noundef !23
  store i64 %17, i64* %self8, align 8, !dbg !2910
  %_78 = load i64, i64* %self8, align 8, !dbg !2829, !range !1290, !noundef !23
  store i64 %_78, i64* %n.dbg.spill, align 8, !dbg !2829
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !2911, metadata !DIExpression()), !dbg !2918
  store i64 %_78, i64* %self7, align 8, !dbg !2918
  %_16 = load i64, i64* %self7, align 8, !dbg !2818
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill19, align 8, !dbg !2840
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill19, metadata !2838, metadata !DIExpression()), !dbg !2920
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !2920
  %19 = load i64, i64* %18, align 8, !dbg !2920, !range !1290, !noundef !23
  store i64 %19, i64* %self10, align 8, !dbg !2920
  %_84 = load i64, i64* %self10, align 8, !dbg !2845, !range !1290, !noundef !23
  store i64 %_84, i64* %n.dbg.spill20, align 8, !dbg !2845
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill20, metadata !2921, metadata !DIExpression()), !dbg !2928
  store i64 %_84, i64* %self9, align 8, !dbg !2928
  %_18 = load i64, i64* %self9, align 8, !dbg !2834
  %_15 = icmp eq i64 %_16, %_18, !dbg !2824
  br i1 %_15, label %bb4, label %bb5, !dbg !2824

bb5:                                              ; preds = %bb3
  store i64 %_8, i64* %old_size.dbg.spill43, align 8, !dbg !2930
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill43, metadata !2722, metadata !DIExpression()), !dbg !2931
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !2932
  %_58.0 = load i64, i64* %20, align 8, !dbg !2932
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !2932
  %_58.1 = load i64, i64* %21, align 8, !dbg !2932, !range !1290, !noundef !23
; call alloc::alloc::Global::alloc_impl
  %22 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17heed9f1286d8c0c5fE(%"alloc::alloc::Global"* align 1 %self, i64 %_58.0, i64 %_58.1, i1 zeroext %zeroed), !dbg !2803
  store { i8*, i64 } %22, { i8*, i64 }* %self4, align 8, !dbg !2803
  br label %bb14, !dbg !2803

bb4:                                              ; preds = %bb3
  store i64 %_8, i64* %old_size.dbg.spill, align 8, !dbg !2933
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill, metadata !2709, metadata !DIExpression()), !dbg !2934
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill21, align 8, !dbg !2935
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill21, metadata !2936, metadata !DIExpression()), !dbg !2940
  %23 = bitcast { i64, i64 }* %new_layout to i64*, !dbg !2940
  %new_size = load i64, i64* %23, align 8, !dbg !2940
  store i64 %new_size, i64* %new_size.dbg.spill, align 8, !dbg !2940
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill, metadata !2712, metadata !DIExpression()), !dbg !2941
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill22, align 8, !dbg !2942
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill22, metadata !2943, metadata !DIExpression()), !dbg !2947
  %24 = bitcast { i64, i64 }* %old_layout to i64*, !dbg !2947
  %_25 = load i64, i64* %24, align 8, !dbg !2947
  %_23 = icmp uge i64 %new_size, %_25, !dbg !2948
  call void @llvm.assume(i1 %_23), !dbg !2949
  br label %bb6, !dbg !2949

bb6:                                              ; preds = %bb4
  store i8* %ptr, i8** %self.dbg.spill23, align 8, !dbg !2950
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill23, metadata !2951, metadata !DIExpression()), !dbg !2955
  store i8* %ptr, i8** %ptr.dbg.spill24, align 8, !dbg !2955
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill24, metadata !2740, metadata !DIExpression()), !dbg !2742
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !2956
  %26 = load i64, i64* %25, align 8, !dbg !2956
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !2956
  %28 = load i64, i64* %27, align 8, !dbg !2956, !range !1290, !noundef !23
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !2956
  store i64 %26, i64* %29, align 8, !dbg !2956
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2956
  store i64 %28, i64* %30, align 8, !dbg !2956
  store i64 %new_size, i64* %new_size.dbg.spill25, align 8, !dbg !2957
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill25, metadata !2741, metadata !DIExpression()), !dbg !2742
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill26, align 8, !dbg !2742
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill26, metadata !2958, metadata !DIExpression()), !dbg !2962
  %31 = bitcast { i64, i64 }* %layout to i64*, !dbg !2962
  %_89 = load i64, i64* %31, align 8, !dbg !2962
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill27, align 8, !dbg !2742
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill27, metadata !2854, metadata !DIExpression()), !dbg !2964
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2964
  %33 = load i64, i64* %32, align 8, !dbg !2964, !range !1290, !noundef !23
  store i64 %33, i64* %self12, align 8, !dbg !2964
  %_97 = load i64, i64* %self12, align 8, !dbg !2861, !range !1290, !noundef !23
  store i64 %_97, i64* %n.dbg.spill28, align 8, !dbg !2861
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill28, metadata !2965, metadata !DIExpression()), !dbg !2972
  store i64 %_97, i64* %self11, align 8, !dbg !2972
  %_91 = load i64, i64* %self11, align 8, !dbg !2850
  %raw_ptr = call i8* @__rust_realloc(i8* %ptr, i64 %_89, i64 %_91, i64 %new_size) #18, !dbg !2742
  store i8* %raw_ptr, i8** %raw_ptr.dbg.spill, align 8, !dbg !2742
  call void @llvm.dbg.declare(metadata i8** %raw_ptr.dbg.spill, metadata !2714, metadata !DIExpression()), !dbg !2974
  br label %bb23, !dbg !2742

bb23:                                             ; preds = %bb6
; call core::ptr::non_null::NonNull<T>::new
  %34 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17he9f80aa4e18ed60cE"(i8* %raw_ptr), !dbg !2755
  store i8* %34, i8** %self2, align 8, !dbg !2755
  br label %bb7, !dbg !2755

bb7:                                              ; preds = %bb23
  %35 = bitcast i8** %self2 to {}**, !dbg !2764
  %36 = load {}*, {}** %35, align 8, !dbg !2764
  %37 = icmp eq {}* %36, null, !dbg !2764
  %_100 = select i1 %37, i64 0, i64 1, !dbg !2764
  switch i64 %_100, label %bb25 [
    i64 0, label %bb24
    i64 1, label %bb26
  ], !dbg !2764

bb25:                                             ; preds = %bb7
  unreachable, !dbg !2764

bb24:                                             ; preds = %bb7
  %38 = bitcast i8** %self1 to {}**, !dbg !2764
  store {}* null, {}** %38, align 8, !dbg !2764
  br label %bb27, !dbg !2764

bb26:                                             ; preds = %bb7
  %v = load i8*, i8** %self2, align 8, !dbg !2764, !nonnull !23, !noundef !23
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !2764
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !2761, metadata !DIExpression()), !dbg !2975
  store i8* %v, i8** %self1, align 8, !dbg !2975
  br label %bb27, !dbg !2764

bb27:                                             ; preds = %bb24, %bb26
  %39 = bitcast i8** %self1 to {}**, !dbg !2754
  %40 = load {}*, {}** %39, align 8, !dbg !2754
  %41 = icmp eq {}* %40, null, !dbg !2754
  %_103 = select i1 %41, i64 1, i64 0, !dbg !2754
  switch i64 %_103, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ], !dbg !2754

bb29:                                             ; preds = %bb27
  unreachable, !dbg !2754

bb30:                                             ; preds = %bb27
  %v29 = load i8*, i8** %self1, align 8, !dbg !2754, !nonnull !23, !noundef !23
  store i8* %v29, i8** %v.dbg.spill30, align 8, !dbg !2754
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill30, metadata !2748, metadata !DIExpression()), !dbg !2976
  store i8* %v29, i8** %_33, align 8, !dbg !2976
  br label %bb8, !dbg !2754

bb28:                                             ; preds = %bb27
  %42 = bitcast i8** %_33 to {}**, !dbg !2862
  store {}* null, {}** %42, align 8, !dbg !2862
  br label %bb8, !dbg !2754

bb8:                                              ; preds = %bb30, %bb28
  %43 = bitcast i8** %_33 to {}**, !dbg !2755
  %44 = load {}*, {}** %43, align 8, !dbg !2755
  %45 = icmp eq {}* %44, null, !dbg !2755
  %_38 = select i1 %45, i64 1, i64 0, !dbg !2755
  switch i64 %_38, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ], !dbg !2755

bb10:                                             ; preds = %bb8
  unreachable, !dbg !2755

bb9:                                              ; preds = %bb8
  %val = load i8*, i8** %_33, align 8, !dbg !2755, !nonnull !23, !noundef !23
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !2755
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !2720, metadata !DIExpression()), !dbg !2977
  store i8* %val, i8** %ptr.dbg.spill31, align 8, !dbg !2977
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill31, metadata !2716, metadata !DIExpression()), !dbg !2978
  br i1 %zeroed, label %bb12, label %bb13, !dbg !2979

bb11:                                             ; preds = %bb8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h45d528083251d0c9E"(), !dbg !2863
  br label %bb31, !dbg !2863

bb31:                                             ; preds = %bb11
  %46 = bitcast { i8*, i64 }* %5 to {}**, !dbg !2863
  store {}* null, {}** %46, align 8, !dbg !2863
  br label %bb21, !dbg !2980

bb21:                                             ; preds = %bb37, %bb31
  br label %bb22, !dbg !2983

bb13:                                             ; preds = %bb33, %bb9
  store i8* %val, i8** %data.dbg.spill, align 8, !dbg !2984
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !2985, metadata !DIExpression()), !dbg !2990
  store i64 %new_size, i64* %len.dbg.spill, align 8, !dbg !2992
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2989, metadata !DIExpression()), !dbg !2990
  store i8* %val, i8** %self.dbg.spill38, align 8, !dbg !2990
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill38, metadata !2993, metadata !DIExpression()), !dbg !2997
  store i8* %val, i8** %data.dbg.spill39, align 8, !dbg !2997
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill39, metadata !2999, metadata !DIExpression()), !dbg !3004
  store i64 %new_size, i64* %len.dbg.spill40, align 8, !dbg !2990
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill40, metadata !3003, metadata !DIExpression()), !dbg !3004
  store i8* %val, i8** %self.dbg.spill41, align 8, !dbg !3004
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill41, metadata !3006, metadata !DIExpression()), !dbg !3010
  %data_address = bitcast i8* %val to {}*, !dbg !3010
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !3010
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !3012, metadata !DIExpression()), !dbg !3017
  store i64 %new_size, i64* %metadata.dbg.spill, align 8, !dbg !3004
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !3016, metadata !DIExpression()), !dbg !3017
  %47 = bitcast { i8*, i64 }* %_135 to {}**, !dbg !3017
  store {}* %data_address, {}** %47, align 8, !dbg !3017
  %48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 1, !dbg !3017
  store i64 %new_size, i64* %48, align 8, !dbg !3017
  %49 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_134 to { i8*, i64 }*, !dbg !3017
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 0, !dbg !3017
  %51 = load i8*, i8** %50, align 8, !dbg !3017
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 1, !dbg !3017
  %53 = load i64, i64* %52, align 8, !dbg !3017
  %54 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %49, i32 0, i32 0, !dbg !3017
  store i8* %51, i8** %54, align 8, !dbg !3017
  %55 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %49, i32 0, i32 1, !dbg !3017
  store i64 %53, i64* %55, align 8, !dbg !3017
  %56 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_134 to { [0 x i8]*, i64 }*, !dbg !3017
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 0, !dbg !3017
  %ptr.0 = load [0 x i8]*, [0 x i8]** %57, align 8, !dbg !3017
  %58 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 1, !dbg !3017
  %ptr.1 = load i64, i64* %58, align 8, !dbg !3017
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill42, i32 0, i32 0, !dbg !3017
  store [0 x i8]* %ptr.0, [0 x i8]** %59, align 8, !dbg !3017
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill42, i32 0, i32 1, !dbg !3017
  store i64 %ptr.1, i64* %60, align 8, !dbg !3017
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill42, metadata !3019, metadata !DIExpression()), !dbg !3023
  %61 = bitcast { i8*, i64 }* %_50 to { [0 x i8]*, i64 }*, !dbg !3023
  %62 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 0, !dbg !3023
  store [0 x i8]* %ptr.0, [0 x i8]** %62, align 8, !dbg !3023
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 1, !dbg !3023
  store i64 %ptr.1, i64* %63, align 8, !dbg !3023
  %64 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_50, i32 0, i32 0, !dbg !3025
  %65 = load i8*, i8** %64, align 8, !dbg !3025, !nonnull !23, !noundef !23
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_50, i32 0, i32 1, !dbg !3025
  %67 = load i64, i64* %66, align 8, !dbg !3025
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !3025
  store i8* %65, i8** %68, align 8, !dbg !3025
  %69 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !3025
  store i64 %67, i64* %69, align 8, !dbg !3025
  br label %bb20, !dbg !3026

bb12:                                             ; preds = %bb9
  store i8* %raw_ptr, i8** %self.dbg.spill32, align 8, !dbg !3027
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill32, metadata !3028, metadata !DIExpression()), !dbg !3035
  store i64 %_8, i64* %count.dbg.spill, align 8, !dbg !3036
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !3034, metadata !DIExpression()), !dbg !3035
  store i8* %raw_ptr, i8** %self.dbg.spill33, align 8, !dbg !3035
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill33, metadata !3037, metadata !DIExpression()), !dbg !3044
  store i64 %_8, i64* %count.dbg.spill34, align 8, !dbg !3035
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill34, metadata !3043, metadata !DIExpression()), !dbg !3044
  %70 = getelementptr inbounds i8, i8* %raw_ptr, i64 %_8, !dbg !3044
  store i8* %70, i8** %4, align 8, !dbg !3044
  %_113 = load i8*, i8** %4, align 8, !dbg !3044
  br label %bb32, !dbg !3044

bb32:                                             ; preds = %bb12
  store i8* %_113, i8** %self.dbg.spill35, align 8, !dbg !3044
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill35, metadata !3046, metadata !DIExpression()), !dbg !3054
  %count = sub i64 %new_size, %_8, !dbg !3055
  store i64 %count, i64* %count.dbg.spill36, align 8, !dbg !3055
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill36, metadata !3053, metadata !DIExpression()), !dbg !3054
  store i8* %_113, i8** %dst.dbg.spill, align 8, !dbg !3054
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !3056, metadata !DIExpression()), !dbg !3069
  store i64 %count, i64* %count.dbg.spill37, align 8, !dbg !3054
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill37, metadata !3061, metadata !DIExpression()), !dbg !3069
  %71 = mul i64 1, %count, !dbg !3069
  call void @llvm.memset.p0i8.i64(i8* align 1 %_113, i8 0, i64 %71, i1 false), !dbg !3069
  br label %bb33, !dbg !3069

bb33:                                             ; preds = %bb32
  br label %bb13, !dbg !3071

bb20:                                             ; preds = %bb2, %bb19, %bb13
  br label %bb22, !dbg !2983

bb14:                                             ; preds = %bb5
  %72 = bitcast { i8*, i64 }* %self4 to {}**, !dbg !2802
  %73 = load {}*, {}** %72, align 8, !dbg !2802
  %74 = icmp eq {}* %73, null, !dbg !2802
  %_142 = select i1 %74, i64 1, i64 0, !dbg !2802
  switch i64 %_142, label %bb35 [
    i64 0, label %bb36
    i64 1, label %bb34
  ], !dbg !2802

bb35:                                             ; preds = %bb14
  unreachable, !dbg !2802

bb36:                                             ; preds = %bb14
  %75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self4, i32 0, i32 0, !dbg !2802
  %v.0 = load i8*, i8** %75, align 8, !dbg !2802, !nonnull !23, !noundef !23
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self4, i32 0, i32 1, !dbg !2802
  %v.1 = load i64, i64* %76, align 8, !dbg !2802
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill44, i32 0, i32 0, !dbg !2802
  store i8* %v.0, i8** %77, align 8, !dbg !2802
  %78 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill44, i32 0, i32 1, !dbg !2802
  store i64 %v.1, i64* %78, align 8, !dbg !2802
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill44, metadata !2796, metadata !DIExpression()), !dbg !3072
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 0, !dbg !3072
  store i8* %v.0, i8** %79, align 8, !dbg !3072
  %80 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 1, !dbg !3072
  store i64 %v.1, i64* %80, align 8, !dbg !3072
  br label %bb15, !dbg !2802

bb34:                                             ; preds = %bb14
  %81 = bitcast { i8*, i64 }* %_55 to {}**, !dbg !2864
  store {}* null, {}** %81, align 8, !dbg !2864
  br label %bb15, !dbg !2802

bb15:                                             ; preds = %bb36, %bb34
  %82 = bitcast { i8*, i64 }* %_55 to {}**, !dbg !2803
  %83 = load {}*, {}** %82, align 8, !dbg !2803
  %84 = icmp eq {}* %83, null, !dbg !2803
  %_60 = select i1 %84, i64 1, i64 0, !dbg !2803
  switch i64 %_60, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ], !dbg !2803

bb17:                                             ; preds = %bb15
  unreachable, !dbg !2803

bb16:                                             ; preds = %bb15
  %85 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 0, !dbg !2803
  %val.0 = load i8*, i8** %85, align 8, !dbg !2803, !nonnull !23, !noundef !23
  %86 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 1, !dbg !2803
  %val.1 = load i64, i64* %86, align 8, !dbg !2803
  %87 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill45, i32 0, i32 0, !dbg !2803
  store i8* %val.0, i8** %87, align 8, !dbg !2803
  %88 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill45, i32 0, i32 1, !dbg !2803
  store i64 %val.1, i64* %88, align 8, !dbg !2803
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill45, metadata !2728, metadata !DIExpression()), !dbg !3073
  %89 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 0, !dbg !3073
  store i8* %val.0, i8** %89, align 8, !dbg !3073
  %90 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 1, !dbg !3073
  store i64 %val.1, i64* %90, align 8, !dbg !3073
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %new_ptr.dbg.spill, metadata !2724, metadata !DIExpression()), !dbg !3074
  store i8* %ptr, i8** %self.dbg.spill46, align 8, !dbg !3075
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill46, metadata !3076, metadata !DIExpression()), !dbg !3080
  store i8* %ptr, i8** %src.dbg.spill, align 8, !dbg !3075
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill, metadata !2887, metadata !DIExpression()), !dbg !3081
  %91 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill47, i32 0, i32 0, !dbg !2878
  store i8* %val.0, i8** %91, align 8, !dbg !2878
  %92 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill47, i32 0, i32 1, !dbg !2878
  store i64 %val.1, i64* %92, align 8, !dbg !2878
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill47, metadata !2876, metadata !DIExpression()), !dbg !3082
  %93 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill48, i32 0, i32 0, !dbg !3082
  store i8* %val.0, i8** %93, align 8, !dbg !3082
  %94 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill48, i32 0, i32 1, !dbg !3082
  store i64 %val.1, i64* %94, align 8, !dbg !3082
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill48, metadata !3083, metadata !DIExpression()), !dbg !3089
  %95 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill49, i32 0, i32 0, !dbg !3089
  store i8* %val.0, i8** %95, align 8, !dbg !3089
  %96 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill49, i32 0, i32 1, !dbg !3089
  store i64 %val.1, i64* %96, align 8, !dbg !3089
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill49, metadata !3090, metadata !DIExpression()), !dbg !3096
  %_155.0 = bitcast i8* %val.0 to [0 x i8]*, !dbg !3096
  %97 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill50, i32 0, i32 0, !dbg !3096
  store [0 x i8]* %_155.0, [0 x i8]** %97, align 8, !dbg !3096
  %98 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill50, i32 0, i32 1, !dbg !3096
  store i64 %val.1, i64* %98, align 8, !dbg !3096
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill50, metadata !3098, metadata !DIExpression()), !dbg !3105
  %ptr51 = bitcast [0 x i8]* %_155.0 to i8*, !dbg !3105
  store i8* %ptr51, i8** %ptr.dbg.spill52, align 8, !dbg !3105
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill52, metadata !3106, metadata !DIExpression()), !dbg !3110
  store i8* %ptr51, i8** %self16, align 8, !dbg !3110
  %_160 = load i8*, i8** %self16, align 8, !dbg !2870
  store i8* %_160, i8** %dst.dbg.spill53, align 8, !dbg !2870
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill53, metadata !2889, metadata !DIExpression()), !dbg !3081
  store i64 %_8, i64* %count.dbg.spill54, align 8, !dbg !3112
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill54, metadata !2890, metadata !DIExpression()), !dbg !3081
  %99 = mul i64 %_8, 1, !dbg !3081
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %_160, i8* align 1 %ptr, i64 %99, i1 false), !dbg !3081
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !3113
  %_73.0 = load i64, i64* %100, align 8, !dbg !3113
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !3113
  %_73.1 = load i64, i64* %101, align 8, !dbg !3113, !range !1290, !noundef !23
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h2cd896543431de43E"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %_73.0, i64 %_73.1), !dbg !3114
  br label %bb19, !dbg !3114

bb18:                                             ; preds = %bb15
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h45d528083251d0c9E"(), !dbg !2865
  br label %bb37, !dbg !2865

bb37:                                             ; preds = %bb18
  %102 = bitcast { i8*, i64 }* %5 to {}**, !dbg !2865
  store {}* null, {}** %102, align 8, !dbg !2865
  br label %bb21, !dbg !2980

bb22:                                             ; preds = %bb20, %bb21
  %103 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !2983
  %104 = load i8*, i8** %103, align 8, !dbg !2983
  %105 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !2983
  %106 = load i64, i64* %105, align 8, !dbg !2983
  %107 = insertvalue { i8*, i64 } undef, i8* %104, 0, !dbg !2983
  %108 = insertvalue { i8*, i64 } %107, i64 %106, 1, !dbg !2983
  ret { i8*, i64 } %108, !dbg !2983

bb19:                                             ; preds = %bb16
  %109 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !3115
  store i8* %val.0, i8** %109, align 8, !dbg !3115
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !3115
  store i64 %val.1, i64* %110, align 8, !dbg !3115
  br label %bb20, !dbg !3116

bb2:                                              ; preds = %bb1
  br label %bb20, !dbg !3117
}

; alloc::raw_vec::finish_grow
; Function Attrs: noinline nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec11finish_grow17h8a5641af3fa58ed2E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, %"alloc::alloc::Global"* align 1 %alloc) unnamed_addr #1 !dbg !3118 {
start:
  %n.dbg.spill22 = alloca i64, align 8
  %self.dbg.spill21 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %e.dbg.spill20 = alloca { i64, i64 }, align 8
  %residual.dbg.spill17 = alloca { i64, i64 }, align 8
  %e.dbg.spill14 = alloca { i64, i64 }, align 8
  %val.dbg.spill11 = alloca { i64, i64 }, align 8
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill10 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill7 = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca {}, align 1
  %val.dbg.spill = alloca {}, align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %self6 = alloca i64, align 8
  %self5 = alloca i64, align 8
  %self4 = alloca i64, align 8
  %self3 = alloca i64, align 8
  %_58 = alloca { i64, i64 }, align 8
  %_52 = alloca { i64, i64 }, align 8
  %_49 = alloca { i64, i64 }, align 8
  %_43 = alloca i64*, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %memory = alloca { i8*, i64 }, align 8
  %residual2 = alloca { i64, i64 }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %self = alloca %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", align 8
  %new_layout = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !3140, metadata !DIExpression()), !dbg !3192
  call void @llvm.dbg.declare(metadata %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, metadata !3141, metadata !DIExpression()), !dbg !3193
  store %"alloc::alloc::Global"* %alloc, %"alloc::alloc::Global"** %alloc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %alloc.dbg.spill, metadata !3142, metadata !DIExpression()), !dbg !3194
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !3143, metadata !DIExpression()), !dbg !3195
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self, metadata !3196, metadata !DIExpression()), !dbg !3224
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !3226, metadata !DIExpression()), !dbg !3236
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !3238, metadata !DIExpression()), !dbg !3266
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual2, metadata !3268, metadata !DIExpression()), !dbg !3278
  call void @llvm.dbg.declare(metadata {}* %val.dbg.spill, metadata !3177, metadata !DIExpression()), !dbg !3280
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %memory, metadata !3179, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !3183, metadata !DIExpression()), !dbg !3282
  call void @llvm.dbg.declare(metadata {}* %v.dbg.spill, metadata !3260, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.declare(metadata i64* %self3, metadata !3284, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.declare(metadata i64* %self4, metadata !3295, metadata !DIExpression()), !dbg !3299
  call void @llvm.dbg.declare(metadata i64* %self5, metadata !3300, metadata !DIExpression()), !dbg !3304
  call void @llvm.dbg.declare(metadata i64* %self6, metadata !3311, metadata !DIExpression()), !dbg !3315
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h5f0e4ab3a95b708bE"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") %self, i64 %new_layout.0, i64 %new_layout.1), !dbg !3225
  br label %bb1, !dbg !3225

bb1:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to i64*, !dbg !3224
  %_45 = load i64, i64* %3, align 8, !dbg !3224, !range !932, !noundef !23
  switch i64 %_45, label %bb20 [
    i64 0, label %bb21
    i64 1, label %bb19
  ], !dbg !3224

bb20:                                             ; preds = %bb1
  unreachable, !dbg !3224

bb21:                                             ; preds = %bb1
  %4 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !3224
  %5 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %4, i32 0, i32 1, !dbg !3224
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0, !dbg !3224
  %v.0 = load i64, i64* %6, align 8, !dbg !3224
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1, !dbg !3224
  %v.1 = load i64, i64* %7, align 8, !dbg !3224, !range !1290, !noundef !23
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill7, i32 0, i32 0, !dbg !3224
  store i64 %v.0, i64* %8, align 8, !dbg !3224
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill7, i32 0, i32 1, !dbg !3224
  store i64 %v.1, i64* %9, align 8, !dbg !3224
  call void @llvm.dbg.declare(metadata { i64, i64 }* %v.dbg.spill7, metadata !3218, metadata !DIExpression()), !dbg !3316
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*, !dbg !3316
  %11 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %10, i32 0, i32 1, !dbg !3316
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !3316
  store i64 %v.0, i64* %12, align 8, !dbg !3316
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !3316
  store i64 %v.1, i64* %13, align 8, !dbg !3316
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !3316
  store i64 0, i64* %14, align 8, !dbg !3316
  br label %bb2, !dbg !3224

bb19:                                             ; preds = %bb1
  %15 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !3224
  %16 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %15, i32 0, i32 1, !dbg !3224
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !3224
  %e.0 = load i64, i64* %17, align 8, !dbg !3224
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !3224
  %e.1 = load i64, i64* %18, align 8, !dbg !3224, !range !277, !noundef !23
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !3224
  store i64 %e.0, i64* %19, align 8, !dbg !3224
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !3224
  store i64 %e.1, i64* %20, align 8, !dbg !3224
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !3221, metadata !DIExpression()), !dbg !3317
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 0, !dbg !3317
  store i64 %e.0, i64* %21, align 8, !dbg !3317
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1, !dbg !3317
  store i64 %e.1, i64* %22, align 8, !dbg !3317
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*, !dbg !3317
  %24 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %23, i32 0, i32 1, !dbg !3317
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 0, !dbg !3317
  %26 = load i64, i64* %25, align 8, !dbg !3317
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1, !dbg !3317
  %28 = load i64, i64* %27, align 8, !dbg !3317, !range !277, !noundef !23
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 0, !dbg !3317
  store i64 %26, i64* %29, align 8, !dbg !3317
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 1, !dbg !3317
  store i64 %28, i64* %30, align 8, !dbg !3317
  %31 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !3317
  store i64 1, i64* %31, align 8, !dbg !3317
  br label %bb2, !dbg !3224

bb2:                                              ; preds = %bb21, %bb19
  %32 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !3225
  %_9 = load i64, i64* %32, align 8, !dbg !3225, !range !932, !noundef !23
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !3225

bb4:                                              ; preds = %bb2
  unreachable, !dbg !3225

bb3:                                              ; preds = %bb2
  %33 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*, !dbg !3225
  %34 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %33, i32 0, i32 1, !dbg !3225
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0, !dbg !3225
  %val.0 = load i64, i64* %35, align 8, !dbg !3225
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1, !dbg !3225
  %val.1 = load i64, i64* %36, align 8, !dbg !3225, !range !1290, !noundef !23
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill11, i32 0, i32 0, !dbg !3225
  store i64 %val.0, i64* %37, align 8, !dbg !3225
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill11, i32 0, i32 1, !dbg !3225
  store i64 %val.1, i64* %38, align 8, !dbg !3225
  call void @llvm.dbg.declare(metadata { i64, i64 }* %val.dbg.spill11, metadata !3160, metadata !DIExpression()), !dbg !3318
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !3318
  store i64 %val.0, i64* %39, align 8, !dbg !3318
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3318
  store i64 %val.1, i64* %40, align 8, !dbg !3318
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !3319
  store i64 -9223372036854775807, i64* %41, align 8, !dbg !3319
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !3266
  %43 = load i64, i64* %42, align 8, !dbg !3266, !range !1785, !noundef !23
  %44 = sub i64 %43, -9223372036854775807, !dbg !3266
  %45 = icmp eq i64 %44, 0, !dbg !3266
  %_55 = select i1 %45, i64 0, i64 1, !dbg !3266
  switch i64 %_55, label %bb23 [
    i64 0, label %bb24
    i64 1, label %bb22
  ], !dbg !3266

bb5:                                              ; preds = %bb2
  %46 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*, !dbg !3325
  %47 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %46, i32 0, i32 1, !dbg !3325
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %47, i32 0, i32 0, !dbg !3325
  %residual.0 = load i64, i64* %48, align 8, !dbg !3325
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %47, i32 0, i32 1, !dbg !3325
  %residual.1 = load i64, i64* %49, align 8, !dbg !3325, !range !277, !noundef !23
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !3325
  store i64 %residual.0, i64* %50, align 8, !dbg !3325
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !3325
  store i64 %residual.1, i64* %51, align 8, !dbg !3325
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !3145, metadata !DIExpression()), !dbg !3326
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !3326
  store i64 %residual.0, i64* %52, align 8, !dbg !3326
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !3326
  store i64 %residual.1, i64* %53, align 8, !dbg !3326
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !3236
  %e.08 = load i64, i64* %54, align 8, !dbg !3236
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !3236
  %e.19 = load i64, i64* %55, align 8, !dbg !3236, !range !277, !noundef !23
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill10, i32 0, i32 0, !dbg !3236
  store i64 %e.08, i64* %56, align 8, !dbg !3236
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill10, i32 0, i32 1, !dbg !3236
  store i64 %e.19, i64* %57, align 8, !dbg !3236
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill10, metadata !3232, metadata !DIExpression()), !dbg !3327
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0, !dbg !3327
  store i64 %e.08, i64* %58, align 8, !dbg !3327
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1, !dbg !3327
  store i64 %e.19, i64* %59, align 8, !dbg !3327
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !3328, metadata !DIExpression()), !dbg !3332
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 0, !dbg !3332
  store i64 %e.08, i64* %60, align 8, !dbg !3332
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 1, !dbg !3332
  store i64 %e.19, i64* %61, align 8, !dbg !3332
  %62 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !3327
  %63 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %62, i32 0, i32 1, !dbg !3327
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 0, !dbg !3327
  %65 = load i64, i64* %64, align 8, !dbg !3327
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 1, !dbg !3327
  %67 = load i64, i64* %66, align 8, !dbg !3327, !range !277, !noundef !23
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %63, i32 0, i32 0, !dbg !3327
  store i64 %65, i64* %68, align 8, !dbg !3327
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %63, i32 0, i32 1, !dbg !3327
  store i64 %67, i64* %69, align 8, !dbg !3327
  %70 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !3327
  store i64 1, i64* %70, align 8, !dbg !3327
  br label %bb17, !dbg !3334

bb17:                                             ; preds = %bb25, %bb5
  br label %bb18, !dbg !3336

bb23:                                             ; preds = %bb3
  unreachable, !dbg !3266

bb24:                                             ; preds = %bb3
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !3283
  store i64 -9223372036854775807, i64* %71, align 8, !dbg !3283
  br label %bb6, !dbg !3266

bb22:                                             ; preds = %bb3
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !3266
  %e.012 = load i64, i64* %72, align 8, !dbg !3266
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !3266
  %e.113 = load i64, i64* %73, align 8, !dbg !3266, !range !277, !noundef !23
  %74 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill14, i32 0, i32 0, !dbg !3266
  store i64 %e.012, i64* %74, align 8, !dbg !3266
  %75 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill14, i32 0, i32 1, !dbg !3266
  store i64 %e.113, i64* %75, align 8, !dbg !3266
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill14, metadata !3263, metadata !DIExpression()), !dbg !3337
  %76 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 0, !dbg !3337
  store i64 %e.012, i64* %76, align 8, !dbg !3337
  %77 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1, !dbg !3337
  store i64 %e.113, i64* %77, align 8, !dbg !3337
  %78 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 0, !dbg !3337
  %79 = load i64, i64* %78, align 8, !dbg !3337
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1, !dbg !3337
  %81 = load i64, i64* %80, align 8, !dbg !3337, !range !277, !noundef !23
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !3337
  store i64 %79, i64* %82, align 8, !dbg !3337
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !3337
  store i64 %81, i64* %83, align 8, !dbg !3337
  br label %bb6, !dbg !3266

bb6:                                              ; preds = %bb24, %bb22
  %84 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !3267
  %85 = load i64, i64* %84, align 8, !dbg !3267, !range !1785, !noundef !23
  %86 = sub i64 %85, -9223372036854775807, !dbg !3267
  %87 = icmp eq i64 %86, 0, !dbg !3267
  %_17 = select i1 %87, i64 0, i64 1, !dbg !3267
  switch i64 %_17, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ], !dbg !3267

bb8:                                              ; preds = %bb6
  unreachable, !dbg !3267

bb7:                                              ; preds = %bb6
  %88 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, i32 0, i32 1, !dbg !3338
  %89 = load i64, i64* %88, align 8, !dbg !3338, !range !277, !noundef !23
  %90 = icmp eq i64 %89, 0, !dbg !3338
  %_22 = select i1 %90, i64 0, i64 1, !dbg !3338
  %91 = icmp eq i64 %_22, 1, !dbg !3338
  br i1 %91, label %bb11, label %bb10, !dbg !3338

bb9:                                              ; preds = %bb6
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !3339
  %residual.015 = load i64, i64* %92, align 8, !dbg !3339
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !3339
  %residual.116 = load i64, i64* %93, align 8, !dbg !3339, !range !277, !noundef !23
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill17, i32 0, i32 0, !dbg !3339
  store i64 %residual.015, i64* %94, align 8, !dbg !3339
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill17, i32 0, i32 1, !dbg !3339
  store i64 %residual.116, i64* %95, align 8, !dbg !3339
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill17, metadata !3162, metadata !DIExpression()), !dbg !3340
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 0, !dbg !3340
  store i64 %residual.015, i64* %96, align 8, !dbg !3340
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 1, !dbg !3340
  store i64 %residual.116, i64* %97, align 8, !dbg !3340
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 0, !dbg !3278
  %e.018 = load i64, i64* %98, align 8, !dbg !3278
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 1, !dbg !3278
  %e.119 = load i64, i64* %99, align 8, !dbg !3278, !range !277, !noundef !23
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill20, i32 0, i32 0, !dbg !3278
  store i64 %e.018, i64* %100, align 8, !dbg !3278
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill20, i32 0, i32 1, !dbg !3278
  store i64 %e.119, i64* %101, align 8, !dbg !3278
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill20, metadata !3274, metadata !DIExpression()), !dbg !3341
; call <T as core::convert::From<T>>::from
  %102 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2b07192e84e96dafE"(i64 %e.018, i64 %e.119), !dbg !3341
  %_61.0 = extractvalue { i64, i64 } %102, 0, !dbg !3341
  %_61.1 = extractvalue { i64, i64 } %102, 1, !dbg !3341
  br label %bb25, !dbg !3341

bb25:                                             ; preds = %bb9
  %103 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !3341
  %104 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %103, i32 0, i32 1, !dbg !3341
  %105 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %104, i32 0, i32 0, !dbg !3341
  store i64 %_61.0, i64* %105, align 8, !dbg !3341
  %106 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %104, i32 0, i32 1, !dbg !3341
  store i64 %_61.1, i64* %106, align 8, !dbg !3341
  %107 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !3341
  store i64 1, i64* %107, align 8, !dbg !3341
  br label %bb17, !dbg !3342

bb18:                                             ; preds = %bb16, %bb17
  ret void, !dbg !3336

bb11:                                             ; preds = %bb7
  %108 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !3344
  %109 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %108 to { i8*, { i64, i64 } }*, !dbg !3344
  %110 = bitcast { i8*, { i64, i64 } }* %109 to i8**, !dbg !3344
  %ptr = load i8*, i8** %110, align 8, !dbg !3344, !nonnull !23, !noundef !23
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !3344
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3181, metadata !DIExpression()), !dbg !3344
  %111 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !3282
  %112 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %111 to { i8*, { i64, i64 } }*, !dbg !3282
  %113 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %112, i32 0, i32 1, !dbg !3282
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %113, i32 0, i32 0, !dbg !3282
  %115 = load i64, i64* %114, align 8, !dbg !3282
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %113, i32 0, i32 1, !dbg !3282
  %117 = load i64, i64* %116, align 8, !dbg !3282, !range !1290, !noundef !23
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !3282
  store i64 %115, i64* %118, align 8, !dbg !3282
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !3282
  store i64 %117, i64* %119, align 8, !dbg !3282
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill, align 8, !dbg !3294
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !3292, metadata !DIExpression()), !dbg !3345
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !3345
  %121 = load i64, i64* %120, align 8, !dbg !3345, !range !1290, !noundef !23
  store i64 %121, i64* %self4, align 8, !dbg !3345
  %_74 = load i64, i64* %self4, align 8, !dbg !3299, !range !1290, !noundef !23
  store i64 %_74, i64* %n.dbg.spill, align 8, !dbg !3299
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3346, metadata !DIExpression()), !dbg !3353
  store i64 %_74, i64* %self3, align 8, !dbg !3353
  %_32 = load i64, i64* %self3, align 8, !dbg !3288
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill21, align 8, !dbg !3310
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill21, metadata !3308, metadata !DIExpression()), !dbg !3355
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3355
  %123 = load i64, i64* %122, align 8, !dbg !3355, !range !1290, !noundef !23
  store i64 %123, i64* %self6, align 8, !dbg !3355
  %_80 = load i64, i64* %self6, align 8, !dbg !3315, !range !1290, !noundef !23
  store i64 %_80, i64* %n.dbg.spill22, align 8, !dbg !3315
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill22, metadata !3356, metadata !DIExpression()), !dbg !3363
  store i64 %_80, i64* %self5, align 8, !dbg !3363
  %_34 = load i64, i64* %self5, align 8, !dbg !3304
  %_31 = icmp eq i64 %_32, %_34, !dbg !3294
  call void @llvm.assume(i1 %_31), !dbg !3365
  br label %bb12, !dbg !3365

bb10:                                             ; preds = %bb7
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !3366
  %_41.0 = load i64, i64* %124, align 8, !dbg !3366
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3366
  %_41.1 = load i64, i64* %125, align 8, !dbg !3366, !range !1290, !noundef !23
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %126 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hd9f6b6db6286ec88E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %_41.0, i64 %_41.1), !dbg !3367
  store { i8*, i64 } %126, { i8*, i64 }* %memory, align 8, !dbg !3367
  br label %bb14, !dbg !3367

bb14:                                             ; preds = %bb10
  br label %bb15, !dbg !3368

bb15:                                             ; preds = %bb13, %bb14
  %127 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 0, !dbg !3369
  %_42.0 = load i8*, i8** %127, align 8, !dbg !3369
  %128 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 1, !dbg !3369
  %_42.1 = load i64, i64* %128, align 8, !dbg !3369
  %129 = bitcast i64** %_43 to { i64, i64 }**, !dbg !3370
  store { i64, i64 }* %new_layout, { i64, i64 }** %129, align 8, !dbg !3370
  %130 = load i64*, i64** %_43, align 8, !dbg !3369, !nonnull !23, !align !336, !noundef !23
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc3512111e253ca43E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i8* %_42.0, i64 %_42.1, i64* align 8 %130), !dbg !3369
  br label %bb16, !dbg !3369

bb12:                                             ; preds = %bb11
  %131 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !3371
  %_38.0 = load i64, i64* %131, align 8, !dbg !3371
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !3371
  %_38.1 = load i64, i64* %132, align 8, !dbg !3371, !range !1290, !noundef !23
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !3372
  %_39.0 = load i64, i64* %133, align 8, !dbg !3372
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3372
  %_39.1 = load i64, i64* %134, align 8, !dbg !3372, !range !1290, !noundef !23
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %135 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h71cb829e3f23683aE"(%"alloc::alloc::Global"* align 1 %alloc, i8* %ptr, i64 %_38.0, i64 %_38.1, i64 %_39.0, i64 %_39.1), !dbg !3373
  store { i8*, i64 } %135, { i8*, i64 }* %memory, align 8, !dbg !3373
  br label %bb13, !dbg !3373

bb13:                                             ; preds = %bb12
  br label %bb15, !dbg !3368

bb16:                                             ; preds = %bb15
  br label %bb18, !dbg !3336
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h85ee4a4416ba06c4E"() unnamed_addr #0 !dbg !3374 {
start:
  %_2.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]", align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]"* %_1.dbg.spill, metadata !3378, metadata !DIExpression()), !dbg !3380
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %_2.dbg.spill, metadata !3379, metadata !DIExpression()), !dbg !3381
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3382
  store i64 0, i64* %1, align 8, !dbg !3382
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3383
  %3 = load i64, i64* %2, align 8, !dbg !3383
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3383
  %5 = load i64, i64* %4, align 8, !dbg !3383, !range !277, !noundef !23
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !3383
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !3383
  ret { i64, i64 } %7, !dbg !3383
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17haf09d5e4bec9f614E"(i64* align 8 %0) unnamed_addr #0 !dbg !3384 {
start:
  %_2.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %_3 = alloca { i64, i64 }, align 8
  %_1 = alloca i64*, align 8
  store i64* %0, i64** %_1, align 8
  %1 = bitcast i64** %_1 to { i64, i64 }**
  %2 = load { i64, i64 }*, { i64, i64 }** %1, align 8, !nonnull !23, !align !336, !noundef !23
  call void @llvm.dbg.declare(metadata i64** %_1, metadata !3388, metadata !DIExpression(DW_OP_deref)), !dbg !3390
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %_2.dbg.spill, metadata !3389, metadata !DIExpression()), !dbg !3391
  %3 = bitcast i64** %_1 to { i64, i64 }**, !dbg !3392
  %_5 = load { i64, i64 }*, { i64, i64 }** %3, align 8, !dbg !3392, !nonnull !23, !align !336, !noundef !23
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0, !dbg !3392
  %_4.0 = load i64, i64* %4, align 8, !dbg !3392
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !3392
  %_4.1 = load i64, i64* %5, align 8, !dbg !3392, !range !1290, !noundef !23
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !3393
  store i64 %_4.0, i64* %6, align 8, !dbg !3393
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !3393
  store i64 %_4.1, i64* %7, align 8, !dbg !3393
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !3393
  %9 = load i64, i64* %8, align 8, !dbg !3393
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !3393
  %11 = load i64, i64* %10, align 8, !dbg !3393, !range !277, !noundef !23
; call <T as core::convert::Into<U>>::into
  %12 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h64518824e4990ab0E"(i64 %9, i64 %11), !dbg !3393
  %13 = extractvalue { i64, i64 } %12, 0, !dbg !3393
  %14 = extractvalue { i64, i64 } %12, 1, !dbg !3393
  br label %bb1, !dbg !3393

bb1:                                              ; preds = %start
  %15 = insertvalue { i64, i64 } undef, i64 %13, 0, !dbg !3394
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1, !dbg !3394
  ret { i64, i64 } %16, !dbg !3394
}

; alloc::raw_vec::handle_reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec14handle_reserve17h6a432e51d2dbb4fdE(i64 %result.0, i64 %result.1) unnamed_addr #0 !dbg !3395 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %result.dbg.spill = alloca { i64, i64 }, align 8
  %_2 = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %result.dbg.spill, i32 0, i32 0
  store i64 %result.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %result.dbg.spill, i32 0, i32 1
  store i64 %result.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %result.dbg.spill, metadata !3399, metadata !DIExpression()), !dbg !3402
; call core::result::Result<T,E>::map_err
  %2 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h40accc27149908dbE"(i64 %result.0, i64 %result.1), !dbg !3403
  store { i64, i64 } %2, { i64, i64 }* %_2, align 8, !dbg !3403
  br label %bb1, !dbg !3403

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !3403
  %4 = load i64, i64* %3, align 8, !dbg !3403, !range !1785, !noundef !23
  %5 = sub i64 %4, -9223372036854775807, !dbg !3403
  %6 = icmp eq i64 %5, 0, !dbg !3403
  %_6 = select i1 %6, i64 0, i64 1, !dbg !3403
  switch i64 %_6, label %bb4 [
    i64 0, label %bb2
    i64 1, label %bb3
  ], !dbg !3404

bb4:                                              ; preds = %bb3, %bb1
  unreachable, !dbg !3403

bb2:                                              ; preds = %bb1
  ret void, !dbg !3405

bb3:                                              ; preds = %bb1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !3403
  %8 = load i64, i64* %7, align 8, !dbg !3403, !range !277, !noundef !23
  %9 = icmp eq i64 %8, 0, !dbg !3403
  %_5 = select i1 %9, i64 0, i64 1, !dbg !3403
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ], !dbg !3404

bb5:                                              ; preds = %bb3
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #15, !dbg !3406
  unreachable, !dbg !3406

bb6:                                              ; preds = %bb3
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 0, !dbg !3407
  %layout.0 = load i64, i64* %10, align 8, !dbg !3407
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !3407
  %layout.1 = load i64, i64* %11, align 8, !dbg !3407, !range !1290, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !3407
  store i64 %layout.0, i64* %12, align 8, !dbg !3407
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !3407
  store i64 %layout.1, i64* %13, align 8, !dbg !3407
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !3400, metadata !DIExpression()), !dbg !3408
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64 %layout.0, i64 %layout.1) #15, !dbg !3409
  unreachable, !dbg !3409
}

; alloc::raw_vec::handle_reserve::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hebfde7fac505f1d2E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !3410 {
start:
  %self.dbg.spill2 = alloca { i64, i64 }*, align 8
  %__self_0.dbg.spill = alloca { i64, i64 }*, align 8
  %self.dbg.spill1 = alloca { i64, i64 }*, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %2 = alloca { i64, i64 }, align 8
  %e = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %_1.dbg.spill, metadata !3415, metadata !DIExpression()), !dbg !3416
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e, metadata !3414, metadata !DIExpression()), !dbg !3417
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill, align 8, !dbg !3418
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !3419, metadata !DIExpression()), !dbg !3426
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill1, align 8, !dbg !3426
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill1, metadata !3427, metadata !DIExpression()), !dbg !3440
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1, !dbg !3440
  %6 = load i64, i64* %5, align 8, !dbg !3440, !range !277, !noundef !23
  %7 = icmp eq i64 %6, 0, !dbg !3440
  %_5 = select i1 %7, i64 0, i64 1, !dbg !3440
  switch i64 %_5, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !3440

bb3:                                              ; preds = %start
  unreachable, !dbg !3440

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !3440
  store i64 0, i64* %8, align 8, !dbg !3440
  br label %bb1, !dbg !3440

bb2:                                              ; preds = %start
  store { i64, i64 }* %e, { i64, i64 }** %__self_0.dbg.spill, align 8, !dbg !3440
  call void @llvm.dbg.declare(metadata { i64, i64 }** %__self_0.dbg.spill, metadata !3435, metadata !DIExpression()), !dbg !3442
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill2, align 8, !dbg !3442
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill2, metadata !3443, metadata !DIExpression()), !dbg !3450
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0, !dbg !3450
  %_8.0 = load i64, i64* %9, align 8, !dbg !3450
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1, !dbg !3450
  %_8.1 = load i64, i64* %10, align 8, !dbg !3450, !range !1290, !noundef !23
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !3442
  store i64 %_8.0, i64* %11, align 8, !dbg !3442
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !3442
  store i64 %_8.1, i64* %12, align 8, !dbg !3442
  br label %bb1, !dbg !3440

bb1:                                              ; preds = %bb4, %bb2
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !3452
  %14 = load i64, i64* %13, align 8, !dbg !3452
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !3452
  %16 = load i64, i64* %15, align 8, !dbg !3452, !range !277, !noundef !23
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0, !dbg !3452
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1, !dbg !3452
  ret { i64, i64 } %18, !dbg !3452
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define internal { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h7e1adf1578aaf6fdE"(i64 %capacity, i1 zeroext %0) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3453 {
start:
  %ptr.dbg.spill6 = alloca i32*, align 8
  %ptr.dbg.spill5 = alloca i32*, align 8
  %ptr.dbg.spill4 = alloca i32*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill2 = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %layout.dbg.spill1 = alloca { i64, i64 }, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %_46 = alloca i32*, align 8
  %_37 = alloca i8, align 1
  %self = alloca i32*, align 8
  %_31 = alloca i32*, align 8
  %result = alloca { i8*, i64 }, align 8
  %_15 = alloca { i64, i64 }, align 8
  %_10 = alloca { i64, i64 }, align 8
  %_4 = alloca i8, align 1
  %2 = alloca { i32*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i64 %capacity, i64* %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !3457, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.declare(metadata i8* %init, metadata !3458, metadata !DIExpression()), !dbg !3471
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !3459, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %result, metadata !3464, metadata !DIExpression()), !dbg !3473
  call void @llvm.dbg.declare(metadata i32** %self, metadata !3474, metadata !DIExpression()), !dbg !3478
  store i8 1, i8* %_37, align 1, !dbg !3480
  br i1 false, label %bb1, label %bb2, !dbg !3480

bb1:                                              ; preds = %start
  store i8 1, i8* %_4, align 1, !dbg !3480
  br label %bb3, !dbg !3480

bb2:                                              ; preds = %start
  %_6 = icmp eq i64 %capacity, 0, !dbg !3481
  %4 = zext i1 %_6 to i8, !dbg !3480
  store i8 %4, i8* %_4, align 1, !dbg !3480
  br label %bb3, !dbg !3480

bb3:                                              ; preds = %bb1, %bb2
  %5 = load i8, i8* %_4, align 1, !dbg !3480, !range !582, !noundef !23
  %6 = trunc i8 %5 to i1, !dbg !3480
  br i1 %6, label %bb4, label %bb6, !dbg !3480

bb6:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::array
  %7 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h68d132fe5c72c262E(i64 %capacity)
          to label %bb7 unwind label %cleanup, !dbg !3482

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_37, align 1, !dbg !3483
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %8 = invoke { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h94fea6ba2e4d686dE"()
          to label %bb5 unwind label %cleanup, !dbg !3484

bb26:                                             ; preds = %cleanup
  %9 = load i8, i8* %_37, align 1, !dbg !3485, !range !582, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !3485
  br i1 %10, label %bb25, label %bb24, !dbg !3485

cleanup:                                          ; preds = %bb20, %bb16, %bb14, %bb11, %bb8, %bb6, %bb4
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb26

bb5:                                              ; preds = %bb4
  store { i32*, i64 } %8, { i32*, i64 }* %2, align 8, !dbg !3484
  br label %bb23, !dbg !3486

bb23:                                             ; preds = %bb22, %bb5
  %16 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 0, !dbg !3487
  %17 = load i32*, i32** %16, align 8, !dbg !3487, !nonnull !23, !noundef !23
  %18 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1, !dbg !3487
  %19 = load i64, i64* %18, align 8, !dbg !3487
  %20 = insertvalue { i32*, i64 } undef, i32* %17, 0, !dbg !3487
  %21 = insertvalue { i32*, i64 } %20, i64 %19, 1, !dbg !3487
  ret { i32*, i64 } %21, !dbg !3487

bb7:                                              ; preds = %bb6
  store { i64, i64 } %7, { i64, i64 }* %_10, align 8, !dbg !3482
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !3482
  %23 = load i64, i64* %22, align 8, !dbg !3482, !range !277, !noundef !23
  %24 = icmp eq i64 %23, 0, !dbg !3482
  %_12 = select i1 %24, i64 1, i64 0, !dbg !3482
  switch i64 %_12, label %bb9 [
    i64 0, label %bb10
    i64 1, label %bb8
  ], !dbg !3488

bb9:                                              ; preds = %bb7
  unreachable, !dbg !3482

bb10:                                             ; preds = %bb7
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 0, !dbg !3489
  %layout.0 = load i64, i64* %25, align 8, !dbg !3489
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !3489
  %layout.1 = load i64, i64* %26, align 8, !dbg !3489, !range !1290, !noundef !23
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !3489
  store i64 %layout.0, i64* %27, align 8, !dbg !3489
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !3489
  store i64 %layout.1, i64* %28, align 8, !dbg !3489
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !3462, metadata !DIExpression()), !dbg !3490
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 0, !dbg !3491
  store i64 %layout.0, i64* %29, align 8, !dbg !3491
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 1, !dbg !3491
  store i64 %layout.1, i64* %30, align 8, !dbg !3491
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill1, metadata !3460, metadata !DIExpression()), !dbg !3492
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !3493
  store i64 -9223372036854775807, i64* %31, align 8, !dbg !3493
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !3497
  %33 = load i64, i64* %32, align 8, !dbg !3497, !range !1785, !noundef !23
  %34 = sub i64 %33, -9223372036854775807, !dbg !3497
  %35 = icmp eq i64 %34, 0, !dbg !3497
  %_18 = select i1 %35, i64 0, i64 1, !dbg !3497
  switch i64 %_18, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ], !dbg !3498

bb8:                                              ; preds = %bb7
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #15
          to label %unreachable unwind label %cleanup, !dbg !3499

unreachable:                                      ; preds = %bb20, %bb11, %bb8
  unreachable

bb12:                                             ; preds = %bb10
  unreachable, !dbg !3497

bb13:                                             ; preds = %bb10
  %36 = load i8, i8* %init, align 1, !dbg !3500, !range !582, !noundef !23
  %37 = trunc i8 %36 to i1, !dbg !3500
  %_21 = zext i1 %37 to i64, !dbg !3500
  switch i64 %_21, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ], !dbg !3501

bb11:                                             ; preds = %bb10
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #15
          to label %unreachable unwind label %cleanup, !dbg !3502

bb15:                                             ; preds = %bb13
  unreachable, !dbg !3500

bb16:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %38 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hd9f6b6db6286ec88E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb17 unwind label %cleanup, !dbg !3503

bb14:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %39 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h90e76ae377f35347E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb18 unwind label %cleanup, !dbg !3504

bb18:                                             ; preds = %bb14
  store { i8*, i64 } %39, { i8*, i64 }* %result, align 8, !dbg !3504
  br label %bb19, !dbg !3505

bb19:                                             ; preds = %bb17, %bb18
  %40 = bitcast { i8*, i64 }* %result to {}**, !dbg !3506
  %41 = load {}*, {}** %40, align 8, !dbg !3506
  %42 = icmp eq {}* %41, null, !dbg !3506
  %_27 = select i1 %42, i64 1, i64 0, !dbg !3506
  switch i64 %_27, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !3507

bb17:                                             ; preds = %bb16
  store { i8*, i64 } %38, { i8*, i64 }* %result, align 8, !dbg !3503
  br label %bb19, !dbg !3508

bb21:                                             ; preds = %bb19
  unreachable, !dbg !3506

bb22:                                             ; preds = %bb19
  %43 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0, !dbg !3509
  %ptr.0 = load i8*, i8** %43, align 8, !dbg !3509, !nonnull !23, !noundef !23
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1, !dbg !3509
  %ptr.1 = load i64, i64* %44, align 8, !dbg !3509
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !3509
  store i8* %ptr.0, i8** %45, align 8, !dbg !3509
  %46 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !3509
  store i64 %ptr.1, i64* %46, align 8, !dbg !3509
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !3468, metadata !DIExpression()), !dbg !3510
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 0, !dbg !3511
  store i8* %ptr.0, i8** %47, align 8, !dbg !3511
  %48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 1, !dbg !3511
  store i64 %ptr.1, i64* %48, align 8, !dbg !3511
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill2, metadata !3466, metadata !DIExpression()), !dbg !3512
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !3479
  store i8* %ptr.0, i8** %49, align 8, !dbg !3479
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !3479
  store i64 %ptr.1, i64* %50, align 8, !dbg !3479
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !3513, metadata !DIExpression()), !dbg !3520
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !3520
  store i8* %ptr.0, i8** %51, align 8, !dbg !3520
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !3520
  store i64 %ptr.1, i64* %52, align 8, !dbg !3520
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !3521, metadata !DIExpression()), !dbg !3525
  %_41.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !3525
  %ptr = bitcast [0 x i8]* %_41.0 to i32*, !dbg !3520
  store i32* %ptr, i32** %ptr.dbg.spill4, align 8, !dbg !3520
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill4, metadata !3527, metadata !DIExpression()), !dbg !3531
  store i32* %ptr, i32** %self, align 8, !dbg !3531
  %_45 = load i32*, i32** %self, align 8, !dbg !3478
  store i32* %_45, i32** %ptr.dbg.spill5, align 8, !dbg !3478
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill5, metadata !3533, metadata !DIExpression()), !dbg !3539
  store i32* %_45, i32** %ptr.dbg.spill6, align 8, !dbg !3539
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill6, metadata !3541, metadata !DIExpression()), !dbg !3545
  store i32* %_45, i32** %_46, align 8, !dbg !3545
  %53 = load i32*, i32** %_46, align 8, !dbg !3539, !nonnull !23, !noundef !23
  store i32* %53, i32** %_31, align 8, !dbg !3539
  %54 = bitcast { i32*, i64 }* %2 to i32**, !dbg !3547
  %55 = load i32*, i32** %_31, align 8, !dbg !3547, !nonnull !23, !noundef !23
  store i32* %55, i32** %54, align 8, !dbg !3547
  %56 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1, !dbg !3547
  store i64 %capacity, i64* %56, align 8, !dbg !3547
  %57 = bitcast { i32*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !3547
  br label %bb23, !dbg !3486

bb20:                                             ; preds = %bb19
; invoke alloc::alloc::handle_alloc_error
  invoke void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64 %layout.0, i64 %layout.1) #15
          to label %unreachable unwind label %cleanup, !dbg !3548

bb24:                                             ; preds = %bb25, %bb26
  %58 = bitcast { i8*, i32 }* %1 to i8**, !dbg !3549
  %59 = load i8*, i8** %58, align 8, !dbg !3549
  %60 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !3549
  %61 = load i32, i32* %60, align 8, !dbg !3549
  %62 = insertvalue { i8*, i32 } undef, i8* %59, 0, !dbg !3549
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1, !dbg !3549
  resume { i8*, i32 } %63, !dbg !3549

bb25:                                             ; preds = %bb26
  br label %bb24, !dbg !3485
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hafcaa9fa3eb77ef4E"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #2 !dbg !3550 {
start:
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca { i32*, i64 }*, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %self1 = alloca i64, align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !3554, metadata !DIExpression()), !dbg !3557
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3555, metadata !DIExpression()), !dbg !3558
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !3556, metadata !DIExpression()), !dbg !3559
  call void @llvm.dbg.declare(metadata i64* %self1, metadata !3560, metadata !DIExpression()), !dbg !3565
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill2, align 8, !dbg !3566
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill2, metadata !3567, metadata !DIExpression()), !dbg !3572
  br i1 false, label %bb2, label %bb3, !dbg !3572

bb2:                                              ; preds = %start
  store i64 -1, i64* %self1, align 8, !dbg !3572
  br label %bb1, !dbg !3572

bb3:                                              ; preds = %start
  %0 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !3572
  %1 = load i64, i64* %0, align 8, !dbg !3572
  store i64 %1, i64* %self1, align 8, !dbg !3572
  br label %bb1, !dbg !3572

bb1:                                              ; preds = %bb2, %bb3
  store i64 %len, i64* %rhs.dbg.spill, align 8, !dbg !3573
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !3564, metadata !DIExpression()), !dbg !3565
  %_10 = load i64, i64* %self1, align 8, !dbg !3565
  %_5 = sub i64 %_10, %len, !dbg !3565
  %2 = icmp ugt i64 %additional, %_5, !dbg !3574
  ret i1 %2, !dbg !3575
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hcddb728fa8c0a28bE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i32*, i64 }* align 8 %self) unnamed_addr #2 !dbg !3576 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i32*, align 8
  %self.dbg.spill4 = alloca i32*, align 8
  %self.dbg.spill3 = alloca i32*, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %_11 = alloca i8*, align 8
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !3580, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !3584, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !3595, metadata !DIExpression()), !dbg !3602
  br i1 false, label %bb1, label %bb2, !dbg !3613

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !3613
  br label %bb3, !dbg !3613

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !3614
  %_5 = load i64, i64* %1, align 8, !dbg !3614
  %_4 = icmp eq i64 %_5, 0, !dbg !3614
  %2 = zext i1 %_4 to i8, !dbg !3613
  store i8 %2, i8* %_2, align 1, !dbg !3613
  br label %bb3, !dbg !3613

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_2, align 1, !dbg !3613, !range !582, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !3613
  br i1 %4, label %bb4, label %bb5, !dbg !3613

bb5:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !3615
  %_8 = load i64, i64* %5, align 8, !dbg !3615
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h68d132fe5c72c262E(i64 %_8), !dbg !3594
  store { i64, i64 } %6, { i64, i64 }* %self1, align 8, !dbg !3594
  br label %bb6, !dbg !3594

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1, !dbg !3616
  store i64 0, i64* %7, align 8, !dbg !3616
  br label %bb8, !dbg !3617

bb8:                                              ; preds = %bb7, %bb4
  ret void, !dbg !3618

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !3593
  %9 = load i64, i64* %8, align 8, !dbg !3593, !range !277, !noundef !23
  %10 = icmp eq i64 %9, 0, !dbg !3593
  %_15 = select i1 %10, i64 1, i64 0, !dbg !3593
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !3593

bb10:                                             ; preds = %bb6
  unreachable, !dbg !3593

bb11:                                             ; preds = %bb6
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !3593
  %t.0 = load i64, i64* %11, align 8, !dbg !3593
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !3593
  %t.1 = load i64, i64* %12, align 8, !dbg !3593, !range !1290, !noundef !23
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !3593
  store i64 %t.0, i64* %13, align 8, !dbg !3593
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !3593
  store i64 %t.1, i64* %14, align 8, !dbg !3593
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !3590, metadata !DIExpression()), !dbg !3619
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !3619
  store i64 %t.0, i64* %15, align 8, !dbg !3619
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !3619
  store i64 %t.1, i64* %16, align 8, !dbg !3619
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !3581, metadata !DIExpression()), !dbg !3620
  %17 = bitcast { i32*, i64 }* %self to i32**, !dbg !3612
  %self2 = load i32*, i32** %17, align 8, !dbg !3612, !nonnull !23, !noundef !23
  store i32* %self2, i32** %self.dbg.spill3, align 8, !dbg !3612
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill3, metadata !3608, metadata !DIExpression()), !dbg !3621
  store i32* %self2, i32** %self.dbg.spill4, align 8, !dbg !3621
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill4, metadata !3622, metadata !DIExpression()), !dbg !3628
  store i32* %self2, i32** %self.dbg.spill5, align 8, !dbg !3628
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill5, metadata !3630, metadata !DIExpression()), !dbg !3634
  %ptr = bitcast i32* %self2 to i8*, !dbg !3628
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !3628
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3636, metadata !DIExpression()), !dbg !3640
  store i8* %ptr, i8** %pointer, align 8, !dbg !3640
  %_26 = load i8*, i8** %pointer, align 8, !dbg !3602, !nonnull !23, !noundef !23
  store i8* %_26, i8** %_11, align 8, !dbg !3602
  %18 = load i8*, i8** %_11, align 8, !dbg !3612, !nonnull !23, !noundef !23
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb680b17b26dd4c2bE"(i8* %18), !dbg !3612
  br label %bb7, !dbg !3612

bb9:                                              ; preds = %bb6
  unreachable, !dbg !3642

bb7:                                              ; preds = %bb11
  %19 = bitcast { i8*, { i64, i64 } }* %_9 to i8**, !dbg !3646
  store i8* %_10, i8** %19, align 8, !dbg !3646
  %20 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1, !dbg !3646
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !3646
  store i64 %t.0, i64* %21, align 8, !dbg !3646
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !3646
  store i64 %t.1, i64* %22, align 8, !dbg !3646
  %23 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !3647
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %23 to { i8*, { i64, i64 } }*, !dbg !3647
  %25 = bitcast { i8*, { i64, i64 } }* %24 to i8*, !dbg !3647
  %26 = bitcast { i8*, { i64, i64 } }* %_9 to i8*, !dbg !3647
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !3647
  br label %bb8, !dbg !3617
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h0daefafdc123f459E"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #2 !dbg !3648 {
start:
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill24 = alloca { i8*, i64 }, align 8
  %e.dbg.spill23 = alloca { i64, i64 }, align 8
  %residual.dbg.spill20 = alloca { i64, i64 }, align 8
  %v.dbg.spill17 = alloca { i8*, i64 }, align 8
  %e.dbg.spill16 = alloca { i64, i64 }, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %cap.dbg.spill13 = alloca i64, align 8
  %v1.dbg.spill11 = alloca i64, align 8
  %v2.dbg.spill10 = alloca i64, align 8
  %cap.dbg.spill = alloca i64, align 8
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %required_cap.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill9 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill6 = alloca i64, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca i64, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %_65 = alloca { i64, i64 }, align 8
  %_55 = alloca { i64, i64 }, align 8
  %_50 = alloca { i64, i64 }, align 8
  %residual4 = alloca { i64, i64 }, align 8
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %residual = alloca { i64, i64 }, align 8
  %err = alloca { i64, i64 }, align 8
  %self2 = alloca { i64, i64 }, align 8
  %self1 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !3653, metadata !DIExpression()), !dbg !3674
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3654, metadata !DIExpression()), !dbg !3675
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !3655, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.declare(metadata %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1, metadata !3677, metadata !DIExpression()), !dbg !3717
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self2, metadata !3719, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.declare(metadata { i64, i64 }* %err, metadata !3725, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !3730, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3, metadata !3742, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual4, metadata !3770, metadata !DIExpression()), !dbg !3780
  br i1 false, label %bb1, label %bb3, !dbg !3782

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3783
  store i64 0, i64* %1, align 8, !dbg !3783
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3783
  %3 = load i64, i64* %2, align 8, !dbg !3783
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3783
  %5 = load i64, i64* %4, align 8, !dbg !3783, !range !277, !noundef !23
; call <T as core::convert::Into<U>>::into
  %6 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h64518824e4990ab0E"(i64 %3, i64 %5), !dbg !3783
  %_5.0 = extractvalue { i64, i64 } %6, 0, !dbg !3783
  %_5.1 = extractvalue { i64, i64 } %6, 1, !dbg !3783
  br label %bb2, !dbg !3783

bb3:                                              ; preds = %start
; call core::num::<impl usize>::checked_add
  %7 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h251db5f99c8c8fc4E"(i64 %len, i64 %additional), !dbg !3718
  store { i64, i64 } %7, { i64, i64 }* %self2, align 8, !dbg !3718
  br label %bb4, !dbg !3718

bb4:                                              ; preds = %bb3
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !3784
  store i64 0, i64* %8, align 8, !dbg !3784
  %9 = bitcast { i64, i64 }* %self2 to i64*, !dbg !3729
  %_42 = load i64, i64* %9, align 8, !dbg !3729, !range !932, !noundef !23
  switch i64 %_42, label %bb20 [
    i64 0, label %bb19
    i64 1, label %bb21
  ], !dbg !3729

bb20:                                             ; preds = %bb4
  unreachable, !dbg !3729

bb19:                                             ; preds = %bb4
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 0, !dbg !3729
  %_45.0 = load i64, i64* %10, align 8, !dbg !3729
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !3729
  %_45.1 = load i64, i64* %11, align 8, !dbg !3729, !range !277, !noundef !23
  %12 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !3729
  %13 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %12, i32 0, i32 1, !dbg !3729
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !3729
  store i64 %_45.0, i64* %14, align 8, !dbg !3729
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !3729
  store i64 %_45.1, i64* %15, align 8, !dbg !3729
  %16 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !3729
  store i64 1, i64* %16, align 8, !dbg !3729
  br label %bb22, !dbg !3729

bb21:                                             ; preds = %bb4
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 1, !dbg !3729
  %v = load i64, i64* %17, align 8, !dbg !3729
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !3729
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !3726, metadata !DIExpression()), !dbg !3785
  %18 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !3785
  %19 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %18, i32 0, i32 1, !dbg !3785
  store i64 %v, i64* %19, align 8, !dbg !3785
  %20 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !3785
  store i64 0, i64* %20, align 8, !dbg !3785
  br label %bb22, !dbg !3729

bb22:                                             ; preds = %bb19, %bb21
  %21 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !3717
  %_46 = load i64, i64* %21, align 8, !dbg !3717, !range !932, !noundef !23
  switch i64 %_46, label %bb24 [
    i64 0, label %bb25
    i64 1, label %bb23
  ], !dbg !3717

bb24:                                             ; preds = %bb22
  unreachable, !dbg !3717

bb25:                                             ; preds = %bb22
  %22 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !3717
  %23 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %22, i32 0, i32 1, !dbg !3717
  %v5 = load i64, i64* %23, align 8, !dbg !3717
  store i64 %v5, i64* %v.dbg.spill6, align 8, !dbg !3717
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill6, metadata !3711, metadata !DIExpression()), !dbg !3786
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !3786
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %24, i32 0, i32 1, !dbg !3786
  store i64 %v5, i64* %25, align 8, !dbg !3786
  %26 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !3786
  store i64 0, i64* %26, align 8, !dbg !3786
  br label %bb5, !dbg !3717

bb23:                                             ; preds = %bb22
  %27 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !3717
  %28 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %27, i32 0, i32 1, !dbg !3717
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0, !dbg !3717
  %e.0 = load i64, i64* %29, align 8, !dbg !3717
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1, !dbg !3717
  %e.1 = load i64, i64* %30, align 8, !dbg !3717, !range !277, !noundef !23
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !3717
  store i64 %e.0, i64* %31, align 8, !dbg !3717
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !3717
  store i64 %e.1, i64* %32, align 8, !dbg !3717
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !3714, metadata !DIExpression()), !dbg !3787
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !3787
  store i64 %e.0, i64* %33, align 8, !dbg !3787
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !3787
  store i64 %e.1, i64* %34, align 8, !dbg !3787
  %35 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !3787
  %36 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %35, i32 0, i32 1, !dbg !3787
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !3787
  %38 = load i64, i64* %37, align 8, !dbg !3787
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !3787
  %40 = load i64, i64* %39, align 8, !dbg !3787, !range !277, !noundef !23
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 0, !dbg !3787
  store i64 %38, i64* %41, align 8, !dbg !3787
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 1, !dbg !3787
  store i64 %40, i64* %42, align 8, !dbg !3787
  %43 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !3787
  store i64 1, i64* %43, align 8, !dbg !3787
  br label %bb5, !dbg !3717

bb5:                                              ; preds = %bb25, %bb23
  %44 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !3718
  %_14 = load i64, i64* %44, align 8, !dbg !3718, !range !932, !noundef !23
  switch i64 %_14, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !3718

bb7:                                              ; preds = %bb5
  unreachable, !dbg !3718

bb6:                                              ; preds = %bb5
  %45 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !3718
  %46 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %45, i32 0, i32 1, !dbg !3718
  %val = load i64, i64* %46, align 8, !dbg !3718
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !3718
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !3660, metadata !DIExpression()), !dbg !3788
  store i64 %val, i64* %required_cap.dbg.spill, align 8, !dbg !3788
  call void @llvm.dbg.declare(metadata i64* %required_cap.dbg.spill, metadata !3656, metadata !DIExpression()), !dbg !3789
  %47 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !3790
  %_20 = load i64, i64* %47, align 8, !dbg !3790
  %v1 = mul i64 %_20, 2, !dbg !3790
  store i64 %v1, i64* %v1.dbg.spill, align 8, !dbg !3790
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !3791, metadata !DIExpression()), !dbg !3796
  store i64 %val, i64* %v2.dbg.spill, align 8, !dbg !3798
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !3795, metadata !DIExpression()), !dbg !3796
; call core::cmp::Ord::max
  %cap = call i64 @_ZN4core3cmp3Ord3max17h3bd0472e5607e6b1E(i64 %v1, i64 %val), !dbg !3796
  store i64 %cap, i64* %cap.dbg.spill, align 8, !dbg !3796
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !3662, metadata !DIExpression()), !dbg !3799
  br label %bb26, !dbg !3796

bb8:                                              ; preds = %bb5
  %48 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !3800
  %49 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %48, i32 0, i32 1, !dbg !3800
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 0, !dbg !3800
  %residual.0 = load i64, i64* %50, align 8, !dbg !3800
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 1, !dbg !3800
  %residual.1 = load i64, i64* %51, align 8, !dbg !3800, !range !277, !noundef !23
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !3800
  store i64 %residual.0, i64* %52, align 8, !dbg !3800
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !3800
  store i64 %residual.1, i64* %53, align 8, !dbg !3800
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !3658, metadata !DIExpression()), !dbg !3801
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !3801
  store i64 %residual.0, i64* %54, align 8, !dbg !3801
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !3801
  store i64 %residual.1, i64* %55, align 8, !dbg !3801
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !3740
  %e.07 = load i64, i64* %56, align 8, !dbg !3740
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !3740
  %e.18 = load i64, i64* %57, align 8, !dbg !3740, !range !277, !noundef !23
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 0, !dbg !3740
  store i64 %e.07, i64* %58, align 8, !dbg !3740
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 1, !dbg !3740
  store i64 %e.18, i64* %59, align 8, !dbg !3740
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill9, metadata !3736, metadata !DIExpression()), !dbg !3802
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0, !dbg !3802
  store i64 %e.07, i64* %60, align 8, !dbg !3802
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1, !dbg !3802
  store i64 %e.18, i64* %61, align 8, !dbg !3802
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !3803, metadata !DIExpression()), !dbg !3807
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !3807
  store i64 %e.07, i64* %62, align 8, !dbg !3807
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !3807
  store i64 %e.18, i64* %63, align 8, !dbg !3807
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !3802
  %65 = load i64, i64* %64, align 8, !dbg !3802
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !3802
  %67 = load i64, i64* %66, align 8, !dbg !3802, !range !277, !noundef !23
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3802
  store i64 %65, i64* %68, align 8, !dbg !3802
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3802
  store i64 %67, i64* %69, align 8, !dbg !3802
  br label %bb17, !dbg !3809

bb17:                                             ; preds = %bb31, %bb8
  br label %bb18, !dbg !3809

bb26:                                             ; preds = %bb6
  store i64 %cap, i64* %v2.dbg.spill10, align 8, !dbg !3811
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill10, metadata !3812, metadata !DIExpression()), !dbg !3817
  store i64 4, i64* %v1.dbg.spill11, align 8, !dbg !3818
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill11, metadata !3816, metadata !DIExpression()), !dbg !3817
; call core::cmp::Ord::max
  %cap12 = call i64 @_ZN4core3cmp3Ord3max17h3bd0472e5607e6b1E(i64 4, i64 %cap), !dbg !3817
  store i64 %cap12, i64* %cap.dbg.spill13, align 8, !dbg !3817
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill13, metadata !3664, metadata !DIExpression()), !dbg !3819
  br label %bb27, !dbg !3817

bb27:                                             ; preds = %bb26
; call core::alloc::layout::Layout::array
  %70 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h68d132fe5c72c262E(i64 %cap12), !dbg !3820
  %new_layout.0 = extractvalue { i64, i64 } %70, 0, !dbg !3820
  %new_layout.1 = extractvalue { i64, i64 } %70, 1, !dbg !3820
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0, !dbg !3820
  store i64 %new_layout.0, i64* %71, align 8, !dbg !3820
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1, !dbg !3820
  store i64 %new_layout.1, i64* %72, align 8, !dbg !3820
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !3666, metadata !DIExpression()), !dbg !3821
  br label %bb9, !dbg !3820

bb9:                                              ; preds = %bb27
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hcddb728fa8c0a28bE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_30, { i32*, i64 }* align 8 %self), !dbg !3822
  br label %bb10, !dbg !3822

bb10:                                             ; preds = %bb9
  %_33 = bitcast { i32*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !3823
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h8a5641af3fa58ed2E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %self3, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_30, %"alloc::alloc::Global"* align 1 %_33), !dbg !3769
  br label %bb11, !dbg !3769

bb11:                                             ; preds = %bb10
  %73 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to i64*, !dbg !3768
  %_61 = load i64, i64* %73, align 8, !dbg !3768, !range !932, !noundef !23
  switch i64 %_61, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ], !dbg !3768

bb29:                                             ; preds = %bb11
  unreachable, !dbg !3768

bb30:                                             ; preds = %bb11
  %74 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*, !dbg !3768
  %75 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %74, i32 0, i32 1, !dbg !3768
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 0, !dbg !3768
  %v.0 = load i8*, i8** %76, align 8, !dbg !3768, !nonnull !23, !noundef !23
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 1, !dbg !3768
  %v.1 = load i64, i64* %77, align 8, !dbg !3768
  %78 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 0, !dbg !3768
  store i8* %v.0, i8** %78, align 8, !dbg !3768
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 1, !dbg !3768
  store i64 %v.1, i64* %79, align 8, !dbg !3768
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill17, metadata !3762, metadata !DIExpression()), !dbg !3824
  %80 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !3824
  %81 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %80, i32 0, i32 1, !dbg !3824
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 0, !dbg !3824
  store i8* %v.0, i8** %82, align 8, !dbg !3824
  %83 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 1, !dbg !3824
  store i64 %v.1, i64* %83, align 8, !dbg !3824
  %84 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !3824
  store i64 0, i64* %84, align 8, !dbg !3824
  br label %bb12, !dbg !3768

bb28:                                             ; preds = %bb11
  %85 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !3768
  %86 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %85, i32 0, i32 1, !dbg !3768
  %87 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 0, !dbg !3768
  %e.014 = load i64, i64* %87, align 8, !dbg !3768
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 1, !dbg !3768
  %e.115 = load i64, i64* %88, align 8, !dbg !3768, !range !277, !noundef !23
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 0, !dbg !3768
  store i64 %e.014, i64* %89, align 8, !dbg !3768
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 1, !dbg !3768
  store i64 %e.115, i64* %90, align 8, !dbg !3768
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill16, metadata !3765, metadata !DIExpression()), !dbg !3825
  %91 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !3825
  store i64 %e.014, i64* %91, align 8, !dbg !3825
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !3825
  store i64 %e.115, i64* %92, align 8, !dbg !3825
  %93 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !3825
  %94 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %93, i32 0, i32 1, !dbg !3825
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !3825
  %96 = load i64, i64* %95, align 8, !dbg !3825
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !3825
  %98 = load i64, i64* %97, align 8, !dbg !3825, !range !277, !noundef !23
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 0, !dbg !3825
  store i64 %96, i64* %99, align 8, !dbg !3825
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 1, !dbg !3825
  store i64 %98, i64* %100, align 8, !dbg !3825
  %101 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !3825
  store i64 1, i64* %101, align 8, !dbg !3825
  br label %bb12, !dbg !3768

bb12:                                             ; preds = %bb30, %bb28
  %102 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !3769
  %_34 = load i64, i64* %102, align 8, !dbg !3769, !range !932, !noundef !23
  switch i64 %_34, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ], !dbg !3769

bb14:                                             ; preds = %bb12
  unreachable, !dbg !3769

bb13:                                             ; preds = %bb12
  %103 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !3769
  %104 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %103, i32 0, i32 1, !dbg !3769
  %105 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 0, !dbg !3769
  %val.0 = load i8*, i8** %105, align 8, !dbg !3769, !nonnull !23, !noundef !23
  %106 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 1, !dbg !3769
  %val.1 = load i64, i64* %106, align 8, !dbg !3769
  %107 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 0, !dbg !3769
  store i8* %val.0, i8** %107, align 8, !dbg !3769
  %108 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 1, !dbg !3769
  store i64 %val.1, i64* %108, align 8, !dbg !3769
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill24, metadata !3672, metadata !DIExpression()), !dbg !3826
  %109 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !3826
  store i8* %val.0, i8** %109, align 8, !dbg !3826
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !3826
  store i64 %val.1, i64* %110, align 8, !dbg !3826
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !3668, metadata !DIExpression()), !dbg !3827
; call alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h0b29d7ade1b3d978E"({ i32*, i64 }* align 8 %self, i8* %val.0, i64 %val.1, i64 %cap12), !dbg !3828
  br label %bb16, !dbg !3828

bb15:                                             ; preds = %bb12
  %111 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !3829
  %112 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %111, i32 0, i32 1, !dbg !3829
  %113 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 0, !dbg !3829
  %residual.018 = load i64, i64* %113, align 8, !dbg !3829
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 1, !dbg !3829
  %residual.119 = load i64, i64* %114, align 8, !dbg !3829, !range !277, !noundef !23
  %115 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 0, !dbg !3829
  store i64 %residual.018, i64* %115, align 8, !dbg !3829
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 1, !dbg !3829
  store i64 %residual.119, i64* %116, align 8, !dbg !3829
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill20, metadata !3670, metadata !DIExpression()), !dbg !3830
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !3830
  store i64 %residual.018, i64* %117, align 8, !dbg !3830
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !3830
  store i64 %residual.119, i64* %118, align 8, !dbg !3830
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !3780
  %e.021 = load i64, i64* %119, align 8, !dbg !3780
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !3780
  %e.122 = load i64, i64* %120, align 8, !dbg !3780, !range !277, !noundef !23
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 0, !dbg !3780
  store i64 %e.021, i64* %121, align 8, !dbg !3780
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 1, !dbg !3780
  store i64 %e.122, i64* %122, align 8, !dbg !3780
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill23, metadata !3776, metadata !DIExpression()), !dbg !3831
; call <T as core::convert::From<T>>::from
  %123 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2b07192e84e96dafE"(i64 %e.021, i64 %e.122), !dbg !3831
  %_68.0 = extractvalue { i64, i64 } %123, 0, !dbg !3831
  %_68.1 = extractvalue { i64, i64 } %123, 1, !dbg !3831
  br label %bb31, !dbg !3831

bb31:                                             ; preds = %bb15
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3831
  store i64 %_68.0, i64* %124, align 8, !dbg !3831
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3831
  store i64 %_68.1, i64* %125, align 8, !dbg !3831
  br label %bb17, !dbg !3832

bb18:                                             ; preds = %bb2, %bb16, %bb17
  %126 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3834
  %127 = load i64, i64* %126, align 8, !dbg !3834
  %128 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3834
  %129 = load i64, i64* %128, align 8, !dbg !3834, !range !1785, !noundef !23
  %130 = insertvalue { i64, i64 } undef, i64 %127, 0, !dbg !3834
  %131 = insertvalue { i64, i64 } %130, i64 %129, 1, !dbg !3834
  ret { i64, i64 } %131, !dbg !3834

bb16:                                             ; preds = %bb13
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3835
  store i64 -9223372036854775807, i64* %132, align 8, !dbg !3835
  br label %bb18, !dbg !3834

bb2:                                              ; preds = %bb1
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3836
  store i64 %_5.0, i64* %133, align 8, !dbg !3836
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3836
  store i64 %_5.1, i64* %134, align 8, !dbg !3836
  br label %bb18, !dbg !3809
}

; alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h0b29d7ade1b3d978E"({ i32*, i64 }* align 8 %self, i8* %ptr.0, i64 %ptr.1, i64 %cap) unnamed_addr #2 !dbg !3837 {
start:
  %ptr.dbg.spill6 = alloca i32*, align 8
  %ptr.dbg.spill5 = alloca i32*, align 8
  %ptr.dbg.spill4 = alloca i32*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }, align 8
  %cap.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %_17 = alloca i32*, align 8
  %self1 = alloca i32*, align 8
  %_4 = alloca i32*, align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !3841, metadata !DIExpression()), !dbg !3844
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store i8* %ptr.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !3842, metadata !DIExpression()), !dbg !3845
  store i64 %cap, i64* %cap.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !3843, metadata !DIExpression()), !dbg !3846
  call void @llvm.dbg.declare(metadata i32** %self1, metadata !3847, metadata !DIExpression()), !dbg !3851
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !3852
  store i8* %ptr.0, i8** %2, align 8, !dbg !3852
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !3852
  store i64 %ptr.1, i64* %3, align 8, !dbg !3852
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill2, metadata !3853, metadata !DIExpression()), !dbg !3857
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !3857
  store i8* %ptr.0, i8** %4, align 8, !dbg !3857
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !3857
  store i64 %ptr.1, i64* %5, align 8, !dbg !3857
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !3858, metadata !DIExpression()), !dbg !3862
  %_12.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !3862
  %ptr = bitcast [0 x i8]* %_12.0 to i32*, !dbg !3857
  store i32* %ptr, i32** %ptr.dbg.spill4, align 8, !dbg !3857
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill4, metadata !3864, metadata !DIExpression()), !dbg !3868
  store i32* %ptr, i32** %self1, align 8, !dbg !3868
  %_16 = load i32*, i32** %self1, align 8, !dbg !3851
  store i32* %_16, i32** %ptr.dbg.spill5, align 8, !dbg !3851
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill5, metadata !3870, metadata !DIExpression()), !dbg !3874
  store i32* %_16, i32** %ptr.dbg.spill6, align 8, !dbg !3874
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill6, metadata !3876, metadata !DIExpression()), !dbg !3880
  store i32* %_16, i32** %_17, align 8, !dbg !3880
  %6 = load i32*, i32** %_17, align 8, !dbg !3874, !nonnull !23, !noundef !23
  store i32* %6, i32** %_4, align 8, !dbg !3874
  %7 = bitcast { i32*, i64 }* %self to i32**, !dbg !3882
  %8 = load i32*, i32** %_4, align 8, !dbg !3882, !nonnull !23, !noundef !23
  store i32* %8, i32** %7, align 8, !dbg !3882
  %9 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !3883
  store i64 %cap, i64* %9, align 8, !dbg !3883
  ret void, !dbg !3884
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define internal { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h94fea6ba2e4d686dE"() unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3885 {
start:
  %ptr.dbg.spill1 = alloca i32*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %addr.dbg.spill = alloca i64, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %pointer = alloca i32*, align 8
  %_2 = alloca i32*, align 8
  %2 = alloca { i32*, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !3889, metadata !DIExpression()), !dbg !3890
  call void @llvm.dbg.declare(metadata i32** %pointer, metadata !3891, metadata !DIExpression()), !dbg !3897
  store i64 4, i64* %addr.dbg.spill, align 8, !dbg !3903
  call void @llvm.dbg.declare(metadata i64* %addr.dbg.spill, metadata !3915, metadata !DIExpression()), !dbg !3921
  %3 = bitcast i32** %1 to i64*, !dbg !3921
  store i64 4, i64* %3, align 8, !dbg !3921
  %ptr = load i32*, i32** %1, align 8, !dbg !3921
  store i32* %ptr, i32** %ptr.dbg.spill, align 8, !dbg !3921
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill, metadata !3911, metadata !DIExpression()), !dbg !3923
  br label %bb3, !dbg !3921

bb3:                                              ; preds = %start
  store i32* %ptr, i32** %ptr.dbg.spill1, align 8, !dbg !3923
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill1, metadata !3924, metadata !DIExpression()), !dbg !3928
  store i32* %ptr, i32** %pointer, align 8, !dbg !3928
  %_12 = load i32*, i32** %pointer, align 8, !dbg !3897, !nonnull !23, !noundef !23
  store i32* %_12, i32** %_2, align 8, !dbg !3897
  %4 = bitcast { i32*, i64 }* %2 to i32**, !dbg !3930
  %5 = load i32*, i32** %_2, align 8, !dbg !3930, !nonnull !23, !noundef !23
  store i32* %5, i32** %4, align 8, !dbg !3930
  %6 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1, !dbg !3930
  store i64 0, i64* %6, align 8, !dbg !3930
  %7 = bitcast { i32*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !3930
  %8 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 0, !dbg !3931
  %9 = load i32*, i32** %8, align 8, !dbg !3931, !nonnull !23, !noundef !23
  %10 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1, !dbg !3931
  %11 = load i64, i64* %10, align 8, !dbg !3931
  %12 = insertvalue { i32*, i64 } undef, i32* %9, 0, !dbg !3931
  %13 = insertvalue { i32*, i64 } %12, i64 %11, 1, !dbg !3931
  ret { i32*, i64 } %13, !dbg !3931

bb1:                                              ; No predecessors!
  br label %bb2, !dbg !3932

bb2:                                              ; preds = %bb1
  %14 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3933
  %15 = load i8*, i8** %14, align 8, !dbg !3933
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3933
  %17 = load i32, i32* %16, align 8, !dbg !3933
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0, !dbg !3933
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1, !dbg !3933
  resume { i8*, i32 } %19, !dbg !3933
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h25e84a25c1d24822E"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !3934 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !3938, metadata !DIExpression()), !dbg !3941
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3939, metadata !DIExpression()), !dbg !3942
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !3940, metadata !DIExpression()), !dbg !3943
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hafcaa9fa3eb77ef4E"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !3944
  br label %bb1, !dbg !3944

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4, !dbg !3944

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3945

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hff666f51d4222939E"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !3946
  br label %bb3, !dbg !3946

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !3947
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hff666f51d4222939E"({ i32*, i64 }* align 8 %slf, i64 %len, i64 %additional) unnamed_addr #4 !dbg !3948 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %slf.dbg.spill = alloca { i32*, i64 }*, align 8
  store { i32*, i64 }* %slf, { i32*, i64 }** %slf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %slf.dbg.spill, metadata !3952, metadata !DIExpression()), !dbg !3955
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3953, metadata !DIExpression()), !dbg !3956
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !3954, metadata !DIExpression()), !dbg !3957
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h0daefafdc123f459E"({ i32*, i64 }* align 8 %slf, i64 %len, i64 %additional), !dbg !3958
  %_5.0 = extractvalue { i64, i64 } %0, 0, !dbg !3958
  %_5.1 = extractvalue { i64, i64 } %0, 1, !dbg !3958
  br label %bb1, !dbg !3958

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h6a432e51d2dbb4fdE(i64 %_5.0, i64 %_5.1), !dbg !3959
  br label %bb2, !dbg !3959

bb2:                                              ; preds = %bb1
  ret void, !dbg !3960
}

; <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN62_$LT$T$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17h466e1c1691e18845E"(%"alloc::vec::Vec<i32>"* sret(%"alloc::vec::Vec<i32>") %0, i32 %1, i64 %n) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3961 {
start:
  %capacity.dbg.spill5 = alloca i64, align 8
  %capacity.dbg.spill4 = alloca i64, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %alloc.dbg.spill3 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill2 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill1 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %n.dbg.spill = alloca i64, align 8
  %_27 = alloca i8, align 1
  %_21 = alloca i8, align 1
  %_19 = alloca i8, align 1
  %_18 = alloca i8, align 1
  %_16 = alloca i32, align 4
  %v = alloca %"alloc::vec::Vec<i32>", align 8
  %elem = alloca i32, align 4
  store i32 %1, i32* %elem, align 4
  call void @llvm.dbg.declare(metadata i32* %elem, metadata !3968, metadata !DIExpression()), !dbg !3973
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3969, metadata !DIExpression()), !dbg !3974
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !3970, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill1, metadata !3976, metadata !DIExpression()), !dbg !3983
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"* %v, metadata !3971, metadata !DIExpression()), !dbg !3985
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill2, metadata !3986, metadata !DIExpression()), !dbg !3993
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill3, metadata !3995, metadata !DIExpression()), !dbg !4000
  store i8 1, i8* %_19, align 1, !dbg !4002
  store i8 1, i8* %_18, align 1, !dbg !4002
; invoke <i32 as alloc::vec::is_zero::IsZero>::is_zero
  %_4 = invoke zeroext i1 @"_ZN51_$LT$i32$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero17h62226bc174662b0aE"(i32* align 4 %elem)
          to label %bb1 unwind label %cleanup, !dbg !4003

bb10:                                             ; preds = %bb6, %cleanup
  %3 = load i8, i8* %_18, align 1, !dbg !4004, !range !582, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !4004
  br i1 %4, label %bb9, label %bb7, !dbg !4004

cleanup:                                          ; preds = %bb3, %bb2, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb10

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3, !dbg !4003

bb3:                                              ; preds = %bb1
  store i64 %n, i64* %capacity.dbg.spill4, align 8, !dbg !4005
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill4, metadata !3992, metadata !DIExpression()), !dbg !3993
  store i8 0, i8* %_18, align 1, !dbg !4006
  store i64 %n, i64* %capacity.dbg.spill5, align 8, !dbg !3993
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill5, metadata !3999, metadata !DIExpression()), !dbg !4000
  store i8 0, i8* %_27, align 1, !dbg !4000
  %10 = load i8, i8* %_27, align 1, !dbg !4000, !range !582, !noundef !23
  %11 = trunc i8 %10 to i1, !dbg !4000
; invoke alloc::raw_vec::RawVec<T,A>::allocate_in
  %12 = invoke { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h7e1adf1578aaf6fdE"(i64 %n, i1 zeroext %11)
          to label %bb13 unwind label %cleanup, !dbg !4000

bb2:                                              ; preds = %bb1
  store i64 %n, i64* %capacity.dbg.spill, align 8, !dbg !4007
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !3982, metadata !DIExpression()), !dbg !3983
  store i8 0, i8* %_18, align 1, !dbg !4008
  store i8 1, i8* %_21, align 1, !dbg !3983
  %13 = load i8, i8* %_21, align 1, !dbg !3983, !range !582, !noundef !23
  %14 = trunc i8 %13 to i1, !dbg !3983
; invoke alloc::raw_vec::RawVec<T,A>::allocate_in
  %15 = invoke { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h7e1adf1578aaf6fdE"(i64 %n, i1 zeroext %14)
          to label %bb12 unwind label %cleanup, !dbg !3983

bb12:                                             ; preds = %bb2
  %_6.0 = extractvalue { i32*, i64 } %15, 0, !dbg !3983
  %_6.1 = extractvalue { i32*, i64 } %15, 1, !dbg !3983
  %16 = bitcast %"alloc::vec::Vec<i32>"* %0 to { i32*, i64 }*, !dbg !4009
  %17 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %16, i32 0, i32 0, !dbg !4009
  store i32* %_6.0, i32** %17, align 8, !dbg !4009
  %18 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %16, i32 0, i32 1, !dbg !4009
  store i64 %_6.1, i64* %18, align 8, !dbg !4009
  %19 = getelementptr inbounds %"alloc::vec::Vec<i32>", %"alloc::vec::Vec<i32>"* %0, i32 0, i32 1, !dbg !4009
  store i64 %n, i64* %19, align 8, !dbg !4009
  br label %bb5, !dbg !4004

bb5:                                              ; preds = %bb4, %bb12
  ret void, !dbg !4010

bb13:                                             ; preds = %bb3
  %_23.0 = extractvalue { i32*, i64 } %12, 0, !dbg !4000
  %_23.1 = extractvalue { i32*, i64 } %12, 1, !dbg !4000
  %20 = bitcast %"alloc::vec::Vec<i32>"* %v to { i32*, i64 }*, !dbg !3993
  %21 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %20, i32 0, i32 0, !dbg !3993
  store i32* %_23.0, i32** %21, align 8, !dbg !3993
  %22 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %20, i32 0, i32 1, !dbg !3993
  store i64 %_23.1, i64* %22, align 8, !dbg !3993
  %23 = getelementptr inbounds %"alloc::vec::Vec<i32>", %"alloc::vec::Vec<i32>"* %v, i32 0, i32 1, !dbg !3993
  store i64 0, i64* %23, align 8, !dbg !3993
  store i8 0, i8* %_19, align 1, !dbg !4011
  %_17 = load i32, i32* %elem, align 4, !dbg !4011
  store i32 %_17, i32* %_16, align 4, !dbg !4012
  %24 = load i32, i32* %_16, align 4, !dbg !4013
; invoke alloc::vec::Vec<T,A>::extend_with
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$11extend_with17hede6bdad7b718868E"(%"alloc::vec::Vec<i32>"* align 8 %v, i64 %n, i32 %24)
          to label %bb4 unwind label %cleanup6, !dbg !4013

bb6:                                              ; preds = %cleanup6
; invoke core::ptr::drop_in_place<alloc::vec::Vec<i32>>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17h035ad200dd80b9a9E"(%"alloc::vec::Vec<i32>"* %v) #16
          to label %bb10 unwind label %abort, !dbg !4004

cleanup6:                                         ; preds = %bb13
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb6

bb4:                                              ; preds = %bb13
  %30 = bitcast %"alloc::vec::Vec<i32>"* %0 to i8*, !dbg !4014
  %31 = bitcast %"alloc::vec::Vec<i32>"* %v to i8*, !dbg !4014
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false), !dbg !4014
  br label %bb5, !dbg !4004

abort:                                            ; preds = %bb6
  %32 = landingpad { i8*, i32 }
          cleanup, !dbg !4015
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !4015
  unreachable, !dbg !4015

bb7:                                              ; preds = %bb9, %bb10
  %33 = load i8, i8* %_19, align 1, !dbg !4004, !range !582, !noundef !23
  %34 = trunc i8 %33 to i1, !dbg !4004
  br i1 %34, label %bb11, label %bb8, !dbg !4004

bb9:                                              ; preds = %bb10
  br label %bb7, !dbg !4004

bb8:                                              ; preds = %bb11, %bb7
  %35 = bitcast { i8*, i32 }* %2 to i8**, !dbg !4015
  %36 = load i8*, i8** %35, align 8, !dbg !4015
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !4015
  %38 = load i32, i32* %37, align 8, !dbg !4015
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0, !dbg !4015
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1, !dbg !4015
  resume { i8*, i32 } %40, !dbg !4015

bb11:                                             ; preds = %bb7
  br label %bb8, !dbg !4004
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9b4d6d2b6d8eadeeE"(i64 %self.0, i64 %self.1) unnamed_addr #0 !dbg !4016 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !4018, metadata !DIExpression()), !dbg !4019
  %2 = insertvalue { i64, i64 } undef, i64 %self.0, 0, !dbg !4020
  %3 = insertvalue { i64, i64 } %2, i64 %self.1, 1, !dbg !4020
  ret { i64, i64 } %3, !dbg !4020
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32*, i32* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hbedba93d2b3aafecE"(i32* %self.0, i32* %self.1) unnamed_addr #0 !dbg !4021 {
start:
  %self.dbg.spill = alloca { i32*, i32* }, align 8
  %0 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self.dbg.spill, i32 0, i32 0
  store i32* %self.0, i32** %0, align 8
  %1 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self.dbg.spill, i32 0, i32 1
  store i32* %self.1, i32** %1, align 8
  call void @llvm.dbg.declare(metadata { i32*, i32* }* %self.dbg.spill, metadata !4025, metadata !DIExpression()), !dbg !4027
  %2 = insertvalue { i32*, i32* } undef, i32* %self.0, 0, !dbg !4028
  %3 = insertvalue { i32*, i32* } %2, i32* %self.1, 1, !dbg !4028
  ret { i32*, i32* } %3, !dbg !4028
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h2cd896543431de43E"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1) unnamed_addr #0 !dbg !4029 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca { i64, i64 }*, align 8
  %self.dbg.spill7 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %self3 = alloca i64, align 8
  %self2 = alloca i64, align 8
  %layout1 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !4034, metadata !DIExpression()), !dbg !4037
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !4035, metadata !DIExpression()), !dbg !4038
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !4036, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout1, metadata !4040, metadata !DIExpression()), !dbg !4046
  call void @llvm.dbg.declare(metadata i64* %self2, metadata !4048, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.declare(metadata i64* %self3, metadata !4059, metadata !DIExpression()), !dbg !4063
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill4, align 8, !dbg !4064
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill4, metadata !4065, metadata !DIExpression()), !dbg !4069
  %4 = bitcast { i64, i64 }* %layout to i64*, !dbg !4069
  %_4 = load i64, i64* %4, align 8, !dbg !4069
  %5 = icmp eq i64 %_4, 0, !dbg !4064
  br i1 %5, label %bb2, label %bb1, !dbg !4064

bb2:                                              ; preds = %start
  br label %bb3, !dbg !4070

bb1:                                              ; preds = %start
  store i8* %ptr, i8** %self.dbg.spill5, align 8, !dbg !4071
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !4072, metadata !DIExpression()), !dbg !4076
  store i8* %ptr, i8** %ptr.dbg.spill6, align 8, !dbg !4076
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill6, metadata !4045, metadata !DIExpression()), !dbg !4046
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !4077
  %7 = load i64, i64* %6, align 8, !dbg !4077
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !4077
  %9 = load i64, i64* %8, align 8, !dbg !4077, !range !1290, !noundef !23
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 0, !dbg !4077
  store i64 %7, i64* %10, align 8, !dbg !4077
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !4077
  store i64 %9, i64* %11, align 8, !dbg !4077
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill7, align 8, !dbg !4046
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill7, metadata !4078, metadata !DIExpression()), !dbg !4082
  %12 = bitcast { i64, i64 }* %layout1 to i64*, !dbg !4082
  %_11 = load i64, i64* %12, align 8, !dbg !4082
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill8, align 8, !dbg !4046
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill8, metadata !4056, metadata !DIExpression()), !dbg !4084
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !4084
  %14 = load i64, i64* %13, align 8, !dbg !4084, !range !1290, !noundef !23
  store i64 %14, i64* %self3, align 8, !dbg !4084
  %_18 = load i64, i64* %self3, align 8, !dbg !4063, !range !1290, !noundef !23
  store i64 %_18, i64* %n.dbg.spill, align 8, !dbg !4063
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !4085, metadata !DIExpression()), !dbg !4092
  store i64 %_18, i64* %self2, align 8, !dbg !4092
  %_13 = load i64, i64* %self2, align 8, !dbg !4052
  call void @__rust_dealloc(i8* %ptr, i64 %_11, i64 %_13) #18, !dbg !4046
  br label %bb4, !dbg !4046

bb4:                                              ; preds = %bb1
  br label %bb3, !dbg !4070

bb3:                                              ; preds = %bb2, %bb4
  ret void, !dbg !4094
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h90e76ae377f35347E"(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !4095 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !4099, metadata !DIExpression()), !dbg !4101
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !4100, metadata !DIExpression()), !dbg !4102
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17heed9f1286d8c0c5fE(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext true), !dbg !4103
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !4103
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !4103
  br label %bb1, !dbg !4103

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !4104
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !4104
  ret { i8*, i64 } %6, !dbg !4104
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h71cb829e3f23683aE"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #0 !dbg !4105 {
start:
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %old_layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !4109, metadata !DIExpression()), !dbg !4113
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !4110, metadata !DIExpression()), !dbg !4114
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 0
  store i64 %old_layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 1
  store i64 %old_layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout.dbg.spill, metadata !4111, metadata !DIExpression()), !dbg !4115
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !4112, metadata !DIExpression()), !dbg !4116
; call alloc::alloc::Global::grow_impl
  %4 = call { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17hf4b384061ffd400cE(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false), !dbg !4117
  %5 = extractvalue { i8*, i64 } %4, 0, !dbg !4117
  %6 = extractvalue { i8*, i64 } %4, 1, !dbg !4117
  br label %bb1, !dbg !4117

bb1:                                              ; preds = %start
  %7 = insertvalue { i8*, i64 } undef, i8* %5, 0, !dbg !4118
  %8 = insertvalue { i8*, i64 } %7, i64 %6, 1, !dbg !4118
  ret { i8*, i64 } %8, !dbg !4118
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hd9f6b6db6286ec88E"(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !4119 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !4121, metadata !DIExpression()), !dbg !4123
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !4122, metadata !DIExpression()), !dbg !4124
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17heed9f1286d8c0c5fE(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false), !dbg !4125
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !4125
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !4125
  br label %bb1, !dbg !4125

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !4126
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !4126
  ret { i8*, i64 } %6, !dbg !4126
}

; <T as core::array::equality::SpecArrayEq<U,_>>::spec_eq
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h1bfe710c6ea46e74E"([2 x i32]* align 4 %a, [2 x i32]* align 4 %b) unnamed_addr #2 !dbg !4127 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill2 = alloca [2 x i32]*, align 8
  %self.dbg.spill1 = alloca i32*, align 8
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %b.dbg.spill = alloca [2 x i32]*, align 8
  %a.dbg.spill = alloca [2 x i32]*, align 8
  store [2 x i32]* %a, [2 x i32]** %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [2 x i32]** %a.dbg.spill, metadata !4130, metadata !DIExpression()), !dbg !4134
  store [2 x i32]* %b, [2 x i32]** %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [2 x i32]** %b.dbg.spill, metadata !4131, metadata !DIExpression()), !dbg !4135
  %self.0 = bitcast [2 x i32]* %b to [0 x i32]*, !dbg !4136
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !4136
  store [0 x i32]* %self.0, [0 x i32]** %1, align 8, !dbg !4136
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !4136
  store i64 2, i64* %2, align 8, !dbg !4136
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !4137, metadata !DIExpression()), !dbg !4141
  %self = bitcast [0 x i32]* %self.0 to i32*, !dbg !4141
  store i32* %self, i32** %self.dbg.spill1, align 8, !dbg !4141
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill1, metadata !4142, metadata !DIExpression()), !dbg !4150
  %_4 = bitcast i32* %self to [2 x i32]*, !dbg !4150
  store [2 x i32]* %_4, [2 x i32]** %b.dbg.spill2, align 8, !dbg !4151
  call void @llvm.dbg.declare(metadata [2 x i32]** %b.dbg.spill2, metadata !4132, metadata !DIExpression()), !dbg !4152
  %3 = bitcast [2 x i32]* %a to i64*, !dbg !4153
  %4 = load i64, i64* %3, align 4, !dbg !4153
  %5 = bitcast [2 x i32]* %_4 to i64*, !dbg !4153
  %6 = load i64, i64* %5, align 4, !dbg !4153
  %7 = icmp eq i64 %4, %6, !dbg !4153
  %8 = zext i1 %7 to i8, !dbg !4153
  store i8 %8, i8* %0, align 1, !dbg !4153
  %9 = load i8, i8* %0, align 1, !dbg !4153, !range !582, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !4153
  br label %bb1, !dbg !4153

bb1:                                              ; preds = %start
  ret i1 %10, !dbg !4154
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h70905a73bf71b336E"(%"alloc::vec::Vec<i32>"* align 8 %self) unnamed_addr #2 !dbg !4155 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill1 = alloca i32*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i32*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<i32>"*, align 8
  %_11 = alloca { i8*, i64 }, align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[i32]>", align 8
  store %"alloc::vec::Vec<i32>"* %self, %"alloc::vec::Vec<i32>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"** %self.dbg.spill, metadata !4160, metadata !DIExpression()), !dbg !4161
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %data = call i32* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h79b40160d0f7335fE"(%"alloc::vec::Vec<i32>"* align 8 %self), !dbg !4162
  store i32* %data, i32** %data.dbg.spill, align 8, !dbg !4162
  call void @llvm.dbg.declare(metadata i32** %data.dbg.spill, metadata !4163, metadata !DIExpression()), !dbg !4174
  br label %bb1, !dbg !4162

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<i32>", %"alloc::vec::Vec<i32>"* %self, i32 0, i32 1, !dbg !4176
  %len = load i64, i64* %0, align 8, !dbg !4176
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !4176
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !4173, metadata !DIExpression()), !dbg !4174
  store i32* %data, i32** %self.dbg.spill1, align 8, !dbg !4174
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill1, metadata !4177, metadata !DIExpression()), !dbg !4184
  %data_address = bitcast i32* %data to {}*, !dbg !4184
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !4184
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !4186, metadata !DIExpression()), !dbg !4193
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !4174
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !4192, metadata !DIExpression()), !dbg !4193
  %1 = bitcast { i8*, i64 }* %_11 to {}**, !dbg !4193
  store {}* %data_address, {}** %1, align 8, !dbg !4193
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !4193
  store i64 %len, i64* %2, align 8, !dbg !4193
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[i32]>"* %_10 to { i8*, i64 }*, !dbg !4193
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 0, !dbg !4193
  %5 = load i8*, i8** %4, align 8, !dbg !4193
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !4193
  %7 = load i64, i64* %6, align 8, !dbg !4193
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !4193
  store i8* %5, i8** %8, align 8, !dbg !4193
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !4193
  store i64 %7, i64* %9, align 8, !dbg !4193
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[i32]>"* %_10 to { [0 x i32]*, i64 }*, !dbg !4193
  %11 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %10, i32 0, i32 0, !dbg !4193
  %_2.0 = load [0 x i32]*, [0 x i32]** %11, align 8, !dbg !4193
  %12 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %10, i32 0, i32 1, !dbg !4193
  %_2.1 = load i64, i64* %12, align 8, !dbg !4193
  br label %bb2, !dbg !4195

bb2:                                              ; preds = %bb1
  ret void, !dbg !4196
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb421582263d5d1b2E"({ i32*, i64 }* align 8 %self) unnamed_addr #2 !dbg !4197 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !4202, metadata !DIExpression()), !dbg !4206
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hcddb728fa8c0a28bE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i32*, i64 }* align 8 %self), !dbg !4207
  br label %bb1, !dbg !4207

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1, !dbg !4208
  %1 = load i64, i64* %0, align 8, !dbg !4208, !range !277, !noundef !23
  %2 = icmp eq i64 %1, 0, !dbg !4208
  %_4 = select i1 %2, i64 0, i64 1, !dbg !4208
  %3 = icmp eq i64 %_4, 1, !dbg !4208
  br i1 %3, label %bb2, label %bb4, !dbg !4208

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !4209
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !4209
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !4209
  %ptr = load i8*, i8** %6, align 8, !dbg !4209, !nonnull !23, !noundef !23
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !4209
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !4203, metadata !DIExpression()), !dbg !4209
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !4210
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !4210
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !4210
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !4210
  %layout.0 = load i64, i64* %10, align 8, !dbg !4210
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !4210
  %layout.1 = load i64, i64* %11, align 8, !dbg !4210, !range !1290, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !4210
  store i64 %layout.0, i64* %12, align 8, !dbg !4210
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !4210
  store i64 %layout.1, i64* %13, align 8, !dbg !4210
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !4205, metadata !DIExpression()), !dbg !4210
  %_7 = bitcast { i32*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !4211
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h2cd896543431de43E"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1), !dbg !4211
  br label %bb3, !dbg !4211

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !4212

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !4213
}

; <alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN83_$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5f4f1e79ad2e8108E"({ i64*, i64 }* align 8 %self) unnamed_addr #0 !dbg !4214 {
start:
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !4219, metadata !DIExpression()), !dbg !4220
  %0 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !4221
  %_2 = load i64, i64* %0, align 8, !dbg !4221
  %1 = bitcast { i64*, i64 }* %self to i64**, !dbg !4222
  %_3 = load i64*, i64** %1, align 8, !dbg !4222, !nonnull !23, !align !336, !noundef !23
  store i64 %_2, i64* %_3, align 8, !dbg !4222
  ret void, !dbg !4223
}

; <alloc::vec::ExtendElement<T> as alloc::vec::ExtendWith<T>>::last
; Function Attrs: nonlazybind uwtable
define internal i32 @"_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4last17ha28606eb736bcb7bE"(i32 %self) unnamed_addr #2 !dbg !4224 {
start:
  %self.dbg.spill = alloca i32, align 4
  store i32 %self, i32* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill, metadata !4229, metadata !DIExpression()), !dbg !4230
  ret i32 %self, !dbg !4231
}

; <alloc::vec::ExtendElement<T> as alloc::vec::ExtendWith<T>>::next
; Function Attrs: nonlazybind uwtable
define internal i32 @"_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4next17h9f98ea69187512e2E"(i32* align 4 %self) unnamed_addr #2 !dbg !4232 {
start:
  %self.dbg.spill = alloca i32*, align 8
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !4237, metadata !DIExpression()), !dbg !4238
; call core::clone::impls::<impl core::clone::Clone for i32>::clone
  %0 = call i32 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i32$GT$5clone17h63aa2151c872ffb9E"(i32* align 4 %self), !dbg !4239
  br label %bb1, !dbg !4239

bb1:                                              ; preds = %start
  ret i32 %0, !dbg !4240
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h728e80b1bfdf1381E"({ i64, i64 }* align 8 %self) unnamed_addr #0 !dbg !4241 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !4244, metadata !DIExpression()), !dbg !4247
  %_3 = bitcast { i64, i64 }* %self to i64*, !dbg !4248
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !4249
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hbeede2e4dd026a93E"(i64* align 8 %_3, i64* align 8 %_4), !dbg !4248
  br label %bb1, !dbg !4248

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6, !dbg !4248

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !4250
  store i64 0, i64* %1, align 8, !dbg !4250
  br label %bb7, !dbg !4251

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*, !dbg !4252
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h53131a1e2f102773E"(i64* align 8 %_7), !dbg !4252
  br label %bb3, !dbg !4252

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hcad913c0659dde8dE"(i64 %_6, i64 1), !dbg !4253
  store i64 %n, i64* %n.dbg.spill, align 8, !dbg !4253
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !4245, metadata !DIExpression()), !dbg !4254
  br label %bb4, !dbg !4253

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i64, i64 }* %self to i64*, !dbg !4255
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17ha2dc615712323ff3E(i64* align 8 %_10, i64 %n), !dbg !4256
  br label %bb5, !dbg !4256

bb5:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4257
  store i64 %_8, i64* %2, align 8, !dbg !4257
  %3 = bitcast { i64, i64 }* %0 to i64*, !dbg !4257
  store i64 1, i64* %3, align 8, !dbg !4257
  br label %bb7, !dbg !4251

bb7:                                              ; preds = %bb6, %bb5
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4258
  %5 = load i64, i64* %4, align 8, !dbg !4258, !range !932, !noundef !23
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4258
  %7 = load i64, i64* %6, align 8, !dbg !4258
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0, !dbg !4258
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1, !dbg !4258
  ret { i64, i64 } %9, !dbg !4258
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 4 i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7353489ac595ce3aE"({ i32*, i32* }* align 8 %self) unnamed_addr #0 !dbg !4259 {
start:
  %self.dbg.spill26 = alloca i32*, align 8
  %0 = alloca i8*, align 8
  %self.dbg.spill24 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %self.dbg.spill22 = alloca i32*, align 8
  %self.dbg.spill21 = alloca i32*, align 8
  %old.dbg.spill = alloca i32*, align 8
  %self.dbg.spill19 = alloca i32*, align 8
  %self.dbg.spill17 = alloca { i32*, i32* }*, align 8
  %self.dbg.spill16 = alloca i32*, align 8
  %2 = alloca i8, align 1
  %other.dbg.spill14 = alloca i8*, align 8
  %data_address.dbg.spill12 = alloca {}*, align 8
  %3 = alloca {}*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %self.dbg.spill8 = alloca i32*, align 8
  %4 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %5 = alloca {}*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i32*, align 8
  %self.dbg.spill3 = alloca i32*, align 8
  %metadata.dbg.spill1 = alloca {}, align 1
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca { i32*, i32* }*, align 8
  %_62 = alloca i32*, align 8
  %_47 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_46 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_19 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store { i32*, i32* }* %self, { i32*, i32* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i32* }** %self.dbg.spill, metadata !4277, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !4279, metadata !DIExpression()), !dbg !4284
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill1, metadata !4293, metadata !DIExpression()), !dbg !4298
  %7 = bitcast { i32*, i32* }* %self to i32**, !dbg !4292
  %self2 = load i32*, i32** %7, align 8, !dbg !4292, !nonnull !23, !noundef !23
  store i32* %self2, i32** %self.dbg.spill3, align 8, !dbg !4292
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill3, metadata !4307, metadata !DIExpression()), !dbg !4311
  store i32* %self2, i32** %self.dbg.spill4, align 8, !dbg !4311
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill4, metadata !4290, metadata !DIExpression()), !dbg !4312
  %self5 = bitcast i32* %self2 to i8*, !dbg !4312
  store i8* %self5, i8** %self.dbg.spill6, align 8, !dbg !4312
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !4313, metadata !DIExpression()), !dbg !4318
  %8 = bitcast {}** %5 to i64*, !dbg !4320
  store i64 0, i64* %8, align 8, !dbg !4320
  %data_address = load {}*, {}** %5, align 8, !dbg !4320
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !4320
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !4283, metadata !DIExpression()), !dbg !4284
  br label %bb9, !dbg !4320

bb9:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to {}**, !dbg !4284
  store {}* %data_address, {}** %9, align 8, !dbg !4284
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !4284
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !4284
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to i8*, !dbg !4284
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !4284
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to i8**, !dbg !4284
  %other = load i8*, i8** %13, align 8, !dbg !4284
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !4284
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !4317, metadata !DIExpression()), !dbg !4318
  %14 = icmp eq i8* %self5, %other, !dbg !4318
  %15 = zext i1 %14 to i8, !dbg !4318
  store i8 %15, i8* %4, align 1, !dbg !4318
  %16 = load i8, i8* %4, align 1, !dbg !4318, !range !582, !noundef !23
  %_4 = trunc i8 %16 to i1, !dbg !4318
  br label %bb10, !dbg !4318

bb10:                                             ; preds = %bb9
  %_3 = xor i1 %_4, true, !dbg !4326
  call void @llvm.assume(i1 %_3), !dbg !4327
  br label %bb1, !dbg !4327

bb1:                                              ; preds = %bb10
  br i1 false, label %bb4, label %bb2, !dbg !4328

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !4329

bb2:                                              ; preds = %bb1
  %17 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1, !dbg !4306
  %self7 = load i32*, i32** %17, align 8, !dbg !4306
  store i32* %self7, i32** %self.dbg.spill8, align 8, !dbg !4306
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill8, metadata !4304, metadata !DIExpression()), !dbg !4330
  %self9 = bitcast i32* %self7 to i8*, !dbg !4330
  store i8* %self9, i8** %self.dbg.spill10, align 8, !dbg !4330
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !4331, metadata !DIExpression()), !dbg !4336
  %18 = bitcast {}** %3 to i64*, !dbg !4338
  store i64 0, i64* %18, align 8, !dbg !4338
  %data_address11 = load {}*, {}** %3, align 8, !dbg !4338
  store {}* %data_address11, {}** %data_address.dbg.spill12, align 8, !dbg !4338
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill12, metadata !4297, metadata !DIExpression()), !dbg !4298
  br label %bb11, !dbg !4338

bb11:                                             ; preds = %bb2
  %19 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to {}**, !dbg !4298
  store {}* %data_address11, {}** %19, align 8, !dbg !4298
  %20 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !4298
  %21 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %20 to i8*, !dbg !4298
  %22 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to i8*, !dbg !4298
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 8, i1 false), !dbg !4298
  %23 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to i8**, !dbg !4298
  %other13 = load i8*, i8** %23, align 8, !dbg !4298
  store i8* %other13, i8** %other.dbg.spill14, align 8, !dbg !4298
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill14, metadata !4335, metadata !DIExpression()), !dbg !4336
  %24 = icmp eq i8* %self9, %other13, !dbg !4336
  %25 = zext i1 %24 to i8, !dbg !4336
  store i8 %25, i8* %2, align 1, !dbg !4336
  %26 = load i8, i8* %2, align 1, !dbg !4336, !range !582, !noundef !23
  %_10 = trunc i8 %26 to i1, !dbg !4336
  br label %bb12, !dbg !4336

bb12:                                             ; preds = %bb11
  %_9 = xor i1 %_10, true, !dbg !4344
  call void @llvm.assume(i1 %_9), !dbg !4345
  br label %bb3, !dbg !4345

bb3:                                              ; preds = %bb12
  br label %bb5, !dbg !4329

bb5:                                              ; preds = %bb4, %bb3
  %27 = bitcast { i32*, i32* }* %self to i32**, !dbg !4346
  %self15 = load i32*, i32** %27, align 8, !dbg !4346, !nonnull !23, !noundef !23
  store i32* %self15, i32** %self.dbg.spill16, align 8, !dbg !4346
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill16, metadata !4347, metadata !DIExpression()), !dbg !4351
  %28 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1, !dbg !4346
  %_16 = load i32*, i32** %28, align 8, !dbg !4346
  %_12 = icmp eq i32* %self15, %_16, !dbg !4346
  br i1 %_12, label %bb6, label %bb7, !dbg !4346

bb7:                                              ; preds = %bb5
  store { i32*, i32* }* %self, { i32*, i32* }** %self.dbg.spill17, align 8, !dbg !4353
  call void @llvm.dbg.declare(metadata { i32*, i32* }** %self.dbg.spill17, metadata !4354, metadata !DIExpression()), !dbg !4362
  br i1 false, label %bb13, label %bb14, !dbg !4362

bb6:                                              ; preds = %bb5
  %29 = bitcast i32** %6 to {}**, !dbg !4364
  store {}* null, {}** %29, align 8, !dbg !4364
  br label %bb8, !dbg !4365

bb8:                                              ; preds = %bb15, %bb6
  %30 = load i32*, i32** %6, align 8, !dbg !4366, !align !446
  ret i32* %30, !dbg !4366

bb13:                                             ; preds = %bb7
  %31 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1, !dbg !4362
  %_56 = load i32*, i32** %31, align 8, !dbg !4362
  %self23 = bitcast i32* %_56 to i8*, !dbg !4362
  store i8* %self23, i8** %self.dbg.spill24, align 8, !dbg !4362
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill24, metadata !4367, metadata !DIExpression()), !dbg !4372
  %32 = getelementptr i8, i8* %self23, i64 -1, !dbg !4372
  store i8* %32, i8** %0, align 8, !dbg !4372
  %_54 = load i8*, i8** %0, align 8, !dbg !4372
  br label %bb16, !dbg !4372

bb14:                                             ; preds = %bb7
  %33 = bitcast { i32*, i32* }* %self to i32**, !dbg !4362
  %self18 = load i32*, i32** %33, align 8, !dbg !4362, !nonnull !23, !noundef !23
  store i32* %self18, i32** %self.dbg.spill19, align 8, !dbg !4362
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill19, metadata !4374, metadata !DIExpression()), !dbg !4378
  store i32* %self18, i32** %old.dbg.spill, align 8, !dbg !4378
  call void @llvm.dbg.declare(metadata i32** %old.dbg.spill, metadata !4360, metadata !DIExpression()), !dbg !4380
  %34 = bitcast { i32*, i32* }* %self to i32**, !dbg !4380
  %self20 = load i32*, i32** %34, align 8, !dbg !4380, !nonnull !23, !noundef !23
  store i32* %self20, i32** %self.dbg.spill21, align 8, !dbg !4380
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill21, metadata !4381, metadata !DIExpression()), !dbg !4385
  store i32* %self20, i32** %self.dbg.spill22, align 8, !dbg !4385
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill22, metadata !4387, metadata !DIExpression()), !dbg !4392
  %35 = getelementptr inbounds i32, i32* %self20, i64 1, !dbg !4392
  store i32* %35, i32** %1, align 8, !dbg !4392
  %_73 = load i32*, i32** %1, align 8, !dbg !4392
  br label %bb17, !dbg !4392

bb17:                                             ; preds = %bb14
  store i32* %_73, i32** %ptr.dbg.spill, align 8, !dbg !4392
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill, metadata !4393, metadata !DIExpression()), !dbg !4397
  store i32* %_73, i32** %_62, align 8, !dbg !4397
  %36 = bitcast { i32*, i32* }* %self to i32**, !dbg !4380
  %37 = load i32*, i32** %_62, align 8, !dbg !4380, !nonnull !23, !noundef !23
  store i32* %37, i32** %36, align 8, !dbg !4380
  store i32* %self18, i32** %_19, align 8, !dbg !4380
  br label %bb15, !dbg !4362

bb15:                                             ; preds = %bb16, %bb17
  %_18 = load i32*, i32** %_19, align 8, !dbg !4353
  store i32* %_18, i32** %6, align 8, !dbg !4399
  br label %bb8, !dbg !4365

bb16:                                             ; preds = %bb13
  %38 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1, !dbg !4362
  %39 = bitcast i8* %_54 to i32*, !dbg !4362
  store i32* %39, i32** %38, align 8, !dbg !4362
  %40 = bitcast { i32*, i32* }* %self to i32**, !dbg !4362
  %self25 = load i32*, i32** %40, align 8, !dbg !4362, !nonnull !23, !noundef !23
  store i32* %self25, i32** %self.dbg.spill26, align 8, !dbg !4362
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill26, metadata !4400, metadata !DIExpression()), !dbg !4404
  store i32* %self25, i32** %_19, align 8, !dbg !4362
  br label %bb15, !dbg !4362
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_event_queues_init(%"packed_arrays::event_queue_t"* %queues) unnamed_addr #2 !dbg !4406 {
start:
  %0 = alloca %"packed_arrays::event_queue_t"*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca %"packed_arrays::event_queue_t"*, align 8
  %queues.dbg.spill = alloca %"packed_arrays::event_queue_t"*, align 8
  store %"packed_arrays::event_queue_t"* %queues, %"packed_arrays::event_queue_t"** %queues.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"packed_arrays::event_queue_t"** %queues.dbg.spill, metadata !4419, metadata !DIExpression()), !dbg !4420
  store %"packed_arrays::event_queue_t"* %queues, %"packed_arrays::event_queue_t"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"packed_arrays::event_queue_t"** %self.dbg.spill.i, metadata !4421, metadata !DIExpression()), !dbg !4429
  store i64 0, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !4426, metadata !DIExpression()), !dbg !4431
  store %"packed_arrays::event_queue_t"* %queues, %"packed_arrays::event_queue_t"** %0, align 8, !dbg !4432
  %_3.i = load %"packed_arrays::event_queue_t"*, %"packed_arrays::event_queue_t"** %0, align 8, !dbg !4432
  br label %bb1, !dbg !4433

bb1:                                              ; preds = %start
  %1 = bitcast %"packed_arrays::event_queue_t"* %_3.i to %"packed_arrays::event_queue_t_Inner"*, !dbg !4434
  %2 = bitcast %"packed_arrays::event_queue_t_Inner"* %1 to i32*, !dbg !4434
  store i32 42, i32* %2, align 4, !dbg !4434
  ret void, !dbg !4435
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_entry(i32 %buffer_size, i32* %buffer) unnamed_addr #2 !dbg !4436 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i235 = alloca i64, align 8
  %self.dbg.spill.i236 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i232 = alloca i64, align 8
  %self.dbg.spill.i233 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i229 = alloca i64, align 8
  %self.dbg.spill.i230 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i226 = alloca i64, align 8
  %self.dbg.spill.i227 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %count.dbg.spill.i223 = alloca i64, align 8
  %self.dbg.spill.i224 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %count.dbg.spill.i220 = alloca i64, align 8
  %self.dbg.spill.i221 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %count.dbg.spill.i217 = alloca i64, align 8
  %self.dbg.spill.i218 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %count.dbg.spill.i214 = alloca i64, align 8
  %self.dbg.spill.i215 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %count.dbg.spill.i211 = alloca i64, align 8
  %self.dbg.spill.i212 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %count.dbg.spill.i208 = alloca i64, align 8
  %self.dbg.spill.i209 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %count.dbg.spill.i205 = alloca i64, align 8
  %self.dbg.spill.i206 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %count.dbg.spill.i202 = alloca i64, align 8
  %self.dbg.spill.i203 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %count.dbg.spill.i199 = alloca i64, align 8
  %self.dbg.spill.i200 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %count.dbg.spill.i196 = alloca i64, align 8
  %self.dbg.spill.i197 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %count.dbg.spill.i193 = alloca i64, align 8
  %self.dbg.spill.i194 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  %count.dbg.spill.i190 = alloca i64, align 8
  %self.dbg.spill.i191 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %count.dbg.spill.i187 = alloca i64, align 8
  %self.dbg.spill.i188 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %count.dbg.spill.i184 = alloca i64, align 8
  %self.dbg.spill.i185 = alloca i32*, align 8
  %18 = alloca i32*, align 8
  %count.dbg.spill.i181 = alloca i64, align 8
  %self.dbg.spill.i182 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  %count.dbg.spill.i178 = alloca i64, align 8
  %self.dbg.spill.i179 = alloca i32*, align 8
  %20 = alloca i32*, align 8
  %count.dbg.spill.i175 = alloca i64, align 8
  %self.dbg.spill.i176 = alloca i32*, align 8
  %21 = alloca i32*, align 8
  %count.dbg.spill.i172 = alloca i64, align 8
  %self.dbg.spill.i173 = alloca i32*, align 8
  %22 = alloca i32*, align 8
  %count.dbg.spill.i169 = alloca i64, align 8
  %self.dbg.spill.i170 = alloca i32*, align 8
  %23 = alloca i32*, align 8
  %count.dbg.spill.i166 = alloca i64, align 8
  %self.dbg.spill.i167 = alloca i32*, align 8
  %24 = alloca i32*, align 8
  %count.dbg.spill.i163 = alloca i64, align 8
  %self.dbg.spill.i164 = alloca i32*, align 8
  %25 = alloca i32*, align 8
  %count.dbg.spill.i160 = alloca i64, align 8
  %self.dbg.spill.i161 = alloca i32*, align 8
  %26 = alloca i32*, align 8
  %count.dbg.spill.i157 = alloca i64, align 8
  %self.dbg.spill.i158 = alloca i32*, align 8
  %27 = alloca i32*, align 8
  %count.dbg.spill.i154 = alloca i64, align 8
  %self.dbg.spill.i155 = alloca i32*, align 8
  %28 = alloca i32*, align 8
  %count.dbg.spill.i151 = alloca i64, align 8
  %self.dbg.spill.i152 = alloca i32*, align 8
  %29 = alloca i32*, align 8
  %count.dbg.spill.i148 = alloca i64, align 8
  %self.dbg.spill.i149 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  %count.dbg.spill.i145 = alloca i64, align 8
  %self.dbg.spill.i146 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  %count.dbg.spill.i142 = alloca i64, align 8
  %self.dbg.spill.i143 = alloca i32*, align 8
  %32 = alloca i32*, align 8
  %count.dbg.spill.i139 = alloca i64, align 8
  %self.dbg.spill.i140 = alloca i32*, align 8
  %33 = alloca i32*, align 8
  %count.dbg.spill.i136 = alloca i64, align 8
  %self.dbg.spill.i137 = alloca i32*, align 8
  %34 = alloca i32*, align 8
  %count.dbg.spill.i133 = alloca i64, align 8
  %self.dbg.spill.i134 = alloca i32*, align 8
  %35 = alloca i32*, align 8
  %count.dbg.spill.i130 = alloca i64, align 8
  %self.dbg.spill.i131 = alloca i32*, align 8
  %36 = alloca i32*, align 8
  %count.dbg.spill.i127 = alloca i64, align 8
  %self.dbg.spill.i128 = alloca i32*, align 8
  %37 = alloca i32*, align 8
  %count.dbg.spill.i124 = alloca i64, align 8
  %self.dbg.spill.i125 = alloca i32*, align 8
  %38 = alloca i32*, align 8
  %count.dbg.spill.i121 = alloca i64, align 8
  %self.dbg.spill.i122 = alloca i32*, align 8
  %39 = alloca i32*, align 8
  %count.dbg.spill.i118 = alloca i64, align 8
  %self.dbg.spill.i119 = alloca i32*, align 8
  %40 = alloca i32*, align 8
  %count.dbg.spill.i115 = alloca i64, align 8
  %self.dbg.spill.i116 = alloca i32*, align 8
  %41 = alloca i32*, align 8
  %count.dbg.spill.i112 = alloca i64, align 8
  %self.dbg.spill.i113 = alloca i32*, align 8
  %42 = alloca i32*, align 8
  %count.dbg.spill.i109 = alloca i64, align 8
  %self.dbg.spill.i110 = alloca i32*, align 8
  %43 = alloca i32*, align 8
  %count.dbg.spill.i106 = alloca i64, align 8
  %self.dbg.spill.i107 = alloca i32*, align 8
  %44 = alloca i32*, align 8
  %count.dbg.spill.i103 = alloca i64, align 8
  %self.dbg.spill.i104 = alloca i32*, align 8
  %45 = alloca i32*, align 8
  %count.dbg.spill.i100 = alloca i64, align 8
  %self.dbg.spill.i101 = alloca i32*, align 8
  %46 = alloca i32*, align 8
  %count.dbg.spill.i97 = alloca i64, align 8
  %self.dbg.spill.i98 = alloca i32*, align 8
  %47 = alloca i32*, align 8
  %count.dbg.spill.i94 = alloca i64, align 8
  %self.dbg.spill.i95 = alloca i32*, align 8
  %48 = alloca i32*, align 8
  %count.dbg.spill.i91 = alloca i64, align 8
  %self.dbg.spill.i92 = alloca i32*, align 8
  %49 = alloca i8*, align 8
  %count.dbg.spill.i88 = alloca i64, align 8
  %self.dbg.spill.i89 = alloca i8*, align 8
  %50 = alloca i8*, align 8
  %count.dbg.spill.i85 = alloca i64, align 8
  %self.dbg.spill.i86 = alloca i8*, align 8
  %51 = alloca i8*, align 8
  %count.dbg.spill.i82 = alloca i64, align 8
  %self.dbg.spill.i83 = alloca i8*, align 8
  %52 = alloca i8*, align 8
  %count.dbg.spill.i79 = alloca i64, align 8
  %self.dbg.spill.i80 = alloca i8*, align 8
  %53 = alloca i8*, align 8
  %count.dbg.spill.i76 = alloca i64, align 8
  %self.dbg.spill.i77 = alloca i8*, align 8
  %54 = alloca i8*, align 8
  %count.dbg.spill.i73 = alloca i64, align 8
  %self.dbg.spill.i74 = alloca i8*, align 8
  %55 = alloca i8*, align 8
  %count.dbg.spill.i70 = alloca i64, align 8
  %self.dbg.spill.i71 = alloca i8*, align 8
  %56 = alloca i8*, align 8
  %count.dbg.spill.i67 = alloca i64, align 8
  %self.dbg.spill.i68 = alloca i8*, align 8
  %57 = alloca i8*, align 8
  %count.dbg.spill.i64 = alloca i64, align 8
  %self.dbg.spill.i65 = alloca i8*, align 8
  %58 = alloca i8*, align 8
  %count.dbg.spill.i61 = alloca i64, align 8
  %self.dbg.spill.i62 = alloca i8*, align 8
  %59 = alloca i8*, align 8
  %count.dbg.spill.i58 = alloca i64, align 8
  %self.dbg.spill.i59 = alloca i8*, align 8
  %60 = alloca i8*, align 8
  %count.dbg.spill.i55 = alloca i64, align 8
  %self.dbg.spill.i56 = alloca i8*, align 8
  %61 = alloca i8*, align 8
  %count.dbg.spill.i52 = alloca i64, align 8
  %self.dbg.spill.i53 = alloca i8*, align 8
  %62 = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i8*, align 8
  %fresh48.dbg.spill = alloca i32, align 4
  %fresh47.dbg.spill = alloca i32, align 4
  %fresh46.dbg.spill = alloca i32, align 4
  %fresh45.dbg.spill = alloca i32, align 4
  %fresh44.dbg.spill = alloca i32, align 4
  %fresh43.dbg.spill = alloca i32, align 4
  %fresh42.dbg.spill = alloca i32, align 4
  %fresh41.dbg.spill = alloca i32, align 4
  %fresh40.dbg.spill = alloca i32, align 4
  %fresh39.dbg.spill = alloca i32, align 4
  %fresh38.dbg.spill = alloca i32, align 4
  %fresh37.dbg.spill = alloca i32, align 4
  %fresh36.dbg.spill = alloca i32, align 4
  %fresh35.dbg.spill = alloca i32, align 4
  %fresh34.dbg.spill = alloca i32, align 4
  %fresh33.dbg.spill = alloca i32, align 4
  %fresh32.dbg.spill = alloca i32, align 4
  %63 = alloca [1 x i32]*, align 8
  %fresh31.dbg.spill = alloca i32, align 4
  %fresh30.dbg.spill = alloca i32, align 4
  %fresh29.dbg.spill = alloca i32, align 4
  %64 = alloca [3 x i32]*, align 8
  %fresh28.dbg.spill = alloca i32, align 4
  %fresh27.dbg.spill = alloca i32, align 4
  %65 = alloca [2 x i32]*, align 8
  %fresh26.dbg.spill = alloca i32, align 4
  %fresh25.dbg.spill = alloca i32, align 4
  %fresh24.dbg.spill = alloca i32, align 4
  %fresh23.dbg.spill = alloca i32, align 4
  %fresh22.dbg.spill = alloca i32, align 4
  %fresh21.dbg.spill = alloca i32, align 4
  %fresh20.dbg.spill = alloca i32, align 4
  %66 = alloca [20 x i8]*, align 8
  %fresh19.dbg.spill = alloca i32, align 4
  %fresh18.dbg.spill = alloca i32, align 4
  %fresh17.dbg.spill = alloca i32, align 4
  %67 = alloca [3 x i8]*, align 8
  %fresh16.dbg.spill = alloca i32, align 4
  %fresh15.dbg.spill = alloca i32, align 4
  %fresh14.dbg.spill = alloca i32, align 4
  %fresh13.dbg.spill = alloca i32, align 4
  %68 = alloca [5 x i8]*, align 8
  %fresh12.dbg.spill = alloca i32, align 4
  %fresh11.dbg.spill = alloca i32, align 4
  %fresh10.dbg.spill = alloca i32, align 4
  %fresh9.dbg.spill = alloca i32, align 4
  %abcptr.dbg.spill = alloca i8*, align 8
  %fresh8.dbg.spill = alloca i32, align 4
  %fresh7.dbg.spill = alloca i32, align 4
  %fresh6.dbg.spill = alloca i32, align 4
  %fresh5.dbg.spill = alloca i32, align 4
  %fresh4.dbg.spill = alloca i32, align 4
  %fresh3.dbg.spill = alloca i32, align 4
  %fresh2.dbg.spill = alloca i32, align 4
  %fresh1.dbg.spill = alloca i32, align 4
  %fresh0.dbg.spill = alloca i32, align 4
  %69 = alloca [4 x i8]*, align 8
  %buffer.dbg.spill = alloca i32*, align 8
  %buffer_size.dbg.spill = alloca i32, align 4
  %past_end = alloca i8*, align 8
  %wide3 = alloca [1 x i32], align 4
  %wide2 = alloca [3 x i32], align 4
  %wide1 = alloca [2 x i32], align 4
  %too_short = alloca [20 x i8], align 1
  %too_long = alloca [3 x i8], align 1
  %init = alloca [5 x i8], align 1
  %part = alloca [2 x i8], align 1
  %def = alloca [3 x i8], align 1
  %abc = alloca [4 x i8], align 1
  %i = alloca i32, align 4
  %_15 = alloca { i8*, i32 }, align 8
  %arr3 = alloca [1 x { i8*, i32 }], align 8
  %arr2 = alloca [16 x i32], align 4
  %_4 = alloca [1 x i32], align 4
  %arr = alloca [1 x [1 x i32]], align 4
  store i32 %buffer_size, i32* %buffer_size.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_size.dbg.spill, metadata !4440, metadata !DIExpression()), !dbg !4590
  store i32* %buffer, i32** %buffer.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %buffer.dbg.spill, metadata !4441, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.declare(metadata [1 x [1 x i32]]* %arr, metadata !4442, metadata !DIExpression()), !dbg !4592
  call void @llvm.dbg.declare(metadata [16 x i32]* %arr2, metadata !4448, metadata !DIExpression()), !dbg !4593
  call void @llvm.dbg.declare(metadata [1 x { i8*, i32 }]* %arr3, metadata !4453, metadata !DIExpression()), !dbg !4594
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4460, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.declare(metadata [4 x i8]* %abc, metadata !4462, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.declare(metadata [3 x i8]* %def, metadata !4473, metadata !DIExpression()), !dbg !4597
  call void @llvm.dbg.declare(metadata [2 x i8]* %part, metadata !4482, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.declare(metadata [5 x i8]* %init, metadata !4499, metadata !DIExpression()), !dbg !4599
  call void @llvm.dbg.declare(metadata [3 x i8]* %too_long, metadata !4510, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.declare(metadata [20 x i8]* %too_short, metadata !4518, metadata !DIExpression()), !dbg !4601
  call void @llvm.dbg.declare(metadata [2 x i32]* %wide1, metadata !4537, metadata !DIExpression()), !dbg !4602
  call void @llvm.dbg.declare(metadata [3 x i32]* %wide2, metadata !4543, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.declare(metadata [1 x i32]* %wide3, metadata !4552, metadata !DIExpression()), !dbg !4604
  call void @llvm.dbg.declare(metadata i8** %past_end, metadata !4588, metadata !DIExpression()), !dbg !4605
  %70 = getelementptr inbounds [1 x i32], [1 x i32]* %_4, i64 0, i64 0, !dbg !4606
  store i32 1, i32* %70, align 4, !dbg !4606
  %71 = getelementptr inbounds [1 x [1 x i32]], [1 x [1 x i32]]* %arr, i64 0, i64 0, !dbg !4607
  %72 = bitcast [1 x i32]* %71 to i8*, !dbg !4607
  %73 = bitcast [1 x i32]* %_4 to i8*, !dbg !4607
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 4, i1 false), !dbg !4607
  %74 = getelementptr inbounds [1 x [1 x i32]], [1 x [1 x i32]]* %arr, i64 0, i64 0, !dbg !4608
  %75 = getelementptr inbounds [1 x i32], [1 x i32]* %74, i64 0, i64 0, !dbg !4608
  %76 = load i32, i32* %75, align 4, !dbg !4608
  %77 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %76, i32 9), !dbg !4608
  %_9.0 = extractvalue { i32, i1 } %77, 0, !dbg !4608
  %_9.1 = extractvalue { i32, i1 } %77, 1, !dbg !4608
  %78 = call i1 @llvm.expect.i1(i1 %_9.1, i1 false), !dbg !4608
  br i1 %78, label %panic, label %bb1, !dbg !4608

bb1:                                              ; preds = %start
  %79 = getelementptr inbounds [1 x [1 x i32]], [1 x [1 x i32]]* %arr, i64 0, i64 0, !dbg !4608
  %80 = getelementptr inbounds [1 x i32], [1 x i32]* %79, i64 0, i64 0, !dbg !4608
  store i32 %_9.0, i32* %80, align 4, !dbg !4608
  %81 = getelementptr inbounds [16 x i32], [16 x i32]* %arr2, i64 0, i64 0, !dbg !4609
  %82 = bitcast i32* %81 to i8*, !dbg !4609
  call void @llvm.memset.p0i8.i64(i8* align 4 %82, i8 0, i64 64, i1 false), !dbg !4609
  %83 = getelementptr inbounds [16 x i32], [16 x i32]* %arr2, i64 0, i64 15, !dbg !4610
  %84 = load i32, i32* %83, align 4, !dbg !4610
  %85 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %84, i32 9), !dbg !4610
  %_13.0 = extractvalue { i32, i1 } %85, 0, !dbg !4610
  %_13.1 = extractvalue { i32, i1 } %85, 1, !dbg !4610
  %86 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false), !dbg !4610
  br i1 %86, label %panic1, label %bb2, !dbg !4610

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc445 to %"core::panic::location::Location"*)) #15, !dbg !4608
  unreachable, !dbg !4608

bb2:                                              ; preds = %bb1
  %87 = getelementptr inbounds [16 x i32], [16 x i32]* %arr2, i64 0, i64 15, !dbg !4610
  store i32 %_13.0, i32* %87, align 4, !dbg !4610
  %88 = bitcast { i8*, i32 }* %_15 to i8**, !dbg !4611
  store i8* null, i8** %88, align 8, !dbg !4611
  %89 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %_15, i32 0, i32 1, !dbg !4611
  store i32 0, i32* %89, align 8, !dbg !4611
  %90 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %_15, i32 0, i32 0, !dbg !4612
  %91 = load i8*, i8** %90, align 8, !dbg !4612
  %92 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %_15, i32 0, i32 1, !dbg !4612
  %93 = load i32, i32* %92, align 8, !dbg !4612
  %94 = getelementptr inbounds [1 x { i8*, i32 }], [1 x { i8*, i32 }]* %arr3, i64 0, i64 0, !dbg !4612
  %95 = getelementptr inbounds [1 x { i8*, i32 }], [1 x { i8*, i32 }]* %arr3, i64 0, i64 1, !dbg !4612
  br label %repeat_loop_header, !dbg !4612

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc447 to %"core::panic::location::Location"*)) #15, !dbg !4610
  unreachable, !dbg !4610

repeat_loop_header:                               ; preds = %repeat_loop_body, %bb2
  %96 = phi { i8*, i32 }* [ %94, %bb2 ], [ %100, %repeat_loop_body ]
  %97 = icmp ne { i8*, i32 }* %96, %95
  br i1 %97, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  %98 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %96, i32 0, i32 0
  store i8* %91, i8** %98, align 8
  %99 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %96, i32 0, i32 1
  store i32 %93, i32* %99, align 8
  %100 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %96, i64 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  %101 = getelementptr inbounds [1 x { i8*, i32 }], [1 x { i8*, i32 }]* %arr3, i64 0, i64 0, !dbg !4613
  %102 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %101, i32 0, i32 1, !dbg !4613
  %103 = load i32, i32* %102, align 8, !dbg !4613
  %104 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %103, i32 9), !dbg !4613
  %_18.0 = extractvalue { i32, i1 } %104, 0, !dbg !4613
  %_18.1 = extractvalue { i32, i1 } %104, 1, !dbg !4613
  %105 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false), !dbg !4613
  br i1 %105, label %panic2, label %bb3, !dbg !4613

bb3:                                              ; preds = %repeat_loop_next
  %106 = getelementptr inbounds [1 x { i8*, i32 }], [1 x { i8*, i32 }]* %arr3, i64 0, i64 0, !dbg !4613
  %107 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %106, i32 0, i32 1, !dbg !4613
  store i32 %_18.0, i32* %107, align 8, !dbg !4613
  store i32 0, i32* %i, align 4, !dbg !4614
  store [4 x i8]* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc17, i32 0, i32 0), [4 x i8]** %69, align 8, !dbg !4615
  %_21 = load [4 x i8]*, [4 x i8]** %69, align 8, !dbg !4615, !nonnull !23, !align !506, !noundef !23
  br label %bb4, !dbg !4615

panic2:                                           ; preds = %repeat_loop_next
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc449 to %"core::panic::location::Location"*)) #15, !dbg !4613
  unreachable, !dbg !4613

bb4:                                              ; preds = %bb3
  %108 = bitcast [4 x i8]* %abc to i8*, !dbg !4616
  %109 = bitcast [4 x i8]* %_21 to i8*, !dbg !4616
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %108, i8* align 1 %109, i64 4, i1 false), !dbg !4616
  %fresh0 = load i32, i32* %i, align 4, !dbg !4617
  store i32 %fresh0, i32* %fresh0.dbg.spill, align 4, !dbg !4617
  call void @llvm.dbg.declare(metadata i32* %fresh0.dbg.spill, metadata !4465, metadata !DIExpression()), !dbg !4618
  %_25 = load i32, i32* %i, align 4, !dbg !4619
  %110 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_25, i32 1), !dbg !4619
  %_26.0 = extractvalue { i32, i1 } %110, 0, !dbg !4619
  %_26.1 = extractvalue { i32, i1 } %110, 1, !dbg !4619
  %111 = call i1 @llvm.expect.i1(i1 %_26.1, i1 false), !dbg !4619
  br i1 %111, label %panic3, label %bb5, !dbg !4619

bb5:                                              ; preds = %bb4
  store i32 %_26.0, i32* %i, align 4, !dbg !4620
  %112 = getelementptr inbounds [4 x i8], [4 x i8]* %abc, i64 0, i64 0, !dbg !4621
  %_27 = load i8, i8* %112, align 1, !dbg !4621
  %_31 = sext i32 %fresh0 to i64, !dbg !4622
  store i32* %buffer, i32** %self.dbg.spill.i236, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i236, metadata !4623, metadata !DIExpression()), !dbg !4627
  store i64 %_31, i64* %count.dbg.spill.i235, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i235, metadata !4626, metadata !DIExpression()), !dbg !4629
  %113 = getelementptr inbounds i32, i32* %buffer, i64 %_31, !dbg !4630
  store i32* %113, i32** %0, align 8, !dbg !4630
  %_3.i237 = load i32*, i32** %0, align 8, !dbg !4630
  br label %bb6, !dbg !4631

panic3:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc451 to %"core::panic::location::Location"*)) #15, !dbg !4619
  unreachable, !dbg !4619

bb6:                                              ; preds = %bb5
  %114 = sext i8 %_27 to i32, !dbg !4632
  store i32 %114, i32* %_3.i237, align 4, !dbg !4632
  %fresh1 = load i32, i32* %i, align 4, !dbg !4633
  store i32 %fresh1, i32* %fresh1.dbg.spill, align 4, !dbg !4633
  call void @llvm.dbg.declare(metadata i32* %fresh1.dbg.spill, metadata !4467, metadata !DIExpression()), !dbg !4634
  %_34 = load i32, i32* %i, align 4, !dbg !4635
  %115 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_34, i32 1), !dbg !4635
  %_35.0 = extractvalue { i32, i1 } %115, 0, !dbg !4635
  %_35.1 = extractvalue { i32, i1 } %115, 1, !dbg !4635
  %116 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !4635
  br i1 %116, label %panic4, label %bb7, !dbg !4635

bb7:                                              ; preds = %bb6
  store i32 %_35.0, i32* %i, align 4, !dbg !4636
  %117 = getelementptr inbounds [4 x i8], [4 x i8]* %abc, i64 0, i64 1, !dbg !4637
  %_36 = load i8, i8* %117, align 1, !dbg !4637
  %_40 = sext i32 %fresh1 to i64, !dbg !4638
  store i32* %buffer, i32** %self.dbg.spill.i233, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i233, metadata !4623, metadata !DIExpression()), !dbg !4639
  store i64 %_40, i64* %count.dbg.spill.i232, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i232, metadata !4626, metadata !DIExpression()), !dbg !4641
  %118 = getelementptr inbounds i32, i32* %buffer, i64 %_40, !dbg !4642
  store i32* %118, i32** %1, align 8, !dbg !4642
  %_3.i234 = load i32*, i32** %1, align 8, !dbg !4642
  br label %bb8, !dbg !4643

panic4:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc453 to %"core::panic::location::Location"*)) #15, !dbg !4635
  unreachable, !dbg !4635

bb8:                                              ; preds = %bb7
  %119 = sext i8 %_36 to i32, !dbg !4644
  store i32 %119, i32* %_3.i234, align 4, !dbg !4644
  %fresh2 = load i32, i32* %i, align 4, !dbg !4645
  store i32 %fresh2, i32* %fresh2.dbg.spill, align 4, !dbg !4645
  call void @llvm.dbg.declare(metadata i32* %fresh2.dbg.spill, metadata !4469, metadata !DIExpression()), !dbg !4646
  %_43 = load i32, i32* %i, align 4, !dbg !4647
  %120 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_43, i32 1), !dbg !4647
  %_44.0 = extractvalue { i32, i1 } %120, 0, !dbg !4647
  %_44.1 = extractvalue { i32, i1 } %120, 1, !dbg !4647
  %121 = call i1 @llvm.expect.i1(i1 %_44.1, i1 false), !dbg !4647
  br i1 %121, label %panic5, label %bb9, !dbg !4647

bb9:                                              ; preds = %bb8
  store i32 %_44.0, i32* %i, align 4, !dbg !4648
  %122 = getelementptr inbounds [4 x i8], [4 x i8]* %abc, i64 0, i64 2, !dbg !4649
  %_45 = load i8, i8* %122, align 1, !dbg !4649
  %_49 = sext i32 %fresh2 to i64, !dbg !4650
  store i32* %buffer, i32** %self.dbg.spill.i230, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i230, metadata !4623, metadata !DIExpression()), !dbg !4651
  store i64 %_49, i64* %count.dbg.spill.i229, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i229, metadata !4626, metadata !DIExpression()), !dbg !4653
  %123 = getelementptr inbounds i32, i32* %buffer, i64 %_49, !dbg !4654
  store i32* %123, i32** %2, align 8, !dbg !4654
  %_3.i231 = load i32*, i32** %2, align 8, !dbg !4654
  br label %bb10, !dbg !4655

panic5:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc455 to %"core::panic::location::Location"*)) #15, !dbg !4647
  unreachable, !dbg !4647

bb10:                                             ; preds = %bb9
  %124 = sext i8 %_45 to i32, !dbg !4656
  store i32 %124, i32* %_3.i231, align 4, !dbg !4656
  %fresh3 = load i32, i32* %i, align 4, !dbg !4657
  store i32 %fresh3, i32* %fresh3.dbg.spill, align 4, !dbg !4657
  call void @llvm.dbg.declare(metadata i32* %fresh3.dbg.spill, metadata !4471, metadata !DIExpression()), !dbg !4658
  %_52 = load i32, i32* %i, align 4, !dbg !4659
  %125 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_52, i32 1), !dbg !4659
  %_53.0 = extractvalue { i32, i1 } %125, 0, !dbg !4659
  %_53.1 = extractvalue { i32, i1 } %125, 1, !dbg !4659
  %126 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !4659
  br i1 %126, label %panic6, label %bb11, !dbg !4659

bb11:                                             ; preds = %bb10
  store i32 %_53.0, i32* %i, align 4, !dbg !4660
  %127 = getelementptr inbounds [4 x i8], [4 x i8]* %abc, i64 0, i64 3, !dbg !4661
  %_54 = load i8, i8* %127, align 1, !dbg !4661
  %_58 = sext i32 %fresh3 to i64, !dbg !4662
  store i32* %buffer, i32** %self.dbg.spill.i227, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i227, metadata !4623, metadata !DIExpression()), !dbg !4663
  store i64 %_58, i64* %count.dbg.spill.i226, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i226, metadata !4626, metadata !DIExpression()), !dbg !4665
  %128 = getelementptr inbounds i32, i32* %buffer, i64 %_58, !dbg !4666
  store i32* %128, i32** %3, align 8, !dbg !4666
  %_3.i228 = load i32*, i32** %3, align 8, !dbg !4666
  br label %bb12, !dbg !4667

panic6:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc457 to %"core::panic::location::Location"*)) #15, !dbg !4659
  unreachable, !dbg !4659

bb12:                                             ; preds = %bb11
  %129 = sext i8 %_54 to i32, !dbg !4668
  store i32 %129, i32* %_3.i228, align 4, !dbg !4668
  %130 = getelementptr inbounds [3 x i8], [3 x i8]* %def, i64 0, i64 0, !dbg !4669
  store i8 100, i8* %130, align 1, !dbg !4669
  %131 = getelementptr inbounds [3 x i8], [3 x i8]* %def, i64 0, i64 1, !dbg !4669
  store i8 101, i8* %131, align 1, !dbg !4669
  %132 = getelementptr inbounds [3 x i8], [3 x i8]* %def, i64 0, i64 2, !dbg !4669
  store i8 102, i8* %132, align 1, !dbg !4669
  %fresh4 = load i32, i32* %i, align 4, !dbg !4670
  store i32 %fresh4, i32* %fresh4.dbg.spill, align 4, !dbg !4670
  call void @llvm.dbg.declare(metadata i32* %fresh4.dbg.spill, metadata !4476, metadata !DIExpression()), !dbg !4671
  %_65 = load i32, i32* %i, align 4, !dbg !4672
  %133 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_65, i32 1), !dbg !4672
  %_66.0 = extractvalue { i32, i1 } %133, 0, !dbg !4672
  %_66.1 = extractvalue { i32, i1 } %133, 1, !dbg !4672
  %134 = call i1 @llvm.expect.i1(i1 %_66.1, i1 false), !dbg !4672
  br i1 %134, label %panic7, label %bb13, !dbg !4672

bb13:                                             ; preds = %bb12
  store i32 %_66.0, i32* %i, align 4, !dbg !4673
  %135 = getelementptr inbounds [3 x i8], [3 x i8]* %def, i64 0, i64 0, !dbg !4674
  %_67 = load i8, i8* %135, align 1, !dbg !4674
  %_71 = sext i32 %fresh4 to i64, !dbg !4675
  store i32* %buffer, i32** %self.dbg.spill.i224, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i224, metadata !4623, metadata !DIExpression()), !dbg !4676
  store i64 %_71, i64* %count.dbg.spill.i223, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i223, metadata !4626, metadata !DIExpression()), !dbg !4678
  %136 = getelementptr inbounds i32, i32* %buffer, i64 %_71, !dbg !4679
  store i32* %136, i32** %4, align 8, !dbg !4679
  %_3.i225 = load i32*, i32** %4, align 8, !dbg !4679
  br label %bb14, !dbg !4680

panic7:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc459 to %"core::panic::location::Location"*)) #15, !dbg !4672
  unreachable, !dbg !4672

bb14:                                             ; preds = %bb13
  %137 = sext i8 %_67 to i32, !dbg !4681
  store i32 %137, i32* %_3.i225, align 4, !dbg !4681
  %fresh5 = load i32, i32* %i, align 4, !dbg !4682
  store i32 %fresh5, i32* %fresh5.dbg.spill, align 4, !dbg !4682
  call void @llvm.dbg.declare(metadata i32* %fresh5.dbg.spill, metadata !4478, metadata !DIExpression()), !dbg !4683
  %_74 = load i32, i32* %i, align 4, !dbg !4684
  %138 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_74, i32 1), !dbg !4684
  %_75.0 = extractvalue { i32, i1 } %138, 0, !dbg !4684
  %_75.1 = extractvalue { i32, i1 } %138, 1, !dbg !4684
  %139 = call i1 @llvm.expect.i1(i1 %_75.1, i1 false), !dbg !4684
  br i1 %139, label %panic8, label %bb15, !dbg !4684

bb15:                                             ; preds = %bb14
  store i32 %_75.0, i32* %i, align 4, !dbg !4685
  %140 = getelementptr inbounds [3 x i8], [3 x i8]* %def, i64 0, i64 1, !dbg !4686
  %_76 = load i8, i8* %140, align 1, !dbg !4686
  %_80 = sext i32 %fresh5 to i64, !dbg !4687
  store i32* %buffer, i32** %self.dbg.spill.i221, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i221, metadata !4623, metadata !DIExpression()), !dbg !4688
  store i64 %_80, i64* %count.dbg.spill.i220, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i220, metadata !4626, metadata !DIExpression()), !dbg !4690
  %141 = getelementptr inbounds i32, i32* %buffer, i64 %_80, !dbg !4691
  store i32* %141, i32** %5, align 8, !dbg !4691
  %_3.i222 = load i32*, i32** %5, align 8, !dbg !4691
  br label %bb16, !dbg !4692

panic8:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc461 to %"core::panic::location::Location"*)) #15, !dbg !4684
  unreachable, !dbg !4684

bb16:                                             ; preds = %bb15
  %142 = sext i8 %_76 to i32, !dbg !4693
  store i32 %142, i32* %_3.i222, align 4, !dbg !4693
  %fresh6 = load i32, i32* %i, align 4, !dbg !4694
  store i32 %fresh6, i32* %fresh6.dbg.spill, align 4, !dbg !4694
  call void @llvm.dbg.declare(metadata i32* %fresh6.dbg.spill, metadata !4480, metadata !DIExpression()), !dbg !4695
  %_83 = load i32, i32* %i, align 4, !dbg !4696
  %143 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_83, i32 1), !dbg !4696
  %_84.0 = extractvalue { i32, i1 } %143, 0, !dbg !4696
  %_84.1 = extractvalue { i32, i1 } %143, 1, !dbg !4696
  %144 = call i1 @llvm.expect.i1(i1 %_84.1, i1 false), !dbg !4696
  br i1 %144, label %panic9, label %bb17, !dbg !4696

bb17:                                             ; preds = %bb16
  store i32 %_84.0, i32* %i, align 4, !dbg !4697
  %145 = getelementptr inbounds [3 x i8], [3 x i8]* %def, i64 0, i64 2, !dbg !4698
  %_85 = load i8, i8* %145, align 1, !dbg !4698
  %_89 = sext i32 %fresh6 to i64, !dbg !4699
  store i32* %buffer, i32** %self.dbg.spill.i218, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i218, metadata !4623, metadata !DIExpression()), !dbg !4700
  store i64 %_89, i64* %count.dbg.spill.i217, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i217, metadata !4626, metadata !DIExpression()), !dbg !4702
  %146 = getelementptr inbounds i32, i32* %buffer, i64 %_89, !dbg !4703
  store i32* %146, i32** %6, align 8, !dbg !4703
  %_3.i219 = load i32*, i32** %6, align 8, !dbg !4703
  br label %bb18, !dbg !4704

panic9:                                           ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc463 to %"core::panic::location::Location"*)) #15, !dbg !4696
  unreachable, !dbg !4696

bb18:                                             ; preds = %bb17
  %147 = sext i8 %_85 to i32, !dbg !4705
  store i32 %147, i32* %_3.i219, align 4, !dbg !4705
  %148 = getelementptr inbounds [2 x i8], [2 x i8]* %part, i64 0, i64 0, !dbg !4706
  store i8 1, i8* %148, align 1, !dbg !4706
  %149 = getelementptr inbounds [2 x i8], [2 x i8]* %part, i64 0, i64 1, !dbg !4706
  store i8 0, i8* %149, align 1, !dbg !4706
  %fresh7 = load i32, i32* %i, align 4, !dbg !4707
  store i32 %fresh7, i32* %fresh7.dbg.spill, align 4, !dbg !4707
  call void @llvm.dbg.declare(metadata i32* %fresh7.dbg.spill, metadata !4485, metadata !DIExpression()), !dbg !4708
  %_94 = load i32, i32* %i, align 4, !dbg !4709
  %150 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_94, i32 1), !dbg !4709
  %_95.0 = extractvalue { i32, i1 } %150, 0, !dbg !4709
  %_95.1 = extractvalue { i32, i1 } %150, 1, !dbg !4709
  %151 = call i1 @llvm.expect.i1(i1 %_95.1, i1 false), !dbg !4709
  br i1 %151, label %panic10, label %bb19, !dbg !4709

bb19:                                             ; preds = %bb18
  store i32 %_95.0, i32* %i, align 4, !dbg !4710
  %152 = getelementptr inbounds [2 x i8], [2 x i8]* %part, i64 0, i64 0, !dbg !4711
  %_96 = load i8, i8* %152, align 1, !dbg !4711
  %_100 = sext i32 %fresh7 to i64, !dbg !4712
  store i32* %buffer, i32** %self.dbg.spill.i215, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i215, metadata !4623, metadata !DIExpression()), !dbg !4713
  store i64 %_100, i64* %count.dbg.spill.i214, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i214, metadata !4626, metadata !DIExpression()), !dbg !4715
  %153 = getelementptr inbounds i32, i32* %buffer, i64 %_100, !dbg !4716
  store i32* %153, i32** %7, align 8, !dbg !4716
  %_3.i216 = load i32*, i32** %7, align 8, !dbg !4716
  br label %bb20, !dbg !4717

panic10:                                          ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc465 to %"core::panic::location::Location"*)) #15, !dbg !4709
  unreachable, !dbg !4709

bb20:                                             ; preds = %bb19
  %154 = sext i8 %_96 to i32, !dbg !4718
  store i32 %154, i32* %_3.i216, align 4, !dbg !4718
  %fresh8 = load i32, i32* %i, align 4, !dbg !4719
  store i32 %fresh8, i32* %fresh8.dbg.spill, align 4, !dbg !4719
  call void @llvm.dbg.declare(metadata i32* %fresh8.dbg.spill, metadata !4487, metadata !DIExpression()), !dbg !4720
  %_103 = load i32, i32* %i, align 4, !dbg !4721
  %155 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_103, i32 1), !dbg !4721
  %_104.0 = extractvalue { i32, i1 } %155, 0, !dbg !4721
  %_104.1 = extractvalue { i32, i1 } %155, 1, !dbg !4721
  %156 = call i1 @llvm.expect.i1(i1 %_104.1, i1 false), !dbg !4721
  br i1 %156, label %panic11, label %bb21, !dbg !4721

bb21:                                             ; preds = %bb20
  store i32 %_104.0, i32* %i, align 4, !dbg !4722
  %157 = getelementptr inbounds [2 x i8], [2 x i8]* %part, i64 0, i64 1, !dbg !4723
  %_105 = load i8, i8* %157, align 1, !dbg !4723
  %_109 = sext i32 %fresh8 to i64, !dbg !4724
  store i32* %buffer, i32** %self.dbg.spill.i212, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i212, metadata !4623, metadata !DIExpression()), !dbg !4725
  store i64 %_109, i64* %count.dbg.spill.i211, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i211, metadata !4626, metadata !DIExpression()), !dbg !4727
  %158 = getelementptr inbounds i32, i32* %buffer, i64 %_109, !dbg !4728
  store i32* %158, i32** %8, align 8, !dbg !4728
  %_3.i213 = load i32*, i32** %8, align 8, !dbg !4728
  br label %bb22, !dbg !4729

panic11:                                          ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc467 to %"core::panic::location::Location"*)) #15, !dbg !4721
  unreachable, !dbg !4721

bb22:                                             ; preds = %bb21
  %159 = sext i8 %_105 to i32, !dbg !4730
  store i32 %159, i32* %_3.i213, align 4, !dbg !4730
  store i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc17, i32 0, i32 0, i32 0), i8** %abcptr.dbg.spill, align 8, !dbg !4731
  call void @llvm.dbg.declare(metadata i8** %abcptr.dbg.spill, metadata !4489, metadata !DIExpression()), !dbg !4732
  %fresh9 = load i32, i32* %i, align 4, !dbg !4733
  store i32 %fresh9, i32* %fresh9.dbg.spill, align 4, !dbg !4733
  call void @llvm.dbg.declare(metadata i32* %fresh9.dbg.spill, metadata !4491, metadata !DIExpression()), !dbg !4734
  %_117 = load i32, i32* %i, align 4, !dbg !4735
  %160 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_117, i32 1), !dbg !4735
  %_118.0 = extractvalue { i32, i1 } %160, 0, !dbg !4735
  %_118.1 = extractvalue { i32, i1 } %160, 1, !dbg !4735
  %161 = call i1 @llvm.expect.i1(i1 %_118.1, i1 false), !dbg !4735
  br i1 %161, label %panic12, label %bb23, !dbg !4735

bb23:                                             ; preds = %bb22
  store i32 %_118.0, i32* %i, align 4, !dbg !4736
  store i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc17, i32 0, i32 0, i32 0), i8** %self.dbg.spill.i89, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i89, metadata !4737, metadata !DIExpression()), !dbg !4743
  store i64 0, i64* %count.dbg.spill.i88, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i88, metadata !4742, metadata !DIExpression()), !dbg !4745
  store i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc17, i32 0, i32 0, i32 0), i8** %49, align 8, !dbg !4746
  %_3.i90 = load i8*, i8** %49, align 8, !dbg !4746
  br label %bb24, !dbg !4747

panic12:                                          ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc469 to %"core::panic::location::Location"*)) #15, !dbg !4735
  unreachable, !dbg !4735

bb24:                                             ; preds = %bb23
  %_119 = load i8, i8* %_3.i90, align 1, !dbg !4748
  %_125 = sext i32 %fresh9 to i64, !dbg !4749
  store i32* %buffer, i32** %self.dbg.spill.i209, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i209, metadata !4623, metadata !DIExpression()), !dbg !4750
  store i64 %_125, i64* %count.dbg.spill.i208, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i208, metadata !4626, metadata !DIExpression()), !dbg !4752
  %162 = getelementptr inbounds i32, i32* %buffer, i64 %_125, !dbg !4753
  store i32* %162, i32** %9, align 8, !dbg !4753
  %_3.i210 = load i32*, i32** %9, align 8, !dbg !4753
  br label %bb25, !dbg !4754

bb25:                                             ; preds = %bb24
  %163 = sext i8 %_119 to i32, !dbg !4755
  store i32 %163, i32* %_3.i210, align 4, !dbg !4755
  %fresh10 = load i32, i32* %i, align 4, !dbg !4756
  store i32 %fresh10, i32* %fresh10.dbg.spill, align 4, !dbg !4756
  call void @llvm.dbg.declare(metadata i32* %fresh10.dbg.spill, metadata !4493, metadata !DIExpression()), !dbg !4757
  %_128 = load i32, i32* %i, align 4, !dbg !4758
  %164 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_128, i32 1), !dbg !4758
  %_129.0 = extractvalue { i32, i1 } %164, 0, !dbg !4758
  %_129.1 = extractvalue { i32, i1 } %164, 1, !dbg !4758
  %165 = call i1 @llvm.expect.i1(i1 %_129.1, i1 false), !dbg !4758
  br i1 %165, label %panic13, label %bb26, !dbg !4758

bb26:                                             ; preds = %bb25
  store i32 %_129.0, i32* %i, align 4, !dbg !4759
  store i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc17, i32 0, i32 0, i32 0), i8** %self.dbg.spill.i86, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i86, metadata !4737, metadata !DIExpression()), !dbg !4760
  store i64 1, i64* %count.dbg.spill.i85, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i85, metadata !4742, metadata !DIExpression()), !dbg !4762
  store i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc17, i64 0, i32 0, i64 1), i8** %50, align 8, !dbg !4763
  %_3.i87 = load i8*, i8** %50, align 8, !dbg !4763
  br label %bb27, !dbg !4764

panic13:                                          ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc471 to %"core::panic::location::Location"*)) #15, !dbg !4758
  unreachable, !dbg !4758

bb27:                                             ; preds = %bb26
  %_130 = load i8, i8* %_3.i87, align 1, !dbg !4765
  %_136 = sext i32 %fresh10 to i64, !dbg !4766
  store i32* %buffer, i32** %self.dbg.spill.i206, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i206, metadata !4623, metadata !DIExpression()), !dbg !4767
  store i64 %_136, i64* %count.dbg.spill.i205, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i205, metadata !4626, metadata !DIExpression()), !dbg !4769
  %166 = getelementptr inbounds i32, i32* %buffer, i64 %_136, !dbg !4770
  store i32* %166, i32** %10, align 8, !dbg !4770
  %_3.i207 = load i32*, i32** %10, align 8, !dbg !4770
  br label %bb28, !dbg !4771

bb28:                                             ; preds = %bb27
  %167 = sext i8 %_130 to i32, !dbg !4772
  store i32 %167, i32* %_3.i207, align 4, !dbg !4772
  %fresh11 = load i32, i32* %i, align 4, !dbg !4773
  store i32 %fresh11, i32* %fresh11.dbg.spill, align 4, !dbg !4773
  call void @llvm.dbg.declare(metadata i32* %fresh11.dbg.spill, metadata !4495, metadata !DIExpression()), !dbg !4774
  %_139 = load i32, i32* %i, align 4, !dbg !4775
  %168 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_139, i32 1), !dbg !4775
  %_140.0 = extractvalue { i32, i1 } %168, 0, !dbg !4775
  %_140.1 = extractvalue { i32, i1 } %168, 1, !dbg !4775
  %169 = call i1 @llvm.expect.i1(i1 %_140.1, i1 false), !dbg !4775
  br i1 %169, label %panic14, label %bb29, !dbg !4775

bb29:                                             ; preds = %bb28
  store i32 %_140.0, i32* %i, align 4, !dbg !4776
  store i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc17, i32 0, i32 0, i32 0), i8** %self.dbg.spill.i83, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i83, metadata !4737, metadata !DIExpression()), !dbg !4777
  store i64 2, i64* %count.dbg.spill.i82, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i82, metadata !4742, metadata !DIExpression()), !dbg !4779
  store i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc17, i64 0, i32 0, i64 2), i8** %51, align 8, !dbg !4780
  %_3.i84 = load i8*, i8** %51, align 8, !dbg !4780
  br label %bb30, !dbg !4781

panic14:                                          ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc473 to %"core::panic::location::Location"*)) #15, !dbg !4775
  unreachable, !dbg !4775

bb30:                                             ; preds = %bb29
  %_141 = load i8, i8* %_3.i84, align 1, !dbg !4782
  %_147 = sext i32 %fresh11 to i64, !dbg !4783
  store i32* %buffer, i32** %self.dbg.spill.i203, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i203, metadata !4623, metadata !DIExpression()), !dbg !4784
  store i64 %_147, i64* %count.dbg.spill.i202, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i202, metadata !4626, metadata !DIExpression()), !dbg !4786
  %170 = getelementptr inbounds i32, i32* %buffer, i64 %_147, !dbg !4787
  store i32* %170, i32** %11, align 8, !dbg !4787
  %_3.i204 = load i32*, i32** %11, align 8, !dbg !4787
  br label %bb31, !dbg !4788

bb31:                                             ; preds = %bb30
  %171 = sext i8 %_141 to i32, !dbg !4789
  store i32 %171, i32* %_3.i204, align 4, !dbg !4789
  %fresh12 = load i32, i32* %i, align 4, !dbg !4790
  store i32 %fresh12, i32* %fresh12.dbg.spill, align 4, !dbg !4790
  call void @llvm.dbg.declare(metadata i32* %fresh12.dbg.spill, metadata !4497, metadata !DIExpression()), !dbg !4791
  %_150 = load i32, i32* %i, align 4, !dbg !4792
  %172 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_150, i32 1), !dbg !4792
  %_151.0 = extractvalue { i32, i1 } %172, 0, !dbg !4792
  %_151.1 = extractvalue { i32, i1 } %172, 1, !dbg !4792
  %173 = call i1 @llvm.expect.i1(i1 %_151.1, i1 false), !dbg !4792
  br i1 %173, label %panic15, label %bb32, !dbg !4792

bb32:                                             ; preds = %bb31
  store i32 %_151.0, i32* %i, align 4, !dbg !4793
  store i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc17, i32 0, i32 0, i32 0), i8** %self.dbg.spill.i80, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i80, metadata !4737, metadata !DIExpression()), !dbg !4794
  store i64 3, i64* %count.dbg.spill.i79, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i79, metadata !4742, metadata !DIExpression()), !dbg !4796
  store i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc17, i64 0, i32 0, i64 3), i8** %52, align 8, !dbg !4797
  %_3.i81 = load i8*, i8** %52, align 8, !dbg !4797
  br label %bb33, !dbg !4798

panic15:                                          ; preds = %bb31
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*)) #15, !dbg !4792
  unreachable, !dbg !4792

bb33:                                             ; preds = %bb32
  %_152 = load i8, i8* %_3.i81, align 1, !dbg !4799
  %_158 = sext i32 %fresh12 to i64, !dbg !4800
  store i32* %buffer, i32** %self.dbg.spill.i200, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i200, metadata !4623, metadata !DIExpression()), !dbg !4801
  store i64 %_158, i64* %count.dbg.spill.i199, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i199, metadata !4626, metadata !DIExpression()), !dbg !4803
  %174 = getelementptr inbounds i32, i32* %buffer, i64 %_158, !dbg !4804
  store i32* %174, i32** %12, align 8, !dbg !4804
  %_3.i201 = load i32*, i32** %12, align 8, !dbg !4804
  br label %bb34, !dbg !4805

bb34:                                             ; preds = %bb33
  %175 = sext i8 %_152 to i32, !dbg !4806
  store i32 %175, i32* %_3.i201, align 4, !dbg !4806
  store [5 x i8]* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc18, i32 0, i32 0), [5 x i8]** %68, align 8, !dbg !4807
  %_161 = load [5 x i8]*, [5 x i8]** %68, align 8, !dbg !4807, !nonnull !23, !align !506, !noundef !23
  br label %bb35, !dbg !4807

bb35:                                             ; preds = %bb34
  %176 = bitcast [5 x i8]* %init to i8*, !dbg !4808
  %177 = bitcast [5 x i8]* %_161 to i8*, !dbg !4808
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %176, i8* align 1 %177, i64 5, i1 false), !dbg !4808
  %fresh13 = load i32, i32* %i, align 4, !dbg !4809
  store i32 %fresh13, i32* %fresh13.dbg.spill, align 4, !dbg !4809
  call void @llvm.dbg.declare(metadata i32* %fresh13.dbg.spill, metadata !4502, metadata !DIExpression()), !dbg !4810
  %_165 = load i32, i32* %i, align 4, !dbg !4811
  %178 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_165, i32 1), !dbg !4811
  %_166.0 = extractvalue { i32, i1 } %178, 0, !dbg !4811
  %_166.1 = extractvalue { i32, i1 } %178, 1, !dbg !4811
  %179 = call i1 @llvm.expect.i1(i1 %_166.1, i1 false), !dbg !4811
  br i1 %179, label %panic16, label %bb36, !dbg !4811

bb36:                                             ; preds = %bb35
  store i32 %_166.0, i32* %i, align 4, !dbg !4812
  %180 = getelementptr inbounds [5 x i8], [5 x i8]* %init, i64 0, i64 0, !dbg !4813
  %_167 = load i8, i8* %180, align 1, !dbg !4813
  %_171 = sext i32 %fresh13 to i64, !dbg !4814
  store i32* %buffer, i32** %self.dbg.spill.i197, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i197, metadata !4623, metadata !DIExpression()), !dbg !4815
  store i64 %_171, i64* %count.dbg.spill.i196, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i196, metadata !4626, metadata !DIExpression()), !dbg !4817
  %181 = getelementptr inbounds i32, i32* %buffer, i64 %_171, !dbg !4818
  store i32* %181, i32** %13, align 8, !dbg !4818
  %_3.i198 = load i32*, i32** %13, align 8, !dbg !4818
  br label %bb37, !dbg !4819

panic16:                                          ; preds = %bb35
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc477 to %"core::panic::location::Location"*)) #15, !dbg !4811
  unreachable, !dbg !4811

bb37:                                             ; preds = %bb36
  %182 = sext i8 %_167 to i32, !dbg !4820
  store i32 %182, i32* %_3.i198, align 4, !dbg !4820
  %fresh14 = load i32, i32* %i, align 4, !dbg !4821
  store i32 %fresh14, i32* %fresh14.dbg.spill, align 4, !dbg !4821
  call void @llvm.dbg.declare(metadata i32* %fresh14.dbg.spill, metadata !4504, metadata !DIExpression()), !dbg !4822
  %_174 = load i32, i32* %i, align 4, !dbg !4823
  %183 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_174, i32 1), !dbg !4823
  %_175.0 = extractvalue { i32, i1 } %183, 0, !dbg !4823
  %_175.1 = extractvalue { i32, i1 } %183, 1, !dbg !4823
  %184 = call i1 @llvm.expect.i1(i1 %_175.1, i1 false), !dbg !4823
  br i1 %184, label %panic17, label %bb38, !dbg !4823

bb38:                                             ; preds = %bb37
  store i32 %_175.0, i32* %i, align 4, !dbg !4824
  %185 = getelementptr inbounds [5 x i8], [5 x i8]* %init, i64 0, i64 1, !dbg !4825
  %_176 = load i8, i8* %185, align 1, !dbg !4825
  %_180 = sext i32 %fresh14 to i64, !dbg !4826
  store i32* %buffer, i32** %self.dbg.spill.i194, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i194, metadata !4623, metadata !DIExpression()), !dbg !4827
  store i64 %_180, i64* %count.dbg.spill.i193, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i193, metadata !4626, metadata !DIExpression()), !dbg !4829
  %186 = getelementptr inbounds i32, i32* %buffer, i64 %_180, !dbg !4830
  store i32* %186, i32** %14, align 8, !dbg !4830
  %_3.i195 = load i32*, i32** %14, align 8, !dbg !4830
  br label %bb39, !dbg !4831

panic17:                                          ; preds = %bb37
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc479 to %"core::panic::location::Location"*)) #15, !dbg !4823
  unreachable, !dbg !4823

bb39:                                             ; preds = %bb38
  %187 = sext i8 %_176 to i32, !dbg !4832
  store i32 %187, i32* %_3.i195, align 4, !dbg !4832
  %fresh15 = load i32, i32* %i, align 4, !dbg !4833
  store i32 %fresh15, i32* %fresh15.dbg.spill, align 4, !dbg !4833
  call void @llvm.dbg.declare(metadata i32* %fresh15.dbg.spill, metadata !4506, metadata !DIExpression()), !dbg !4834
  %_183 = load i32, i32* %i, align 4, !dbg !4835
  %188 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_183, i32 1), !dbg !4835
  %_184.0 = extractvalue { i32, i1 } %188, 0, !dbg !4835
  %_184.1 = extractvalue { i32, i1 } %188, 1, !dbg !4835
  %189 = call i1 @llvm.expect.i1(i1 %_184.1, i1 false), !dbg !4835
  br i1 %189, label %panic18, label %bb40, !dbg !4835

bb40:                                             ; preds = %bb39
  store i32 %_184.0, i32* %i, align 4, !dbg !4836
  %190 = getelementptr inbounds [5 x i8], [5 x i8]* %init, i64 0, i64 2, !dbg !4837
  %_185 = load i8, i8* %190, align 1, !dbg !4837
  %_189 = sext i32 %fresh15 to i64, !dbg !4838
  store i32* %buffer, i32** %self.dbg.spill.i191, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i191, metadata !4623, metadata !DIExpression()), !dbg !4839
  store i64 %_189, i64* %count.dbg.spill.i190, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i190, metadata !4626, metadata !DIExpression()), !dbg !4841
  %191 = getelementptr inbounds i32, i32* %buffer, i64 %_189, !dbg !4842
  store i32* %191, i32** %15, align 8, !dbg !4842
  %_3.i192 = load i32*, i32** %15, align 8, !dbg !4842
  br label %bb41, !dbg !4843

panic18:                                          ; preds = %bb39
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc481 to %"core::panic::location::Location"*)) #15, !dbg !4835
  unreachable, !dbg !4835

bb41:                                             ; preds = %bb40
  %192 = sext i8 %_185 to i32, !dbg !4844
  store i32 %192, i32* %_3.i192, align 4, !dbg !4844
  %fresh16 = load i32, i32* %i, align 4, !dbg !4845
  store i32 %fresh16, i32* %fresh16.dbg.spill, align 4, !dbg !4845
  call void @llvm.dbg.declare(metadata i32* %fresh16.dbg.spill, metadata !4508, metadata !DIExpression()), !dbg !4846
  %_192 = load i32, i32* %i, align 4, !dbg !4847
  %193 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_192, i32 1), !dbg !4847
  %_193.0 = extractvalue { i32, i1 } %193, 0, !dbg !4847
  %_193.1 = extractvalue { i32, i1 } %193, 1, !dbg !4847
  %194 = call i1 @llvm.expect.i1(i1 %_193.1, i1 false), !dbg !4847
  br i1 %194, label %panic19, label %bb42, !dbg !4847

bb42:                                             ; preds = %bb41
  store i32 %_193.0, i32* %i, align 4, !dbg !4848
  %195 = getelementptr inbounds [5 x i8], [5 x i8]* %init, i64 0, i64 3, !dbg !4849
  %_194 = load i8, i8* %195, align 1, !dbg !4849
  %_198 = sext i32 %fresh16 to i64, !dbg !4850
  store i32* %buffer, i32** %self.dbg.spill.i188, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i188, metadata !4623, metadata !DIExpression()), !dbg !4851
  store i64 %_198, i64* %count.dbg.spill.i187, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i187, metadata !4626, metadata !DIExpression()), !dbg !4853
  %196 = getelementptr inbounds i32, i32* %buffer, i64 %_198, !dbg !4854
  store i32* %196, i32** %16, align 8, !dbg !4854
  %_3.i189 = load i32*, i32** %16, align 8, !dbg !4854
  br label %bb43, !dbg !4855

panic19:                                          ; preds = %bb41
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc483 to %"core::panic::location::Location"*)) #15, !dbg !4847
  unreachable, !dbg !4847

bb43:                                             ; preds = %bb42
  %197 = sext i8 %_194 to i32, !dbg !4856
  store i32 %197, i32* %_3.i189, align 4, !dbg !4856
  store [3 x i8]* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc19, i32 0, i32 0), [3 x i8]** %67, align 8, !dbg !4857
  %_201 = load [3 x i8]*, [3 x i8]** %67, align 8, !dbg !4857, !nonnull !23, !align !506, !noundef !23
  br label %bb44, !dbg !4857

bb44:                                             ; preds = %bb43
  %198 = bitcast [3 x i8]* %too_long to i8*, !dbg !4858
  %199 = bitcast [3 x i8]* %_201 to i8*, !dbg !4858
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %198, i8* align 1 %199, i64 3, i1 false), !dbg !4858
  %fresh17 = load i32, i32* %i, align 4, !dbg !4859
  store i32 %fresh17, i32* %fresh17.dbg.spill, align 4, !dbg !4859
  call void @llvm.dbg.declare(metadata i32* %fresh17.dbg.spill, metadata !4512, metadata !DIExpression()), !dbg !4860
  %_205 = load i32, i32* %i, align 4, !dbg !4861
  %200 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_205, i32 1), !dbg !4861
  %_206.0 = extractvalue { i32, i1 } %200, 0, !dbg !4861
  %_206.1 = extractvalue { i32, i1 } %200, 1, !dbg !4861
  %201 = call i1 @llvm.expect.i1(i1 %_206.1, i1 false), !dbg !4861
  br i1 %201, label %panic20, label %bb45, !dbg !4861

bb45:                                             ; preds = %bb44
  store i32 %_206.0, i32* %i, align 4, !dbg !4862
  %202 = getelementptr inbounds [3 x i8], [3 x i8]* %too_long, i64 0, i64 0, !dbg !4863
  %_207 = load i8, i8* %202, align 1, !dbg !4863
  %_211 = sext i32 %fresh17 to i64, !dbg !4864
  store i32* %buffer, i32** %self.dbg.spill.i185, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i185, metadata !4623, metadata !DIExpression()), !dbg !4865
  store i64 %_211, i64* %count.dbg.spill.i184, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i184, metadata !4626, metadata !DIExpression()), !dbg !4867
  %203 = getelementptr inbounds i32, i32* %buffer, i64 %_211, !dbg !4868
  store i32* %203, i32** %17, align 8, !dbg !4868
  %_3.i186 = load i32*, i32** %17, align 8, !dbg !4868
  br label %bb46, !dbg !4869

panic20:                                          ; preds = %bb44
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc485 to %"core::panic::location::Location"*)) #15, !dbg !4861
  unreachable, !dbg !4861

bb46:                                             ; preds = %bb45
  %204 = sext i8 %_207 to i32, !dbg !4870
  store i32 %204, i32* %_3.i186, align 4, !dbg !4870
  %fresh18 = load i32, i32* %i, align 4, !dbg !4871
  store i32 %fresh18, i32* %fresh18.dbg.spill, align 4, !dbg !4871
  call void @llvm.dbg.declare(metadata i32* %fresh18.dbg.spill, metadata !4514, metadata !DIExpression()), !dbg !4872
  %_214 = load i32, i32* %i, align 4, !dbg !4873
  %205 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_214, i32 1), !dbg !4873
  %_215.0 = extractvalue { i32, i1 } %205, 0, !dbg !4873
  %_215.1 = extractvalue { i32, i1 } %205, 1, !dbg !4873
  %206 = call i1 @llvm.expect.i1(i1 %_215.1, i1 false), !dbg !4873
  br i1 %206, label %panic21, label %bb47, !dbg !4873

bb47:                                             ; preds = %bb46
  store i32 %_215.0, i32* %i, align 4, !dbg !4874
  %207 = getelementptr inbounds [3 x i8], [3 x i8]* %too_long, i64 0, i64 1, !dbg !4875
  %_216 = load i8, i8* %207, align 1, !dbg !4875
  %_220 = sext i32 %fresh18 to i64, !dbg !4876
  store i32* %buffer, i32** %self.dbg.spill.i182, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i182, metadata !4623, metadata !DIExpression()), !dbg !4877
  store i64 %_220, i64* %count.dbg.spill.i181, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i181, metadata !4626, metadata !DIExpression()), !dbg !4879
  %208 = getelementptr inbounds i32, i32* %buffer, i64 %_220, !dbg !4880
  store i32* %208, i32** %18, align 8, !dbg !4880
  %_3.i183 = load i32*, i32** %18, align 8, !dbg !4880
  br label %bb48, !dbg !4881

panic21:                                          ; preds = %bb46
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc487 to %"core::panic::location::Location"*)) #15, !dbg !4873
  unreachable, !dbg !4873

bb48:                                             ; preds = %bb47
  %209 = sext i8 %_216 to i32, !dbg !4882
  store i32 %209, i32* %_3.i183, align 4, !dbg !4882
  %fresh19 = load i32, i32* %i, align 4, !dbg !4883
  store i32 %fresh19, i32* %fresh19.dbg.spill, align 4, !dbg !4883
  call void @llvm.dbg.declare(metadata i32* %fresh19.dbg.spill, metadata !4516, metadata !DIExpression()), !dbg !4884
  %_223 = load i32, i32* %i, align 4, !dbg !4885
  %210 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_223, i32 1), !dbg !4885
  %_224.0 = extractvalue { i32, i1 } %210, 0, !dbg !4885
  %_224.1 = extractvalue { i32, i1 } %210, 1, !dbg !4885
  %211 = call i1 @llvm.expect.i1(i1 %_224.1, i1 false), !dbg !4885
  br i1 %211, label %panic22, label %bb49, !dbg !4885

bb49:                                             ; preds = %bb48
  store i32 %_224.0, i32* %i, align 4, !dbg !4886
  %212 = getelementptr inbounds [3 x i8], [3 x i8]* %too_long, i64 0, i64 2, !dbg !4887
  %_225 = load i8, i8* %212, align 1, !dbg !4887
  %_229 = sext i32 %fresh19 to i64, !dbg !4888
  store i32* %buffer, i32** %self.dbg.spill.i179, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i179, metadata !4623, metadata !DIExpression()), !dbg !4889
  store i64 %_229, i64* %count.dbg.spill.i178, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i178, metadata !4626, metadata !DIExpression()), !dbg !4891
  %213 = getelementptr inbounds i32, i32* %buffer, i64 %_229, !dbg !4892
  store i32* %213, i32** %19, align 8, !dbg !4892
  %_3.i180 = load i32*, i32** %19, align 8, !dbg !4892
  br label %bb50, !dbg !4893

panic22:                                          ; preds = %bb48
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc489 to %"core::panic::location::Location"*)) #15, !dbg !4885
  unreachable, !dbg !4885

bb50:                                             ; preds = %bb49
  %214 = sext i8 %_225 to i32, !dbg !4894
  store i32 %214, i32* %_3.i180, align 4, !dbg !4894
  store [20 x i8]* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc20, i32 0, i32 0), [20 x i8]** %66, align 8, !dbg !4895
  %_232 = load [20 x i8]*, [20 x i8]** %66, align 8, !dbg !4895, !nonnull !23, !align !506, !noundef !23
  br label %bb51, !dbg !4895

bb51:                                             ; preds = %bb50
  %215 = bitcast [20 x i8]* %too_short to i8*, !dbg !4896
  %216 = bitcast [20 x i8]* %_232 to i8*, !dbg !4896
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %215, i8* align 1 %216, i64 20, i1 false), !dbg !4896
  %fresh20 = load i32, i32* %i, align 4, !dbg !4897
  store i32 %fresh20, i32* %fresh20.dbg.spill, align 4, !dbg !4897
  call void @llvm.dbg.declare(metadata i32* %fresh20.dbg.spill, metadata !4523, metadata !DIExpression()), !dbg !4898
  %_236 = load i32, i32* %i, align 4, !dbg !4899
  %217 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_236, i32 1), !dbg !4899
  %_237.0 = extractvalue { i32, i1 } %217, 0, !dbg !4899
  %_237.1 = extractvalue { i32, i1 } %217, 1, !dbg !4899
  %218 = call i1 @llvm.expect.i1(i1 %_237.1, i1 false), !dbg !4899
  br i1 %218, label %panic23, label %bb52, !dbg !4899

bb52:                                             ; preds = %bb51
  store i32 %_237.0, i32* %i, align 4, !dbg !4900
  %219 = getelementptr inbounds [20 x i8], [20 x i8]* %too_short, i64 0, i64 0, !dbg !4901
  %_238 = load i8, i8* %219, align 1, !dbg !4901
  %_242 = sext i32 %fresh20 to i64, !dbg !4902
  store i32* %buffer, i32** %self.dbg.spill.i176, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i176, metadata !4623, metadata !DIExpression()), !dbg !4903
  store i64 %_242, i64* %count.dbg.spill.i175, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i175, metadata !4626, metadata !DIExpression()), !dbg !4905
  %220 = getelementptr inbounds i32, i32* %buffer, i64 %_242, !dbg !4906
  store i32* %220, i32** %20, align 8, !dbg !4906
  %_3.i177 = load i32*, i32** %20, align 8, !dbg !4906
  br label %bb53, !dbg !4907

panic23:                                          ; preds = %bb51
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc491 to %"core::panic::location::Location"*)) #15, !dbg !4899
  unreachable, !dbg !4899

bb53:                                             ; preds = %bb52
  %221 = sext i8 %_238 to i32, !dbg !4908
  store i32 %221, i32* %_3.i177, align 4, !dbg !4908
  %fresh21 = load i32, i32* %i, align 4, !dbg !4909
  store i32 %fresh21, i32* %fresh21.dbg.spill, align 4, !dbg !4909
  call void @llvm.dbg.declare(metadata i32* %fresh21.dbg.spill, metadata !4525, metadata !DIExpression()), !dbg !4910
  %_245 = load i32, i32* %i, align 4, !dbg !4911
  %222 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_245, i32 1), !dbg !4911
  %_246.0 = extractvalue { i32, i1 } %222, 0, !dbg !4911
  %_246.1 = extractvalue { i32, i1 } %222, 1, !dbg !4911
  %223 = call i1 @llvm.expect.i1(i1 %_246.1, i1 false), !dbg !4911
  br i1 %223, label %panic24, label %bb54, !dbg !4911

bb54:                                             ; preds = %bb53
  store i32 %_246.0, i32* %i, align 4, !dbg !4912
  %224 = getelementptr inbounds [20 x i8], [20 x i8]* %too_short, i64 0, i64 1, !dbg !4913
  %_247 = load i8, i8* %224, align 1, !dbg !4913
  %_251 = sext i32 %fresh21 to i64, !dbg !4914
  store i32* %buffer, i32** %self.dbg.spill.i173, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i173, metadata !4623, metadata !DIExpression()), !dbg !4915
  store i64 %_251, i64* %count.dbg.spill.i172, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i172, metadata !4626, metadata !DIExpression()), !dbg !4917
  %225 = getelementptr inbounds i32, i32* %buffer, i64 %_251, !dbg !4918
  store i32* %225, i32** %21, align 8, !dbg !4918
  %_3.i174 = load i32*, i32** %21, align 8, !dbg !4918
  br label %bb55, !dbg !4919

panic24:                                          ; preds = %bb53
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc493 to %"core::panic::location::Location"*)) #15, !dbg !4911
  unreachable, !dbg !4911

bb55:                                             ; preds = %bb54
  %226 = sext i8 %_247 to i32, !dbg !4920
  store i32 %226, i32* %_3.i174, align 4, !dbg !4920
  %fresh22 = load i32, i32* %i, align 4, !dbg !4921
  store i32 %fresh22, i32* %fresh22.dbg.spill, align 4, !dbg !4921
  call void @llvm.dbg.declare(metadata i32* %fresh22.dbg.spill, metadata !4527, metadata !DIExpression()), !dbg !4922
  %_254 = load i32, i32* %i, align 4, !dbg !4923
  %227 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_254, i32 1), !dbg !4923
  %_255.0 = extractvalue { i32, i1 } %227, 0, !dbg !4923
  %_255.1 = extractvalue { i32, i1 } %227, 1, !dbg !4923
  %228 = call i1 @llvm.expect.i1(i1 %_255.1, i1 false), !dbg !4923
  br i1 %228, label %panic25, label %bb56, !dbg !4923

bb56:                                             ; preds = %bb55
  store i32 %_255.0, i32* %i, align 4, !dbg !4924
  %229 = getelementptr inbounds [20 x i8], [20 x i8]* %too_short, i64 0, i64 2, !dbg !4925
  %_256 = load i8, i8* %229, align 1, !dbg !4925
  %_260 = sext i32 %fresh22 to i64, !dbg !4926
  store i32* %buffer, i32** %self.dbg.spill.i170, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i170, metadata !4623, metadata !DIExpression()), !dbg !4927
  store i64 %_260, i64* %count.dbg.spill.i169, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i169, metadata !4626, metadata !DIExpression()), !dbg !4929
  %230 = getelementptr inbounds i32, i32* %buffer, i64 %_260, !dbg !4930
  store i32* %230, i32** %22, align 8, !dbg !4930
  %_3.i171 = load i32*, i32** %22, align 8, !dbg !4930
  br label %bb57, !dbg !4931

panic25:                                          ; preds = %bb55
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc495 to %"core::panic::location::Location"*)) #15, !dbg !4923
  unreachable, !dbg !4923

bb57:                                             ; preds = %bb56
  %231 = sext i8 %_256 to i32, !dbg !4932
  store i32 %231, i32* %_3.i171, align 4, !dbg !4932
  %fresh23 = load i32, i32* %i, align 4, !dbg !4933
  store i32 %fresh23, i32* %fresh23.dbg.spill, align 4, !dbg !4933
  call void @llvm.dbg.declare(metadata i32* %fresh23.dbg.spill, metadata !4529, metadata !DIExpression()), !dbg !4934
  %_263 = load i32, i32* %i, align 4, !dbg !4935
  %232 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_263, i32 1), !dbg !4935
  %_264.0 = extractvalue { i32, i1 } %232, 0, !dbg !4935
  %_264.1 = extractvalue { i32, i1 } %232, 1, !dbg !4935
  %233 = call i1 @llvm.expect.i1(i1 %_264.1, i1 false), !dbg !4935
  br i1 %233, label %panic26, label %bb58, !dbg !4935

bb58:                                             ; preds = %bb57
  store i32 %_264.0, i32* %i, align 4, !dbg !4936
  %234 = getelementptr inbounds [20 x i8], [20 x i8]* %too_short, i64 0, i64 3, !dbg !4937
  %_265 = load i8, i8* %234, align 1, !dbg !4937
  %_269 = sext i32 %fresh23 to i64, !dbg !4938
  store i32* %buffer, i32** %self.dbg.spill.i167, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i167, metadata !4623, metadata !DIExpression()), !dbg !4939
  store i64 %_269, i64* %count.dbg.spill.i166, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i166, metadata !4626, metadata !DIExpression()), !dbg !4941
  %235 = getelementptr inbounds i32, i32* %buffer, i64 %_269, !dbg !4942
  store i32* %235, i32** %23, align 8, !dbg !4942
  %_3.i168 = load i32*, i32** %23, align 8, !dbg !4942
  br label %bb59, !dbg !4943

panic26:                                          ; preds = %bb57
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc497 to %"core::panic::location::Location"*)) #15, !dbg !4935
  unreachable, !dbg !4935

bb59:                                             ; preds = %bb58
  %236 = sext i8 %_265 to i32, !dbg !4944
  store i32 %236, i32* %_3.i168, align 4, !dbg !4944
  %fresh24 = load i32, i32* %i, align 4, !dbg !4945
  store i32 %fresh24, i32* %fresh24.dbg.spill, align 4, !dbg !4945
  call void @llvm.dbg.declare(metadata i32* %fresh24.dbg.spill, metadata !4531, metadata !DIExpression()), !dbg !4946
  %_272 = load i32, i32* %i, align 4, !dbg !4947
  %237 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_272, i32 1), !dbg !4947
  %_273.0 = extractvalue { i32, i1 } %237, 0, !dbg !4947
  %_273.1 = extractvalue { i32, i1 } %237, 1, !dbg !4947
  %238 = call i1 @llvm.expect.i1(i1 %_273.1, i1 false), !dbg !4947
  br i1 %238, label %panic27, label %bb60, !dbg !4947

bb60:                                             ; preds = %bb59
  store i32 %_273.0, i32* %i, align 4, !dbg !4948
  %239 = getelementptr inbounds [20 x i8], [20 x i8]* %too_short, i64 0, i64 4, !dbg !4949
  %_274 = load i8, i8* %239, align 1, !dbg !4949
  %_278 = sext i32 %fresh24 to i64, !dbg !4950
  store i32* %buffer, i32** %self.dbg.spill.i164, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i164, metadata !4623, metadata !DIExpression()), !dbg !4951
  store i64 %_278, i64* %count.dbg.spill.i163, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i163, metadata !4626, metadata !DIExpression()), !dbg !4953
  %240 = getelementptr inbounds i32, i32* %buffer, i64 %_278, !dbg !4954
  store i32* %240, i32** %24, align 8, !dbg !4954
  %_3.i165 = load i32*, i32** %24, align 8, !dbg !4954
  br label %bb61, !dbg !4955

panic27:                                          ; preds = %bb59
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc499 to %"core::panic::location::Location"*)) #15, !dbg !4947
  unreachable, !dbg !4947

bb61:                                             ; preds = %bb60
  %241 = sext i8 %_274 to i32, !dbg !4956
  store i32 %241, i32* %_3.i165, align 4, !dbg !4956
  %fresh25 = load i32, i32* %i, align 4, !dbg !4957
  store i32 %fresh25, i32* %fresh25.dbg.spill, align 4, !dbg !4957
  call void @llvm.dbg.declare(metadata i32* %fresh25.dbg.spill, metadata !4533, metadata !DIExpression()), !dbg !4958
  %_281 = load i32, i32* %i, align 4, !dbg !4959
  %242 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_281, i32 1), !dbg !4959
  %_282.0 = extractvalue { i32, i1 } %242, 0, !dbg !4959
  %_282.1 = extractvalue { i32, i1 } %242, 1, !dbg !4959
  %243 = call i1 @llvm.expect.i1(i1 %_282.1, i1 false), !dbg !4959
  br i1 %243, label %panic28, label %bb62, !dbg !4959

bb62:                                             ; preds = %bb61
  store i32 %_282.0, i32* %i, align 4, !dbg !4960
  %244 = getelementptr inbounds [20 x i8], [20 x i8]* %too_short, i64 0, i64 5, !dbg !4961
  %_283 = load i8, i8* %244, align 1, !dbg !4961
  %_287 = sext i32 %fresh25 to i64, !dbg !4962
  store i32* %buffer, i32** %self.dbg.spill.i161, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i161, metadata !4623, metadata !DIExpression()), !dbg !4963
  store i64 %_287, i64* %count.dbg.spill.i160, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i160, metadata !4626, metadata !DIExpression()), !dbg !4965
  %245 = getelementptr inbounds i32, i32* %buffer, i64 %_287, !dbg !4966
  store i32* %245, i32** %25, align 8, !dbg !4966
  %_3.i162 = load i32*, i32** %25, align 8, !dbg !4966
  br label %bb63, !dbg !4967

panic28:                                          ; preds = %bb61
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc501 to %"core::panic::location::Location"*)) #15, !dbg !4959
  unreachable, !dbg !4959

bb63:                                             ; preds = %bb62
  %246 = sext i8 %_283 to i32, !dbg !4968
  store i32 %246, i32* %_3.i162, align 4, !dbg !4968
  %fresh26 = load i32, i32* %i, align 4, !dbg !4969
  store i32 %fresh26, i32* %fresh26.dbg.spill, align 4, !dbg !4969
  call void @llvm.dbg.declare(metadata i32* %fresh26.dbg.spill, metadata !4535, metadata !DIExpression()), !dbg !4970
  %_290 = load i32, i32* %i, align 4, !dbg !4971
  %247 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_290, i32 1), !dbg !4971
  %_291.0 = extractvalue { i32, i1 } %247, 0, !dbg !4971
  %_291.1 = extractvalue { i32, i1 } %247, 1, !dbg !4971
  %248 = call i1 @llvm.expect.i1(i1 %_291.1, i1 false), !dbg !4971
  br i1 %248, label %panic29, label %bb64, !dbg !4971

bb64:                                             ; preds = %bb63
  store i32 %_291.0, i32* %i, align 4, !dbg !4972
  %249 = getelementptr inbounds [20 x i8], [20 x i8]* %too_short, i64 0, i64 6, !dbg !4973
  %_292 = load i8, i8* %249, align 1, !dbg !4973
  %_296 = sext i32 %fresh26 to i64, !dbg !4974
  store i32* %buffer, i32** %self.dbg.spill.i158, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i158, metadata !4623, metadata !DIExpression()), !dbg !4975
  store i64 %_296, i64* %count.dbg.spill.i157, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i157, metadata !4626, metadata !DIExpression()), !dbg !4977
  %250 = getelementptr inbounds i32, i32* %buffer, i64 %_296, !dbg !4978
  store i32* %250, i32** %26, align 8, !dbg !4978
  %_3.i159 = load i32*, i32** %26, align 8, !dbg !4978
  br label %bb65, !dbg !4979

panic29:                                          ; preds = %bb63
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc503 to %"core::panic::location::Location"*)) #15, !dbg !4971
  unreachable, !dbg !4971

bb65:                                             ; preds = %bb64
  %251 = sext i8 %_292 to i32, !dbg !4980
  store i32 %251, i32* %_3.i159, align 4, !dbg !4980
  store [2 x i32]* bitcast (<{ [8 x i8] }>* @alloc21 to [2 x i32]*), [2 x i32]** %65, align 8, !dbg !4981
  %_299 = load [2 x i32]*, [2 x i32]** %65, align 8, !dbg !4981, !nonnull !23, !align !446, !noundef !23
  br label %bb66, !dbg !4981

bb66:                                             ; preds = %bb65
  %252 = bitcast [2 x i32]* %wide1 to i8*, !dbg !4982
  %253 = bitcast [2 x i32]* %_299 to i8*, !dbg !4982
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %252, i8* align 4 %253, i64 8, i1 false), !dbg !4982
  %fresh27 = load i32, i32* %i, align 4, !dbg !4983
  store i32 %fresh27, i32* %fresh27.dbg.spill, align 4, !dbg !4983
  call void @llvm.dbg.declare(metadata i32* %fresh27.dbg.spill, metadata !4539, metadata !DIExpression()), !dbg !4984
  %_303 = load i32, i32* %i, align 4, !dbg !4985
  %254 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_303, i32 1), !dbg !4985
  %_304.0 = extractvalue { i32, i1 } %254, 0, !dbg !4985
  %_304.1 = extractvalue { i32, i1 } %254, 1, !dbg !4985
  %255 = call i1 @llvm.expect.i1(i1 %_304.1, i1 false), !dbg !4985
  br i1 %255, label %panic30, label %bb67, !dbg !4985

bb67:                                             ; preds = %bb66
  store i32 %_304.0, i32* %i, align 4, !dbg !4986
  %256 = getelementptr inbounds [2 x i32], [2 x i32]* %wide1, i64 0, i64 0, !dbg !4987
  %_305 = load i32, i32* %256, align 4, !dbg !4987
  %_309 = sext i32 %fresh27 to i64, !dbg !4988
  store i32* %buffer, i32** %self.dbg.spill.i155, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i155, metadata !4623, metadata !DIExpression()), !dbg !4989
  store i64 %_309, i64* %count.dbg.spill.i154, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i154, metadata !4626, metadata !DIExpression()), !dbg !4991
  %257 = getelementptr inbounds i32, i32* %buffer, i64 %_309, !dbg !4992
  store i32* %257, i32** %27, align 8, !dbg !4992
  %_3.i156 = load i32*, i32** %27, align 8, !dbg !4992
  br label %bb68, !dbg !4993

panic30:                                          ; preds = %bb66
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc505 to %"core::panic::location::Location"*)) #15, !dbg !4985
  unreachable, !dbg !4985

bb68:                                             ; preds = %bb67
  store i32 %_305, i32* %_3.i156, align 4, !dbg !4994
  %fresh28 = load i32, i32* %i, align 4, !dbg !4995
  store i32 %fresh28, i32* %fresh28.dbg.spill, align 4, !dbg !4995
  call void @llvm.dbg.declare(metadata i32* %fresh28.dbg.spill, metadata !4541, metadata !DIExpression()), !dbg !4996
  %_312 = load i32, i32* %i, align 4, !dbg !4997
  %258 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_312, i32 1), !dbg !4997
  %_313.0 = extractvalue { i32, i1 } %258, 0, !dbg !4997
  %_313.1 = extractvalue { i32, i1 } %258, 1, !dbg !4997
  %259 = call i1 @llvm.expect.i1(i1 %_313.1, i1 false), !dbg !4997
  br i1 %259, label %panic31, label %bb69, !dbg !4997

bb69:                                             ; preds = %bb68
  store i32 %_313.0, i32* %i, align 4, !dbg !4998
  %260 = getelementptr inbounds [2 x i32], [2 x i32]* %wide1, i64 0, i64 1, !dbg !4999
  %_314 = load i32, i32* %260, align 4, !dbg !4999
  %_318 = sext i32 %fresh28 to i64, !dbg !5000
  store i32* %buffer, i32** %self.dbg.spill.i152, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i152, metadata !4623, metadata !DIExpression()), !dbg !5001
  store i64 %_318, i64* %count.dbg.spill.i151, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i151, metadata !4626, metadata !DIExpression()), !dbg !5003
  %261 = getelementptr inbounds i32, i32* %buffer, i64 %_318, !dbg !5004
  store i32* %261, i32** %28, align 8, !dbg !5004
  %_3.i153 = load i32*, i32** %28, align 8, !dbg !5004
  br label %bb70, !dbg !5005

panic31:                                          ; preds = %bb68
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc507 to %"core::panic::location::Location"*)) #15, !dbg !4997
  unreachable, !dbg !4997

bb70:                                             ; preds = %bb69
  store i32 %_314, i32* %_3.i153, align 4, !dbg !5006
  store [3 x i32]* bitcast (<{ [12 x i8] }>* @alloc22 to [3 x i32]*), [3 x i32]** %64, align 8, !dbg !5007
  %_321 = load [3 x i32]*, [3 x i32]** %64, align 8, !dbg !5007, !nonnull !23, !align !446, !noundef !23
  br label %bb71, !dbg !5007

bb71:                                             ; preds = %bb70
  %262 = bitcast [3 x i32]* %wide2 to i8*, !dbg !5008
  %263 = bitcast [3 x i32]* %_321 to i8*, !dbg !5008
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %262, i8* align 4 %263, i64 12, i1 false), !dbg !5008
  %fresh29 = load i32, i32* %i, align 4, !dbg !5009
  store i32 %fresh29, i32* %fresh29.dbg.spill, align 4, !dbg !5009
  call void @llvm.dbg.declare(metadata i32* %fresh29.dbg.spill, metadata !4546, metadata !DIExpression()), !dbg !5010
  %_325 = load i32, i32* %i, align 4, !dbg !5011
  %264 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_325, i32 1), !dbg !5011
  %_326.0 = extractvalue { i32, i1 } %264, 0, !dbg !5011
  %_326.1 = extractvalue { i32, i1 } %264, 1, !dbg !5011
  %265 = call i1 @llvm.expect.i1(i1 %_326.1, i1 false), !dbg !5011
  br i1 %265, label %panic32, label %bb72, !dbg !5011

bb72:                                             ; preds = %bb71
  store i32 %_326.0, i32* %i, align 4, !dbg !5012
  %266 = getelementptr inbounds [3 x i32], [3 x i32]* %wide2, i64 0, i64 0, !dbg !5013
  %_327 = load i32, i32* %266, align 4, !dbg !5013
  %_331 = sext i32 %fresh29 to i64, !dbg !5014
  store i32* %buffer, i32** %self.dbg.spill.i149, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i149, metadata !4623, metadata !DIExpression()), !dbg !5015
  store i64 %_331, i64* %count.dbg.spill.i148, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i148, metadata !4626, metadata !DIExpression()), !dbg !5017
  %267 = getelementptr inbounds i32, i32* %buffer, i64 %_331, !dbg !5018
  store i32* %267, i32** %29, align 8, !dbg !5018
  %_3.i150 = load i32*, i32** %29, align 8, !dbg !5018
  br label %bb73, !dbg !5019

panic32:                                          ; preds = %bb71
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc509 to %"core::panic::location::Location"*)) #15, !dbg !5011
  unreachable, !dbg !5011

bb73:                                             ; preds = %bb72
  store i32 %_327, i32* %_3.i150, align 4, !dbg !5020
  %fresh30 = load i32, i32* %i, align 4, !dbg !5021
  store i32 %fresh30, i32* %fresh30.dbg.spill, align 4, !dbg !5021
  call void @llvm.dbg.declare(metadata i32* %fresh30.dbg.spill, metadata !4548, metadata !DIExpression()), !dbg !5022
  %_334 = load i32, i32* %i, align 4, !dbg !5023
  %268 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_334, i32 1), !dbg !5023
  %_335.0 = extractvalue { i32, i1 } %268, 0, !dbg !5023
  %_335.1 = extractvalue { i32, i1 } %268, 1, !dbg !5023
  %269 = call i1 @llvm.expect.i1(i1 %_335.1, i1 false), !dbg !5023
  br i1 %269, label %panic33, label %bb74, !dbg !5023

bb74:                                             ; preds = %bb73
  store i32 %_335.0, i32* %i, align 4, !dbg !5024
  %270 = getelementptr inbounds [3 x i32], [3 x i32]* %wide2, i64 0, i64 1, !dbg !5025
  %_336 = load i32, i32* %270, align 4, !dbg !5025
  %_340 = sext i32 %fresh30 to i64, !dbg !5026
  store i32* %buffer, i32** %self.dbg.spill.i146, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i146, metadata !4623, metadata !DIExpression()), !dbg !5027
  store i64 %_340, i64* %count.dbg.spill.i145, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i145, metadata !4626, metadata !DIExpression()), !dbg !5029
  %271 = getelementptr inbounds i32, i32* %buffer, i64 %_340, !dbg !5030
  store i32* %271, i32** %30, align 8, !dbg !5030
  %_3.i147 = load i32*, i32** %30, align 8, !dbg !5030
  br label %bb75, !dbg !5031

panic33:                                          ; preds = %bb73
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc511 to %"core::panic::location::Location"*)) #15, !dbg !5023
  unreachable, !dbg !5023

bb75:                                             ; preds = %bb74
  store i32 %_336, i32* %_3.i147, align 4, !dbg !5032
  %fresh31 = load i32, i32* %i, align 4, !dbg !5033
  store i32 %fresh31, i32* %fresh31.dbg.spill, align 4, !dbg !5033
  call void @llvm.dbg.declare(metadata i32* %fresh31.dbg.spill, metadata !4550, metadata !DIExpression()), !dbg !5034
  %_343 = load i32, i32* %i, align 4, !dbg !5035
  %272 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_343, i32 1), !dbg !5035
  %_344.0 = extractvalue { i32, i1 } %272, 0, !dbg !5035
  %_344.1 = extractvalue { i32, i1 } %272, 1, !dbg !5035
  %273 = call i1 @llvm.expect.i1(i1 %_344.1, i1 false), !dbg !5035
  br i1 %273, label %panic34, label %bb76, !dbg !5035

bb76:                                             ; preds = %bb75
  store i32 %_344.0, i32* %i, align 4, !dbg !5036
  %274 = getelementptr inbounds [3 x i32], [3 x i32]* %wide2, i64 0, i64 2, !dbg !5037
  %_345 = load i32, i32* %274, align 4, !dbg !5037
  %_349 = sext i32 %fresh31 to i64, !dbg !5038
  store i32* %buffer, i32** %self.dbg.spill.i143, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i143, metadata !4623, metadata !DIExpression()), !dbg !5039
  store i64 %_349, i64* %count.dbg.spill.i142, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i142, metadata !4626, metadata !DIExpression()), !dbg !5041
  %275 = getelementptr inbounds i32, i32* %buffer, i64 %_349, !dbg !5042
  store i32* %275, i32** %31, align 8, !dbg !5042
  %_3.i144 = load i32*, i32** %31, align 8, !dbg !5042
  br label %bb77, !dbg !5043

panic34:                                          ; preds = %bb75
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc513 to %"core::panic::location::Location"*)) #15, !dbg !5035
  unreachable, !dbg !5035

bb77:                                             ; preds = %bb76
  store i32 %_345, i32* %_3.i144, align 4, !dbg !5044
  store [1 x i32]* bitcast (<{ [4 x i8] }>* @alloc23 to [1 x i32]*), [1 x i32]** %63, align 8, !dbg !5045
  %_352 = load [1 x i32]*, [1 x i32]** %63, align 8, !dbg !5045, !nonnull !23, !align !446, !noundef !23
  br label %bb78, !dbg !5045

bb78:                                             ; preds = %bb77
  %276 = bitcast [1 x i32]* %wide3 to i8*, !dbg !5046
  %277 = bitcast [1 x i32]* %_352 to i8*, !dbg !5046
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %276, i8* align 4 %277, i64 4, i1 false), !dbg !5046
  %fresh32 = load i32, i32* %i, align 4, !dbg !5047
  store i32 %fresh32, i32* %fresh32.dbg.spill, align 4, !dbg !5047
  call void @llvm.dbg.declare(metadata i32* %fresh32.dbg.spill, metadata !4554, metadata !DIExpression()), !dbg !5048
  %_356 = load i32, i32* %i, align 4, !dbg !5049
  %278 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_356, i32 1), !dbg !5049
  %_357.0 = extractvalue { i32, i1 } %278, 0, !dbg !5049
  %_357.1 = extractvalue { i32, i1 } %278, 1, !dbg !5049
  %279 = call i1 @llvm.expect.i1(i1 %_357.1, i1 false), !dbg !5049
  br i1 %279, label %panic35, label %bb79, !dbg !5049

bb79:                                             ; preds = %bb78
  store i32 %_357.0, i32* %i, align 4, !dbg !5050
  %280 = getelementptr inbounds [1 x i32], [1 x i32]* %wide3, i64 0, i64 0, !dbg !5051
  %_358 = load i32, i32* %280, align 4, !dbg !5051
  %_362 = sext i32 %fresh32 to i64, !dbg !5052
  store i32* %buffer, i32** %self.dbg.spill.i140, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i140, metadata !4623, metadata !DIExpression()), !dbg !5053
  store i64 %_362, i64* %count.dbg.spill.i139, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i139, metadata !4626, metadata !DIExpression()), !dbg !5055
  %281 = getelementptr inbounds i32, i32* %buffer, i64 %_362, !dbg !5056
  store i32* %281, i32** %32, align 8, !dbg !5056
  %_3.i141 = load i32*, i32** %32, align 8, !dbg !5056
  br label %bb80, !dbg !5057

panic35:                                          ; preds = %bb78
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc515 to %"core::panic::location::Location"*)) #15, !dbg !5049
  unreachable, !dbg !5049

bb80:                                             ; preds = %bb79
  store i32 %_358, i32* %_3.i141, align 4, !dbg !5058
  %fresh33 = load i32, i32* %i, align 4, !dbg !5059
  store i32 %fresh33, i32* %fresh33.dbg.spill, align 4, !dbg !5059
  call void @llvm.dbg.declare(metadata i32* %fresh33.dbg.spill, metadata !4556, metadata !DIExpression()), !dbg !5060
  %_365 = load i32, i32* %i, align 4, !dbg !5061
  %282 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_365, i32 1), !dbg !5061
  %_366.0 = extractvalue { i32, i1 } %282, 0, !dbg !5061
  %_366.1 = extractvalue { i32, i1 } %282, 1, !dbg !5061
  %283 = call i1 @llvm.expect.i1(i1 %_366.1, i1 false), !dbg !5061
  br i1 %283, label %panic36, label %bb81, !dbg !5061

bb81:                                             ; preds = %bb80
  store i32 %_366.0, i32* %i, align 4, !dbg !5062
  %_367 = load i8, i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @_ZN11array_tests6arrays11rust_simple17hdaa33264b2630333E, i32 0, i32 0, i64 0), align 1, !dbg !5063
  %_372 = sext i32 %fresh33 to i64, !dbg !5064
  store i32* %buffer, i32** %self.dbg.spill.i137, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i137, metadata !4623, metadata !DIExpression()), !dbg !5065
  store i64 %_372, i64* %count.dbg.spill.i136, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i136, metadata !4626, metadata !DIExpression()), !dbg !5067
  %284 = getelementptr inbounds i32, i32* %buffer, i64 %_372, !dbg !5068
  store i32* %284, i32** %33, align 8, !dbg !5068
  %_3.i138 = load i32*, i32** %33, align 8, !dbg !5068
  br label %bb82, !dbg !5069

panic36:                                          ; preds = %bb80
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc517 to %"core::panic::location::Location"*)) #15, !dbg !5061
  unreachable, !dbg !5061

bb82:                                             ; preds = %bb81
  %285 = sext i8 %_367 to i32, !dbg !5070
  store i32 %285, i32* %_3.i138, align 4, !dbg !5070
  %fresh34 = load i32, i32* %i, align 4, !dbg !5071
  store i32 %fresh34, i32* %fresh34.dbg.spill, align 4, !dbg !5071
  call void @llvm.dbg.declare(metadata i32* %fresh34.dbg.spill, metadata !4558, metadata !DIExpression()), !dbg !5072
  %_375 = load i32, i32* %i, align 4, !dbg !5073
  %286 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_375, i32 1), !dbg !5073
  %_376.0 = extractvalue { i32, i1 } %286, 0, !dbg !5073
  %_376.1 = extractvalue { i32, i1 } %286, 1, !dbg !5073
  %287 = call i1 @llvm.expect.i1(i1 %_376.1, i1 false), !dbg !5073
  br i1 %287, label %panic37, label %bb83, !dbg !5073

bb83:                                             ; preds = %bb82
  store i32 %_376.0, i32* %i, align 4, !dbg !5074
  %_377 = load i8, i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @_ZN11array_tests6arrays11rust_simple17hdaa33264b2630333E, i32 0, i32 0, i64 1), align 1, !dbg !5075
  %_382 = sext i32 %fresh34 to i64, !dbg !5076
  store i32* %buffer, i32** %self.dbg.spill.i134, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i134, metadata !4623, metadata !DIExpression()), !dbg !5077
  store i64 %_382, i64* %count.dbg.spill.i133, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i133, metadata !4626, metadata !DIExpression()), !dbg !5079
  %288 = getelementptr inbounds i32, i32* %buffer, i64 %_382, !dbg !5080
  store i32* %288, i32** %34, align 8, !dbg !5080
  %_3.i135 = load i32*, i32** %34, align 8, !dbg !5080
  br label %bb84, !dbg !5081

panic37:                                          ; preds = %bb82
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc519 to %"core::panic::location::Location"*)) #15, !dbg !5073
  unreachable, !dbg !5073

bb84:                                             ; preds = %bb83
  %289 = sext i8 %_377 to i32, !dbg !5082
  store i32 %289, i32* %_3.i135, align 4, !dbg !5082
  %fresh35 = load i32, i32* %i, align 4, !dbg !5083
  store i32 %fresh35, i32* %fresh35.dbg.spill, align 4, !dbg !5083
  call void @llvm.dbg.declare(metadata i32* %fresh35.dbg.spill, metadata !4560, metadata !DIExpression()), !dbg !5084
  %_385 = load i32, i32* %i, align 4, !dbg !5085
  %290 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_385, i32 1), !dbg !5085
  %_386.0 = extractvalue { i32, i1 } %290, 0, !dbg !5085
  %_386.1 = extractvalue { i32, i1 } %290, 1, !dbg !5085
  %291 = call i1 @llvm.expect.i1(i1 %_386.1, i1 false), !dbg !5085
  br i1 %291, label %panic38, label %bb85, !dbg !5085

bb85:                                             ; preds = %bb84
  store i32 %_386.0, i32* %i, align 4, !dbg !5086
  %_387 = load i8, i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @_ZN11array_tests6arrays11rust_simple17hdaa33264b2630333E, i32 0, i32 0, i64 2), align 1, !dbg !5087
  %_392 = sext i32 %fresh35 to i64, !dbg !5088
  store i32* %buffer, i32** %self.dbg.spill.i131, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i131, metadata !4623, metadata !DIExpression()), !dbg !5089
  store i64 %_392, i64* %count.dbg.spill.i130, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i130, metadata !4626, metadata !DIExpression()), !dbg !5091
  %292 = getelementptr inbounds i32, i32* %buffer, i64 %_392, !dbg !5092
  store i32* %292, i32** %35, align 8, !dbg !5092
  %_3.i132 = load i32*, i32** %35, align 8, !dbg !5092
  br label %bb86, !dbg !5093

panic38:                                          ; preds = %bb84
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc521 to %"core::panic::location::Location"*)) #15, !dbg !5085
  unreachable, !dbg !5085

bb86:                                             ; preds = %bb85
  %293 = sext i8 %_387 to i32, !dbg !5094
  store i32 %293, i32* %_3.i132, align 4, !dbg !5094
  %fresh36 = load i32, i32* %i, align 4, !dbg !5095
  store i32 %fresh36, i32* %fresh36.dbg.spill, align 4, !dbg !5095
  call void @llvm.dbg.declare(metadata i32* %fresh36.dbg.spill, metadata !4562, metadata !DIExpression()), !dbg !5096
  %_395 = load i32, i32* %i, align 4, !dbg !5097
  %294 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_395, i32 1), !dbg !5097
  %_396.0 = extractvalue { i32, i1 } %294, 0, !dbg !5097
  %_396.1 = extractvalue { i32, i1 } %294, 1, !dbg !5097
  %295 = call i1 @llvm.expect.i1(i1 %_396.1, i1 false), !dbg !5097
  br i1 %295, label %panic39, label %bb87, !dbg !5097

bb87:                                             ; preds = %bb86
  store i32 %_396.0, i32* %i, align 4, !dbg !5098
  %_397 = load i8, i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @_ZN11array_tests6arrays11rust_simple17hdaa33264b2630333E, i32 0, i32 0, i64 3), align 1, !dbg !5099
  %_402 = sext i32 %fresh36 to i64, !dbg !5100
  store i32* %buffer, i32** %self.dbg.spill.i128, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i128, metadata !4623, metadata !DIExpression()), !dbg !5101
  store i64 %_402, i64* %count.dbg.spill.i127, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i127, metadata !4626, metadata !DIExpression()), !dbg !5103
  %296 = getelementptr inbounds i32, i32* %buffer, i64 %_402, !dbg !5104
  store i32* %296, i32** %36, align 8, !dbg !5104
  %_3.i129 = load i32*, i32** %36, align 8, !dbg !5104
  br label %bb88, !dbg !5105

panic39:                                          ; preds = %bb86
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc523 to %"core::panic::location::Location"*)) #15, !dbg !5097
  unreachable, !dbg !5097

bb88:                                             ; preds = %bb87
  %297 = sext i8 %_397 to i32, !dbg !5106
  store i32 %297, i32* %_3.i129, align 4, !dbg !5106
  %fresh37 = load i32, i32* %i, align 4, !dbg !5107
  store i32 %fresh37, i32* %fresh37.dbg.spill, align 4, !dbg !5107
  call void @llvm.dbg.declare(metadata i32* %fresh37.dbg.spill, metadata !4564, metadata !DIExpression()), !dbg !5108
  %_405 = load i32, i32* %i, align 4, !dbg !5109
  %298 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_405, i32 1), !dbg !5109
  %_406.0 = extractvalue { i32, i1 } %298, 0, !dbg !5109
  %_406.1 = extractvalue { i32, i1 } %298, 1, !dbg !5109
  %299 = call i1 @llvm.expect.i1(i1 %_406.1, i1 false), !dbg !5109
  br i1 %299, label %panic40, label %bb89, !dbg !5109

bb89:                                             ; preds = %bb88
  store i32 %_406.0, i32* %i, align 4, !dbg !5110
  %_407 = load i8, i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @_ZN11array_tests6arrays11rust_simple17hdaa33264b2630333E, i32 0, i32 0, i64 4), align 1, !dbg !5111
  %_412 = sext i32 %fresh37 to i64, !dbg !5112
  store i32* %buffer, i32** %self.dbg.spill.i125, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i125, metadata !4623, metadata !DIExpression()), !dbg !5113
  store i64 %_412, i64* %count.dbg.spill.i124, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i124, metadata !4626, metadata !DIExpression()), !dbg !5115
  %300 = getelementptr inbounds i32, i32* %buffer, i64 %_412, !dbg !5116
  store i32* %300, i32** %37, align 8, !dbg !5116
  %_3.i126 = load i32*, i32** %37, align 8, !dbg !5116
  br label %bb90, !dbg !5117

panic40:                                          ; preds = %bb88
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc525 to %"core::panic::location::Location"*)) #15, !dbg !5109
  unreachable, !dbg !5109

bb90:                                             ; preds = %bb89
  %301 = sext i8 %_407 to i32, !dbg !5118
  store i32 %301, i32* %_3.i126, align 4, !dbg !5118
  %fresh38 = load i32, i32* %i, align 4, !dbg !5119
  store i32 %fresh38, i32* %fresh38.dbg.spill, align 4, !dbg !5119
  call void @llvm.dbg.declare(metadata i32* %fresh38.dbg.spill, metadata !4566, metadata !DIExpression()), !dbg !5120
  %_415 = load i32, i32* %i, align 4, !dbg !5121
  %302 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_415, i32 1), !dbg !5121
  %_416.0 = extractvalue { i32, i1 } %302, 0, !dbg !5121
  %_416.1 = extractvalue { i32, i1 } %302, 1, !dbg !5121
  %303 = call i1 @llvm.expect.i1(i1 %_416.1, i1 false), !dbg !5121
  br i1 %303, label %panic41, label %bb91, !dbg !5121

bb91:                                             ; preds = %bb90
  store i32 %_416.0, i32* %i, align 4, !dbg !5122
  %_417 = load i8, i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @_ZN11array_tests6arrays11rust_simple17hdaa33264b2630333E, i32 0, i32 0, i64 5), align 1, !dbg !5123
  %_422 = sext i32 %fresh38 to i64, !dbg !5124
  store i32* %buffer, i32** %self.dbg.spill.i122, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i122, metadata !4623, metadata !DIExpression()), !dbg !5125
  store i64 %_422, i64* %count.dbg.spill.i121, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i121, metadata !4626, metadata !DIExpression()), !dbg !5127
  %304 = getelementptr inbounds i32, i32* %buffer, i64 %_422, !dbg !5128
  store i32* %304, i32** %38, align 8, !dbg !5128
  %_3.i123 = load i32*, i32** %38, align 8, !dbg !5128
  br label %bb92, !dbg !5129

panic41:                                          ; preds = %bb90
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc527 to %"core::panic::location::Location"*)) #15, !dbg !5121
  unreachable, !dbg !5121

bb92:                                             ; preds = %bb91
  %305 = sext i8 %_417 to i32, !dbg !5130
  store i32 %305, i32* %_3.i123, align 4, !dbg !5130
  %fresh39 = load i32, i32* %i, align 4, !dbg !5131
  store i32 %fresh39, i32* %fresh39.dbg.spill, align 4, !dbg !5131
  call void @llvm.dbg.declare(metadata i32* %fresh39.dbg.spill, metadata !4568, metadata !DIExpression()), !dbg !5132
  %_425 = load i32, i32* %i, align 4, !dbg !5133
  %306 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_425, i32 1), !dbg !5133
  %_426.0 = extractvalue { i32, i1 } %306, 0, !dbg !5133
  %_426.1 = extractvalue { i32, i1 } %306, 1, !dbg !5133
  %307 = call i1 @llvm.expect.i1(i1 %_426.1, i1 false), !dbg !5133
  br i1 %307, label %panic42, label %bb93, !dbg !5133

bb93:                                             ; preds = %bb92
  store i32 %_426.0, i32* %i, align 4, !dbg !5134
  %_427 = load i8, i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @_ZN11array_tests6arrays11rust_simple17hdaa33264b2630333E, i32 0, i32 0, i64 6), align 1, !dbg !5135
  %_432 = sext i32 %fresh39 to i64, !dbg !5136
  store i32* %buffer, i32** %self.dbg.spill.i119, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i119, metadata !4623, metadata !DIExpression()), !dbg !5137
  store i64 %_432, i64* %count.dbg.spill.i118, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i118, metadata !4626, metadata !DIExpression()), !dbg !5139
  %308 = getelementptr inbounds i32, i32* %buffer, i64 %_432, !dbg !5140
  store i32* %308, i32** %39, align 8, !dbg !5140
  %_3.i120 = load i32*, i32** %39, align 8, !dbg !5140
  br label %bb94, !dbg !5141

panic42:                                          ; preds = %bb92
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc529 to %"core::panic::location::Location"*)) #15, !dbg !5133
  unreachable, !dbg !5133

bb94:                                             ; preds = %bb93
  %309 = sext i8 %_427 to i32, !dbg !5142
  store i32 %309, i32* %_3.i120, align 4, !dbg !5142
  %fresh40 = load i32, i32* %i, align 4, !dbg !5143
  store i32 %fresh40, i32* %fresh40.dbg.spill, align 4, !dbg !5143
  call void @llvm.dbg.declare(metadata i32* %fresh40.dbg.spill, metadata !4570, metadata !DIExpression()), !dbg !5144
  %_435 = load i32, i32* %i, align 4, !dbg !5145
  %310 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_435, i32 1), !dbg !5145
  %_436.0 = extractvalue { i32, i1 } %310, 0, !dbg !5145
  %_436.1 = extractvalue { i32, i1 } %310, 1, !dbg !5145
  %311 = call i1 @llvm.expect.i1(i1 %_436.1, i1 false), !dbg !5145
  br i1 %311, label %panic43, label %bb95, !dbg !5145

bb95:                                             ; preds = %bb94
  store i32 %_436.0, i32* %i, align 4, !dbg !5146
  %_437 = load i8, i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @_ZN11array_tests6arrays11rust_simple17hdaa33264b2630333E, i32 0, i32 0, i64 7), align 1, !dbg !5147
  %_442 = sext i32 %fresh40 to i64, !dbg !5148
  store i32* %buffer, i32** %self.dbg.spill.i116, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i116, metadata !4623, metadata !DIExpression()), !dbg !5149
  store i64 %_442, i64* %count.dbg.spill.i115, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i115, metadata !4626, metadata !DIExpression()), !dbg !5151
  %312 = getelementptr inbounds i32, i32* %buffer, i64 %_442, !dbg !5152
  store i32* %312, i32** %40, align 8, !dbg !5152
  %_3.i117 = load i32*, i32** %40, align 8, !dbg !5152
  br label %bb96, !dbg !5153

panic43:                                          ; preds = %bb94
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc531 to %"core::panic::location::Location"*)) #15, !dbg !5145
  unreachable, !dbg !5145

bb96:                                             ; preds = %bb95
  %313 = sext i8 %_437 to i32, !dbg !5154
  store i32 %313, i32* %_3.i117, align 4, !dbg !5154
  %fresh41 = load i32, i32* %i, align 4, !dbg !5155
  store i32 %fresh41, i32* %fresh41.dbg.spill, align 4, !dbg !5155
  call void @llvm.dbg.declare(metadata i32* %fresh41.dbg.spill, metadata !4572, metadata !DIExpression()), !dbg !5156
  %_445 = load i32, i32* %i, align 4, !dbg !5157
  %314 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_445, i32 1), !dbg !5157
  %_446.0 = extractvalue { i32, i1 } %314, 0, !dbg !5157
  %_446.1 = extractvalue { i32, i1 } %314, 1, !dbg !5157
  %315 = call i1 @llvm.expect.i1(i1 %_446.1, i1 false), !dbg !5157
  br i1 %315, label %panic44, label %bb97, !dbg !5157

bb97:                                             ; preds = %bb96
  store i32 %_446.0, i32* %i, align 4, !dbg !5158
  %_449 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN11array_tests6arrays8rust_foo17h5210be68efd147e1E, i32 0, i32 0), align 8, !dbg !5159
  store i8* %_449, i8** %self.dbg.spill.i77, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i77, metadata !4737, metadata !DIExpression()), !dbg !5160
  store i64 0, i64* %count.dbg.spill.i76, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i76, metadata !4742, metadata !DIExpression()), !dbg !5162
  store i8* %_449, i8** %53, align 8, !dbg !5163
  %_3.i78 = load i8*, i8** %53, align 8, !dbg !5163
  br label %bb98, !dbg !5159

panic44:                                          ; preds = %bb96
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc533 to %"core::panic::location::Location"*)) #15, !dbg !5157
  unreachable, !dbg !5157

bb98:                                             ; preds = %bb97
  %_447 = load i8, i8* %_3.i78, align 1, !dbg !5164
  %_454 = sext i32 %fresh41 to i64, !dbg !5165
  store i32* %buffer, i32** %self.dbg.spill.i113, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i113, metadata !4623, metadata !DIExpression()), !dbg !5166
  store i64 %_454, i64* %count.dbg.spill.i112, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i112, metadata !4626, metadata !DIExpression()), !dbg !5168
  %316 = getelementptr inbounds i32, i32* %buffer, i64 %_454, !dbg !5169
  store i32* %316, i32** %41, align 8, !dbg !5169
  %_3.i114 = load i32*, i32** %41, align 8, !dbg !5169
  br label %bb99, !dbg !5170

bb99:                                             ; preds = %bb98
  %317 = sext i8 %_447 to i32, !dbg !5171
  store i32 %317, i32* %_3.i114, align 4, !dbg !5171
  %fresh42 = load i32, i32* %i, align 4, !dbg !5172
  store i32 %fresh42, i32* %fresh42.dbg.spill, align 4, !dbg !5172
  call void @llvm.dbg.declare(metadata i32* %fresh42.dbg.spill, metadata !4574, metadata !DIExpression()), !dbg !5173
  %_457 = load i32, i32* %i, align 4, !dbg !5174
  %318 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_457, i32 1), !dbg !5174
  %_458.0 = extractvalue { i32, i1 } %318, 0, !dbg !5174
  %_458.1 = extractvalue { i32, i1 } %318, 1, !dbg !5174
  %319 = call i1 @llvm.expect.i1(i1 %_458.1, i1 false), !dbg !5174
  br i1 %319, label %panic45, label %bb100, !dbg !5174

bb100:                                            ; preds = %bb99
  store i32 %_458.0, i32* %i, align 4, !dbg !5175
  %_461 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN11array_tests6arrays8rust_foo17h5210be68efd147e1E, i32 0, i32 0), align 8, !dbg !5176
  store i8* %_461, i8** %self.dbg.spill.i74, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i74, metadata !4737, metadata !DIExpression()), !dbg !5177
  store i64 1, i64* %count.dbg.spill.i73, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i73, metadata !4742, metadata !DIExpression()), !dbg !5179
  %320 = getelementptr inbounds i8, i8* %_461, i64 1, !dbg !5180
  store i8* %320, i8** %54, align 8, !dbg !5180
  %_3.i75 = load i8*, i8** %54, align 8, !dbg !5180
  br label %bb101, !dbg !5176

panic45:                                          ; preds = %bb99
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc535 to %"core::panic::location::Location"*)) #15, !dbg !5174
  unreachable, !dbg !5174

bb101:                                            ; preds = %bb100
  %_459 = load i8, i8* %_3.i75, align 1, !dbg !5181
  %_466 = sext i32 %fresh42 to i64, !dbg !5182
  store i32* %buffer, i32** %self.dbg.spill.i110, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i110, metadata !4623, metadata !DIExpression()), !dbg !5183
  store i64 %_466, i64* %count.dbg.spill.i109, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i109, metadata !4626, metadata !DIExpression()), !dbg !5185
  %321 = getelementptr inbounds i32, i32* %buffer, i64 %_466, !dbg !5186
  store i32* %321, i32** %42, align 8, !dbg !5186
  %_3.i111 = load i32*, i32** %42, align 8, !dbg !5186
  br label %bb102, !dbg !5187

bb102:                                            ; preds = %bb101
  %322 = sext i8 %_459 to i32, !dbg !5188
  store i32 %322, i32* %_3.i111, align 4, !dbg !5188
  %fresh43 = load i32, i32* %i, align 4, !dbg !5189
  store i32 %fresh43, i32* %fresh43.dbg.spill, align 4, !dbg !5189
  call void @llvm.dbg.declare(metadata i32* %fresh43.dbg.spill, metadata !4576, metadata !DIExpression()), !dbg !5190
  %_469 = load i32, i32* %i, align 4, !dbg !5191
  %323 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_469, i32 1), !dbg !5191
  %_470.0 = extractvalue { i32, i1 } %323, 0, !dbg !5191
  %_470.1 = extractvalue { i32, i1 } %323, 1, !dbg !5191
  %324 = call i1 @llvm.expect.i1(i1 %_470.1, i1 false), !dbg !5191
  br i1 %324, label %panic46, label %bb103, !dbg !5191

bb103:                                            ; preds = %bb102
  store i32 %_470.0, i32* %i, align 4, !dbg !5192
  %_473 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN11array_tests6arrays8rust_foo17h5210be68efd147e1E, i32 0, i32 0), align 8, !dbg !5193
  store i8* %_473, i8** %self.dbg.spill.i71, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i71, metadata !4737, metadata !DIExpression()), !dbg !5194
  store i64 2, i64* %count.dbg.spill.i70, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i70, metadata !4742, metadata !DIExpression()), !dbg !5196
  %325 = getelementptr inbounds i8, i8* %_473, i64 2, !dbg !5197
  store i8* %325, i8** %55, align 8, !dbg !5197
  %_3.i72 = load i8*, i8** %55, align 8, !dbg !5197
  br label %bb104, !dbg !5193

panic46:                                          ; preds = %bb102
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc537 to %"core::panic::location::Location"*)) #15, !dbg !5191
  unreachable, !dbg !5191

bb104:                                            ; preds = %bb103
  %_471 = load i8, i8* %_3.i72, align 1, !dbg !5198
  %_478 = sext i32 %fresh43 to i64, !dbg !5199
  store i32* %buffer, i32** %self.dbg.spill.i107, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i107, metadata !4623, metadata !DIExpression()), !dbg !5200
  store i64 %_478, i64* %count.dbg.spill.i106, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i106, metadata !4626, metadata !DIExpression()), !dbg !5202
  %326 = getelementptr inbounds i32, i32* %buffer, i64 %_478, !dbg !5203
  store i32* %326, i32** %43, align 8, !dbg !5203
  %_3.i108 = load i32*, i32** %43, align 8, !dbg !5203
  br label %bb105, !dbg !5204

bb105:                                            ; preds = %bb104
  %327 = sext i8 %_471 to i32, !dbg !5205
  store i32 %327, i32* %_3.i108, align 4, !dbg !5205
  %fresh44 = load i32, i32* %i, align 4, !dbg !5206
  store i32 %fresh44, i32* %fresh44.dbg.spill, align 4, !dbg !5206
  call void @llvm.dbg.declare(metadata i32* %fresh44.dbg.spill, metadata !4578, metadata !DIExpression()), !dbg !5207
  %_481 = load i32, i32* %i, align 4, !dbg !5208
  %328 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_481, i32 1), !dbg !5208
  %_482.0 = extractvalue { i32, i1 } %328, 0, !dbg !5208
  %_482.1 = extractvalue { i32, i1 } %328, 1, !dbg !5208
  %329 = call i1 @llvm.expect.i1(i1 %_482.1, i1 false), !dbg !5208
  br i1 %329, label %panic47, label %bb106, !dbg !5208

bb106:                                            ; preds = %bb105
  store i32 %_482.0, i32* %i, align 4, !dbg !5209
  %_485 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN11array_tests6arrays8rust_foo17h5210be68efd147e1E, i32 0, i32 0), align 8, !dbg !5210
  store i8* %_485, i8** %self.dbg.spill.i68, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i68, metadata !4737, metadata !DIExpression()), !dbg !5211
  store i64 3, i64* %count.dbg.spill.i67, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i67, metadata !4742, metadata !DIExpression()), !dbg !5213
  %330 = getelementptr inbounds i8, i8* %_485, i64 3, !dbg !5214
  store i8* %330, i8** %56, align 8, !dbg !5214
  %_3.i69 = load i8*, i8** %56, align 8, !dbg !5214
  br label %bb107, !dbg !5210

panic47:                                          ; preds = %bb105
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc539 to %"core::panic::location::Location"*)) #15, !dbg !5208
  unreachable, !dbg !5208

bb107:                                            ; preds = %bb106
  %_483 = load i8, i8* %_3.i69, align 1, !dbg !5215
  %_490 = sext i32 %fresh44 to i64, !dbg !5216
  store i32* %buffer, i32** %self.dbg.spill.i104, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i104, metadata !4623, metadata !DIExpression()), !dbg !5217
  store i64 %_490, i64* %count.dbg.spill.i103, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i103, metadata !4626, metadata !DIExpression()), !dbg !5219
  %331 = getelementptr inbounds i32, i32* %buffer, i64 %_490, !dbg !5220
  store i32* %331, i32** %44, align 8, !dbg !5220
  %_3.i105 = load i32*, i32** %44, align 8, !dbg !5220
  br label %bb108, !dbg !5221

bb108:                                            ; preds = %bb107
  %332 = sext i8 %_483 to i32, !dbg !5222
  store i32 %332, i32* %_3.i105, align 4, !dbg !5222
  %fresh45 = load i32, i32* %i, align 4, !dbg !5223
  store i32 %fresh45, i32* %fresh45.dbg.spill, align 4, !dbg !5223
  call void @llvm.dbg.declare(metadata i32* %fresh45.dbg.spill, metadata !4580, metadata !DIExpression()), !dbg !5224
  %_493 = load i32, i32* %i, align 4, !dbg !5225
  %333 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_493, i32 1), !dbg !5225
  %_494.0 = extractvalue { i32, i1 } %333, 0, !dbg !5225
  %_494.1 = extractvalue { i32, i1 } %333, 1, !dbg !5225
  %334 = call i1 @llvm.expect.i1(i1 %_494.1, i1 false), !dbg !5225
  br i1 %334, label %panic48, label %bb109, !dbg !5225

bb109:                                            ; preds = %bb108
  store i32 %_494.0, i32* %i, align 4, !dbg !5226
  %_497 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN11array_tests6arrays8rust_foo17h5210be68efd147e1E, i32 0, i32 0), align 8, !dbg !5227
  store i8* %_497, i8** %self.dbg.spill.i65, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i65, metadata !4737, metadata !DIExpression()), !dbg !5228
  store i64 4, i64* %count.dbg.spill.i64, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i64, metadata !4742, metadata !DIExpression()), !dbg !5230
  %335 = getelementptr inbounds i8, i8* %_497, i64 4, !dbg !5231
  store i8* %335, i8** %57, align 8, !dbg !5231
  %_3.i66 = load i8*, i8** %57, align 8, !dbg !5231
  br label %bb110, !dbg !5227

panic48:                                          ; preds = %bb108
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc541 to %"core::panic::location::Location"*)) #15, !dbg !5225
  unreachable, !dbg !5225

bb110:                                            ; preds = %bb109
  %_495 = load i8, i8* %_3.i66, align 1, !dbg !5232
  %_502 = sext i32 %fresh45 to i64, !dbg !5233
  store i32* %buffer, i32** %self.dbg.spill.i101, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i101, metadata !4623, metadata !DIExpression()), !dbg !5234
  store i64 %_502, i64* %count.dbg.spill.i100, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i100, metadata !4626, metadata !DIExpression()), !dbg !5236
  %336 = getelementptr inbounds i32, i32* %buffer, i64 %_502, !dbg !5237
  store i32* %336, i32** %45, align 8, !dbg !5237
  %_3.i102 = load i32*, i32** %45, align 8, !dbg !5237
  br label %bb111, !dbg !5238

bb111:                                            ; preds = %bb110
  %337 = sext i8 %_495 to i32, !dbg !5239
  store i32 %337, i32* %_3.i102, align 4, !dbg !5239
  %fresh46 = load i32, i32* %i, align 4, !dbg !5240
  store i32 %fresh46, i32* %fresh46.dbg.spill, align 4, !dbg !5240
  call void @llvm.dbg.declare(metadata i32* %fresh46.dbg.spill, metadata !4582, metadata !DIExpression()), !dbg !5241
  %_505 = load i32, i32* %i, align 4, !dbg !5242
  %338 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_505, i32 1), !dbg !5242
  %_506.0 = extractvalue { i32, i1 } %338, 0, !dbg !5242
  %_506.1 = extractvalue { i32, i1 } %338, 1, !dbg !5242
  %339 = call i1 @llvm.expect.i1(i1 %_506.1, i1 false), !dbg !5242
  br i1 %339, label %panic49, label %bb112, !dbg !5242

bb112:                                            ; preds = %bb111
  store i32 %_506.0, i32* %i, align 4, !dbg !5243
  %_509 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN11array_tests6arrays8rust_foo17h5210be68efd147e1E, i32 0, i32 0), align 8, !dbg !5244
  store i8* %_509, i8** %self.dbg.spill.i62, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i62, metadata !4737, metadata !DIExpression()), !dbg !5245
  store i64 5, i64* %count.dbg.spill.i61, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i61, metadata !4742, metadata !DIExpression()), !dbg !5247
  %340 = getelementptr inbounds i8, i8* %_509, i64 5, !dbg !5248
  store i8* %340, i8** %58, align 8, !dbg !5248
  %_3.i63 = load i8*, i8** %58, align 8, !dbg !5248
  br label %bb113, !dbg !5244

panic49:                                          ; preds = %bb111
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc543 to %"core::panic::location::Location"*)) #15, !dbg !5242
  unreachable, !dbg !5242

bb113:                                            ; preds = %bb112
  %_507 = load i8, i8* %_3.i63, align 1, !dbg !5249
  %_514 = sext i32 %fresh46 to i64, !dbg !5250
  store i32* %buffer, i32** %self.dbg.spill.i98, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i98, metadata !4623, metadata !DIExpression()), !dbg !5251
  store i64 %_514, i64* %count.dbg.spill.i97, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i97, metadata !4626, metadata !DIExpression()), !dbg !5253
  %341 = getelementptr inbounds i32, i32* %buffer, i64 %_514, !dbg !5254
  store i32* %341, i32** %46, align 8, !dbg !5254
  %_3.i99 = load i32*, i32** %46, align 8, !dbg !5254
  br label %bb114, !dbg !5255

bb114:                                            ; preds = %bb113
  %342 = sext i8 %_507 to i32, !dbg !5256
  store i32 %342, i32* %_3.i99, align 4, !dbg !5256
  %fresh47 = load i32, i32* %i, align 4, !dbg !5257
  store i32 %fresh47, i32* %fresh47.dbg.spill, align 4, !dbg !5257
  call void @llvm.dbg.declare(metadata i32* %fresh47.dbg.spill, metadata !4584, metadata !DIExpression()), !dbg !5258
  %_517 = load i32, i32* %i, align 4, !dbg !5259
  %343 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_517, i32 1), !dbg !5259
  %_518.0 = extractvalue { i32, i1 } %343, 0, !dbg !5259
  %_518.1 = extractvalue { i32, i1 } %343, 1, !dbg !5259
  %344 = call i1 @llvm.expect.i1(i1 %_518.1, i1 false), !dbg !5259
  br i1 %344, label %panic50, label %bb115, !dbg !5259

bb115:                                            ; preds = %bb114
  store i32 %_518.0, i32* %i, align 4, !dbg !5260
  %_521 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN11array_tests6arrays8rust_foo17h5210be68efd147e1E, i32 0, i32 0), align 8, !dbg !5261
  store i8* %_521, i8** %self.dbg.spill.i59, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i59, metadata !4737, metadata !DIExpression()), !dbg !5262
  store i64 6, i64* %count.dbg.spill.i58, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i58, metadata !4742, metadata !DIExpression()), !dbg !5264
  %345 = getelementptr inbounds i8, i8* %_521, i64 6, !dbg !5265
  store i8* %345, i8** %59, align 8, !dbg !5265
  %_3.i60 = load i8*, i8** %59, align 8, !dbg !5265
  br label %bb116, !dbg !5261

panic50:                                          ; preds = %bb114
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc545 to %"core::panic::location::Location"*)) #15, !dbg !5259
  unreachable, !dbg !5259

bb116:                                            ; preds = %bb115
  %_519 = load i8, i8* %_3.i60, align 1, !dbg !5266
  %_526 = sext i32 %fresh47 to i64, !dbg !5267
  store i32* %buffer, i32** %self.dbg.spill.i95, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i95, metadata !4623, metadata !DIExpression()), !dbg !5268
  store i64 %_526, i64* %count.dbg.spill.i94, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i94, metadata !4626, metadata !DIExpression()), !dbg !5270
  %346 = getelementptr inbounds i32, i32* %buffer, i64 %_526, !dbg !5271
  store i32* %346, i32** %47, align 8, !dbg !5271
  %_3.i96 = load i32*, i32** %47, align 8, !dbg !5271
  br label %bb117, !dbg !5272

bb117:                                            ; preds = %bb116
  %347 = sext i8 %_519 to i32, !dbg !5273
  store i32 %347, i32* %_3.i96, align 4, !dbg !5273
  %fresh48 = load i32, i32* %i, align 4, !dbg !5274
  store i32 %fresh48, i32* %fresh48.dbg.spill, align 4, !dbg !5274
  call void @llvm.dbg.declare(metadata i32* %fresh48.dbg.spill, metadata !4586, metadata !DIExpression()), !dbg !5275
  %_529 = load i32, i32* %i, align 4, !dbg !5276
  %348 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_529, i32 1), !dbg !5276
  %_530.0 = extractvalue { i32, i1 } %348, 0, !dbg !5276
  %_530.1 = extractvalue { i32, i1 } %348, 1, !dbg !5276
  %349 = call i1 @llvm.expect.i1(i1 %_530.1, i1 false), !dbg !5276
  br i1 %349, label %panic51, label %bb118, !dbg !5276

bb118:                                            ; preds = %bb117
  store i32 %_530.0, i32* %i, align 4, !dbg !5277
  %_533 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN11array_tests6arrays8rust_foo17h5210be68efd147e1E, i32 0, i32 0), align 8, !dbg !5278
  store i8* %_533, i8** %self.dbg.spill.i56, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i56, metadata !4737, metadata !DIExpression()), !dbg !5279
  store i64 7, i64* %count.dbg.spill.i55, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i55, metadata !4742, metadata !DIExpression()), !dbg !5281
  %350 = getelementptr inbounds i8, i8* %_533, i64 7, !dbg !5282
  store i8* %350, i8** %60, align 8, !dbg !5282
  %_3.i57 = load i8*, i8** %60, align 8, !dbg !5282
  br label %bb119, !dbg !5278

panic51:                                          ; preds = %bb117
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc547 to %"core::panic::location::Location"*)) #15, !dbg !5276
  unreachable, !dbg !5276

bb119:                                            ; preds = %bb118
  %_531 = load i8, i8* %_3.i57, align 1, !dbg !5283
  %_538 = sext i32 %fresh48 to i64, !dbg !5284
  store i32* %buffer, i32** %self.dbg.spill.i92, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i92, metadata !4623, metadata !DIExpression()), !dbg !5285
  store i64 %_538, i64* %count.dbg.spill.i91, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i91, metadata !4626, metadata !DIExpression()), !dbg !5287
  %351 = getelementptr inbounds i32, i32* %buffer, i64 %_538, !dbg !5288
  store i32* %351, i32** %48, align 8, !dbg !5288
  %_3.i93 = load i32*, i32** %48, align 8, !dbg !5288
  br label %bb120, !dbg !5289

bb120:                                            ; preds = %bb119
  %352 = sext i8 %_531 to i32, !dbg !5290
  store i32 %352, i32* %_3.i93, align 4, !dbg !5290
; call core::slice::<impl [T]>::as_mut_ptr
  %_543 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hac7faaeaafda87e0E"([0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @_ZN11array_tests6arrays11rust_simple17hdaa33264b2630333E to [0 x i8]*), i64 9), !dbg !5291
  br label %bb121, !dbg !5291

bb121:                                            ; preds = %bb120
  br label %bb122, !dbg !5292

bb122:                                            ; preds = %bb121
  store i8* %_543, i8** %self.dbg.spill.i53, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i53, metadata !4737, metadata !DIExpression()), !dbg !5293
  store i64 9, i64* %count.dbg.spill.i52, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i52, metadata !4742, metadata !DIExpression()), !dbg !5295
  %353 = getelementptr inbounds i8, i8* %_543, i64 9, !dbg !5296
  store i8* %353, i8** %61, align 8, !dbg !5296
  %_3.i54 = load i8*, i8** %61, align 8, !dbg !5296
  br label %bb123, !dbg !5291

bb123:                                            ; preds = %bb122
  store i8* %_3.i54, i8** %past_end, align 8, !dbg !5297
  %_553 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN11array_tests6arrays8rust_foo17h5210be68efd147e1E, i32 0, i32 0), align 8, !dbg !5298
  store i8* %_553, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !4737, metadata !DIExpression()), !dbg !5299
  store i64 8, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !4742, metadata !DIExpression()), !dbg !5301
  %354 = getelementptr inbounds i8, i8* %_553, i64 8, !dbg !5302
  store i8* %354, i8** %62, align 8, !dbg !5302
  %_3.i = load i8*, i8** %62, align 8, !dbg !5302
  br label %bb124, !dbg !5298

bb124:                                            ; preds = %bb123
  store i8* %_3.i, i8** %past_end, align 8, !dbg !5303
  ret void, !dbg !5304
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_use_arrays(i32 %n, i32 %m, i32* %a) unnamed_addr #2 !dbg !5305 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i25 = alloca i64, align 8
  %self.dbg.spill.i26 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i22 = alloca i64, align 8
  %self.dbg.spill.i23 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i19 = alloca i64, align 8
  %self.dbg.spill.i20 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i16 = alloca i64, align 8
  %self.dbg.spill.i17 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i32*, align 8
  %past_end.dbg.spill = alloca i32*, align 8
  %fresh0.dbg.spill = alloca i32, align 4
  %vla_0.dbg.spill = alloca i64, align 8
  %vla.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i32*, align 8
  %m.dbg.spill = alloca i32, align 4
  %n.dbg.spill = alloca i32, align 4
  %k = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %counter = alloca i32, align 4
  store i32 %n, i32* %n.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !5311, metadata !DIExpression()), !dbg !5330
  store i32 %m, i32* %m.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %m.dbg.spill, metadata !5312, metadata !DIExpression()), !dbg !5331
  store i32* %a, i32** %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %a.dbg.spill, metadata !5313, metadata !DIExpression()), !dbg !5332
  call void @llvm.dbg.declare(metadata i32* %counter, metadata !5318, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5320, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5322, metadata !DIExpression()), !dbg !5335
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5324, metadata !DIExpression()), !dbg !5336
  %6 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %n, i32 %n), !dbg !5337
  %_8.0 = extractvalue { i32, i1 } %6, 0, !dbg !5337
  %_8.1 = extractvalue { i32, i1 } %6, 1, !dbg !5337
  %7 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !5337
  br i1 %7, label %panic, label %bb1, !dbg !5337

bb1:                                              ; preds = %start
  %vla = sext i32 %_8.0 to i64, !dbg !5337
  store i64 %vla, i64* %vla.dbg.spill, align 8, !dbg !5337
  call void @llvm.dbg.declare(metadata i64* %vla.dbg.spill, metadata !5314, metadata !DIExpression()), !dbg !5338
  %vla_0 = sext i32 %m to i64, !dbg !5339
  store i64 %vla_0, i64* %vla_0.dbg.spill, align 8, !dbg !5339
  call void @llvm.dbg.declare(metadata i64* %vla_0.dbg.spill, metadata !5316, metadata !DIExpression()), !dbg !5340
  store i32 1, i32* %counter, align 4, !dbg !5341
  store i32 0, i32* %i, align 4, !dbg !5342
  br label %bb2, !dbg !5343

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.6 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc549 to %"core::panic::location::Location"*)) #15, !dbg !5337
  unreachable, !dbg !5337

bb2:                                              ; preds = %bb20, %bb1
  %_14 = load i32, i32* %i, align 4, !dbg !5344
  %_13 = icmp slt i32 %_14, 2, !dbg !5344
  br i1 %_13, label %bb3, label %bb21, !dbg !5344

bb21:                                             ; preds = %bb2
  %8 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %vla, i64 %vla_0), !dbg !5345
  %_67.0 = extractvalue { i64, i1 } %8, 0, !dbg !5345
  %_67.1 = extractvalue { i64, i1 } %8, 1, !dbg !5345
  %9 = call i1 @llvm.expect.i1(i1 %_67.1, i1 false), !dbg !5345
  br i1 %9, label %panic9, label %bb22, !dbg !5345

bb3:                                              ; preds = %bb2
  store i32 0, i32* %j, align 4, !dbg !5346
  br label %bb4, !dbg !5347

bb4:                                              ; preds = %bb18, %bb3
  %_18 = load i32, i32* %j, align 4, !dbg !5348
  %10 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %n, i32 %n), !dbg !5349
  %_22.0 = extractvalue { i32, i1 } %10, 0, !dbg !5349
  %_22.1 = extractvalue { i32, i1 } %10, 1, !dbg !5349
  %11 = call i1 @llvm.expect.i1(i1 %_22.1, i1 false), !dbg !5349
  br i1 %11, label %panic1, label %bb5, !dbg !5349

bb5:                                              ; preds = %bb4
  %_17 = icmp slt i32 %_18, %_22.0, !dbg !5348
  br i1 %_17, label %bb6, label %bb19, !dbg !5348

panic1:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.6 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc551 to %"core::panic::location::Location"*)) #15, !dbg !5349
  unreachable, !dbg !5349

bb19:                                             ; preds = %bb5
  %12 = load i32, i32* %i, align 4, !dbg !5350
  %13 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %12, i32 1), !dbg !5350
  %_54.0 = extractvalue { i32, i1 } %13, 0, !dbg !5350
  %_54.1 = extractvalue { i32, i1 } %13, 1, !dbg !5350
  %14 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false), !dbg !5350
  br i1 %14, label %panic8, label %bb20, !dbg !5350

bb6:                                              ; preds = %bb5
  store i32 0, i32* %k, align 4, !dbg !5351
  br label %bb7, !dbg !5352

bb7:                                              ; preds = %bb16, %bb6
  %_25 = load i32, i32* %k, align 4, !dbg !5353
  %_24 = icmp slt i32 %_25, %m, !dbg !5353
  br i1 %_24, label %bb8, label %bb17, !dbg !5353

bb17:                                             ; preds = %bb7
  %15 = load i32, i32* %j, align 4, !dbg !5354
  %16 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %15, i32 1), !dbg !5354
  %_53.0 = extractvalue { i32, i1 } %16, 0, !dbg !5354
  %_53.1 = extractvalue { i32, i1 } %16, 1, !dbg !5354
  %17 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !5354
  br i1 %17, label %panic7, label %bb18, !dbg !5354

bb8:                                              ; preds = %bb7
  %fresh0 = load i32, i32* %counter, align 4, !dbg !5355
  store i32 %fresh0, i32* %fresh0.dbg.spill, align 4, !dbg !5355
  call void @llvm.dbg.declare(metadata i32* %fresh0.dbg.spill, metadata !5326, metadata !DIExpression()), !dbg !5356
  %_28 = load i32, i32* %counter, align 4, !dbg !5357
  %18 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_28, i32 1), !dbg !5357
  %_29.0 = extractvalue { i32, i1 } %18, 0, !dbg !5357
  %_29.1 = extractvalue { i32, i1 } %18, 1, !dbg !5357
  %19 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false), !dbg !5357
  br i1 %19, label %panic2, label %bb9, !dbg !5357

bb9:                                              ; preds = %bb8
  store i32 %_29.0, i32* %counter, align 4, !dbg !5358
  %_37 = load i32, i32* %i, align 4, !dbg !5359
  %_36 = sext i32 %_37 to i64, !dbg !5359
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %vla, i64 %vla_0), !dbg !5360
  %_42.0 = extractvalue { i64, i1 } %20, 0, !dbg !5360
  %_42.1 = extractvalue { i64, i1 } %20, 1, !dbg !5360
  %21 = call i1 @llvm.expect.i1(i1 %_42.1, i1 false), !dbg !5360
  br i1 %21, label %panic3, label %bb10, !dbg !5360

panic2:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc553 to %"core::panic::location::Location"*)) #15, !dbg !5357
  unreachable, !dbg !5357

bb10:                                             ; preds = %bb9
  %22 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %_36, i64 %_42.0), !dbg !5359
  %_43.0 = extractvalue { i64, i1 } %22, 0, !dbg !5359
  %_43.1 = extractvalue { i64, i1 } %22, 1, !dbg !5359
  %23 = call i1 @llvm.expect.i1(i1 %_43.1, i1 false), !dbg !5359
  br i1 %23, label %panic4, label %bb11, !dbg !5359

panic3:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.6 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc555 to %"core::panic::location::Location"*)) #15, !dbg !5360
  unreachable, !dbg !5360

bb11:                                             ; preds = %bb10
  store i32* %a, i32** %self.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i26, metadata !4623, metadata !DIExpression()), !dbg !5361
  store i64 %_43.0, i64* %count.dbg.spill.i25, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i25, metadata !4626, metadata !DIExpression()), !dbg !5363
  %24 = getelementptr inbounds i32, i32* %a, i64 %_43.0, !dbg !5364
  store i32* %24, i32** %0, align 8, !dbg !5364
  %_3.i27 = load i32*, i32** %0, align 8, !dbg !5364
  br label %bb12, !dbg !5365

panic4:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.6 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc557 to %"core::panic::location::Location"*)) #15, !dbg !5359
  unreachable, !dbg !5359

bb12:                                             ; preds = %bb11
  %_46 = load i32, i32* %j, align 4, !dbg !5366
  %_45 = sext i32 %_46 to i64, !dbg !5366
  %25 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %_45, i64 %vla_0), !dbg !5366
  %_49.0 = extractvalue { i64, i1 } %25, 0, !dbg !5366
  %_49.1 = extractvalue { i64, i1 } %25, 1, !dbg !5366
  %26 = call i1 @llvm.expect.i1(i1 %_49.1, i1 false), !dbg !5366
  br i1 %26, label %panic5, label %bb13, !dbg !5366

bb13:                                             ; preds = %bb12
  store i32* %_3.i27, i32** %self.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i23, metadata !4623, metadata !DIExpression()), !dbg !5367
  store i64 %_49.0, i64* %count.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i22, metadata !4626, metadata !DIExpression()), !dbg !5369
  %27 = getelementptr inbounds i32, i32* %_3.i27, i64 %_49.0, !dbg !5370
  store i32* %27, i32** %1, align 8, !dbg !5370
  %_3.i24 = load i32*, i32** %1, align 8, !dbg !5370
  br label %bb14, !dbg !5365

panic5:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.6 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc559 to %"core::panic::location::Location"*)) #15, !dbg !5366
  unreachable, !dbg !5366

bb14:                                             ; preds = %bb13
  %_51 = load i32, i32* %k, align 4, !dbg !5371
  %_50 = sext i32 %_51 to i64, !dbg !5371
  store i32* %_3.i24, i32** %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i20, metadata !4623, metadata !DIExpression()), !dbg !5372
  store i64 %_50, i64* %count.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i19, metadata !4626, metadata !DIExpression()), !dbg !5374
  %28 = getelementptr inbounds i32, i32* %_3.i24, i64 %_50, !dbg !5375
  store i32* %28, i32** %2, align 8, !dbg !5375
  %_3.i21 = load i32*, i32** %2, align 8, !dbg !5375
  br label %bb15, !dbg !5365

bb15:                                             ; preds = %bb14
  store i32 %fresh0, i32* %_3.i21, align 4, !dbg !5376
  %29 = load i32, i32* %k, align 4, !dbg !5377
  %30 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %29, i32 1), !dbg !5377
  %_52.0 = extractvalue { i32, i1 } %30, 0, !dbg !5377
  %_52.1 = extractvalue { i32, i1 } %30, 1, !dbg !5377
  %31 = call i1 @llvm.expect.i1(i1 %_52.1, i1 false), !dbg !5377
  br i1 %31, label %panic6, label %bb16, !dbg !5377

bb16:                                             ; preds = %bb15
  store i32 %_52.0, i32* %k, align 4, !dbg !5377
  br label %bb7, !dbg !5352

panic6:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc561 to %"core::panic::location::Location"*)) #15, !dbg !5377
  unreachable, !dbg !5377

bb18:                                             ; preds = %bb17
  store i32 %_53.0, i32* %j, align 4, !dbg !5354
  br label %bb4, !dbg !5347

panic7:                                           ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc563 to %"core::panic::location::Location"*)) #15, !dbg !5354
  unreachable, !dbg !5354

bb20:                                             ; preds = %bb19
  store i32 %_54.0, i32* %i, align 4, !dbg !5350
  br label %bb2, !dbg !5343

panic8:                                           ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc565 to %"core::panic::location::Location"*)) #15, !dbg !5350
  unreachable, !dbg !5350

bb22:                                             ; preds = %bb21
  %32 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 2, i64 %_67.0), !dbg !5378
  %_68.0 = extractvalue { i64, i1 } %32, 0, !dbg !5378
  %_68.1 = extractvalue { i64, i1 } %32, 1, !dbg !5378
  %33 = call i1 @llvm.expect.i1(i1 %_68.1, i1 false), !dbg !5378
  br i1 %33, label %panic10, label %bb23, !dbg !5378

panic9:                                           ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.6 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc567 to %"core::panic::location::Location"*)) #15, !dbg !5345
  unreachable, !dbg !5345

bb23:                                             ; preds = %bb22
  store i32* %a, i32** %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i17, metadata !4623, metadata !DIExpression()), !dbg !5379
  store i64 %_68.0, i64* %count.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i16, metadata !4626, metadata !DIExpression()), !dbg !5381
  %34 = getelementptr inbounds i32, i32* %a, i64 %_68.0, !dbg !5382
  store i32* %34, i32** %3, align 8, !dbg !5382
  %_3.i18 = load i32*, i32** %3, align 8, !dbg !5382
  br label %bb24, !dbg !5383

panic10:                                          ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.6 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc569 to %"core::panic::location::Location"*)) #15, !dbg !5378
  unreachable, !dbg !5378

bb24:                                             ; preds = %bb23
  %35 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %n, i32 %n), !dbg !5384
  %_74.0 = extractvalue { i32, i1 } %35, 0, !dbg !5384
  %_74.1 = extractvalue { i32, i1 } %35, 1, !dbg !5384
  %36 = call i1 @llvm.expect.i1(i1 %_74.1, i1 false), !dbg !5384
  br i1 %36, label %panic11, label %bb25, !dbg !5384

bb25:                                             ; preds = %bb24
  %_70 = sext i32 %_74.0 to i64, !dbg !5384
  %37 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %_70, i64 %vla_0), !dbg !5384
  %_77.0 = extractvalue { i64, i1 } %37, 0, !dbg !5384
  %_77.1 = extractvalue { i64, i1 } %37, 1, !dbg !5384
  %38 = call i1 @llvm.expect.i1(i1 %_77.1, i1 false), !dbg !5384
  br i1 %38, label %panic12, label %bb26, !dbg !5384

panic11:                                          ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.6 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc571 to %"core::panic::location::Location"*)) #15, !dbg !5384
  unreachable, !dbg !5384

bb26:                                             ; preds = %bb25
  store i32* %_3.i18, i32** %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i14, metadata !4623, metadata !DIExpression()), !dbg !5385
  store i64 %_77.0, i64* %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i13, metadata !4626, metadata !DIExpression()), !dbg !5387
  %39 = getelementptr inbounds i32, i32* %_3.i18, i64 %_77.0, !dbg !5388
  store i32* %39, i32** %4, align 8, !dbg !5388
  %_3.i15 = load i32*, i32** %4, align 8, !dbg !5388
  br label %bb27, !dbg !5383

panic12:                                          ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.6 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc571 to %"core::panic::location::Location"*)) #15, !dbg !5384
  unreachable, !dbg !5384

bb27:                                             ; preds = %bb26
  %_78 = sext i32 %m to i64, !dbg !5389
  store i32* %_3.i15, i32** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i, metadata !4623, metadata !DIExpression()), !dbg !5390
  store i64 %_78, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !4626, metadata !DIExpression()), !dbg !5392
  %40 = getelementptr inbounds i32, i32* %_3.i15, i64 %_78, !dbg !5393
  store i32* %40, i32** %5, align 8, !dbg !5393
  %_3.i = load i32*, i32** %5, align 8, !dbg !5393
  br label %bb28, !dbg !5383

bb28:                                             ; preds = %bb27
  store i32* %_3.i, i32** %past_end.dbg.spill, align 8, !dbg !5394
  call void @llvm.dbg.declare(metadata i32** %past_end.dbg.spill, metadata !5328, metadata !DIExpression()), !dbg !5395
  ret void, !dbg !5396
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_use_arrays2(i32 %n, i32 %m, i32* %a) unnamed_addr #2 !dbg !5397 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i12 = alloca i64, align 8
  %self.dbg.spill.i13 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i9 = alloca i64, align 8
  %self.dbg.spill.i10 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i32*, align 8
  %fresh1.dbg.spill = alloca i32, align 4
  %vla_0.dbg.spill = alloca i64, align 8
  %vla.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i32*, align 8
  %m.dbg.spill = alloca i32, align 4
  %n.dbg.spill = alloca i32, align 4
  %k = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %counter = alloca i32, align 4
  store i32 %n, i32* %n.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !5399, metadata !DIExpression()), !dbg !5416
  store i32 %m, i32* %m.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %m.dbg.spill, metadata !5400, metadata !DIExpression()), !dbg !5417
  store i32* %a, i32** %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %a.dbg.spill, metadata !5401, metadata !DIExpression()), !dbg !5418
  call void @llvm.dbg.declare(metadata i32* %counter, metadata !5406, metadata !DIExpression()), !dbg !5419
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5408, metadata !DIExpression()), !dbg !5420
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5410, metadata !DIExpression()), !dbg !5421
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5412, metadata !DIExpression()), !dbg !5422
  %3 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %n, i32 %n), !dbg !5423
  %_8.0 = extractvalue { i32, i1 } %3, 0, !dbg !5423
  %_8.1 = extractvalue { i32, i1 } %3, 1, !dbg !5423
  %4 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !5423
  br i1 %4, label %panic, label %bb1, !dbg !5423

bb1:                                              ; preds = %start
  %vla = sext i32 %_8.0 to i64, !dbg !5423
  store i64 %vla, i64* %vla.dbg.spill, align 8, !dbg !5423
  call void @llvm.dbg.declare(metadata i64* %vla.dbg.spill, metadata !5402, metadata !DIExpression()), !dbg !5424
  %vla_0 = sext i32 %m to i64, !dbg !5425
  store i64 %vla_0, i64* %vla_0.dbg.spill, align 8, !dbg !5425
  call void @llvm.dbg.declare(metadata i64* %vla_0.dbg.spill, metadata !5404, metadata !DIExpression()), !dbg !5426
  store i32 1, i32* %counter, align 4, !dbg !5427
  store i32 0, i32* %i, align 4, !dbg !5428
  br label %bb2, !dbg !5429

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.6 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc573 to %"core::panic::location::Location"*)) #15, !dbg !5423
  unreachable, !dbg !5423

bb2:                                              ; preds = %bb20, %bb1
  %_14 = load i32, i32* %i, align 4, !dbg !5430
  %_13 = icmp slt i32 %_14, 2, !dbg !5430
  br i1 %_13, label %bb3, label %bb21, !dbg !5430

bb21:                                             ; preds = %bb2
  ret void, !dbg !5431

bb3:                                              ; preds = %bb2
  store i32 0, i32* %j, align 4, !dbg !5432
  br label %bb4, !dbg !5433

bb4:                                              ; preds = %bb18, %bb3
  %_18 = load i32, i32* %j, align 4, !dbg !5434
  %5 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %n, i32 %n), !dbg !5435
  %_22.0 = extractvalue { i32, i1 } %5, 0, !dbg !5435
  %_22.1 = extractvalue { i32, i1 } %5, 1, !dbg !5435
  %6 = call i1 @llvm.expect.i1(i1 %_22.1, i1 false), !dbg !5435
  br i1 %6, label %panic1, label %bb5, !dbg !5435

bb5:                                              ; preds = %bb4
  %_17 = icmp slt i32 %_18, %_22.0, !dbg !5434
  br i1 %_17, label %bb6, label %bb19, !dbg !5434

panic1:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.6 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc575 to %"core::panic::location::Location"*)) #15, !dbg !5435
  unreachable, !dbg !5435

bb19:                                             ; preds = %bb5
  %7 = load i32, i32* %i, align 4, !dbg !5436
  %8 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %7, i32 1), !dbg !5436
  %_54.0 = extractvalue { i32, i1 } %8, 0, !dbg !5436
  %_54.1 = extractvalue { i32, i1 } %8, 1, !dbg !5436
  %9 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false), !dbg !5436
  br i1 %9, label %panic8, label %bb20, !dbg !5436

bb6:                                              ; preds = %bb5
  store i32 0, i32* %k, align 4, !dbg !5437
  br label %bb7, !dbg !5438

bb7:                                              ; preds = %bb16, %bb6
  %_25 = load i32, i32* %k, align 4, !dbg !5439
  %_24 = icmp slt i32 %_25, %m, !dbg !5439
  br i1 %_24, label %bb8, label %bb17, !dbg !5439

bb17:                                             ; preds = %bb7
  %10 = load i32, i32* %j, align 4, !dbg !5440
  %11 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %10, i32 1), !dbg !5440
  %_53.0 = extractvalue { i32, i1 } %11, 0, !dbg !5440
  %_53.1 = extractvalue { i32, i1 } %11, 1, !dbg !5440
  %12 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !5440
  br i1 %12, label %panic7, label %bb18, !dbg !5440

bb8:                                              ; preds = %bb7
  %fresh1 = load i32, i32* %counter, align 4, !dbg !5441
  store i32 %fresh1, i32* %fresh1.dbg.spill, align 4, !dbg !5441
  call void @llvm.dbg.declare(metadata i32* %fresh1.dbg.spill, metadata !5414, metadata !DIExpression()), !dbg !5442
  %_28 = load i32, i32* %counter, align 4, !dbg !5443
  %13 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_28, i32 1), !dbg !5443
  %_29.0 = extractvalue { i32, i1 } %13, 0, !dbg !5443
  %_29.1 = extractvalue { i32, i1 } %13, 1, !dbg !5443
  %14 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false), !dbg !5443
  br i1 %14, label %panic2, label %bb9, !dbg !5443

bb9:                                              ; preds = %bb8
  store i32 %_29.0, i32* %counter, align 4, !dbg !5444
  %_37 = load i32, i32* %i, align 4, !dbg !5445
  %_36 = sext i32 %_37 to i64, !dbg !5445
  %15 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %vla, i64 %vla_0), !dbg !5446
  %_42.0 = extractvalue { i64, i1 } %15, 0, !dbg !5446
  %_42.1 = extractvalue { i64, i1 } %15, 1, !dbg !5446
  %16 = call i1 @llvm.expect.i1(i1 %_42.1, i1 false), !dbg !5446
  br i1 %16, label %panic3, label %bb10, !dbg !5446

panic2:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc577 to %"core::panic::location::Location"*)) #15, !dbg !5443
  unreachable, !dbg !5443

bb10:                                             ; preds = %bb9
  %17 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %_36, i64 %_42.0), !dbg !5445
  %_43.0 = extractvalue { i64, i1 } %17, 0, !dbg !5445
  %_43.1 = extractvalue { i64, i1 } %17, 1, !dbg !5445
  %18 = call i1 @llvm.expect.i1(i1 %_43.1, i1 false), !dbg !5445
  br i1 %18, label %panic4, label %bb11, !dbg !5445

panic3:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.6 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc579 to %"core::panic::location::Location"*)) #15, !dbg !5446
  unreachable, !dbg !5446

bb11:                                             ; preds = %bb10
  store i32* %a, i32** %self.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i13, metadata !4623, metadata !DIExpression()), !dbg !5447
  store i64 %_43.0, i64* %count.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i12, metadata !4626, metadata !DIExpression()), !dbg !5449
  %19 = getelementptr inbounds i32, i32* %a, i64 %_43.0, !dbg !5450
  store i32* %19, i32** %0, align 8, !dbg !5450
  %_3.i14 = load i32*, i32** %0, align 8, !dbg !5450
  br label %bb12, !dbg !5451

panic4:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.6 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc581 to %"core::panic::location::Location"*)) #15, !dbg !5445
  unreachable, !dbg !5445

bb12:                                             ; preds = %bb11
  %_46 = load i32, i32* %j, align 4, !dbg !5452
  %_45 = sext i32 %_46 to i64, !dbg !5452
  %20 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %_45, i64 %vla_0), !dbg !5452
  %_49.0 = extractvalue { i64, i1 } %20, 0, !dbg !5452
  %_49.1 = extractvalue { i64, i1 } %20, 1, !dbg !5452
  %21 = call i1 @llvm.expect.i1(i1 %_49.1, i1 false), !dbg !5452
  br i1 %21, label %panic5, label %bb13, !dbg !5452

bb13:                                             ; preds = %bb12
  store i32* %_3.i14, i32** %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i10, metadata !4623, metadata !DIExpression()), !dbg !5453
  store i64 %_49.0, i64* %count.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i9, metadata !4626, metadata !DIExpression()), !dbg !5455
  %22 = getelementptr inbounds i32, i32* %_3.i14, i64 %_49.0, !dbg !5456
  store i32* %22, i32** %1, align 8, !dbg !5456
  %_3.i11 = load i32*, i32** %1, align 8, !dbg !5456
  br label %bb14, !dbg !5451

panic5:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.6 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc583 to %"core::panic::location::Location"*)) #15, !dbg !5452
  unreachable, !dbg !5452

bb14:                                             ; preds = %bb13
  %_51 = load i32, i32* %k, align 4, !dbg !5457
  %_50 = sext i32 %_51 to i64, !dbg !5457
  store i32* %_3.i11, i32** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i, metadata !4623, metadata !DIExpression()), !dbg !5458
  store i64 %_50, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !4626, metadata !DIExpression()), !dbg !5460
  %23 = getelementptr inbounds i32, i32* %_3.i11, i64 %_50, !dbg !5461
  store i32* %23, i32** %2, align 8, !dbg !5461
  %_3.i = load i32*, i32** %2, align 8, !dbg !5461
  br label %bb15, !dbg !5451

bb15:                                             ; preds = %bb14
  store i32 %fresh1, i32* %_3.i, align 4, !dbg !5462
  %24 = load i32, i32* %k, align 4, !dbg !5463
  %25 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %24, i32 1), !dbg !5463
  %_52.0 = extractvalue { i32, i1 } %25, 0, !dbg !5463
  %_52.1 = extractvalue { i32, i1 } %25, 1, !dbg !5463
  %26 = call i1 @llvm.expect.i1(i1 %_52.1, i1 false), !dbg !5463
  br i1 %26, label %panic6, label %bb16, !dbg !5463

bb16:                                             ; preds = %bb15
  store i32 %_52.0, i32* %k, align 4, !dbg !5463
  br label %bb7, !dbg !5438

panic6:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc585 to %"core::panic::location::Location"*)) #15, !dbg !5463
  unreachable, !dbg !5463

bb18:                                             ; preds = %bb17
  store i32 %_53.0, i32* %j, align 4, !dbg !5440
  br label %bb4, !dbg !5433

panic7:                                           ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc587 to %"core::panic::location::Location"*)) #15, !dbg !5440
  unreachable, !dbg !5440

bb20:                                             ; preds = %bb19
  store i32 %_54.0, i32* %i, align 4, !dbg !5436
  br label %bb2, !dbg !5429

panic8:                                           ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc589 to %"core::panic::location::Location"*)) #15, !dbg !5436
  unreachable, !dbg !5436
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_variable_arrays(i32* %buf) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5464 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i34 = alloca i64, align 8
  %self.dbg.spill.i35 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i31 = alloca i64, align 8
  %self.dbg.spill.i32 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i28 = alloca i64, align 8
  %self.dbg.spill.i29 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i25 = alloca i64, align 8
  %self.dbg.spill.i26 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %count.dbg.spill.i22 = alloca i64, align 8
  %self.dbg.spill.i23 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %count.dbg.spill.i19 = alloca i64, align 8
  %self.dbg.spill.i20 = alloca i32*, align 8
  %6 = alloca [4 x [5 x i32]]*, align 8
  %count.dbg.spill.i16 = alloca i64, align 8
  %self.dbg.spill.i17 = alloca [4 x [5 x i32]]*, align 8
  %7 = alloca [4 x [5 x i32]]*, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca [4 x [5 x i32]]*, align 8
  %8 = alloca [5 x i32]*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca [5 x i32]*, align 8
  %fresh3.dbg.spill = alloca i32, align 4
  %9 = alloca { i8*, i32 }, align 8
  %vla.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i32, align 4
  %fresh2.dbg.spill = alloca i32, align 4
  %buf.dbg.spill = alloca i32*, align 8
  %past_end = alloca i32*, align 8
  %i_0 = alloca i32, align 4
  %var1 = alloca %"alloc::vec::Vec<i32>", align 8
  %k = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %counter = alloca i32, align 4
  %_4 = alloca [5 x i32], align 4
  %_3 = alloca [4 x [5 x i32]], align 4
  %grid = alloca [4 x [4 x [5 x i32]]], align 4
  store i32* %buf, i32** %buf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %buf.dbg.spill, metadata !5468, metadata !DIExpression()), !dbg !5494
  call void @llvm.dbg.declare(metadata [4 x [4 x [5 x i32]]]* %grid, metadata !5469, metadata !DIExpression()), !dbg !5495
  call void @llvm.dbg.declare(metadata i32* %counter, metadata !5472, metadata !DIExpression()), !dbg !5496
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5474, metadata !DIExpression()), !dbg !5497
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5476, metadata !DIExpression()), !dbg !5498
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5478, metadata !DIExpression()), !dbg !5499
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"* %var1, metadata !5486, metadata !DIExpression()), !dbg !5500
  call void @llvm.dbg.declare(metadata i32* %i_0, metadata !5488, metadata !DIExpression()), !dbg !5501
  call void @llvm.dbg.declare(metadata i32** %past_end, metadata !5492, metadata !DIExpression()), !dbg !5502
  %10 = getelementptr inbounds [5 x i32], [5 x i32]* %_4, i64 0, i64 0, !dbg !5503
  %11 = bitcast i32* %10 to i8*, !dbg !5503
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 20, i1 false), !dbg !5503
  %12 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %_3, i64 0, i64 0, !dbg !5504
  %13 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %_3, i64 0, i64 4, !dbg !5504
  br label %repeat_loop_header, !dbg !5504

repeat_loop_header:                               ; preds = %repeat_loop_body, %start
  %14 = phi [5 x i32]* [ %12, %start ], [ %18, %repeat_loop_body ]
  %15 = icmp ne [5 x i32]* %14, %13
  br i1 %15, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  %16 = bitcast [5 x i32]* %14 to i8*
  %17 = bitcast [5 x i32]* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 20, i1 false)
  %18 = getelementptr inbounds [5 x i32], [5 x i32]* %14, i64 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  %19 = getelementptr inbounds [4 x [4 x [5 x i32]]], [4 x [4 x [5 x i32]]]* %grid, i64 0, i64 0, !dbg !5505
  %20 = getelementptr inbounds [4 x [4 x [5 x i32]]], [4 x [4 x [5 x i32]]]* %grid, i64 0, i64 4, !dbg !5505
  br label %repeat_loop_header1, !dbg !5505

repeat_loop_header1:                              ; preds = %repeat_loop_body2, %repeat_loop_next
  %21 = phi [4 x [5 x i32]]* [ %19, %repeat_loop_next ], [ %25, %repeat_loop_body2 ]
  %22 = icmp ne [4 x [5 x i32]]* %21, %20
  br i1 %22, label %repeat_loop_body2, label %repeat_loop_next3

repeat_loop_body2:                                ; preds = %repeat_loop_header1
  %23 = bitcast [4 x [5 x i32]]* %21 to i8*
  %24 = bitcast [4 x [5 x i32]]* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %24, i64 80, i1 false)
  %25 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %21, i64 1
  br label %repeat_loop_header1

repeat_loop_next3:                                ; preds = %repeat_loop_header1
  %_10.0 = bitcast [4 x [4 x [5 x i32]]]* %grid to [0 x [4 x [5 x i32]]]*, !dbg !5506
; call core::slice::<impl [T]>::as_mut_ptr
  %_9 = call [4 x [5 x i32]]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h57ea2a9e05028a3eE"([0 x [4 x [5 x i32]]]* align 4 %_10.0, i64 4), !dbg !5506
  br label %bb1, !dbg !5506

bb1:                                              ; preds = %repeat_loop_next3
  %_8 = bitcast [4 x [5 x i32]]* %_9 to i32*, !dbg !5506
  call void @rust_use_arrays(i32 2, i32 5, i32* %_8), !dbg !5507
  br label %bb2, !dbg !5507

bb2:                                              ; preds = %bb1
  %_18.0 = bitcast [4 x [4 x [5 x i32]]]* %grid to [0 x [4 x [5 x i32]]]*, !dbg !5508
; call core::slice::<impl [T]>::as_mut_ptr
  %_17 = call [4 x [5 x i32]]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h57ea2a9e05028a3eE"([0 x [4 x [5 x i32]]]* align 4 %_18.0, i64 4), !dbg !5508
  br label %bb3, !dbg !5508

bb3:                                              ; preds = %bb2
  store [4 x [5 x i32]]* %_17, [4 x [5 x i32]]** %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata [4 x [5 x i32]]** %self.dbg.spill.i17, metadata !5509, metadata !DIExpression()), !dbg !5515
  store i64 2, i64* %count.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i16, metadata !5514, metadata !DIExpression()), !dbg !5517
  %26 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %_17, i64 2, !dbg !5518
  store [4 x [5 x i32]]* %26, [4 x [5 x i32]]** %6, align 8, !dbg !5518
  %_3.i18 = load [4 x [5 x i32]]*, [4 x [5 x i32]]** %6, align 8, !dbg !5518
  br label %bb4, !dbg !5508

bb4:                                              ; preds = %bb3
  %_15 = bitcast [4 x [5 x i32]]* %_3.i18 to i32*, !dbg !5508
  call void @rust_use_arrays(i32 2, i32 5, i32* %_15), !dbg !5519
  br label %bb5, !dbg !5519

bb5:                                              ; preds = %bb4
  store i32 0, i32* %counter, align 4, !dbg !5520
  store i32 0, i32* %i, align 4, !dbg !5521
  br label %bb6, !dbg !5522

bb6:                                              ; preds = %bb21, %bb5
  %_24 = load i32, i32* %i, align 4, !dbg !5523
  %_23 = icmp slt i32 %_24, 4, !dbg !5523
  br i1 %_23, label %bb7, label %bb22, !dbg !5523

bb22:                                             ; preds = %bb6
  store i32 8, i32* %n.dbg.spill, align 4, !dbg !5524
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !5482, metadata !DIExpression()), !dbg !5525
  store i64 8, i64* %vla.dbg.spill, align 8, !dbg !5526
  call void @llvm.dbg.declare(metadata i64* %vla.dbg.spill, metadata !5484, metadata !DIExpression()), !dbg !5527
; call alloc::vec::from_elem
  call void @_ZN5alloc3vec9from_elem17hce8d745a37188a40E(%"alloc::vec::Vec<i32>"* sret(%"alloc::vec::Vec<i32>") %var1, i32 0, i64 8), !dbg !5528
  br label %bb23, !dbg !5528

bb7:                                              ; preds = %bb6
  store i32 0, i32* %j, align 4, !dbg !5529
  br label %bb8, !dbg !5530

bb8:                                              ; preds = %bb19, %bb7
  %_28 = load i32, i32* %j, align 4, !dbg !5531
  %_27 = icmp slt i32 %_28, 4, !dbg !5531
  br i1 %_27, label %bb9, label %bb20, !dbg !5531

bb20:                                             ; preds = %bb8
  %27 = load i32, i32* %i, align 4, !dbg !5532
  %28 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 1), !dbg !5532
  %_56.0 = extractvalue { i32, i1 } %28, 0, !dbg !5532
  %_56.1 = extractvalue { i32, i1 } %28, 1, !dbg !5532
  %29 = call i1 @llvm.expect.i1(i1 %_56.1, i1 false), !dbg !5532
  br i1 %29, label %panic9, label %bb21, !dbg !5532

bb9:                                              ; preds = %bb8
  store i32 0, i32* %k, align 4, !dbg !5533
  br label %bb10, !dbg !5534

bb10:                                             ; preds = %bb17, %bb9
  %_32 = load i32, i32* %k, align 4, !dbg !5535
  %_31 = icmp slt i32 %_32, 5, !dbg !5535
  br i1 %_31, label %bb11, label %bb18, !dbg !5535

bb18:                                             ; preds = %bb10
  %30 = load i32, i32* %j, align 4, !dbg !5536
  %31 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %30, i32 1), !dbg !5536
  %_55.0 = extractvalue { i32, i1 } %31, 0, !dbg !5536
  %_55.1 = extractvalue { i32, i1 } %31, 1, !dbg !5536
  %32 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !5536
  br i1 %32, label %panic8, label %bb19, !dbg !5536

bb11:                                             ; preds = %bb10
  %fresh2 = load i32, i32* %counter, align 4, !dbg !5537
  store i32 %fresh2, i32* %fresh2.dbg.spill, align 4, !dbg !5537
  call void @llvm.dbg.declare(metadata i32* %fresh2.dbg.spill, metadata !5480, metadata !DIExpression()), !dbg !5538
  %_35 = load i32, i32* %counter, align 4, !dbg !5539
  %33 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_35, i32 1), !dbg !5539
  %_36.0 = extractvalue { i32, i1 } %33, 0, !dbg !5539
  %_36.1 = extractvalue { i32, i1 } %33, 1, !dbg !5539
  %34 = call i1 @llvm.expect.i1(i1 %_36.1, i1 false), !dbg !5539
  br i1 %34, label %panic, label %bb12, !dbg !5539

bb12:                                             ; preds = %bb11
  store i32 %_36.0, i32* %counter, align 4, !dbg !5540
  %_39 = load i32, i32* %i, align 4, !dbg !5541
  %_38 = sext i32 %_39 to i64, !dbg !5541
  %_41 = icmp ult i64 %_38, 4, !dbg !5542
  %35 = call i1 @llvm.expect.i1(i1 %_41, i1 true), !dbg !5542
  br i1 %35, label %bb13, label %panic4, !dbg !5542

panic:                                            ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc591 to %"core::panic::location::Location"*)) #15, !dbg !5539
  unreachable, !dbg !5539

bb13:                                             ; preds = %bb12
  %_43 = load i32, i32* %j, align 4, !dbg !5543
  %_42 = sext i32 %_43 to i64, !dbg !5543
  %_45 = icmp ult i64 %_42, 4, !dbg !5542
  %36 = call i1 @llvm.expect.i1(i1 %_45, i1 true), !dbg !5542
  br i1 %36, label %bb14, label %panic5, !dbg !5542

panic4:                                           ; preds = %bb12
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_38, i64 4, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc593 to %"core::panic::location::Location"*)) #15, !dbg !5542
  unreachable, !dbg !5542

bb14:                                             ; preds = %bb13
  %_47 = load i32, i32* %k, align 4, !dbg !5544
  %_46 = sext i32 %_47 to i64, !dbg !5544
  %_49 = icmp ult i64 %_46, 5, !dbg !5542
  %37 = call i1 @llvm.expect.i1(i1 %_49, i1 true), !dbg !5542
  br i1 %37, label %bb15, label %panic6, !dbg !5542

panic5:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_42, i64 4, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc593 to %"core::panic::location::Location"*)) #15, !dbg !5542
  unreachable, !dbg !5542

bb15:                                             ; preds = %bb14
  %38 = getelementptr inbounds [4 x [4 x [5 x i32]]], [4 x [4 x [5 x i32]]]* %grid, i64 0, i64 %_38, !dbg !5542
  %39 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %38, i64 0, i64 %_42, !dbg !5542
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %39, i64 0, i64 %_46, !dbg !5542
  %_37 = load i32, i32* %40, align 4, !dbg !5542
  %_52 = sext i32 %fresh2 to i64, !dbg !5545
  store i32* %buf, i32** %self.dbg.spill.i35, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i35, metadata !4623, metadata !DIExpression()), !dbg !5546
  store i64 %_52, i64* %count.dbg.spill.i34, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i34, metadata !4626, metadata !DIExpression()), !dbg !5548
  %41 = getelementptr inbounds i32, i32* %buf, i64 %_52, !dbg !5549
  store i32* %41, i32** %0, align 8, !dbg !5549
  %_3.i36 = load i32*, i32** %0, align 8, !dbg !5549
  br label %bb16, !dbg !5550

panic6:                                           ; preds = %bb14
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_46, i64 5, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc593 to %"core::panic::location::Location"*)) #15, !dbg !5542
  unreachable, !dbg !5542

bb16:                                             ; preds = %bb15
  store i32 %_37, i32* %_3.i36, align 4, !dbg !5551
  %42 = load i32, i32* %k, align 4, !dbg !5552
  %43 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %42, i32 1), !dbg !5552
  %_54.0 = extractvalue { i32, i1 } %43, 0, !dbg !5552
  %_54.1 = extractvalue { i32, i1 } %43, 1, !dbg !5552
  %44 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false), !dbg !5552
  br i1 %44, label %panic7, label %bb17, !dbg !5552

bb17:                                             ; preds = %bb16
  store i32 %_54.0, i32* %k, align 4, !dbg !5552
  br label %bb10, !dbg !5534

panic7:                                           ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc595 to %"core::panic::location::Location"*)) #15, !dbg !5552
  unreachable, !dbg !5552

bb19:                                             ; preds = %bb18
  store i32 %_55.0, i32* %j, align 4, !dbg !5536
  br label %bb8, !dbg !5530

panic8:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc597 to %"core::panic::location::Location"*)) #15, !dbg !5536
  unreachable, !dbg !5536

bb21:                                             ; preds = %bb20
  store i32 %_56.0, i32* %i, align 4, !dbg !5532
  br label %bb6, !dbg !5522

panic9:                                           ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc599 to %"core::panic::location::Location"*)) #15, !dbg !5532
  unreachable, !dbg !5532

bb23:                                             ; preds = %bb22
  store i32 0, i32* %i_0, align 4, !dbg !5553
  br label %bb24, !dbg !5554

bb24:                                             ; preds = %bb33, %bb23
  %_63 = load i32, i32* %i_0, align 4, !dbg !5555
  %_62 = icmp slt i32 %_63, 8, !dbg !5555
  br i1 %_62, label %bb25, label %bb34, !dbg !5555

bb34:                                             ; preds = %bb24
  %_99.0 = bitcast [4 x [4 x [5 x i32]]]* %grid to [0 x [4 x [5 x i32]]]*, !dbg !5556
; invoke core::slice::<impl [T]>::as_mut_ptr
  %_98 = invoke [4 x [5 x i32]]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h57ea2a9e05028a3eE"([0 x [4 x [5 x i32]]]* align 4 %_99.0, i64 4)
          to label %bb35 unwind label %cleanup, !dbg !5556

bb25:                                             ; preds = %bb24
  %_66 = load i32, i32* %i_0, align 4, !dbg !5557
  %45 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 3, i32 %_66), !dbg !5558
  %_67.0 = extractvalue { i32, i1 } %45, 0, !dbg !5558
  %_67.1 = extractvalue { i32, i1 } %45, 1, !dbg !5558
  %46 = call i1 @llvm.expect.i1(i1 %_67.1, i1 false), !dbg !5558
  br i1 %46, label %panic10, label %bb26, !dbg !5558

bb26:                                             ; preds = %bb25
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_69 = invoke i32* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h79b40160d0f7335fE"(%"alloc::vec::Vec<i32>"* align 8 %var1)
          to label %bb27 unwind label %cleanup, !dbg !5559

panic10:                                          ; preds = %bb25
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.6 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc601 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup, !dbg !5558

bb44:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<i32>>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17h035ad200dd80b9a9E"(%"alloc::vec::Vec<i32>"* %var1) #16
          to label %bb45 unwind label %abort, !dbg !5560

cleanup:                                          ; preds = %bb40, %bb38, %bb36, %bb34, %panic12, %bb29, %panic11, %bb26, %panic10
  %47 = landingpad { i8*, i32 }
          cleanup
  %48 = extractvalue { i8*, i32 } %47, 0
  %49 = extractvalue { i8*, i32 } %47, 1
  %50 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %9, i32 0, i32 0
  store i8* %48, i8** %50, align 8
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %9, i32 0, i32 1
  store i32 %49, i32* %51, align 8
  br label %bb44

unreachable:                                      ; preds = %panic12, %panic11, %panic10
  unreachable

bb27:                                             ; preds = %bb26
  %_72 = load i32, i32* %i_0, align 4, !dbg !5561
  %_71 = sext i32 %_72 to i64, !dbg !5561
  store i32* %_69, i32** %self.dbg.spill.i32, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i32, metadata !4623, metadata !DIExpression()), !dbg !5562
  store i64 %_71, i64* %count.dbg.spill.i31, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i31, metadata !4626, metadata !DIExpression()), !dbg !5564
  %52 = getelementptr inbounds i32, i32* %_69, i64 %_71, !dbg !5565
  store i32* %52, i32** %1, align 8, !dbg !5565
  %_3.i33 = load i32*, i32** %1, align 8, !dbg !5565
  br label %bb28, !dbg !5566

bb28:                                             ; preds = %bb27
  store i32 %_67.0, i32* %_3.i33, align 4, !dbg !5567
  %fresh3 = load i32, i32* %counter, align 4, !dbg !5568
  store i32 %fresh3, i32* %fresh3.dbg.spill, align 4, !dbg !5568
  call void @llvm.dbg.declare(metadata i32* %fresh3.dbg.spill, metadata !5490, metadata !DIExpression()), !dbg !5569
  %_74 = load i32, i32* %counter, align 4, !dbg !5570
  %53 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_74, i32 1), !dbg !5570
  %_75.0 = extractvalue { i32, i1 } %53, 0, !dbg !5570
  %_75.1 = extractvalue { i32, i1 } %53, 1, !dbg !5570
  %54 = call i1 @llvm.expect.i1(i1 %_75.1, i1 false), !dbg !5570
  br i1 %54, label %panic11, label %bb29, !dbg !5570

bb29:                                             ; preds = %bb28
  store i32 %_75.0, i32* %counter, align 4, !dbg !5571
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_78 = invoke i32* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h79b40160d0f7335fE"(%"alloc::vec::Vec<i32>"* align 8 %var1)
          to label %bb30 unwind label %cleanup, !dbg !5572

panic11:                                          ; preds = %bb28
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc603 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup, !dbg !5570

bb30:                                             ; preds = %bb29
  %_81 = load i32, i32* %i_0, align 4, !dbg !5573
  %_80 = sext i32 %_81 to i64, !dbg !5573
  store i32* %_78, i32** %self.dbg.spill.i29, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i29, metadata !4623, metadata !DIExpression()), !dbg !5574
  store i64 %_80, i64* %count.dbg.spill.i28, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i28, metadata !4626, metadata !DIExpression()), !dbg !5576
  %55 = getelementptr inbounds i32, i32* %_78, i64 %_80, !dbg !5577
  store i32* %55, i32** %2, align 8, !dbg !5577
  %_3.i30 = load i32*, i32** %2, align 8, !dbg !5577
  br label %bb31, !dbg !5578

bb31:                                             ; preds = %bb30
  %_76 = load i32, i32* %_3.i30, align 4, !dbg !5579
  %_84 = sext i32 %fresh3 to i64, !dbg !5580
  store i32* %buf, i32** %self.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i26, metadata !4623, metadata !DIExpression()), !dbg !5581
  store i64 %_84, i64* %count.dbg.spill.i25, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i25, metadata !4626, metadata !DIExpression()), !dbg !5583
  %56 = getelementptr inbounds i32, i32* %buf, i64 %_84, !dbg !5584
  store i32* %56, i32** %3, align 8, !dbg !5584
  %_3.i27 = load i32*, i32** %3, align 8, !dbg !5584
  br label %bb32, !dbg !5585

bb32:                                             ; preds = %bb31
  store i32 %_76, i32* %_3.i27, align 4, !dbg !5586
  %57 = load i32, i32* %i_0, align 4, !dbg !5587
  %58 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 1), !dbg !5587
  %_86.0 = extractvalue { i32, i1 } %58, 0, !dbg !5587
  %_86.1 = extractvalue { i32, i1 } %58, 1, !dbg !5587
  %59 = call i1 @llvm.expect.i1(i1 %_86.1, i1 false), !dbg !5587
  br i1 %59, label %panic12, label %bb33, !dbg !5587

bb33:                                             ; preds = %bb32
  store i32 %_86.0, i32* %i_0, align 4, !dbg !5587
  br label %bb24, !dbg !5554

panic12:                                          ; preds = %bb32
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc605 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup, !dbg !5587

bb35:                                             ; preds = %bb34
  store [4 x [5 x i32]]* %_98, [4 x [5 x i32]]** %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata [4 x [5 x i32]]** %self.dbg.spill.i14, metadata !5509, metadata !DIExpression()), !dbg !5588
  store i64 4, i64* %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i13, metadata !5514, metadata !DIExpression()), !dbg !5590
  %60 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %_98, i64 4, !dbg !5591
  store [4 x [5 x i32]]* %60, [4 x [5 x i32]]** %7, align 8, !dbg !5591
  %_3.i15 = load [4 x [5 x i32]]*, [4 x [5 x i32]]** %7, align 8, !dbg !5591
  br label %bb36, !dbg !5592

bb36:                                             ; preds = %bb35
  %_95.0 = bitcast [4 x [5 x i32]]* %_3.i15 to [0 x [5 x i32]]*, !dbg !5593
; invoke core::slice::<impl [T]>::as_mut_ptr
  %_94 = invoke [5 x i32]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hd2020a2d1ced27d1E"([0 x [5 x i32]]* align 4 %_95.0, i64 4)
          to label %bb37 unwind label %cleanup, !dbg !5593

bb37:                                             ; preds = %bb36
  store [5 x i32]* %_94, [5 x i32]** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata [5 x i32]** %self.dbg.spill.i, metadata !5594, metadata !DIExpression()), !dbg !5600
  store i64 4, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !5599, metadata !DIExpression()), !dbg !5602
  %61 = getelementptr inbounds [5 x i32], [5 x i32]* %_94, i64 4, !dbg !5603
  store [5 x i32]* %61, [5 x i32]** %8, align 8, !dbg !5603
  %_3.i = load [5 x i32]*, [5 x i32]** %8, align 8, !dbg !5603
  br label %bb38, !dbg !5604

bb38:                                             ; preds = %bb37
  %_91.0 = bitcast [5 x i32]* %_3.i to [0 x i32]*, !dbg !5605
; invoke core::slice::<impl [T]>::as_mut_ptr
  %_90 = invoke i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h219c650c35cacae1E"([0 x i32]* align 4 %_91.0, i64 5)
          to label %bb39 unwind label %cleanup, !dbg !5605

bb39:                                             ; preds = %bb38
  store i32* %_90, i32** %self.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i23, metadata !4623, metadata !DIExpression()), !dbg !5606
  store i64 5, i64* %count.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i22, metadata !4626, metadata !DIExpression()), !dbg !5608
  %62 = getelementptr inbounds i32, i32* %_90, i64 5, !dbg !5609
  store i32* %62, i32** %4, align 8, !dbg !5609
  %_3.i24 = load i32*, i32** %4, align 8, !dbg !5609
  br label %bb40, !dbg !5610

bb40:                                             ; preds = %bb39
  store i32* %_3.i24, i32** %past_end, align 8, !dbg !5611
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_107 = invoke i32* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h79b40160d0f7335fE"(%"alloc::vec::Vec<i32>"* align 8 %var1)
          to label %bb41 unwind label %cleanup, !dbg !5612

bb41:                                             ; preds = %bb40
  store i32* %_107, i32** %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i20, metadata !4623, metadata !DIExpression()), !dbg !5613
  store i64 8, i64* %count.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i19, metadata !4626, metadata !DIExpression()), !dbg !5615
  %63 = getelementptr inbounds i32, i32* %_107, i64 8, !dbg !5616
  store i32* %63, i32** %5, align 8, !dbg !5616
  %_3.i21 = load i32*, i32** %5, align 8, !dbg !5616
  br label %bb42, !dbg !5617

bb42:                                             ; preds = %bb41
  store i32* %_3.i21, i32** %past_end, align 8, !dbg !5618
; call core::ptr::drop_in_place<alloc::vec::Vec<i32>>
  call void @"_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17h035ad200dd80b9a9E"(%"alloc::vec::Vec<i32>"* %var1), !dbg !5560
  br label %bb43, !dbg !5560

abort:                                            ; preds = %bb44
  %64 = landingpad { i8*, i32 }
          cleanup, !dbg !5619
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !5619
  unreachable, !dbg !5619

bb45:                                             ; preds = %bb44
  %65 = bitcast { i8*, i32 }* %9 to i8**, !dbg !5619
  %66 = load i8*, i8** %65, align 8, !dbg !5619
  %67 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %9, i32 0, i32 1, !dbg !5619
  %68 = load i32, i32* %67, align 8, !dbg !5619
  %69 = insertvalue { i8*, i32 } undef, i8* %66, 0, !dbg !5619
  %70 = insertvalue { i8*, i32 } %69, i32 %68, 1, !dbg !5619
  resume { i8*, i32 } %70, !dbg !5619

bb43:                                             ; preds = %bb42
  ret void, !dbg !5620
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_alloca_arrays(i32* %buf) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5621 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i35 = alloca i64, align 8
  %self.dbg.spill.i36 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i32 = alloca i64, align 8
  %self.dbg.spill.i33 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i29 = alloca i64, align 8
  %self.dbg.spill.i30 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i26 = alloca i64, align 8
  %self.dbg.spill.i27 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %count.dbg.spill.i23 = alloca i64, align 8
  %self.dbg.spill.i24 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %count.dbg.spill.i20 = alloca i64, align 8
  %self.dbg.spill.i21 = alloca i32*, align 8
  %6 = alloca [4 x [5 x i32]]*, align 8
  %count.dbg.spill.i17 = alloca i64, align 8
  %self.dbg.spill.i18 = alloca [4 x [5 x i32]]*, align 8
  %7 = alloca [4 x [5 x i32]]*, align 8
  %count.dbg.spill.i14 = alloca i64, align 8
  %self.dbg.spill.i15 = alloca [4 x [5 x i32]]*, align 8
  %8 = alloca [5 x i32]*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i13 = alloca [5 x i32]*, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %fresh6.dbg.spill = alloca i32, align 4
  %var1.dbg.spill = alloca i32*, align 8
  %9 = alloca { i8*, i32 }, align 8
  %n.dbg.spill = alloca i32, align 4
  %fresh4.dbg.spill = alloca i32, align 4
  %buf.dbg.spill = alloca i32*, align 8
  %past_end = alloca i32*, align 8
  %i_0 = alloca i32, align 4
  %fresh5 = alloca %"alloc::vec::Vec<i32>", align 8
  %k = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %counter = alloca i32, align 4
  %_4 = alloca [5 x i32], align 4
  %_3 = alloca [4 x [5 x i32]], align 4
  %grid = alloca [4 x [4 x [5 x i32]]], align 4
  store i32* %buf, i32** %buf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %buf.dbg.spill, metadata !5623, metadata !DIExpression()), !dbg !5648
  call void @llvm.dbg.declare(metadata [4 x [4 x [5 x i32]]]* %grid, metadata !5624, metadata !DIExpression()), !dbg !5649
  call void @llvm.dbg.declare(metadata i32* %counter, metadata !5626, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5628, metadata !DIExpression()), !dbg !5651
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5630, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5632, metadata !DIExpression()), !dbg !5653
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"* %fresh5, metadata !5638, metadata !DIExpression()), !dbg !5654
  call void @llvm.dbg.declare(metadata i32* %i_0, metadata !5642, metadata !DIExpression()), !dbg !5655
  call void @llvm.dbg.declare(metadata i32** %past_end, metadata !5646, metadata !DIExpression()), !dbg !5656
  %10 = getelementptr inbounds [5 x i32], [5 x i32]* %_4, i64 0, i64 0, !dbg !5657
  %11 = bitcast i32* %10 to i8*, !dbg !5657
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 20, i1 false), !dbg !5657
  %12 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %_3, i64 0, i64 0, !dbg !5658
  %13 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %_3, i64 0, i64 4, !dbg !5658
  br label %repeat_loop_header, !dbg !5658

repeat_loop_header:                               ; preds = %repeat_loop_body, %start
  %14 = phi [5 x i32]* [ %12, %start ], [ %18, %repeat_loop_body ]
  %15 = icmp ne [5 x i32]* %14, %13
  br i1 %15, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  %16 = bitcast [5 x i32]* %14 to i8*
  %17 = bitcast [5 x i32]* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 20, i1 false)
  %18 = getelementptr inbounds [5 x i32], [5 x i32]* %14, i64 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  %19 = getelementptr inbounds [4 x [4 x [5 x i32]]], [4 x [4 x [5 x i32]]]* %grid, i64 0, i64 0, !dbg !5659
  %20 = getelementptr inbounds [4 x [4 x [5 x i32]]], [4 x [4 x [5 x i32]]]* %grid, i64 0, i64 4, !dbg !5659
  br label %repeat_loop_header1, !dbg !5659

repeat_loop_header1:                              ; preds = %repeat_loop_body2, %repeat_loop_next
  %21 = phi [4 x [5 x i32]]* [ %19, %repeat_loop_next ], [ %25, %repeat_loop_body2 ]
  %22 = icmp ne [4 x [5 x i32]]* %21, %20
  br i1 %22, label %repeat_loop_body2, label %repeat_loop_next3

repeat_loop_body2:                                ; preds = %repeat_loop_header1
  %23 = bitcast [4 x [5 x i32]]* %21 to i8*
  %24 = bitcast [4 x [5 x i32]]* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %24, i64 80, i1 false)
  %25 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %21, i64 1
  br label %repeat_loop_header1

repeat_loop_next3:                                ; preds = %repeat_loop_header1
  %_10.0 = bitcast [4 x [4 x [5 x i32]]]* %grid to [0 x [4 x [5 x i32]]]*, !dbg !5660
; call core::slice::<impl [T]>::as_mut_ptr
  %_9 = call [4 x [5 x i32]]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h57ea2a9e05028a3eE"([0 x [4 x [5 x i32]]]* align 4 %_10.0, i64 4), !dbg !5660
  br label %bb1, !dbg !5660

bb1:                                              ; preds = %repeat_loop_next3
  %_8 = bitcast [4 x [5 x i32]]* %_9 to i32*, !dbg !5660
  call void @rust_use_arrays(i32 2, i32 5, i32* %_8), !dbg !5661
  br label %bb2, !dbg !5661

bb2:                                              ; preds = %bb1
  %_18.0 = bitcast [4 x [4 x [5 x i32]]]* %grid to [0 x [4 x [5 x i32]]]*, !dbg !5662
; call core::slice::<impl [T]>::as_mut_ptr
  %_17 = call [4 x [5 x i32]]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h57ea2a9e05028a3eE"([0 x [4 x [5 x i32]]]* align 4 %_18.0, i64 4), !dbg !5662
  br label %bb3, !dbg !5662

bb3:                                              ; preds = %bb2
  store [4 x [5 x i32]]* %_17, [4 x [5 x i32]]** %self.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata [4 x [5 x i32]]** %self.dbg.spill.i18, metadata !5509, metadata !DIExpression()), !dbg !5663
  store i64 2, i64* %count.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i17, metadata !5514, metadata !DIExpression()), !dbg !5665
  %26 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %_17, i64 2, !dbg !5666
  store [4 x [5 x i32]]* %26, [4 x [5 x i32]]** %6, align 8, !dbg !5666
  %_3.i19 = load [4 x [5 x i32]]*, [4 x [5 x i32]]** %6, align 8, !dbg !5666
  br label %bb4, !dbg !5662

bb4:                                              ; preds = %bb3
  %_15 = bitcast [4 x [5 x i32]]* %_3.i19 to i32*, !dbg !5662
  call void @rust_use_arrays(i32 2, i32 5, i32* %_15), !dbg !5667
  br label %bb5, !dbg !5667

bb5:                                              ; preds = %bb4
  store i32 0, i32* %counter, align 4, !dbg !5668
  store i32 0, i32* %i, align 4, !dbg !5669
  br label %bb6, !dbg !5670

bb6:                                              ; preds = %bb21, %bb5
  %_24 = load i32, i32* %i, align 4, !dbg !5671
  %_23 = icmp slt i32 %_24, 4, !dbg !5671
  br i1 %_23, label %bb7, label %bb22, !dbg !5671

bb22:                                             ; preds = %bb6
  store i32 8, i32* %n.dbg.spill, align 4, !dbg !5672
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !5636, metadata !DIExpression()), !dbg !5673
  br label %bb23, !dbg !5674

bb7:                                              ; preds = %bb6
  store i32 0, i32* %j, align 4, !dbg !5675
  br label %bb8, !dbg !5676

bb8:                                              ; preds = %bb19, %bb7
  %_28 = load i32, i32* %j, align 4, !dbg !5677
  %_27 = icmp slt i32 %_28, 4, !dbg !5677
  br i1 %_27, label %bb9, label %bb20, !dbg !5677

bb20:                                             ; preds = %bb8
  %27 = load i32, i32* %i, align 4, !dbg !5678
  %28 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 1), !dbg !5678
  %_56.0 = extractvalue { i32, i1 } %28, 0, !dbg !5678
  %_56.1 = extractvalue { i32, i1 } %28, 1, !dbg !5678
  %29 = call i1 @llvm.expect.i1(i1 %_56.1, i1 false), !dbg !5678
  br i1 %29, label %panic9, label %bb21, !dbg !5678

bb9:                                              ; preds = %bb8
  store i32 0, i32* %k, align 4, !dbg !5679
  br label %bb10, !dbg !5680

bb10:                                             ; preds = %bb17, %bb9
  %_32 = load i32, i32* %k, align 4, !dbg !5681
  %_31 = icmp slt i32 %_32, 5, !dbg !5681
  br i1 %_31, label %bb11, label %bb18, !dbg !5681

bb18:                                             ; preds = %bb10
  %30 = load i32, i32* %j, align 4, !dbg !5682
  %31 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %30, i32 1), !dbg !5682
  %_55.0 = extractvalue { i32, i1 } %31, 0, !dbg !5682
  %_55.1 = extractvalue { i32, i1 } %31, 1, !dbg !5682
  %32 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !5682
  br i1 %32, label %panic8, label %bb19, !dbg !5682

bb11:                                             ; preds = %bb10
  %fresh4 = load i32, i32* %counter, align 4, !dbg !5683
  store i32 %fresh4, i32* %fresh4.dbg.spill, align 4, !dbg !5683
  call void @llvm.dbg.declare(metadata i32* %fresh4.dbg.spill, metadata !5634, metadata !DIExpression()), !dbg !5684
  %_35 = load i32, i32* %counter, align 4, !dbg !5685
  %33 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_35, i32 1), !dbg !5685
  %_36.0 = extractvalue { i32, i1 } %33, 0, !dbg !5685
  %_36.1 = extractvalue { i32, i1 } %33, 1, !dbg !5685
  %34 = call i1 @llvm.expect.i1(i1 %_36.1, i1 false), !dbg !5685
  br i1 %34, label %panic, label %bb12, !dbg !5685

bb12:                                             ; preds = %bb11
  store i32 %_36.0, i32* %counter, align 4, !dbg !5686
  %_39 = load i32, i32* %i, align 4, !dbg !5687
  %_38 = sext i32 %_39 to i64, !dbg !5687
  %_41 = icmp ult i64 %_38, 4, !dbg !5688
  %35 = call i1 @llvm.expect.i1(i1 %_41, i1 true), !dbg !5688
  br i1 %35, label %bb13, label %panic4, !dbg !5688

panic:                                            ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc607 to %"core::panic::location::Location"*)) #15, !dbg !5685
  unreachable, !dbg !5685

bb13:                                             ; preds = %bb12
  %_43 = load i32, i32* %j, align 4, !dbg !5689
  %_42 = sext i32 %_43 to i64, !dbg !5689
  %_45 = icmp ult i64 %_42, 4, !dbg !5688
  %36 = call i1 @llvm.expect.i1(i1 %_45, i1 true), !dbg !5688
  br i1 %36, label %bb14, label %panic5, !dbg !5688

panic4:                                           ; preds = %bb12
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_38, i64 4, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc609 to %"core::panic::location::Location"*)) #15, !dbg !5688
  unreachable, !dbg !5688

bb14:                                             ; preds = %bb13
  %_47 = load i32, i32* %k, align 4, !dbg !5690
  %_46 = sext i32 %_47 to i64, !dbg !5690
  %_49 = icmp ult i64 %_46, 5, !dbg !5688
  %37 = call i1 @llvm.expect.i1(i1 %_49, i1 true), !dbg !5688
  br i1 %37, label %bb15, label %panic6, !dbg !5688

panic5:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_42, i64 4, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc609 to %"core::panic::location::Location"*)) #15, !dbg !5688
  unreachable, !dbg !5688

bb15:                                             ; preds = %bb14
  %38 = getelementptr inbounds [4 x [4 x [5 x i32]]], [4 x [4 x [5 x i32]]]* %grid, i64 0, i64 %_38, !dbg !5688
  %39 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %38, i64 0, i64 %_42, !dbg !5688
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %39, i64 0, i64 %_46, !dbg !5688
  %_37 = load i32, i32* %40, align 4, !dbg !5688
  %_52 = sext i32 %fresh4 to i64, !dbg !5691
  store i32* %buf, i32** %self.dbg.spill.i36, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i36, metadata !4623, metadata !DIExpression()), !dbg !5692
  store i64 %_52, i64* %count.dbg.spill.i35, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i35, metadata !4626, metadata !DIExpression()), !dbg !5694
  %41 = getelementptr inbounds i32, i32* %buf, i64 %_52, !dbg !5695
  store i32* %41, i32** %0, align 8, !dbg !5695
  %_3.i37 = load i32*, i32** %0, align 8, !dbg !5695
  br label %bb16, !dbg !5696

panic6:                                           ; preds = %bb14
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_46, i64 5, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc609 to %"core::panic::location::Location"*)) #15, !dbg !5688
  unreachable, !dbg !5688

bb16:                                             ; preds = %bb15
  store i32 %_37, i32* %_3.i37, align 4, !dbg !5697
  %42 = load i32, i32* %k, align 4, !dbg !5698
  %43 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %42, i32 1), !dbg !5698
  %_54.0 = extractvalue { i32, i1 } %43, 0, !dbg !5698
  %_54.1 = extractvalue { i32, i1 } %43, 1, !dbg !5698
  %44 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false), !dbg !5698
  br i1 %44, label %panic7, label %bb17, !dbg !5698

bb17:                                             ; preds = %bb16
  store i32 %_54.0, i32* %k, align 4, !dbg !5698
  br label %bb10, !dbg !5680

panic7:                                           ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc611 to %"core::panic::location::Location"*)) #15, !dbg !5698
  unreachable, !dbg !5698

bb19:                                             ; preds = %bb18
  store i32 %_55.0, i32* %j, align 4, !dbg !5682
  br label %bb8, !dbg !5676

panic8:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc613 to %"core::panic::location::Location"*)) #15, !dbg !5682
  unreachable, !dbg !5682

bb21:                                             ; preds = %bb20
  store i32 %_56.0, i32* %i, align 4, !dbg !5678
  br label %bb6, !dbg !5670

panic9:                                           ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc615 to %"core::panic::location::Location"*)) #15, !dbg !5678
  unreachable, !dbg !5678

bb23:                                             ; preds = %bb22
  store i64 4, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !5699, metadata !DIExpression()), !dbg !5706
  store i64 8, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !5705, metadata !DIExpression()), !dbg !5708
  br label %bb24, !dbg !5709

bb24:                                             ; preds = %bb23
; call alloc::vec::from_elem
  call void @_ZN5alloc3vec9from_elem17hce8d745a37188a40E(%"alloc::vec::Vec<i32>"* sret(%"alloc::vec::Vec<i32>") %fresh5, i32 0, i64 32), !dbg !5710
  br label %bb25, !dbg !5710

bb25:                                             ; preds = %bb24
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %var1 = invoke i32* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h79b40160d0f7335fE"(%"alloc::vec::Vec<i32>"* align 8 %fresh5)
          to label %bb26 unwind label %cleanup, !dbg !5711

bb44:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<i32>>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17h035ad200dd80b9a9E"(%"alloc::vec::Vec<i32>"* %fresh5) #16
          to label %bb45 unwind label %abort, !dbg !5712

cleanup:                                          ; preds = %bb39, %bb37, %bb35, %panic12, %panic11, %panic10, %bb25
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  %47 = extractvalue { i8*, i32 } %45, 1
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %9, i32 0, i32 0
  store i8* %46, i8** %48, align 8
  %49 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %9, i32 0, i32 1
  store i32 %47, i32* %49, align 8
  br label %bb44

bb26:                                             ; preds = %bb25
  store i32* %var1, i32** %var1.dbg.spill, align 8, !dbg !5711
  call void @llvm.dbg.declare(metadata i32** %var1.dbg.spill, metadata !5640, metadata !DIExpression()), !dbg !5713
  store i32 0, i32* %i_0, align 4, !dbg !5714
  br label %bb27, !dbg !5715

bb27:                                             ; preds = %bb34, %bb26
  %_69 = load i32, i32* %i_0, align 4, !dbg !5716
  %_68 = icmp slt i32 %_69, 8, !dbg !5716
  br i1 %_68, label %bb28, label %bb35, !dbg !5716

bb35:                                             ; preds = %bb27
  %_103.0 = bitcast [4 x [4 x [5 x i32]]]* %grid to [0 x [4 x [5 x i32]]]*, !dbg !5717
; invoke core::slice::<impl [T]>::as_mut_ptr
  %_102 = invoke [4 x [5 x i32]]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h57ea2a9e05028a3eE"([0 x [4 x [5 x i32]]]* align 4 %_103.0, i64 4)
          to label %bb36 unwind label %cleanup, !dbg !5717

bb28:                                             ; preds = %bb27
  %_72 = load i32, i32* %i_0, align 4, !dbg !5718
  %50 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 3, i32 %_72), !dbg !5719
  %_73.0 = extractvalue { i32, i1 } %50, 0, !dbg !5719
  %_73.1 = extractvalue { i32, i1 } %50, 1, !dbg !5719
  %51 = call i1 @llvm.expect.i1(i1 %_73.1, i1 false), !dbg !5719
  br i1 %51, label %panic10, label %bb29, !dbg !5719

bb29:                                             ; preds = %bb28
  %_77 = load i32, i32* %i_0, align 4, !dbg !5720
  %_76 = sext i32 %_77 to i64, !dbg !5720
  store i32* %var1, i32** %self.dbg.spill.i33, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i33, metadata !4623, metadata !DIExpression()), !dbg !5721
  store i64 %_76, i64* %count.dbg.spill.i32, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i32, metadata !4626, metadata !DIExpression()), !dbg !5723
  %52 = getelementptr inbounds i32, i32* %var1, i64 %_76, !dbg !5724
  store i32* %52, i32** %1, align 8, !dbg !5724
  %_3.i34 = load i32*, i32** %1, align 8, !dbg !5724
  br label %bb30, !dbg !5725

panic10:                                          ; preds = %bb28
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.6 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc617 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup, !dbg !5719

unreachable:                                      ; preds = %panic12, %panic11, %panic10
  unreachable

bb30:                                             ; preds = %bb29
  store i32 %_73.0, i32* %_3.i34, align 4, !dbg !5726
  %fresh6 = load i32, i32* %counter, align 4, !dbg !5727
  store i32 %fresh6, i32* %fresh6.dbg.spill, align 4, !dbg !5727
  call void @llvm.dbg.declare(metadata i32* %fresh6.dbg.spill, metadata !5644, metadata !DIExpression()), !dbg !5728
  %_79 = load i32, i32* %counter, align 4, !dbg !5729
  %53 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_79, i32 1), !dbg !5729
  %_80.0 = extractvalue { i32, i1 } %53, 0, !dbg !5729
  %_80.1 = extractvalue { i32, i1 } %53, 1, !dbg !5729
  %54 = call i1 @llvm.expect.i1(i1 %_80.1, i1 false), !dbg !5729
  br i1 %54, label %panic11, label %bb31, !dbg !5729

bb31:                                             ; preds = %bb30
  store i32 %_80.0, i32* %counter, align 4, !dbg !5730
  %_85 = load i32, i32* %i_0, align 4, !dbg !5731
  %_84 = sext i32 %_85 to i64, !dbg !5731
  store i32* %var1, i32** %self.dbg.spill.i30, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i30, metadata !4623, metadata !DIExpression()), !dbg !5732
  store i64 %_84, i64* %count.dbg.spill.i29, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i29, metadata !4626, metadata !DIExpression()), !dbg !5734
  %55 = getelementptr inbounds i32, i32* %var1, i64 %_84, !dbg !5735
  store i32* %55, i32** %2, align 8, !dbg !5735
  %_3.i31 = load i32*, i32** %2, align 8, !dbg !5735
  br label %bb32, !dbg !5736

panic11:                                          ; preds = %bb30
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc619 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup, !dbg !5729

bb32:                                             ; preds = %bb31
  %_81 = load i32, i32* %_3.i31, align 4, !dbg !5737
  %_88 = sext i32 %fresh6 to i64, !dbg !5738
  store i32* %buf, i32** %self.dbg.spill.i27, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i27, metadata !4623, metadata !DIExpression()), !dbg !5739
  store i64 %_88, i64* %count.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i26, metadata !4626, metadata !DIExpression()), !dbg !5741
  %56 = getelementptr inbounds i32, i32* %buf, i64 %_88, !dbg !5742
  store i32* %56, i32** %3, align 8, !dbg !5742
  %_3.i28 = load i32*, i32** %3, align 8, !dbg !5742
  br label %bb33, !dbg !5743

bb33:                                             ; preds = %bb32
  store i32 %_81, i32* %_3.i28, align 4, !dbg !5744
  %57 = load i32, i32* %i_0, align 4, !dbg !5745
  %58 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 1), !dbg !5745
  %_90.0 = extractvalue { i32, i1 } %58, 0, !dbg !5745
  %_90.1 = extractvalue { i32, i1 } %58, 1, !dbg !5745
  %59 = call i1 @llvm.expect.i1(i1 %_90.1, i1 false), !dbg !5745
  br i1 %59, label %panic12, label %bb34, !dbg !5745

bb34:                                             ; preds = %bb33
  store i32 %_90.0, i32* %i_0, align 4, !dbg !5745
  br label %bb27, !dbg !5715

panic12:                                          ; preds = %bb33
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc621 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup, !dbg !5745

bb36:                                             ; preds = %bb35
  store [4 x [5 x i32]]* %_102, [4 x [5 x i32]]** %self.dbg.spill.i15, align 8
  call void @llvm.dbg.declare(metadata [4 x [5 x i32]]** %self.dbg.spill.i15, metadata !5509, metadata !DIExpression()), !dbg !5746
  store i64 4, i64* %count.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i14, metadata !5514, metadata !DIExpression()), !dbg !5748
  %60 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %_102, i64 4, !dbg !5749
  store [4 x [5 x i32]]* %60, [4 x [5 x i32]]** %7, align 8, !dbg !5749
  %_3.i16 = load [4 x [5 x i32]]*, [4 x [5 x i32]]** %7, align 8, !dbg !5749
  br label %bb37, !dbg !5750

bb37:                                             ; preds = %bb36
  %_99.0 = bitcast [4 x [5 x i32]]* %_3.i16 to [0 x [5 x i32]]*, !dbg !5751
; invoke core::slice::<impl [T]>::as_mut_ptr
  %_98 = invoke [5 x i32]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hd2020a2d1ced27d1E"([0 x [5 x i32]]* align 4 %_99.0, i64 4)
          to label %bb38 unwind label %cleanup, !dbg !5751

bb38:                                             ; preds = %bb37
  store [5 x i32]* %_98, [5 x i32]** %self.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata [5 x i32]** %self.dbg.spill.i13, metadata !5594, metadata !DIExpression()), !dbg !5752
  store i64 4, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !5599, metadata !DIExpression()), !dbg !5754
  %61 = getelementptr inbounds [5 x i32], [5 x i32]* %_98, i64 4, !dbg !5755
  store [5 x i32]* %61, [5 x i32]** %8, align 8, !dbg !5755
  %_3.i = load [5 x i32]*, [5 x i32]** %8, align 8, !dbg !5755
  br label %bb39, !dbg !5756

bb39:                                             ; preds = %bb38
  %_95.0 = bitcast [5 x i32]* %_3.i to [0 x i32]*, !dbg !5757
; invoke core::slice::<impl [T]>::as_mut_ptr
  %_94 = invoke i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h219c650c35cacae1E"([0 x i32]* align 4 %_95.0, i64 5)
          to label %bb40 unwind label %cleanup, !dbg !5757

bb40:                                             ; preds = %bb39
  store i32* %_94, i32** %self.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i24, metadata !4623, metadata !DIExpression()), !dbg !5758
  store i64 5, i64* %count.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i23, metadata !4626, metadata !DIExpression()), !dbg !5760
  %62 = getelementptr inbounds i32, i32* %_94, i64 5, !dbg !5761
  store i32* %62, i32** %4, align 8, !dbg !5761
  %_3.i25 = load i32*, i32** %4, align 8, !dbg !5761
  br label %bb41, !dbg !5762

bb41:                                             ; preds = %bb40
  store i32* %_3.i25, i32** %past_end, align 8, !dbg !5763
  store i32* %var1, i32** %self.dbg.spill.i21, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i21, metadata !4623, metadata !DIExpression()), !dbg !5764
  store i64 8, i64* %count.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i20, metadata !4626, metadata !DIExpression()), !dbg !5766
  %63 = getelementptr inbounds i32, i32* %var1, i64 8, !dbg !5767
  store i32* %63, i32** %5, align 8, !dbg !5767
  %_3.i22 = load i32*, i32** %5, align 8, !dbg !5767
  br label %bb42, !dbg !5768

bb42:                                             ; preds = %bb41
  store i32* %_3.i22, i32** %past_end, align 8, !dbg !5769
; call core::ptr::drop_in_place<alloc::vec::Vec<i32>>
  call void @"_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17h035ad200dd80b9a9E"(%"alloc::vec::Vec<i32>"* %fresh5), !dbg !5712
  br label %bb43, !dbg !5712

abort:                                            ; preds = %bb44
  %64 = landingpad { i8*, i32 }
          cleanup, !dbg !5770
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !5770
  unreachable, !dbg !5770

bb45:                                             ; preds = %bb44
  %65 = bitcast { i8*, i32 }* %9 to i8**, !dbg !5770
  %66 = load i8*, i8** %65, align 8, !dbg !5770
  %67 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %9, i32 0, i32 1, !dbg !5770
  %68 = load i32, i32* %67, align 8, !dbg !5770
  %69 = insertvalue { i8*, i32 } undef, i8* %66, 0, !dbg !5770
  %70 = insertvalue { i8*, i32 } %69, i32 %68, 1, !dbg !5770
  resume { i8*, i32 } %70, !dbg !5770

bb43:                                             ; preds = %bb42
  ret void, !dbg !5771
}

; Function Attrs: nonlazybind uwtable
define dso_local zeroext i1 @rust_check_some_ints() unnamed_addr #2 !dbg !5772 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i4 = alloca i64, align 8
  %self.dbg.spill.i5 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i32*, align 8
  %_2 = alloca i8, align 1
  %_1 = alloca i8, align 1
  %4 = alloca i8, align 1
; call core::slice::<impl [T]>::as_mut_ptr
  %_6 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h11aa4d5bc39de937E"([0 x i32]* align 4 bitcast (<{ [16 x i8] }>* @rust_SOME_INTS to [0 x i32]*), i64 0), !dbg !5777
  br label %bb10, !dbg !5777

bb10:                                             ; preds = %start
  store i32* %_6, i32** %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i8, metadata !5778, metadata !DIExpression()), !dbg !5784
  store i64 0, i64* %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i7, metadata !5783, metadata !DIExpression()), !dbg !5786
  store i32* %_6, i32** %0, align 8, !dbg !5787
  %_3.i9 = load i32*, i32** %0, align 8, !dbg !5787
  br label %bb11, !dbg !5777

bb11:                                             ; preds = %bb10
  %_4 = load i32, i32* %_3.i9, align 4, !dbg !5788
  %_3 = icmp eq i32 %_4, 2, !dbg !5788
  br i1 %_3, label %bb8, label %bb7, !dbg !5788

bb7:                                              ; preds = %bb11
  store i8 0, i8* %_2, align 1, !dbg !5788
  br label %bb9, !dbg !5788

bb8:                                              ; preds = %bb11
; call core::slice::<impl [T]>::as_mut_ptr
  %_15 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h11aa4d5bc39de937E"([0 x i32]* align 4 bitcast (<{ [16 x i8] }>* @rust_SOME_INTS to [0 x i32]*), i64 0), !dbg !5789
  br label %bb12, !dbg !5789

bb12:                                             ; preds = %bb8
  store i32* %_15, i32** %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i5, metadata !5778, metadata !DIExpression()), !dbg !5790
  store i64 1, i64* %count.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i4, metadata !5783, metadata !DIExpression()), !dbg !5792
  %5 = getelementptr inbounds i32, i32* %_15, i64 1, !dbg !5793
  store i32* %5, i32** %1, align 8, !dbg !5793
  %_3.i6 = load i32*, i32** %1, align 8, !dbg !5793
  br label %bb13, !dbg !5789

bb13:                                             ; preds = %bb12
  %_13 = load i32, i32* %_3.i6, align 4, !dbg !5794
  %_12 = icmp eq i32 %_13, 0, !dbg !5794
  %6 = zext i1 %_12 to i8, !dbg !5788
  store i8 %6, i8* %_2, align 1, !dbg !5788
  br label %bb9, !dbg !5788

bb9:                                              ; preds = %bb7, %bb13
  %7 = load i8, i8* %_2, align 1, !dbg !5788, !range !582, !noundef !23
  %8 = trunc i8 %7 to i1, !dbg !5788
  br i1 %8, label %bb5, label %bb4, !dbg !5788

bb4:                                              ; preds = %bb9
  store i8 0, i8* %_1, align 1, !dbg !5788
  br label %bb6, !dbg !5788

bb5:                                              ; preds = %bb9
; call core::slice::<impl [T]>::as_mut_ptr
  %_24 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h11aa4d5bc39de937E"([0 x i32]* align 4 bitcast (<{ [16 x i8] }>* @rust_SOME_INTS to [0 x i32]*), i64 0), !dbg !5795
  br label %bb14, !dbg !5795

bb14:                                             ; preds = %bb5
  store i32* %_24, i32** %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i2, metadata !5778, metadata !DIExpression()), !dbg !5796
  store i64 2, i64* %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i1, metadata !5783, metadata !DIExpression()), !dbg !5798
  %9 = getelementptr inbounds i32, i32* %_24, i64 2, !dbg !5799
  store i32* %9, i32** %2, align 8, !dbg !5799
  %_3.i3 = load i32*, i32** %2, align 8, !dbg !5799
  br label %bb15, !dbg !5795

bb15:                                             ; preds = %bb14
  %_22 = load i32, i32* %_3.i3, align 4, !dbg !5800
  %_21 = icmp eq i32 %_22, 1, !dbg !5800
  %10 = zext i1 %_21 to i8, !dbg !5788
  store i8 %10, i8* %_1, align 1, !dbg !5788
  br label %bb6, !dbg !5788

bb6:                                              ; preds = %bb4, %bb15
  %11 = load i8, i8* %_1, align 1, !dbg !5788, !range !582, !noundef !23
  %12 = trunc i8 %11 to i1, !dbg !5788
  br i1 %12, label %bb2, label %bb1, !dbg !5788

bb1:                                              ; preds = %bb6
  store i8 0, i8* %4, align 1, !dbg !5788
  br label %bb3, !dbg !5788

bb2:                                              ; preds = %bb6
; call core::slice::<impl [T]>::as_mut_ptr
  %_33 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h11aa4d5bc39de937E"([0 x i32]* align 4 bitcast (<{ [16 x i8] }>* @rust_SOME_INTS to [0 x i32]*), i64 0), !dbg !5801
  br label %bb16, !dbg !5801

bb16:                                             ; preds = %bb2
  store i32* %_33, i32** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i, metadata !5778, metadata !DIExpression()), !dbg !5802
  store i64 3, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !5783, metadata !DIExpression()), !dbg !5804
  %13 = getelementptr inbounds i32, i32* %_33, i64 3, !dbg !5805
  store i32* %13, i32** %3, align 8, !dbg !5805
  %_3.i = load i32*, i32** %3, align 8, !dbg !5805
  br label %bb17, !dbg !5801

bb17:                                             ; preds = %bb16
  %_31 = load i32, i32* %_3.i, align 4, !dbg !5806
  %_30 = icmp eq i32 %_31, 8, !dbg !5806
  %14 = zext i1 %_30 to i8, !dbg !5788
  store i8 %14, i8* %4, align 1, !dbg !5788
  br label %bb3, !dbg !5788

bb3:                                              ; preds = %bb1, %bb17
  %15 = load i8, i8* %4, align 1, !dbg !5807, !range !582, !noundef !23
  %16 = trunc i8 %15 to i1, !dbg !5807
  ret i1 %16, !dbg !5807
}

; Function Attrs: nonlazybind uwtable
define dso_local %"incomplete_arrays::sized_array"* @rust_new_sized_array(i64 %n) unnamed_addr #2 !dbg !5808 {
start:
  %rhs.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %res.dbg.spill = alloca %"incomplete_arrays::sized_array"*, align 8
  %sz.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5820, metadata !DIExpression()), !dbg !5825
  br label %bb1, !dbg !5826

bb1:                                              ; preds = %start
  br label %bb2, !dbg !5827

bb2:                                              ; preds = %bb1
  store i64 %n, i64* %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i2, metadata !5699, metadata !DIExpression()), !dbg !5828
  store i64 4, i64* %rhs.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i1, metadata !5705, metadata !DIExpression()), !dbg !5830
  %0 = mul i64 %n, 4, !dbg !5831
  br label %bb3, !dbg !5832

bb3:                                              ; preds = %bb2
  store i64 8, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !5833, metadata !DIExpression()), !dbg !5837
  store i64 %0, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !5836, metadata !DIExpression()), !dbg !5839
  %1 = add i64 8, %0, !dbg !5840
  store i64 %1, i64* %sz.dbg.spill, align 8, !dbg !5841
  call void @llvm.dbg.declare(metadata i64* %sz.dbg.spill, metadata !5821, metadata !DIExpression()), !dbg !5842
  br label %bb4, !dbg !5841

bb4:                                              ; preds = %bb3
  %_9 = call i8* @malloc(i64 %1), !dbg !5843
  br label %bb5, !dbg !5843

bb5:                                              ; preds = %bb4
  %res = bitcast i8* %_9 to %"incomplete_arrays::sized_array"*, !dbg !5843
  store %"incomplete_arrays::sized_array"* %res, %"incomplete_arrays::sized_array"** %res.dbg.spill, align 8, !dbg !5843
  call void @llvm.dbg.declare(metadata %"incomplete_arrays::sized_array"** %res.dbg.spill, metadata !5823, metadata !DIExpression()), !dbg !5844
  %2 = bitcast %"incomplete_arrays::sized_array"* %res to i64*, !dbg !5845
  store i64 %n, i64* %2, align 8, !dbg !5845
  ret %"incomplete_arrays::sized_array"* %res, !dbg !5846
}

; Function Attrs: nonlazybind uwtable
define dso_local i32 @rust_sized_array_sum_last_n(%"incomplete_arrays::sized_array"* %a, i64 %n) unnamed_addr #2 !dbg !5847 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i5 = alloca i32*, align 8
  %rhs.dbg.spill.i3 = alloca i64, align 8
  %self.dbg.spill.i4 = alloca i64, align 8
  %rhs.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i32, align 4
  %self.dbg.spill.i = alloca i32, align 4
  %n.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca %"incomplete_arrays::sized_array"*, align 8
  %i = alloca i64, align 8
  %acc = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %acc, metadata !5853, metadata !DIExpression()), !dbg !5857
  store %"incomplete_arrays::sized_array"* %a, %"incomplete_arrays::sized_array"** %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"incomplete_arrays::sized_array"** %a.dbg.spill, metadata !5851, metadata !DIExpression()), !dbg !5858
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5852, metadata !DIExpression()), !dbg !5859
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5855, metadata !DIExpression()), !dbg !5860
  store i32 0, i32* %acc, align 4, !dbg !5861
  %1 = bitcast %"incomplete_arrays::sized_array"* %a to i64*, !dbg !5862
  %_4 = load i64, i64* %1, align 8, !dbg !5862
  store i64 %_4, i64* %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i4, metadata !5863, metadata !DIExpression()), !dbg !5867
  store i64 %n, i64* %rhs.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i3, metadata !5866, metadata !DIExpression()), !dbg !5869
  %2 = sub i64 %_4, %n, !dbg !5870
  store i64 %2, i64* %i, align 8, !dbg !5862
  br label %bb1, !dbg !5862

bb1:                                              ; preds = %bb6, %start
  %_7 = load i64, i64* %i, align 8, !dbg !5871
  %3 = bitcast %"incomplete_arrays::sized_array"* %a to i64*, !dbg !5872
  %_8 = load i64, i64* %3, align 8, !dbg !5872
  %_6 = icmp ult i64 %_7, %_8, !dbg !5871
  br i1 %_6, label %bb2, label %bb7, !dbg !5871

bb7:                                              ; preds = %bb1
  %4 = load i32, i32* %acc, align 4, !dbg !5873
  ret i32 %4, !dbg !5873

bb2:                                              ; preds = %bb1
  %_10 = load i32, i32* %acc, align 4, !dbg !5874
  %_15 = getelementptr inbounds %"incomplete_arrays::sized_array", %"incomplete_arrays::sized_array"* %a, i32 0, i32 1, !dbg !5875
; call core::slice::<impl [T]>::as_mut_ptr
  %_13 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h11aa4d5bc39de937E"([0 x i32]* align 4 %_15, i64 0), !dbg !5875
  br label %bb3, !dbg !5875

bb3:                                              ; preds = %bb2
  %_17 = load i64, i64* %i, align 8, !dbg !5876
  store i32* %_13, i32** %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i5, metadata !5778, metadata !DIExpression()), !dbg !5877
  store i64 %_17, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !5783, metadata !DIExpression()), !dbg !5879
  %5 = getelementptr inbounds i32, i32* %_13, i64 %_17, !dbg !5880
  store i32* %5, i32** %0, align 8, !dbg !5880
  %_3.i = load i32*, i32** %0, align 8, !dbg !5880
  br label %bb4, !dbg !5875

bb4:                                              ; preds = %bb3
  %_11 = load i32, i32* %_3.i, align 4, !dbg !5881
  store i32 %_10, i32* %self.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill.i, metadata !5882, metadata !DIExpression()), !dbg !5889
  store i32 %_11, i32* %rhs.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata i32* %rhs.dbg.spill.i, metadata !5888, metadata !DIExpression()), !dbg !5891
  %6 = add i32 %_10, %_11, !dbg !5892
  br label %bb5, !dbg !5874

bb5:                                              ; preds = %bb4
  store i32 %6, i32* %acc, align 4, !dbg !5893
  %_19 = load i64, i64* %i, align 8, !dbg !5894
  store i64 %_19, i64* %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i2, metadata !5833, metadata !DIExpression()), !dbg !5895
  store i64 1, i64* %rhs.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i1, metadata !5836, metadata !DIExpression()), !dbg !5897
  %7 = add i64 %_19, 1, !dbg !5898
  br label %bb6, !dbg !5894

bb6:                                              ; preds = %bb5
  store i64 %7, i64* %i, align 8, !dbg !5899
  br label %bb1, !dbg !5900
}

; Function Attrs: nonlazybind uwtable
define dso_local i32 @rust_test_sized_array() unnamed_addr #2 !dbg !5901 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i32*, align 8
  %sum.dbg.spill = alloca i32, align 4
  %a.dbg.spill = alloca %"incomplete_arrays::sized_array"*, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5907, metadata !DIExpression()), !dbg !5911
  %a = call %"incomplete_arrays::sized_array"* @rust_new_sized_array(i64 10), !dbg !5912
  store %"incomplete_arrays::sized_array"* %a, %"incomplete_arrays::sized_array"** %a.dbg.spill, align 8, !dbg !5912
  call void @llvm.dbg.declare(metadata %"incomplete_arrays::sized_array"** %a.dbg.spill, metadata !5905, metadata !DIExpression()), !dbg !5913
  br label %bb1, !dbg !5912

bb1:                                              ; preds = %start
  store i32 0, i32* %i, align 4, !dbg !5914
  br label %bb2, !dbg !5915

bb2:                                              ; preds = %bb6, %bb1
  %_5 = load i32, i32* %i, align 4, !dbg !5916
  %_4 = icmp slt i32 %_5, 10, !dbg !5916
  br i1 %_4, label %bb3, label %bb7, !dbg !5916

bb7:                                              ; preds = %bb2
  %sum = call i32 @rust_sized_array_sum_last_n(%"incomplete_arrays::sized_array"* %a, i64 4), !dbg !5917
  store i32 %sum, i32* %sum.dbg.spill, align 4, !dbg !5917
  call void @llvm.dbg.declare(metadata i32* %sum.dbg.spill, metadata !5909, metadata !DIExpression()), !dbg !5918
  br label %bb8, !dbg !5917

bb3:                                              ; preds = %bb2
  %_7 = load i32, i32* %i, align 4, !dbg !5919
  %_11 = getelementptr inbounds %"incomplete_arrays::sized_array", %"incomplete_arrays::sized_array"* %a, i32 0, i32 1, !dbg !5920
; call core::slice::<impl [T]>::as_mut_ptr
  %_9 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h11aa4d5bc39de937E"([0 x i32]* align 4 %_11, i64 0), !dbg !5920
  br label %bb4, !dbg !5920

bb4:                                              ; preds = %bb3
  %_13 = load i32, i32* %i, align 4, !dbg !5921
  %_12 = sext i32 %_13 to i64, !dbg !5921
  store i32* %_9, i32** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i, metadata !5778, metadata !DIExpression()), !dbg !5922
  store i64 %_12, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !5783, metadata !DIExpression()), !dbg !5924
  %1 = getelementptr inbounds i32, i32* %_9, i64 %_12, !dbg !5925
  store i32* %1, i32** %0, align 8, !dbg !5925
  %_3.i = load i32*, i32** %0, align 8, !dbg !5925
  br label %bb5, !dbg !5920

bb5:                                              ; preds = %bb4
  store i32 %_7, i32* %_3.i, align 4, !dbg !5926
  %2 = load i32, i32* %i, align 4, !dbg !5927
  %3 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 1), !dbg !5927
  %_14.0 = extractvalue { i32, i1 } %3, 0, !dbg !5927
  %_14.1 = extractvalue { i32, i1 } %3, 1, !dbg !5927
  %4 = call i1 @llvm.expect.i1(i1 %_14.1, i1 false), !dbg !5927
  br i1 %4, label %panic, label %bb6, !dbg !5927

bb6:                                              ; preds = %bb5
  store i32 %_14.0, i32* %i, align 4, !dbg !5927
  br label %bb2, !dbg !5915

panic:                                            ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc623 to %"core::panic::location::Location"*)) #15, !dbg !5927
  unreachable, !dbg !5927

bb8:                                              ; preds = %bb7
  %_18 = bitcast %"incomplete_arrays::sized_array"* %a to i8*, !dbg !5928
  call void @free(i8* %_18), !dbg !5929
  br label %bb9, !dbg !5929

bb9:                                              ; preds = %bb8
  ret i32 %sum, !dbg !5930
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_entry2(i32 %buffer_size, i32* %buffer) unnamed_addr #2 !dbg !5931 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i4 = alloca i64, align 8
  %self.dbg.spill.i5 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i32*, align 8
  %cx.dbg.spill = alloca i32, align 4
  %p_carr.dbg.spill = alloca [0 x i32]*, align 8
  %x.dbg.spill = alloca i32, align 4
  %p_arr.dbg.spill = alloca [0 x i32]*, align 8
  %buffer.dbg.spill = alloca i32*, align 8
  %buffer_size.dbg.spill = alloca i32, align 4
  %carr = alloca [3 x i32], align 4
  %arr = alloca [3 x i32], align 4
  store i32 %buffer_size, i32* %buffer_size.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_size.dbg.spill, metadata !5933, metadata !DIExpression()), !dbg !5950
  store i32* %buffer, i32** %buffer.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %buffer.dbg.spill, metadata !5934, metadata !DIExpression()), !dbg !5951
  call void @llvm.dbg.declare(metadata [3 x i32]* %arr, metadata !5935, metadata !DIExpression()), !dbg !5952
  call void @llvm.dbg.declare(metadata [3 x i32]* %carr, metadata !5943, metadata !DIExpression()), !dbg !5953
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* %arr, i64 0, i64 0, !dbg !5954
  store i32 1, i32* %4, align 4, !dbg !5954
  %5 = getelementptr inbounds [3 x i32], [3 x i32]* %arr, i64 0, i64 1, !dbg !5954
  store i32 2, i32* %5, align 4, !dbg !5954
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* %arr, i64 0, i64 2, !dbg !5954
  store i32 3, i32* %6, align 4, !dbg !5954
  %p_arr = bitcast [3 x i32]* %arr to [0 x i32]*, !dbg !5955
  store [0 x i32]* %p_arr, [0 x i32]** %p_arr.dbg.spill, align 8, !dbg !5955
  call void @llvm.dbg.declare(metadata [0 x i32]** %p_arr.dbg.spill, metadata !5937, metadata !DIExpression()), !dbg !5956
; call core::slice::<impl [T]>::as_mut_ptr
  %_12 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h219c650c35cacae1E"([0 x i32]* align 4 %p_arr, i64 0), !dbg !5957
  br label %bb1, !dbg !5957

bb1:                                              ; preds = %start
  store i32* %_12, i32** %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i5, metadata !4623, metadata !DIExpression()), !dbg !5958
  store i64 0, i64* %count.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i4, metadata !4626, metadata !DIExpression()), !dbg !5960
  store i32* %_12, i32** %1, align 8, !dbg !5961
  %_3.i6 = load i32*, i32** %1, align 8, !dbg !5961
  br label %bb2, !dbg !5957

bb2:                                              ; preds = %bb1
  %x = load i32, i32* %_3.i6, align 4, !dbg !5962
  store i32 %x, i32* %x.dbg.spill, align 4, !dbg !5962
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill, metadata !5941, metadata !DIExpression()), !dbg !5963
  store i32* %buffer, i32** %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i2, metadata !4623, metadata !DIExpression()), !dbg !5964
  store i64 0, i64* %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i1, metadata !4626, metadata !DIExpression()), !dbg !5966
  store i32* %buffer, i32** %2, align 8, !dbg !5967
  %_3.i3 = load i32*, i32** %2, align 8, !dbg !5967
  br label %bb3, !dbg !5968

bb3:                                              ; preds = %bb2
  store i32 %x, i32* %_3.i3, align 4, !dbg !5969
  %7 = getelementptr inbounds [3 x i32], [3 x i32]* %carr, i64 0, i64 0, !dbg !5970
  store i32 1, i32* %7, align 4, !dbg !5970
  %8 = getelementptr inbounds [3 x i32], [3 x i32]* %carr, i64 0, i64 1, !dbg !5970
  store i32 2, i32* %8, align 4, !dbg !5970
  %9 = getelementptr inbounds [3 x i32], [3 x i32]* %carr, i64 0, i64 2, !dbg !5970
  store i32 3, i32* %9, align 4, !dbg !5970
  %p_carr = bitcast [3 x i32]* %carr to [0 x i32]*, !dbg !5971
  store [0 x i32]* %p_carr, [0 x i32]** %p_carr.dbg.spill, align 8, !dbg !5971
  call void @llvm.dbg.declare(metadata [0 x i32]** %p_carr.dbg.spill, metadata !5945, metadata !DIExpression()), !dbg !5972
; call core::slice::<impl [T]>::as_ptr
  %_29 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h1eda4966a3efb19dE"([0 x i32]* align 4 %p_carr, i64 0), !dbg !5973
  br label %bb4, !dbg !5973

bb4:                                              ; preds = %bb3
  store i32* %_29, i32** %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i8, metadata !5974, metadata !DIExpression()), !dbg !5978
  store i64 0, i64* %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i7, metadata !5977, metadata !DIExpression()), !dbg !5980
  store i32* %_29, i32** %0, align 8, !dbg !5981
  %10 = load i32*, i32** %0, align 8, !dbg !5981
  br label %bb5, !dbg !5973

bb5:                                              ; preds = %bb4
  %cx = load i32, i32* %10, align 4, !dbg !5982
  store i32 %cx, i32* %cx.dbg.spill, align 4, !dbg !5982
  call void @llvm.dbg.declare(metadata i32* %cx.dbg.spill, metadata !5948, metadata !DIExpression()), !dbg !5983
  store i32* %buffer, i32** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i, metadata !4623, metadata !DIExpression()), !dbg !5984
  store i64 1, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !4626, metadata !DIExpression()), !dbg !5986
  %11 = getelementptr inbounds i32, i32* %buffer, i64 1, !dbg !5987
  store i32* %11, i32** %3, align 8, !dbg !5987
  %_3.i = load i32*, i32** %3, align 8, !dbg !5987
  br label %bb6, !dbg !5988

bb6:                                              ; preds = %bb5
  store i32 %cx, i32* %_3.i, align 4, !dbg !5989
  ret void, !dbg !5990
}

; array_tests::test_arrays::test_sized_array_impls::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN11array_tests11test_arrays22test_sized_array_impls28_$u7b$$u7b$closure$u7d$$u7d$17h6b18364a9b840387E"(%"[closure@src/test_arrays.rs:32:1: 36:2]"* align 1 %_1) unnamed_addr #0 !dbg !5991 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_arrays.rs:32:1: 36:2]"*, align 8
  store %"[closure@src/test_arrays.rs:32:1: 36:2]"* %_1, %"[closure@src/test_arrays.rs:32:1: 36:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_arrays.rs:32:1: 36:2]"** %_1.dbg.spill, metadata !5996, metadata !DIExpression()), !dbg !5997
  call void @test_sized_array_impls(), !dbg !5997
  br label %bb1, !dbg !5997

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17he193e499d4e0e61dE(), !dbg !5997
  br label %bb2, !dbg !5997

bb2:                                              ; preds = %bb1
  ret void, !dbg !5998
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_sized_array_impls() unnamed_addr #2 !dbg !5999 {
start:
  %right_val.dbg.spill = alloca i32*, align 8
  %left_val.dbg.spill = alloca i32*, align 8
  %_19 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_5 = alloca i32, align 4
  %_3 = alloca i32, align 4
  %_1 = alloca { i32*, i32* }, align 8
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !6005, metadata !DIExpression()), !dbg !6008
  %0 = call i32 @rust_test_sized_array(), !dbg !6009
  store i32 %0, i32* %_3, align 4, !dbg !6009
  br label %bb1, !dbg !6009

bb1:                                              ; preds = %start
  %1 = call i32 @test_sized_array(), !dbg !6010
  store i32 %1, i32* %_5, align 4, !dbg !6010
  br label %bb2, !dbg !6010

bb2:                                              ; preds = %bb1
  %2 = bitcast { i32*, i32* }* %_1 to i32**, !dbg !6011
  store i32* %_3, i32** %2, align 8, !dbg !6011
  %3 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_1, i32 0, i32 1, !dbg !6011
  store i32* %_5, i32** %3, align 8, !dbg !6011
  %4 = bitcast { i32*, i32* }* %_1 to i32**, !dbg !6011
  %left_val = load i32*, i32** %4, align 8, !dbg !6011, !nonnull !23, !align !446, !noundef !23
  store i32* %left_val, i32** %left_val.dbg.spill, align 8, !dbg !6011
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill, metadata !6001, metadata !DIExpression()), !dbg !6012
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_1, i32 0, i32 1, !dbg !6011
  %right_val = load i32*, i32** %5, align 8, !dbg !6011, !nonnull !23, !align !446, !noundef !23
  store i32* %right_val, i32** %right_val.dbg.spill, align 8, !dbg !6011
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill, metadata !6004, metadata !DIExpression()), !dbg !6012
  %_10 = load i32, i32* %left_val, align 4, !dbg !6012
  %_11 = load i32, i32* %right_val, align 4, !dbg !6012
  %_9 = icmp eq i32 %_10, %_11, !dbg !6012
  %_8 = xor i1 %_9, true, !dbg !6012
  br i1 %_8, label %bb3, label %bb4, !dbg !6012

bb4:                                              ; preds = %bb2
  ret void, !dbg !6013

bb3:                                              ; preds = %bb2
  store i8 0, i8* %kind, align 1, !dbg !6012
  %6 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_19 to {}**, !dbg !6008
  store {}* null, {}** %6, align 8, !dbg !6008
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h7946be7cdd9dfe58E(i8 0, i32* align 4 %left_val, i32* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_19, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc625 to %"core::panic::location::Location"*)) #15, !dbg !6008
  unreachable, !dbg !6008
}

; array_tests::test_arrays::test_global_incomplete_array::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN11array_tests11test_arrays28test_global_incomplete_array28_$u7b$$u7b$closure$u7d$$u7d$17h7f805434574bb4ecE"(%"[closure@src/test_arrays.rs:40:1: 44:2]"* align 1 %_1) unnamed_addr #0 !dbg !6014 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_arrays.rs:40:1: 44:2]"*, align 8
  store %"[closure@src/test_arrays.rs:40:1: 44:2]"* %_1, %"[closure@src/test_arrays.rs:40:1: 44:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_arrays.rs:40:1: 44:2]"** %_1.dbg.spill, metadata !6019, metadata !DIExpression()), !dbg !6020
  call void @test_global_incomplete_array(), !dbg !6020
  br label %bb1, !dbg !6020

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17he193e499d4e0e61dE(), !dbg !6020
  br label %bb2, !dbg !6020

bb2:                                              ; preds = %bb1
  ret void, !dbg !6021
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_global_incomplete_array() unnamed_addr #2 !dbg !6022 {
start:
  %right_val.dbg.spill = alloca i8*, align 8
  %left_val.dbg.spill = alloca i8*, align 8
  %_19 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_5 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %_1 = alloca { i8*, i8* }, align 8
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !6028, metadata !DIExpression()), !dbg !6031
  %0 = call zeroext i1 @rust_check_some_ints(), !dbg !6032
  %1 = zext i1 %0 to i8, !dbg !6032
  store i8 %1, i8* %_3, align 1, !dbg !6032
  br label %bb1, !dbg !6032

bb1:                                              ; preds = %start
  %2 = call zeroext i1 @check_some_ints(), !dbg !6033
  %3 = zext i1 %2 to i8, !dbg !6033
  store i8 %3, i8* %_5, align 1, !dbg !6033
  br label %bb2, !dbg !6033

bb2:                                              ; preds = %bb1
  %4 = bitcast { i8*, i8* }* %_1 to i8**, !dbg !6034
  store i8* %_3, i8** %4, align 8, !dbg !6034
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_1, i32 0, i32 1, !dbg !6034
  store i8* %_5, i8** %5, align 8, !dbg !6034
  %6 = bitcast { i8*, i8* }* %_1 to i8**, !dbg !6034
  %left_val = load i8*, i8** %6, align 8, !dbg !6034, !nonnull !23, !align !506, !noundef !23
  store i8* %left_val, i8** %left_val.dbg.spill, align 8, !dbg !6034
  call void @llvm.dbg.declare(metadata i8** %left_val.dbg.spill, metadata !6024, metadata !DIExpression()), !dbg !6035
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_1, i32 0, i32 1, !dbg !6034
  %right_val = load i8*, i8** %7, align 8, !dbg !6034, !nonnull !23, !align !506, !noundef !23
  store i8* %right_val, i8** %right_val.dbg.spill, align 8, !dbg !6034
  call void @llvm.dbg.declare(metadata i8** %right_val.dbg.spill, metadata !6027, metadata !DIExpression()), !dbg !6035
  %8 = load i8, i8* %left_val, align 1, !dbg !6035, !range !582, !noundef !23
  %_10 = trunc i8 %8 to i1, !dbg !6035
  %9 = load i8, i8* %right_val, align 1, !dbg !6035, !range !582, !noundef !23
  %_11 = trunc i8 %9 to i1, !dbg !6035
  %_9 = icmp eq i1 %_10, %_11, !dbg !6035
  %_8 = xor i1 %_9, true, !dbg !6035
  br i1 %_8, label %bb3, label %bb4, !dbg !6035

bb4:                                              ; preds = %bb2
  ret void, !dbg !6036

bb3:                                              ; preds = %bb2
  store i8 0, i8* %kind, align 1, !dbg !6035
  %10 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_19 to {}**, !dbg !6031
  store {}* null, {}** %10, align 8, !dbg !6031
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h2667433552fdca02E(i8 0, i8* align 1 %left_val, i8* align 1 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_19, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc627 to %"core::panic::location::Location"*)) #15, !dbg !6031
  unreachable, !dbg !6031
}

; array_tests::test_arrays::test_buffer::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN11array_tests11test_arrays11test_buffer28_$u7b$$u7b$closure$u7d$$u7d$17hac85ceb01446f1c5E"(%"[closure@src/test_arrays.rs:48:1: 66:2]"* align 1 %_1) unnamed_addr #0 !dbg !6037 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_arrays.rs:48:1: 66:2]"*, align 8
  store %"[closure@src/test_arrays.rs:48:1: 66:2]"* %_1, %"[closure@src/test_arrays.rs:48:1: 66:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_arrays.rs:48:1: 66:2]"** %_1.dbg.spill, metadata !6042, metadata !DIExpression()), !dbg !6043
  call void @test_buffer(), !dbg !6043
  br label %bb1, !dbg !6043

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17he193e499d4e0e61dE(), !dbg !6043
  br label %bb2, !dbg !6043

bb2:                                              ; preds = %bb1
  ret void, !dbg !6044
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_buffer() unnamed_addr #2 !dbg !6045 {
start:
  %right_val.dbg.spill8 = alloca i32*, align 8
  %left_val.dbg.spill6 = alloca i32*, align 8
  %right_val.dbg.spill = alloca i32*, align 8
  %left_val.dbg.spill = alloca i32*, align 8
  %_75 = alloca [1 x { i8*, i64* }], align 8
  %_68 = alloca %"core::fmt::Arguments", align 8
  %_67 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind1 = alloca i8, align 1
  %_45 = alloca { i32*, i32* }, align 8
  %_44 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_22 = alloca { i32*, i32* }, align 8
  %index = alloca i64, align 8
  %_17 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_15 = alloca { i64, i64 }, align 8
  %expected_buffer = alloca [49 x i32], align 4
  %rust_buffer = alloca [49 x i32], align 4
  %buffer = alloca [49 x i32], align 4
  call void @llvm.dbg.declare(metadata [49 x i32]* %buffer, metadata !6047, metadata !DIExpression()), !dbg !6074
  call void @llvm.dbg.declare(metadata [49 x i32]* %rust_buffer, metadata !6052, metadata !DIExpression()), !dbg !6075
  call void @llvm.dbg.declare(metadata [49 x i32]* %expected_buffer, metadata !6054, metadata !DIExpression()), !dbg !6076
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter, metadata !6056, metadata !DIExpression()), !dbg !6077
  call void @llvm.dbg.declare(metadata i64* %index, metadata !6058, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !6064, metadata !DIExpression()), !dbg !6079
  call void @llvm.dbg.declare(metadata i8* %kind1, metadata !6071, metadata !DIExpression()), !dbg !6080
  %0 = getelementptr inbounds [49 x i32], [49 x i32]* %buffer, i64 0, i64 0, !dbg !6081
  %1 = bitcast i32* %0 to i8*, !dbg !6081
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 196, i1 false), !dbg !6081
  %2 = getelementptr inbounds [49 x i32], [49 x i32]* %rust_buffer, i64 0, i64 0, !dbg !6082
  %3 = bitcast i32* %2 to i8*, !dbg !6082
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 196, i1 false), !dbg !6082
  %4 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 0, !dbg !6083
  store i32 97, i32* %4, align 4, !dbg !6083
  %5 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 1, !dbg !6083
  store i32 98, i32* %5, align 4, !dbg !6083
  %6 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 2, !dbg !6083
  store i32 99, i32* %6, align 4, !dbg !6083
  %7 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 3, !dbg !6083
  store i32 0, i32* %7, align 4, !dbg !6083
  %8 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 4, !dbg !6083
  store i32 100, i32* %8, align 4, !dbg !6083
  %9 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 5, !dbg !6083
  store i32 101, i32* %9, align 4, !dbg !6083
  %10 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 6, !dbg !6083
  store i32 102, i32* %10, align 4, !dbg !6083
  %11 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 7, !dbg !6083
  store i32 1, i32* %11, align 4, !dbg !6083
  %12 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 8, !dbg !6083
  store i32 0, i32* %12, align 4, !dbg !6083
  %13 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 9, !dbg !6083
  store i32 97, i32* %13, align 4, !dbg !6083
  %14 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 10, !dbg !6083
  store i32 98, i32* %14, align 4, !dbg !6083
  %15 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 11, !dbg !6083
  store i32 99, i32* %15, align 4, !dbg !6083
  %16 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 12, !dbg !6083
  store i32 0, i32* %16, align 4, !dbg !6083
  %17 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 13, !dbg !6083
  store i32 97, i32* %17, align 4, !dbg !6083
  %18 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 14, !dbg !6083
  store i32 98, i32* %18, align 4, !dbg !6083
  %19 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 15, !dbg !6083
  store i32 99, i32* %19, align 4, !dbg !6083
  %20 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 16, !dbg !6083
  store i32 100, i32* %20, align 4, !dbg !6083
  %21 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 17, !dbg !6083
  store i32 97, i32* %21, align 4, !dbg !6083
  %22 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 18, !dbg !6083
  store i32 98, i32* %22, align 4, !dbg !6083
  %23 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 19, !dbg !6083
  store i32 99, i32* %23, align 4, !dbg !6083
  %24 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 20, !dbg !6083
  store i32 97, i32* %24, align 4, !dbg !6083
  %25 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 21, !dbg !6083
  store i32 98, i32* %25, align 4, !dbg !6083
  %26 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 22, !dbg !6083
  store i32 99, i32* %26, align 4, !dbg !6083
  %27 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 23, !dbg !6083
  store i32 0, i32* %27, align 4, !dbg !6083
  %28 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 24, !dbg !6083
  store i32 0, i32* %28, align 4, !dbg !6083
  %29 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 25, !dbg !6083
  store i32 0, i32* %29, align 4, !dbg !6083
  %30 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 26, !dbg !6083
  store i32 0, i32* %30, align 4, !dbg !6083
  %31 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 27, !dbg !6083
  store i32 120, i32* %31, align 4, !dbg !6083
  %32 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 28, !dbg !6083
  store i32 0, i32* %32, align 4, !dbg !6083
  %33 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 29, !dbg !6083
  store i32 120, i32* %33, align 4, !dbg !6083
  %34 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 30, !dbg !6083
  store i32 0, i32* %34, align 4, !dbg !6083
  %35 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 31, !dbg !6083
  store i32 0, i32* %35, align 4, !dbg !6083
  %36 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 32, !dbg !6083
  store i32 120, i32* %36, align 4, !dbg !6083
  %37 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 33, !dbg !6083
  store i32 109, i32* %37, align 4, !dbg !6083
  %38 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 34, !dbg !6083
  store i32 121, i32* %38, align 4, !dbg !6083
  %39 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 35, !dbg !6083
  store i32 115, i32* %39, align 4, !dbg !6083
  %40 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 36, !dbg !6083
  store i32 116, i32* %40, align 4, !dbg !6083
  %41 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 37, !dbg !6083
  store i32 114, i32* %41, align 4, !dbg !6083
  %42 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 38, !dbg !6083
  store i32 105, i32* %42, align 4, !dbg !6083
  %43 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 39, !dbg !6083
  store i32 110, i32* %43, align 4, !dbg !6083
  %44 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 40, !dbg !6083
  store i32 103, i32* %44, align 4, !dbg !6083
  %45 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 41, !dbg !6083
  store i32 109, i32* %45, align 4, !dbg !6083
  %46 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 42, !dbg !6083
  store i32 121, i32* %46, align 4, !dbg !6083
  %47 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 43, !dbg !6083
  store i32 115, i32* %47, align 4, !dbg !6083
  %48 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 44, !dbg !6083
  store i32 116, i32* %48, align 4, !dbg !6083
  %49 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 45, !dbg !6083
  store i32 114, i32* %49, align 4, !dbg !6083
  %50 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 46, !dbg !6083
  store i32 105, i32* %50, align 4, !dbg !6083
  %51 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 47, !dbg !6083
  store i32 110, i32* %51, align 4, !dbg !6083
  %52 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 48, !dbg !6083
  store i32 103, i32* %52, align 4, !dbg !6083
  %_7.0 = bitcast [49 x i32]* %buffer to [0 x i32]*, !dbg !6084
; call core::slice::<impl [T]>::as_mut_ptr
  %_6 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h219c650c35cacae1E"([0 x i32]* align 4 %_7.0, i64 49), !dbg !6084
  br label %bb1, !dbg !6084

bb1:                                              ; preds = %start
  call void @entry(i32 49, i32* %_6), !dbg !6085
  br label %bb2, !dbg !6085

bb2:                                              ; preds = %bb1
  %_12.0 = bitcast [49 x i32]* %rust_buffer to [0 x i32]*, !dbg !6086
; call core::slice::<impl [T]>::as_mut_ptr
  %_11 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h219c650c35cacae1E"([0 x i32]* align 4 %_12.0, i64 49), !dbg !6086
  br label %bb3, !dbg !6086

bb3:                                              ; preds = %bb2
  call void @rust_entry(i32 49, i32* %_11), !dbg !6087
  br label %bb4, !dbg !6087

bb4:                                              ; preds = %bb3
  %53 = bitcast { i64, i64 }* %_15 to i64*, !dbg !6088
  store i64 0, i64* %53, align 8, !dbg !6088
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !6088
  store i64 49, i64* %54, align 8, !dbg !6088
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 0, !dbg !6088
  %56 = load i64, i64* %55, align 8, !dbg !6088
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !6088
  %58 = load i64, i64* %57, align 8, !dbg !6088
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %59 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9b4d6d2b6d8eadeeE"(i64 %56, i64 %58), !dbg !6088
  %_14.0 = extractvalue { i64, i64 } %59, 0, !dbg !6088
  %_14.1 = extractvalue { i64, i64 } %59, 1, !dbg !6088
  br label %bb5, !dbg !6088

bb5:                                              ; preds = %bb4
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0, !dbg !6088
  store i64 %_14.0, i64* %60, align 8, !dbg !6088
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1, !dbg !6088
  store i64 %_14.1, i64* %61, align 8, !dbg !6088
  br label %bb6, !dbg !6089

bb6:                                              ; preds = %bb16, %bb5
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %62 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hf0c8e6a807a2d16cE"({ i64, i64 }* align 8 %iter), !dbg !6077
  store { i64, i64 } %62, { i64, i64 }* %_17, align 8, !dbg !6077
  br label %bb7, !dbg !6077

bb7:                                              ; preds = %bb6
  %63 = bitcast { i64, i64 }* %_17 to i64*, !dbg !6077
  %_20 = load i64, i64* %63, align 8, !dbg !6077, !range !932, !noundef !23
  switch i64 %_20, label %bb9 [
    i64 0, label %bb10
    i64 1, label %bb8
  ], !dbg !6077

bb9:                                              ; preds = %bb7
  unreachable, !dbg !6077

bb10:                                             ; preds = %bb7
  ret void, !dbg !6090

bb8:                                              ; preds = %bb7
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_17, i32 0, i32 1, !dbg !6091
  %65 = load i64, i64* %64, align 8, !dbg !6091
  store i64 %65, i64* %index, align 8, !dbg !6091
  %_24 = load i64, i64* %index, align 8, !dbg !6092
  %_26 = icmp ult i64 %_24, 49, !dbg !6093
  %66 = call i1 @llvm.expect.i1(i1 %_26, i1 true), !dbg !6093
  br i1 %66, label %bb11, label %panic, !dbg !6093

bb11:                                             ; preds = %bb8
  %_23 = getelementptr inbounds [49 x i32], [49 x i32]* %buffer, i64 0, i64 %_24, !dbg !6094
  %_28 = load i64, i64* %index, align 8, !dbg !6095
  %_30 = icmp ult i64 %_28, 49, !dbg !6096
  %67 = call i1 @llvm.expect.i1(i1 %_30, i1 true), !dbg !6096
  br i1 %67, label %bb12, label %panic2, !dbg !6096

panic:                                            ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_24, i64 49, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc629 to %"core::panic::location::Location"*)) #15, !dbg !6093
  unreachable, !dbg !6093

bb12:                                             ; preds = %bb11
  %_27 = getelementptr inbounds [49 x i32], [49 x i32]* %rust_buffer, i64 0, i64 %_28, !dbg !6094
  %68 = bitcast { i32*, i32* }* %_22 to i32**, !dbg !6094
  store i32* %_23, i32** %68, align 8, !dbg !6094
  %69 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_22, i32 0, i32 1, !dbg !6094
  store i32* %_27, i32** %69, align 8, !dbg !6094
  %70 = bitcast { i32*, i32* }* %_22 to i32**, !dbg !6094
  %left_val = load i32*, i32** %70, align 8, !dbg !6094, !nonnull !23, !align !446, !noundef !23
  store i32* %left_val, i32** %left_val.dbg.spill, align 8, !dbg !6094
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill, metadata !6060, metadata !DIExpression()), !dbg !6097
  %71 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_22, i32 0, i32 1, !dbg !6094
  %right_val = load i32*, i32** %71, align 8, !dbg !6094, !nonnull !23, !align !446, !noundef !23
  store i32* %right_val, i32** %right_val.dbg.spill, align 8, !dbg !6094
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill, metadata !6063, metadata !DIExpression()), !dbg !6097
  %_35 = load i32, i32* %left_val, align 4, !dbg !6097
  %_36 = load i32, i32* %right_val, align 4, !dbg !6097
  %_34 = icmp eq i32 %_35, %_36, !dbg !6097
  %_33 = xor i1 %_34, true, !dbg !6097
  br i1 %_33, label %bb13, label %bb14, !dbg !6097

panic2:                                           ; preds = %bb11
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_28, i64 49, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc631 to %"core::panic::location::Location"*)) #15, !dbg !6096
  unreachable, !dbg !6096

bb14:                                             ; preds = %bb12
  %_47 = load i64, i64* %index, align 8, !dbg !6098
  %_49 = icmp ult i64 %_47, 49, !dbg !6099
  %72 = call i1 @llvm.expect.i1(i1 %_49, i1 true), !dbg !6099
  br i1 %72, label %bb15, label %panic3, !dbg !6099

bb13:                                             ; preds = %bb12
  store i8 0, i8* %kind, align 1, !dbg !6097
  %73 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_44 to {}**, !dbg !6079
  store {}* null, {}** %73, align 8, !dbg !6079
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h5179245ed6beeeebE(i8 0, i32* align 4 %left_val, i32* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_44, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc633 to %"core::panic::location::Location"*)) #15, !dbg !6079
  unreachable, !dbg !6079

bb15:                                             ; preds = %bb14
  %_46 = getelementptr inbounds [49 x i32], [49 x i32]* %buffer, i64 0, i64 %_47, !dbg !6100
  %_51 = load i64, i64* %index, align 8, !dbg !6101
  %_53 = icmp ult i64 %_51, 49, !dbg !6102
  %74 = call i1 @llvm.expect.i1(i1 %_53, i1 true), !dbg !6102
  br i1 %74, label %bb16, label %panic4, !dbg !6102

panic3:                                           ; preds = %bb14
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_47, i64 49, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc635 to %"core::panic::location::Location"*)) #15, !dbg !6099
  unreachable, !dbg !6099

bb16:                                             ; preds = %bb15
  %_50 = getelementptr inbounds [49 x i32], [49 x i32]* %expected_buffer, i64 0, i64 %_51, !dbg !6100
  %75 = bitcast { i32*, i32* }* %_45 to i32**, !dbg !6100
  store i32* %_46, i32** %75, align 8, !dbg !6100
  %76 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_45, i32 0, i32 1, !dbg !6100
  store i32* %_50, i32** %76, align 8, !dbg !6100
  %77 = bitcast { i32*, i32* }* %_45 to i32**, !dbg !6100
  %left_val5 = load i32*, i32** %77, align 8, !dbg !6100, !nonnull !23, !align !446, !noundef !23
  store i32* %left_val5, i32** %left_val.dbg.spill6, align 8, !dbg !6100
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill6, metadata !6067, metadata !DIExpression()), !dbg !6103
  %78 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_45, i32 0, i32 1, !dbg !6100
  %right_val7 = load i32*, i32** %78, align 8, !dbg !6100, !nonnull !23, !align !446, !noundef !23
  store i32* %right_val7, i32** %right_val.dbg.spill8, align 8, !dbg !6100
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill8, metadata !6070, metadata !DIExpression()), !dbg !6103
  %_58 = load i32, i32* %left_val5, align 4, !dbg !6103
  %_59 = load i32, i32* %right_val7, align 4, !dbg !6103
  %_57 = icmp eq i32 %_58, %_59, !dbg !6103
  %_56 = xor i1 %_57, true, !dbg !6103
  br i1 %_56, label %bb17, label %bb6, !dbg !6103

panic4:                                           ; preds = %bb15
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_51, i64 49, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc637 to %"core::panic::location::Location"*)) #15, !dbg !6102
  unreachable, !dbg !6102

bb17:                                             ; preds = %bb16
  store i8 0, i8* %kind1, align 1, !dbg !6103
; call core::fmt::ArgumentV1::new_display
  %79 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h4a588785c5f75a8eE(i64* align 8 %index), !dbg !6080
  %_76.0 = extractvalue { i8*, i64* } %79, 0, !dbg !6080
  %_76.1 = extractvalue { i8*, i64* } %79, 1, !dbg !6080
  br label %bb18, !dbg !6080

bb18:                                             ; preds = %bb17
  %80 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_75, i64 0, i64 0, !dbg !6080
  %81 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %80, i32 0, i32 0, !dbg !6080
  store i8* %_76.0, i8** %81, align 8, !dbg !6080
  %82 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %80, i32 0, i32 1, !dbg !6080
  store i64* %_76.1, i64** %82, align 8, !dbg !6080
  %_72.0 = bitcast [1 x { i8*, i64* }]* %_75 to [0 x { i8*, i64* }]*, !dbg !6080
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h91724e5e2039d987E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_68, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc308 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 %_72.0, i64 1), !dbg !6080
  br label %bb19, !dbg !6080

bb19:                                             ; preds = %bb18
  %83 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_67 to %"core::option::Option<core::fmt::Arguments>::Some"*, !dbg !6080
  %84 = bitcast %"core::option::Option<core::fmt::Arguments>::Some"* %83 to %"core::fmt::Arguments"*, !dbg !6080
  %85 = bitcast %"core::fmt::Arguments"* %84 to i8*, !dbg !6080
  %86 = bitcast %"core::fmt::Arguments"* %_68 to i8*, !dbg !6080
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 48, i1 false), !dbg !6080
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h5179245ed6beeeebE(i8 0, i32* align 4 %left_val5, i32* align 4 %right_val7, %"core::option::Option<core::fmt::Arguments>"* %_67, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc639 to %"core::panic::location::Location"*)) #15, !dbg !6080
  unreachable, !dbg !6080
}

; array_tests::test_arrays::test_buffer2::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN11array_tests11test_arrays12test_buffer228_$u7b$$u7b$closure$u7d$$u7d$17he1c17185810d04e8E"(%"[closure@src/test_arrays.rs:70:1: 82:2]"* align 1 %_1) unnamed_addr #0 !dbg !6104 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_arrays.rs:70:1: 82:2]"*, align 8
  store %"[closure@src/test_arrays.rs:70:1: 82:2]"* %_1, %"[closure@src/test_arrays.rs:70:1: 82:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_arrays.rs:70:1: 82:2]"** %_1.dbg.spill, metadata !6109, metadata !DIExpression()), !dbg !6110
  call void @test_buffer2(), !dbg !6110
  br label %bb1, !dbg !6110

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17he193e499d4e0e61dE(), !dbg !6110
  br label %bb2, !dbg !6110

bb2:                                              ; preds = %bb1
  ret void, !dbg !6111
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_buffer2() unnamed_addr #2 !dbg !6112 {
start:
  %right_val.dbg.spill5 = alloca [2 x i32]*, align 8
  %left_val.dbg.spill3 = alloca [2 x i32]*, align 8
  %right_val.dbg.spill = alloca [2 x i32]*, align 8
  %left_val.dbg.spill = alloca [2 x i32]*, align 8
  %_47 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind1 = alloca i8, align 1
  %_31 = alloca { i32*, i32* }, align 8
  %_30 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_14 = alloca { i32*, i32* }, align 8
  %expected_buffer = alloca [2 x i32], align 4
  %rust_buffer = alloca [2 x i32], align 4
  %buffer = alloca [2 x i32], align 4
  call void @llvm.dbg.declare(metadata [2 x i32]* %buffer, metadata !6114, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.declare(metadata [2 x i32]* %rust_buffer, metadata !6116, metadata !DIExpression()), !dbg !6135
  call void @llvm.dbg.declare(metadata [2 x i32]* %expected_buffer, metadata !6118, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !6124, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.declare(metadata i8* %kind1, metadata !6131, metadata !DIExpression()), !dbg !6138
  %0 = getelementptr inbounds [2 x i32], [2 x i32]* %buffer, i64 0, i64 0, !dbg !6139
  %1 = bitcast i32* %0 to i8*, !dbg !6139
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 8, i1 false), !dbg !6139
  %2 = getelementptr inbounds [2 x i32], [2 x i32]* %rust_buffer, i64 0, i64 0, !dbg !6140
  %3 = bitcast i32* %2 to i8*, !dbg !6140
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 8, i1 false), !dbg !6140
  %4 = getelementptr inbounds [2 x i32], [2 x i32]* %expected_buffer, i64 0, i64 0, !dbg !6141
  store i32 1, i32* %4, align 4, !dbg !6141
  %5 = getelementptr inbounds [2 x i32], [2 x i32]* %expected_buffer, i64 0, i64 1, !dbg !6141
  store i32 1, i32* %5, align 4, !dbg !6141
  %_7.0 = bitcast [2 x i32]* %buffer to [0 x i32]*, !dbg !6142
; call core::slice::<impl [T]>::as_mut_ptr
  %_6 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h219c650c35cacae1E"([0 x i32]* align 4 %_7.0, i64 2), !dbg !6142
  br label %bb1, !dbg !6142

bb1:                                              ; preds = %start
  call void @entry2(i32 2, i32* %_6), !dbg !6143
  br label %bb2, !dbg !6143

bb2:                                              ; preds = %bb1
  %_12.0 = bitcast [2 x i32]* %rust_buffer to [0 x i32]*, !dbg !6144
; call core::slice::<impl [T]>::as_mut_ptr
  %_11 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h219c650c35cacae1E"([0 x i32]* align 4 %_12.0, i64 2), !dbg !6144
  br label %bb3, !dbg !6144

bb3:                                              ; preds = %bb2
  call void @rust_entry2(i32 2, i32* %_11), !dbg !6145
  br label %bb4, !dbg !6145

bb4:                                              ; preds = %bb3
  %6 = bitcast { i32*, i32* }* %_14 to [2 x i32]**, !dbg !6146
  store [2 x i32]* %buffer, [2 x i32]** %6, align 8, !dbg !6146
  %7 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_14, i32 0, i32 1, !dbg !6146
  %8 = bitcast i32** %7 to [2 x i32]**, !dbg !6146
  store [2 x i32]* %rust_buffer, [2 x i32]** %8, align 8, !dbg !6146
  %9 = bitcast { i32*, i32* }* %_14 to [2 x i32]**, !dbg !6146
  %left_val = load [2 x i32]*, [2 x i32]** %9, align 8, !dbg !6146, !nonnull !23, !align !446, !noundef !23
  store [2 x i32]* %left_val, [2 x i32]** %left_val.dbg.spill, align 8, !dbg !6146
  call void @llvm.dbg.declare(metadata [2 x i32]** %left_val.dbg.spill, metadata !6120, metadata !DIExpression()), !dbg !6147
  %10 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_14, i32 0, i32 1, !dbg !6146
  %11 = bitcast i32** %10 to [2 x i32]**, !dbg !6146
  %right_val = load [2 x i32]*, [2 x i32]** %11, align 8, !dbg !6146, !nonnull !23, !align !446, !noundef !23
  store [2 x i32]* %right_val, [2 x i32]** %right_val.dbg.spill, align 8, !dbg !6146
  call void @llvm.dbg.declare(metadata [2 x i32]** %right_val.dbg.spill, metadata !6123, metadata !DIExpression()), !dbg !6147
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_20 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h3b0eace8b98ef178E"([2 x i32]* align 4 %left_val, [2 x i32]* align 4 %right_val), !dbg !6147
  br label %bb5, !dbg !6147

bb5:                                              ; preds = %bb4
  %_19 = xor i1 %_20, true, !dbg !6147
  br i1 %_19, label %bb6, label %bb7, !dbg !6147

bb7:                                              ; preds = %bb5
  %12 = bitcast { i32*, i32* }* %_31 to [2 x i32]**, !dbg !6148
  store [2 x i32]* %buffer, [2 x i32]** %12, align 8, !dbg !6148
  %13 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_31, i32 0, i32 1, !dbg !6148
  %14 = bitcast i32** %13 to [2 x i32]**, !dbg !6148
  store [2 x i32]* %expected_buffer, [2 x i32]** %14, align 8, !dbg !6148
  %15 = bitcast { i32*, i32* }* %_31 to [2 x i32]**, !dbg !6148
  %left_val2 = load [2 x i32]*, [2 x i32]** %15, align 8, !dbg !6148, !nonnull !23, !align !446, !noundef !23
  store [2 x i32]* %left_val2, [2 x i32]** %left_val.dbg.spill3, align 8, !dbg !6148
  call void @llvm.dbg.declare(metadata [2 x i32]** %left_val.dbg.spill3, metadata !6127, metadata !DIExpression()), !dbg !6149
  %16 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_31, i32 0, i32 1, !dbg !6148
  %17 = bitcast i32** %16 to [2 x i32]**, !dbg !6148
  %right_val4 = load [2 x i32]*, [2 x i32]** %17, align 8, !dbg !6148, !nonnull !23, !align !446, !noundef !23
  store [2 x i32]* %right_val4, [2 x i32]** %right_val.dbg.spill5, align 8, !dbg !6148
  call void @llvm.dbg.declare(metadata [2 x i32]** %right_val.dbg.spill5, metadata !6130, metadata !DIExpression()), !dbg !6149
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_37 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h3b0eace8b98ef178E"([2 x i32]* align 4 %left_val2, [2 x i32]* align 4 %right_val4), !dbg !6149
  br label %bb8, !dbg !6149

bb6:                                              ; preds = %bb5
  store i8 0, i8* %kind, align 1, !dbg !6147
  %18 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_30 to {}**, !dbg !6137
  store {}* null, {}** %18, align 8, !dbg !6137
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hb55f4f60b0e09d92E(i8 0, [2 x i32]* align 4 %left_val, [2 x i32]* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_30, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc641 to %"core::panic::location::Location"*)) #15, !dbg !6137
  unreachable, !dbg !6137

bb8:                                              ; preds = %bb7
  %_36 = xor i1 %_37, true, !dbg !6149
  br i1 %_36, label %bb9, label %bb10, !dbg !6149

bb10:                                             ; preds = %bb8
  ret void, !dbg !6150

bb9:                                              ; preds = %bb8
  store i8 0, i8* %kind1, align 1, !dbg !6149
  %19 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_47 to {}**, !dbg !6138
  store {}* null, {}** %19, align 8, !dbg !6138
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hb55f4f60b0e09d92E(i8 0, [2 x i32]* align 4 %left_val2, [2 x i32]* align 4 %right_val4, %"core::option::Option<core::fmt::Arguments>"* %_47, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc643 to %"core::panic::location::Location"*)) #15, !dbg !6138
  unreachable, !dbg !6138
}

; array_tests::test_arrays::test_variable_arrays::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN11array_tests11test_arrays20test_variable_arrays28_$u7b$$u7b$closure$u7d$$u7d$17h36e6b28ca8e568caE"(%"[closure@src/test_arrays.rs:86:1: 104:2]"* align 1 %_1) unnamed_addr #0 !dbg !6151 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_arrays.rs:86:1: 104:2]"*, align 8
  store %"[closure@src/test_arrays.rs:86:1: 104:2]"* %_1, %"[closure@src/test_arrays.rs:86:1: 104:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_arrays.rs:86:1: 104:2]"** %_1.dbg.spill, metadata !6156, metadata !DIExpression()), !dbg !6157
  call void @test_variable_arrays(), !dbg !6157
  br label %bb1, !dbg !6157

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17he193e499d4e0e61dE(), !dbg !6157
  br label %bb2, !dbg !6157

bb2:                                              ; preds = %bb1
  ret void, !dbg !6158
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_variable_arrays() unnamed_addr #2 !dbg !6159 {
start:
  %right_val.dbg.spill8 = alloca i32*, align 8
  %left_val.dbg.spill6 = alloca i32*, align 8
  %right_val.dbg.spill = alloca i32*, align 8
  %left_val.dbg.spill = alloca i32*, align 8
  %_84 = alloca [1 x { i8*, i64* }], align 8
  %_77 = alloca %"core::fmt::Arguments", align 8
  %_76 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind1 = alloca i8, align 1
  %_54 = alloca { i32*, i32* }, align 8
  %_50 = alloca [1 x { i8*, i64* }], align 8
  %_43 = alloca %"core::fmt::Arguments", align 8
  %_42 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_20 = alloca { i32*, i32* }, align 8
  %index = alloca i64, align 8
  %_15 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %expected_buffer = alloca [88 x i32], align 4
  %rust_buffer = alloca [88 x i32], align 4
  %buffer = alloca [88 x i32], align 4
  call void @llvm.dbg.declare(metadata [88 x i32]* %buffer, metadata !6161, metadata !DIExpression()), !dbg !6188
  call void @llvm.dbg.declare(metadata [88 x i32]* %rust_buffer, metadata !6166, metadata !DIExpression()), !dbg !6189
  call void @llvm.dbg.declare(metadata [88 x i32]* %expected_buffer, metadata !6168, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter, metadata !6170, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.declare(metadata i64* %index, metadata !6172, metadata !DIExpression()), !dbg !6192
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !6178, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.declare(metadata i8* %kind1, metadata !6185, metadata !DIExpression()), !dbg !6194
  %0 = getelementptr inbounds [88 x i32], [88 x i32]* %buffer, i64 0, i64 0, !dbg !6195
  %1 = bitcast i32* %0 to i8*, !dbg !6195
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 352, i1 false), !dbg !6195
  %2 = getelementptr inbounds [88 x i32], [88 x i32]* %rust_buffer, i64 0, i64 0, !dbg !6196
  %3 = bitcast i32* %2 to i8*, !dbg !6196
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 352, i1 false), !dbg !6196
  %4 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 0, !dbg !6197
  store i32 1, i32* %4, align 4, !dbg !6197
  %5 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 1, !dbg !6197
  store i32 2, i32* %5, align 4, !dbg !6197
  %6 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 2, !dbg !6197
  store i32 3, i32* %6, align 4, !dbg !6197
  %7 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 3, !dbg !6197
  store i32 4, i32* %7, align 4, !dbg !6197
  %8 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 4, !dbg !6197
  store i32 5, i32* %8, align 4, !dbg !6197
  %9 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 5, !dbg !6197
  store i32 6, i32* %9, align 4, !dbg !6197
  %10 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 6, !dbg !6197
  store i32 7, i32* %10, align 4, !dbg !6197
  %11 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 7, !dbg !6197
  store i32 8, i32* %11, align 4, !dbg !6197
  %12 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 8, !dbg !6197
  store i32 9, i32* %12, align 4, !dbg !6197
  %13 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 9, !dbg !6197
  store i32 10, i32* %13, align 4, !dbg !6197
  %14 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 10, !dbg !6197
  store i32 11, i32* %14, align 4, !dbg !6197
  %15 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 11, !dbg !6197
  store i32 12, i32* %15, align 4, !dbg !6197
  %16 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 12, !dbg !6197
  store i32 13, i32* %16, align 4, !dbg !6197
  %17 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 13, !dbg !6197
  store i32 14, i32* %17, align 4, !dbg !6197
  %18 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 14, !dbg !6197
  store i32 15, i32* %18, align 4, !dbg !6197
  %19 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 15, !dbg !6197
  store i32 16, i32* %19, align 4, !dbg !6197
  %20 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 16, !dbg !6197
  store i32 17, i32* %20, align 4, !dbg !6197
  %21 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 17, !dbg !6197
  store i32 18, i32* %21, align 4, !dbg !6197
  %22 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 18, !dbg !6197
  store i32 19, i32* %22, align 4, !dbg !6197
  %23 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 19, !dbg !6197
  store i32 20, i32* %23, align 4, !dbg !6197
  %24 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 20, !dbg !6197
  store i32 21, i32* %24, align 4, !dbg !6197
  %25 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 21, !dbg !6197
  store i32 22, i32* %25, align 4, !dbg !6197
  %26 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 22, !dbg !6197
  store i32 23, i32* %26, align 4, !dbg !6197
  %27 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 23, !dbg !6197
  store i32 24, i32* %27, align 4, !dbg !6197
  %28 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 24, !dbg !6197
  store i32 25, i32* %28, align 4, !dbg !6197
  %29 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 25, !dbg !6197
  store i32 26, i32* %29, align 4, !dbg !6197
  %30 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 26, !dbg !6197
  store i32 27, i32* %30, align 4, !dbg !6197
  %31 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 27, !dbg !6197
  store i32 28, i32* %31, align 4, !dbg !6197
  %32 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 28, !dbg !6197
  store i32 29, i32* %32, align 4, !dbg !6197
  %33 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 29, !dbg !6197
  store i32 30, i32* %33, align 4, !dbg !6197
  %34 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 30, !dbg !6197
  store i32 31, i32* %34, align 4, !dbg !6197
  %35 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 31, !dbg !6197
  store i32 32, i32* %35, align 4, !dbg !6197
  %36 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 32, !dbg !6197
  store i32 33, i32* %36, align 4, !dbg !6197
  %37 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 33, !dbg !6197
  store i32 34, i32* %37, align 4, !dbg !6197
  %38 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 34, !dbg !6197
  store i32 35, i32* %38, align 4, !dbg !6197
  %39 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 35, !dbg !6197
  store i32 36, i32* %39, align 4, !dbg !6197
  %40 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 36, !dbg !6197
  store i32 37, i32* %40, align 4, !dbg !6197
  %41 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 37, !dbg !6197
  store i32 38, i32* %41, align 4, !dbg !6197
  %42 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 38, !dbg !6197
  store i32 39, i32* %42, align 4, !dbg !6197
  %43 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 39, !dbg !6197
  store i32 40, i32* %43, align 4, !dbg !6197
  %44 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 40, !dbg !6197
  store i32 1, i32* %44, align 4, !dbg !6197
  %45 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 41, !dbg !6197
  store i32 2, i32* %45, align 4, !dbg !6197
  %46 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 42, !dbg !6197
  store i32 3, i32* %46, align 4, !dbg !6197
  %47 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 43, !dbg !6197
  store i32 4, i32* %47, align 4, !dbg !6197
  %48 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 44, !dbg !6197
  store i32 5, i32* %48, align 4, !dbg !6197
  %49 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 45, !dbg !6197
  store i32 6, i32* %49, align 4, !dbg !6197
  %50 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 46, !dbg !6197
  store i32 7, i32* %50, align 4, !dbg !6197
  %51 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 47, !dbg !6197
  store i32 8, i32* %51, align 4, !dbg !6197
  %52 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 48, !dbg !6197
  store i32 9, i32* %52, align 4, !dbg !6197
  %53 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 49, !dbg !6197
  store i32 10, i32* %53, align 4, !dbg !6197
  %54 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 50, !dbg !6197
  store i32 11, i32* %54, align 4, !dbg !6197
  %55 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 51, !dbg !6197
  store i32 12, i32* %55, align 4, !dbg !6197
  %56 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 52, !dbg !6197
  store i32 13, i32* %56, align 4, !dbg !6197
  %57 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 53, !dbg !6197
  store i32 14, i32* %57, align 4, !dbg !6197
  %58 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 54, !dbg !6197
  store i32 15, i32* %58, align 4, !dbg !6197
  %59 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 55, !dbg !6197
  store i32 16, i32* %59, align 4, !dbg !6197
  %60 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 56, !dbg !6197
  store i32 17, i32* %60, align 4, !dbg !6197
  %61 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 57, !dbg !6197
  store i32 18, i32* %61, align 4, !dbg !6197
  %62 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 58, !dbg !6197
  store i32 19, i32* %62, align 4, !dbg !6197
  %63 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 59, !dbg !6197
  store i32 20, i32* %63, align 4, !dbg !6197
  %64 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 60, !dbg !6197
  store i32 21, i32* %64, align 4, !dbg !6197
  %65 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 61, !dbg !6197
  store i32 22, i32* %65, align 4, !dbg !6197
  %66 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 62, !dbg !6197
  store i32 23, i32* %66, align 4, !dbg !6197
  %67 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 63, !dbg !6197
  store i32 24, i32* %67, align 4, !dbg !6197
  %68 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 64, !dbg !6197
  store i32 25, i32* %68, align 4, !dbg !6197
  %69 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 65, !dbg !6197
  store i32 26, i32* %69, align 4, !dbg !6197
  %70 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 66, !dbg !6197
  store i32 27, i32* %70, align 4, !dbg !6197
  %71 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 67, !dbg !6197
  store i32 28, i32* %71, align 4, !dbg !6197
  %72 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 68, !dbg !6197
  store i32 29, i32* %72, align 4, !dbg !6197
  %73 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 69, !dbg !6197
  store i32 30, i32* %73, align 4, !dbg !6197
  %74 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 70, !dbg !6197
  store i32 31, i32* %74, align 4, !dbg !6197
  %75 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 71, !dbg !6197
  store i32 32, i32* %75, align 4, !dbg !6197
  %76 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 72, !dbg !6197
  store i32 33, i32* %76, align 4, !dbg !6197
  %77 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 73, !dbg !6197
  store i32 34, i32* %77, align 4, !dbg !6197
  %78 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 74, !dbg !6197
  store i32 35, i32* %78, align 4, !dbg !6197
  %79 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 75, !dbg !6197
  store i32 36, i32* %79, align 4, !dbg !6197
  %80 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 76, !dbg !6197
  store i32 37, i32* %80, align 4, !dbg !6197
  %81 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 77, !dbg !6197
  store i32 38, i32* %81, align 4, !dbg !6197
  %82 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 78, !dbg !6197
  store i32 39, i32* %82, align 4, !dbg !6197
  %83 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 79, !dbg !6197
  store i32 40, i32* %83, align 4, !dbg !6197
  %84 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 80, !dbg !6197
  store i32 0, i32* %84, align 4, !dbg !6197
  %85 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 81, !dbg !6197
  store i32 3, i32* %85, align 4, !dbg !6197
  %86 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 82, !dbg !6197
  store i32 6, i32* %86, align 4, !dbg !6197
  %87 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 83, !dbg !6197
  store i32 9, i32* %87, align 4, !dbg !6197
  %88 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 84, !dbg !6197
  store i32 12, i32* %88, align 4, !dbg !6197
  %89 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 85, !dbg !6197
  store i32 15, i32* %89, align 4, !dbg !6197
  %90 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 86, !dbg !6197
  store i32 18, i32* %90, align 4, !dbg !6197
  %91 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 87, !dbg !6197
  store i32 21, i32* %91, align 4, !dbg !6197
  %_6.0 = bitcast [88 x i32]* %buffer to [0 x i32]*, !dbg !6198
; call core::slice::<impl [T]>::as_mut_ptr
  %_5 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h219c650c35cacae1E"([0 x i32]* align 4 %_6.0, i64 88), !dbg !6198
  br label %bb1, !dbg !6198

bb1:                                              ; preds = %start
  call void @variable_arrays(i32* %_5), !dbg !6199
  br label %bb2, !dbg !6199

bb2:                                              ; preds = %bb1
  %_10.0 = bitcast [88 x i32]* %rust_buffer to [0 x i32]*, !dbg !6200
; call core::slice::<impl [T]>::as_mut_ptr
  %_9 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h219c650c35cacae1E"([0 x i32]* align 4 %_10.0, i64 88), !dbg !6200
  br label %bb3, !dbg !6200

bb3:                                              ; preds = %bb2
  call void @rust_variable_arrays(i32* %_9), !dbg !6201
  br label %bb4, !dbg !6201

bb4:                                              ; preds = %bb3
  %92 = bitcast { i64, i64 }* %_13 to i64*, !dbg !6202
  store i64 0, i64* %92, align 8, !dbg !6202
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !6202
  store i64 88, i64* %93, align 8, !dbg !6202
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !6202
  %95 = load i64, i64* %94, align 8, !dbg !6202
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !6202
  %97 = load i64, i64* %96, align 8, !dbg !6202
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %98 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9b4d6d2b6d8eadeeE"(i64 %95, i64 %97), !dbg !6202
  %_12.0 = extractvalue { i64, i64 } %98, 0, !dbg !6202
  %_12.1 = extractvalue { i64, i64 } %98, 1, !dbg !6202
  br label %bb5, !dbg !6202

bb5:                                              ; preds = %bb4
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0, !dbg !6202
  store i64 %_12.0, i64* %99, align 8, !dbg !6202
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1, !dbg !6202
  store i64 %_12.1, i64* %100, align 8, !dbg !6202
  br label %bb6, !dbg !6203

bb6:                                              ; preds = %bb18, %bb5
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %101 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hf0c8e6a807a2d16cE"({ i64, i64 }* align 8 %iter), !dbg !6191
  store { i64, i64 } %101, { i64, i64 }* %_15, align 8, !dbg !6191
  br label %bb7, !dbg !6191

bb7:                                              ; preds = %bb6
  %102 = bitcast { i64, i64 }* %_15 to i64*, !dbg !6191
  %_18 = load i64, i64* %102, align 8, !dbg !6191, !range !932, !noundef !23
  switch i64 %_18, label %bb9 [
    i64 0, label %bb10
    i64 1, label %bb8
  ], !dbg !6191

bb9:                                              ; preds = %bb7
  unreachable, !dbg !6191

bb10:                                             ; preds = %bb7
  ret void, !dbg !6204

bb8:                                              ; preds = %bb7
  %103 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !6205
  %104 = load i64, i64* %103, align 8, !dbg !6205
  store i64 %104, i64* %index, align 8, !dbg !6205
  %_22 = load i64, i64* %index, align 8, !dbg !6206
  %_24 = icmp ult i64 %_22, 88, !dbg !6207
  %105 = call i1 @llvm.expect.i1(i1 %_24, i1 true), !dbg !6207
  br i1 %105, label %bb11, label %panic, !dbg !6207

bb11:                                             ; preds = %bb8
  %_21 = getelementptr inbounds [88 x i32], [88 x i32]* %buffer, i64 0, i64 %_22, !dbg !6208
  %_26 = load i64, i64* %index, align 8, !dbg !6209
  %_28 = icmp ult i64 %_26, 88, !dbg !6210
  %106 = call i1 @llvm.expect.i1(i1 %_28, i1 true), !dbg !6210
  br i1 %106, label %bb12, label %panic2, !dbg !6210

panic:                                            ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_22, i64 88, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc645 to %"core::panic::location::Location"*)) #15, !dbg !6207
  unreachable, !dbg !6207

bb12:                                             ; preds = %bb11
  %_25 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 %_26, !dbg !6208
  %107 = bitcast { i32*, i32* }* %_20 to i32**, !dbg !6208
  store i32* %_21, i32** %107, align 8, !dbg !6208
  %108 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_20, i32 0, i32 1, !dbg !6208
  store i32* %_25, i32** %108, align 8, !dbg !6208
  %109 = bitcast { i32*, i32* }* %_20 to i32**, !dbg !6208
  %left_val = load i32*, i32** %109, align 8, !dbg !6208, !nonnull !23, !align !446, !noundef !23
  store i32* %left_val, i32** %left_val.dbg.spill, align 8, !dbg !6208
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill, metadata !6174, metadata !DIExpression()), !dbg !6211
  %110 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_20, i32 0, i32 1, !dbg !6208
  %right_val = load i32*, i32** %110, align 8, !dbg !6208, !nonnull !23, !align !446, !noundef !23
  store i32* %right_val, i32** %right_val.dbg.spill, align 8, !dbg !6208
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill, metadata !6177, metadata !DIExpression()), !dbg !6211
  %_33 = load i32, i32* %left_val, align 4, !dbg !6211
  %_34 = load i32, i32* %right_val, align 4, !dbg !6211
  %_32 = icmp eq i32 %_33, %_34, !dbg !6211
  %_31 = xor i1 %_32, true, !dbg !6211
  br i1 %_31, label %bb13, label %bb16, !dbg !6211

panic2:                                           ; preds = %bb11
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_26, i64 88, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc647 to %"core::panic::location::Location"*)) #15, !dbg !6210
  unreachable, !dbg !6210

bb16:                                             ; preds = %bb12
  %_56 = load i64, i64* %index, align 8, !dbg !6212
  %_58 = icmp ult i64 %_56, 88, !dbg !6213
  %111 = call i1 @llvm.expect.i1(i1 %_58, i1 true), !dbg !6213
  br i1 %111, label %bb17, label %panic3, !dbg !6213

bb13:                                             ; preds = %bb12
  store i8 0, i8* %kind, align 1, !dbg !6211
; call core::fmt::ArgumentV1::new_display
  %112 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h4a588785c5f75a8eE(i64* align 8 %index), !dbg !6193
  %_51.0 = extractvalue { i8*, i64* } %112, 0, !dbg !6193
  %_51.1 = extractvalue { i8*, i64* } %112, 1, !dbg !6193
  br label %bb14, !dbg !6193

bb14:                                             ; preds = %bb13
  %113 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_50, i64 0, i64 0, !dbg !6193
  %114 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %113, i32 0, i32 0, !dbg !6193
  store i8* %_51.0, i8** %114, align 8, !dbg !6193
  %115 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %113, i32 0, i32 1, !dbg !6193
  store i64* %_51.1, i64** %115, align 8, !dbg !6193
  %_47.0 = bitcast [1 x { i8*, i64* }]* %_50 to [0 x { i8*, i64* }]*, !dbg !6193
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h91724e5e2039d987E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_43, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc308 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 %_47.0, i64 1), !dbg !6193
  br label %bb15, !dbg !6193

bb15:                                             ; preds = %bb14
  %116 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_42 to %"core::option::Option<core::fmt::Arguments>::Some"*, !dbg !6193
  %117 = bitcast %"core::option::Option<core::fmt::Arguments>::Some"* %116 to %"core::fmt::Arguments"*, !dbg !6193
  %118 = bitcast %"core::fmt::Arguments"* %117 to i8*, !dbg !6193
  %119 = bitcast %"core::fmt::Arguments"* %_43 to i8*, !dbg !6193
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 48, i1 false), !dbg !6193
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h5179245ed6beeeebE(i8 0, i32* align 4 %left_val, i32* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_42, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc649 to %"core::panic::location::Location"*)) #15, !dbg !6193
  unreachable, !dbg !6193

bb17:                                             ; preds = %bb16
  %_55 = getelementptr inbounds [88 x i32], [88 x i32]* %buffer, i64 0, i64 %_56, !dbg !6214
  %_60 = load i64, i64* %index, align 8, !dbg !6215
  %_62 = icmp ult i64 %_60, 88, !dbg !6216
  %120 = call i1 @llvm.expect.i1(i1 %_62, i1 true), !dbg !6216
  br i1 %120, label %bb18, label %panic4, !dbg !6216

panic3:                                           ; preds = %bb16
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_56, i64 88, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc651 to %"core::panic::location::Location"*)) #15, !dbg !6213
  unreachable, !dbg !6213

bb18:                                             ; preds = %bb17
  %_59 = getelementptr inbounds [88 x i32], [88 x i32]* %rust_buffer, i64 0, i64 %_60, !dbg !6214
  %121 = bitcast { i32*, i32* }* %_54 to i32**, !dbg !6214
  store i32* %_55, i32** %121, align 8, !dbg !6214
  %122 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_54, i32 0, i32 1, !dbg !6214
  store i32* %_59, i32** %122, align 8, !dbg !6214
  %123 = bitcast { i32*, i32* }* %_54 to i32**, !dbg !6214
  %left_val5 = load i32*, i32** %123, align 8, !dbg !6214, !nonnull !23, !align !446, !noundef !23
  store i32* %left_val5, i32** %left_val.dbg.spill6, align 8, !dbg !6214
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill6, metadata !6181, metadata !DIExpression()), !dbg !6217
  %124 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_54, i32 0, i32 1, !dbg !6214
  %right_val7 = load i32*, i32** %124, align 8, !dbg !6214, !nonnull !23, !align !446, !noundef !23
  store i32* %right_val7, i32** %right_val.dbg.spill8, align 8, !dbg !6214
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill8, metadata !6184, metadata !DIExpression()), !dbg !6217
  %_67 = load i32, i32* %left_val5, align 4, !dbg !6217
  %_68 = load i32, i32* %right_val7, align 4, !dbg !6217
  %_66 = icmp eq i32 %_67, %_68, !dbg !6217
  %_65 = xor i1 %_66, true, !dbg !6217
  br i1 %_65, label %bb19, label %bb6, !dbg !6217

panic4:                                           ; preds = %bb17
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_60, i64 88, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc653 to %"core::panic::location::Location"*)) #15, !dbg !6216
  unreachable, !dbg !6216

bb19:                                             ; preds = %bb18
  store i8 0, i8* %kind1, align 1, !dbg !6217
; call core::fmt::ArgumentV1::new_display
  %125 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h4a588785c5f75a8eE(i64* align 8 %index), !dbg !6194
  %_85.0 = extractvalue { i8*, i64* } %125, 0, !dbg !6194
  %_85.1 = extractvalue { i8*, i64* } %125, 1, !dbg !6194
  br label %bb20, !dbg !6194

bb20:                                             ; preds = %bb19
  %126 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_84, i64 0, i64 0, !dbg !6194
  %127 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %126, i32 0, i32 0, !dbg !6194
  store i8* %_85.0, i8** %127, align 8, !dbg !6194
  %128 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %126, i32 0, i32 1, !dbg !6194
  store i64* %_85.1, i64** %128, align 8, !dbg !6194
  %_81.0 = bitcast [1 x { i8*, i64* }]* %_84 to [0 x { i8*, i64* }]*, !dbg !6194
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h91724e5e2039d987E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_77, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc308 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 %_81.0, i64 1), !dbg !6194
  br label %bb21, !dbg !6194

bb21:                                             ; preds = %bb20
  %129 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_76 to %"core::option::Option<core::fmt::Arguments>::Some"*, !dbg !6194
  %130 = bitcast %"core::option::Option<core::fmt::Arguments>::Some"* %129 to %"core::fmt::Arguments"*, !dbg !6194
  %131 = bitcast %"core::fmt::Arguments"* %130 to i8*, !dbg !6194
  %132 = bitcast %"core::fmt::Arguments"* %_77 to i8*, !dbg !6194
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 48, i1 false), !dbg !6194
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h5179245ed6beeeebE(i8 0, i32* align 4 %left_val5, i32* align 4 %right_val7, %"core::option::Option<core::fmt::Arguments>"* %_76, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc655 to %"core::panic::location::Location"*)) #15, !dbg !6194
  unreachable, !dbg !6194
}

; array_tests::test_arrays::test_alloca_arrays::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN11array_tests11test_arrays18test_alloca_arrays28_$u7b$$u7b$closure$u7d$$u7d$17h4849e9a2f935d764E"(%"[closure@src/test_arrays.rs:108:1: 126:2]"* align 1 %_1) unnamed_addr #0 !dbg !6218 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_arrays.rs:108:1: 126:2]"*, align 8
  store %"[closure@src/test_arrays.rs:108:1: 126:2]"* %_1, %"[closure@src/test_arrays.rs:108:1: 126:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_arrays.rs:108:1: 126:2]"** %_1.dbg.spill, metadata !6223, metadata !DIExpression()), !dbg !6224
  call void @test_alloca_arrays(), !dbg !6224
  br label %bb1, !dbg !6224

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17he193e499d4e0e61dE(), !dbg !6224
  br label %bb2, !dbg !6224

bb2:                                              ; preds = %bb1
  ret void, !dbg !6225
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_alloca_arrays() unnamed_addr #2 !dbg !6226 {
start:
  %right_val.dbg.spill8 = alloca i32*, align 8
  %left_val.dbg.spill6 = alloca i32*, align 8
  %right_val.dbg.spill = alloca i32*, align 8
  %left_val.dbg.spill = alloca i32*, align 8
  %_84 = alloca [1 x { i8*, i64* }], align 8
  %_77 = alloca %"core::fmt::Arguments", align 8
  %_76 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind1 = alloca i8, align 1
  %_54 = alloca { i32*, i32* }, align 8
  %_50 = alloca [1 x { i8*, i64* }], align 8
  %_43 = alloca %"core::fmt::Arguments", align 8
  %_42 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_20 = alloca { i32*, i32* }, align 8
  %index = alloca i64, align 8
  %_15 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %expected_buffer = alloca [88 x i32], align 4
  %rust_buffer = alloca [88 x i32], align 4
  %buffer = alloca [88 x i32], align 4
  call void @llvm.dbg.declare(metadata [88 x i32]* %buffer, metadata !6228, metadata !DIExpression()), !dbg !6252
  call void @llvm.dbg.declare(metadata [88 x i32]* %rust_buffer, metadata !6230, metadata !DIExpression()), !dbg !6253
  call void @llvm.dbg.declare(metadata [88 x i32]* %expected_buffer, metadata !6232, metadata !DIExpression()), !dbg !6254
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter, metadata !6234, metadata !DIExpression()), !dbg !6255
  call void @llvm.dbg.declare(metadata i64* %index, metadata !6236, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !6242, metadata !DIExpression()), !dbg !6257
  call void @llvm.dbg.declare(metadata i8* %kind1, metadata !6249, metadata !DIExpression()), !dbg !6258
  %0 = getelementptr inbounds [88 x i32], [88 x i32]* %buffer, i64 0, i64 0, !dbg !6259
  %1 = bitcast i32* %0 to i8*, !dbg !6259
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 352, i1 false), !dbg !6259
  %2 = getelementptr inbounds [88 x i32], [88 x i32]* %rust_buffer, i64 0, i64 0, !dbg !6260
  %3 = bitcast i32* %2 to i8*, !dbg !6260
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 352, i1 false), !dbg !6260
  %4 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 0, !dbg !6261
  store i32 1, i32* %4, align 4, !dbg !6261
  %5 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 1, !dbg !6261
  store i32 2, i32* %5, align 4, !dbg !6261
  %6 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 2, !dbg !6261
  store i32 3, i32* %6, align 4, !dbg !6261
  %7 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 3, !dbg !6261
  store i32 4, i32* %7, align 4, !dbg !6261
  %8 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 4, !dbg !6261
  store i32 5, i32* %8, align 4, !dbg !6261
  %9 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 5, !dbg !6261
  store i32 6, i32* %9, align 4, !dbg !6261
  %10 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 6, !dbg !6261
  store i32 7, i32* %10, align 4, !dbg !6261
  %11 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 7, !dbg !6261
  store i32 8, i32* %11, align 4, !dbg !6261
  %12 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 8, !dbg !6261
  store i32 9, i32* %12, align 4, !dbg !6261
  %13 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 9, !dbg !6261
  store i32 10, i32* %13, align 4, !dbg !6261
  %14 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 10, !dbg !6261
  store i32 11, i32* %14, align 4, !dbg !6261
  %15 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 11, !dbg !6261
  store i32 12, i32* %15, align 4, !dbg !6261
  %16 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 12, !dbg !6261
  store i32 13, i32* %16, align 4, !dbg !6261
  %17 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 13, !dbg !6261
  store i32 14, i32* %17, align 4, !dbg !6261
  %18 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 14, !dbg !6261
  store i32 15, i32* %18, align 4, !dbg !6261
  %19 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 15, !dbg !6261
  store i32 16, i32* %19, align 4, !dbg !6261
  %20 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 16, !dbg !6261
  store i32 17, i32* %20, align 4, !dbg !6261
  %21 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 17, !dbg !6261
  store i32 18, i32* %21, align 4, !dbg !6261
  %22 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 18, !dbg !6261
  store i32 19, i32* %22, align 4, !dbg !6261
  %23 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 19, !dbg !6261
  store i32 20, i32* %23, align 4, !dbg !6261
  %24 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 20, !dbg !6261
  store i32 21, i32* %24, align 4, !dbg !6261
  %25 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 21, !dbg !6261
  store i32 22, i32* %25, align 4, !dbg !6261
  %26 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 22, !dbg !6261
  store i32 23, i32* %26, align 4, !dbg !6261
  %27 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 23, !dbg !6261
  store i32 24, i32* %27, align 4, !dbg !6261
  %28 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 24, !dbg !6261
  store i32 25, i32* %28, align 4, !dbg !6261
  %29 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 25, !dbg !6261
  store i32 26, i32* %29, align 4, !dbg !6261
  %30 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 26, !dbg !6261
  store i32 27, i32* %30, align 4, !dbg !6261
  %31 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 27, !dbg !6261
  store i32 28, i32* %31, align 4, !dbg !6261
  %32 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 28, !dbg !6261
  store i32 29, i32* %32, align 4, !dbg !6261
  %33 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 29, !dbg !6261
  store i32 30, i32* %33, align 4, !dbg !6261
  %34 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 30, !dbg !6261
  store i32 31, i32* %34, align 4, !dbg !6261
  %35 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 31, !dbg !6261
  store i32 32, i32* %35, align 4, !dbg !6261
  %36 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 32, !dbg !6261
  store i32 33, i32* %36, align 4, !dbg !6261
  %37 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 33, !dbg !6261
  store i32 34, i32* %37, align 4, !dbg !6261
  %38 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 34, !dbg !6261
  store i32 35, i32* %38, align 4, !dbg !6261
  %39 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 35, !dbg !6261
  store i32 36, i32* %39, align 4, !dbg !6261
  %40 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 36, !dbg !6261
  store i32 37, i32* %40, align 4, !dbg !6261
  %41 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 37, !dbg !6261
  store i32 38, i32* %41, align 4, !dbg !6261
  %42 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 38, !dbg !6261
  store i32 39, i32* %42, align 4, !dbg !6261
  %43 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 39, !dbg !6261
  store i32 40, i32* %43, align 4, !dbg !6261
  %44 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 40, !dbg !6261
  store i32 1, i32* %44, align 4, !dbg !6261
  %45 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 41, !dbg !6261
  store i32 2, i32* %45, align 4, !dbg !6261
  %46 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 42, !dbg !6261
  store i32 3, i32* %46, align 4, !dbg !6261
  %47 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 43, !dbg !6261
  store i32 4, i32* %47, align 4, !dbg !6261
  %48 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 44, !dbg !6261
  store i32 5, i32* %48, align 4, !dbg !6261
  %49 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 45, !dbg !6261
  store i32 6, i32* %49, align 4, !dbg !6261
  %50 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 46, !dbg !6261
  store i32 7, i32* %50, align 4, !dbg !6261
  %51 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 47, !dbg !6261
  store i32 8, i32* %51, align 4, !dbg !6261
  %52 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 48, !dbg !6261
  store i32 9, i32* %52, align 4, !dbg !6261
  %53 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 49, !dbg !6261
  store i32 10, i32* %53, align 4, !dbg !6261
  %54 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 50, !dbg !6261
  store i32 11, i32* %54, align 4, !dbg !6261
  %55 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 51, !dbg !6261
  store i32 12, i32* %55, align 4, !dbg !6261
  %56 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 52, !dbg !6261
  store i32 13, i32* %56, align 4, !dbg !6261
  %57 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 53, !dbg !6261
  store i32 14, i32* %57, align 4, !dbg !6261
  %58 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 54, !dbg !6261
  store i32 15, i32* %58, align 4, !dbg !6261
  %59 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 55, !dbg !6261
  store i32 16, i32* %59, align 4, !dbg !6261
  %60 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 56, !dbg !6261
  store i32 17, i32* %60, align 4, !dbg !6261
  %61 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 57, !dbg !6261
  store i32 18, i32* %61, align 4, !dbg !6261
  %62 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 58, !dbg !6261
  store i32 19, i32* %62, align 4, !dbg !6261
  %63 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 59, !dbg !6261
  store i32 20, i32* %63, align 4, !dbg !6261
  %64 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 60, !dbg !6261
  store i32 21, i32* %64, align 4, !dbg !6261
  %65 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 61, !dbg !6261
  store i32 22, i32* %65, align 4, !dbg !6261
  %66 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 62, !dbg !6261
  store i32 23, i32* %66, align 4, !dbg !6261
  %67 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 63, !dbg !6261
  store i32 24, i32* %67, align 4, !dbg !6261
  %68 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 64, !dbg !6261
  store i32 25, i32* %68, align 4, !dbg !6261
  %69 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 65, !dbg !6261
  store i32 26, i32* %69, align 4, !dbg !6261
  %70 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 66, !dbg !6261
  store i32 27, i32* %70, align 4, !dbg !6261
  %71 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 67, !dbg !6261
  store i32 28, i32* %71, align 4, !dbg !6261
  %72 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 68, !dbg !6261
  store i32 29, i32* %72, align 4, !dbg !6261
  %73 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 69, !dbg !6261
  store i32 30, i32* %73, align 4, !dbg !6261
  %74 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 70, !dbg !6261
  store i32 31, i32* %74, align 4, !dbg !6261
  %75 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 71, !dbg !6261
  store i32 32, i32* %75, align 4, !dbg !6261
  %76 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 72, !dbg !6261
  store i32 33, i32* %76, align 4, !dbg !6261
  %77 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 73, !dbg !6261
  store i32 34, i32* %77, align 4, !dbg !6261
  %78 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 74, !dbg !6261
  store i32 35, i32* %78, align 4, !dbg !6261
  %79 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 75, !dbg !6261
  store i32 36, i32* %79, align 4, !dbg !6261
  %80 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 76, !dbg !6261
  store i32 37, i32* %80, align 4, !dbg !6261
  %81 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 77, !dbg !6261
  store i32 38, i32* %81, align 4, !dbg !6261
  %82 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 78, !dbg !6261
  store i32 39, i32* %82, align 4, !dbg !6261
  %83 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 79, !dbg !6261
  store i32 40, i32* %83, align 4, !dbg !6261
  %84 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 80, !dbg !6261
  store i32 0, i32* %84, align 4, !dbg !6261
  %85 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 81, !dbg !6261
  store i32 3, i32* %85, align 4, !dbg !6261
  %86 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 82, !dbg !6261
  store i32 6, i32* %86, align 4, !dbg !6261
  %87 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 83, !dbg !6261
  store i32 9, i32* %87, align 4, !dbg !6261
  %88 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 84, !dbg !6261
  store i32 12, i32* %88, align 4, !dbg !6261
  %89 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 85, !dbg !6261
  store i32 15, i32* %89, align 4, !dbg !6261
  %90 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 86, !dbg !6261
  store i32 18, i32* %90, align 4, !dbg !6261
  %91 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 87, !dbg !6261
  store i32 21, i32* %91, align 4, !dbg !6261
  %_6.0 = bitcast [88 x i32]* %buffer to [0 x i32]*, !dbg !6262
; call core::slice::<impl [T]>::as_mut_ptr
  %_5 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h219c650c35cacae1E"([0 x i32]* align 4 %_6.0, i64 88), !dbg !6262
  br label %bb1, !dbg !6262

bb1:                                              ; preds = %start
  call void @alloca_arrays(i32* %_5), !dbg !6263
  br label %bb2, !dbg !6263

bb2:                                              ; preds = %bb1
  %_10.0 = bitcast [88 x i32]* %rust_buffer to [0 x i32]*, !dbg !6264
; call core::slice::<impl [T]>::as_mut_ptr
  %_9 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h219c650c35cacae1E"([0 x i32]* align 4 %_10.0, i64 88), !dbg !6264
  br label %bb3, !dbg !6264

bb3:                                              ; preds = %bb2
  call void @rust_alloca_arrays(i32* %_9), !dbg !6265
  br label %bb4, !dbg !6265

bb4:                                              ; preds = %bb3
  %92 = bitcast { i64, i64 }* %_13 to i64*, !dbg !6266
  store i64 0, i64* %92, align 8, !dbg !6266
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !6266
  store i64 88, i64* %93, align 8, !dbg !6266
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !6266
  %95 = load i64, i64* %94, align 8, !dbg !6266
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !6266
  %97 = load i64, i64* %96, align 8, !dbg !6266
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %98 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9b4d6d2b6d8eadeeE"(i64 %95, i64 %97), !dbg !6266
  %_12.0 = extractvalue { i64, i64 } %98, 0, !dbg !6266
  %_12.1 = extractvalue { i64, i64 } %98, 1, !dbg !6266
  br label %bb5, !dbg !6266

bb5:                                              ; preds = %bb4
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0, !dbg !6266
  store i64 %_12.0, i64* %99, align 8, !dbg !6266
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1, !dbg !6266
  store i64 %_12.1, i64* %100, align 8, !dbg !6266
  br label %bb6, !dbg !6267

bb6:                                              ; preds = %bb18, %bb5
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %101 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hf0c8e6a807a2d16cE"({ i64, i64 }* align 8 %iter), !dbg !6255
  store { i64, i64 } %101, { i64, i64 }* %_15, align 8, !dbg !6255
  br label %bb7, !dbg !6255

bb7:                                              ; preds = %bb6
  %102 = bitcast { i64, i64 }* %_15 to i64*, !dbg !6255
  %_18 = load i64, i64* %102, align 8, !dbg !6255, !range !932, !noundef !23
  switch i64 %_18, label %bb9 [
    i64 0, label %bb10
    i64 1, label %bb8
  ], !dbg !6255

bb9:                                              ; preds = %bb7
  unreachable, !dbg !6255

bb10:                                             ; preds = %bb7
  ret void, !dbg !6268

bb8:                                              ; preds = %bb7
  %103 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !6269
  %104 = load i64, i64* %103, align 8, !dbg !6269
  store i64 %104, i64* %index, align 8, !dbg !6269
  %_22 = load i64, i64* %index, align 8, !dbg !6270
  %_24 = icmp ult i64 %_22, 88, !dbg !6271
  %105 = call i1 @llvm.expect.i1(i1 %_24, i1 true), !dbg !6271
  br i1 %105, label %bb11, label %panic, !dbg !6271

bb11:                                             ; preds = %bb8
  %_21 = getelementptr inbounds [88 x i32], [88 x i32]* %buffer, i64 0, i64 %_22, !dbg !6272
  %_26 = load i64, i64* %index, align 8, !dbg !6273
  %_28 = icmp ult i64 %_26, 88, !dbg !6274
  %106 = call i1 @llvm.expect.i1(i1 %_28, i1 true), !dbg !6274
  br i1 %106, label %bb12, label %panic2, !dbg !6274

panic:                                            ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_22, i64 88, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc657 to %"core::panic::location::Location"*)) #15, !dbg !6271
  unreachable, !dbg !6271

bb12:                                             ; preds = %bb11
  %_25 = getelementptr inbounds [88 x i32], [88 x i32]* %expected_buffer, i64 0, i64 %_26, !dbg !6272
  %107 = bitcast { i32*, i32* }* %_20 to i32**, !dbg !6272
  store i32* %_21, i32** %107, align 8, !dbg !6272
  %108 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_20, i32 0, i32 1, !dbg !6272
  store i32* %_25, i32** %108, align 8, !dbg !6272
  %109 = bitcast { i32*, i32* }* %_20 to i32**, !dbg !6272
  %left_val = load i32*, i32** %109, align 8, !dbg !6272, !nonnull !23, !align !446, !noundef !23
  store i32* %left_val, i32** %left_val.dbg.spill, align 8, !dbg !6272
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill, metadata !6238, metadata !DIExpression()), !dbg !6275
  %110 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_20, i32 0, i32 1, !dbg !6272
  %right_val = load i32*, i32** %110, align 8, !dbg !6272, !nonnull !23, !align !446, !noundef !23
  store i32* %right_val, i32** %right_val.dbg.spill, align 8, !dbg !6272
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill, metadata !6241, metadata !DIExpression()), !dbg !6275
  %_33 = load i32, i32* %left_val, align 4, !dbg !6275
  %_34 = load i32, i32* %right_val, align 4, !dbg !6275
  %_32 = icmp eq i32 %_33, %_34, !dbg !6275
  %_31 = xor i1 %_32, true, !dbg !6275
  br i1 %_31, label %bb13, label %bb16, !dbg !6275

panic2:                                           ; preds = %bb11
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_26, i64 88, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc659 to %"core::panic::location::Location"*)) #15, !dbg !6274
  unreachable, !dbg !6274

bb16:                                             ; preds = %bb12
  %_56 = load i64, i64* %index, align 8, !dbg !6276
  %_58 = icmp ult i64 %_56, 88, !dbg !6277
  %111 = call i1 @llvm.expect.i1(i1 %_58, i1 true), !dbg !6277
  br i1 %111, label %bb17, label %panic3, !dbg !6277

bb13:                                             ; preds = %bb12
  store i8 0, i8* %kind, align 1, !dbg !6275
; call core::fmt::ArgumentV1::new_display
  %112 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h4a588785c5f75a8eE(i64* align 8 %index), !dbg !6257
  %_51.0 = extractvalue { i8*, i64* } %112, 0, !dbg !6257
  %_51.1 = extractvalue { i8*, i64* } %112, 1, !dbg !6257
  br label %bb14, !dbg !6257

bb14:                                             ; preds = %bb13
  %113 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_50, i64 0, i64 0, !dbg !6257
  %114 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %113, i32 0, i32 0, !dbg !6257
  store i8* %_51.0, i8** %114, align 8, !dbg !6257
  %115 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %113, i32 0, i32 1, !dbg !6257
  store i64* %_51.1, i64** %115, align 8, !dbg !6257
  %_47.0 = bitcast [1 x { i8*, i64* }]* %_50 to [0 x { i8*, i64* }]*, !dbg !6257
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h91724e5e2039d987E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_43, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc308 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 %_47.0, i64 1), !dbg !6257
  br label %bb15, !dbg !6257

bb15:                                             ; preds = %bb14
  %116 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_42 to %"core::option::Option<core::fmt::Arguments>::Some"*, !dbg !6257
  %117 = bitcast %"core::option::Option<core::fmt::Arguments>::Some"* %116 to %"core::fmt::Arguments"*, !dbg !6257
  %118 = bitcast %"core::fmt::Arguments"* %117 to i8*, !dbg !6257
  %119 = bitcast %"core::fmt::Arguments"* %_43 to i8*, !dbg !6257
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 48, i1 false), !dbg !6257
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h5179245ed6beeeebE(i8 0, i32* align 4 %left_val, i32* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_42, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc661 to %"core::panic::location::Location"*)) #15, !dbg !6257
  unreachable, !dbg !6257

bb17:                                             ; preds = %bb16
  %_55 = getelementptr inbounds [88 x i32], [88 x i32]* %buffer, i64 0, i64 %_56, !dbg !6278
  %_60 = load i64, i64* %index, align 8, !dbg !6279
  %_62 = icmp ult i64 %_60, 88, !dbg !6280
  %120 = call i1 @llvm.expect.i1(i1 %_62, i1 true), !dbg !6280
  br i1 %120, label %bb18, label %panic4, !dbg !6280

panic3:                                           ; preds = %bb16
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_56, i64 88, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc663 to %"core::panic::location::Location"*)) #15, !dbg !6277
  unreachable, !dbg !6277

bb18:                                             ; preds = %bb17
  %_59 = getelementptr inbounds [88 x i32], [88 x i32]* %rust_buffer, i64 0, i64 %_60, !dbg !6278
  %121 = bitcast { i32*, i32* }* %_54 to i32**, !dbg !6278
  store i32* %_55, i32** %121, align 8, !dbg !6278
  %122 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_54, i32 0, i32 1, !dbg !6278
  store i32* %_59, i32** %122, align 8, !dbg !6278
  %123 = bitcast { i32*, i32* }* %_54 to i32**, !dbg !6278
  %left_val5 = load i32*, i32** %123, align 8, !dbg !6278, !nonnull !23, !align !446, !noundef !23
  store i32* %left_val5, i32** %left_val.dbg.spill6, align 8, !dbg !6278
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill6, metadata !6245, metadata !DIExpression()), !dbg !6281
  %124 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_54, i32 0, i32 1, !dbg !6278
  %right_val7 = load i32*, i32** %124, align 8, !dbg !6278, !nonnull !23, !align !446, !noundef !23
  store i32* %right_val7, i32** %right_val.dbg.spill8, align 8, !dbg !6278
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill8, metadata !6248, metadata !DIExpression()), !dbg !6281
  %_67 = load i32, i32* %left_val5, align 4, !dbg !6281
  %_68 = load i32, i32* %right_val7, align 4, !dbg !6281
  %_66 = icmp eq i32 %_67, %_68, !dbg !6281
  %_65 = xor i1 %_66, true, !dbg !6281
  br i1 %_65, label %bb19, label %bb6, !dbg !6281

panic4:                                           ; preds = %bb17
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_60, i64 88, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc665 to %"core::panic::location::Location"*)) #15, !dbg !6280
  unreachable, !dbg !6280

bb19:                                             ; preds = %bb18
  store i8 0, i8* %kind1, align 1, !dbg !6281
; call core::fmt::ArgumentV1::new_display
  %125 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h4a588785c5f75a8eE(i64* align 8 %index), !dbg !6258
  %_85.0 = extractvalue { i8*, i64* } %125, 0, !dbg !6258
  %_85.1 = extractvalue { i8*, i64* } %125, 1, !dbg !6258
  br label %bb20, !dbg !6258

bb20:                                             ; preds = %bb19
  %126 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_84, i64 0, i64 0, !dbg !6258
  %127 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %126, i32 0, i32 0, !dbg !6258
  store i8* %_85.0, i8** %127, align 8, !dbg !6258
  %128 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %126, i32 0, i32 1, !dbg !6258
  store i64* %_85.1, i64** %128, align 8, !dbg !6258
  %_81.0 = bitcast [1 x { i8*, i64* }]* %_84 to [0 x { i8*, i64* }]*, !dbg !6258
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h91724e5e2039d987E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_77, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc308 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 %_81.0, i64 1), !dbg !6258
  br label %bb21, !dbg !6258

bb21:                                             ; preds = %bb20
  %129 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_76 to %"core::option::Option<core::fmt::Arguments>::Some"*, !dbg !6258
  %130 = bitcast %"core::option::Option<core::fmt::Arguments>::Some"* %129 to %"core::fmt::Arguments"*, !dbg !6258
  %131 = bitcast %"core::fmt::Arguments"* %130 to i8*, !dbg !6258
  %132 = bitcast %"core::fmt::Arguments"* %_77 to i8*, !dbg !6258
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 48, i1 false), !dbg !6258
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h5179245ed6beeeebE(i8 0, i32* align 4 %left_val5, i32* align 4 %right_val7, %"core::option::Option<core::fmt::Arguments>"* %_76, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc667 to %"core::panic::location::Location"*)) #15, !dbg !6258
  unreachable, !dbg !6258
}

; array_tests::main
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11array_tests4main17h235eec6d3a7779e1E() unnamed_addr #2 !dbg !6282 {
start:
; call test::test_main_static
  call void @_ZN4test16test_main_static17h282a5eb5a10ec82dE([0 x %"test::types::TestDescAndFn"*]* align 8 bitcast (<{ i8*, i8*, i8*, i8*, i8*, i8* }>* @alloc337 to [0 x %"test::types::TestDescAndFn"*]*), i64 6), !dbg !6283
  br label %bb1, !dbg !6283

bb1:                                              ; preds = %start
  ret void, !dbg !6283
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #5

; Function Attrs: nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #2

; std::rt::lang_start_internal
; Function Attrs: nonlazybind uwtable
declare i64 @_ZN3std2rt19lang_start_internal17h498f9556b87c8e5fE({}* align 1, [3 x i64]* align 8, i64, i8**) unnamed_addr #2

; <bool as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN43_$LT$bool$u20$as$u20$core..fmt..Display$GT$3fmt17h2dce19af35182c57E"(i8* align 1, %"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::Formatter::debug_list
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3fmt9Formatter10debug_list17h2e70d1c34e8cb782E(%"core::fmt::builders::DebugList"* sret(%"core::fmt::builders::DebugList"), %"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::builders::DebugList::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17ha896c0aa3642bf32E(%"core::fmt::builders::DebugList"* align 8) unnamed_addr #2

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE"(i64* align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h861f5ddbf758e4f9E(%"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h46ab6094afed2354E"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h21ddf2be2e6a0fd5E(%"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h827553a54a7e037dE"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h52a4838d0eaa2babE"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u32$GT$3fmt17h4598978fc11d0a5fE"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h1d19ab97b54bf162E"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h518f5e83165fbe37E"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::builders::DebugList::entry
; Function Attrs: nonlazybind uwtable
declare align 8 %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList5entry17h5007920add23274dE(%"core::fmt::builders::DebugList"* align 8, {}* align 1, [3 x i64]* align 8) unnamed_addr #2

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"*, %"core::panic::location::Location"* align 8) unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #5

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #5

; core::panicking::panic_no_unwind
; Function Attrs: cold noinline noreturn nounwind nonlazybind uwtable
declare void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() unnamed_addr #9

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #10

; core::panicking::assert_failed_inner
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8, {}* align 1, [3 x i64]* align 8, {}* align 1, [3 x i64]* align 8, %"core::option::Option<core::fmt::Arguments>"*, %"core::panic::location::Location"* align 8) unnamed_addr #11

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #12

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc(i64, i64) unnamed_addr #12

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_realloc(i8*, i64, i64, i64) unnamed_addr #12

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #13

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64, i64) unnamed_addr #3

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() unnamed_addr #11

; Function Attrs: nounwind nonlazybind uwtable
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #12

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #5

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1, i64, %"core::panic::location::Location"* align 8) unnamed_addr #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.smul.with.overflow.i32(i32, i32) #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #5

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #6

; Function Attrs: nonlazybind uwtable
declare i8* @malloc(i64) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @free(i8*) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare i32 @test_sized_array() unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare zeroext i1 @check_some_ints() unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @entry(i32, i32*) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @entry2(i32, i32*) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @variable_arrays(i32*) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @alloca_arrays(i32*) unnamed_addr #2

; test::test_main_static
; Function Attrs: nonlazybind uwtable
declare void @_ZN4test16test_main_static17h282a5eb5a10ec82dE([0 x %"test::types::TestDescAndFn"*]* align 8, i64) unnamed_addr #2

; Function Attrs: nonlazybind
define i32 @main(i32 %0, i8** %1) unnamed_addr #14 {
top:
  %2 = load volatile i8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__rustc_debug_gdb_scripts_section__, i32 0, i32 0), align 1
  %3 = sext i32 %0 to i64
; call std::rt::lang_start
  %4 = call i64 @_ZN3std2rt10lang_start17h960a6574b95da718E(void ()* @_ZN11array_tests4main17h235eec6d3a7779e1E, i64 %3, i8** %1)
  %5 = trunc i64 %4 to i32
  ret i32 %5
}

attributes #0 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { noinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #3 = { cold noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #4 = { cold nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #5 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #7 = { argmemonly nofree nounwind willreturn }
attributes #8 = { nofree nosync nounwind readnone willreturn }
attributes #9 = { cold noinline noreturn nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #10 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #11 = { noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #12 = { nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nonlazybind "target-cpu"="x86-64" }
attributes #15 = { noreturn }
attributes #16 = { noinline }
attributes #17 = { noinline noreturn nounwind }
attributes #18 = { nounwind }

!llvm.module.flags = !{!87, !88, !89, !90, !91}
!llvm.dbg.cu = !{!92}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<std::rt::lang_start::{closure_env#0}<()> as core::ops::function::Fn<()>>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<std::rt::lang_start::{closure_env#0}<()> as core::ops::function::Fn<()>>::{vtable_type}", file: !2, size: 384, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !14, templateParams: !23, identifier: "dee041a15dfe076460e1ead4b963607c")
!4 = !{!5, !8, !10, !11, !12, !13}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 256)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "__method5", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 320)
!14 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<()>", scope: !15, file: !2, size: 64, align: 64, elements: !18, templateParams: !23, identifier: "eb9421142c7534b89a47eb687fc5227b")
!15 = !DINamespace(name: "lang_start", scope: !16)
!16 = !DINamespace(name: "rt", scope: !17)
!17 = !DINamespace(name: "std", scope: null)
!18 = !{!19}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !14, file: !2, baseType: !20, size: 64, align: 64)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn()", baseType: !21, size: 64, align: 64, dwarfAddressSpace: 0)
!21 = !DISubroutineType(types: !22)
!22 = !{null}
!23 = !{}
!24 = !DIGlobalVariableExpression(var: !25, expr: !DIExpression())
!25 = distinct !DIGlobalVariable(name: "<&i32 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !26, isLocal: true, isDefinition: true)
!26 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&i32 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !27, vtableHolder: !32, templateParams: !23, identifier: "e41da7ed75ed4863791811c5b4f5fafa")
!27 = !{!28, !29, !30, !31}
!28 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !26, file: !2, baseType: !6, size: 64, align: 64)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !26, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !26, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !26, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!32 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&i32", baseType: !33, size: 64, align: 64, dwarfAddressSpace: 0)
!33 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!34 = !DIGlobalVariableExpression(var: !35, expr: !DIExpression())
!35 = distinct !DIGlobalVariable(name: "<&bool as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !36, isLocal: true, isDefinition: true)
!36 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&bool as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !37, vtableHolder: !42, templateParams: !23, identifier: "c292ae440f57580f46ad908312cda78")
!37 = !{!38, !39, !40, !41}
!38 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !36, file: !2, baseType: !6, size: 64, align: 64)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !36, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !36, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !36, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bool", baseType: !43, size: 64, align: 64, dwarfAddressSpace: 0)
!43 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!44 = !DIGlobalVariableExpression(var: !45, expr: !DIExpression())
!45 = distinct !DIGlobalVariable(name: "<&u32 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !46, isLocal: true, isDefinition: true)
!46 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u32 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !47, vtableHolder: !52, templateParams: !23, identifier: "56f3ae9cd35b4a6d41c32c0359fd0048")
!47 = !{!48, !49, !50, !51}
!48 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !46, file: !2, baseType: !6, size: 64, align: 64)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !46, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !46, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !46, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u32", baseType: !53, size: 64, align: 64, dwarfAddressSpace: 0)
!53 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!54 = !DIGlobalVariableExpression(var: !55, expr: !DIExpression())
!55 = distinct !DIGlobalVariable(name: "<&[i32; 2] as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !56, isLocal: true, isDefinition: true)
!56 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&[i32; 2] as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !57, vtableHolder: !62, templateParams: !23, identifier: "3e3d83e28f91d1b4f96f2aefb7dae10")
!57 = !{!58, !59, !60, !61}
!58 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !56, file: !2, baseType: !6, size: 64, align: 64)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !56, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !56, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !56, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!62 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[i32; 2]", baseType: !63, size: 64, align: 64, dwarfAddressSpace: 0)
!63 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 64, align: 32, elements: !64)
!64 = !{!65}
!65 = !DISubrange(count: 2, lowerBound: 0)
!66 = !DIGlobalVariableExpression(var: !67, expr: !DIExpression())
!67 = distinct !DIGlobalVariable(name: "SOME_INTS", scope: !68, file: !70, line: 22, type: !71, isLocal: false, isDefinition: true, align: 32)
!68 = !DINamespace(name: "test_arrays", scope: !69)
!69 = !DINamespace(name: "array_tests", scope: null)
!70 = !DIFile(filename: "src/test_arrays.rs", directory: "/home/calvin/git/c2rust/tests/arrays", checksumkind: CSK_MD5, checksum: "d9a909f94dbfde5953d7cce3c9f9e83e")
!71 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 128, align: 32, elements: !72)
!72 = !{!73}
!73 = !DISubrange(count: 4, lowerBound: 0)
!74 = !DIGlobalVariableExpression(var: !75, expr: !DIExpression())
!75 = distinct !DIGlobalVariable(name: "rust_SOME_INTS", scope: !68, file: !70, line: 24, type: !71, isLocal: false, isDefinition: true, align: 32)
!76 = !DIGlobalVariableExpression(var: !77, expr: !DIExpression())
!77 = distinct !DIGlobalVariable(name: "rust_simple", linkageName: "_ZN11array_tests6arrays11rust_simple17hdaa33264b2630333E", scope: !78, file: !79, line: 17, type: !80, isLocal: true, isDefinition: true, align: 8)
!78 = !DINamespace(name: "arrays", scope: !69)
!79 = !DIFile(filename: "src/arrays.rs", directory: "/home/calvin/git/c2rust/tests/arrays", checksumkind: CSK_MD5, checksum: "c3638297c2a6eedad2307cb809a8b356")
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !81, size: 72, align: 8, elements: !82)
!81 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!82 = !{!83}
!83 = !DISubrange(count: 9, lowerBound: 0)
!84 = !DIGlobalVariableExpression(var: !85, expr: !DIExpression())
!85 = distinct !DIGlobalVariable(name: "rust_foo", linkageName: "_ZN11array_tests6arrays8rust_foo17h5210be68efd147e1E", scope: !78, file: !79, line: 20, type: !86, isLocal: true, isDefinition: true, align: 64)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut i8", baseType: !81, size: 64, align: 64, dwarfAddressSpace: 0)
!87 = !{i32 7, !"PIC Level", i32 2}
!88 = !{i32 7, !"PIE Level", i32 2}
!89 = !{i32 2, !"RtLibUseGOT", i32 1}
!90 = !{i32 2, !"Dwarf Version", i32 4}
!91 = !{i32 2, !"Debug Info Version", i32 3}
!92 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !93, producer: "clang LLVM (rustc version 1.65.0-nightly (d394408fb 2022-08-07))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !94, globals: !193)
!93 = !DIFile(filename: "src/lib.rs/@/4bpjdg3tq3cdsoeo", directory: "/home/calvin/git/c2rust/tests/arrays")
!94 = !{!95, !165, !175, !181, !187}
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ValidAlignEnum64", scope: !96, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagEnumClass, elements: !100)
!96 = !DINamespace(name: "valid_align", scope: !97)
!97 = !DINamespace(name: "mem", scope: !98)
!98 = !DINamespace(name: "core", scope: null)
!99 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!100 = !{!101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164}
!101 = !DIEnumerator(name: "_Align1Shl0", value: 1, isUnsigned: true)
!102 = !DIEnumerator(name: "_Align1Shl1", value: 2, isUnsigned: true)
!103 = !DIEnumerator(name: "_Align1Shl2", value: 4, isUnsigned: true)
!104 = !DIEnumerator(name: "_Align1Shl3", value: 8, isUnsigned: true)
!105 = !DIEnumerator(name: "_Align1Shl4", value: 16, isUnsigned: true)
!106 = !DIEnumerator(name: "_Align1Shl5", value: 32, isUnsigned: true)
!107 = !DIEnumerator(name: "_Align1Shl6", value: 64, isUnsigned: true)
!108 = !DIEnumerator(name: "_Align1Shl7", value: 128, isUnsigned: true)
!109 = !DIEnumerator(name: "_Align1Shl8", value: 256, isUnsigned: true)
!110 = !DIEnumerator(name: "_Align1Shl9", value: 512, isUnsigned: true)
!111 = !DIEnumerator(name: "_Align1Shl10", value: 1024, isUnsigned: true)
!112 = !DIEnumerator(name: "_Align1Shl11", value: 2048, isUnsigned: true)
!113 = !DIEnumerator(name: "_Align1Shl12", value: 4096, isUnsigned: true)
!114 = !DIEnumerator(name: "_Align1Shl13", value: 8192, isUnsigned: true)
!115 = !DIEnumerator(name: "_Align1Shl14", value: 16384, isUnsigned: true)
!116 = !DIEnumerator(name: "_Align1Shl15", value: 32768, isUnsigned: true)
!117 = !DIEnumerator(name: "_Align1Shl16", value: 65536, isUnsigned: true)
!118 = !DIEnumerator(name: "_Align1Shl17", value: 131072, isUnsigned: true)
!119 = !DIEnumerator(name: "_Align1Shl18", value: 262144, isUnsigned: true)
!120 = !DIEnumerator(name: "_Align1Shl19", value: 524288, isUnsigned: true)
!121 = !DIEnumerator(name: "_Align1Shl20", value: 1048576, isUnsigned: true)
!122 = !DIEnumerator(name: "_Align1Shl21", value: 2097152, isUnsigned: true)
!123 = !DIEnumerator(name: "_Align1Shl22", value: 4194304, isUnsigned: true)
!124 = !DIEnumerator(name: "_Align1Shl23", value: 8388608, isUnsigned: true)
!125 = !DIEnumerator(name: "_Align1Shl24", value: 16777216, isUnsigned: true)
!126 = !DIEnumerator(name: "_Align1Shl25", value: 33554432, isUnsigned: true)
!127 = !DIEnumerator(name: "_Align1Shl26", value: 67108864, isUnsigned: true)
!128 = !DIEnumerator(name: "_Align1Shl27", value: 134217728, isUnsigned: true)
!129 = !DIEnumerator(name: "_Align1Shl28", value: 268435456, isUnsigned: true)
!130 = !DIEnumerator(name: "_Align1Shl29", value: 536870912, isUnsigned: true)
!131 = !DIEnumerator(name: "_Align1Shl30", value: 1073741824, isUnsigned: true)
!132 = !DIEnumerator(name: "_Align1Shl31", value: 2147483648, isUnsigned: true)
!133 = !DIEnumerator(name: "_Align1Shl32", value: 4294967296, isUnsigned: true)
!134 = !DIEnumerator(name: "_Align1Shl33", value: 8589934592, isUnsigned: true)
!135 = !DIEnumerator(name: "_Align1Shl34", value: 17179869184, isUnsigned: true)
!136 = !DIEnumerator(name: "_Align1Shl35", value: 34359738368, isUnsigned: true)
!137 = !DIEnumerator(name: "_Align1Shl36", value: 68719476736, isUnsigned: true)
!138 = !DIEnumerator(name: "_Align1Shl37", value: 137438953472, isUnsigned: true)
!139 = !DIEnumerator(name: "_Align1Shl38", value: 274877906944, isUnsigned: true)
!140 = !DIEnumerator(name: "_Align1Shl39", value: 549755813888, isUnsigned: true)
!141 = !DIEnumerator(name: "_Align1Shl40", value: 1099511627776, isUnsigned: true)
!142 = !DIEnumerator(name: "_Align1Shl41", value: 2199023255552, isUnsigned: true)
!143 = !DIEnumerator(name: "_Align1Shl42", value: 4398046511104, isUnsigned: true)
!144 = !DIEnumerator(name: "_Align1Shl43", value: 8796093022208, isUnsigned: true)
!145 = !DIEnumerator(name: "_Align1Shl44", value: 17592186044416, isUnsigned: true)
!146 = !DIEnumerator(name: "_Align1Shl45", value: 35184372088832, isUnsigned: true)
!147 = !DIEnumerator(name: "_Align1Shl46", value: 70368744177664, isUnsigned: true)
!148 = !DIEnumerator(name: "_Align1Shl47", value: 140737488355328, isUnsigned: true)
!149 = !DIEnumerator(name: "_Align1Shl48", value: 281474976710656, isUnsigned: true)
!150 = !DIEnumerator(name: "_Align1Shl49", value: 562949953421312, isUnsigned: true)
!151 = !DIEnumerator(name: "_Align1Shl50", value: 1125899906842624, isUnsigned: true)
!152 = !DIEnumerator(name: "_Align1Shl51", value: 2251799813685248, isUnsigned: true)
!153 = !DIEnumerator(name: "_Align1Shl52", value: 4503599627370496, isUnsigned: true)
!154 = !DIEnumerator(name: "_Align1Shl53", value: 9007199254740992, isUnsigned: true)
!155 = !DIEnumerator(name: "_Align1Shl54", value: 18014398509481984, isUnsigned: true)
!156 = !DIEnumerator(name: "_Align1Shl55", value: 36028797018963968, isUnsigned: true)
!157 = !DIEnumerator(name: "_Align1Shl56", value: 72057594037927936, isUnsigned: true)
!158 = !DIEnumerator(name: "_Align1Shl57", value: 144115188075855872, isUnsigned: true)
!159 = !DIEnumerator(name: "_Align1Shl58", value: 288230376151711744, isUnsigned: true)
!160 = !DIEnumerator(name: "_Align1Shl59", value: 576460752303423488, isUnsigned: true)
!161 = !DIEnumerator(name: "_Align1Shl60", value: 1152921504606846976, isUnsigned: true)
!162 = !DIEnumerator(name: "_Align1Shl61", value: 2305843009213693952, isUnsigned: true)
!163 = !DIEnumerator(name: "_Align1Shl62", value: 4611686018427387904, isUnsigned: true)
!164 = !DIEnumerator(name: "_Align1Shl63", value: 9223372036854775808, isUnsigned: true)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !166, file: !2, baseType: !169, size: 8, align: 8, flags: DIFlagEnumClass, elements: !170)
!166 = !DINamespace(name: "v1", scope: !167)
!167 = !DINamespace(name: "rt", scope: !168)
!168 = !DINamespace(name: "fmt", scope: !98)
!169 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!170 = !{!171, !172, !173, !174}
!171 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !176, file: !2, baseType: !81, size: 8, align: 8, flags: DIFlagEnumClass, elements: !177)
!176 = !DINamespace(name: "cmp", scope: !98)
!177 = !{!178, !179, !180}
!178 = !DIEnumerator(name: "Less", value: 255)
!179 = !DIEnumerator(name: "Equal", value: 0)
!180 = !DIEnumerator(name: "Greater", value: 1)
!181 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !182, file: !2, baseType: !169, size: 8, align: 8, flags: DIFlagEnumClass, elements: !183)
!182 = !DINamespace(name: "panicking", scope: !98)
!183 = !{!184, !185, !186}
!184 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!185 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!186 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!187 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AllocInit", scope: !188, file: !2, baseType: !169, size: 8, align: 8, flags: DIFlagEnumClass, elements: !190)
!188 = !DINamespace(name: "raw_vec", scope: !189)
!189 = !DINamespace(name: "alloc", scope: null)
!190 = !{!191, !192}
!191 = !DIEnumerator(name: "Uninitialized", value: 0, isUnsigned: true)
!192 = !DIEnumerator(name: "Zeroed", value: 1, isUnsigned: true)
!193 = !{!0, !24, !34, !44, !54, !66, !74, !76, !84}
!194 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h39c8e5f5acb73393E", scope: !196, file: !195, line: 770, type: !199, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !214)
!195 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "856acc92efd7925b83dd1e3c577ddbdc")
!196 = !DINamespace(name: "{impl#16}", scope: !197)
!197 = !DINamespace(name: "non_null", scope: !198)
!198 = !DINamespace(name: "ptr", scope: !98)
!199 = !DISubroutineType(types: !200)
!200 = !{!201, !207}
!201 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !197, file: !2, size: 64, align: 64, elements: !202, templateParams: !205, identifier: "3160283ea80cecf6149fff38a2e996de")
!202 = !{!203}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !201, file: !2, baseType: !204, size: 64, align: 64)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !169, size: 64, align: 64, dwarfAddressSpace: 0)
!205 = !{!206}
!206 = !DITemplateTypeParameter(name: "T", type: !169)
!207 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<u8>", scope: !208, file: !2, size: 64, align: 64, elements: !209, templateParams: !205, identifier: "7e72c5db004520f6d0779c7d4ace2142")
!208 = !DINamespace(name: "unique", scope: !198)
!209 = !{!210, !211}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !207, file: !2, baseType: !201, size: 64, align: 64)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !207, file: !2, baseType: !212, align: 8)
!212 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<u8>", scope: !213, file: !2, align: 8, elements: !23, templateParams: !205, identifier: "e338a8151f1037c76eadd10ab3c53972")
!213 = !DINamespace(name: "marker", scope: !98)
!214 = !{!215}
!215 = !DILocalVariable(name: "unique", arg: 1, scope: !194, file: !195, line: 770, type: !207)
!216 = !DILocation(line: 770, column: 13, scope: !194)
!217 = !DILocation(line: 773, column: 41, scope: !194)
!218 = !DILocalVariable(name: "self", scope: !219, file: !195, line: 773, type: !207, align: 8)
!219 = !DILexicalBlockFile(scope: !220, file: !195, discriminator: 0)
!220 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hc26057cf0411087bE", scope: !207, file: !221, line: 103, type: !222, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !225)
!221 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/unique.rs", directory: "", checksumkind: CSK_MD5, checksum: "acdefab5f14df6e5aef1141fd6b768c9")
!222 = !DISubroutineType(types: !223)
!223 = !{!224, !207}
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !169, size: 64, align: 64, dwarfAddressSpace: 0)
!225 = !{!218}
!226 = !DILocation(line: 773, column: 41, scope: !219, inlinedAt: !217)
!227 = !DILocalVariable(name: "self", scope: !228, file: !195, line: 773, type: !201, align: 8)
!228 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h0a8b74df506a48abE", scope: !201, file: !195, line: 330, type: !229, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !231)
!229 = !DISubroutineType(types: !230)
!230 = !{!224, !201}
!231 = !{!227}
!232 = !DILocation(line: 773, column: 41, scope: !228, inlinedAt: !233)
!233 = !DILocation(line: 104, column: 9, scope: !220, inlinedAt: !217)
!234 = !DILocalVariable(name: "ptr", scope: !235, file: !195, line: 773, type: !224, align: 8)
!235 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hc66fe1711b96fc95E", scope: !201, file: !195, line: 196, type: !236, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !238)
!236 = !DISubroutineType(types: !237)
!237 = !{!201, !224}
!238 = !{!234}
!239 = !DILocation(line: 773, column: 18, scope: !235, inlinedAt: !240)
!240 = !DILocation(line: 773, column: 18, scope: !194)
!241 = !DILocation(line: 774, column: 6, scope: !194)
!242 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hc4cd94cd5fec9894E", scope: !244, file: !243, line: 116, type: !246, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !272)
!243 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/collections/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "9cfb71cd3b32f7eb830f45a756b00675")
!244 = !DINamespace(name: "{impl#1}", scope: !245)
!245 = !DINamespace(name: "collections", scope: !189)
!246 = !DISubroutineType(types: !247)
!247 = !{!248, !251}
!248 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveError", scope: !245, file: !2, size: 128, align: 64, elements: !249, templateParams: !23, identifier: "9329beb58cfce2a468bff9d53d352901")
!249 = !{!250}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !248, file: !2, baseType: !251, size: 128, align: 64)
!251 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveErrorKind", scope: !245, file: !2, size: 128, align: 64, elements: !252, templateParams: !23, identifier: "b80f03a2018170445eea4dcb9e8ba251")
!252 = !{!253}
!253 = !DICompositeType(tag: DW_TAG_variant_part, scope: !251, file: !2, size: 128, align: 64, elements: !254, templateParams: !23, identifier: "dd437972ee979c0cb5a8f1e81729b7e4", discriminator: !271)
!254 = !{!255, !257}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "CapacityOverflow", scope: !253, file: !2, baseType: !256, size: 128, align: 64, extraData: i64 0)
!256 = !DICompositeType(tag: DW_TAG_structure_type, name: "CapacityOverflow", scope: !251, file: !2, size: 128, align: 64, elements: !23, identifier: "9b997f4b8909a73a8576324b89f9b258")
!257 = !DIDerivedType(tag: DW_TAG_member, name: "AllocError", scope: !253, file: !2, baseType: !258, size: 128, align: 64)
!258 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !251, file: !2, size: 128, align: 64, elements: !259, templateParams: !23, identifier: "43ad075de287371ebe4e53de3e5ecf3d")
!259 = !{!260, !270}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !258, file: !2, baseType: !261, size: 128, align: 64)
!261 = !DICompositeType(tag: DW_TAG_structure_type, name: "Layout", scope: !262, file: !2, size: 128, align: 64, elements: !264, templateParams: !23, identifier: "6727bf1318ffccbbbfc5e6dc0dfc8722")
!262 = !DINamespace(name: "layout", scope: !263)
!263 = !DINamespace(name: "alloc", scope: !98)
!264 = !{!265, !266}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !261, file: !2, baseType: !9, size: 64, align: 64)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !261, file: !2, baseType: !267, size: 64, align: 64, offset: 64)
!267 = !DICompositeType(tag: DW_TAG_structure_type, name: "ValidAlign", scope: !96, file: !2, size: 64, align: 64, elements: !268, templateParams: !23, identifier: "e392ecbcb8f7df9e6beb2b20857b4b5a")
!268 = !{!269}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !267, file: !2, baseType: !95, size: 64, align: 64)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "non_exhaustive", scope: !258, file: !2, baseType: !7, align: 8)
!271 = !DIDerivedType(tag: DW_TAG_member, scope: !251, file: !2, baseType: !99, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!272 = !{!273}
!273 = !DILocalVariable(name: "kind", arg: 1, scope: !242, file: !243, line: 116, type: !251)
!274 = !DILocation(line: 116, column: 13, scope: !242)
!275 = !DILocation(line: 117, column: 9, scope: !242)
!276 = !DILocation(line: 118, column: 6, scope: !242)
!277 = !{i64 0, i64 -9223372036854775807}
!278 = distinct !DISubprogram(name: "__rust_begin_short_backtrace<fn(), ()>", linkageName: "_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h1410d71afaa7f375E", scope: !280, file: !279, line: 118, type: !282, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !288, retainedNodes: !284)
!279 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/sys_common/backtrace.rs", directory: "", checksumkind: CSK_MD5, checksum: "f7c76d4902bfcea1d96ffad8fbde919d")
!280 = !DINamespace(name: "backtrace", scope: !281)
!281 = !DINamespace(name: "sys_common", scope: !17)
!282 = !DISubroutineType(types: !283)
!283 = !{null, !20}
!284 = !{!285, !286}
!285 = !DILocalVariable(name: "f", arg: 1, scope: !278, file: !279, line: 118, type: !20)
!286 = !DILocalVariable(name: "result", scope: !287, file: !279, line: 122, type: !7, align: 1)
!287 = distinct !DILexicalBlock(scope: !278, file: !279, line: 122, column: 5)
!288 = !{!289, !290}
!289 = !DITemplateTypeParameter(name: "F", type: !20)
!290 = !DITemplateTypeParameter(name: "T", type: !7)
!291 = !DILocation(line: 122, column: 9, scope: !287)
!292 = !DILocation(line: 118, column: 43, scope: !278)
!293 = !DILocalVariable(name: "dummy", scope: !294, file: !279, line: 125, type: !7, align: 1)
!294 = !DILexicalBlockFile(scope: !295, file: !279, discriminator: 0)
!295 = distinct !DISubprogram(name: "black_box<()>", linkageName: "_ZN4core4hint9black_box17ha79da88614e2685aE", scope: !297, file: !296, line: 225, type: !298, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !301, retainedNodes: !300)
!296 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/hint.rs", directory: "", checksumkind: CSK_MD5, checksum: "b50bd4586a98539d3cdc821cfaa5e2e7")
!297 = !DINamespace(name: "hint", scope: !98)
!298 = !DISubroutineType(types: !299)
!299 = !{null, !7}
!300 = !{!293}
!301 = !{!290}
!302 = !DILocation(line: 125, column: 5, scope: !294, inlinedAt: !303)
!303 = !DILocation(line: 125, column: 5, scope: !287)
!304 = !DILocation(line: 122, column: 18, scope: !278)
!305 = !{i32 3365437}
!306 = !DILocation(line: 128, column: 2, scope: !278)
!307 = !DILocation(line: 128, column: 1, scope: !278)
!308 = !DILocation(line: 118, column: 1, scope: !278)
!309 = distinct !DISubprogram(name: "lang_start<()>", linkageName: "_ZN3std2rt10lang_start17h960a6574b95da718E", scope: !16, file: !310, line: 139, type: !311, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !301, retainedNodes: !315)
!310 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/rt.rs", directory: "", checksumkind: CSK_MD5, checksum: "53ba40c54b421907f2e3ab22fb96d5b4")
!311 = !DISubroutineType(types: !312)
!312 = !{!313, !20, !313, !314}
!313 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const *const u8", baseType: !204, size: 64, align: 64, dwarfAddressSpace: 0)
!315 = !{!316, !317, !318, !319}
!316 = !DILocalVariable(name: "main", arg: 1, scope: !309, file: !310, line: 140, type: !20)
!317 = !DILocalVariable(name: "argc", arg: 2, scope: !309, file: !310, line: 141, type: !313)
!318 = !DILocalVariable(name: "argv", arg: 3, scope: !309, file: !310, line: 142, type: !314)
!319 = !DILocalVariable(name: "v", scope: !320, file: !310, line: 144, type: !313, align: 8)
!320 = distinct !DILexicalBlock(scope: !309, file: !310, line: 144, column: 5)
!321 = !DILocation(line: 140, column: 5, scope: !309)
!322 = !DILocation(line: 141, column: 5, scope: !309)
!323 = !DILocation(line: 142, column: 5, scope: !309)
!324 = !DILocation(line: 145, column: 10, scope: !309)
!325 = !DILocation(line: 145, column: 9, scope: !309)
!326 = !DILocation(line: 144, column: 17, scope: !309)
!327 = !DILocation(line: 144, column: 12, scope: !309)
!328 = !DILocation(line: 144, column: 12, scope: !320)
!329 = !DILocation(line: 150, column: 2, scope: !309)
!330 = distinct !DISubprogram(name: "{closure#0}<()>", linkageName: "_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h1dbdd53c3505487dE", scope: !15, file: !310, line: 145, type: !331, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !301, retainedNodes: !334)
!331 = !DISubroutineType(types: !332)
!332 = !{!33, !333}
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::rt::lang_start::{closure_env#0}<()>", baseType: !14, size: 64, align: 64, dwarfAddressSpace: 0)
!334 = !{!335}
!335 = !DILocalVariable(name: "main", scope: !330, file: !310, line: 140, type: !20, align: 8)
!336 = !{i64 8}
!337 = !DILocation(line: 140, column: 5, scope: !330)
!338 = !DILocalVariable(name: "self", scope: !339, file: !310, line: 145, type: !342, align: 1)
!339 = !DILexicalBlockFile(scope: !340, file: !310, discriminator: 0)
!340 = distinct !DISubprogram(name: "to_i32", linkageName: "_ZN3std7process8ExitCode6to_i3217h678ad2c936dac390E", scope: !342, file: !341, line: 1808, type: !353, scopeLine: 1808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !355)
!341 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/process.rs", directory: "", checksumkind: CSK_MD5, checksum: "78747cd94138b7f073ffd16b64787cb4")
!342 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExitCode", scope: !343, file: !2, size: 8, align: 8, elements: !344, templateParams: !23, identifier: "65270507d071436c1dbdf6fde69e5261")
!343 = !DINamespace(name: "process", scope: !17)
!344 = !{!345}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !342, file: !2, baseType: !346, size: 8, align: 8)
!346 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExitCode", scope: !347, file: !2, size: 8, align: 8, elements: !351, templateParams: !23, identifier: "faca173619846f0e95e842844eb5af74")
!347 = !DINamespace(name: "process_common", scope: !348)
!348 = !DINamespace(name: "process", scope: !349)
!349 = !DINamespace(name: "unix", scope: !350)
!350 = !DINamespace(name: "sys", scope: !17)
!351 = !{!352}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !346, file: !2, baseType: !169, size: 8, align: 8)
!353 = !DISubroutineType(types: !354)
!354 = !{!33, !342}
!355 = !{!338}
!356 = !DILocation(line: 145, column: 18, scope: !339, inlinedAt: !357)
!357 = !DILocation(line: 145, column: 18, scope: !330)
!358 = !DILocation(line: 145, column: 77, scope: !330)
!359 = !DILocalVariable(name: "self", scope: !360, file: !310, line: 145, type: !365, align: 8)
!360 = !DILexicalBlockFile(scope: !361, file: !310, discriminator: 0)
!361 = distinct !DISubprogram(name: "as_i32", linkageName: "_ZN3std3sys4unix7process14process_common8ExitCode6as_i3217hf583af5b161ca737E", scope: !346, file: !362, line: 485, type: !363, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !366)
!362 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/sys/unix/process/process_common.rs", directory: "", checksumkind: CSK_MD5, checksum: "0172c472c69d772c784713c132680582")
!363 = !DISubroutineType(types: !364)
!364 = !{!33, !365}
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::sys::unix::process::process_common::ExitCode", baseType: !346, size: 64, align: 64, dwarfAddressSpace: 0)
!366 = !{!359}
!367 = !DILocation(line: 145, column: 18, scope: !360, inlinedAt: !368)
!368 = !DILocation(line: 1809, column: 9, scope: !340, inlinedAt: !357)
!369 = !DILocation(line: 145, column: 17, scope: !330)
!370 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN41_$LT$bool$u20$as$u20$core..fmt..Debug$GT$3fmt17h5097fa134885aec6E", scope: !372, file: !371, line: 2390, type: !373, scopeLine: 2390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !426)
!371 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "18dcc19de419985ae78d2bd8ed07e5dc")
!372 = !DINamespace(name: "{impl#14}", scope: !168)
!373 = !DISubroutineType(types: !374)
!374 = !{!375, !42, !392}
!375 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !376, file: !2, size: 8, align: 8, elements: !377, templateParams: !23, identifier: "d239d58a8e95223cd52e3ad2c36d40d7")
!376 = !DINamespace(name: "result", scope: !98)
!377 = !{!378}
!378 = !DICompositeType(tag: DW_TAG_variant_part, scope: !375, file: !2, size: 8, align: 8, elements: !379, templateParams: !23, identifier: "1fa2591b965a13cd50e38802b1727ca", discriminator: !391)
!379 = !{!380, !387}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !378, file: !2, baseType: !381, size: 8, align: 8, extraData: i64 0)
!381 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !375, file: !2, size: 8, align: 8, elements: !382, templateParams: !384, identifier: "cea751326735c343faf647063a65ad14")
!382 = !{!383}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !381, file: !2, baseType: !7, align: 8, offset: 8)
!384 = !{!290, !385}
!385 = !DITemplateTypeParameter(name: "E", type: !386)
!386 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !168, file: !2, align: 8, elements: !23, identifier: "87e319c059f1d372f32b0a49f33ec3cc")
!387 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !378, file: !2, baseType: !388, size: 8, align: 8, extraData: i64 1)
!388 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !375, file: !2, size: 8, align: 8, elements: !389, templateParams: !384, identifier: "6c6eb84ed910506586b60ba90dbaa2c")
!389 = !{!390}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !388, file: !2, baseType: !386, align: 8, offset: 8)
!391 = !DIDerivedType(tag: DW_TAG_member, scope: !375, file: !2, baseType: !169, size: 8, align: 8, flags: DIFlagArtificial)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !393, size: 64, align: 64, dwarfAddressSpace: 0)
!393 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !168, file: !2, size: 512, align: 64, elements: !394, templateParams: !23, identifier: "6e9ffaec9b89ebb810272bb66e7b2042")
!394 = !{!395, !396, !398, !399, !414, !415}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !393, file: !2, baseType: !53, size: 32, align: 32, offset: 384)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !393, file: !2, baseType: !397, size: 32, align: 32, offset: 416)
!397 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !393, file: !2, baseType: !165, size: 8, align: 8, offset: 448)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !393, file: !2, baseType: !400, size: 128, align: 64)
!400 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !401, file: !2, size: 128, align: 64, elements: !402, templateParams: !23, identifier: "5190463b0687da274ab794ccaf9d1fd8")
!401 = !DINamespace(name: "option", scope: !98)
!402 = !{!403}
!403 = !DICompositeType(tag: DW_TAG_variant_part, scope: !400, file: !2, size: 128, align: 64, elements: !404, templateParams: !23, identifier: "db59d501e5f76645f4edce4cdbfeb328", discriminator: !413)
!404 = !{!405, !409}
!405 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !403, file: !2, baseType: !406, size: 128, align: 64, extraData: i64 0)
!406 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !400, file: !2, size: 128, align: 64, elements: !23, templateParams: !407, identifier: "a1c5f3dead8f24ccdada7bc2feedd145")
!407 = !{!408}
!408 = !DITemplateTypeParameter(name: "T", type: !9)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !403, file: !2, baseType: !410, size: 128, align: 64, extraData: i64 1)
!410 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !400, file: !2, size: 128, align: 64, elements: !411, templateParams: !407, identifier: "3ad875242c049b8143d7577f4eb10d1a")
!411 = !{!412}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !410, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!413 = !DIDerivedType(tag: DW_TAG_member, scope: !400, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagArtificial)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !393, file: !2, baseType: !400, size: 128, align: 64, offset: 128)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !393, file: !2, baseType: !416, size: 128, align: 64, offset: 256)
!416 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !417, templateParams: !23, identifier: "3d4f80cd5361aaff4f795dd09efb8db1")
!417 = !{!418, !421}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !416, file: !2, baseType: !419, size: 64, align: 64)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64, align: 64, dwarfAddressSpace: 0)
!420 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !23, identifier: "abb712b259efc5e79bb67900edf24920")
!421 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !416, file: !2, baseType: !422, size: 64, align: 64, offset: 64)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !423, size: 64, align: 64, dwarfAddressSpace: 0)
!423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 64, elements: !424)
!424 = !{!425}
!425 = !DISubrange(count: 3, lowerBound: 0)
!426 = !{!427, !428}
!427 = !DILocalVariable(name: "self", arg: 1, scope: !370, file: !371, line: 2390, type: !42)
!428 = !DILocalVariable(name: "f", arg: 2, scope: !370, file: !371, line: 2390, type: !392)
!429 = !DILocation(line: 2390, column: 12, scope: !370)
!430 = !DILocation(line: 2390, column: 19, scope: !370)
!431 = !DILocation(line: 2391, column: 9, scope: !370)
!432 = !DILocation(line: 2392, column: 6, scope: !370)
!433 = distinct !DISubprogram(name: "fmt<u32>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h67c8af7d0ce2e79aE", scope: !434, file: !371, line: 2361, type: !435, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !441, retainedNodes: !438)
!434 = !DINamespace(name: "{impl#59}", scope: !168)
!435 = !DISubroutineType(types: !436)
!436 = !{!375, !437, !392}
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&u32", baseType: !52, size: 64, align: 64, dwarfAddressSpace: 0)
!438 = !{!439, !440}
!439 = !DILocalVariable(name: "self", arg: 1, scope: !433, file: !371, line: 2361, type: !437)
!440 = !DILocalVariable(name: "f", arg: 2, scope: !433, file: !371, line: 2361, type: !392)
!441 = !{!442}
!442 = !DITemplateTypeParameter(name: "T", type: !53)
!443 = !DILocation(line: 2361, column: 20, scope: !433)
!444 = !DILocation(line: 2361, column: 27, scope: !433)
!445 = !DILocation(line: 2361, column: 71, scope: !433)
!446 = !{i64 4}
!447 = !DILocation(line: 2361, column: 62, scope: !433)
!448 = !DILocation(line: 2361, column: 84, scope: !433)
!449 = distinct !DISubprogram(name: "fmt<[i32]>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7f6552a0aa4df737E", scope: !434, file: !371, line: 2361, type: !450, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !458)
!450 = !DISubroutineType(types: !451)
!451 = !{!375, !452, !392}
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&[i32]", baseType: !453, size: 64, align: 64, dwarfAddressSpace: 0)
!453 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[i32]", file: !2, size: 128, align: 64, elements: !454, templateParams: !23, identifier: "8022034f3dbe6b09f9f0a7f6cd6bb480")
!454 = !{!455, !457}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !453, file: !2, baseType: !456, size: 64, align: 64)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64, align: 64, dwarfAddressSpace: 0)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !453, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!458 = !{!459, !460}
!459 = !DILocalVariable(name: "self", arg: 1, scope: !449, file: !371, line: 2361, type: !452)
!460 = !DILocalVariable(name: "f", arg: 2, scope: !449, file: !371, line: 2361, type: !392)
!461 = !{!462}
!462 = !DITemplateTypeParameter(name: "T", type: !33)
!463 = !DILocation(line: 2361, column: 20, scope: !449)
!464 = !DILocation(line: 2361, column: 27, scope: !449)
!465 = !DILocation(line: 2361, column: 71, scope: !449)
!466 = !DILocation(line: 2361, column: 62, scope: !449)
!467 = !DILocation(line: 2361, column: 84, scope: !449)
!468 = distinct !DISubprogram(name: "fmt<[i32; 2]>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8162c2433ccb8bc2E", scope: !434, file: !371, line: 2361, type: !469, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !475, retainedNodes: !472)
!469 = !DISubroutineType(types: !470)
!470 = !{!375, !471, !392}
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&[i32; 2]", baseType: !62, size: 64, align: 64, dwarfAddressSpace: 0)
!472 = !{!473, !474}
!473 = !DILocalVariable(name: "self", arg: 1, scope: !468, file: !371, line: 2361, type: !471)
!474 = !DILocalVariable(name: "f", arg: 2, scope: !468, file: !371, line: 2361, type: !392)
!475 = !{!476}
!476 = !DITemplateTypeParameter(name: "T", type: !63)
!477 = !DILocation(line: 2361, column: 20, scope: !468)
!478 = !DILocation(line: 2361, column: 27, scope: !468)
!479 = !DILocation(line: 2361, column: 71, scope: !468)
!480 = !DILocation(line: 2361, column: 62, scope: !468)
!481 = !DILocation(line: 2361, column: 84, scope: !468)
!482 = distinct !DISubprogram(name: "fmt<i32>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9fdbb99fdc519e06E", scope: !434, file: !371, line: 2361, type: !483, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !486)
!483 = !DISubroutineType(types: !484)
!484 = !{!375, !485, !392}
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&i32", baseType: !32, size: 64, align: 64, dwarfAddressSpace: 0)
!486 = !{!487, !488}
!487 = !DILocalVariable(name: "self", arg: 1, scope: !482, file: !371, line: 2361, type: !485)
!488 = !DILocalVariable(name: "f", arg: 2, scope: !482, file: !371, line: 2361, type: !392)
!489 = !DILocation(line: 2361, column: 20, scope: !482)
!490 = !DILocation(line: 2361, column: 27, scope: !482)
!491 = !DILocation(line: 2361, column: 71, scope: !482)
!492 = !DILocation(line: 2361, column: 62, scope: !482)
!493 = !DILocation(line: 2361, column: 84, scope: !482)
!494 = distinct !DISubprogram(name: "fmt<bool>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hce03d97be8db13b2E", scope: !434, file: !371, line: 2361, type: !495, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !501, retainedNodes: !498)
!495 = !DISubroutineType(types: !496)
!496 = !{!375, !497, !392}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&bool", baseType: !42, size: 64, align: 64, dwarfAddressSpace: 0)
!498 = !{!499, !500}
!499 = !DILocalVariable(name: "self", arg: 1, scope: !494, file: !371, line: 2361, type: !497)
!500 = !DILocalVariable(name: "f", arg: 2, scope: !494, file: !371, line: 2361, type: !392)
!501 = !{!502}
!502 = !DITemplateTypeParameter(name: "T", type: !43)
!503 = !DILocation(line: 2361, column: 20, scope: !494)
!504 = !DILocation(line: 2361, column: 27, scope: !494)
!505 = !DILocation(line: 2361, column: 71, scope: !494)
!506 = !{i64 1}
!507 = !DILocation(line: 2361, column: 62, scope: !494)
!508 = !DILocation(line: 2361, column: 84, scope: !494)
!509 = distinct !DISubprogram(name: "fmt<i32>", linkageName: "_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17h99d9fb204600c614E", scope: !510, file: !371, line: 2586, type: !511, scopeLine: 2586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !513)
!510 = !DINamespace(name: "{impl#26}", scope: !168)
!511 = !DISubroutineType(types: !512)
!512 = !{!375, !453, !392}
!513 = !{!514, !515}
!514 = !DILocalVariable(name: "self", arg: 1, scope: !509, file: !371, line: 2586, type: !453)
!515 = !DILocalVariable(name: "f", arg: 2, scope: !509, file: !371, line: 2586, type: !392)
!516 = !DILocation(line: 2586, column: 12, scope: !509)
!517 = !DILocation(line: 2586, column: 19, scope: !509)
!518 = !DILocation(line: 2587, column: 9, scope: !509)
!519 = !DILocation(line: 2587, column: 32, scope: !509)
!520 = !DILocalVariable(name: "self", scope: !521, file: !371, line: 2587, type: !453, align: 8)
!521 = !DILexicalBlockFile(scope: !522, file: !371, discriminator: 0)
!522 = distinct !DISubprogram(name: "iter<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hcdd1bc5f4e4a6652E", scope: !524, file: !523, line: 734, type: !526, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !541)
!523 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "7e4712ab5341970456c5be6b0829b712")
!524 = !DINamespace(name: "{impl#0}", scope: !525)
!525 = !DINamespace(name: "slice", scope: !98)
!526 = !DISubroutineType(types: !527)
!527 = !{!528, !453}
!528 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<i32>", scope: !529, file: !2, size: 128, align: 64, elements: !530, templateParams: !461, identifier: "96f846a3802ea0a0ed3707bd3e3e325d")
!529 = !DINamespace(name: "iter", scope: !525)
!530 = !{!531, !536, !537}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !528, file: !2, baseType: !532, size: 64, align: 64)
!532 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<i32>", scope: !197, file: !2, size: 64, align: 64, elements: !533, templateParams: !461, identifier: "aa602cb571ba548f8a76bb877f42f41a")
!533 = !{!534}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !532, file: !2, baseType: !535, size: 64, align: 64)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const i32", baseType: !33, size: 64, align: 64, dwarfAddressSpace: 0)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !528, file: !2, baseType: !535, size: 64, align: 64, offset: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !528, file: !2, baseType: !538, align: 8)
!538 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&i32>", scope: !213, file: !2, align: 8, elements: !23, templateParams: !539, identifier: "9ba0fcf44e40729d0e472435eb55ec0")
!539 = !{!540}
!540 = !DITemplateTypeParameter(name: "T", type: !32)
!541 = !{!520}
!542 = !DILocation(line: 2587, column: 32, scope: !521, inlinedAt: !519)
!543 = !DILocation(line: 2588, column: 6, scope: !509)
!544 = distinct !DISubprogram(name: "forward_unchecked", linkageName: "_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hcad913c0659dde8dE", scope: !546, file: !545, line: 189, type: !549, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !551)
!545 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "a5e6372fb466d62a237d46ecffb4676a")
!546 = !DINamespace(name: "{impl#37}", scope: !547)
!547 = !DINamespace(name: "range", scope: !548)
!548 = !DINamespace(name: "iter", scope: !98)
!549 = !DISubroutineType(types: !550)
!550 = !{!9, !9, !9}
!551 = !{!552, !553}
!552 = !DILocalVariable(name: "start", arg: 1, scope: !544, file: !545, line: 189, type: !9)
!553 = !DILocalVariable(name: "n", arg: 2, scope: !544, file: !545, line: 189, type: !9)
!554 = !DILocation(line: 189, column: 37, scope: !544)
!555 = !DILocation(line: 189, column: 50, scope: !544)
!556 = !DILocation(line: 191, column: 22, scope: !544)
!557 = !DILocalVariable(name: "self", scope: !558, file: !545, line: 191, type: !9, align: 8)
!558 = !DILexicalBlockFile(scope: !559, file: !545, discriminator: 0)
!559 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h248c853f68583999E", scope: !561, file: !560, line: 463, type: !549, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !563)
!560 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "510cfe98475d713af9de72a29146058c")
!561 = !DINamespace(name: "{impl#11}", scope: !562)
!562 = !DINamespace(name: "num", scope: !98)
!563 = !{!557, !564}
!564 = !DILocalVariable(name: "rhs", scope: !558, file: !545, line: 191, type: !9, align: 8)
!565 = !DILocation(line: 191, column: 22, scope: !558, inlinedAt: !556)
!566 = !DILocation(line: 191, column: 42, scope: !544)
!567 = !DILocation(line: 192, column: 10, scope: !544)
!568 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3Ord3max17h3bd0472e5607e6b1E", scope: !570, file: !569, line: 800, type: !549, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !574, retainedNodes: !571)
!569 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "381f61764ec5ac4111e955260ff27c96")
!570 = !DINamespace(name: "Ord", scope: !176)
!571 = !{!572, !573}
!572 = !DILocalVariable(name: "self", arg: 1, scope: !568, file: !569, line: 800, type: !9)
!573 = !DILocalVariable(name: "other", arg: 2, scope: !568, file: !569, line: 800, type: !9)
!574 = !{!575}
!575 = !DITemplateTypeParameter(name: "Self", type: !9)
!576 = !DILocation(line: 800, column: 12, scope: !568)
!577 = !DILocation(line: 800, column: 18, scope: !568)
!578 = !DILocation(line: 808, column: 15, scope: !568)
!579 = !{i8 -1, i8 2}
!580 = !DILocation(line: 812, column: 5, scope: !568)
!581 = !DILocation(line: 808, column: 9, scope: !568)
!582 = !{i8 0, i8 2}
!583 = !DILocation(line: 809, column: 49, scope: !568)
!584 = !DILocation(line: 810, column: 34, scope: !568)
!585 = !DILocation(line: 800, column: 5, scope: !568)
!586 = !DILocation(line: 812, column: 6, scope: !568)
!587 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h73e7147305a364e9E", scope: !588, file: !569, line: 1436, type: !590, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !593)
!588 = !DINamespace(name: "{impl#55}", scope: !589)
!589 = !DINamespace(name: "impls", scope: !176)
!590 = !DISubroutineType(types: !591)
!591 = !{!175, !592, !592}
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!593 = !{!594, !595}
!594 = !DILocalVariable(name: "self", arg: 1, scope: !587, file: !569, line: 1436, type: !592)
!595 = !DILocalVariable(name: "other", arg: 2, scope: !587, file: !569, line: 1436, type: !592)
!596 = !DILocation(line: 1436, column: 24, scope: !587)
!597 = !DILocation(line: 1436, column: 31, scope: !587)
!598 = !DILocation(line: 1439, column: 24, scope: !587)
!599 = !DILocation(line: 1439, column: 32, scope: !587)
!600 = !DILocation(line: 1440, column: 29, scope: !587)
!601 = !DILocation(line: 1440, column: 38, scope: !587)
!602 = !DILocation(line: 1439, column: 41, scope: !587)
!603 = !DILocation(line: 1439, column: 21, scope: !587)
!604 = !DILocation(line: 1442, column: 18, scope: !587)
!605 = !DILocation(line: 1441, column: 28, scope: !587)
!606 = !DILocation(line: 1440, column: 26, scope: !587)
!607 = !DILocation(line: 1440, column: 47, scope: !587)
!608 = distinct !DISubprogram(name: "lt", linkageName: "_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hbeede2e4dd026a93E", scope: !609, file: !569, line: 1423, type: !610, scopeLine: 1423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !612)
!609 = !DINamespace(name: "{impl#54}", scope: !589)
!610 = !DISubroutineType(types: !611)
!611 = !{!43, !592, !592}
!612 = !{!613, !614}
!613 = !DILocalVariable(name: "self", arg: 1, scope: !608, file: !569, line: 1423, type: !592)
!614 = !DILocalVariable(name: "other", arg: 2, scope: !608, file: !569, line: 1423, type: !592)
!615 = !DILocation(line: 1423, column: 23, scope: !608)
!616 = !DILocation(line: 1423, column: 30, scope: !608)
!617 = !DILocation(line: 1423, column: 52, scope: !608)
!618 = !DILocation(line: 1423, column: 62, scope: !608)
!619 = !DILocation(line: 1423, column: 72, scope: !608)
!620 = distinct !DISubprogram(name: "new_display<usize>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17h4a588785c5f75a8eE", scope: !621, file: !371, line: 318, type: !631, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !407, retainedNodes: !633)
!621 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArgumentV1", scope: !168, file: !2, size: 128, align: 64, elements: !622, templateParams: !23, identifier: "753c369e46bf484710f4d769a3fba395")
!622 = !{!623, !627}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !621, file: !2, baseType: !624, size: 64, align: 64)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::{extern#0}::Opaque", baseType: !625, size: 64, align: 64, dwarfAddressSpace: 0)
!625 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", scope: !626, file: !2, align: 8, elements: !23, identifier: "83e8d27b51d2e55ae9422e57e00c6cd7")
!626 = !DINamespace(name: "{extern#0}", scope: !168)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !621, file: !2, baseType: !628, size: 64, align: 64, offset: 64)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::{extern#0}::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !629, size: 64, align: 64, dwarfAddressSpace: 0)
!629 = !DISubroutineType(types: !630)
!630 = !{!375, !624, !392}
!631 = !DISubroutineType(types: !632)
!632 = !{!621, !592}
!633 = !{!634}
!634 = !DILocalVariable(name: "x", arg: 1, scope: !620, file: !371, line: 318, type: !592)
!635 = !DILocation(line: 318, column: 30, scope: !620)
!636 = !DILocation(line: 319, column: 23, scope: !620)
!637 = !DILocalVariable(name: "x", scope: !638, file: !371, line: 319, type: !592, align: 8)
!638 = distinct !DISubprogram(name: "new<usize>", linkageName: "_ZN4core3fmt10ArgumentV13new17h5183c7ca57d1b494E", scope: !621, file: !371, line: 329, type: !639, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !407, retainedNodes: !644)
!639 = !DISubroutineType(types: !640)
!640 = !{!621, !592, !641}
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&usize, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !642, size: 64, align: 64, dwarfAddressSpace: 0)
!642 = !DISubroutineType(types: !643)
!643 = !{!375, !592, !392}
!644 = !{!637, !645}
!645 = !DILocalVariable(name: "f", scope: !638, file: !371, line: 319, type: !641, align: 8)
!646 = !DILocation(line: 319, column: 13, scope: !638, inlinedAt: !647)
!647 = !DILocation(line: 319, column: 13, scope: !620)
!648 = !DILocation(line: 319, column: 26, scope: !620)
!649 = !DILocation(line: 320, column: 10, scope: !620)
!650 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17h9112b2fdc544d21eE", scope: !652, file: !651, line: 185, type: !654, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !656)
!651 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "6661e46781fcd4293e0f5caf32f3d8ca")
!652 = !DINamespace(name: "{impl#80}", scope: !653)
!653 = !DINamespace(name: "num", scope: !168)
!654 = !DISubroutineType(types: !655)
!655 = !{!375, !32, !392}
!656 = !{!657, !658}
!657 = !DILocalVariable(name: "self", arg: 1, scope: !650, file: !651, line: 185, type: !32)
!658 = !DILocalVariable(name: "f", arg: 2, scope: !650, file: !651, line: 185, type: !392)
!659 = !DILocation(line: 185, column: 20, scope: !650)
!660 = !DILocation(line: 185, column: 27, scope: !650)
!661 = !DILocation(line: 186, column: 20, scope: !650)
!662 = !DILocation(line: 188, column: 27, scope: !650)
!663 = !DILocation(line: 187, column: 21, scope: !650)
!664 = !DILocation(line: 186, column: 17, scope: !650)
!665 = !DILocation(line: 193, column: 14, scope: !650)
!666 = !DILocation(line: 191, column: 21, scope: !650)
!667 = !DILocation(line: 189, column: 21, scope: !650)
!668 = !DILocation(line: 188, column: 24, scope: !650)
!669 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hd89f1680b69491a7E", scope: !670, file: !651, line: 185, type: !671, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !673)
!670 = !DINamespace(name: "{impl#86}", scope: !653)
!671 = !DISubroutineType(types: !672)
!672 = !{!375, !52, !392}
!673 = !{!674, !675}
!674 = !DILocalVariable(name: "self", arg: 1, scope: !669, file: !651, line: 185, type: !52)
!675 = !DILocalVariable(name: "f", arg: 2, scope: !669, file: !651, line: 185, type: !392)
!676 = !DILocation(line: 185, column: 20, scope: !669)
!677 = !DILocation(line: 185, column: 27, scope: !669)
!678 = !DILocation(line: 186, column: 20, scope: !669)
!679 = !DILocation(line: 188, column: 27, scope: !669)
!680 = !DILocation(line: 187, column: 21, scope: !669)
!681 = !DILocation(line: 186, column: 17, scope: !669)
!682 = !DILocation(line: 193, column: 14, scope: !669)
!683 = !DILocation(line: 191, column: 21, scope: !669)
!684 = !DILocation(line: 189, column: 21, scope: !669)
!685 = !DILocation(line: 188, column: 24, scope: !669)
!686 = distinct !DISubprogram(name: "entries<&i32, core::slice::iter::Iter<i32>>", linkageName: "_ZN4core3fmt8builders9DebugList7entries17he1b33f36e666fe23E", scope: !688, file: !687, line: 637, type: !697, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !707, retainedNodes: !700)
!687 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/builders.rs", directory: "", checksumkind: CSK_MD5, checksum: "e84d8f928a38ea86b324aa7d6aa80df8")
!688 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugList", scope: !689, file: !2, size: 128, align: 64, elements: !690, templateParams: !23, identifier: "ae111038d86e71a88d7f5c91efdbb7c8")
!689 = !DINamespace(name: "builders", scope: !168)
!690 = !{!691}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !688, file: !2, baseType: !692, size: 128, align: 64)
!692 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugInner", scope: !689, file: !2, size: 128, align: 64, elements: !693, templateParams: !23, identifier: "a1aef014c36393c5f380a5492df722f1")
!693 = !{!694, !695, !696}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !692, file: !2, baseType: !392, size: 64, align: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !692, file: !2, baseType: !375, size: 8, align: 8, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "has_fields", scope: !692, file: !2, baseType: !43, size: 8, align: 8, offset: 72)
!697 = !DISubroutineType(types: !698)
!698 = !{!699, !699, !528}
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::builders::DebugList", baseType: !688, size: 64, align: 64, dwarfAddressSpace: 0)
!700 = !{!701, !702, !703, !705}
!701 = !DILocalVariable(name: "self", arg: 1, scope: !686, file: !687, line: 637, type: !699)
!702 = !DILocalVariable(name: "entries", arg: 2, scope: !686, file: !687, line: 637, type: !528)
!703 = !DILocalVariable(name: "iter", scope: !704, file: !687, line: 642, type: !528, align: 8)
!704 = distinct !DILexicalBlock(scope: !686, file: !687, line: 642, column: 9)
!705 = !DILocalVariable(name: "entry", scope: !706, file: !687, line: 642, type: !32, align: 8)
!706 = distinct !DILexicalBlock(scope: !704, file: !687, line: 642, column: 30)
!707 = !{!708, !709}
!708 = !DITemplateTypeParameter(name: "D", type: !32)
!709 = !DITemplateTypeParameter(name: "I", type: !528)
!710 = !DILocation(line: 637, column: 26, scope: !686)
!711 = !DILocation(line: 637, column: 37, scope: !686)
!712 = !DILocation(line: 642, column: 22, scope: !704)
!713 = !DILocation(line: 642, column: 13, scope: !706)
!714 = !DILocation(line: 642, column: 22, scope: !686)
!715 = !DILocation(line: 642, column: 9, scope: !704)
!716 = !DILocation(line: 642, column: 9, scope: !686)
!717 = !DILocation(line: 642, column: 13, scope: !704)
!718 = !DILocation(line: 643, column: 24, scope: !706)
!719 = !DILocation(line: 643, column: 13, scope: !706)
!720 = !DILocation(line: 644, column: 9, scope: !704)
!721 = !DILocation(line: 637, column: 5, scope: !686)
!722 = !DILocation(line: 646, column: 6, scope: !686)
!723 = distinct !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117h91724e5e2039d987E", scope: !724, file: !371, line: 390, type: !788, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !790)
!724 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !168, file: !2, size: 384, align: 64, elements: !725, templateParams: !23, identifier: "7e7034295abae01651800c8eb0e9b712")
!725 = !{!726, !737, !782}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !724, file: !2, baseType: !727, size: 128, align: 64)
!727 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !728, templateParams: !23, identifier: "120d786d314e2730a5f45c5e7e56f7d")
!728 = !{!729, !736}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !727, file: !2, baseType: !730, size: 64, align: 64)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64, align: 64, dwarfAddressSpace: 0)
!731 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !732, templateParams: !23, identifier: "c603ebb2af364502ef89131a86c6ad9b")
!732 = !{!733, !735}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !731, file: !2, baseType: !734, size: 64, align: 64)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64, align: 64, dwarfAddressSpace: 0)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !731, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !727, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !724, file: !2, baseType: !738, size: 128, align: 64, offset: 128)
!738 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::v1::Argument]>", scope: !401, file: !2, size: 128, align: 64, elements: !739, templateParams: !23, identifier: "bb69cbb99024f47dbb54317ba8130317")
!739 = !{!740}
!740 = !DICompositeType(tag: DW_TAG_variant_part, scope: !738, file: !2, size: 128, align: 64, elements: !741, templateParams: !23, identifier: "ce02297fe7dbf35f547cc88f131a39b4", discriminator: !781)
!741 = !{!742, !777}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !740, file: !2, baseType: !743, size: 128, align: 64, extraData: i64 0)
!743 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !738, file: !2, size: 128, align: 64, elements: !23, templateParams: !744, identifier: "742dbe7e160661d8ca36fcfff2574850")
!744 = !{!745}
!745 = !DITemplateTypeParameter(name: "T", type: !746)
!746 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::v1::Argument]", file: !2, size: 128, align: 64, elements: !747, templateParams: !23, identifier: "5ac19a4b2fedc0a38075c82d3d698a2e")
!747 = !{!748, !776}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !746, file: !2, baseType: !749, size: 64, align: 64)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64, align: 64, dwarfAddressSpace: 0)
!750 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !166, file: !2, size: 448, align: 64, elements: !751, templateParams: !23, identifier: "fbba22b504f631aebebe5f9a731b4661")
!751 = !{!752, !753}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !750, file: !2, baseType: !9, size: 64, align: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !750, file: !2, baseType: !754, size: 384, align: 64, offset: 64)
!754 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormatSpec", scope: !166, file: !2, size: 384, align: 64, elements: !755, templateParams: !23, identifier: "a89ae7a13a1def66296bab98052f520a")
!755 = !{!756, !757, !758, !759, !775}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !754, file: !2, baseType: !397, size: 32, align: 32, offset: 256)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !754, file: !2, baseType: !165, size: 8, align: 8, offset: 320)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !754, file: !2, baseType: !53, size: 32, align: 32, offset: 288)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !754, file: !2, baseType: !760, size: 128, align: 64)
!760 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !166, file: !2, size: 128, align: 64, elements: !761, templateParams: !23, identifier: "41c6e2a1db95b605a371a090678c1fd8")
!761 = !{!762}
!762 = !DICompositeType(tag: DW_TAG_variant_part, scope: !760, file: !2, size: 128, align: 64, elements: !763, templateParams: !23, identifier: "eff7cdccebc4ba23639a28669cbce86", discriminator: !774)
!763 = !{!764, !768, !772}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !762, file: !2, baseType: !765, size: 128, align: 64, extraData: i64 0)
!765 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !760, file: !2, size: 128, align: 64, elements: !766, templateParams: !23, identifier: "927d86c22d9994b767e51a58b20493")
!766 = !{!767}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !765, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !762, file: !2, baseType: !769, size: 128, align: 64, extraData: i64 1)
!769 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !760, file: !2, size: 128, align: 64, elements: !770, templateParams: !23, identifier: "ce4b8bb3a4200a86c4c06a7570d8ee71")
!770 = !{!771}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !769, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !762, file: !2, baseType: !773, size: 128, align: 64, extraData: i64 2)
!773 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !760, file: !2, size: 128, align: 64, elements: !23, identifier: "b155566b9bd0239ef48aa3b8bcdef75b")
!774 = !DIDerivedType(tag: DW_TAG_member, scope: !760, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagArtificial)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !754, file: !2, baseType: !760, size: 128, align: 64, offset: 128)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !746, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !740, file: !2, baseType: !778, size: 128, align: 64)
!778 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !738, file: !2, size: 128, align: 64, elements: !779, templateParams: !744, identifier: "17f2fc106094349c7673abca4839c97a")
!779 = !{!780}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !778, file: !2, baseType: !746, size: 128, align: 64)
!781 = !DIDerivedType(tag: DW_TAG_member, scope: !738, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagArtificial)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !724, file: !2, baseType: !783, size: 128, align: 64, offset: 256)
!783 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::ArgumentV1]", file: !2, size: 128, align: 64, elements: !784, templateParams: !23, identifier: "c78588d5439c4eaa18fbaab99f079cbf")
!784 = !{!785, !787}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !783, file: !2, baseType: !786, size: 64, align: 64)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64, align: 64, dwarfAddressSpace: 0)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !783, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!788 = !DISubroutineType(types: !789)
!789 = !{!724, !727, !783}
!790 = !{!791, !792}
!791 = !DILocalVariable(name: "pieces", arg: 1, scope: !723, file: !371, line: 390, type: !727)
!792 = !DILocalVariable(name: "args", arg: 2, scope: !723, file: !371, line: 390, type: !783)
!793 = !DILocation(line: 390, column: 25, scope: !723)
!794 = !DILocation(line: 390, column: 53, scope: !723)
!795 = !DILocation(line: 391, column: 12, scope: !723)
!796 = !DILocation(line: 391, column: 56, scope: !723)
!797 = !DILocation(line: 391, column: 41, scope: !723)
!798 = !DILocation(line: 394, column: 34, scope: !723)
!799 = !DILocation(line: 394, column: 9, scope: !723)
!800 = !DILocation(line: 395, column: 6, scope: !723)
!801 = !DILocation(line: 392, column: 13, scope: !723)
!802 = distinct !DISubprogram(name: "replace<usize>", linkageName: "_ZN4core3mem7replace17ha2dc615712323ff3E", scope: !97, file: !803, line: 913, type: !804, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !407, retainedNodes: !807)
!803 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "27c8869548c9dcb65186c5584c2586f6")
!804 = !DISubroutineType(types: !805)
!805 = !{!9, !806, !9}
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!807 = !{!808, !809, !810}
!808 = !DILocalVariable(name: "dest", arg: 1, scope: !802, file: !803, line: 913, type: !806)
!809 = !DILocalVariable(name: "src", arg: 2, scope: !802, file: !803, line: 913, type: !9)
!810 = !DILocalVariable(name: "result", scope: !811, file: !803, line: 918, type: !9, align: 8)
!811 = distinct !DILexicalBlock(scope: !802, file: !803, line: 918, column: 9)
!812 = !DILocation(line: 913, column: 25, scope: !802)
!813 = !DILocation(line: 913, column: 39, scope: !802)
!814 = !DILocalVariable(name: "src", scope: !815, file: !803, line: 919, type: !9, align: 8)
!815 = !DILexicalBlockFile(scope: !816, file: !803, discriminator: 0)
!816 = distinct !DISubprogram(name: "write<usize>", linkageName: "_ZN4core3ptr5write17he243d8f5cf95e9aaE", scope: !198, file: !817, line: 1296, type: !818, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !407, retainedNodes: !821)
!817 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "13c32d970b0b4dd38131a1908223a155")
!818 = !DISubroutineType(types: !819)
!819 = !{null, !820, !9}
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!821 = !{!822, !814}
!822 = !DILocalVariable(name: "dst", scope: !815, file: !803, line: 919, type: !820, align: 8)
!823 = !DILocation(line: 919, column: 9, scope: !815, inlinedAt: !824)
!824 = !DILocation(line: 919, column: 9, scope: !811)
!825 = !DILocalVariable(name: "tmp", scope: !826, file: !803, line: 918, type: !835, align: 8)
!826 = !DILexicalBlockFile(scope: !827, file: !803, discriminator: 0)
!827 = distinct !DILexicalBlock(scope: !828, file: !817, line: 1107, column: 5)
!828 = distinct !DISubprogram(name: "read<usize>", linkageName: "_ZN4core3ptr4read17h4669ba12ae3198a3E", scope: !198, file: !817, line: 1099, type: !829, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !407, retainedNodes: !832)
!829 = !DISubroutineType(types: !830)
!830 = !{!9, !831}
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!832 = !{!833, !825}
!833 = !DILocalVariable(name: "src", scope: !834, file: !803, line: 918, type: !831, align: 8)
!834 = !DILexicalBlockFile(scope: !828, file: !803, discriminator: 0)
!835 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<usize>", scope: !836, file: !2, size: 64, align: 64, elements: !837, templateParams: !407, identifier: "d5eca075936c223cc2b20ecedd1e4e46")
!836 = !DINamespace(name: "maybe_uninit", scope: !97)
!837 = !{!838, !839}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !835, file: !2, baseType: !7, align: 8)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !835, file: !2, baseType: !840, size: 64, align: 64)
!840 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<usize>", scope: !841, file: !2, size: 64, align: 64, elements: !842, templateParams: !407, identifier: "446cb116741bbe0e5138064f6b058dad")
!841 = !DINamespace(name: "manually_drop", scope: !97)
!842 = !{!843}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !840, file: !2, baseType: !9, size: 64, align: 64)
!844 = !DILocation(line: 918, column: 22, scope: !826, inlinedAt: !845)
!845 = !DILocation(line: 918, column: 22, scope: !802)
!846 = !DILocation(line: 918, column: 32, scope: !802)
!847 = !DILocation(line: 918, column: 22, scope: !834, inlinedAt: !845)
!848 = !DILocation(line: 918, column: 22, scope: !849, inlinedAt: !854)
!849 = !DILexicalBlockFile(scope: !850, file: !803, discriminator: 0)
!850 = distinct !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h56c6d0a54bb370a9E", scope: !835, file: !851, line: 320, type: !852, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !407, retainedNodes: !23)
!851 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "d75c93d9a93fe65ef19edc0e8e272278")
!852 = !DISubroutineType(types: !853)
!853 = !{!835}
!854 = !DILocation(line: 1107, column: 19, scope: !828, inlinedAt: !845)
!855 = !DILocalVariable(name: "self", scope: !856, file: !803, line: 918, type: !860, align: 8)
!856 = !DILexicalBlockFile(scope: !857, file: !803, discriminator: 0)
!857 = distinct !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hfe3b15cc1e03f5aeE", scope: !835, file: !851, line: 574, type: !858, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !407, retainedNodes: !861)
!858 = !DISubroutineType(types: !859)
!859 = !{!820, !860}
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !835, size: 64, align: 64, dwarfAddressSpace: 0)
!861 = !{!855}
!862 = !DILocation(line: 918, column: 22, scope: !856, inlinedAt: !863)
!863 = !DILocation(line: 1115, column: 34, scope: !827, inlinedAt: !845)
!864 = !DILocalVariable(name: "self", scope: !865, file: !803, line: 918, type: !835, align: 8)
!865 = !DILexicalBlockFile(scope: !866, file: !803, discriminator: 0)
!866 = distinct !DISubprogram(name: "assume_init<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hf21bb0b912cde21eE", scope: !835, file: !851, line: 629, type: !867, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !407, retainedNodes: !877)
!867 = !DISubroutineType(types: !868)
!868 = !{!9, !835, !869}
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !870, size: 64, align: 64, dwarfAddressSpace: 0)
!870 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !871, file: !2, size: 192, align: 64, elements: !873, templateParams: !23, identifier: "ef576a844c237f54e9e75bf7bba044c0")
!871 = !DINamespace(name: "location", scope: !872)
!872 = !DINamespace(name: "panic", scope: !98)
!873 = !{!874, !875, !876}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !870, file: !2, baseType: !731, size: 128, align: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !870, file: !2, baseType: !53, size: 32, align: 32, offset: 128)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !870, file: !2, baseType: !53, size: 32, align: 32, offset: 160)
!877 = !{!864}
!878 = !DILocation(line: 918, column: 22, scope: !865, inlinedAt: !879)
!879 = !DILocation(line: 1116, column: 9, scope: !827, inlinedAt: !845)
!880 = !DILocalVariable(name: "slot", scope: !881, file: !803, line: 918, type: !840, align: 8)
!881 = !DILexicalBlockFile(scope: !882, file: !803, discriminator: 0)
!882 = distinct !DISubprogram(name: "into_inner<usize>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h80edc42d7e4839afE", scope: !840, file: !883, line: 88, type: !884, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !407, retainedNodes: !886)
!883 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "a34f39f0c1c25c8378cd3f4ec0bf00c3")
!884 = !DISubroutineType(types: !885)
!885 = !{!9, !840}
!886 = !{!880}
!887 = !DILocation(line: 918, column: 22, scope: !881, inlinedAt: !888)
!888 = !DILocation(line: 634, column: 13, scope: !866, inlinedAt: !879)
!889 = !DILocation(line: 918, column: 13, scope: !811)
!890 = !DILocation(line: 919, column: 20, scope: !811)
!891 = !DILocation(line: 919, column: 26, scope: !811)
!892 = !DILocation(line: 922, column: 2, scope: !802)
!893 = !DILocation(line: 922, column: 1, scope: !802)
!894 = !DILocation(line: 913, column: 1, scope: !802)
!895 = distinct !DISubprogram(name: "checked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h251db5f99c8c8fc4E", scope: !561, file: !560, line: 438, type: !896, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !898)
!896 = !DISubroutineType(types: !897)
!897 = !{!400, !9, !9}
!898 = !{!899, !900, !901, !903}
!899 = !DILocalVariable(name: "self", arg: 1, scope: !895, file: !560, line: 438, type: !9)
!900 = !DILocalVariable(name: "rhs", arg: 2, scope: !895, file: !560, line: 438, type: !9)
!901 = !DILocalVariable(name: "a", scope: !902, file: !560, line: 439, type: !9, align: 8)
!902 = distinct !DILexicalBlock(scope: !895, file: !560, line: 439, column: 13)
!903 = !DILocalVariable(name: "b", scope: !902, file: !560, line: 439, type: !43, align: 1)
!904 = !DILocation(line: 438, column: 34, scope: !895)
!905 = !DILocation(line: 438, column: 40, scope: !895)
!906 = !DILocation(line: 439, column: 26, scope: !895)
!907 = !DILocalVariable(name: "self", scope: !908, file: !560, line: 439, type: !9, align: 8)
!908 = distinct !DISubprogram(name: "overflowing_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17he3f36ecce9400a82E", scope: !561, file: !560, line: 1506, type: !909, scopeLine: 1506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !915)
!909 = !DISubroutineType(types: !910)
!910 = !{!911, !9, !9}
!911 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !912, templateParams: !23, identifier: "23309350ccb628a7900e37caa17b1249")
!912 = !{!913, !914}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !911, file: !2, baseType: !9, size: 64, align: 64)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !911, file: !2, baseType: !43, size: 8, align: 8, offset: 64)
!915 = !{!907, !916, !917, !919}
!916 = !DILocalVariable(name: "rhs", scope: !908, file: !560, line: 439, type: !9, align: 8)
!917 = !DILocalVariable(name: "a", scope: !918, file: !560, line: 439, type: !99, align: 8)
!918 = distinct !DILexicalBlock(scope: !908, file: !560, line: 1507, column: 13)
!919 = !DILocalVariable(name: "b", scope: !918, file: !560, line: 439, type: !43, align: 1)
!920 = !DILocation(line: 439, column: 26, scope: !908, inlinedAt: !906)
!921 = !DILocation(line: 439, column: 47, scope: !895)
!922 = !DILocation(line: 439, column: 26, scope: !918, inlinedAt: !906)
!923 = !DILocation(line: 439, column: 18, scope: !895)
!924 = !DILocation(line: 439, column: 18, scope: !902)
!925 = !DILocation(line: 439, column: 21, scope: !895)
!926 = !DILocation(line: 439, column: 21, scope: !902)
!927 = !DILocation(line: 440, column: 16, scope: !902)
!928 = !DILocation(line: 440, column: 42, scope: !902)
!929 = !DILocation(line: 440, column: 13, scope: !902)
!930 = !DILocation(line: 440, column: 30, scope: !902)
!931 = !DILocation(line: 441, column: 10, scope: !895)
!932 = !{i64 0, i64 2}
!933 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h5275f3d8f38f5cedE", scope: !561, file: !560, line: 555, type: !896, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !934)
!934 = !{!935, !936, !937, !939}
!935 = !DILocalVariable(name: "self", arg: 1, scope: !933, file: !560, line: 555, type: !9)
!936 = !DILocalVariable(name: "rhs", arg: 2, scope: !933, file: !560, line: 555, type: !9)
!937 = !DILocalVariable(name: "a", scope: !938, file: !560, line: 556, type: !9, align: 8)
!938 = distinct !DILexicalBlock(scope: !933, file: !560, line: 556, column: 13)
!939 = !DILocalVariable(name: "b", scope: !938, file: !560, line: 556, type: !43, align: 1)
!940 = !DILocation(line: 555, column: 34, scope: !933)
!941 = !DILocation(line: 555, column: 40, scope: !933)
!942 = !DILocation(line: 556, column: 26, scope: !933)
!943 = !DILocalVariable(name: "self", scope: !944, file: !560, line: 556, type: !9, align: 8)
!944 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17hce0beb250bffdecdE", scope: !561, file: !560, line: 1688, type: !909, scopeLine: 1688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !945)
!945 = !{!943, !946, !947, !949}
!946 = !DILocalVariable(name: "rhs", scope: !944, file: !560, line: 556, type: !9, align: 8)
!947 = !DILocalVariable(name: "a", scope: !948, file: !560, line: 556, type: !99, align: 8)
!948 = distinct !DILexicalBlock(scope: !944, file: !560, line: 1689, column: 13)
!949 = !DILocalVariable(name: "b", scope: !948, file: !560, line: 556, type: !43, align: 1)
!950 = !DILocation(line: 556, column: 26, scope: !944, inlinedAt: !942)
!951 = !DILocation(line: 556, column: 47, scope: !933)
!952 = !DILocation(line: 556, column: 26, scope: !948, inlinedAt: !942)
!953 = !DILocation(line: 556, column: 18, scope: !933)
!954 = !DILocation(line: 556, column: 18, scope: !938)
!955 = !DILocation(line: 556, column: 21, scope: !933)
!956 = !DILocation(line: 556, column: 21, scope: !938)
!957 = !DILocation(line: 557, column: 16, scope: !938)
!958 = !DILocation(line: 557, column: 42, scope: !938)
!959 = !DILocation(line: 557, column: 13, scope: !938)
!960 = !DILocation(line: 557, column: 30, scope: !938)
!961 = !DILocation(line: 558, column: 10, scope: !933)
!962 = distinct !DISubprogram(name: "call_once<std::rt::lang_start::{closure_env#0}<()>, ()>", linkageName: "_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h9b0e5466779f4103E", scope: !964, file: !963, line: 248, type: !967, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !973, retainedNodes: !970)
!963 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "3100065230267ed2a3b8753c70d752a6")
!964 = !DINamespace(name: "FnOnce", scope: !965)
!965 = !DINamespace(name: "function", scope: !966)
!966 = !DINamespace(name: "ops", scope: !98)
!967 = !DISubroutineType(types: !968)
!968 = !{!33, !969}
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::rt::lang_start::{closure_env#0}<()>", baseType: !14, size: 64, align: 64, dwarfAddressSpace: 0)
!970 = !{!971, !972}
!971 = !DILocalVariable(arg: 1, scope: !962, file: !963, line: 248, type: !969)
!972 = !DILocalVariable(arg: 2, scope: !962, file: !963, line: 248, type: !7)
!973 = !{!974, !975}
!974 = !DITemplateTypeParameter(name: "Self", type: !14)
!975 = !DITemplateTypeParameter(name: "Args", type: !7)
!976 = !DILocation(line: 248, column: 5, scope: !962)
!977 = distinct !DISubprogram(name: "call_once<array_tests::test_arrays::test_buffer::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h08e82f09d96cd0c3E", scope: !964, file: !963, line: 248, type: !978, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !985, retainedNodes: !982)
!978 = !DISubroutineType(types: !979)
!979 = !{null, !980}
!980 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !981, file: !2, align: 8, elements: !23, identifier: "ae4ab8d274f09a3420b342120d32f50")
!981 = !DINamespace(name: "test_buffer", scope: !68)
!982 = !{!983, !984}
!983 = !DILocalVariable(arg: 1, scope: !977, file: !963, line: 248, type: !980)
!984 = !DILocalVariable(arg: 2, scope: !977, file: !963, line: 248, type: !7)
!985 = !{!986, !975}
!986 = !DITemplateTypeParameter(name: "Self", type: !980)
!987 = !DILocation(line: 248, column: 5, scope: !977)
!988 = distinct !DISubprogram(name: "call_once<array_tests::test_arrays::test_sized_array_impls::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h164bb907954cf641E", scope: !964, file: !963, line: 248, type: !989, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !996, retainedNodes: !993)
!989 = !DISubroutineType(types: !990)
!990 = !{null, !991}
!991 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !992, file: !2, align: 8, elements: !23, identifier: "54e65490b902bb41134f5be60c995dbd")
!992 = !DINamespace(name: "test_sized_array_impls", scope: !68)
!993 = !{!994, !995}
!994 = !DILocalVariable(arg: 1, scope: !988, file: !963, line: 248, type: !991)
!995 = !DILocalVariable(arg: 2, scope: !988, file: !963, line: 248, type: !7)
!996 = !{!997, !975}
!997 = !DITemplateTypeParameter(name: "Self", type: !991)
!998 = !DILocation(line: 248, column: 5, scope: !988)
!999 = distinct !DISubprogram(name: "call_once<array_tests::test_arrays::test_buffer2::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h5854d64ef78d1e60E", scope: !964, file: !963, line: 248, type: !1000, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1007, retainedNodes: !1004)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{null, !1002}
!1002 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1003, file: !2, align: 8, elements: !23, identifier: "35cf6af4d9246826e1f36f8102f57d42")
!1003 = !DINamespace(name: "test_buffer2", scope: !68)
!1004 = !{!1005, !1006}
!1005 = !DILocalVariable(arg: 1, scope: !999, file: !963, line: 248, type: !1002)
!1006 = !DILocalVariable(arg: 2, scope: !999, file: !963, line: 248, type: !7)
!1007 = !{!1008, !975}
!1008 = !DITemplateTypeParameter(name: "Self", type: !1002)
!1009 = !DILocation(line: 248, column: 5, scope: !999)
!1010 = distinct !DISubprogram(name: "call_once<fn(), ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h8ef4047210f3fd1aE", scope: !964, file: !963, line: 248, type: !282, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1014, retainedNodes: !1011)
!1011 = !{!1012, !1013}
!1012 = !DILocalVariable(arg: 1, scope: !1010, file: !963, line: 248, type: !20)
!1013 = !DILocalVariable(arg: 2, scope: !1010, file: !963, line: 248, type: !7)
!1014 = !{!1015, !975}
!1015 = !DITemplateTypeParameter(name: "Self", type: !20)
!1016 = !DILocation(line: 248, column: 5, scope: !1010)
!1017 = distinct !DISubprogram(name: "call_once<array_tests::test_arrays::test_global_incomplete_array::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hb61f48e33c63604dE", scope: !964, file: !963, line: 248, type: !1018, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1025, retainedNodes: !1022)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{null, !1020}
!1020 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1021, file: !2, align: 8, elements: !23, identifier: "1716e07d19f09970d9d652145459fb4e")
!1021 = !DINamespace(name: "test_global_incomplete_array", scope: !68)
!1022 = !{!1023, !1024}
!1023 = !DILocalVariable(arg: 1, scope: !1017, file: !963, line: 248, type: !1020)
!1024 = !DILocalVariable(arg: 2, scope: !1017, file: !963, line: 248, type: !7)
!1025 = !{!1026, !975}
!1026 = !DITemplateTypeParameter(name: "Self", type: !1020)
!1027 = !DILocation(line: 248, column: 5, scope: !1017)
!1028 = distinct !DISubprogram(name: "call_once<std::rt::lang_start::{closure_env#0}<()>, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hd34dde841114cb1fE", scope: !964, file: !963, line: 248, type: !1029, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !973, retainedNodes: !1031)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!33, !14}
!1031 = !{!1032, !1033}
!1032 = !DILocalVariable(arg: 1, scope: !1028, file: !963, line: 248, type: !14)
!1033 = !DILocalVariable(arg: 2, scope: !1028, file: !963, line: 248, type: !7)
!1034 = !DILocation(line: 248, column: 5, scope: !1028)
!1035 = distinct !DISubprogram(name: "call_once<array_tests::test_arrays::test_variable_arrays::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hdda276033a1f8518E", scope: !964, file: !963, line: 248, type: !1036, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1043, retainedNodes: !1040)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{null, !1038}
!1038 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1039, file: !2, align: 8, elements: !23, identifier: "9b1b095ce233e6461ec6fccf27f6a2e7")
!1039 = !DINamespace(name: "test_variable_arrays", scope: !68)
!1040 = !{!1041, !1042}
!1041 = !DILocalVariable(arg: 1, scope: !1035, file: !963, line: 248, type: !1038)
!1042 = !DILocalVariable(arg: 2, scope: !1035, file: !963, line: 248, type: !7)
!1043 = !{!1044, !975}
!1044 = !DITemplateTypeParameter(name: "Self", type: !1038)
!1045 = !DILocation(line: 248, column: 5, scope: !1035)
!1046 = distinct !DISubprogram(name: "call_once<array_tests::test_arrays::test_alloca_arrays::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17heffa5958092a6e7dE", scope: !964, file: !963, line: 248, type: !1047, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1054, retainedNodes: !1051)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{null, !1049}
!1049 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1050, file: !2, align: 8, elements: !23, identifier: "c285ef264b58077710e653a231613e27")
!1050 = !DINamespace(name: "test_alloca_arrays", scope: !68)
!1051 = !{!1052, !1053}
!1052 = !DILocalVariable(arg: 1, scope: !1046, file: !963, line: 248, type: !1049)
!1053 = !DILocalVariable(arg: 2, scope: !1046, file: !963, line: 248, type: !7)
!1054 = !{!1055, !975}
!1055 = !DITemplateTypeParameter(name: "Self", type: !1049)
!1056 = !DILocation(line: 248, column: 5, scope: !1046)
!1057 = distinct !DISubprogram(name: "drop_in_place<&i32>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$i32$GT$17h2e40cf13126c2945E", scope: !198, file: !817, line: 487, type: !1058, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !539, retainedNodes: !1061)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{null, !1060}
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &i32", baseType: !32, size: 64, align: 64, dwarfAddressSpace: 0)
!1061 = !{!1062}
!1062 = !DILocalVariable(arg: 1, scope: !1057, file: !817, line: 487, type: !1060)
!1063 = !DILocation(line: 487, column: 1, scope: !1057)
!1064 = distinct !DISubprogram(name: "drop_in_place<&u32>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17h6bea87460d2c111dE", scope: !198, file: !817, line: 487, type: !1065, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1070, retainedNodes: !1068)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{null, !1067}
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u32", baseType: !52, size: 64, align: 64, dwarfAddressSpace: 0)
!1068 = !{!1069}
!1069 = !DILocalVariable(arg: 1, scope: !1064, file: !817, line: 487, type: !1067)
!1070 = !{!1071}
!1071 = !DITemplateTypeParameter(name: "T", type: !52)
!1072 = !DILocation(line: 487, column: 1, scope: !1064)
!1073 = distinct !DISubprogram(name: "drop_in_place<&bool>", linkageName: "_ZN4core3ptr29drop_in_place$LT$$RF$bool$GT$17h049972998a46580cE", scope: !198, file: !817, line: 487, type: !1074, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1079, retainedNodes: !1077)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{null, !1076}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &bool", baseType: !42, size: 64, align: 64, dwarfAddressSpace: 0)
!1077 = !{!1078}
!1078 = !DILocalVariable(arg: 1, scope: !1073, file: !817, line: 487, type: !1076)
!1079 = !{!1080}
!1080 = !DITemplateTypeParameter(name: "T", type: !42)
!1081 = !DILocation(line: 487, column: 1, scope: !1073)
!1082 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<i32, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17h035ad200dd80b9a9E", scope: !198, file: !817, line: 487, type: !1083, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1107, retainedNodes: !1105)
!1083 = !DISubroutineType(types: !1084)
!1084 = !{null, !1085}
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<i32, alloc::alloc::Global>", baseType: !1086, size: 64, align: 64, dwarfAddressSpace: 0)
!1086 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<i32, alloc::alloc::Global>", scope: !1087, file: !2, size: 192, align: 64, elements: !1088, templateParams: !1102, identifier: "a91ce611025c7cb92c07812364ae35fe")
!1087 = !DINamespace(name: "vec", scope: !189)
!1088 = !{!1089, !1104}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1086, file: !2, baseType: !1090, size: 128, align: 64)
!1090 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<i32, alloc::alloc::Global>", scope: !188, file: !2, size: 128, align: 64, elements: !1091, templateParams: !1102, identifier: "8a8fe19ff2edd19bab1729ee8c5bad6a")
!1091 = !{!1092, !1098, !1099}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1090, file: !2, baseType: !1093, size: 64, align: 64)
!1093 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<i32>", scope: !208, file: !2, size: 64, align: 64, elements: !1094, templateParams: !461, identifier: "62f4807ab3dce3cba7f30fc00f38cdd6")
!1094 = !{!1095, !1096}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1093, file: !2, baseType: !532, size: 64, align: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1093, file: !2, baseType: !1097, align: 8)
!1097 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<i32>", scope: !213, file: !2, align: 8, elements: !23, templateParams: !461, identifier: "34c013968c354612ac15edce1691fe68")
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1090, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1090, file: !2, baseType: !1100, align: 8)
!1100 = !DICompositeType(tag: DW_TAG_structure_type, name: "Global", scope: !1101, file: !2, align: 8, elements: !23, identifier: "3328ba4994ba07f4a4a3e83fae935932")
!1101 = !DINamespace(name: "alloc", scope: !189)
!1102 = !{!462, !1103}
!1103 = !DITemplateTypeParameter(name: "A", type: !1100)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1086, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!1105 = !{!1106}
!1106 = !DILocalVariable(arg: 1, scope: !1082, file: !817, line: 487, type: !1085)
!1107 = !{!1108}
!1108 = !DITemplateTypeParameter(name: "T", type: !1086)
!1109 = !DILocation(line: 487, column: 1, scope: !1082)
!1110 = distinct !DISubprogram(name: "drop_in_place<&[i32; 2]>", linkageName: "_ZN4core3ptr49drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$2$u5d$$GT$17hdf2d5ba04d5e48c9E", scope: !198, file: !817, line: 487, type: !1111, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1116, retainedNodes: !1114)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{null, !1113}
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &[i32; 2]", baseType: !62, size: 64, align: 64, dwarfAddressSpace: 0)
!1114 = !{!1115}
!1115 = !DILocalVariable(arg: 1, scope: !1110, file: !817, line: 487, type: !1113)
!1116 = !{!1117}
!1117 = !DITemplateTypeParameter(name: "T", type: !62)
!1118 = !DILocation(line: 487, column: 1, scope: !1110)
!1119 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<i32, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr54drop_in_place$LT$alloc..raw_vec..RawVec$LT$i32$GT$$GT$17he1e32f1b987f78a7E", scope: !198, file: !817, line: 487, type: !1120, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1125, retainedNodes: !1123)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{null, !1122}
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<i32, alloc::alloc::Global>", baseType: !1090, size: 64, align: 64, dwarfAddressSpace: 0)
!1123 = !{!1124}
!1124 = !DILocalVariable(arg: 1, scope: !1119, file: !817, line: 487, type: !1122)
!1125 = !{!1126}
!1126 = !DITemplateTypeParameter(name: "T", type: !1090)
!1127 = !DILocation(line: 487, column: 1, scope: !1119)
!1128 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>", linkageName: "_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17h0df015e9a232d0deE", scope: !198, file: !817, line: 487, type: !1129, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1139, retainedNodes: !1137)
!1129 = !DISubroutineType(types: !1130)
!1130 = !{null, !1131}
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::set_len_on_drop::SetLenOnDrop", baseType: !1132, size: 64, align: 64, dwarfAddressSpace: 0)
!1132 = !DICompositeType(tag: DW_TAG_structure_type, name: "SetLenOnDrop", scope: !1133, file: !2, size: 128, align: 64, elements: !1134, templateParams: !23, identifier: "92c56566f7dda87877f4ae307cd899c5")
!1133 = !DINamespace(name: "set_len_on_drop", scope: !1087)
!1134 = !{!1135, !1136}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1132, file: !2, baseType: !806, size: 64, align: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "local_len", scope: !1132, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1137 = !{!1138}
!1138 = !DILocalVariable(arg: 1, scope: !1128, file: !817, line: 487, type: !1131)
!1139 = !{!1140}
!1140 = !DITemplateTypeParameter(name: "T", type: !1132)
!1141 = !DILocation(line: 487, column: 1, scope: !1128)
!1142 = distinct !DISubprogram(name: "drop_in_place<std::rt::lang_start::{closure_env#0}<()>>", linkageName: "_ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h3168fd86cd542110E", scope: !198, file: !817, line: 487, type: !1143, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1147, retainedNodes: !1145)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{null, !969}
!1145 = !{!1146}
!1146 = !DILocalVariable(arg: 1, scope: !1142, file: !817, line: 487, type: !969)
!1147 = !{!1148}
!1148 = !DITemplateTypeParameter(name: "T", type: !14)
!1149 = !DILocation(line: 487, column: 1, scope: !1142)
!1150 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17he9f80aa4e18ed60cE", scope: !201, file: !195, line: 218, type: !1151, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !1166)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!1153, !224}
!1153 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::ptr::non_null::NonNull<u8>>", scope: !401, file: !2, size: 64, align: 64, elements: !1154, templateParams: !23, identifier: "73e5c906163f964bd09052518b6d2dc5")
!1154 = !{!1155}
!1155 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1153, file: !2, size: 64, align: 64, elements: !1156, templateParams: !23, identifier: "60204c6c6496841dbff7e7ec5dea5282", discriminator: !1165)
!1156 = !{!1157, !1161}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1155, file: !2, baseType: !1158, size: 64, align: 64, extraData: i64 0)
!1158 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1153, file: !2, size: 64, align: 64, elements: !23, templateParams: !1159, identifier: "b393050474aeb0631755d975367153e1")
!1159 = !{!1160}
!1160 = !DITemplateTypeParameter(name: "T", type: !201)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1155, file: !2, baseType: !1162, size: 64, align: 64)
!1162 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1153, file: !2, size: 64, align: 64, elements: !1163, templateParams: !1159, identifier: "a01a0b695bfd5d94759ea5c77533b9ea")
!1163 = !{!1164}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1162, file: !2, baseType: !201, size: 64, align: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, scope: !1153, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagArtificial)
!1166 = !{!1167}
!1167 = !DILocalVariable(name: "ptr", arg: 1, scope: !1150, file: !195, line: 218, type: !224)
!1168 = !DILocation(line: 218, column: 22, scope: !1150)
!1169 = !DILocalVariable(name: "metadata", scope: !1170, file: !195, line: 219, type: !7, align: 1)
!1170 = !DILexicalBlockFile(scope: !1171, file: !195, discriminator: 0)
!1171 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h5094a4a4d205c897E", scope: !1173, file: !1172, line: 127, type: !1174, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !1177)
!1172 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "59565ed3c34dee3e8f8928c29f8f7ce4")
!1173 = !DINamespace(name: "metadata", scope: !198)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{!224, !1176, !7}
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!1177 = !{!1178, !1169}
!1178 = !DILocalVariable(name: "data_address", scope: !1170, file: !195, line: 219, type: !1176, align: 8)
!1179 = !DILocation(line: 219, column: 13, scope: !1170, inlinedAt: !1180)
!1180 = !DILocation(line: 668, column: 5, scope: !1181, inlinedAt: !1184)
!1181 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h390c2df580356f7fE", scope: !198, file: !817, line: 667, type: !1182, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !23)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!224}
!1184 = !DILocation(line: 38, column: 41, scope: !1185, inlinedAt: !1194)
!1185 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hb7558b95bb4dfdc1E", scope: !1187, file: !1186, line: 35, type: !1189, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !1191)
!1186 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "6672664af50614ec3c026afd55307af7")
!1187 = !DINamespace(name: "{impl#0}", scope: !1188)
!1188 = !DINamespace(name: "mut_ptr", scope: !198)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!43, !224}
!1191 = !{!1192}
!1192 = !DILocalVariable(name: "self", scope: !1193, file: !195, line: 219, type: !224, align: 8)
!1193 = !DILexicalBlockFile(scope: !1185, file: !195, discriminator: 0)
!1194 = !DILocation(line: 219, column: 13, scope: !1150)
!1195 = !DILocation(line: 219, column: 13, scope: !1193, inlinedAt: !1194)
!1196 = !DILocalVariable(name: "self", scope: !1197, file: !195, line: 219, type: !224, align: 8)
!1197 = !DILexicalBlockFile(scope: !1198, file: !195, discriminator: 0)
!1198 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17he1dd2630bb4fa294E", scope: !1187, file: !1186, line: 707, type: !1199, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !1201)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!43, !224, !224}
!1201 = !{!1196, !1202}
!1202 = !DILocalVariable(name: "other", scope: !1197, file: !195, line: 219, type: !224, align: 8)
!1203 = !DILocation(line: 219, column: 13, scope: !1197, inlinedAt: !1204)
!1204 = !DILocation(line: 38, column: 9, scope: !1185, inlinedAt: !1194)
!1205 = !DILocation(line: 219, column: 13, scope: !1206, inlinedAt: !1212)
!1206 = !DILexicalBlockFile(scope: !1207, file: !195, discriminator: 0)
!1207 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17hee63661066bd1171E", scope: !198, file: !817, line: 569, type: !1208, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !301, retainedNodes: !1210)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!1176, !9}
!1210 = !{!1211}
!1211 = !DILocalVariable(name: "addr", scope: !1206, file: !195, line: 219, type: !9, align: 8)
!1212 = !DILocation(line: 668, column: 24, scope: !1181, inlinedAt: !1184)
!1213 = !DILocation(line: 219, column: 12, scope: !1150)
!1214 = !DILocation(line: 223, column: 13, scope: !1150)
!1215 = !DILocation(line: 219, column: 9, scope: !1150)
!1216 = !DILocation(line: 221, column: 47, scope: !1150)
!1217 = !DILocalVariable(name: "ptr", scope: !1218, file: !195, line: 221, type: !224, align: 8)
!1218 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hc66fe1711b96fc95E", scope: !201, file: !195, line: 196, type: !236, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !1219)
!1219 = !{!1217}
!1220 = !DILocation(line: 221, column: 27, scope: !1218, inlinedAt: !1221)
!1221 = !DILocation(line: 221, column: 27, scope: !1150)
!1222 = !DILocation(line: 221, column: 13, scope: !1150)
!1223 = !DILocation(line: 225, column: 6, scope: !1150)
!1224 = distinct !DISubprogram(name: "next<usize>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hf0c8e6a807a2d16cE", scope: !1225, file: !545, line: 710, type: !1226, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1238, retainedNodes: !1236)
!1225 = !DINamespace(name: "{impl#3}", scope: !547)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{!400, !1228}
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ops::range::Range<usize>", baseType: !1229, size: 64, align: 64, dwarfAddressSpace: 0)
!1229 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !1230, file: !2, size: 128, align: 64, elements: !1231, templateParams: !1234, identifier: "855eb37746b15049ea4556b174e97dd7")
!1230 = !DINamespace(name: "range", scope: !966)
!1231 = !{!1232, !1233}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1229, file: !2, baseType: !9, size: 64, align: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1229, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1234 = !{!1235}
!1235 = !DITemplateTypeParameter(name: "Idx", type: !9)
!1236 = !{!1237}
!1237 = !DILocalVariable(name: "self", arg: 1, scope: !1224, file: !545, line: 710, type: !1228)
!1238 = !{!1239}
!1239 = !DITemplateTypeParameter(name: "A", type: !9)
!1240 = !DILocation(line: 710, column: 13, scope: !1224)
!1241 = !DILocation(line: 711, column: 9, scope: !1224)
!1242 = !DILocation(line: 712, column: 6, scope: !1224)
!1243 = distinct !DISubprogram(name: "from_size_valid_align", linkageName: "_ZN4core5alloc6layout6Layout21from_size_valid_align17h553c75429d506699E", scope: !261, file: !1244, line: 77, type: !1245, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !1264)
!1244 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/alloc/layout.rs", directory: "", checksumkind: CSK_MD5, checksum: "2d0ac208ee70c69b94b07d38255a5525")
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!1247, !9, !267}
!1247 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", scope: !376, file: !2, size: 128, align: 64, elements: !1248, templateParams: !23, identifier: "61ed90a3a60bf5c9da25fda9753d7b5")
!1248 = !{!1249}
!1249 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1247, file: !2, size: 128, align: 64, elements: !1250, templateParams: !23, identifier: "e7bb3560bfa0d3445ee2359cfbf9e5fe", discriminator: !1263)
!1250 = !{!1251, !1259}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1249, file: !2, baseType: !1252, size: 128, align: 64)
!1252 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1247, file: !2, size: 128, align: 64, elements: !1253, templateParams: !1255, identifier: "1efd2a987c8fa52528b02bba0275d8c7")
!1253 = !{!1254}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1252, file: !2, baseType: !261, size: 128, align: 64)
!1255 = !{!1256, !1257}
!1256 = !DITemplateTypeParameter(name: "T", type: !261)
!1257 = !DITemplateTypeParameter(name: "E", type: !1258)
!1258 = !DICompositeType(tag: DW_TAG_structure_type, name: "LayoutError", scope: !262, file: !2, align: 8, elements: !23, identifier: "6e89e1d1b17d37435f7b87cb1d5cb26d")
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1249, file: !2, baseType: !1260, size: 128, align: 64, extraData: i64 0)
!1260 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1247, file: !2, size: 128, align: 64, elements: !1261, templateParams: !1255, identifier: "9488fb9df60d2b7e722ab2cffead9e28")
!1261 = !{!1262}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1260, file: !2, baseType: !1258, align: 8)
!1263 = !DIDerivedType(tag: DW_TAG_member, scope: !1247, file: !2, baseType: !99, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!1264 = !{!1265, !1266}
!1265 = !DILocalVariable(name: "size", arg: 1, scope: !1243, file: !1244, line: 77, type: !9)
!1266 = !DILocalVariable(name: "align", arg: 2, scope: !1243, file: !1244, line: 77, type: !267)
!1267 = !DILocation(line: 77, column: 36, scope: !1243)
!1268 = !DILocation(line: 77, column: 49, scope: !1243)
!1269 = !DILocalVariable(name: "self", scope: !1270, file: !1244, line: 92, type: !1273, align: 8)
!1270 = !DILexicalBlockFile(scope: !1271, file: !1244, discriminator: 0)
!1271 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17hc3e9e20e967012deE", scope: !1273, file: !1272, line: 82, type: !1277, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !1279)
!1272 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/nonzero.rs", directory: "", checksumkind: CSK_MD5, checksum: "f51cb88dd069db0b7fcd2123d03b69c9")
!1273 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonZeroUsize", scope: !1274, file: !2, size: 64, align: 64, elements: !1275, templateParams: !23, identifier: "c6c54dffb7a9517405cc55666c804e7")
!1274 = !DINamespace(name: "nonzero", scope: !562)
!1275 = !{!1276}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1273, file: !2, baseType: !9, size: 64, align: 64)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!9, !1273}
!1279 = !{!1269}
!1280 = !DILocation(line: 92, column: 42, scope: !1270, inlinedAt: !1281)
!1281 = !DILocation(line: 92, column: 42, scope: !1243)
!1282 = !DILocalVariable(name: "self", scope: !1283, file: !1244, line: 92, type: !267, align: 8)
!1283 = !DILexicalBlockFile(scope: !1284, file: !1244, discriminator: 0)
!1284 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1b1d76d92bec5242E", scope: !267, file: !1285, line: 39, type: !1286, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !1288)
!1285 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/valid_align.rs", directory: "", checksumkind: CSK_MD5, checksum: "681d44917f5a26aec3d3954431def51e")
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!1273, !267}
!1288 = !{!1282}
!1289 = !DILocation(line: 92, column: 42, scope: !1283, inlinedAt: !1281)
!1290 = !{i64 1, i64 -9223372036854775807}
!1291 = !DILocalVariable(name: "n", scope: !1292, file: !1244, line: 92, type: !9, align: 8)
!1292 = !DILexicalBlockFile(scope: !1293, file: !1244, discriminator: 0)
!1293 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h2d52a1a9b55eac1dE", scope: !1273, file: !1272, line: 56, type: !1294, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !1296)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!1273, !9}
!1296 = !{!1291, !1297}
!1297 = !DILocalVariable(name: "runtime", scope: !1298, file: !1244, line: 92, type: !1301, align: 8)
!1298 = !DILexicalBlockFile(scope: !1299, file: !1244, discriminator: 0)
!1299 = distinct !DILexicalBlock(scope: !1293, file: !1300, line: 2336, column: 13)
!1300 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "f96ba730d7cf23ae45fdc72e7caf5f1b")
!1301 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1302, file: !2, size: 64, align: 64, elements: !1304, templateParams: !23, identifier: "cbed2d88a1ec7b20c4ad53e8c9863d89")
!1302 = !DINamespace(name: "new_unchecked", scope: !1303)
!1303 = !DINamespace(name: "{impl#35}", scope: !1274)
!1304 = !{!1305}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__n", scope: !1301, file: !2, baseType: !592, size: 64, align: 64)
!1306 = !DILocation(line: 92, column: 42, scope: !1292, inlinedAt: !1307)
!1307 = !DILocation(line: 41, column: 18, scope: !1284, inlinedAt: !1281)
!1308 = !DILocation(line: 92, column: 41, scope: !1243)
!1309 = !DILocation(line: 92, column: 19, scope: !1243)
!1310 = !DILocation(line: 92, column: 12, scope: !1243)
!1311 = !DILocation(line: 97, column: 12, scope: !1243)
!1312 = !DILocation(line: 97, column: 9, scope: !1243)
!1313 = !DILocation(line: 98, column: 6, scope: !1243)
!1314 = !DILocation(line: 93, column: 20, scope: !1243)
!1315 = distinct !DISubprogram(name: "array<i32>", linkageName: "_ZN4core5alloc6layout6Layout5array17h68d132fe5c72c262E", scope: !261, file: !1244, line: 416, type: !1316, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !1318)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{!1247, !9}
!1318 = !{!1319, !1320, !1322, !1342}
!1319 = !DILocalVariable(name: "n", arg: 1, scope: !1315, file: !1244, line: 416, type: !9)
!1320 = !DILocalVariable(name: "array_size", scope: !1321, file: !1244, line: 417, type: !9, align: 8)
!1321 = distinct !DILexicalBlock(scope: !1315, file: !1244, line: 417, column: 9)
!1322 = !DILocalVariable(name: "residual", scope: !1323, file: !1244, line: 417, type: !1324, align: 1)
!1323 = distinct !DILexicalBlock(scope: !1315, file: !1244, line: 417, column: 79)
!1324 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::layout::LayoutError>", scope: !376, file: !2, align: 8, elements: !1325, templateParams: !23, identifier: "2408e7ead4450472646681a937f2eed")
!1325 = !{!1326}
!1326 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1324, file: !2, align: 8, elements: !1327, templateParams: !23, identifier: "6cbcec323d74ab47f813265a09655e1e")
!1327 = !{!1328, !1338}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1326, file: !2, baseType: !1329, align: 8)
!1329 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1324, file: !2, align: 8, elements: !1330, templateParams: !1336, identifier: "40ec0a271e0cb2d34d257ba58fdead82")
!1330 = !{!1331}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1329, file: !2, baseType: !1332, align: 8)
!1332 = !DICompositeType(tag: DW_TAG_structure_type, name: "Infallible", scope: !1333, file: !2, align: 8, elements: !1334, templateParams: !23, identifier: "54da939063c7c2baf203c9f582cd0995")
!1333 = !DINamespace(name: "convert", scope: !98)
!1334 = !{!1335}
!1335 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1332, file: !2, align: 8, elements: !23, identifier: "8a046f69014feadb4a5e941e4277afe9")
!1336 = !{!1337, !1257}
!1337 = !DITemplateTypeParameter(name: "T", type: !1332)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1326, file: !2, baseType: !1339, align: 8)
!1339 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1324, file: !2, align: 8, elements: !1340, templateParams: !1336, identifier: "72611e72c15211a4d55dae520b84155f")
!1340 = !{!1341}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1339, file: !2, baseType: !1258, align: 8)
!1342 = !DILocalVariable(name: "val", scope: !1343, file: !1244, line: 417, type: !9, align: 8)
!1343 = distinct !DILexicalBlock(scope: !1315, file: !1244, line: 417, column: 26)
!1344 = !DILocation(line: 416, column: 21, scope: !1315)
!1345 = !DILocalVariable(name: "self", scope: !1346, file: !1244, line: 417, type: !1369, align: 8)
!1346 = !DILexicalBlockFile(scope: !1347, file: !1244, discriminator: 0)
!1347 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he8db0dd413de086aE", scope: !1349, file: !1348, line: 2117, type: !1350, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1377, retainedNodes: !1383)
!1348 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "376d3f50f2b6d030dde9244768e6c6e1")
!1349 = !DINamespace(name: "{impl#27}", scope: !376)
!1350 = !DISubroutineType(types: !1351)
!1351 = !{!1352, !1369}
!1352 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>", scope: !1353, file: !2, size: 128, align: 64, elements: !1354, templateParams: !23, identifier: "ce5c98f9de0798e97388caf7b24b4edc")
!1353 = !DINamespace(name: "control_flow", scope: !966)
!1354 = !{!1355}
!1355 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1352, file: !2, size: 128, align: 64, elements: !1356, templateParams: !23, identifier: "6bdd8e43359c9849ce58ffeff4bb9b82", discriminator: !1368)
!1356 = !{!1357, !1364}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !1355, file: !2, baseType: !1358, size: 128, align: 64, extraData: i64 0)
!1358 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !1352, file: !2, size: 128, align: 64, elements: !1359, templateParams: !1361, identifier: "b6fdadee5e49b7207145efbc9b42a94a")
!1359 = !{!1360}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1358, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1361 = !{!1362, !1363}
!1362 = !DITemplateTypeParameter(name: "B", type: !1324)
!1363 = !DITemplateTypeParameter(name: "C", type: !9)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !1355, file: !2, baseType: !1365, size: 128, align: 64, extraData: i64 1)
!1365 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !1352, file: !2, size: 128, align: 64, elements: !1366, templateParams: !1361, identifier: "b5889c00b354165f6e6f55dba1990157")
!1366 = !{!1367}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1365, file: !2, baseType: !1324, align: 8, offset: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, scope: !1352, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagArtificial)
!1369 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, core::alloc::layout::LayoutError>", scope: !376, file: !2, size: 128, align: 64, elements: !1370, templateParams: !23, identifier: "c2a525df37a04684d727d3bb68e24786")
!1370 = !{!1371}
!1371 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1369, file: !2, size: 128, align: 64, elements: !1372, templateParams: !23, identifier: "59922648ff1b36fe1aa289683c505c74", discriminator: !1382)
!1372 = !{!1373, !1378}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1371, file: !2, baseType: !1374, size: 128, align: 64, extraData: i64 0)
!1374 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1369, file: !2, size: 128, align: 64, elements: !1375, templateParams: !1377, identifier: "98a9acae3d260aa3de9b86f4a7044881")
!1375 = !{!1376}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1374, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1377 = !{!408, !1257}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1371, file: !2, baseType: !1379, size: 128, align: 64, extraData: i64 1)
!1379 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1369, file: !2, size: 128, align: 64, elements: !1380, templateParams: !1377, identifier: "3430eaa712a080f75cd3b02585f182")
!1380 = !{!1381}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1379, file: !2, baseType: !1258, align: 8, offset: 64)
!1382 = !DIDerivedType(tag: DW_TAG_member, scope: !1369, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagArtificial)
!1383 = !{!1345, !1384, !1387}
!1384 = !DILocalVariable(name: "v", scope: !1385, file: !1244, line: 417, type: !9, align: 8)
!1385 = !DILexicalBlockFile(scope: !1386, file: !1244, discriminator: 0)
!1386 = distinct !DILexicalBlock(scope: !1347, file: !1348, line: 2119, column: 13)
!1387 = !DILocalVariable(name: "e", scope: !1388, file: !1244, line: 417, type: !1258, align: 1)
!1388 = !DILexicalBlockFile(scope: !1389, file: !1244, discriminator: 0)
!1389 = distinct !DILexicalBlock(scope: !1347, file: !1348, line: 2120, column: 13)
!1390 = !DILocation(line: 417, column: 26, scope: !1346, inlinedAt: !1391)
!1391 = !DILocation(line: 417, column: 26, scope: !1315)
!1392 = !DILocalVariable(name: "self", scope: !1393, file: !1244, line: 417, type: !400, align: 8)
!1393 = !DILexicalBlockFile(scope: !1394, file: !1244, discriminator: 0)
!1394 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h5d5ea661e39f2e29E", scope: !400, file: !1395, line: 1051, type: !1396, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1377, retainedNodes: !1398)
!1395 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "86a5483c3993f03690545387e943de77")
!1396 = !DISubroutineType(types: !1397)
!1397 = !{!1369, !400, !1258}
!1398 = !{!1392, !1399, !1400}
!1399 = !DILocalVariable(name: "err", scope: !1393, file: !1244, line: 417, type: !1258, align: 1)
!1400 = !DILocalVariable(name: "v", scope: !1401, file: !1244, line: 417, type: !9, align: 8)
!1401 = !DILexicalBlockFile(scope: !1402, file: !1244, discriminator: 0)
!1402 = distinct !DILexicalBlock(scope: !1394, file: !1395, line: 1056, column: 13)
!1403 = !DILocation(line: 417, column: 26, scope: !1393, inlinedAt: !1391)
!1404 = !DILocation(line: 417, column: 79, scope: !1323)
!1405 = !DILocalVariable(name: "residual", scope: !1406, file: !1244, line: 417, type: !1324, align: 1)
!1406 = !DILexicalBlockFile(scope: !1407, file: !1244, discriminator: 0)
!1407 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hdc98837af7f43204E", scope: !1408, file: !1348, line: 2132, type: !1409, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1415, retainedNodes: !1411)
!1408 = !DINamespace(name: "{impl#28}", scope: !376)
!1409 = !DISubroutineType(types: !1410)
!1410 = !{!1247, !1324, !869}
!1411 = !{!1405, !1412}
!1412 = !DILocalVariable(name: "e", scope: !1413, file: !1244, line: 417, type: !1258, align: 1)
!1413 = !DILexicalBlockFile(scope: !1414, file: !1244, discriminator: 0)
!1414 = distinct !DILexicalBlock(scope: !1407, file: !1348, line: 2134, column: 13)
!1415 = !{!1256, !1257, !1416}
!1416 = !DITemplateTypeParameter(name: "F", type: !1258)
!1417 = !DILocation(line: 417, column: 26, scope: !1406, inlinedAt: !1418)
!1418 = !DILocation(line: 417, column: 26, scope: !1323)
!1419 = !DILocation(line: 417, column: 26, scope: !1388, inlinedAt: !1391)
!1420 = !DILocation(line: 417, column: 26, scope: !1413, inlinedAt: !1418)
!1421 = !DILocation(line: 417, column: 26, scope: !1401, inlinedAt: !1391)
!1422 = !DILocation(line: 417, column: 26, scope: !1385, inlinedAt: !1391)
!1423 = !DILocation(line: 417, column: 26, scope: !1343)
!1424 = !DILocation(line: 417, column: 13, scope: !1321)
!1425 = !DILocation(line: 419, column: 51, scope: !1426, inlinedAt: !1430)
!1426 = !DILexicalBlockFile(scope: !1427, file: !1244, discriminator: 0)
!1427 = distinct !DISubprogram(name: "align_of<i32>", linkageName: "_ZN4core3mem8align_of17h569ffa138586200eE", scope: !97, file: !803, line: 464, type: !1428, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !23)
!1428 = !DISubroutineType(types: !1429)
!1429 = !{!9}
!1430 = !DILocation(line: 56, column: 44, scope: !1431, inlinedAt: !1434)
!1431 = distinct !DISubprogram(name: "of<i32>", linkageName: "_ZN4core3mem11valid_align10ValidAlign2of17h1f06fa6f0de9af5aE", scope: !267, file: !1285, line: 54, type: !1432, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !23)
!1432 = !DISubroutineType(types: !1433)
!1433 = !{!267}
!1434 = !DILocation(line: 419, column: 51, scope: !1321)
!1435 = !DILocalVariable(name: "align", scope: !1436, file: !1244, line: 419, type: !9, align: 8)
!1436 = !DILexicalBlockFile(scope: !1437, file: !1244, discriminator: 0)
!1437 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17he1b430b218f0d0b0E", scope: !267, file: !1285, line: 29, type: !1438, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !1440)
!1438 = !DISubroutineType(types: !1439)
!1439 = !{!267, !9}
!1440 = !{!1435, !1441}
!1441 = !DILocalVariable(name: "runtime", scope: !1442, file: !1244, line: 419, type: !1444, align: 8)
!1442 = !DILexicalBlockFile(scope: !1443, file: !1244, discriminator: 0)
!1443 = distinct !DILexicalBlock(scope: !1437, file: !1300, line: 2336, column: 13)
!1444 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1445, file: !2, size: 64, align: 64, elements: !1447, templateParams: !23, identifier: "a24236e50785a0359acaebf14a869a84")
!1445 = !DINamespace(name: "new_unchecked", scope: !1446)
!1446 = !DINamespace(name: "{impl#0}", scope: !96)
!1447 = !{!1448}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__align", scope: !1444, file: !2, baseType: !592, size: 64, align: 64)
!1449 = !DILocation(line: 419, column: 51, scope: !1436, inlinedAt: !1450)
!1450 = !DILocation(line: 56, column: 18, scope: !1431, inlinedAt: !1434)
!1451 = !DILocation(line: 420, column: 6, scope: !1315)
!1452 = !DILocation(line: 419, column: 9, scope: !1321)
!1453 = distinct !DISubprogram(name: "fmt<i32, 2>", linkageName: "_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17hf61e17d33cd8cebbE", scope: !1455, file: !1454, line: 251, type: !1457, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !1459)
!1454 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/array/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e237aff39bff30ac55984ee183267020")
!1455 = !DINamespace(name: "{impl#12}", scope: !1456)
!1456 = !DINamespace(name: "array", scope: !98)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!375, !62, !392}
!1459 = !{!1460, !1461}
!1460 = !DILocalVariable(name: "self", arg: 1, scope: !1453, file: !1454, line: 251, type: !62)
!1461 = !DILocalVariable(name: "f", arg: 2, scope: !1453, file: !1454, line: 251, type: !392)
!1462 = !DILocation(line: 251, column: 12, scope: !1453)
!1463 = !DILocation(line: 251, column: 19, scope: !1453)
!1464 = !DILocalVariable(name: "index", scope: !1465, file: !1454, line: 252, type: !1469, align: 1)
!1465 = distinct !DISubprogram(name: "index<i32, core::ops::range::RangeFull, 2>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hce05b11d6635bf9eE", scope: !1466, file: !1454, line: 285, type: !1467, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1472, retainedNodes: !1470)
!1466 = !DINamespace(name: "{impl#15}", scope: !1456)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{!453, !62, !1469, !869}
!1469 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFull", scope: !1230, file: !2, align: 8, elements: !23, identifier: "63a67109926f3a3dc00488fbc228c0f9")
!1470 = !{!1471, !1464}
!1471 = !DILocalVariable(name: "self", scope: !1465, file: !1454, line: 252, type: !62, align: 8)
!1472 = !{!462, !1473}
!1473 = !DITemplateTypeParameter(name: "I", type: !1469)
!1474 = !DILocation(line: 252, column: 27, scope: !1465, inlinedAt: !1475)
!1475 = !DILocation(line: 252, column: 27, scope: !1453)
!1476 = !DILocalVariable(name: "index", scope: !1477, file: !1454, line: 252, type: !1469, align: 1)
!1477 = !DILexicalBlockFile(scope: !1478, file: !1454, discriminator: 0)
!1478 = distinct !DISubprogram(name: "index<i32, core::ops::range::RangeFull>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h882c8fbdceadd379E", scope: !1480, file: !1479, line: 17, type: !1482, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1472, retainedNodes: !1484)
!1479 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "22a04328eca3d78fd2bf5357f9150928")
!1480 = !DINamespace(name: "{impl#0}", scope: !1481)
!1481 = !DINamespace(name: "index", scope: !525)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!453, !453, !1469, !869}
!1484 = !{!1485, !1476}
!1485 = !DILocalVariable(name: "self", scope: !1477, file: !1454, line: 252, type: !453, align: 8)
!1486 = !DILocation(line: 252, column: 27, scope: !1477, inlinedAt: !1487)
!1487 = !DILocation(line: 286, column: 9, scope: !1465, inlinedAt: !1475)
!1488 = !DILocalVariable(name: "self", scope: !1489, file: !1454, line: 252, type: !1469, align: 1)
!1489 = !DILexicalBlockFile(scope: !1490, file: !1454, discriminator: 0)
!1490 = distinct !DISubprogram(name: "index<i32>", linkageName: "_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h65870dbcf6fc88f4E", scope: !1491, file: !1479, line: 432, type: !1492, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !1494)
!1491 = !DINamespace(name: "{impl#6}", scope: !1481)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{!453, !1469, !453, !869}
!1494 = !{!1488, !1495}
!1495 = !DILocalVariable(name: "slice", scope: !1489, file: !1454, line: 252, type: !453, align: 8)
!1496 = !DILocation(line: 252, column: 27, scope: !1489, inlinedAt: !1497)
!1497 = !DILocation(line: 18, column: 9, scope: !1478, inlinedAt: !1487)
!1498 = !DILocation(line: 252, column: 26, scope: !1453)
!1499 = !DILocation(line: 252, column: 9, scope: !1453)
!1500 = !DILocation(line: 253, column: 6, scope: !1453)
!1501 = distinct !DISubprogram(name: "eq<i32, i32, 2>", linkageName: "_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h3b0eace8b98ef178E", scope: !1503, file: !1502, line: 11, type: !1505, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1510, retainedNodes: !1507)
!1502 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/array/equality.rs", directory: "", checksumkind: CSK_MD5, checksum: "0b2a6ef978d2ec8f60a33a03ff9f5cb8")
!1503 = !DINamespace(name: "{impl#0}", scope: !1504)
!1504 = !DINamespace(name: "equality", scope: !1456)
!1505 = !DISubroutineType(types: !1506)
!1506 = !{!43, !62, !62}
!1507 = !{!1508, !1509}
!1508 = !DILocalVariable(name: "self", arg: 1, scope: !1501, file: !1502, line: 11, type: !62)
!1509 = !DILocalVariable(name: "other", arg: 2, scope: !1501, file: !1502, line: 11, type: !62)
!1510 = !{!1511, !1512}
!1511 = !DITemplateTypeParameter(name: "A", type: !33)
!1512 = !DITemplateTypeParameter(name: "B", type: !33)
!1513 = !DILocation(line: 11, column: 11, scope: !1501)
!1514 = !DILocation(line: 11, column: 18, scope: !1501)
!1515 = !DILocation(line: 12, column: 9, scope: !1501)
!1516 = !DILocation(line: 13, column: 6, scope: !1501)
!1517 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i32$GT$5clone17h63aa2151c872ffb9E", scope: !1519, file: !1518, line: 189, type: !1522, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !1524)
!1518 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/clone.rs", directory: "", checksumkind: CSK_MD5, checksum: "3792fef4e5cf0c1ef2457d8c192d163d")
!1519 = !DINamespace(name: "{impl#14}", scope: !1520)
!1520 = !DINamespace(name: "impls", scope: !1521)
!1521 = !DINamespace(name: "clone", scope: !98)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!33, !32}
!1524 = !{!1525}
!1525 = !DILocalVariable(name: "self", arg: 1, scope: !1517, file: !1518, line: 189, type: !32)
!1526 = !DILocation(line: 189, column: 30, scope: !1517)
!1527 = !DILocation(line: 190, column: 25, scope: !1517)
!1528 = !DILocation(line: 191, column: 22, scope: !1517)
!1529 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h53131a1e2f102773E", scope: !1530, file: !1518, line: 189, type: !1531, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !1533)
!1530 = !DINamespace(name: "{impl#5}", scope: !1520)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{!9, !592}
!1533 = !{!1534}
!1534 = !DILocalVariable(name: "self", arg: 1, scope: !1529, file: !1518, line: 189, type: !592)
!1535 = !DILocation(line: 189, column: 30, scope: !1529)
!1536 = !DILocation(line: 190, column: 25, scope: !1529)
!1537 = !DILocation(line: 191, column: 22, scope: !1529)
!1538 = distinct !DISubprogram(name: "as_mut_ptr<u32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h11aa4d5bc39de937E", scope: !524, file: !523, line: 506, type: !1539, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !441, retainedNodes: !1547)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{!1541, !1542}
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u32", baseType: !53, size: 64, align: 64, dwarfAddressSpace: 0)
!1542 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [u32]", file: !2, size: 128, align: 64, elements: !1543, templateParams: !23, identifier: "4c36065ce7cb5e94d96acf304bf82e03")
!1543 = !{!1544, !1546}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1542, file: !2, baseType: !1545, size: 64, align: 64)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64, align: 64, dwarfAddressSpace: 0)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1542, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1547 = !{!1548}
!1548 = !DILocalVariable(name: "self", arg: 1, scope: !1538, file: !523, line: 506, type: !1542)
!1549 = !DILocation(line: 506, column: 29, scope: !1538)
!1550 = !DILocation(line: 507, column: 9, scope: !1538)
!1551 = !DILocation(line: 508, column: 6, scope: !1538)
!1552 = distinct !DISubprogram(name: "as_mut_ptr<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h219c650c35cacae1E", scope: !524, file: !523, line: 506, type: !1553, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !1560)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{!1555, !1556}
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut i32", baseType: !33, size: 64, align: 64, dwarfAddressSpace: 0)
!1556 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [i32]", file: !2, size: 128, align: 64, elements: !1557, templateParams: !23, identifier: "e558f8cebf02444c46b3d01510c8747d")
!1557 = !{!1558, !1559}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1556, file: !2, baseType: !456, size: 64, align: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1556, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1560 = !{!1561}
!1561 = !DILocalVariable(name: "self", arg: 1, scope: !1552, file: !523, line: 506, type: !1556)
!1562 = !DILocation(line: 506, column: 29, scope: !1552)
!1563 = !DILocation(line: 507, column: 9, scope: !1552)
!1564 = !DILocation(line: 508, column: 6, scope: !1552)
!1565 = distinct !DISubprogram(name: "as_mut_ptr<[[i32; 5]; 4]>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h57ea2a9e05028a3eE", scope: !524, file: !523, line: 506, type: !1566, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1580, retainedNodes: !1578)
!1566 = !DISubroutineType(types: !1567)
!1567 = !{!1568, !1573}
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut [[i32; 5]; 4]", baseType: !1569, size: 64, align: 64, dwarfAddressSpace: 0)
!1569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1570, size: 640, align: 32, elements: !72)
!1570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 160, align: 32, elements: !1571)
!1571 = !{!1572}
!1572 = !DISubrange(count: 5, lowerBound: 0)
!1573 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [[[i32; 5]; 4]]", file: !2, size: 128, align: 64, elements: !1574, templateParams: !23, identifier: "9d2feb748d1fc727ac308b3c59e2330e")
!1574 = !{!1575, !1577}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1573, file: !2, baseType: !1576, size: 64, align: 64)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64, align: 64, dwarfAddressSpace: 0)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1573, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1578 = !{!1579}
!1579 = !DILocalVariable(name: "self", arg: 1, scope: !1565, file: !523, line: 506, type: !1573)
!1580 = !{!1581}
!1581 = !DITemplateTypeParameter(name: "T", type: !1569)
!1582 = !DILocation(line: 506, column: 29, scope: !1565)
!1583 = !DILocation(line: 507, column: 9, scope: !1565)
!1584 = !DILocation(line: 508, column: 6, scope: !1565)
!1585 = distinct !DISubprogram(name: "as_mut_ptr<i8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hac7faaeaafda87e0E", scope: !524, file: !523, line: 506, type: !1586, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1595, retainedNodes: !1593)
!1586 = !DISubroutineType(types: !1587)
!1587 = !{!86, !1588}
!1588 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [i8]", file: !2, size: 128, align: 64, elements: !1589, templateParams: !23, identifier: "853add56ec460b77b26ca0cac8dad9d")
!1589 = !{!1590, !1592}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1588, file: !2, baseType: !1591, size: 64, align: 64)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64, align: 64, dwarfAddressSpace: 0)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1588, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1593 = !{!1594}
!1594 = !DILocalVariable(name: "self", arg: 1, scope: !1585, file: !523, line: 506, type: !1588)
!1595 = !{!1596}
!1596 = !DITemplateTypeParameter(name: "T", type: !81)
!1597 = !DILocation(line: 506, column: 29, scope: !1585)
!1598 = !DILocation(line: 507, column: 9, scope: !1585)
!1599 = !DILocation(line: 508, column: 6, scope: !1585)
!1600 = distinct !DISubprogram(name: "as_mut_ptr<[i32; 5]>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hd2020a2d1ced27d1E", scope: !524, file: !523, line: 506, type: !1601, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1611, retainedNodes: !1609)
!1601 = !DISubroutineType(types: !1602)
!1602 = !{!1603, !1604}
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut [i32; 5]", baseType: !1570, size: 64, align: 64, dwarfAddressSpace: 0)
!1604 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [[i32; 5]]", file: !2, size: 128, align: 64, elements: !1605, templateParams: !23, identifier: "374362077b729e3ede5a088ac8fc2f11")
!1605 = !{!1606, !1608}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1604, file: !2, baseType: !1607, size: 64, align: 64)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64, align: 64, dwarfAddressSpace: 0)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1604, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1609 = !{!1610}
!1610 = !DILocalVariable(name: "self", arg: 1, scope: !1600, file: !523, line: 506, type: !1604)
!1611 = !{!1612}
!1612 = !DITemplateTypeParameter(name: "T", type: !1570)
!1613 = !DILocation(line: 506, column: 29, scope: !1600)
!1614 = !DILocation(line: 507, column: 9, scope: !1600)
!1615 = !DILocation(line: 508, column: 6, scope: !1600)
!1616 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h1eda4966a3efb19dE", scope: !524, file: !523, line: 476, type: !1617, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !1619)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!535, !453}
!1619 = !{!1620}
!1620 = !DILocalVariable(name: "self", arg: 1, scope: !1616, file: !523, line: 476, type: !453)
!1621 = !DILocation(line: 476, column: 25, scope: !1616)
!1622 = !DILocation(line: 477, column: 9, scope: !1616)
!1623 = !DILocation(line: 478, column: 6, scope: !1616)
!1624 = distinct !DISubprogram(name: "new<i32>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17he358f5b01646211cE", scope: !528, file: !1625, line: 88, type: !526, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !1626)
!1625 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "36678af40fdc22d7150f6f91e11271b3")
!1626 = !{!1627, !1628, !1630}
!1627 = !DILocalVariable(name: "slice", arg: 1, scope: !1624, file: !1625, line: 88, type: !453)
!1628 = !DILocalVariable(name: "ptr", scope: !1629, file: !1625, line: 89, type: !535, align: 8)
!1629 = distinct !DILexicalBlock(scope: !1624, file: !1625, line: 89, column: 9)
!1630 = !DILocalVariable(name: "end", scope: !1631, file: !1625, line: 94, type: !535, align: 8)
!1631 = distinct !DILexicalBlock(scope: !1629, file: !1625, line: 94, column: 13)
!1632 = !DILocation(line: 88, column: 23, scope: !1624)
!1633 = !DILocation(line: 94, column: 17, scope: !1631)
!1634 = !DILocalVariable(name: "metadata", scope: !1635, file: !1625, line: 92, type: !7, align: 1)
!1635 = !DILexicalBlockFile(scope: !1636, file: !1625, discriminator: 0)
!1636 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h5bb22926a456e3e7E", scope: !1173, file: !1172, line: 110, type: !1637, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !1639)
!1637 = !DISubroutineType(types: !1638)
!1638 = !{!204, !6, !7}
!1639 = !{!1640, !1634}
!1640 = !DILocalVariable(name: "data_address", scope: !1635, file: !1625, line: 92, type: !6, align: 8)
!1641 = !DILocation(line: 92, column: 21, scope: !1635, inlinedAt: !1642)
!1642 = !DILocation(line: 513, column: 5, scope: !1643, inlinedAt: !1646)
!1643 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17h5b4d995a46e58f0cE", scope: !198, file: !817, line: 512, type: !1644, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !23)
!1644 = !DISubroutineType(types: !1645)
!1645 = !{!204}
!1646 = !DILocation(line: 39, column: 43, scope: !1647, inlinedAt: !1656)
!1647 = distinct !DISubprogram(name: "is_null<i32>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hc33852f37e7fcec3E", scope: !1649, file: !1648, line: 36, type: !1651, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !1653)
!1648 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "1874e43cb83f8af3048974827047cb9c")
!1649 = !DINamespace(name: "{impl#0}", scope: !1650)
!1650 = !DINamespace(name: "const_ptr", scope: !198)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{!43, !535}
!1653 = !{!1654}
!1654 = !DILocalVariable(name: "self", scope: !1655, file: !1625, line: 92, type: !535, align: 8)
!1655 = !DILexicalBlockFile(scope: !1647, file: !1625, discriminator: 0)
!1656 = !DILocation(line: 92, column: 21, scope: !1629)
!1657 = !DILocation(line: 89, column: 19, scope: !1624)
!1658 = !DILocalVariable(name: "self", scope: !1659, file: !1625, line: 89, type: !453, align: 8)
!1659 = !DILexicalBlockFile(scope: !1660, file: !1625, discriminator: 0)
!1660 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h1eda4966a3efb19dE", scope: !524, file: !523, line: 476, type: !1617, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !1661)
!1661 = !{!1658}
!1662 = !DILocation(line: 89, column: 19, scope: !1659, inlinedAt: !1657)
!1663 = !DILocation(line: 89, column: 13, scope: !1629)
!1664 = !DILocation(line: 92, column: 21, scope: !1655, inlinedAt: !1656)
!1665 = !DILocalVariable(name: "self", scope: !1666, file: !1625, line: 92, type: !204, align: 8)
!1666 = !DILexicalBlockFile(scope: !1667, file: !1625, discriminator: 0)
!1667 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h99649a1342ba48d4E", scope: !1649, file: !1648, line: 777, type: !1668, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !1670)
!1668 = !DISubroutineType(types: !1669)
!1669 = !{!43, !204, !204}
!1670 = !{!1665, !1671}
!1671 = !DILocalVariable(name: "other", scope: !1666, file: !1625, line: 92, type: !204, align: 8)
!1672 = !DILocation(line: 92, column: 21, scope: !1666, inlinedAt: !1673)
!1673 = !DILocation(line: 39, column: 9, scope: !1647, inlinedAt: !1656)
!1674 = !DILocation(line: 92, column: 21, scope: !1675, inlinedAt: !1681)
!1675 = !DILexicalBlockFile(scope: !1676, file: !1625, discriminator: 0)
!1676 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h836cdbe426db23cbE", scope: !198, file: !817, line: 538, type: !1677, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !301, retainedNodes: !1679)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{!6, !9}
!1679 = !{!1680}
!1680 = !DILocalVariable(name: "addr", scope: !1675, file: !1625, line: 92, type: !9, align: 8)
!1681 = !DILocation(line: 513, column: 20, scope: !1643, inlinedAt: !1646)
!1682 = !DILocation(line: 92, column: 20, scope: !1629)
!1683 = !DILocation(line: 92, column: 13, scope: !1629)
!1684 = !DILocation(line: 94, column: 26, scope: !1629)
!1685 = !DILocation(line: 95, column: 17, scope: !1629)
!1686 = !DILocalVariable(name: "self", scope: !1687, file: !1625, line: 95, type: !204, align: 8)
!1687 = !DILexicalBlockFile(scope: !1688, file: !1625, discriminator: 0)
!1688 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17he7c8db07b66261bbE", scope: !1649, file: !1648, line: 1042, type: !1689, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !1691)
!1689 = !DISubroutineType(types: !1690)
!1690 = !{!204, !204, !9}
!1691 = !{!1686, !1692}
!1692 = !DILocalVariable(name: "count", scope: !1687, file: !1625, line: 95, type: !9, align: 8)
!1693 = !DILocation(line: 95, column: 17, scope: !1687, inlinedAt: !1685)
!1694 = !DILocation(line: 95, column: 49, scope: !1629)
!1695 = !DILocalVariable(name: "self", scope: !1696, file: !1625, line: 95, type: !204, align: 8)
!1696 = !DILexicalBlockFile(scope: !1697, file: !1625, discriminator: 0)
!1697 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17ha71d60e195e224daE", scope: !1649, file: !1648, line: 536, type: !1698, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !1700)
!1698 = !DISubroutineType(types: !1699)
!1699 = !{!204, !204, !313}
!1700 = !{!1695, !1701}
!1701 = !DILocalVariable(name: "count", scope: !1696, file: !1625, line: 95, type: !313, align: 8)
!1702 = !DILocation(line: 95, column: 17, scope: !1696, inlinedAt: !1703)
!1703 = !DILocation(line: 1046, column: 9, scope: !1688, inlinedAt: !1685)
!1704 = !DILocation(line: 97, column: 17, scope: !1629)
!1705 = !DILocalVariable(name: "self", scope: !1706, file: !1625, line: 97, type: !535, align: 8)
!1706 = !DILexicalBlockFile(scope: !1707, file: !1625, discriminator: 0)
!1707 = distinct !DISubprogram(name: "add<i32>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hf2cd77eb35d0b1ccE", scope: !1649, file: !1648, line: 871, type: !1708, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !1710)
!1708 = !DISubroutineType(types: !1709)
!1709 = !{!535, !535, !9}
!1710 = !{!1705, !1711}
!1711 = !DILocalVariable(name: "count", scope: !1706, file: !1625, line: 97, type: !9, align: 8)
!1712 = !DILocation(line: 97, column: 17, scope: !1706, inlinedAt: !1704)
!1713 = !DILocation(line: 97, column: 25, scope: !1629)
!1714 = !DILocalVariable(name: "self", scope: !1715, file: !1625, line: 97, type: !535, align: 8)
!1715 = !DILexicalBlockFile(scope: !1716, file: !1625, discriminator: 0)
!1716 = distinct !DISubprogram(name: "offset<i32>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h9f8b2166a4edd168E", scope: !1649, file: !1648, line: 453, type: !1717, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !1719)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{!535, !535, !313}
!1719 = !{!1714, !1720}
!1720 = !DILocalVariable(name: "count", scope: !1715, file: !1625, line: 97, type: !313, align: 8)
!1721 = !DILocation(line: 97, column: 17, scope: !1715, inlinedAt: !1722)
!1722 = !DILocation(line: 876, column: 18, scope: !1707, inlinedAt: !1704)
!1723 = !DILocation(line: 94, column: 23, scope: !1629)
!1724 = !DILocation(line: 100, column: 48, scope: !1631)
!1725 = !DILocalVariable(name: "ptr", scope: !1726, file: !1625, line: 100, type: !1555, align: 8)
!1726 = !DILexicalBlockFile(scope: !1727, file: !1625, discriminator: 0)
!1727 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17he381bebfe6eab803E", scope: !532, file: !195, line: 196, type: !1728, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !1730)
!1728 = !DISubroutineType(types: !1729)
!1729 = !{!532, !1555}
!1730 = !{!1725}
!1731 = !DILocation(line: 100, column: 25, scope: !1726, inlinedAt: !1732)
!1732 = !DILocation(line: 100, column: 25, scope: !1631)
!1733 = !DILocation(line: 100, column: 64, scope: !1631)
!1734 = !DILocation(line: 100, column: 13, scope: !1631)
!1735 = !DILocation(line: 102, column: 6, scope: !1624)
!1736 = distinct !DISubprogram(name: "map_err<(), alloc::collections::TryReserveError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::handle_reserve::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h40accc27149908dbE", scope: !1737, file: !1348, line: 852, type: !1752, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1778, retainedNodes: !1771)
!1737 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveError>", scope: !376, file: !2, size: 128, align: 64, elements: !1738, templateParams: !23, identifier: "4b89620c7f2c166f553026a950f3f2d2")
!1738 = !{!1739}
!1739 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1737, file: !2, size: 128, align: 64, elements: !1740, templateParams: !23, identifier: "7cb265f2a07c8821328b46cc3c388b7f", discriminator: !1751)
!1740 = !{!1741, !1747}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1739, file: !2, baseType: !1742, size: 128, align: 64, extraData: i64 -9223372036854775807)
!1742 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1737, file: !2, size: 128, align: 64, elements: !1743, templateParams: !1745, identifier: "fdce6ff40bcf3f7ab3b51ba04b7afc44")
!1743 = !{!1744}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1742, file: !2, baseType: !7, align: 8)
!1745 = !{!290, !1746}
!1746 = !DITemplateTypeParameter(name: "E", type: !248)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1739, file: !2, baseType: !1748, size: 128, align: 64)
!1748 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1737, file: !2, size: 128, align: 64, elements: !1749, templateParams: !1745, identifier: "d84ca0f977a325112ceaab4e30797620")
!1749 = !{!1750}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1748, file: !2, baseType: !248, size: 128, align: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, scope: !1737, file: !2, baseType: !99, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!1752 = !DISubroutineType(types: !1753)
!1753 = !{!1754, !1737, !1769}
!1754 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveErrorKind>", scope: !376, file: !2, size: 128, align: 64, elements: !1755, templateParams: !23, identifier: "cdc62e1ada228a0a3eeb1363cc168dd1")
!1755 = !{!1756}
!1756 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1754, file: !2, size: 128, align: 64, elements: !1757, templateParams: !23, identifier: "c07cde87a483df02fa92a38d58df4905", discriminator: !1768)
!1757 = !{!1758, !1764}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1756, file: !2, baseType: !1759, size: 128, align: 64, extraData: i64 -9223372036854775807)
!1759 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1754, file: !2, size: 128, align: 64, elements: !1760, templateParams: !1762, identifier: "ef69269b9f8a8dcfd892b17f0cd69f3b")
!1760 = !{!1761}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1759, file: !2, baseType: !7, align: 8)
!1762 = !{!290, !1763}
!1763 = !DITemplateTypeParameter(name: "E", type: !251)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1756, file: !2, baseType: !1765, size: 128, align: 64)
!1765 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1754, file: !2, size: 128, align: 64, elements: !1766, templateParams: !1762, identifier: "d1e764ecae8c88012ac4b46bb3413624")
!1766 = !{!1767}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1765, file: !2, baseType: !251, size: 128, align: 64)
!1768 = !DIDerivedType(tag: DW_TAG_member, scope: !1754, file: !2, baseType: !99, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!1769 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1770, file: !2, align: 8, elements: !23, identifier: "38662dde61d7b1e78dacba2cb2773d17")
!1770 = !DINamespace(name: "handle_reserve", scope: !188)
!1771 = !{!1772, !1773, !1774, !1776}
!1772 = !DILocalVariable(name: "self", arg: 1, scope: !1736, file: !1348, line: 852, type: !1737)
!1773 = !DILocalVariable(name: "op", arg: 2, scope: !1736, file: !1348, line: 852, type: !1769)
!1774 = !DILocalVariable(name: "t", scope: !1775, file: !1348, line: 854, type: !7, align: 1)
!1775 = distinct !DILexicalBlock(scope: !1736, file: !1348, line: 854, column: 13)
!1776 = !DILocalVariable(name: "e", scope: !1777, file: !1348, line: 855, type: !248, align: 8)
!1777 = distinct !DILexicalBlock(scope: !1736, file: !1348, line: 855, column: 13)
!1778 = !{!290, !1746, !1779, !1780}
!1779 = !DITemplateTypeParameter(name: "F", type: !251)
!1780 = !DITemplateTypeParameter(name: "O", type: !1769)
!1781 = !DILocation(line: 852, column: 42, scope: !1736)
!1782 = !DILocation(line: 852, column: 48, scope: !1736)
!1783 = !DILocation(line: 854, column: 16, scope: !1775)
!1784 = !DILocation(line: 853, column: 15, scope: !1736)
!1785 = !{i64 0, i64 -9223372036854775806}
!1786 = !DILocation(line: 853, column: 9, scope: !1736)
!1787 = !DILocation(line: 854, column: 22, scope: !1775)
!1788 = !DILocation(line: 854, column: 26, scope: !1736)
!1789 = !DILocation(line: 855, column: 17, scope: !1736)
!1790 = !DILocation(line: 855, column: 17, scope: !1777)
!1791 = !DILocation(line: 855, column: 27, scope: !1777)
!1792 = !DILocation(line: 855, column: 23, scope: !1777)
!1793 = !DILocation(line: 855, column: 32, scope: !1736)
!1794 = !DILocation(line: 857, column: 5, scope: !1736)
!1795 = !DILocation(line: 857, column: 6, scope: !1736)
!1796 = distinct !DISubprogram(name: "map_err<core::alloc::layout::Layout, core::alloc::layout::LayoutError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::finish_grow::{closure_env#0}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h5f0e4ab3a95b708bE", scope: !1247, file: !1348, line: 852, type: !1797, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1822, retainedNodes: !1815)
!1797 = !DISubroutineType(types: !1798)
!1798 = !{!1799, !1247, !1813}
!1799 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", scope: !376, file: !2, size: 192, align: 64, elements: !1800, templateParams: !23, identifier: "b9de8b8c009cd0becb59806c6ce8cc5f")
!1800 = !{!1801}
!1801 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1799, file: !2, size: 192, align: 64, elements: !1802, templateParams: !23, identifier: "2c02efbe3ea4d75026f025a2705c6c96", discriminator: !1812)
!1802 = !{!1803, !1808}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1801, file: !2, baseType: !1804, size: 192, align: 64, extraData: i64 0)
!1804 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1799, file: !2, size: 192, align: 64, elements: !1805, templateParams: !1807, identifier: "d52268884abf5d8c9a943cd013eaf021")
!1805 = !{!1806}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1804, file: !2, baseType: !261, size: 128, align: 64, offset: 64)
!1807 = !{!1256, !1763}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1801, file: !2, baseType: !1809, size: 192, align: 64, extraData: i64 1)
!1809 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1799, file: !2, size: 192, align: 64, elements: !1810, templateParams: !1807, identifier: "8793f3a2507382c45ebef37ef1c4bc40")
!1810 = !{!1811}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1809, file: !2, baseType: !251, size: 128, align: 64, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, scope: !1799, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagArtificial)
!1813 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::alloc::Global>", scope: !1814, file: !2, align: 8, elements: !23, identifier: "f2bae2d168b0d8fd3c59ff569110796d")
!1814 = !DINamespace(name: "finish_grow", scope: !188)
!1815 = !{!1816, !1817, !1818, !1820}
!1816 = !DILocalVariable(name: "self", arg: 1, scope: !1796, file: !1348, line: 852, type: !1247)
!1817 = !DILocalVariable(name: "op", arg: 2, scope: !1796, file: !1348, line: 852, type: !1813)
!1818 = !DILocalVariable(name: "t", scope: !1819, file: !1348, line: 854, type: !261, align: 8)
!1819 = distinct !DILexicalBlock(scope: !1796, file: !1348, line: 854, column: 13)
!1820 = !DILocalVariable(name: "e", scope: !1821, file: !1348, line: 855, type: !1258, align: 1)
!1821 = distinct !DILexicalBlock(scope: !1796, file: !1348, line: 855, column: 13)
!1822 = !{!1256, !1257, !1779, !1823}
!1823 = !DITemplateTypeParameter(name: "O", type: !1813)
!1824 = !DILocation(line: 852, column: 42, scope: !1796)
!1825 = !DILocation(line: 852, column: 48, scope: !1796)
!1826 = !DILocation(line: 855, column: 17, scope: !1821)
!1827 = !DILocation(line: 853, column: 15, scope: !1796)
!1828 = !DILocation(line: 853, column: 9, scope: !1796)
!1829 = !DILocation(line: 854, column: 16, scope: !1796)
!1830 = !DILocation(line: 854, column: 16, scope: !1819)
!1831 = !DILocation(line: 854, column: 22, scope: !1819)
!1832 = !DILocation(line: 854, column: 26, scope: !1796)
!1833 = !DILocation(line: 855, column: 27, scope: !1821)
!1834 = !DILocation(line: 855, column: 23, scope: !1821)
!1835 = !DILocation(line: 855, column: 32, scope: !1796)
!1836 = !DILocation(line: 857, column: 5, scope: !1796)
!1837 = !DILocation(line: 857, column: 6, scope: !1796)
!1838 = distinct !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveError, alloc::raw_vec::finish_grow::{closure_env#1}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc3512111e253ca43E", scope: !1839, file: !1348, line: 852, type: !1863, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1890, retainedNodes: !1883)
!1839 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", scope: !376, file: !2, size: 128, align: 64, elements: !1840, templateParams: !23, identifier: "326c2eceea8ace7e7c754e4033de99df")
!1840 = !{!1841}
!1841 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1839, file: !2, size: 128, align: 64, elements: !1842, templateParams: !23, identifier: "55535437789a1bb6b6e72f8531454ed7", discriminator: !1862)
!1842 = !{!1843, !1858}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1841, file: !2, baseType: !1844, size: 128, align: 64)
!1844 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1839, file: !2, size: 128, align: 64, elements: !1845, templateParams: !1854, identifier: "ba797c89d5b07ad053fbf7cf4701a55")
!1845 = !{!1846}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1844, file: !2, baseType: !1847, size: 128, align: 64)
!1847 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8]>", scope: !197, file: !2, size: 128, align: 64, elements: !1848, templateParams: !205, identifier: "5fc58ef498feac33c505ded838596228")
!1848 = !{!1849}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1847, file: !2, baseType: !1850, size: 128, align: 64)
!1850 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !2, size: 128, align: 64, elements: !1851, templateParams: !23, identifier: "7b54d414f2f329e57c9aa3e4ca07f4")
!1851 = !{!1852, !1853}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1850, file: !2, baseType: !734, size: 64, align: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1850, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1854 = !{!1855, !1856}
!1855 = !DITemplateTypeParameter(name: "T", type: !1847)
!1856 = !DITemplateTypeParameter(name: "E", type: !1857)
!1857 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !263, file: !2, align: 8, elements: !23, identifier: "34d6c5a45c099706becbbcb30500973a")
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1841, file: !2, baseType: !1859, size: 128, align: 64, extraData: i64 0)
!1859 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1839, file: !2, size: 128, align: 64, elements: !1860, templateParams: !1854, identifier: "136305b53d5a9b78b331b3b0fa91ec26")
!1860 = !{!1861}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1859, file: !2, baseType: !1857, align: 8)
!1862 = !DIDerivedType(tag: DW_TAG_member, scope: !1839, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagArtificial)
!1863 = !DISubroutineType(types: !1864)
!1864 = !{!1865, !1839, !1879}
!1865 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", scope: !376, file: !2, size: 192, align: 64, elements: !1866, templateParams: !23, identifier: "601fd7588d09095b28b20a9eb093c288")
!1866 = !{!1867}
!1867 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1865, file: !2, size: 192, align: 64, elements: !1868, templateParams: !23, identifier: "3025750a6e319fc619c06f01e4832005", discriminator: !1878)
!1868 = !{!1869, !1874}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1867, file: !2, baseType: !1870, size: 192, align: 64, extraData: i64 0)
!1870 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1865, file: !2, size: 192, align: 64, elements: !1871, templateParams: !1873, identifier: "c3a563ea9d0ebe44c356aab410dc20ec")
!1871 = !{!1872}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1870, file: !2, baseType: !1847, size: 128, align: 64, offset: 64)
!1873 = !{!1855, !1746}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1867, file: !2, baseType: !1875, size: 192, align: 64, extraData: i64 1)
!1875 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1865, file: !2, size: 192, align: 64, elements: !1876, templateParams: !1873, identifier: "b98766a8ef41cfa7c1a20700f8c2ac67")
!1876 = !{!1877}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1875, file: !2, baseType: !248, size: 128, align: 64, offset: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, scope: !1865, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagArtificial)
!1879 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<alloc::alloc::Global>", scope: !1814, file: !2, size: 64, align: 64, elements: !1880, templateParams: !23, identifier: "d5ca5ecf61bc300819ddcb9ae83470a1")
!1880 = !{!1881}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__new_layout", scope: !1879, file: !2, baseType: !1882, size: 64, align: 64)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::alloc::layout::Layout", baseType: !261, size: 64, align: 64, dwarfAddressSpace: 0)
!1883 = !{!1884, !1885, !1886, !1888}
!1884 = !DILocalVariable(name: "self", arg: 1, scope: !1838, file: !1348, line: 852, type: !1839)
!1885 = !DILocalVariable(name: "op", arg: 2, scope: !1838, file: !1348, line: 852, type: !1879)
!1886 = !DILocalVariable(name: "t", scope: !1887, file: !1348, line: 854, type: !1847, align: 8)
!1887 = distinct !DILexicalBlock(scope: !1838, file: !1348, line: 854, column: 13)
!1888 = !DILocalVariable(name: "e", scope: !1889, file: !1348, line: 855, type: !1857, align: 1)
!1889 = distinct !DILexicalBlock(scope: !1838, file: !1348, line: 855, column: 13)
!1890 = !{!1855, !1856, !1891, !1892}
!1891 = !DITemplateTypeParameter(name: "F", type: !248)
!1892 = !DITemplateTypeParameter(name: "O", type: !1879)
!1893 = !DILocation(line: 852, column: 42, scope: !1838)
!1894 = !DILocation(line: 852, column: 48, scope: !1838)
!1895 = !DILocation(line: 855, column: 17, scope: !1889)
!1896 = !DILocation(line: 853, column: 15, scope: !1838)
!1897 = !DILocation(line: 853, column: 9, scope: !1838)
!1898 = !DILocation(line: 854, column: 16, scope: !1838)
!1899 = !DILocation(line: 854, column: 16, scope: !1887)
!1900 = !DILocation(line: 854, column: 22, scope: !1887)
!1901 = !DILocation(line: 854, column: 26, scope: !1838)
!1902 = !DILocation(line: 855, column: 27, scope: !1889)
!1903 = !DILocation(line: 855, column: 23, scope: !1889)
!1904 = !DILocation(line: 855, column: 32, scope: !1838)
!1905 = !DILocation(line: 857, column: 5, scope: !1838)
!1906 = !DILocation(line: 857, column: 6, scope: !1838)
!1907 = distinct !DISubprogram(name: "assert_failed<bool, bool>", linkageName: "_ZN4core9panicking13assert_failed17h2667433552fdca02E", scope: !182, file: !1908, line: 171, type: !1909, scopeLine: 171, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1929, retainedNodes: !1924)
!1908 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/panicking.rs", directory: "", checksumkind: CSK_MD5, checksum: "89dbfc153a7177bd0202715dd5809289")
!1909 = !DISubroutineType(types: !1910)
!1910 = !{null, !181, !42, !42, !1911, !869}
!1911 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::fmt::Arguments>", scope: !401, file: !2, size: 384, align: 64, elements: !1912, templateParams: !23, identifier: "91782c25c0cb4075178b67ca76527846")
!1912 = !{!1913}
!1913 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1911, file: !2, size: 384, align: 64, elements: !1914, templateParams: !23, identifier: "d3d8c93b36d851336035bb39c7913979", discriminator: !1923)
!1914 = !{!1915, !1919}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1913, file: !2, baseType: !1916, size: 384, align: 64, extraData: i64 0)
!1916 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1911, file: !2, size: 384, align: 64, elements: !23, templateParams: !1917, identifier: "94094742b636673213b46bf0a5389cae")
!1917 = !{!1918}
!1918 = !DITemplateTypeParameter(name: "T", type: !724)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1913, file: !2, baseType: !1920, size: 384, align: 64)
!1920 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1911, file: !2, size: 384, align: 64, elements: !1921, templateParams: !1917, identifier: "424137f74f76139e10918065dfb817dc")
!1921 = !{!1922}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1920, file: !2, baseType: !724, size: 384, align: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, scope: !1911, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagArtificial)
!1924 = !{!1925, !1926, !1927, !1928}
!1925 = !DILocalVariable(name: "kind", arg: 1, scope: !1907, file: !1908, line: 172, type: !181)
!1926 = !DILocalVariable(name: "left", arg: 2, scope: !1907, file: !1908, line: 173, type: !42)
!1927 = !DILocalVariable(name: "right", arg: 3, scope: !1907, file: !1908, line: 174, type: !42)
!1928 = !DILocalVariable(name: "args", arg: 4, scope: !1907, file: !1908, line: 175, type: !1911)
!1929 = !{!502, !1930}
!1930 = !DITemplateTypeParameter(name: "U", type: !43)
!1931 = !DILocation(line: 172, column: 5, scope: !1907)
!1932 = !DILocation(line: 173, column: 5, scope: !1907)
!1933 = !DILocation(line: 174, column: 5, scope: !1907)
!1934 = !DILocation(line: 175, column: 5, scope: !1907)
!1935 = !DILocation(line: 181, column: 31, scope: !1907)
!1936 = !DILocation(line: 181, column: 38, scope: !1907)
!1937 = !DILocation(line: 181, column: 46, scope: !1907)
!1938 = !DILocation(line: 181, column: 5, scope: !1907)
!1939 = distinct !DISubprogram(name: "assert_failed<i32, i32>", linkageName: "_ZN4core9panicking13assert_failed17h5179245ed6beeeebE", scope: !182, file: !1908, line: 171, type: !1940, scopeLine: 171, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1947, retainedNodes: !1942)
!1940 = !DISubroutineType(types: !1941)
!1941 = !{null, !181, !32, !32, !1911, !869}
!1942 = !{!1943, !1944, !1945, !1946}
!1943 = !DILocalVariable(name: "kind", arg: 1, scope: !1939, file: !1908, line: 172, type: !181)
!1944 = !DILocalVariable(name: "left", arg: 2, scope: !1939, file: !1908, line: 173, type: !32)
!1945 = !DILocalVariable(name: "right", arg: 3, scope: !1939, file: !1908, line: 174, type: !32)
!1946 = !DILocalVariable(name: "args", arg: 4, scope: !1939, file: !1908, line: 175, type: !1911)
!1947 = !{!462, !1948}
!1948 = !DITemplateTypeParameter(name: "U", type: !33)
!1949 = !DILocation(line: 172, column: 5, scope: !1939)
!1950 = !DILocation(line: 173, column: 5, scope: !1939)
!1951 = !DILocation(line: 174, column: 5, scope: !1939)
!1952 = !DILocation(line: 175, column: 5, scope: !1939)
!1953 = !DILocation(line: 181, column: 31, scope: !1939)
!1954 = !DILocation(line: 181, column: 38, scope: !1939)
!1955 = !DILocation(line: 181, column: 46, scope: !1939)
!1956 = !DILocation(line: 181, column: 5, scope: !1939)
!1957 = distinct !DISubprogram(name: "assert_failed<u32, u32>", linkageName: "_ZN4core9panicking13assert_failed17h7946be7cdd9dfe58E", scope: !182, file: !1908, line: 171, type: !1958, scopeLine: 171, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1965, retainedNodes: !1960)
!1958 = !DISubroutineType(types: !1959)
!1959 = !{null, !181, !52, !52, !1911, !869}
!1960 = !{!1961, !1962, !1963, !1964}
!1961 = !DILocalVariable(name: "kind", arg: 1, scope: !1957, file: !1908, line: 172, type: !181)
!1962 = !DILocalVariable(name: "left", arg: 2, scope: !1957, file: !1908, line: 173, type: !52)
!1963 = !DILocalVariable(name: "right", arg: 3, scope: !1957, file: !1908, line: 174, type: !52)
!1964 = !DILocalVariable(name: "args", arg: 4, scope: !1957, file: !1908, line: 175, type: !1911)
!1965 = !{!442, !1966}
!1966 = !DITemplateTypeParameter(name: "U", type: !53)
!1967 = !DILocation(line: 172, column: 5, scope: !1957)
!1968 = !DILocation(line: 173, column: 5, scope: !1957)
!1969 = !DILocation(line: 174, column: 5, scope: !1957)
!1970 = !DILocation(line: 175, column: 5, scope: !1957)
!1971 = !DILocation(line: 181, column: 31, scope: !1957)
!1972 = !DILocation(line: 181, column: 38, scope: !1957)
!1973 = !DILocation(line: 181, column: 46, scope: !1957)
!1974 = !DILocation(line: 181, column: 5, scope: !1957)
!1975 = distinct !DISubprogram(name: "assert_failed<[i32; 2], [i32; 2]>", linkageName: "_ZN4core9panicking13assert_failed17hb55f4f60b0e09d92E", scope: !182, file: !1908, line: 171, type: !1976, scopeLine: 171, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1983, retainedNodes: !1978)
!1976 = !DISubroutineType(types: !1977)
!1977 = !{null, !181, !62, !62, !1911, !869}
!1978 = !{!1979, !1980, !1981, !1982}
!1979 = !DILocalVariable(name: "kind", arg: 1, scope: !1975, file: !1908, line: 172, type: !181)
!1980 = !DILocalVariable(name: "left", arg: 2, scope: !1975, file: !1908, line: 173, type: !62)
!1981 = !DILocalVariable(name: "right", arg: 3, scope: !1975, file: !1908, line: 174, type: !62)
!1982 = !DILocalVariable(name: "args", arg: 4, scope: !1975, file: !1908, line: 175, type: !1911)
!1983 = !{!476, !1984}
!1984 = !DITemplateTypeParameter(name: "U", type: !63)
!1985 = !DILocation(line: 172, column: 5, scope: !1975)
!1986 = !DILocation(line: 173, column: 5, scope: !1975)
!1987 = !DILocation(line: 174, column: 5, scope: !1975)
!1988 = !DILocation(line: 175, column: 5, scope: !1975)
!1989 = !DILocation(line: 181, column: 31, scope: !1975)
!1990 = !DILocation(line: 181, column: 38, scope: !1975)
!1991 = !DILocation(line: 181, column: 46, scope: !1975)
!1992 = !DILocation(line: 181, column: 5, scope: !1975)
!1993 = distinct !DISubprogram(name: "assert_test_result<()>", linkageName: "_ZN4test18assert_test_result17he193e499d4e0e61dE", scope: !1995, file: !1994, line: 182, type: !298, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !301, retainedNodes: !1996)
!1994 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/test/src/lib.rs", directory: "", checksumkind: CSK_MD5, checksum: "762a73d08c70c6e433bc6b670465b31f")
!1995 = !DINamespace(name: "test", scope: null)
!1996 = !{!1997, !1998, !2000, !2004, !2005}
!1997 = !DILocalVariable(name: "result", arg: 1, scope: !1993, file: !1994, line: 182, type: !7)
!1998 = !DILocalVariable(name: "code", scope: !1999, file: !1994, line: 183, type: !33, align: 4)
!1999 = distinct !DILexicalBlock(scope: !1993, file: !1994, line: 183, column: 5)
!2000 = !DILocalVariable(name: "left_val", scope: !2001, file: !1994, line: 184, type: !32, align: 8)
!2001 = !DILexicalBlockFile(scope: !2002, file: !1994, discriminator: 0)
!2002 = distinct !DILexicalBlock(scope: !1999, file: !2003, line: 52, column: 13)
!2003 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "92818cc67b0fce20f16574f7676a5426")
!2004 = !DILocalVariable(name: "right_val", scope: !2001, file: !1994, line: 184, type: !32, align: 8)
!2005 = !DILocalVariable(name: "kind", scope: !2006, file: !1994, line: 184, type: !181, align: 1)
!2006 = !DILexicalBlockFile(scope: !2007, file: !1994, discriminator: 0)
!2007 = distinct !DILexicalBlock(scope: !2002, file: !2003, line: 54, column: 21)
!2008 = !DILocation(line: 182, column: 43, scope: !1993)
!2009 = !DILocation(line: 183, column: 9, scope: !1999)
!2010 = !DILocalVariable(name: "self", scope: !2011, file: !1994, line: 183, type: !342, align: 1)
!2011 = !DILexicalBlockFile(scope: !2012, file: !1994, discriminator: 0)
!2012 = distinct !DISubprogram(name: "to_i32", linkageName: "_ZN3std7process8ExitCode6to_i3217h678ad2c936dac390E", scope: !342, file: !341, line: 1808, type: !353, scopeLine: 1808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2013)
!2013 = !{!2010}
!2014 = !DILocation(line: 183, column: 16, scope: !2011, inlinedAt: !2015)
!2015 = !DILocation(line: 183, column: 16, scope: !1993)
!2016 = !DILocalVariable(name: "self", scope: !2017, file: !1994, line: 183, type: !365, align: 8)
!2017 = !DILexicalBlockFile(scope: !2018, file: !1994, discriminator: 0)
!2018 = distinct !DISubprogram(name: "as_i32", linkageName: "_ZN3std3sys4unix7process14process_common8ExitCode6as_i3217hf583af5b161ca737E", scope: !346, file: !362, line: 485, type: !363, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2019)
!2019 = !{!2016}
!2020 = !DILocation(line: 183, column: 16, scope: !2017, inlinedAt: !2021)
!2021 = !DILocation(line: 1809, column: 9, scope: !2012, inlinedAt: !2015)
!2022 = !DILocation(line: 184, column: 5, scope: !1999)
!2023 = !DILocation(line: 184, column: 5, scope: !2001)
!2024 = !DILocation(line: 190, column: 2, scope: !1993)
!2025 = !DILocation(line: 184, column: 5, scope: !2006)
!2026 = !DILocalVariable(name: "x", scope: !2027, file: !1994, line: 184, type: !32, align: 8)
!2027 = !DILexicalBlockFile(scope: !2028, file: !1994, discriminator: 0)
!2028 = distinct !DISubprogram(name: "new_display<i32>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17hbff7e8d91efb89a4E", scope: !621, file: !371, line: 318, type: !2029, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !2031)
!2029 = !DISubroutineType(types: !2030)
!2030 = !{!621, !32}
!2031 = !{!2026}
!2032 = !DILocation(line: 184, column: 5, scope: !2027, inlinedAt: !2033)
!2033 = !DILocation(line: 188, column: 9, scope: !2006)
!2034 = !DILocalVariable(name: "x", scope: !2035, file: !1994, line: 184, type: !32, align: 8)
!2035 = !DILexicalBlockFile(scope: !2036, file: !1994, discriminator: 0)
!2036 = distinct !DISubprogram(name: "new<i32>", linkageName: "_ZN4core3fmt10ArgumentV13new17h51c24f8f08e839caE", scope: !621, file: !371, line: 329, type: !2037, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !2040)
!2037 = !DISubroutineType(types: !2038)
!2038 = !{!621, !32, !2039}
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&i32, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !654, size: 64, align: 64, dwarfAddressSpace: 0)
!2040 = !{!2034, !2041}
!2041 = !DILocalVariable(name: "f", scope: !2035, file: !1994, line: 184, type: !2039, align: 8)
!2042 = !DILocation(line: 184, column: 5, scope: !2035, inlinedAt: !2043)
!2043 = !DILocation(line: 319, column: 13, scope: !2028, inlinedAt: !2033)
!2044 = distinct !DISubprogram(name: "from<core::alloc::layout::LayoutError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h1bf1f66310464536E", scope: !2046, file: !2045, line: 559, type: !2047, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !2051, retainedNodes: !2049)
!2045 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e9a22d2b51b4cfd278a09c9d531e27c4")
!2046 = !DINamespace(name: "{impl#4}", scope: !1333)
!2047 = !DISubroutineType(types: !2048)
!2048 = !{null, !1258}
!2049 = !{!2050}
!2050 = !DILocalVariable(name: "t", arg: 1, scope: !2044, file: !2045, line: 559, type: !1258)
!2051 = !{!2052}
!2052 = !DITemplateTypeParameter(name: "T", type: !1258)
!2053 = !DILocation(line: 559, column: 13, scope: !2044)
!2054 = !DILocation(line: 561, column: 6, scope: !2044)
!2055 = distinct !DISubprogram(name: "from<alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2b07192e84e96dafE", scope: !2046, file: !2045, line: 559, type: !2056, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !2060, retainedNodes: !2058)
!2056 = !DISubroutineType(types: !2057)
!2057 = !{!248, !248}
!2058 = !{!2059}
!2059 = !DILocalVariable(name: "t", arg: 1, scope: !2055, file: !2045, line: 559, type: !248)
!2060 = !{!2061}
!2061 = !DITemplateTypeParameter(name: "T", type: !248)
!2062 = !DILocation(line: 559, column: 13, scope: !2055)
!2063 = !DILocation(line: 561, column: 6, scope: !2055)
!2064 = distinct !DISubprogram(name: "from<core::alloc::AllocError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h45d528083251d0c9E", scope: !2046, file: !2045, line: 559, type: !2065, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !2069, retainedNodes: !2067)
!2065 = !DISubroutineType(types: !2066)
!2066 = !{null, !1857}
!2067 = !{!2068}
!2068 = !DILocalVariable(name: "t", arg: 1, scope: !2064, file: !2045, line: 559, type: !1857)
!2069 = !{!2070}
!2070 = !DITemplateTypeParameter(name: "T", type: !1857)
!2071 = !DILocation(line: 559, column: 13, scope: !2064)
!2072 = !DILocation(line: 561, column: 6, scope: !2064)
!2073 = distinct !DISubprogram(name: "into<alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h64518824e4990ab0E", scope: !2074, file: !2045, line: 549, type: !246, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !2077, retainedNodes: !2075)
!2074 = !DINamespace(name: "{impl#3}", scope: !1333)
!2075 = !{!2076}
!2076 = !DILocalVariable(name: "self", arg: 1, scope: !2073, file: !2045, line: 549, type: !251)
!2077 = !{!2078, !2079}
!2078 = !DITemplateTypeParameter(name: "T", type: !251)
!2079 = !DITemplateTypeParameter(name: "U", type: !248)
!2080 = !DILocation(line: 549, column: 13, scope: !2073)
!2081 = !DILocation(line: 550, column: 9, scope: !2073)
!2082 = !DILocation(line: 551, column: 6, scope: !2073)
!2083 = distinct !DISubprogram(name: "into<core::ptr::unique::Unique<u8>, core::ptr::non_null::NonNull<u8>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb680b17b26dd4c2bE", scope: !2074, file: !2045, line: 549, type: !199, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !2086, retainedNodes: !2084)
!2084 = !{!2085}
!2085 = !DILocalVariable(name: "self", arg: 1, scope: !2083, file: !2045, line: 549, type: !207)
!2086 = !{!2087, !2088}
!2087 = !DITemplateTypeParameter(name: "T", type: !207)
!2088 = !DITemplateTypeParameter(name: "U", type: !201)
!2089 = !DILocation(line: 549, column: 13, scope: !2083)
!2090 = !DILocation(line: 550, column: 9, scope: !2083)
!2091 = !DILocation(line: 551, column: 6, scope: !2083)
!2092 = distinct !DISubprogram(name: "is_zero", linkageName: "_ZN51_$LT$i32$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero17h62226bc174662b0aE", scope: !2094, file: !2093, line: 13, type: !2096, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2098)
!2093 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/is_zero.rs", directory: "", checksumkind: CSK_MD5, checksum: "83b407d072d6bcd2e3812b178de30d71")
!2094 = !DINamespace(name: "{impl#7}", scope: !2095)
!2095 = !DINamespace(name: "is_zero", scope: !1087)
!2096 = !DISubroutineType(types: !2097)
!2097 = !{!43, !32}
!2098 = !{!2099}
!2099 = !DILocalVariable(name: "self", arg: 1, scope: !2092, file: !2093, line: 13, type: !32)
!2100 = !DILocation(line: 13, column: 24, scope: !2092)
!2101 = !DILocation(line: 14, column: 26, scope: !2092)
!2102 = !DILocation(line: 14, column: 17, scope: !2092)
!2103 = !DILocation(line: 15, column: 14, scope: !2092)
!2104 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN51_$LT$i32$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero28_$u7b$$u7b$closure$u7d$$u7d$17hafb7477db7bfbec0E", scope: !2105, file: !2093, line: 22, type: !2106, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2110)
!2105 = !DINamespace(name: "is_zero", scope: !2094)
!2106 = !DISubroutineType(types: !2107)
!2107 = !{!43, !2108, !33}
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::is_zero::{impl#7}::is_zero::{closure_env#0}", baseType: !2109, size: 64, align: 64, dwarfAddressSpace: 0)
!2109 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !2105, file: !2, align: 8, elements: !23, identifier: "57f7803d027d837e9b594a4dea351281")
!2110 = !{!2111, !2112}
!2111 = !DILocalVariable(name: "x", arg: 2, scope: !2104, file: !2093, line: 22, type: !33)
!2112 = !DILocalVariable(arg: 1, scope: !2104, file: !2093, line: 22, type: !2108)
!2113 = !DILocation(line: 22, column: 20, scope: !2104)
!2114 = !DILocation(line: 22, column: 21, scope: !2104)
!2115 = !DILocation(line: 22, column: 24, scope: !2104)
!2116 = !DILocation(line: 22, column: 23, scope: !2104)
!2117 = distinct !DISubprogram(name: "report", linkageName: "_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17hc82e88fc6d5dfe88E", scope: !2118, file: !341, line: 2170, type: !2119, scopeLine: 2170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2121)
!2118 = !DINamespace(name: "{impl#53}", scope: !343)
!2119 = !DISubroutineType(types: !2120)
!2120 = !{!342, !7}
!2121 = !{!2122}
!2122 = !DILocalVariable(name: "self", arg: 1, scope: !2117, file: !341, line: 2170, type: !7)
!2123 = !DILocation(line: 2170, column: 15, scope: !2117)
!2124 = !DILocation(line: 2172, column: 6, scope: !2117)
!2125 = distinct !DISubprogram(name: "as_mut_ptr<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h79b40160d0f7335fE", scope: !1086, file: !2126, line: 1204, type: !2127, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1102, retainedNodes: !2130)
!2126 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "ccced07f4d2284e276bdff9c5cb81e82")
!2127 = !DISubroutineType(types: !2128)
!2128 = !{!1555, !2129}
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<i32, alloc::alloc::Global>", baseType: !1086, size: 64, align: 64, dwarfAddressSpace: 0)
!2130 = !{!2131, !2132}
!2131 = !DILocalVariable(name: "self", arg: 1, scope: !2125, file: !2126, line: 1204, type: !2129)
!2132 = !DILocalVariable(name: "ptr", scope: !2133, file: !2126, line: 1207, type: !1555, align: 8)
!2133 = distinct !DILexicalBlock(scope: !2125, file: !2126, line: 1207, column: 9)
!2134 = !DILocation(line: 1204, column: 23, scope: !2125)
!2135 = !DILocalVariable(name: "metadata", scope: !2136, file: !2126, line: 1209, type: !7, align: 1)
!2136 = !DILexicalBlockFile(scope: !2137, file: !2126, discriminator: 0)
!2137 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h5094a4a4d205c897E", scope: !1173, file: !1172, line: 127, type: !1174, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2138)
!2138 = !{!2139, !2135}
!2139 = !DILocalVariable(name: "data_address", scope: !2136, file: !2126, line: 1209, type: !1176, align: 8)
!2140 = !DILocation(line: 1209, column: 21, scope: !2136, inlinedAt: !2141)
!2141 = !DILocation(line: 668, column: 5, scope: !2142, inlinedAt: !2143)
!2142 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h390c2df580356f7fE", scope: !198, file: !817, line: 667, type: !1182, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !23)
!2143 = !DILocation(line: 38, column: 41, scope: !2144, inlinedAt: !2150)
!2144 = distinct !DISubprogram(name: "is_null<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h10577b5c9d54a231E", scope: !1187, file: !1186, line: 35, type: !2145, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !2147)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{!43, !1555}
!2147 = !{!2148}
!2148 = !DILocalVariable(name: "self", scope: !2149, file: !2126, line: 1209, type: !1555, align: 8)
!2149 = !DILexicalBlockFile(scope: !2144, file: !2126, discriminator: 0)
!2150 = !DILocation(line: 1209, column: 21, scope: !2133)
!2151 = !DILocation(line: 1207, column: 19, scope: !2125)
!2152 = !DILocalVariable(name: "self", scope: !2153, file: !2126, line: 1207, type: !2158, align: 8)
!2153 = !DILexicalBlockFile(scope: !2154, file: !2126, discriminator: 0)
!2154 = distinct !DISubprogram(name: "ptr<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h9d761237732cc047E", scope: !1090, file: !2155, line: 223, type: !2156, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1102, retainedNodes: !2159)
!2155 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/raw_vec.rs", directory: "", checksumkind: CSK_MD5, checksum: "7882a816b01a8bc5234f4586c1b0290b")
!2156 = !DISubroutineType(types: !2157)
!2157 = !{!1555, !2158}
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<i32, alloc::alloc::Global>", baseType: !1090, size: 64, align: 64, dwarfAddressSpace: 0)
!2159 = !{!2152}
!2160 = !DILocation(line: 1207, column: 19, scope: !2153, inlinedAt: !2151)
!2161 = !DILocalVariable(name: "self", scope: !2162, file: !2126, line: 1207, type: !1093, align: 8)
!2162 = !DILexicalBlockFile(scope: !2163, file: !2126, discriminator: 0)
!2163 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h69b9814ead545920E", scope: !1093, file: !221, line: 103, type: !2164, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !2166)
!2164 = !DISubroutineType(types: !2165)
!2165 = !{!1555, !1093}
!2166 = !{!2161}
!2167 = !DILocation(line: 1207, column: 19, scope: !2162, inlinedAt: !2168)
!2168 = !DILocation(line: 224, column: 9, scope: !2154, inlinedAt: !2151)
!2169 = !DILocalVariable(name: "self", scope: !2170, file: !2126, line: 1207, type: !532, align: 8)
!2170 = !DILexicalBlockFile(scope: !2171, file: !2126, discriminator: 0)
!2171 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17haa1145af21efe5f7E", scope: !532, file: !195, line: 330, type: !2172, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !2174)
!2172 = !DISubroutineType(types: !2173)
!2173 = !{!1555, !532}
!2174 = !{!2169}
!2175 = !DILocation(line: 1207, column: 19, scope: !2170, inlinedAt: !2176)
!2176 = !DILocation(line: 104, column: 9, scope: !2163, inlinedAt: !2168)
!2177 = !DILocation(line: 1207, column: 13, scope: !2133)
!2178 = !DILocation(line: 1209, column: 21, scope: !2149, inlinedAt: !2150)
!2179 = !DILocalVariable(name: "self", scope: !2180, file: !2126, line: 1209, type: !224, align: 8)
!2180 = !DILexicalBlockFile(scope: !2181, file: !2126, discriminator: 0)
!2181 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17he1dd2630bb4fa294E", scope: !1187, file: !1186, line: 707, type: !1199, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2182)
!2182 = !{!2179, !2183}
!2183 = !DILocalVariable(name: "other", scope: !2180, file: !2126, line: 1209, type: !224, align: 8)
!2184 = !DILocation(line: 1209, column: 21, scope: !2180, inlinedAt: !2185)
!2185 = !DILocation(line: 38, column: 9, scope: !2144, inlinedAt: !2150)
!2186 = !DILocation(line: 1209, column: 21, scope: !2187, inlinedAt: !2191)
!2187 = !DILexicalBlockFile(scope: !2188, file: !2126, discriminator: 0)
!2188 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17hee63661066bd1171E", scope: !198, file: !817, line: 569, type: !1208, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !301, retainedNodes: !2189)
!2189 = !{!2190}
!2190 = !DILocalVariable(name: "addr", scope: !2187, file: !2126, line: 1209, type: !9, align: 8)
!2191 = !DILocation(line: 668, column: 24, scope: !2142, inlinedAt: !2143)
!2192 = !DILocation(line: 1209, column: 20, scope: !2133)
!2193 = !DILocation(line: 1209, column: 13, scope: !2133)
!2194 = !DILocation(line: 1212, column: 6, scope: !2125)
!2195 = distinct !DISubprogram(name: "extend_with<i32, alloc::alloc::Global, alloc::vec::ExtendElement<i32>>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$11extend_with17hede6bdad7b718868E", scope: !1086, file: !2126, line: 2398, type: !2196, scopeLine: 2398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !2211, retainedNodes: !2201)
!2196 = !DISubroutineType(types: !2197)
!2197 = !{null, !2129, !9, !2198}
!2198 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExtendElement<i32>", scope: !1087, file: !2, size: 32, align: 32, elements: !2199, templateParams: !461, identifier: "5d0991a1ea0ba07973638fd6b6c4a27a")
!2199 = !{!2200}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2198, file: !2, baseType: !33, size: 32, align: 32)
!2201 = !{!2202, !2203, !2204, !2205, !2207, !2209}
!2202 = !DILocalVariable(name: "self", arg: 1, scope: !2195, file: !2126, line: 2398, type: !2129)
!2203 = !DILocalVariable(name: "n", arg: 2, scope: !2195, file: !2126, line: 2398, type: !9)
!2204 = !DILocalVariable(name: "value", arg: 3, scope: !2195, file: !2126, line: 2398, type: !2198)
!2205 = !DILocalVariable(name: "ptr", scope: !2206, file: !2126, line: 2402, type: !1555, align: 8)
!2206 = distinct !DILexicalBlock(scope: !2195, file: !2126, line: 2402, column: 13)
!2207 = !DILocalVariable(name: "local_len", scope: !2208, file: !2126, line: 2406, type: !1132, align: 8)
!2208 = distinct !DILexicalBlock(scope: !2206, file: !2126, line: 2406, column: 13)
!2209 = !DILocalVariable(name: "iter", scope: !2210, file: !2126, line: 2409, type: !1229, align: 8)
!2210 = distinct !DILexicalBlock(scope: !2208, file: !2126, line: 2409, column: 13)
!2211 = !{!462, !1103, !2212}
!2212 = !DITemplateTypeParameter(name: "E", type: !2198)
!2213 = !DILocation(line: 2398, column: 38, scope: !2195)
!2214 = !DILocation(line: 2398, column: 49, scope: !2195)
!2215 = !DILocation(line: 2398, column: 59, scope: !2195)
!2216 = !DILocation(line: 2402, column: 17, scope: !2206)
!2217 = !DILocation(line: 2406, column: 17, scope: !2208)
!2218 = !DILocalVariable(name: "self", scope: !2219, file: !2126, line: 2409, type: !1229, align: 8)
!2219 = !DILexicalBlockFile(scope: !2220, file: !2126, discriminator: 0)
!2220 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<usize>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9b4d6d2b6d8eadeeE", scope: !2222, file: !2221, line: 271, type: !2225, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !2228, retainedNodes: !2227)
!2221 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "73b4070628f6fcec74cccccb11afa9ef")
!2222 = !DINamespace(name: "{impl#0}", scope: !2223)
!2223 = !DINamespace(name: "collect", scope: !2224)
!2224 = !DINamespace(name: "traits", scope: !548)
!2225 = !DISubroutineType(types: !2226)
!2226 = !{!1229, !1229}
!2227 = !{!2218}
!2228 = !{!2229}
!2229 = !DITemplateTypeParameter(name: "I", type: !1229)
!2230 = !DILocation(line: 2409, column: 22, scope: !2219, inlinedAt: !2231)
!2231 = !DILocation(line: 2409, column: 22, scope: !2208)
!2232 = !DILocation(line: 2409, column: 22, scope: !2210)
!2233 = !DILocalVariable(name: "src", scope: !2234, file: !2126, line: 2410, type: !33, align: 4)
!2234 = !DILexicalBlockFile(scope: !2235, file: !2126, discriminator: 0)
!2235 = distinct !DISubprogram(name: "write<i32>", linkageName: "_ZN4core3ptr5write17hfb5b2aa27faed9d1E", scope: !198, file: !817, line: 1296, type: !2236, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !2238)
!2236 = !DISubroutineType(types: !2237)
!2237 = !{null, !1555, !33}
!2238 = !{!2239, !2233}
!2239 = !DILocalVariable(name: "dst", scope: !2234, file: !2126, line: 2410, type: !1555, align: 8)
!2240 = !DILocation(line: 2410, column: 17, scope: !2234, inlinedAt: !2241)
!2241 = !DILocation(line: 2410, column: 17, scope: !2210)
!2242 = !DILocalVariable(name: "src", scope: !2243, file: !2126, line: 2418, type: !33, align: 4)
!2243 = !DILexicalBlockFile(scope: !2244, file: !2126, discriminator: 0)
!2244 = distinct !DISubprogram(name: "write<i32>", linkageName: "_ZN4core3ptr5write17hfb5b2aa27faed9d1E", scope: !198, file: !817, line: 1296, type: !2236, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !2245)
!2245 = !{!2246, !2242}
!2246 = !DILocalVariable(name: "dst", scope: !2243, file: !2126, line: 2418, type: !1555, align: 8)
!2247 = !DILocation(line: 2418, column: 17, scope: !2243, inlinedAt: !2248)
!2248 = !DILocation(line: 2418, column: 17, scope: !2208)
!2249 = !DILocation(line: 2399, column: 9, scope: !2195)
!2250 = !DILocation(line: 2424, column: 5, scope: !2195)
!2251 = !DILocation(line: 2402, column: 27, scope: !2195)
!2252 = !DILocalVariable(name: "self", scope: !2253, file: !2126, line: 2402, type: !1555, align: 8)
!2253 = !DILexicalBlockFile(scope: !2254, file: !2126, discriminator: 0)
!2254 = distinct !DISubprogram(name: "add<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h8f618919bde58437E", scope: !1187, file: !1186, line: 985, type: !2255, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !2257)
!2255 = !DISubroutineType(types: !2256)
!2256 = !{!1555, !1555, !9}
!2257 = !{!2252, !2258}
!2258 = !DILocalVariable(name: "count", scope: !2253, file: !2126, line: 2402, type: !9, align: 8)
!2259 = !DILocation(line: 2402, column: 27, scope: !2253, inlinedAt: !2251)
!2260 = !DILocation(line: 2402, column: 49, scope: !2195)
!2261 = !DILocalVariable(name: "self", scope: !2262, file: !2126, line: 2402, type: !2265, align: 8)
!2262 = distinct !DISubprogram(name: "len<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h7053a2b6693abe0eE", scope: !1086, file: !2126, line: 1945, type: !2263, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1102, retainedNodes: !2266)
!2263 = !DISubroutineType(types: !2264)
!2264 = !{!9, !2265}
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::Vec<i32, alloc::alloc::Global>", baseType: !1086, size: 64, align: 64, dwarfAddressSpace: 0)
!2266 = !{!2261}
!2267 = !DILocation(line: 2402, column: 49, scope: !2262, inlinedAt: !2260)
!2268 = !DILocalVariable(name: "self", scope: !2269, file: !2126, line: 2402, type: !1555, align: 8)
!2269 = !DILexicalBlockFile(scope: !2270, file: !2126, discriminator: 0)
!2270 = distinct !DISubprogram(name: "offset<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17he50ecddcc032164bE", scope: !1187, file: !1186, line: 465, type: !2271, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !2273)
!2271 = !DISubroutineType(types: !2272)
!2272 = !{!1555, !1555, !313}
!2273 = !{!2268, !2274}
!2274 = !DILocalVariable(name: "count", scope: !2269, file: !2126, line: 2402, type: !313, align: 8)
!2275 = !DILocation(line: 2402, column: 27, scope: !2269, inlinedAt: !2276)
!2276 = !DILocation(line: 990, column: 18, scope: !2254, inlinedAt: !2251)
!2277 = !DILocation(line: 2406, column: 51, scope: !2206)
!2278 = !DILocalVariable(name: "len", scope: !2279, file: !2126, line: 2406, type: !806, align: 8)
!2279 = !DILexicalBlockFile(scope: !2280, file: !2126, discriminator: 0)
!2280 = distinct !DISubprogram(name: "new", linkageName: "_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop3new17h71ba498e7be7d647E", scope: !1132, file: !2281, line: 13, type: !2282, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2284)
!2281 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/set_len_on_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "46ffd8255e376b538abacd2d8152b3c0")
!2282 = !DISubroutineType(types: !2283)
!2283 = !{!1132, !806}
!2284 = !{!2278}
!2285 = !DILocation(line: 2406, column: 33, scope: !2279, inlinedAt: !2286)
!2286 = !DILocation(line: 2406, column: 33, scope: !2206)
!2287 = !DILocation(line: 2409, column: 13, scope: !2210)
!2288 = !DILocalVariable(name: "self", scope: !2289, file: !2126, line: 2409, type: !1228, align: 8)
!2289 = !DILexicalBlockFile(scope: !2290, file: !2126, discriminator: 0)
!2290 = distinct !DISubprogram(name: "next<usize>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hf0c8e6a807a2d16cE", scope: !1225, file: !545, line: 710, type: !1226, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1238, retainedNodes: !2291)
!2291 = !{!2288}
!2292 = !DILocation(line: 2409, column: 22, scope: !2289, inlinedAt: !2232)
!2293 = !DILocation(line: 2423, column: 9, scope: !2206)
!2294 = !DILocation(line: 2416, column: 16, scope: !2208)
!2295 = !DILocation(line: 2410, column: 28, scope: !2210)
!2296 = !DILocation(line: 2410, column: 33, scope: !2210)
!2297 = !DILocation(line: 2411, column: 23, scope: !2210)
!2298 = !DILocalVariable(name: "self", scope: !2299, file: !2126, line: 2411, type: !1555, align: 8)
!2299 = !DILexicalBlockFile(scope: !2300, file: !2126, discriminator: 0)
!2300 = distinct !DISubprogram(name: "offset<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17he50ecddcc032164bE", scope: !1187, file: !1186, line: 465, type: !2271, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !2301)
!2301 = !{!2298, !2302}
!2302 = !DILocalVariable(name: "count", scope: !2299, file: !2126, line: 2411, type: !313, align: 8)
!2303 = !DILocation(line: 2411, column: 23, scope: !2299, inlinedAt: !2297)
!2304 = !DILocation(line: 2411, column: 17, scope: !2210)
!2305 = !DILocation(line: 2413, column: 17, scope: !2210)
!2306 = !DILocalVariable(name: "self", scope: !2307, file: !2126, line: 2413, type: !2311, align: 8)
!2307 = !DILexicalBlockFile(scope: !2308, file: !2126, discriminator: 0)
!2308 = distinct !DISubprogram(name: "increment_len", linkageName: "_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop13increment_len17h72cf7c7673cc18efE", scope: !1132, file: !2281, line: 18, type: !2309, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2312)
!2309 = !DISubroutineType(types: !2310)
!2310 = !{null, !2311, !9}
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::set_len_on_drop::SetLenOnDrop", baseType: !1132, size: 64, align: 64, dwarfAddressSpace: 0)
!2312 = !{!2306, !2313}
!2313 = !DILocalVariable(name: "increment", scope: !2307, file: !2126, line: 2413, type: !9, align: 8)
!2314 = !DILocation(line: 2413, column: 17, scope: !2307, inlinedAt: !2305)
!2315 = !DILocation(line: 2418, column: 28, scope: !2208)
!2316 = !DILocation(line: 2418, column: 33, scope: !2208)
!2317 = !DILocation(line: 2419, column: 17, scope: !2208)
!2318 = !DILocalVariable(name: "self", scope: !2319, file: !2126, line: 2419, type: !2311, align: 8)
!2319 = !DILexicalBlockFile(scope: !2320, file: !2126, discriminator: 0)
!2320 = distinct !DISubprogram(name: "increment_len", linkageName: "_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop13increment_len17h72cf7c7673cc18efE", scope: !1132, file: !2281, line: 18, type: !2309, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2321)
!2321 = !{!2318, !2322}
!2322 = !DILocalVariable(name: "increment", scope: !2319, file: !2126, line: 2419, type: !9, align: 8)
!2323 = !DILocation(line: 2419, column: 17, scope: !2319, inlinedAt: !2317)
!2324 = !DILocation(line: 2416, column: 13, scope: !2208)
!2325 = !DILocation(line: 2398, column: 5, scope: !2195)
!2326 = !DILocation(line: 2424, column: 6, scope: !2195)
!2327 = distinct !DISubprogram(name: "reserve<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h52ed96e7b828c642E", scope: !1086, file: !2126, line: 840, type: !2328, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1102, retainedNodes: !2330)
!2328 = !DISubroutineType(types: !2329)
!2329 = !{null, !2129, !9}
!2330 = !{!2331, !2332}
!2331 = !DILocalVariable(name: "self", arg: 1, scope: !2327, file: !2126, line: 840, type: !2129)
!2332 = !DILocalVariable(name: "additional", arg: 2, scope: !2327, file: !2126, line: 840, type: !9)
!2333 = !DILocation(line: 840, column: 20, scope: !2327)
!2334 = !DILocation(line: 840, column: 31, scope: !2327)
!2335 = !DILocation(line: 841, column: 9, scope: !2327)
!2336 = !DILocation(line: 841, column: 26, scope: !2327)
!2337 = !DILocation(line: 842, column: 6, scope: !2327)
!2338 = distinct !DISubprogram(name: "from_elem<i32>", linkageName: "_ZN5alloc3vec9from_elem17hce8d745a37188a40E", scope: !1087, file: !2126, line: 2456, type: !2339, scopeLine: 2456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !2341)
!2339 = !DISubroutineType(types: !2340)
!2340 = !{!1086, !33, !9}
!2341 = !{!2342, !2343}
!2342 = !DILocalVariable(name: "elem", arg: 1, scope: !2338, file: !2126, line: 2456, type: !33)
!2343 = !DILocalVariable(name: "n", arg: 2, scope: !2338, file: !2126, line: 2456, type: !9)
!2344 = !DILocation(line: 2456, column: 28, scope: !2338)
!2345 = !DILocation(line: 2456, column: 37, scope: !2338)
!2346 = !DILocation(line: 2457, column: 5, scope: !2338)
!2347 = !DILocation(line: 2458, column: 2, scope: !2338)
!2348 = distinct !DISubprogram(name: "alloc_impl", linkageName: "_ZN5alloc5alloc6Global10alloc_impl17heed9f1286d8c0c5fE", scope: !1100, file: !2349, line: 172, type: !2350, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2353)
!2349 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/alloc.rs", directory: "", checksumkind: CSK_MD5, checksum: "b6c7758b12bd6b7f0705d9bc90e671ea")
!2350 = !DISubroutineType(types: !2351)
!2351 = !{!1839, !2352, !261, !43}
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::alloc::Global", baseType: !1100, size: 64, align: 64, dwarfAddressSpace: 0)
!2353 = !{!2354, !2355, !2356, !2357, !2359, !2361, !2363, !2378}
!2354 = !DILocalVariable(name: "self", arg: 1, scope: !2348, file: !2349, line: 172, type: !2352)
!2355 = !DILocalVariable(name: "layout", arg: 2, scope: !2348, file: !2349, line: 172, type: !261)
!2356 = !DILocalVariable(name: "zeroed", arg: 3, scope: !2348, file: !2349, line: 172, type: !43)
!2357 = !DILocalVariable(name: "size", scope: !2358, file: !2349, line: 176, type: !9, align: 8)
!2358 = distinct !DILexicalBlock(scope: !2348, file: !2349, line: 176, column: 13)
!2359 = !DILocalVariable(name: "raw_ptr", scope: !2360, file: !2349, line: 177, type: !224, align: 8)
!2360 = distinct !DILexicalBlock(scope: !2358, file: !2349, line: 177, column: 17)
!2361 = !DILocalVariable(name: "ptr", scope: !2362, file: !2349, line: 178, type: !201, align: 8)
!2362 = distinct !DILexicalBlock(scope: !2360, file: !2349, line: 178, column: 17)
!2363 = !DILocalVariable(name: "residual", scope: !2364, file: !2349, line: 178, type: !2365, align: 1)
!2364 = distinct !DILexicalBlock(scope: !2360, file: !2349, line: 178, column: 66)
!2365 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::AllocError>", scope: !376, file: !2, align: 8, elements: !2366, templateParams: !23, identifier: "572d358f2a12b97961cfb71e38e53f04")
!2366 = !{!2367}
!2367 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2365, file: !2, align: 8, elements: !2368, templateParams: !23, identifier: "88663002e18d2fe1148d606c86c1d5ff")
!2368 = !{!2369, !2374}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2367, file: !2, baseType: !2370, align: 8)
!2370 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2365, file: !2, align: 8, elements: !2371, templateParams: !2373, identifier: "be577e6defde51b29863ecc8d4e2e22a")
!2371 = !{!2372}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2370, file: !2, baseType: !1332, align: 8)
!2373 = !{!1337, !1856}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2367, file: !2, baseType: !2375, align: 8)
!2375 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2365, file: !2, align: 8, elements: !2376, templateParams: !2373, identifier: "1bce49b0456cc0581bfad8a74808f72")
!2376 = !{!2377}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2375, file: !2, baseType: !1857, align: 8)
!2378 = !DILocalVariable(name: "val", scope: !2379, file: !2349, line: 178, type: !201, align: 8)
!2379 = distinct !DILexicalBlock(scope: !2360, file: !2349, line: 178, column: 27)
!2380 = !DILocation(line: 172, column: 19, scope: !2348)
!2381 = !DILocation(line: 172, column: 26, scope: !2348)
!2382 = !DILocation(line: 172, column: 42, scope: !2348)
!2383 = !DILocalVariable(name: "data", scope: !2384, file: !2349, line: 174, type: !201, align: 8)
!2384 = !DILexicalBlockFile(scope: !2385, file: !2349, discriminator: 0)
!2385 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h8f540a71b0dbb1e6E", scope: !1847, file: !195, line: 487, type: !2386, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2388)
!2386 = !DISubroutineType(types: !2387)
!2387 = !{!1847, !201, !9}
!2388 = !{!2383, !2389}
!2389 = !DILocalVariable(name: "len", scope: !2384, file: !2349, line: 174, type: !9, align: 8)
!2390 = !DILocation(line: 174, column: 21, scope: !2384, inlinedAt: !2391)
!2391 = !DILocation(line: 174, column: 21, scope: !2348)
!2392 = !DILocation(line: 177, column: 21, scope: !2360)
!2393 = !DILocalVariable(name: "layout", scope: !2394, file: !2349, line: 177, type: !261, align: 8)
!2394 = distinct !DISubprogram(name: "alloc_zeroed", linkageName: "_ZN5alloc5alloc12alloc_zeroed17h36c2094879aaa48cE", scope: !1101, file: !2349, line: 165, type: !2395, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2397)
!2395 = !DISubroutineType(types: !2396)
!2396 = !{!224, !261}
!2397 = !{!2393}
!2398 = !DILocation(line: 177, column: 43, scope: !2394, inlinedAt: !2399)
!2399 = !DILocation(line: 177, column: 43, scope: !2358)
!2400 = !DILocalVariable(name: "layout", scope: !2401, file: !2349, line: 177, type: !261, align: 8)
!2401 = distinct !DISubprogram(name: "alloc", linkageName: "_ZN5alloc5alloc5alloc17h6de7df58855784ffE", scope: !1101, file: !2349, line: 94, type: !2395, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2402)
!2402 = !{!2400}
!2403 = !DILocation(line: 177, column: 73, scope: !2401, inlinedAt: !2404)
!2404 = !DILocation(line: 177, column: 73, scope: !2358)
!2405 = !DILocalVariable(name: "self", scope: !2406, file: !2349, line: 178, type: !2426, align: 8)
!2406 = !DILexicalBlockFile(scope: !2407, file: !2349, discriminator: 0)
!2407 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h3d1cd4f613584b42E", scope: !1349, file: !1348, line: 2117, type: !2408, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !2434, retainedNodes: !2440)
!2408 = !DISubroutineType(types: !2409)
!2409 = !{!2410, !2426}
!2410 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>", scope: !1353, file: !2, size: 64, align: 64, elements: !2411, templateParams: !23, identifier: "7f8c65b25026163a60482c903b940372")
!2411 = !{!2412}
!2412 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2410, file: !2, size: 64, align: 64, elements: !2413, templateParams: !23, identifier: "a5a8c50ac5e6502472acbdda15ae7613", discriminator: !2425)
!2413 = !{!2414, !2421}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !2412, file: !2, baseType: !2415, size: 64, align: 64)
!2415 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !2410, file: !2, size: 64, align: 64, elements: !2416, templateParams: !2418, identifier: "d2ac067f6845ce1e8a08fbb330350406")
!2416 = !{!2417}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2415, file: !2, baseType: !201, size: 64, align: 64)
!2418 = !{!2419, !2420}
!2419 = !DITemplateTypeParameter(name: "B", type: !2365)
!2420 = !DITemplateTypeParameter(name: "C", type: !201)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !2412, file: !2, baseType: !2422, size: 64, align: 64, extraData: i64 0)
!2422 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !2410, file: !2, size: 64, align: 64, elements: !2423, templateParams: !2418, identifier: "81bddfbc89a9f0c5cc1c72e49b9ff534")
!2423 = !{!2424}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2422, file: !2, baseType: !2365, align: 8)
!2425 = !DIDerivedType(tag: DW_TAG_member, scope: !2410, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagArtificial)
!2426 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", scope: !376, file: !2, size: 64, align: 64, elements: !2427, templateParams: !23, identifier: "e71566aa277061ca8abc5a83ae5b9729")
!2427 = !{!2428}
!2428 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2426, file: !2, size: 64, align: 64, elements: !2429, templateParams: !23, identifier: "4a74327c407a883ea599f67b3290ba83", discriminator: !2439)
!2429 = !{!2430, !2435}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2428, file: !2, baseType: !2431, size: 64, align: 64)
!2431 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2426, file: !2, size: 64, align: 64, elements: !2432, templateParams: !2434, identifier: "71a196ee6c186d8bac41245f54989593")
!2432 = !{!2433}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2431, file: !2, baseType: !201, size: 64, align: 64)
!2434 = !{!1160, !1856}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2428, file: !2, baseType: !2436, size: 64, align: 64, extraData: i64 0)
!2436 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2426, file: !2, size: 64, align: 64, elements: !2437, templateParams: !2434, identifier: "fc861602d066f2f1f51a40a0537349e6")
!2437 = !{!2438}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2436, file: !2, baseType: !1857, align: 8)
!2439 = !DIDerivedType(tag: DW_TAG_member, scope: !2426, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagArtificial)
!2440 = !{!2405, !2441, !2444}
!2441 = !DILocalVariable(name: "v", scope: !2442, file: !2349, line: 178, type: !201, align: 8)
!2442 = !DILexicalBlockFile(scope: !2443, file: !2349, discriminator: 0)
!2443 = distinct !DILexicalBlock(scope: !2407, file: !1348, line: 2119, column: 13)
!2444 = !DILocalVariable(name: "e", scope: !2445, file: !2349, line: 178, type: !1857, align: 1)
!2445 = !DILexicalBlockFile(scope: !2446, file: !2349, discriminator: 0)
!2446 = distinct !DILexicalBlock(scope: !2407, file: !1348, line: 2120, column: 13)
!2447 = !DILocation(line: 178, column: 27, scope: !2406, inlinedAt: !2448)
!2448 = !DILocation(line: 178, column: 27, scope: !2360)
!2449 = !DILocalVariable(name: "self", scope: !2450, file: !2349, line: 178, type: !1153, align: 8)
!2450 = !DILexicalBlockFile(scope: !2451, file: !2349, discriminator: 0)
!2451 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h409a4eae9fe70b74E", scope: !1153, file: !1395, line: 1051, type: !2452, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !2434, retainedNodes: !2454)
!2452 = !DISubroutineType(types: !2453)
!2453 = !{!2426, !1153, !1857}
!2454 = !{!2449, !2455, !2456}
!2455 = !DILocalVariable(name: "err", scope: !2450, file: !2349, line: 178, type: !1857, align: 1)
!2456 = !DILocalVariable(name: "v", scope: !2457, file: !2349, line: 178, type: !201, align: 8)
!2457 = !DILexicalBlockFile(scope: !2458, file: !2349, discriminator: 0)
!2458 = distinct !DILexicalBlock(scope: !2451, file: !1395, line: 1056, column: 13)
!2459 = !DILocation(line: 178, column: 27, scope: !2450, inlinedAt: !2448)
!2460 = !DILocation(line: 178, column: 66, scope: !2364)
!2461 = !DILocalVariable(name: "residual", scope: !2462, file: !2349, line: 178, type: !2365, align: 1)
!2462 = !DILexicalBlockFile(scope: !2463, file: !2349, discriminator: 0)
!2463 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h867b40cd7c4f69a8E", scope: !1408, file: !1348, line: 2132, type: !2464, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !2470, retainedNodes: !2466)
!2464 = !DISubroutineType(types: !2465)
!2465 = !{!1839, !2365, !869}
!2466 = !{!2461, !2467}
!2467 = !DILocalVariable(name: "e", scope: !2468, file: !2349, line: 178, type: !1857, align: 1)
!2468 = !DILexicalBlockFile(scope: !2469, file: !2349, discriminator: 0)
!2469 = distinct !DILexicalBlock(scope: !2463, file: !1348, line: 2134, column: 13)
!2470 = !{!1855, !1856, !2471}
!2471 = !DITemplateTypeParameter(name: "F", type: !1857)
!2472 = !DILocation(line: 178, column: 27, scope: !2462, inlinedAt: !2473)
!2473 = !DILocation(line: 178, column: 27, scope: !2364)
!2474 = !DILocalVariable(name: "self", scope: !2475, file: !2349, line: 174, type: !1273, align: 8)
!2475 = !DILexicalBlockFile(scope: !2476, file: !2349, discriminator: 0)
!2476 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17hc3e9e20e967012deE", scope: !1273, file: !1272, line: 82, type: !1277, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2477)
!2477 = !{!2474}
!2478 = !DILocation(line: 174, column: 51, scope: !2475, inlinedAt: !2479)
!2479 = !DILocation(line: 131, column: 9, scope: !2480, inlinedAt: !2486)
!2480 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h18656b4472f77024E", scope: !261, file: !1244, line: 130, type: !2481, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2483)
!2481 = !DISubroutineType(types: !2482)
!2482 = !{!9, !1882}
!2483 = !{!2484}
!2484 = !DILocalVariable(name: "self", scope: !2485, file: !2349, line: 174, type: !1882, align: 8)
!2485 = !DILexicalBlockFile(scope: !2480, file: !2349, discriminator: 0)
!2486 = !DILocation(line: 205, column: 71, scope: !2487, inlinedAt: !2493)
!2487 = distinct !DISubprogram(name: "dangling", linkageName: "_ZN4core5alloc6layout6Layout8dangling17hbf370d17d97c8cd3E", scope: !261, file: !1244, line: 203, type: !2488, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2490)
!2488 = !DISubroutineType(types: !2489)
!2489 = !{!201, !1882}
!2490 = !{!2491}
!2491 = !DILocalVariable(name: "self", scope: !2492, file: !2349, line: 174, type: !1882, align: 8)
!2492 = !DILexicalBlockFile(scope: !2487, file: !2349, discriminator: 0)
!2493 = !DILocation(line: 174, column: 51, scope: !2348)
!2494 = !DILocalVariable(name: "self", scope: !2495, file: !2349, line: 174, type: !267, align: 8)
!2495 = !DILexicalBlockFile(scope: !2496, file: !2349, discriminator: 0)
!2496 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1b1d76d92bec5242E", scope: !267, file: !1285, line: 39, type: !1286, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2497)
!2497 = !{!2494}
!2498 = !DILocation(line: 174, column: 51, scope: !2495, inlinedAt: !2479)
!2499 = !DILocalVariable(name: "self", scope: !2500, file: !2349, line: 177, type: !1273, align: 8)
!2500 = !DILexicalBlockFile(scope: !2501, file: !2349, discriminator: 0)
!2501 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17hc3e9e20e967012deE", scope: !1273, file: !1272, line: 82, type: !1277, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2502)
!2502 = !{!2499}
!2503 = !DILocation(line: 177, column: 43, scope: !2500, inlinedAt: !2504)
!2504 = !DILocation(line: 131, column: 9, scope: !2505, inlinedAt: !2509)
!2505 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h18656b4472f77024E", scope: !261, file: !1244, line: 130, type: !2481, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2506)
!2506 = !{!2507}
!2507 = !DILocalVariable(name: "self", scope: !2508, file: !2349, line: 177, type: !1882, align: 8)
!2508 = !DILexicalBlockFile(scope: !2505, file: !2349, discriminator: 0)
!2509 = !DILocation(line: 166, column: 49, scope: !2394, inlinedAt: !2399)
!2510 = !DILocalVariable(name: "self", scope: !2511, file: !2349, line: 177, type: !267, align: 8)
!2511 = !DILexicalBlockFile(scope: !2512, file: !2349, discriminator: 0)
!2512 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1b1d76d92bec5242E", scope: !267, file: !1285, line: 39, type: !1286, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2513)
!2513 = !{!2510}
!2514 = !DILocation(line: 177, column: 43, scope: !2511, inlinedAt: !2504)
!2515 = !DILocalVariable(name: "self", scope: !2516, file: !2349, line: 177, type: !1273, align: 8)
!2516 = !DILexicalBlockFile(scope: !2517, file: !2349, discriminator: 0)
!2517 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17hc3e9e20e967012deE", scope: !1273, file: !1272, line: 82, type: !1277, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2518)
!2518 = !{!2515}
!2519 = !DILocation(line: 177, column: 73, scope: !2516, inlinedAt: !2520)
!2520 = !DILocation(line: 131, column: 9, scope: !2521, inlinedAt: !2525)
!2521 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h18656b4472f77024E", scope: !261, file: !1244, line: 130, type: !2481, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2522)
!2522 = !{!2523}
!2523 = !DILocalVariable(name: "self", scope: !2524, file: !2349, line: 177, type: !1882, align: 8)
!2524 = !DILexicalBlockFile(scope: !2521, file: !2349, discriminator: 0)
!2525 = !DILocation(line: 95, column: 42, scope: !2401, inlinedAt: !2404)
!2526 = !DILocalVariable(name: "self", scope: !2527, file: !2349, line: 177, type: !267, align: 8)
!2527 = !DILexicalBlockFile(scope: !2528, file: !2349, discriminator: 0)
!2528 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1b1d76d92bec5242E", scope: !267, file: !1285, line: 39, type: !1286, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2529)
!2529 = !{!2526}
!2530 = !DILocation(line: 177, column: 73, scope: !2527, inlinedAt: !2520)
!2531 = !DILocation(line: 178, column: 27, scope: !2445, inlinedAt: !2448)
!2532 = !DILocation(line: 178, column: 27, scope: !2468, inlinedAt: !2473)
!2533 = !DILocation(line: 173, column: 15, scope: !2348)
!2534 = !DILocalVariable(name: "self", scope: !2535, file: !2349, line: 173, type: !1882, align: 8)
!2535 = !DILexicalBlockFile(scope: !2536, file: !2349, discriminator: 0)
!2536 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h5ead29542ac74488E", scope: !261, file: !1244, line: 120, type: !2481, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2537)
!2537 = !{!2534}
!2538 = !DILocation(line: 173, column: 15, scope: !2535, inlinedAt: !2533)
!2539 = !DILocation(line: 173, column: 9, scope: !2348)
!2540 = !DILocation(line: 174, column: 51, scope: !2492, inlinedAt: !2493)
!2541 = !DILocation(line: 174, column: 51, scope: !2485, inlinedAt: !2486)
!2542 = !DILocalVariable(name: "n", scope: !2543, file: !2349, line: 174, type: !9, align: 8)
!2543 = !DILexicalBlockFile(scope: !2544, file: !2349, discriminator: 0)
!2544 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h2d52a1a9b55eac1dE", scope: !1273, file: !1272, line: 56, type: !1294, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2545)
!2545 = !{!2542, !2546}
!2546 = !DILocalVariable(name: "runtime", scope: !2547, file: !2349, line: 174, type: !1301, align: 8)
!2547 = !DILexicalBlockFile(scope: !2548, file: !2349, discriminator: 0)
!2548 = distinct !DILexicalBlock(scope: !2544, file: !1300, line: 2336, column: 13)
!2549 = !DILocation(line: 174, column: 51, scope: !2543, inlinedAt: !2550)
!2550 = !DILocation(line: 41, column: 18, scope: !2496, inlinedAt: !2479)
!2551 = !DILocalVariable(name: "addr", scope: !2552, file: !2349, line: 174, type: !9, align: 8)
!2552 = !DILexicalBlockFile(scope: !2553, file: !2349, discriminator: 0)
!2553 = distinct !DISubprogram(name: "invalid_mut<u8>", linkageName: "_ZN4core3ptr11invalid_mut17h110755df64d8691aE", scope: !198, file: !817, line: 569, type: !2554, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2556)
!2554 = !DISubroutineType(types: !2555)
!2555 = !{!224, !9}
!2556 = !{!2551}
!2557 = !DILocation(line: 174, column: 51, scope: !2552, inlinedAt: !2558)
!2558 = !DILocation(line: 205, column: 41, scope: !2487, inlinedAt: !2493)
!2559 = !DILocalVariable(name: "ptr", scope: !2560, file: !2349, line: 174, type: !224, align: 8)
!2560 = !DILexicalBlockFile(scope: !2561, file: !2349, discriminator: 0)
!2561 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hc66fe1711b96fc95E", scope: !201, file: !195, line: 196, type: !236, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2562)
!2562 = !{!2559}
!2563 = !DILocation(line: 174, column: 51, scope: !2560, inlinedAt: !2564)
!2564 = !DILocation(line: 205, column: 18, scope: !2487, inlinedAt: !2493)
!2565 = !DILocation(line: 176, column: 13, scope: !2348)
!2566 = !DILocation(line: 176, column: 13, scope: !2358)
!2567 = !DILocation(line: 177, column: 34, scope: !2358)
!2568 = !DILocation(line: 177, column: 79, scope: !2358)
!2569 = !DILocalVariable(name: "self", scope: !2570, file: !2349, line: 177, type: !1882, align: 8)
!2570 = !DILexicalBlockFile(scope: !2571, file: !2349, discriminator: 0)
!2571 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h5ead29542ac74488E", scope: !261, file: !1244, line: 120, type: !2481, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2572)
!2572 = !{!2569}
!2573 = !DILocation(line: 177, column: 73, scope: !2570, inlinedAt: !2574)
!2574 = !DILocation(line: 95, column: 27, scope: !2401, inlinedAt: !2404)
!2575 = !DILocation(line: 177, column: 73, scope: !2524, inlinedAt: !2525)
!2576 = !DILocalVariable(name: "n", scope: !2577, file: !2349, line: 177, type: !9, align: 8)
!2577 = !DILexicalBlockFile(scope: !2578, file: !2349, discriminator: 0)
!2578 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h2d52a1a9b55eac1dE", scope: !1273, file: !1272, line: 56, type: !1294, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2579)
!2579 = !{!2576, !2580}
!2580 = !DILocalVariable(name: "runtime", scope: !2581, file: !2349, line: 177, type: !1301, align: 8)
!2581 = !DILexicalBlockFile(scope: !2582, file: !2349, discriminator: 0)
!2582 = distinct !DILexicalBlock(scope: !2578, file: !1300, line: 2336, column: 13)
!2583 = !DILocation(line: 177, column: 73, scope: !2577, inlinedAt: !2584)
!2584 = !DILocation(line: 41, column: 18, scope: !2528, inlinedAt: !2520)
!2585 = !DILocation(line: 177, column: 56, scope: !2358)
!2586 = !DILocalVariable(name: "self", scope: !2587, file: !2349, line: 177, type: !1882, align: 8)
!2587 = !DILexicalBlockFile(scope: !2588, file: !2349, discriminator: 0)
!2588 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h5ead29542ac74488E", scope: !261, file: !1244, line: 120, type: !2481, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2589)
!2589 = !{!2586}
!2590 = !DILocation(line: 177, column: 43, scope: !2587, inlinedAt: !2591)
!2591 = !DILocation(line: 166, column: 34, scope: !2394, inlinedAt: !2399)
!2592 = !DILocation(line: 177, column: 43, scope: !2508, inlinedAt: !2509)
!2593 = !DILocalVariable(name: "n", scope: !2594, file: !2349, line: 177, type: !9, align: 8)
!2594 = !DILexicalBlockFile(scope: !2595, file: !2349, discriminator: 0)
!2595 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h2d52a1a9b55eac1dE", scope: !1273, file: !1272, line: 56, type: !1294, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2596)
!2596 = !{!2593, !2597}
!2597 = !DILocalVariable(name: "runtime", scope: !2598, file: !2349, line: 177, type: !1301, align: 8)
!2598 = !DILexicalBlockFile(scope: !2599, file: !2349, discriminator: 0)
!2599 = distinct !DILexicalBlock(scope: !2595, file: !1300, line: 2336, column: 13)
!2600 = !DILocation(line: 177, column: 43, scope: !2594, inlinedAt: !2601)
!2601 = !DILocation(line: 41, column: 18, scope: !2512, inlinedAt: !2504)
!2602 = !DILocation(line: 177, column: 31, scope: !2358)
!2603 = !DILocation(line: 178, column: 40, scope: !2360)
!2604 = !DILocation(line: 178, column: 27, scope: !2457, inlinedAt: !2448)
!2605 = !DILocation(line: 178, column: 27, scope: !2442, inlinedAt: !2448)
!2606 = !DILocation(line: 178, column: 27, scope: !2379)
!2607 = !DILocation(line: 178, column: 21, scope: !2362)
!2608 = !DILocation(line: 179, column: 50, scope: !2362)
!2609 = !DILocalVariable(name: "data", scope: !2610, file: !2349, line: 179, type: !201, align: 8)
!2610 = !DILexicalBlockFile(scope: !2611, file: !2349, discriminator: 0)
!2611 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h8f540a71b0dbb1e6E", scope: !1847, file: !195, line: 487, type: !2386, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2612)
!2612 = !{!2609, !2613}
!2613 = !DILocalVariable(name: "len", scope: !2610, file: !2349, line: 179, type: !9, align: 8)
!2614 = !DILocation(line: 179, column: 20, scope: !2610, inlinedAt: !2615)
!2615 = !DILocation(line: 179, column: 20, scope: !2362)
!2616 = !DILocation(line: 179, column: 55, scope: !2362)
!2617 = !DILocalVariable(name: "self", scope: !2618, file: !2349, line: 179, type: !201, align: 8)
!2618 = !DILexicalBlockFile(scope: !2619, file: !2349, discriminator: 0)
!2619 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h0a8b74df506a48abE", scope: !201, file: !195, line: 330, type: !229, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2620)
!2620 = !{!2617}
!2621 = !DILocation(line: 179, column: 20, scope: !2618, inlinedAt: !2622)
!2622 = !DILocation(line: 489, column: 70, scope: !2611, inlinedAt: !2615)
!2623 = !DILocalVariable(name: "data", scope: !2624, file: !2349, line: 179, type: !224, align: 8)
!2624 = !DILexicalBlockFile(scope: !2625, file: !2349, discriminator: 0)
!2625 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h944f1c6b137c5871E", scope: !198, file: !817, line: 727, type: !2626, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2632)
!2626 = !DISubroutineType(types: !2627)
!2627 = !{!2628, !224, !9}
!2628 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [u8]", file: !2, size: 128, align: 64, elements: !2629, templateParams: !23, identifier: "2081d302591cc0e6b89f57ab75a79c1e")
!2629 = !{!2630, !2631}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2628, file: !2, baseType: !734, size: 64, align: 64)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2628, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2632 = !{!2623, !2633}
!2633 = !DILocalVariable(name: "len", scope: !2624, file: !2349, line: 179, type: !9, align: 8)
!2634 = !DILocation(line: 179, column: 20, scope: !2624, inlinedAt: !2635)
!2635 = !DILocation(line: 489, column: 38, scope: !2611, inlinedAt: !2615)
!2636 = !DILocalVariable(name: "self", scope: !2637, file: !2349, line: 179, type: !224, align: 8)
!2637 = !DILexicalBlockFile(scope: !2638, file: !2349, discriminator: 0)
!2638 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h2983bec84fbd94deE", scope: !1187, file: !1186, line: 45, type: !2639, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !2642, retainedNodes: !2641)
!2639 = !DISubroutineType(types: !2640)
!2640 = !{!1176, !224}
!2641 = !{!2636}
!2642 = !{!206, !2643}
!2643 = !DITemplateTypeParameter(name: "U", type: !7)
!2644 = !DILocation(line: 179, column: 20, scope: !2637, inlinedAt: !2645)
!2645 = !DILocation(line: 728, column: 24, scope: !2625, inlinedAt: !2635)
!2646 = !DILocalVariable(name: "data_address", scope: !2647, file: !2349, line: 179, type: !1176, align: 8)
!2647 = !DILexicalBlockFile(scope: !2648, file: !2349, discriminator: 0)
!2648 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hb92def6950ed34caE", scope: !1173, file: !1172, line: 127, type: !2649, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2651)
!2649 = !DISubroutineType(types: !2650)
!2650 = !{!2628, !1176, !9}
!2651 = !{!2646, !2652}
!2652 = !DILocalVariable(name: "metadata", scope: !2647, file: !2349, line: 179, type: !9, align: 8)
!2653 = !DILocation(line: 179, column: 20, scope: !2647, inlinedAt: !2654)
!2654 = !DILocation(line: 728, column: 5, scope: !2625, inlinedAt: !2635)
!2655 = !DILocalVariable(name: "ptr", scope: !2656, file: !2349, line: 179, type: !2628, align: 8)
!2656 = !DILexicalBlockFile(scope: !2657, file: !2349, discriminator: 0)
!2657 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9bbcc57ffe0df70eE", scope: !1847, file: !195, line: 196, type: !2658, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2660)
!2658 = !DISubroutineType(types: !2659)
!2659 = !{!1847, !2628}
!2660 = !{!2655}
!2661 = !DILocation(line: 179, column: 20, scope: !2656, inlinedAt: !2662)
!2662 = !DILocation(line: 489, column: 18, scope: !2611, inlinedAt: !2615)
!2663 = !DILocation(line: 179, column: 17, scope: !2362)
!2664 = !DILocation(line: 180, column: 13, scope: !2348)
!2665 = !DILocation(line: 182, column: 6, scope: !2348)
!2666 = !DILocalVariable(name: "self", scope: !2667, file: !2349, line: 174, type: !201, align: 8)
!2667 = !DILexicalBlockFile(scope: !2668, file: !2349, discriminator: 0)
!2668 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h0a8b74df506a48abE", scope: !201, file: !195, line: 330, type: !229, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2669)
!2669 = !{!2666}
!2670 = !DILocation(line: 174, column: 21, scope: !2667, inlinedAt: !2671)
!2671 = !DILocation(line: 489, column: 70, scope: !2385, inlinedAt: !2391)
!2672 = !DILocalVariable(name: "data", scope: !2673, file: !2349, line: 174, type: !224, align: 8)
!2673 = !DILexicalBlockFile(scope: !2674, file: !2349, discriminator: 0)
!2674 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h944f1c6b137c5871E", scope: !198, file: !817, line: 727, type: !2626, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2675)
!2675 = !{!2672, !2676}
!2676 = !DILocalVariable(name: "len", scope: !2673, file: !2349, line: 174, type: !9, align: 8)
!2677 = !DILocation(line: 174, column: 21, scope: !2673, inlinedAt: !2678)
!2678 = !DILocation(line: 489, column: 38, scope: !2385, inlinedAt: !2391)
!2679 = !DILocalVariable(name: "self", scope: !2680, file: !2349, line: 174, type: !224, align: 8)
!2680 = !DILexicalBlockFile(scope: !2681, file: !2349, discriminator: 0)
!2681 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h2983bec84fbd94deE", scope: !1187, file: !1186, line: 45, type: !2639, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !2642, retainedNodes: !2682)
!2682 = !{!2679}
!2683 = !DILocation(line: 174, column: 21, scope: !2680, inlinedAt: !2684)
!2684 = !DILocation(line: 728, column: 24, scope: !2674, inlinedAt: !2678)
!2685 = !DILocalVariable(name: "data_address", scope: !2686, file: !2349, line: 174, type: !1176, align: 8)
!2686 = !DILexicalBlockFile(scope: !2687, file: !2349, discriminator: 0)
!2687 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hb92def6950ed34caE", scope: !1173, file: !1172, line: 127, type: !2649, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2688)
!2688 = !{!2685, !2689}
!2689 = !DILocalVariable(name: "metadata", scope: !2686, file: !2349, line: 174, type: !9, align: 8)
!2690 = !DILocation(line: 174, column: 21, scope: !2686, inlinedAt: !2691)
!2691 = !DILocation(line: 728, column: 5, scope: !2674, inlinedAt: !2678)
!2692 = !DILocalVariable(name: "ptr", scope: !2693, file: !2349, line: 174, type: !2628, align: 8)
!2693 = !DILexicalBlockFile(scope: !2694, file: !2349, discriminator: 0)
!2694 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9bbcc57ffe0df70eE", scope: !1847, file: !195, line: 196, type: !2658, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2695)
!2695 = !{!2692}
!2696 = !DILocation(line: 174, column: 21, scope: !2693, inlinedAt: !2697)
!2697 = !DILocation(line: 489, column: 18, scope: !2385, inlinedAt: !2391)
!2698 = !DILocation(line: 174, column: 18, scope: !2348)
!2699 = !DILocation(line: 174, column: 72, scope: !2348)
!2700 = distinct !DISubprogram(name: "grow_impl", linkageName: "_ZN5alloc5alloc6Global9grow_impl17hf4b384061ffd400cE", scope: !1100, file: !2349, line: 186, type: !2701, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2703)
!2701 = !DISubroutineType(types: !2702)
!2702 = !{!1839, !2352, !201, !261, !261, !43}
!2703 = !{!2704, !2705, !2706, !2707, !2708, !2709, !2711, !2712, !2714, !2716, !2718, !2720, !2722, !2724, !2726, !2728}
!2704 = !DILocalVariable(name: "self", arg: 1, scope: !2700, file: !2349, line: 187, type: !2352)
!2705 = !DILocalVariable(name: "ptr", arg: 2, scope: !2700, file: !2349, line: 188, type: !201)
!2706 = !DILocalVariable(name: "old_layout", arg: 3, scope: !2700, file: !2349, line: 189, type: !261)
!2707 = !DILocalVariable(name: "new_layout", arg: 4, scope: !2700, file: !2349, line: 190, type: !261)
!2708 = !DILocalVariable(name: "zeroed", arg: 5, scope: !2700, file: !2349, line: 191, type: !43)
!2709 = !DILocalVariable(name: "old_size", scope: !2710, file: !2349, line: 203, type: !9, align: 8)
!2710 = distinct !DILexicalBlock(scope: !2700, file: !2349, line: 203, column: 13)
!2711 = !DILocalVariable(name: "old_size", scope: !2710, file: !2349, line: 203, type: !592, align: 8)
!2712 = !DILocalVariable(name: "new_size", scope: !2713, file: !2349, line: 204, type: !9, align: 8)
!2713 = distinct !DILexicalBlock(scope: !2710, file: !2349, line: 204, column: 17)
!2714 = !DILocalVariable(name: "raw_ptr", scope: !2715, file: !2349, line: 209, type: !224, align: 8)
!2715 = distinct !DILexicalBlock(scope: !2713, file: !2349, line: 209, column: 17)
!2716 = !DILocalVariable(name: "ptr", scope: !2717, file: !2349, line: 210, type: !201, align: 8)
!2717 = distinct !DILexicalBlock(scope: !2715, file: !2349, line: 210, column: 17)
!2718 = !DILocalVariable(name: "residual", scope: !2719, file: !2349, line: 210, type: !2365, align: 1)
!2719 = distinct !DILexicalBlock(scope: !2715, file: !2349, line: 210, column: 66)
!2720 = !DILocalVariable(name: "val", scope: !2721, file: !2349, line: 210, type: !201, align: 8)
!2721 = distinct !DILexicalBlock(scope: !2715, file: !2349, line: 210, column: 27)
!2722 = !DILocalVariable(name: "old_size", scope: !2723, file: !2349, line: 222, type: !9, align: 8)
!2723 = distinct !DILexicalBlock(scope: !2700, file: !2349, line: 222, column: 13)
!2724 = !DILocalVariable(name: "new_ptr", scope: !2725, file: !2349, line: 223, type: !1847, align: 8)
!2725 = distinct !DILexicalBlock(scope: !2723, file: !2349, line: 223, column: 17)
!2726 = !DILocalVariable(name: "residual", scope: !2727, file: !2349, line: 223, type: !2365, align: 1)
!2727 = distinct !DILexicalBlock(scope: !2723, file: !2349, line: 223, column: 66)
!2728 = !DILocalVariable(name: "val", scope: !2729, file: !2349, line: 223, type: !1847, align: 8)
!2729 = distinct !DILexicalBlock(scope: !2723, file: !2349, line: 223, column: 31)
!2730 = !DILocation(line: 187, column: 9, scope: !2700)
!2731 = !DILocation(line: 188, column: 9, scope: !2700)
!2732 = !DILocation(line: 189, column: 9, scope: !2700)
!2733 = !DILocation(line: 190, column: 9, scope: !2700)
!2734 = !DILocation(line: 191, column: 9, scope: !2700)
!2735 = !DILocalVariable(name: "layout", scope: !2736, file: !2349, line: 209, type: !261, align: 8)
!2736 = distinct !DISubprogram(name: "realloc", linkageName: "_ZN5alloc5alloc7realloc17hc38791d4d4ed6a88E", scope: !1101, file: !2349, line: 131, type: !2737, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2739)
!2737 = !DISubroutineType(types: !2738)
!2738 = !{!224, !224, !261, !9}
!2739 = !{!2740, !2735, !2741}
!2740 = !DILocalVariable(name: "ptr", scope: !2736, file: !2349, line: 209, type: !224, align: 8)
!2741 = !DILocalVariable(name: "new_size", scope: !2736, file: !2349, line: 209, type: !9, align: 8)
!2742 = !DILocation(line: 209, column: 31, scope: !2736, inlinedAt: !2743)
!2743 = !DILocation(line: 209, column: 31, scope: !2713)
!2744 = !DILocalVariable(name: "self", scope: !2745, file: !2349, line: 210, type: !2426, align: 8)
!2745 = !DILexicalBlockFile(scope: !2746, file: !2349, discriminator: 0)
!2746 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h3d1cd4f613584b42E", scope: !1349, file: !1348, line: 2117, type: !2408, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !2434, retainedNodes: !2747)
!2747 = !{!2744, !2748, !2751}
!2748 = !DILocalVariable(name: "v", scope: !2749, file: !2349, line: 210, type: !201, align: 8)
!2749 = !DILexicalBlockFile(scope: !2750, file: !2349, discriminator: 0)
!2750 = distinct !DILexicalBlock(scope: !2746, file: !1348, line: 2119, column: 13)
!2751 = !DILocalVariable(name: "e", scope: !2752, file: !2349, line: 210, type: !1857, align: 1)
!2752 = !DILexicalBlockFile(scope: !2753, file: !2349, discriminator: 0)
!2753 = distinct !DILexicalBlock(scope: !2746, file: !1348, line: 2120, column: 13)
!2754 = !DILocation(line: 210, column: 27, scope: !2745, inlinedAt: !2755)
!2755 = !DILocation(line: 210, column: 27, scope: !2715)
!2756 = !DILocalVariable(name: "self", scope: !2757, file: !2349, line: 210, type: !1153, align: 8)
!2757 = !DILexicalBlockFile(scope: !2758, file: !2349, discriminator: 0)
!2758 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h409a4eae9fe70b74E", scope: !1153, file: !1395, line: 1051, type: !2452, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !2434, retainedNodes: !2759)
!2759 = !{!2756, !2760, !2761}
!2760 = !DILocalVariable(name: "err", scope: !2757, file: !2349, line: 210, type: !1857, align: 1)
!2761 = !DILocalVariable(name: "v", scope: !2762, file: !2349, line: 210, type: !201, align: 8)
!2762 = !DILexicalBlockFile(scope: !2763, file: !2349, discriminator: 0)
!2763 = distinct !DILexicalBlock(scope: !2758, file: !1395, line: 1056, column: 13)
!2764 = !DILocation(line: 210, column: 27, scope: !2757, inlinedAt: !2755)
!2765 = !DILocation(line: 210, column: 66, scope: !2719)
!2766 = !DILocalVariable(name: "residual", scope: !2767, file: !2349, line: 210, type: !2365, align: 1)
!2767 = !DILexicalBlockFile(scope: !2768, file: !2349, discriminator: 0)
!2768 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h867b40cd7c4f69a8E", scope: !1408, file: !1348, line: 2132, type: !2464, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !2470, retainedNodes: !2769)
!2769 = !{!2766, !2770}
!2770 = !DILocalVariable(name: "e", scope: !2771, file: !2349, line: 210, type: !1857, align: 1)
!2771 = !DILexicalBlockFile(scope: !2772, file: !2349, discriminator: 0)
!2772 = distinct !DILexicalBlock(scope: !2768, file: !1348, line: 2134, column: 13)
!2773 = !DILocation(line: 210, column: 27, scope: !2767, inlinedAt: !2774)
!2774 = !DILocation(line: 210, column: 27, scope: !2719)
!2775 = !DILocalVariable(name: "self", scope: !2776, file: !2349, line: 223, type: !1839, align: 8)
!2776 = !DILexicalBlockFile(scope: !2777, file: !2349, discriminator: 0)
!2777 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h02d265f9e7fca158E", scope: !1349, file: !1348, line: 2117, type: !2778, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1854, retainedNodes: !2795)
!2778 = !DISubroutineType(types: !2779)
!2779 = !{!2780, !1839}
!2780 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>", scope: !1353, file: !2, size: 128, align: 64, elements: !2781, templateParams: !23, identifier: "742106b60153cc66c591376c04358a32")
!2781 = !{!2782}
!2782 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2780, file: !2, size: 128, align: 64, elements: !2783, templateParams: !23, identifier: "51e560db12d8945267902f7758889ab2", discriminator: !2794)
!2783 = !{!2784, !2790}
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !2782, file: !2, baseType: !2785, size: 128, align: 64)
!2785 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !2780, file: !2, size: 128, align: 64, elements: !2786, templateParams: !2788, identifier: "7a7db6f08dd8181ffbc0406581832086")
!2786 = !{!2787}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2785, file: !2, baseType: !1847, size: 128, align: 64)
!2788 = !{!2419, !2789}
!2789 = !DITemplateTypeParameter(name: "C", type: !1847)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !2782, file: !2, baseType: !2791, size: 128, align: 64, extraData: i64 0)
!2791 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !2780, file: !2, size: 128, align: 64, elements: !2792, templateParams: !2788, identifier: "520e4a70aaf12c465e959335c5fb5ede")
!2792 = !{!2793}
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2791, file: !2, baseType: !2365, align: 8)
!2794 = !DIDerivedType(tag: DW_TAG_member, scope: !2780, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagArtificial)
!2795 = !{!2775, !2796, !2799}
!2796 = !DILocalVariable(name: "v", scope: !2797, file: !2349, line: 223, type: !1847, align: 8)
!2797 = !DILexicalBlockFile(scope: !2798, file: !2349, discriminator: 0)
!2798 = distinct !DILexicalBlock(scope: !2777, file: !1348, line: 2119, column: 13)
!2799 = !DILocalVariable(name: "e", scope: !2800, file: !2349, line: 223, type: !1857, align: 1)
!2800 = !DILexicalBlockFile(scope: !2801, file: !2349, discriminator: 0)
!2801 = distinct !DILexicalBlock(scope: !2777, file: !1348, line: 2120, column: 13)
!2802 = !DILocation(line: 223, column: 31, scope: !2776, inlinedAt: !2803)
!2803 = !DILocation(line: 223, column: 31, scope: !2723)
!2804 = !DILocation(line: 223, column: 66, scope: !2727)
!2805 = !DILocalVariable(name: "residual", scope: !2806, file: !2349, line: 223, type: !2365, align: 1)
!2806 = !DILexicalBlockFile(scope: !2807, file: !2349, discriminator: 0)
!2807 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h867b40cd7c4f69a8E", scope: !1408, file: !1348, line: 2132, type: !2464, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !2470, retainedNodes: !2808)
!2808 = !{!2805, !2809}
!2809 = !DILocalVariable(name: "e", scope: !2810, file: !2349, line: 223, type: !1857, align: 1)
!2810 = !DILexicalBlockFile(scope: !2811, file: !2349, discriminator: 0)
!2811 = distinct !DILexicalBlock(scope: !2807, file: !1348, line: 2134, column: 13)
!2812 = !DILocation(line: 223, column: 31, scope: !2806, inlinedAt: !2813)
!2813 = !DILocation(line: 223, column: 31, scope: !2727)
!2814 = !DILocalVariable(name: "self", scope: !2815, file: !2349, line: 203, type: !1273, align: 8)
!2815 = !DILexicalBlockFile(scope: !2816, file: !2349, discriminator: 0)
!2816 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17hc3e9e20e967012deE", scope: !1273, file: !1272, line: 82, type: !1277, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2817)
!2817 = !{!2814}
!2818 = !DILocation(line: 203, column: 25, scope: !2815, inlinedAt: !2819)
!2819 = !DILocation(line: 131, column: 9, scope: !2820, inlinedAt: !2824)
!2820 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h18656b4472f77024E", scope: !261, file: !1244, line: 130, type: !2481, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2821)
!2821 = !{!2822}
!2822 = !DILocalVariable(name: "self", scope: !2823, file: !2349, line: 203, type: !1882, align: 8)
!2823 = !DILexicalBlockFile(scope: !2820, file: !2349, discriminator: 0)
!2824 = !DILocation(line: 203, column: 25, scope: !2700)
!2825 = !DILocalVariable(name: "self", scope: !2826, file: !2349, line: 203, type: !267, align: 8)
!2826 = !DILexicalBlockFile(scope: !2827, file: !2349, discriminator: 0)
!2827 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1b1d76d92bec5242E", scope: !267, file: !1285, line: 39, type: !1286, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2828)
!2828 = !{!2825}
!2829 = !DILocation(line: 203, column: 25, scope: !2826, inlinedAt: !2819)
!2830 = !DILocalVariable(name: "self", scope: !2831, file: !2349, line: 203, type: !1273, align: 8)
!2831 = !DILexicalBlockFile(scope: !2832, file: !2349, discriminator: 0)
!2832 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17hc3e9e20e967012deE", scope: !1273, file: !1272, line: 82, type: !1277, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2833)
!2833 = !{!2830}
!2834 = !DILocation(line: 203, column: 47, scope: !2831, inlinedAt: !2835)
!2835 = !DILocation(line: 131, column: 9, scope: !2836, inlinedAt: !2840)
!2836 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h18656b4472f77024E", scope: !261, file: !1244, line: 130, type: !2481, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2837)
!2837 = !{!2838}
!2838 = !DILocalVariable(name: "self", scope: !2839, file: !2349, line: 203, type: !1882, align: 8)
!2839 = !DILexicalBlockFile(scope: !2836, file: !2349, discriminator: 0)
!2840 = !DILocation(line: 203, column: 47, scope: !2700)
!2841 = !DILocalVariable(name: "self", scope: !2842, file: !2349, line: 203, type: !267, align: 8)
!2842 = !DILexicalBlockFile(scope: !2843, file: !2349, discriminator: 0)
!2843 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1b1d76d92bec5242E", scope: !267, file: !1285, line: 39, type: !1286, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2844)
!2844 = !{!2841}
!2845 = !DILocation(line: 203, column: 47, scope: !2842, inlinedAt: !2835)
!2846 = !DILocalVariable(name: "self", scope: !2847, file: !2349, line: 209, type: !1273, align: 8)
!2847 = !DILexicalBlockFile(scope: !2848, file: !2349, discriminator: 0)
!2848 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17hc3e9e20e967012deE", scope: !1273, file: !1272, line: 82, type: !1277, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2849)
!2849 = !{!2846}
!2850 = !DILocation(line: 209, column: 31, scope: !2847, inlinedAt: !2851)
!2851 = !DILocation(line: 131, column: 9, scope: !2852, inlinedAt: !2856)
!2852 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h18656b4472f77024E", scope: !261, file: !1244, line: 130, type: !2481, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2853)
!2853 = !{!2854}
!2854 = !DILocalVariable(name: "self", scope: !2855, file: !2349, line: 209, type: !1882, align: 8)
!2855 = !DILexicalBlockFile(scope: !2852, file: !2349, discriminator: 0)
!2856 = !DILocation(line: 132, column: 49, scope: !2736, inlinedAt: !2743)
!2857 = !DILocalVariable(name: "self", scope: !2858, file: !2349, line: 209, type: !267, align: 8)
!2858 = !DILexicalBlockFile(scope: !2859, file: !2349, discriminator: 0)
!2859 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1b1d76d92bec5242E", scope: !267, file: !1285, line: 39, type: !1286, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2860)
!2860 = !{!2857}
!2861 = !DILocation(line: 209, column: 31, scope: !2858, inlinedAt: !2851)
!2862 = !DILocation(line: 210, column: 27, scope: !2752, inlinedAt: !2755)
!2863 = !DILocation(line: 210, column: 27, scope: !2771, inlinedAt: !2774)
!2864 = !DILocation(line: 223, column: 31, scope: !2800, inlinedAt: !2803)
!2865 = !DILocation(line: 223, column: 31, scope: !2810, inlinedAt: !2813)
!2866 = !DILocalVariable(name: "self", scope: !2867, file: !2349, line: 224, type: !201, align: 8)
!2867 = !DILexicalBlockFile(scope: !2868, file: !2349, discriminator: 0)
!2868 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h0a8b74df506a48abE", scope: !201, file: !195, line: 330, type: !229, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2869)
!2869 = !{!2866}
!2870 = !DILocation(line: 224, column: 56, scope: !2867, inlinedAt: !2871)
!2871 = !DILocation(line: 553, column: 9, scope: !2872, inlinedAt: !2878)
!2872 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h7e72224bcec710d0E", scope: !1847, file: !195, line: 552, type: !2873, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2875)
!2873 = !DISubroutineType(types: !2874)
!2874 = !{!224, !1847}
!2875 = !{!2876}
!2876 = !DILocalVariable(name: "self", scope: !2877, file: !2349, line: 224, type: !1847, align: 8)
!2877 = !DILexicalBlockFile(scope: !2872, file: !2349, discriminator: 0)
!2878 = !DILocation(line: 224, column: 56, scope: !2725)
!2879 = !DILocalVariable(name: "runtime", scope: !2880, file: !2349, line: 224, type: !2891, align: 8)
!2880 = !DILexicalBlockFile(scope: !2881, file: !2349, discriminator: 0)
!2881 = distinct !DILexicalBlock(scope: !2882, file: !1300, line: 2336, column: 13)
!2882 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h0ca73b6356b8ec4fE", scope: !2883, file: !1300, line: 2458, type: !2884, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2886)
!2883 = !DINamespace(name: "intrinsics", scope: !98)
!2884 = !DISubroutineType(types: !2885)
!2885 = !{null, !204, !224, !9}
!2886 = !{!2887, !2889, !2890, !2879}
!2887 = !DILocalVariable(name: "src", scope: !2888, file: !2349, line: 224, type: !204, align: 8)
!2888 = !DILexicalBlockFile(scope: !2882, file: !2349, discriminator: 0)
!2889 = !DILocalVariable(name: "dst", scope: !2888, file: !2349, line: 224, type: !224, align: 8)
!2890 = !DILocalVariable(name: "count", scope: !2888, file: !2349, line: 224, type: !9, align: 8)
!2891 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !2892, file: !2, size: 192, align: 64, elements: !2893, templateParams: !23, identifier: "fb5d8c4998ddcc045cba0da9a8307400")
!2892 = !DINamespace(name: "copy_nonoverlapping", scope: !2883)
!2893 = !{!2894, !2896, !2898}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__src", scope: !2891, file: !2, baseType: !2895, size: 64, align: 64)
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const u8", baseType: !204, size: 64, align: 64, dwarfAddressSpace: 0)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__dst", scope: !2891, file: !2, baseType: !2897, size: 64, align: 64, offset: 64)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut u8", baseType: !224, size: 64, align: 64, dwarfAddressSpace: 0)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__count", scope: !2891, file: !2, baseType: !592, size: 64, align: 64, offset: 128)
!2899 = !DILocation(line: 224, column: 17, scope: !2880, inlinedAt: !2900)
!2900 = !DILocation(line: 224, column: 17, scope: !2725)
!2901 = !DILocation(line: 198, column: 15, scope: !2700)
!2902 = !DILocalVariable(name: "self", scope: !2903, file: !2349, line: 198, type: !1882, align: 8)
!2903 = !DILexicalBlockFile(scope: !2904, file: !2349, discriminator: 0)
!2904 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h5ead29542ac74488E", scope: !261, file: !1244, line: 120, type: !2481, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2905)
!2905 = !{!2902}
!2906 = !DILocation(line: 198, column: 15, scope: !2903, inlinedAt: !2901)
!2907 = !DILocation(line: 198, column: 9, scope: !2700)
!2908 = !DILocation(line: 199, column: 34, scope: !2700)
!2909 = !DILocation(line: 199, column: 18, scope: !2700)
!2910 = !DILocation(line: 203, column: 25, scope: !2823, inlinedAt: !2824)
!2911 = !DILocalVariable(name: "n", scope: !2912, file: !2349, line: 203, type: !9, align: 8)
!2912 = !DILexicalBlockFile(scope: !2913, file: !2349, discriminator: 0)
!2913 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h2d52a1a9b55eac1dE", scope: !1273, file: !1272, line: 56, type: !1294, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2914)
!2914 = !{!2911, !2915}
!2915 = !DILocalVariable(name: "runtime", scope: !2916, file: !2349, line: 203, type: !1301, align: 8)
!2916 = !DILexicalBlockFile(scope: !2917, file: !2349, discriminator: 0)
!2917 = distinct !DILexicalBlock(scope: !2913, file: !1300, line: 2336, column: 13)
!2918 = !DILocation(line: 203, column: 25, scope: !2912, inlinedAt: !2919)
!2919 = !DILocation(line: 41, column: 18, scope: !2827, inlinedAt: !2819)
!2920 = !DILocation(line: 203, column: 47, scope: !2839, inlinedAt: !2840)
!2921 = !DILocalVariable(name: "n", scope: !2922, file: !2349, line: 203, type: !9, align: 8)
!2922 = !DILexicalBlockFile(scope: !2923, file: !2349, discriminator: 0)
!2923 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h2d52a1a9b55eac1dE", scope: !1273, file: !1272, line: 56, type: !1294, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2924)
!2924 = !{!2921, !2925}
!2925 = !DILocalVariable(name: "runtime", scope: !2926, file: !2349, line: 203, type: !1301, align: 8)
!2926 = !DILexicalBlockFile(scope: !2927, file: !2349, discriminator: 0)
!2927 = distinct !DILexicalBlock(scope: !2923, file: !1300, line: 2336, column: 13)
!2928 = !DILocation(line: 203, column: 47, scope: !2922, inlinedAt: !2929)
!2929 = !DILocation(line: 41, column: 18, scope: !2843, inlinedAt: !2835)
!2930 = !DILocation(line: 222, column: 13, scope: !2700)
!2931 = !DILocation(line: 222, column: 13, scope: !2723)
!2932 = !DILocation(line: 223, column: 47, scope: !2723)
!2933 = !DILocation(line: 203, column: 13, scope: !2700)
!2934 = !DILocation(line: 203, column: 13, scope: !2710)
!2935 = !DILocation(line: 204, column: 32, scope: !2710)
!2936 = !DILocalVariable(name: "self", scope: !2937, file: !2349, line: 204, type: !1882, align: 8)
!2937 = !DILexicalBlockFile(scope: !2938, file: !2349, discriminator: 0)
!2938 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h5ead29542ac74488E", scope: !261, file: !1244, line: 120, type: !2481, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2939)
!2939 = !{!2936}
!2940 = !DILocation(line: 204, column: 32, scope: !2937, inlinedAt: !2935)
!2941 = !DILocation(line: 204, column: 21, scope: !2713)
!2942 = !DILocation(line: 207, column: 48, scope: !2713)
!2943 = !DILocalVariable(name: "self", scope: !2944, file: !2349, line: 207, type: !1882, align: 8)
!2944 = !DILexicalBlockFile(scope: !2945, file: !2349, discriminator: 0)
!2945 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h5ead29542ac74488E", scope: !261, file: !1244, line: 120, type: !2481, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2946)
!2946 = !{!2943}
!2947 = !DILocation(line: 207, column: 48, scope: !2944, inlinedAt: !2942)
!2948 = !DILocation(line: 207, column: 36, scope: !2713)
!2949 = !DILocation(line: 207, column: 17, scope: !2713)
!2950 = !DILocation(line: 209, column: 39, scope: !2713)
!2951 = !DILocalVariable(name: "self", scope: !2952, file: !2349, line: 209, type: !201, align: 8)
!2952 = !DILexicalBlockFile(scope: !2953, file: !2349, discriminator: 0)
!2953 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h0a8b74df506a48abE", scope: !201, file: !195, line: 330, type: !229, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2954)
!2954 = !{!2951}
!2955 = !DILocation(line: 209, column: 39, scope: !2952, inlinedAt: !2950)
!2956 = !DILocation(line: 209, column: 53, scope: !2713)
!2957 = !DILocation(line: 209, column: 65, scope: !2713)
!2958 = !DILocalVariable(name: "self", scope: !2959, file: !2349, line: 209, type: !1882, align: 8)
!2959 = !DILexicalBlockFile(scope: !2960, file: !2349, discriminator: 0)
!2960 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h5ead29542ac74488E", scope: !261, file: !1244, line: 120, type: !2481, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2961)
!2961 = !{!2958}
!2962 = !DILocation(line: 209, column: 31, scope: !2959, inlinedAt: !2963)
!2963 = !DILocation(line: 132, column: 34, scope: !2736, inlinedAt: !2743)
!2964 = !DILocation(line: 209, column: 31, scope: !2855, inlinedAt: !2856)
!2965 = !DILocalVariable(name: "n", scope: !2966, file: !2349, line: 209, type: !9, align: 8)
!2966 = !DILexicalBlockFile(scope: !2967, file: !2349, discriminator: 0)
!2967 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h2d52a1a9b55eac1dE", scope: !1273, file: !1272, line: 56, type: !1294, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !2968)
!2968 = !{!2965, !2969}
!2969 = !DILocalVariable(name: "runtime", scope: !2970, file: !2349, line: 209, type: !1301, align: 8)
!2970 = !DILexicalBlockFile(scope: !2971, file: !2349, discriminator: 0)
!2971 = distinct !DILexicalBlock(scope: !2967, file: !1300, line: 2336, column: 13)
!2972 = !DILocation(line: 209, column: 31, scope: !2966, inlinedAt: !2973)
!2973 = !DILocation(line: 41, column: 18, scope: !2859, inlinedAt: !2851)
!2974 = !DILocation(line: 209, column: 21, scope: !2715)
!2975 = !DILocation(line: 210, column: 27, scope: !2762, inlinedAt: !2755)
!2976 = !DILocation(line: 210, column: 27, scope: !2749, inlinedAt: !2755)
!2977 = !DILocation(line: 210, column: 27, scope: !2721)
!2978 = !DILocation(line: 210, column: 21, scope: !2717)
!2979 = !DILocation(line: 211, column: 20, scope: !2717)
!2980 = !DILocation(line: 1, column: 1, scope: !2981)
!2981 = !DILexicalBlockFile(scope: !2700, file: !2982, discriminator: 0)
!2982 = !DIFile(filename: "src/lib.rs", directory: "/home/calvin/git/c2rust/tests/arrays", checksumkind: CSK_MD5, checksum: "2786dcc40d749a1dcf328eb1c9a43b8b")
!2983 = !DILocation(line: 229, column: 6, scope: !2700)
!2984 = !DILocation(line: 214, column: 50, scope: !2717)
!2985 = !DILocalVariable(name: "data", scope: !2986, file: !2349, line: 214, type: !201, align: 8)
!2986 = !DILexicalBlockFile(scope: !2987, file: !2349, discriminator: 0)
!2987 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h8f540a71b0dbb1e6E", scope: !1847, file: !195, line: 487, type: !2386, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2988)
!2988 = !{!2985, !2989}
!2989 = !DILocalVariable(name: "len", scope: !2986, file: !2349, line: 214, type: !9, align: 8)
!2990 = !DILocation(line: 214, column: 20, scope: !2986, inlinedAt: !2991)
!2991 = !DILocation(line: 214, column: 20, scope: !2717)
!2992 = !DILocation(line: 214, column: 55, scope: !2717)
!2993 = !DILocalVariable(name: "self", scope: !2994, file: !2349, line: 214, type: !201, align: 8)
!2994 = !DILexicalBlockFile(scope: !2995, file: !2349, discriminator: 0)
!2995 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h0a8b74df506a48abE", scope: !201, file: !195, line: 330, type: !229, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !2996)
!2996 = !{!2993}
!2997 = !DILocation(line: 214, column: 20, scope: !2994, inlinedAt: !2998)
!2998 = !DILocation(line: 489, column: 70, scope: !2987, inlinedAt: !2991)
!2999 = !DILocalVariable(name: "data", scope: !3000, file: !2349, line: 214, type: !224, align: 8)
!3000 = !DILexicalBlockFile(scope: !3001, file: !2349, discriminator: 0)
!3001 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h944f1c6b137c5871E", scope: !198, file: !817, line: 727, type: !2626, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !3002)
!3002 = !{!2999, !3003}
!3003 = !DILocalVariable(name: "len", scope: !3000, file: !2349, line: 214, type: !9, align: 8)
!3004 = !DILocation(line: 214, column: 20, scope: !3000, inlinedAt: !3005)
!3005 = !DILocation(line: 489, column: 38, scope: !2987, inlinedAt: !2991)
!3006 = !DILocalVariable(name: "self", scope: !3007, file: !2349, line: 214, type: !224, align: 8)
!3007 = !DILexicalBlockFile(scope: !3008, file: !2349, discriminator: 0)
!3008 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h2983bec84fbd94deE", scope: !1187, file: !1186, line: 45, type: !2639, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !2642, retainedNodes: !3009)
!3009 = !{!3006}
!3010 = !DILocation(line: 214, column: 20, scope: !3007, inlinedAt: !3011)
!3011 = !DILocation(line: 728, column: 24, scope: !3001, inlinedAt: !3005)
!3012 = !DILocalVariable(name: "data_address", scope: !3013, file: !2349, line: 214, type: !1176, align: 8)
!3013 = !DILexicalBlockFile(scope: !3014, file: !2349, discriminator: 0)
!3014 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hb92def6950ed34caE", scope: !1173, file: !1172, line: 127, type: !2649, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !3015)
!3015 = !{!3012, !3016}
!3016 = !DILocalVariable(name: "metadata", scope: !3013, file: !2349, line: 214, type: !9, align: 8)
!3017 = !DILocation(line: 214, column: 20, scope: !3013, inlinedAt: !3018)
!3018 = !DILocation(line: 728, column: 5, scope: !3001, inlinedAt: !3005)
!3019 = !DILocalVariable(name: "ptr", scope: !3020, file: !2349, line: 214, type: !2628, align: 8)
!3020 = !DILexicalBlockFile(scope: !3021, file: !2349, discriminator: 0)
!3021 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9bbcc57ffe0df70eE", scope: !1847, file: !195, line: 196, type: !2658, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !3022)
!3022 = !{!3019}
!3023 = !DILocation(line: 214, column: 20, scope: !3020, inlinedAt: !3024)
!3024 = !DILocation(line: 489, column: 18, scope: !2987, inlinedAt: !2991)
!3025 = !DILocation(line: 214, column: 17, scope: !2717)
!3026 = !DILocation(line: 215, column: 13, scope: !2700)
!3027 = !DILocation(line: 212, column: 21, scope: !2717)
!3028 = !DILocalVariable(name: "self", scope: !3029, file: !2349, line: 212, type: !224, align: 8)
!3029 = !DILexicalBlockFile(scope: !3030, file: !2349, discriminator: 0)
!3030 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h034463d26023753fE", scope: !1187, file: !1186, line: 985, type: !3031, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !3033)
!3031 = !DISubroutineType(types: !3032)
!3032 = !{!224, !224, !9}
!3033 = !{!3028, !3034}
!3034 = !DILocalVariable(name: "count", scope: !3029, file: !2349, line: 212, type: !9, align: 8)
!3035 = !DILocation(line: 212, column: 21, scope: !3029, inlinedAt: !3027)
!3036 = !DILocation(line: 212, column: 33, scope: !2717)
!3037 = !DILocalVariable(name: "self", scope: !3038, file: !2349, line: 212, type: !224, align: 8)
!3038 = !DILexicalBlockFile(scope: !3039, file: !2349, discriminator: 0)
!3039 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hdc16890f5b2b7523E", scope: !1187, file: !1186, line: 465, type: !3040, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !3042)
!3040 = !DISubroutineType(types: !3041)
!3041 = !{!224, !224, !313}
!3042 = !{!3037, !3043}
!3043 = !DILocalVariable(name: "count", scope: !3038, file: !2349, line: 212, type: !313, align: 8)
!3044 = !DILocation(line: 212, column: 21, scope: !3038, inlinedAt: !3045)
!3045 = !DILocation(line: 990, column: 18, scope: !3030, inlinedAt: !3027)
!3046 = !DILocalVariable(name: "self", scope: !3047, file: !2349, line: 212, type: !224, align: 8)
!3047 = !DILexicalBlockFile(scope: !3048, file: !2349, discriminator: 0)
!3048 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17h536e737fb95c9fc4E", scope: !1187, file: !1186, line: 1441, type: !3049, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !3051)
!3049 = !DISubroutineType(types: !3050)
!3050 = !{null, !224, !169, !9}
!3051 = !{!3046, !3052, !3053}
!3052 = !DILocalVariable(name: "val", scope: !3047, file: !2349, line: 212, type: !169, align: 1)
!3053 = !DILocalVariable(name: "count", scope: !3047, file: !2349, line: 212, type: !9, align: 8)
!3054 = !DILocation(line: 212, column: 21, scope: !3047, inlinedAt: !3027)
!3055 = !DILocation(line: 212, column: 58, scope: !2717)
!3056 = !DILocalVariable(name: "dst", scope: !3057, file: !2349, line: 212, type: !224, align: 8)
!3057 = !DILexicalBlockFile(scope: !3058, file: !2349, discriminator: 0)
!3058 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core10intrinsics11write_bytes17haab48456827778d6E", scope: !2883, file: !1300, line: 2613, type: !3049, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !3059)
!3059 = !{!3056, !3060, !3061, !3062}
!3060 = !DILocalVariable(name: "val", scope: !3057, file: !2349, line: 212, type: !169, align: 1)
!3061 = !DILocalVariable(name: "count", scope: !3057, file: !2349, line: 212, type: !9, align: 8)
!3062 = !DILocalVariable(name: "runtime", scope: !3063, file: !2349, line: 212, type: !3065, align: 8)
!3063 = !DILexicalBlockFile(scope: !3064, file: !2349, discriminator: 0)
!3064 = distinct !DILexicalBlock(scope: !3058, file: !1300, line: 2336, column: 13)
!3065 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !3066, file: !2, size: 64, align: 64, elements: !3067, templateParams: !23, identifier: "6002da543977e8e7318dc1c6e6a51af")
!3066 = !DINamespace(name: "write_bytes", scope: !2883)
!3067 = !{!3068}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__dst", scope: !3065, file: !2, baseType: !2897, size: 64, align: 64)
!3069 = !DILocation(line: 212, column: 21, scope: !3057, inlinedAt: !3070)
!3070 = !DILocation(line: 1446, column: 18, scope: !3048, inlinedAt: !3027)
!3071 = !DILocation(line: 211, column: 17, scope: !2717)
!3072 = !DILocation(line: 223, column: 31, scope: !2797, inlinedAt: !2803)
!3073 = !DILocation(line: 223, column: 31, scope: !2729)
!3074 = !DILocation(line: 223, column: 21, scope: !2725)
!3075 = !DILocation(line: 224, column: 42, scope: !2725)
!3076 = !DILocalVariable(name: "self", scope: !3077, file: !2349, line: 224, type: !201, align: 8)
!3077 = !DILexicalBlockFile(scope: !3078, file: !2349, discriminator: 0)
!3078 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h0a8b74df506a48abE", scope: !201, file: !195, line: 330, type: !229, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !3079)
!3079 = !{!3076}
!3080 = !DILocation(line: 224, column: 42, scope: !3077, inlinedAt: !3075)
!3081 = !DILocation(line: 224, column: 17, scope: !2888, inlinedAt: !2900)
!3082 = !DILocation(line: 224, column: 56, scope: !2877, inlinedAt: !2878)
!3083 = !DILocalVariable(name: "self", scope: !3084, file: !2349, line: 224, type: !1847, align: 8)
!3084 = !DILexicalBlockFile(scope: !3085, file: !2349, discriminator: 0)
!3085 = distinct !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h5c098149ddf59a1dE", scope: !1847, file: !195, line: 532, type: !3086, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !3088)
!3086 = !DISubroutineType(types: !3087)
!3087 = !{!201, !1847}
!3088 = !{!3083}
!3089 = !DILocation(line: 224, column: 56, scope: !3084, inlinedAt: !2871)
!3090 = !DILocalVariable(name: "self", scope: !3091, file: !2349, line: 224, type: !1847, align: 8)
!3091 = !DILexicalBlockFile(scope: !3092, file: !2349, discriminator: 0)
!3092 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h699163c5d71ce887E", scope: !1847, file: !195, line: 330, type: !3093, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !3095)
!3093 = !DISubroutineType(types: !3094)
!3094 = !{!2628, !1847}
!3095 = !{!3090}
!3096 = !DILocation(line: 224, column: 56, scope: !3091, inlinedAt: !3097)
!3097 = !DILocation(line: 534, column: 41, scope: !3085, inlinedAt: !2871)
!3098 = !DILocalVariable(name: "self", scope: !3099, file: !2349, line: 224, type: !2628, align: 8)
!3099 = !DILexicalBlockFile(scope: !3100, file: !2349, discriminator: 0)
!3100 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h2bd002882bf58002E", scope: !3101, file: !1186, line: 1778, type: !3102, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !3104)
!3101 = !DINamespace(name: "{impl#1}", scope: !1188)
!3102 = !DISubroutineType(types: !3103)
!3103 = !{!224, !2628}
!3104 = !{!3098}
!3105 = !DILocation(line: 224, column: 56, scope: !3099, inlinedAt: !3097)
!3106 = !DILocalVariable(name: "ptr", scope: !3107, file: !2349, line: 224, type: !224, align: 8)
!3107 = !DILexicalBlockFile(scope: !3108, file: !2349, discriminator: 0)
!3108 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hc66fe1711b96fc95E", scope: !201, file: !195, line: 196, type: !236, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !3109)
!3109 = !{!3106}
!3110 = !DILocation(line: 224, column: 56, scope: !3107, inlinedAt: !3111)
!3111 = !DILocation(line: 534, column: 18, scope: !3085, inlinedAt: !2871)
!3112 = !DILocation(line: 224, column: 78, scope: !2725)
!3113 = !DILocation(line: 225, column: 38, scope: !2725)
!3114 = !DILocation(line: 225, column: 17, scope: !2725)
!3115 = !DILocation(line: 226, column: 17, scope: !2725)
!3116 = !DILocation(line: 227, column: 13, scope: !2700)
!3117 = !DILocation(line: 199, column: 52, scope: !2700)
!3118 = distinct !DISubprogram(name: "finish_grow<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow17h8a5641af3fa58ed2E", scope: !188, file: !2155, line: 448, type: !3119, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !3191, retainedNodes: !3139)
!3119 = !DISubroutineType(types: !3120)
!3120 = !{!1865, !1247, !3121, !3138}
!3121 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", scope: !401, file: !2, size: 192, align: 64, elements: !3122, templateParams: !23, identifier: "2441bf159aec13ad0ba597f59aeb1a1")
!3122 = !{!3123}
!3123 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3121, file: !2, size: 192, align: 64, elements: !3124, templateParams: !23, identifier: "d785942d6e728cf8ed28d4d1a571b7a3", discriminator: !3137)
!3124 = !{!3125, !3133}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3123, file: !2, baseType: !3126, size: 192, align: 64, extraData: i64 0)
!3126 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3121, file: !2, size: 192, align: 64, elements: !23, templateParams: !3127, identifier: "4d71821a6a04b7dadd5f931d25e98cb2")
!3127 = !{!3128}
!3128 = !DITemplateTypeParameter(name: "T", type: !3129)
!3129 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)", file: !2, size: 192, align: 64, elements: !3130, templateParams: !23, identifier: "c358a41279bc49b48121f0f71b1b3c8")
!3130 = !{!3131, !3132}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3129, file: !2, baseType: !201, size: 64, align: 64)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !3129, file: !2, baseType: !261, size: 128, align: 64, offset: 64)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3123, file: !2, baseType: !3134, size: 192, align: 64)
!3134 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3121, file: !2, size: 192, align: 64, elements: !3135, templateParams: !3127, identifier: "3a54c5b1a06a194b358330f440d65fe5")
!3135 = !{!3136}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3134, file: !2, baseType: !3129, size: 192, align: 64)
!3137 = !DIDerivedType(tag: DW_TAG_member, scope: !3121, file: !2, baseType: !99, size: 64, align: 64, offset: 128, flags: DIFlagArtificial)
!3138 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::alloc::Global", baseType: !1100, size: 64, align: 64, dwarfAddressSpace: 0)
!3139 = !{!3140, !3141, !3142, !3143, !3145, !3160, !3162, !3177, !3179, !3181, !3183, !3184, !3187, !3188}
!3140 = !DILocalVariable(name: "new_layout", arg: 1, scope: !3118, file: !2155, line: 449, type: !1247)
!3141 = !DILocalVariable(name: "current_memory", arg: 2, scope: !3118, file: !2155, line: 450, type: !3121)
!3142 = !DILocalVariable(name: "alloc", arg: 3, scope: !3118, file: !2155, line: 451, type: !3138)
!3143 = !DILocalVariable(name: "new_layout", scope: !3144, file: !2155, line: 457, type: !261, align: 8)
!3144 = distinct !DILexicalBlock(scope: !3118, file: !2155, line: 457, column: 5)
!3145 = !DILocalVariable(name: "residual", scope: !3146, file: !2155, line: 457, type: !3147, align: 8)
!3146 = distinct !DILexicalBlock(scope: !3118, file: !2155, line: 457, column: 62)
!3147 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>", scope: !376, file: !2, size: 128, align: 64, elements: !3148, templateParams: !23, identifier: "5ef5f21a6f46a0206241b0c7f330dfa3")
!3148 = !{!3149}
!3149 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3147, file: !2, size: 128, align: 64, elements: !3150, templateParams: !23, identifier: "cb4858a3f71ae3f451b3ee0e26a669a0")
!3150 = !{!3151, !3156}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !3149, file: !2, baseType: !3152, size: 128, align: 64)
!3152 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !3147, file: !2, size: 128, align: 64, elements: !3153, templateParams: !3155, identifier: "416344365d509c704ad8ffe5dcfb70fa")
!3153 = !{!3154}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3152, file: !2, baseType: !1332, align: 8)
!3155 = !{!1337, !1763}
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !3149, file: !2, baseType: !3157, size: 128, align: 64)
!3157 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !3147, file: !2, size: 128, align: 64, elements: !3158, templateParams: !3155, identifier: "554770741a2c8057e7f8529a99308bf0")
!3158 = !{!3159}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3157, file: !2, baseType: !251, size: 128, align: 64)
!3160 = !DILocalVariable(name: "val", scope: !3161, file: !2155, line: 457, type: !261, align: 8)
!3161 = distinct !DILexicalBlock(scope: !3118, file: !2155, line: 457, column: 22)
!3162 = !DILocalVariable(name: "residual", scope: !3163, file: !2155, line: 459, type: !3164, align: 8)
!3163 = distinct !DILexicalBlock(scope: !3144, file: !2155, line: 459, column: 35)
!3164 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveError>", scope: !376, file: !2, size: 128, align: 64, elements: !3165, templateParams: !23, identifier: "c0cf86a3acbcbe62e1045ffe1b8697")
!3165 = !{!3166}
!3166 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3164, file: !2, size: 128, align: 64, elements: !3167, templateParams: !23, identifier: "542941ded386c5d0b8832b89b5bc0159")
!3167 = !{!3168, !3173}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !3166, file: !2, baseType: !3169, size: 128, align: 64)
!3169 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !3164, file: !2, size: 128, align: 64, elements: !3170, templateParams: !3172, identifier: "172bc5836ee47c35d518a78511939b12")
!3170 = !{!3171}
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3169, file: !2, baseType: !1332, align: 8)
!3172 = !{!1337, !1746}
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !3166, file: !2, baseType: !3174, size: 128, align: 64)
!3174 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !3164, file: !2, size: 128, align: 64, elements: !3175, templateParams: !3172, identifier: "adf3f686a95f61b9c3558b4df539adb8")
!3175 = !{!3176}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3174, file: !2, baseType: !248, size: 128, align: 64)
!3177 = !DILocalVariable(name: "val", scope: !3178, file: !2155, line: 459, type: !7, align: 1)
!3178 = distinct !DILexicalBlock(scope: !3144, file: !2155, line: 459, column: 5)
!3179 = !DILocalVariable(name: "memory", scope: !3180, file: !2155, line: 461, type: !1839, align: 8)
!3180 = distinct !DILexicalBlock(scope: !3144, file: !2155, line: 461, column: 5)
!3181 = !DILocalVariable(name: "ptr", scope: !3182, file: !2155, line: 461, type: !201, align: 8)
!3182 = distinct !DILexicalBlock(scope: !3144, file: !2155, line: 461, column: 66)
!3183 = !DILocalVariable(name: "old_layout", scope: !3182, file: !2155, line: 461, type: !261, align: 8)
!3184 = !DILocalVariable(name: "left_val", scope: !3185, file: !2155, line: 462, type: !592, align: 8)
!3185 = !DILexicalBlockFile(scope: !3186, file: !2155, discriminator: 0)
!3186 = distinct !DILexicalBlock(scope: !3182, file: !2003, line: 39, column: 13)
!3187 = !DILocalVariable(name: "right_val", scope: !3185, file: !2155, line: 462, type: !592, align: 8)
!3188 = !DILocalVariable(name: "kind", scope: !3189, file: !2155, line: 462, type: !181, align: 1)
!3189 = !DILexicalBlockFile(scope: !3190, file: !2155, discriminator: 0)
!3190 = distinct !DILexicalBlock(scope: !3186, file: !2003, line: 41, column: 21)
!3191 = !{!1103}
!3192 = !DILocation(line: 449, column: 5, scope: !3118)
!3193 = !DILocation(line: 450, column: 5, scope: !3118)
!3194 = !DILocation(line: 451, column: 5, scope: !3118)
!3195 = !DILocation(line: 457, column: 9, scope: !3144)
!3196 = !DILocalVariable(name: "self", scope: !3197, file: !2155, line: 457, type: !1799, align: 8)
!3197 = !DILexicalBlockFile(scope: !3198, file: !2155, discriminator: 0)
!3198 = distinct !DISubprogram(name: "branch<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7e11f760e2c7ff67E", scope: !1349, file: !1348, line: 2117, type: !3199, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1807, retainedNodes: !3217)
!3199 = !DISubroutineType(types: !3200)
!3200 = !{!3201, !1799}
!3201 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", scope: !1353, file: !2, size: 192, align: 64, elements: !3202, templateParams: !23, identifier: "30c77f8de40d27cc25bb1f117e102368")
!3202 = !{!3203}
!3203 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3201, file: !2, size: 192, align: 64, elements: !3204, templateParams: !23, identifier: "873dd87a14009e5aa4571f77c2255abd", discriminator: !3216)
!3204 = !{!3205, !3212}
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3203, file: !2, baseType: !3206, size: 192, align: 64, extraData: i64 0)
!3206 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3201, file: !2, size: 192, align: 64, elements: !3207, templateParams: !3209, identifier: "44b658dc6aeebfb637fc0f71177a37ae")
!3207 = !{!3208}
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3206, file: !2, baseType: !261, size: 128, align: 64, offset: 64)
!3209 = !{!3210, !3211}
!3210 = !DITemplateTypeParameter(name: "B", type: !3147)
!3211 = !DITemplateTypeParameter(name: "C", type: !261)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3203, file: !2, baseType: !3213, size: 192, align: 64, extraData: i64 1)
!3213 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3201, file: !2, size: 192, align: 64, elements: !3214, templateParams: !3209, identifier: "a45e3c8f49f3878b531df9d7bb0c1ddb")
!3214 = !{!3215}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3213, file: !2, baseType: !3147, size: 128, align: 64, offset: 64)
!3216 = !DIDerivedType(tag: DW_TAG_member, scope: !3201, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagArtificial)
!3217 = !{!3196, !3218, !3221}
!3218 = !DILocalVariable(name: "v", scope: !3219, file: !2155, line: 457, type: !261, align: 8)
!3219 = !DILexicalBlockFile(scope: !3220, file: !2155, discriminator: 0)
!3220 = distinct !DILexicalBlock(scope: !3198, file: !1348, line: 2119, column: 13)
!3221 = !DILocalVariable(name: "e", scope: !3222, file: !2155, line: 457, type: !251, align: 8)
!3222 = !DILexicalBlockFile(scope: !3223, file: !2155, discriminator: 0)
!3223 = distinct !DILexicalBlock(scope: !3198, file: !1348, line: 2120, column: 13)
!3224 = !DILocation(line: 457, column: 22, scope: !3197, inlinedAt: !3225)
!3225 = !DILocation(line: 457, column: 22, scope: !3118)
!3226 = !DILocalVariable(name: "residual", scope: !3227, file: !2155, line: 457, type: !3147, align: 8)
!3227 = !DILexicalBlockFile(scope: !3228, file: !2155, discriminator: 0)
!3228 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17he33bb77eb1b8d8e0E", scope: !1408, file: !1348, line: 2132, type: !3229, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !3235, retainedNodes: !3231)
!3229 = !DISubroutineType(types: !3230)
!3230 = !{!1865, !3147, !869}
!3231 = !{!3226, !3232}
!3232 = !DILocalVariable(name: "e", scope: !3233, file: !2155, line: 457, type: !251, align: 8)
!3233 = !DILexicalBlockFile(scope: !3234, file: !2155, discriminator: 0)
!3234 = distinct !DILexicalBlock(scope: !3228, file: !1348, line: 2134, column: 13)
!3235 = !{!1855, !1763, !1891}
!3236 = !DILocation(line: 457, column: 22, scope: !3227, inlinedAt: !3237)
!3237 = !DILocation(line: 457, column: 22, scope: !3146)
!3238 = !DILocalVariable(name: "self", scope: !3239, file: !2155, line: 459, type: !1737, align: 8)
!3239 = !DILexicalBlockFile(scope: !3240, file: !2155, discriminator: 0)
!3240 = distinct !DISubprogram(name: "branch<(), alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h10d216516e116edeE", scope: !1349, file: !1348, line: 2117, type: !3241, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1745, retainedNodes: !3259)
!3241 = !DISubroutineType(types: !3242)
!3242 = !{!3243, !1737}
!3243 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, ()>", scope: !1353, file: !2, size: 128, align: 64, elements: !3244, templateParams: !23, identifier: "dd182185d8f5b2b7cb5665cc5c5ccb07")
!3244 = !{!3245}
!3245 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3243, file: !2, size: 128, align: 64, elements: !3246, templateParams: !23, identifier: "57751adeae8e77576883f29d0a97ac09", discriminator: !3258)
!3246 = !{!3247, !3254}
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3245, file: !2, baseType: !3248, size: 128, align: 64, extraData: i64 -9223372036854775807)
!3248 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3243, file: !2, size: 128, align: 64, elements: !3249, templateParams: !3251, identifier: "35a87d623a367fdaec857f7d914f3ad9")
!3249 = !{!3250}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3248, file: !2, baseType: !7, align: 8)
!3251 = !{!3252, !3253}
!3252 = !DITemplateTypeParameter(name: "B", type: !3164)
!3253 = !DITemplateTypeParameter(name: "C", type: !7)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3245, file: !2, baseType: !3255, size: 128, align: 64)
!3255 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3243, file: !2, size: 128, align: 64, elements: !3256, templateParams: !3251, identifier: "f5790c13a1dcecaf1cf858de99ad1734")
!3256 = !{!3257}
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3255, file: !2, baseType: !3164, size: 128, align: 64)
!3258 = !DIDerivedType(tag: DW_TAG_member, scope: !3243, file: !2, baseType: !99, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!3259 = !{!3238, !3260, !3263}
!3260 = !DILocalVariable(name: "v", scope: !3261, file: !2155, line: 459, type: !7, align: 1)
!3261 = !DILexicalBlockFile(scope: !3262, file: !2155, discriminator: 0)
!3262 = distinct !DILexicalBlock(scope: !3240, file: !1348, line: 2119, column: 13)
!3263 = !DILocalVariable(name: "e", scope: !3264, file: !2155, line: 459, type: !248, align: 8)
!3264 = !DILexicalBlockFile(scope: !3265, file: !2155, discriminator: 0)
!3265 = distinct !DILexicalBlock(scope: !3240, file: !1348, line: 2120, column: 13)
!3266 = !DILocation(line: 459, column: 5, scope: !3239, inlinedAt: !3267)
!3267 = !DILocation(line: 459, column: 5, scope: !3144)
!3268 = !DILocalVariable(name: "residual", scope: !3269, file: !2155, line: 459, type: !3164, align: 8)
!3269 = !DILexicalBlockFile(scope: !3270, file: !2155, discriminator: 0)
!3270 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hcd3d35c056e5e6cbE", scope: !1408, file: !1348, line: 2132, type: !3271, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !3277, retainedNodes: !3273)
!3271 = !DISubroutineType(types: !3272)
!3272 = !{!1865, !3164, !869}
!3273 = !{!3268, !3274}
!3274 = !DILocalVariable(name: "e", scope: !3275, file: !2155, line: 459, type: !248, align: 8)
!3275 = !DILexicalBlockFile(scope: !3276, file: !2155, discriminator: 0)
!3276 = distinct !DILexicalBlock(scope: !3270, file: !1348, line: 2134, column: 13)
!3277 = !{!1855, !1746, !1891}
!3278 = !DILocation(line: 459, column: 5, scope: !3269, inlinedAt: !3279)
!3279 = !DILocation(line: 459, column: 5, scope: !3163)
!3280 = !DILocation(line: 459, column: 5, scope: !3178)
!3281 = !DILocation(line: 461, column: 9, scope: !3180)
!3282 = !DILocation(line: 461, column: 36, scope: !3182)
!3283 = !DILocation(line: 459, column: 5, scope: !3261, inlinedAt: !3267)
!3284 = !DILocalVariable(name: "self", scope: !3285, file: !2155, line: 465, type: !1273, align: 8)
!3285 = !DILexicalBlockFile(scope: !3286, file: !2155, discriminator: 0)
!3286 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17hc3e9e20e967012deE", scope: !1273, file: !1272, line: 82, type: !1277, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !3287)
!3287 = !{!3284}
!3288 = !DILocation(line: 465, column: 32, scope: !3285, inlinedAt: !3289)
!3289 = !DILocation(line: 131, column: 9, scope: !3290, inlinedAt: !3294)
!3290 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h18656b4472f77024E", scope: !261, file: !1244, line: 130, type: !2481, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !3291)
!3291 = !{!3292}
!3292 = !DILocalVariable(name: "self", scope: !3293, file: !2155, line: 465, type: !1882, align: 8)
!3293 = !DILexicalBlockFile(scope: !3290, file: !2155, discriminator: 0)
!3294 = !DILocation(line: 465, column: 32, scope: !3182)
!3295 = !DILocalVariable(name: "self", scope: !3296, file: !2155, line: 465, type: !267, align: 8)
!3296 = !DILexicalBlockFile(scope: !3297, file: !2155, discriminator: 0)
!3297 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1b1d76d92bec5242E", scope: !267, file: !1285, line: 39, type: !1286, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !3298)
!3298 = !{!3295}
!3299 = !DILocation(line: 465, column: 32, scope: !3296, inlinedAt: !3289)
!3300 = !DILocalVariable(name: "self", scope: !3301, file: !2155, line: 465, type: !1273, align: 8)
!3301 = !DILexicalBlockFile(scope: !3302, file: !2155, discriminator: 0)
!3302 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17hc3e9e20e967012deE", scope: !1273, file: !1272, line: 82, type: !1277, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !3303)
!3303 = !{!3300}
!3304 = !DILocation(line: 465, column: 54, scope: !3301, inlinedAt: !3305)
!3305 = !DILocation(line: 131, column: 9, scope: !3306, inlinedAt: !3310)
!3306 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h18656b4472f77024E", scope: !261, file: !1244, line: 130, type: !2481, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !3307)
!3307 = !{!3308}
!3308 = !DILocalVariable(name: "self", scope: !3309, file: !2155, line: 465, type: !1882, align: 8)
!3309 = !DILexicalBlockFile(scope: !3306, file: !2155, discriminator: 0)
!3310 = !DILocation(line: 465, column: 54, scope: !3182)
!3311 = !DILocalVariable(name: "self", scope: !3312, file: !2155, line: 465, type: !267, align: 8)
!3312 = !DILexicalBlockFile(scope: !3313, file: !2155, discriminator: 0)
!3313 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1b1d76d92bec5242E", scope: !267, file: !1285, line: 39, type: !1286, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !3314)
!3314 = !{!3311}
!3315 = !DILocation(line: 465, column: 54, scope: !3312, inlinedAt: !3305)
!3316 = !DILocation(line: 457, column: 22, scope: !3219, inlinedAt: !3225)
!3317 = !DILocation(line: 457, column: 22, scope: !3222, inlinedAt: !3225)
!3318 = !DILocation(line: 457, column: 22, scope: !3161)
!3319 = !DILocation(line: 459, column: 5, scope: !3320, inlinedAt: !3267)
!3320 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17ha48b55f351a0ba84E", scope: !188, file: !2155, line: 505, type: !3321, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !3323)
!3321 = !DISubroutineType(types: !3322)
!3322 = !{!1737, !9}
!3323 = !{!3324}
!3324 = !DILocalVariable(name: "alloc_size", scope: !3320, file: !2155, line: 459, type: !9, align: 8)
!3325 = !DILocation(line: 457, column: 62, scope: !3118)
!3326 = !DILocation(line: 457, column: 62, scope: !3146)
!3327 = !DILocation(line: 457, column: 22, scope: !3233, inlinedAt: !3237)
!3328 = !DILocalVariable(name: "kind", scope: !3329, file: !2155, line: 457, type: !251, align: 8)
!3329 = !DILexicalBlockFile(scope: !3330, file: !2155, discriminator: 0)
!3330 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hc4cd94cd5fec9894E", scope: !244, file: !243, line: 116, type: !246, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !3331)
!3331 = !{!3328}
!3332 = !DILocation(line: 457, column: 22, scope: !3329, inlinedAt: !3333)
!3333 = !DILocation(line: 2134, column: 27, scope: !3234, inlinedAt: !3237)
!3334 = !DILocation(line: 1, column: 1, scope: !3335)
!3335 = !DILexicalBlockFile(scope: !3118, file: !2982, discriminator: 0)
!3336 = !DILocation(line: 473, column: 2, scope: !3118)
!3337 = !DILocation(line: 459, column: 5, scope: !3264, inlinedAt: !3267)
!3338 = !DILocation(line: 461, column: 25, scope: !3182)
!3339 = !DILocation(line: 459, column: 35, scope: !3144)
!3340 = !DILocation(line: 459, column: 35, scope: !3163)
!3341 = !DILocation(line: 459, column: 5, scope: !3275, inlinedAt: !3279)
!3342 = !DILocation(line: 1, column: 1, scope: !3343)
!3343 = !DILexicalBlockFile(scope: !3144, file: !2982, discriminator: 0)
!3344 = !DILocation(line: 461, column: 31, scope: !3182)
!3345 = !DILocation(line: 465, column: 32, scope: !3293, inlinedAt: !3294)
!3346 = !DILocalVariable(name: "n", scope: !3347, file: !2155, line: 465, type: !9, align: 8)
!3347 = !DILexicalBlockFile(scope: !3348, file: !2155, discriminator: 0)
!3348 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h2d52a1a9b55eac1dE", scope: !1273, file: !1272, line: 56, type: !1294, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !3349)
!3349 = !{!3346, !3350}
!3350 = !DILocalVariable(name: "runtime", scope: !3351, file: !2155, line: 465, type: !1301, align: 8)
!3351 = !DILexicalBlockFile(scope: !3352, file: !2155, discriminator: 0)
!3352 = distinct !DILexicalBlock(scope: !3348, file: !1300, line: 2336, column: 13)
!3353 = !DILocation(line: 465, column: 32, scope: !3347, inlinedAt: !3354)
!3354 = !DILocation(line: 41, column: 18, scope: !3297, inlinedAt: !3289)
!3355 = !DILocation(line: 465, column: 54, scope: !3309, inlinedAt: !3310)
!3356 = !DILocalVariable(name: "n", scope: !3357, file: !2155, line: 465, type: !9, align: 8)
!3357 = !DILexicalBlockFile(scope: !3358, file: !2155, discriminator: 0)
!3358 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h2d52a1a9b55eac1dE", scope: !1273, file: !1272, line: 56, type: !1294, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !3359)
!3359 = !{!3356, !3360}
!3360 = !DILocalVariable(name: "runtime", scope: !3361, file: !2155, line: 465, type: !1301, align: 8)
!3361 = !DILexicalBlockFile(scope: !3362, file: !2155, discriminator: 0)
!3362 = distinct !DILexicalBlock(scope: !3358, file: !1300, line: 2336, column: 13)
!3363 = !DILocation(line: 465, column: 54, scope: !3357, inlinedAt: !3364)
!3364 = !DILocation(line: 41, column: 18, scope: !3313, inlinedAt: !3305)
!3365 = !DILocation(line: 465, column: 13, scope: !3182)
!3366 = !DILocation(line: 469, column: 24, scope: !3144)
!3367 = !DILocation(line: 469, column: 9, scope: !3144)
!3368 = !DILocation(line: 461, column: 18, scope: !3144)
!3369 = !DILocation(line: 472, column: 5, scope: !3180)
!3370 = !DILocation(line: 472, column: 20, scope: !3180)
!3371 = !DILocation(line: 466, column: 29, scope: !3182)
!3372 = !DILocation(line: 466, column: 41, scope: !3182)
!3373 = !DILocation(line: 466, column: 13, scope: !3182)
!3374 = distinct !DISubprogram(name: "{closure#0}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h85ee4a4416ba06c4E", scope: !1814, file: !2155, line: 457, type: !3375, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !3191, retainedNodes: !3377)
!3375 = !DISubroutineType(types: !3376)
!3376 = !{!251, !1813, !1258}
!3377 = !{!3378, !3379}
!3378 = !DILocalVariable(arg: 1, scope: !3374, file: !2155, line: 457, type: !1813)
!3379 = !DILocalVariable(arg: 2, scope: !3374, file: !2155, line: 457, type: !1258)
!3380 = !DILocation(line: 457, column: 41, scope: !3374)
!3381 = !DILocation(line: 457, column: 42, scope: !3374)
!3382 = !DILocation(line: 457, column: 45, scope: !3374)
!3383 = !DILocation(line: 457, column: 44, scope: !3374)
!3384 = distinct !DISubprogram(name: "{closure#1}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17haf09d5e4bec9f614E", scope: !1814, file: !2155, line: 472, type: !3385, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !3191, retainedNodes: !3387)
!3385 = !DISubroutineType(types: !3386)
!3386 = !{!248, !1879, !1857}
!3387 = !{!3388, !3389}
!3388 = !DILocalVariable(name: "new_layout", scope: !3384, file: !2155, line: 457, type: !261, align: 8)
!3389 = !DILocalVariable(arg: 2, scope: !3384, file: !2155, line: 472, type: !1857)
!3390 = !DILocation(line: 457, column: 9, scope: !3384)
!3391 = !DILocation(line: 472, column: 21, scope: !3384)
!3392 = !DILocation(line: 472, column: 45, scope: !3384)
!3393 = !DILocation(line: 472, column: 24, scope: !3384)
!3394 = !DILocation(line: 472, column: 23, scope: !3384)
!3395 = distinct !DISubprogram(name: "handle_reserve", linkageName: "_ZN5alloc7raw_vec14handle_reserve17h6a432e51d2dbb4fdE", scope: !188, file: !2155, line: 487, type: !3396, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !3398)
!3396 = !DISubroutineType(types: !3397)
!3397 = !{null, !1737}
!3398 = !{!3399, !3400}
!3399 = !DILocalVariable(name: "result", arg: 1, scope: !3395, file: !2155, line: 487, type: !1737)
!3400 = !DILocalVariable(name: "layout", scope: !3401, file: !2155, line: 490, type: !261, align: 8)
!3401 = distinct !DILexicalBlock(scope: !3395, file: !2155, line: 490, column: 9)
!3402 = !DILocation(line: 487, column: 19, scope: !3395)
!3403 = !DILocation(line: 488, column: 11, scope: !3395)
!3404 = !DILocation(line: 488, column: 5, scope: !3395)
!3405 = !DILocation(line: 493, column: 2, scope: !3395)
!3406 = !DILocation(line: 489, column: 34, scope: !3395)
!3407 = !DILocation(line: 490, column: 26, scope: !3395)
!3408 = !DILocation(line: 490, column: 26, scope: !3401)
!3409 = !DILocation(line: 490, column: 43, scope: !3401)
!3410 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hebfde7fac505f1d2E", scope: !1770, file: !2155, line: 488, type: !3411, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !3413)
!3411 = !DISubroutineType(types: !3412)
!3412 = !{!251, !1769, !248}
!3413 = !{!3414, !3415}
!3414 = !DILocalVariable(name: "e", arg: 2, scope: !3410, file: !2155, line: 488, type: !248)
!3415 = !DILocalVariable(arg: 1, scope: !3410, file: !2155, line: 488, type: !1769)
!3416 = !DILocation(line: 488, column: 26, scope: !3410)
!3417 = !DILocation(line: 488, column: 27, scope: !3410)
!3418 = !DILocation(line: 488, column: 30, scope: !3410)
!3419 = !DILocalVariable(name: "self", scope: !3420, file: !2155, line: 488, type: !3424, align: 8)
!3420 = !DILexicalBlockFile(scope: !3421, file: !2155, discriminator: 0)
!3421 = distinct !DISubprogram(name: "kind", linkageName: "_ZN5alloc11collections15TryReserveError4kind17hdea709b7f6312959E", scope: !248, file: !243, line: 74, type: !3422, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !3425)
!3422 = !DISubroutineType(types: !3423)
!3423 = !{!251, !3424}
!3424 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveError", baseType: !248, size: 64, align: 64, dwarfAddressSpace: 0)
!3425 = !{!3419}
!3426 = !DILocation(line: 488, column: 30, scope: !3420, inlinedAt: !3418)
!3427 = !DILocalVariable(name: "self", scope: !3428, file: !2155, line: 488, type: !3433, align: 8)
!3428 = !DILexicalBlockFile(scope: !3429, file: !2155, discriminator: 0)
!3429 = distinct !DISubprogram(name: "clone", linkageName: "_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h9908eeab3d4c5685E", scope: !3430, file: !243, line: 80, type: !3431, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !3434)
!3430 = !DINamespace(name: "{impl#10}", scope: !245)
!3431 = !DISubroutineType(types: !3432)
!3432 = !{!251, !3433}
!3433 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveErrorKind", baseType: !251, size: 64, align: 64, dwarfAddressSpace: 0)
!3434 = !{!3427, !3435, !3438}
!3435 = !DILocalVariable(name: "__self_0", scope: !3436, file: !2155, line: 488, type: !1882, align: 8)
!3436 = !DILexicalBlockFile(scope: !3437, file: !2155, discriminator: 0)
!3437 = distinct !DILexicalBlock(scope: !3429, file: !243, line: 80, column: 10)
!3438 = !DILocalVariable(name: "__self_1", scope: !3436, file: !2155, line: 488, type: !3439, align: 8)
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!3440 = !DILocation(line: 488, column: 30, scope: !3428, inlinedAt: !3441)
!3441 = !DILocation(line: 75, column: 9, scope: !3421, inlinedAt: !3418)
!3442 = !DILocation(line: 488, column: 30, scope: !3436, inlinedAt: !3441)
!3443 = !DILocalVariable(name: "self", scope: !3444, file: !2155, line: 488, type: !1882, align: 8)
!3444 = !DILexicalBlockFile(scope: !3445, file: !2155, discriminator: 0)
!3445 = distinct !DISubprogram(name: "clone", linkageName: "_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h9b1b51de5ca6077cE", scope: !3446, file: !1244, line: 35, type: !3447, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !3449)
!3446 = !DINamespace(name: "{impl#3}", scope: !262)
!3447 = !DISubroutineType(types: !3448)
!3448 = !{!261, !1882}
!3449 = !{!3443}
!3450 = !DILocation(line: 488, column: 30, scope: !3444, inlinedAt: !3451)
!3451 = !DILocation(line: 94, column: 9, scope: !3437, inlinedAt: !3441)
!3452 = !DILocation(line: 488, column: 29, scope: !3410)
!3453 = distinct !DISubprogram(name: "allocate_in<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h7e1adf1578aaf6fdE", scope: !1090, file: !2155, line: 169, type: !3454, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1102, retainedNodes: !3456)
!3454 = !DISubroutineType(types: !3455)
!3455 = !{!1090, !9, !187, !1100}
!3456 = !{!3457, !3458, !3459, !3460, !3462, !3464, !3466, !3468}
!3457 = !DILocalVariable(name: "capacity", arg: 1, scope: !3453, file: !2155, line: 169, type: !9)
!3458 = !DILocalVariable(name: "init", arg: 2, scope: !3453, file: !2155, line: 169, type: !187)
!3459 = !DILocalVariable(name: "alloc", arg: 3, scope: !3453, file: !2155, line: 169, type: !1100)
!3460 = !DILocalVariable(name: "layout", scope: !3461, file: !2155, line: 176, type: !261, align: 8)
!3461 = distinct !DILexicalBlock(scope: !3453, file: !2155, line: 176, column: 13)
!3462 = !DILocalVariable(name: "layout", scope: !3463, file: !2155, line: 177, type: !261, align: 8)
!3463 = distinct !DILexicalBlock(scope: !3453, file: !2155, line: 177, column: 17)
!3464 = !DILocalVariable(name: "result", scope: !3465, file: !2155, line: 184, type: !1839, align: 8)
!3465 = distinct !DILexicalBlock(scope: !3461, file: !2155, line: 184, column: 13)
!3466 = !DILocalVariable(name: "ptr", scope: !3467, file: !2155, line: 188, type: !1847, align: 8)
!3467 = distinct !DILexicalBlock(scope: !3465, file: !2155, line: 188, column: 13)
!3468 = !DILocalVariable(name: "ptr", scope: !3469, file: !2155, line: 189, type: !1847, align: 8)
!3469 = distinct !DILexicalBlock(scope: !3465, file: !2155, line: 189, column: 17)
!3470 = !DILocation(line: 169, column: 20, scope: !3453)
!3471 = !DILocation(line: 169, column: 37, scope: !3453)
!3472 = !DILocation(line: 169, column: 54, scope: !3453)
!3473 = !DILocation(line: 184, column: 17, scope: !3465)
!3474 = !DILocalVariable(name: "self", scope: !3475, file: !2155, line: 197, type: !532, align: 8)
!3475 = !DILexicalBlockFile(scope: !3476, file: !2155, discriminator: 0)
!3476 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17haa1145af21efe5f7E", scope: !532, file: !195, line: 330, type: !2172, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !3477)
!3477 = !{!3474}
!3478 = !DILocation(line: 197, column: 53, scope: !3475, inlinedAt: !3479)
!3479 = !DILocation(line: 197, column: 53, scope: !3467)
!3480 = !DILocation(line: 171, column: 12, scope: !3453)
!3481 = !DILocation(line: 171, column: 40, scope: !3453)
!3482 = !DILocation(line: 176, column: 32, scope: !3453)
!3483 = !DILocation(line: 172, column: 26, scope: !3453)
!3484 = !DILocation(line: 172, column: 13, scope: !3453)
!3485 = !DILocation(line: 202, column: 5, scope: !3453)
!3486 = !DILocation(line: 171, column: 9, scope: !3453)
!3487 = !DILocation(line: 202, column: 6, scope: !3453)
!3488 = !DILocation(line: 176, column: 26, scope: !3453)
!3489 = !DILocation(line: 177, column: 20, scope: !3453)
!3490 = !DILocation(line: 177, column: 20, scope: !3463)
!3491 = !DILocation(line: 177, column: 31, scope: !3463)
!3492 = !DILocation(line: 176, column: 17, scope: !3461)
!3493 = !DILocation(line: 180, column: 19, scope: !3494, inlinedAt: !3497)
!3494 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17ha48b55f351a0ba84E", scope: !188, file: !2155, line: 505, type: !3321, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !3495)
!3495 = !{!3496}
!3496 = !DILocalVariable(name: "alloc_size", scope: !3494, file: !2155, line: 180, type: !9, align: 8)
!3497 = !DILocation(line: 180, column: 19, scope: !3461)
!3498 = !DILocation(line: 180, column: 13, scope: !3461)
!3499 = !DILocation(line: 178, column: 27, scope: !3453)
!3500 = !DILocation(line: 184, column: 32, scope: !3461)
!3501 = !DILocation(line: 184, column: 26, scope: !3461)
!3502 = !DILocation(line: 182, column: 27, scope: !3461)
!3503 = !DILocation(line: 185, column: 45, scope: !3461)
!3504 = !DILocation(line: 186, column: 38, scope: !3461)
!3505 = !DILocation(line: 186, column: 66, scope: !3461)
!3506 = !DILocation(line: 188, column: 29, scope: !3465)
!3507 = !DILocation(line: 188, column: 23, scope: !3465)
!3508 = !DILocation(line: 185, column: 66, scope: !3461)
!3509 = !DILocation(line: 189, column: 20, scope: !3465)
!3510 = !DILocation(line: 189, column: 20, scope: !3469)
!3511 = !DILocation(line: 189, column: 28, scope: !3469)
!3512 = !DILocation(line: 188, column: 17, scope: !3467)
!3513 = !DILocalVariable(name: "self", scope: !3514, file: !2155, line: 197, type: !1847, align: 8)
!3514 = !DILexicalBlockFile(scope: !3515, file: !2155, discriminator: 0)
!3515 = distinct !DISubprogram(name: "cast<[u8], i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hd9dd0d2c9726179cE", scope: !1847, file: !195, line: 453, type: !3516, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !3519, retainedNodes: !3518)
!3516 = !DISubroutineType(types: !3517)
!3517 = !{!532, !1847}
!3518 = !{!3513}
!3519 = !{!206, !1948}
!3520 = !DILocation(line: 197, column: 53, scope: !3514, inlinedAt: !3479)
!3521 = !DILocalVariable(name: "self", scope: !3522, file: !2155, line: 197, type: !1847, align: 8)
!3522 = !DILexicalBlockFile(scope: !3523, file: !2155, discriminator: 0)
!3523 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h699163c5d71ce887E", scope: !1847, file: !195, line: 330, type: !3093, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !3524)
!3524 = !{!3521}
!3525 = !DILocation(line: 197, column: 53, scope: !3522, inlinedAt: !3526)
!3526 = !DILocation(line: 455, column: 41, scope: !3515, inlinedAt: !3479)
!3527 = !DILocalVariable(name: "ptr", scope: !3528, file: !2155, line: 197, type: !1555, align: 8)
!3528 = !DILexicalBlockFile(scope: !3529, file: !2155, discriminator: 0)
!3529 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17he381bebfe6eab803E", scope: !532, file: !195, line: 196, type: !1728, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !3530)
!3530 = !{!3527}
!3531 = !DILocation(line: 197, column: 53, scope: !3528, inlinedAt: !3532)
!3532 = !DILocation(line: 455, column: 18, scope: !3515, inlinedAt: !3479)
!3533 = !DILocalVariable(name: "ptr", scope: !3534, file: !2155, line: 197, type: !1555, align: 8)
!3534 = !DILexicalBlockFile(scope: !3535, file: !2155, discriminator: 0)
!3535 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h5f657428ca633803E", scope: !1093, file: !221, line: 85, type: !3536, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !3538)
!3536 = !DISubroutineType(types: !3537)
!3537 = !{!1093, !1555}
!3538 = !{!3533}
!3539 = !DILocation(line: 197, column: 31, scope: !3534, inlinedAt: !3540)
!3540 = !DILocation(line: 197, column: 31, scope: !3467)
!3541 = !DILocalVariable(name: "ptr", scope: !3542, file: !2155, line: 197, type: !1555, align: 8)
!3542 = !DILexicalBlockFile(scope: !3543, file: !2155, discriminator: 0)
!3543 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17he381bebfe6eab803E", scope: !532, file: !195, line: 196, type: !1728, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !3544)
!3544 = !{!3541}
!3545 = !DILocation(line: 197, column: 31, scope: !3542, inlinedAt: !3546)
!3546 = !DILocation(line: 87, column: 36, scope: !3535, inlinedAt: !3540)
!3547 = !DILocation(line: 196, column: 13, scope: !3467)
!3548 = !DILocation(line: 190, column: 27, scope: !3465)
!3549 = !DILocation(line: 169, column: 5, scope: !3453)
!3550 = distinct !DISubprogram(name: "needs_to_grow<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hafcaa9fa3eb77ef4E", scope: !1090, file: !2155, line: 360, type: !3551, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1102, retainedNodes: !3553)
!3551 = !DISubroutineType(types: !3552)
!3552 = !{!43, !2158, !9, !9}
!3553 = !{!3554, !3555, !3556}
!3554 = !DILocalVariable(name: "self", arg: 1, scope: !3550, file: !2155, line: 360, type: !2158)
!3555 = !DILocalVariable(name: "len", arg: 2, scope: !3550, file: !2155, line: 360, type: !9)
!3556 = !DILocalVariable(name: "additional", arg: 3, scope: !3550, file: !2155, line: 360, type: !9)
!3557 = !DILocation(line: 360, column: 22, scope: !3550)
!3558 = !DILocation(line: 360, column: 29, scope: !3550)
!3559 = !DILocation(line: 360, column: 41, scope: !3550)
!3560 = !DILocalVariable(name: "self", scope: !3561, file: !2155, line: 361, type: !9, align: 8)
!3561 = !DILexicalBlockFile(scope: !3562, file: !2155, discriminator: 0)
!3562 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h5e8f57e42e99a91fE", scope: !561, file: !560, line: 1231, type: !549, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !3563)
!3563 = !{!3560, !3564}
!3564 = !DILocalVariable(name: "rhs", scope: !3561, file: !2155, line: 361, type: !9, align: 8)
!3565 = !DILocation(line: 361, column: 22, scope: !3561, inlinedAt: !3566)
!3566 = !DILocation(line: 361, column: 22, scope: !3550)
!3567 = !DILocalVariable(name: "self", scope: !3568, file: !2155, line: 361, type: !2158, align: 8)
!3568 = distinct !DISubprogram(name: "capacity<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h359bdc5861774e9eE", scope: !1090, file: !2155, line: 231, type: !3569, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1102, retainedNodes: !3571)
!3569 = !DISubroutineType(types: !3570)
!3570 = !{!9, !2158}
!3571 = !{!3567}
!3572 = !DILocation(line: 361, column: 22, scope: !3568, inlinedAt: !3566)
!3573 = !DILocation(line: 361, column: 51, scope: !3550)
!3574 = !DILocation(line: 361, column: 9, scope: !3550)
!3575 = !DILocation(line: 362, column: 6, scope: !3550)
!3576 = distinct !DISubprogram(name: "current_memory<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hcddb728fa8c0a28bE", scope: !1090, file: !2155, line: 240, type: !3577, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1102, retainedNodes: !3579)
!3577 = !DISubroutineType(types: !3578)
!3578 = !{!3121, !2158}
!3579 = !{!3580, !3581}
!3580 = !DILocalVariable(name: "self", arg: 1, scope: !3576, file: !2155, line: 240, type: !2158)
!3581 = !DILocalVariable(name: "layout", scope: !3582, file: !2155, line: 247, type: !261, align: 8)
!3582 = distinct !DILexicalBlock(scope: !3576, file: !2155, line: 247, column: 17)
!3583 = !DILocation(line: 240, column: 23, scope: !3576)
!3584 = !DILocalVariable(name: "self", scope: !3585, file: !2155, line: 247, type: !1247, align: 8)
!3585 = !DILexicalBlockFile(scope: !3586, file: !2155, discriminator: 0)
!3586 = distinct !DISubprogram(name: "unwrap_unchecked<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h53c6357d82ceec3aE", scope: !1247, file: !1348, line: 1520, type: !3587, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1255, retainedNodes: !3589)
!3587 = !DISubroutineType(types: !3588)
!3588 = !{!261, !1247, !869}
!3589 = !{!3584, !3590}
!3590 = !DILocalVariable(name: "t", scope: !3591, file: !2155, line: 247, type: !261, align: 8)
!3591 = !DILexicalBlockFile(scope: !3592, file: !2155, discriminator: 0)
!3592 = distinct !DILexicalBlock(scope: !3586, file: !1348, line: 1523, column: 13)
!3593 = !DILocation(line: 247, column: 30, scope: !3585, inlinedAt: !3594)
!3594 = !DILocation(line: 247, column: 30, scope: !3576)
!3595 = !DILocalVariable(name: "pointer", scope: !3596, file: !2155, line: 248, type: !201, align: 8)
!3596 = !DILexicalBlockFile(scope: !3597, file: !2155, discriminator: 0)
!3597 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h56ca4354bce4c53eE", scope: !3598, file: !221, line: 190, type: !3599, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !3601)
!3598 = !DINamespace(name: "{impl#11}", scope: !208)
!3599 = !DISubroutineType(types: !3600)
!3600 = !{!207, !201}
!3601 = !{!3595}
!3602 = !DILocation(line: 248, column: 23, scope: !3596, inlinedAt: !3603)
!3603 = !DILocation(line: 137, column: 9, scope: !3604, inlinedAt: !3612)
!3604 = distinct !DISubprogram(name: "cast<i32, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hc9f93cb7700af0a6E", scope: !1093, file: !221, line: 136, type: !3605, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !3610, retainedNodes: !3607)
!3605 = !DISubroutineType(types: !3606)
!3606 = !{!207, !1093}
!3607 = !{!3608}
!3608 = !DILocalVariable(name: "self", scope: !3609, file: !2155, line: 248, type: !1093, align: 8)
!3609 = !DILexicalBlockFile(scope: !3604, file: !2155, discriminator: 0)
!3610 = !{!462, !3611}
!3611 = !DITemplateTypeParameter(name: "U", type: !169)
!3612 = !DILocation(line: 248, column: 23, scope: !3582)
!3613 = !DILocation(line: 241, column: 12, scope: !3576)
!3614 = !DILocation(line: 241, column: 40, scope: !3576)
!3615 = !DILocation(line: 247, column: 49, scope: !3576)
!3616 = !DILocation(line: 242, column: 13, scope: !3576)
!3617 = !DILocation(line: 241, column: 9, scope: !3576)
!3618 = !DILocation(line: 251, column: 6, scope: !3576)
!3619 = !DILocation(line: 247, column: 30, scope: !3591, inlinedAt: !3594)
!3620 = !DILocation(line: 247, column: 21, scope: !3582)
!3621 = !DILocation(line: 248, column: 23, scope: !3609, inlinedAt: !3612)
!3622 = !DILocalVariable(name: "self", scope: !3623, file: !2155, line: 248, type: !532, align: 8)
!3623 = !DILexicalBlockFile(scope: !3624, file: !2155, discriminator: 0)
!3624 = distinct !DISubprogram(name: "cast<i32, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hb45980ed278135f9E", scope: !532, file: !195, line: 453, type: !3625, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !3610, retainedNodes: !3627)
!3625 = !DISubroutineType(types: !3626)
!3626 = !{!201, !532}
!3627 = !{!3622}
!3628 = !DILocation(line: 248, column: 23, scope: !3623, inlinedAt: !3629)
!3629 = !DILocation(line: 137, column: 22, scope: !3604, inlinedAt: !3612)
!3630 = !DILocalVariable(name: "self", scope: !3631, file: !2155, line: 248, type: !532, align: 8)
!3631 = !DILexicalBlockFile(scope: !3632, file: !2155, discriminator: 0)
!3632 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17haa1145af21efe5f7E", scope: !532, file: !195, line: 330, type: !2172, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !3633)
!3633 = !{!3630}
!3634 = !DILocation(line: 248, column: 23, scope: !3631, inlinedAt: !3635)
!3635 = !DILocation(line: 455, column: 41, scope: !3624, inlinedAt: !3629)
!3636 = !DILocalVariable(name: "ptr", scope: !3637, file: !2155, line: 248, type: !224, align: 8)
!3637 = !DILexicalBlockFile(scope: !3638, file: !2155, discriminator: 0)
!3638 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hc66fe1711b96fc95E", scope: !201, file: !195, line: 196, type: !236, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !3639)
!3639 = !{!3636}
!3640 = !DILocation(line: 248, column: 23, scope: !3637, inlinedAt: !3641)
!3641 = !DILocation(line: 455, column: 18, scope: !3624, inlinedAt: !3629)
!3642 = !DILocation(line: 247, column: 30, scope: !3643, inlinedAt: !3645)
!3643 = !DILexicalBlockFile(scope: !3644, file: !2155, discriminator: 0)
!3644 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h6c2dda138fcbc6abE", scope: !297, file: !296, line: 100, type: !21, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !23)
!3645 = !DILocation(line: 1525, column: 32, scope: !3586, inlinedAt: !3594)
!3646 = !DILocation(line: 248, column: 22, scope: !3582)
!3647 = !DILocation(line: 248, column: 17, scope: !3582)
!3648 = distinct !DISubprogram(name: "grow_amortized<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h0daefafdc123f459E", scope: !1090, file: !2155, line: 379, type: !3649, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1102, retainedNodes: !3652)
!3649 = !DISubroutineType(types: !3650)
!3650 = !{!1737, !3651, !9, !9}
!3651 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<i32, alloc::alloc::Global>", baseType: !1090, size: 64, align: 64, dwarfAddressSpace: 0)
!3652 = !{!3653, !3654, !3655, !3656, !3658, !3660, !3662, !3664, !3666, !3668, !3670, !3672}
!3653 = !DILocalVariable(name: "self", arg: 1, scope: !3648, file: !2155, line: 379, type: !3651)
!3654 = !DILocalVariable(name: "len", arg: 2, scope: !3648, file: !2155, line: 379, type: !9)
!3655 = !DILocalVariable(name: "additional", arg: 3, scope: !3648, file: !2155, line: 379, type: !9)
!3656 = !DILocalVariable(name: "required_cap", scope: !3657, file: !2155, line: 390, type: !9, align: 8)
!3657 = distinct !DILexicalBlock(scope: !3648, file: !2155, line: 390, column: 9)
!3658 = !DILocalVariable(name: "residual", scope: !3659, file: !2155, line: 390, type: !3147, align: 8)
!3659 = distinct !DILexicalBlock(scope: !3648, file: !2155, line: 390, column: 79)
!3660 = !DILocalVariable(name: "val", scope: !3661, file: !2155, line: 390, type: !9, align: 8)
!3661 = distinct !DILexicalBlock(scope: !3648, file: !2155, line: 390, column: 28)
!3662 = !DILocalVariable(name: "cap", scope: !3663, file: !2155, line: 394, type: !9, align: 8)
!3663 = distinct !DILexicalBlock(scope: !3657, file: !2155, line: 394, column: 9)
!3664 = !DILocalVariable(name: "cap", scope: !3665, file: !2155, line: 395, type: !9, align: 8)
!3665 = distinct !DILexicalBlock(scope: !3663, file: !2155, line: 395, column: 9)
!3666 = !DILocalVariable(name: "new_layout", scope: !3667, file: !2155, line: 397, type: !1247, align: 8)
!3667 = distinct !DILexicalBlock(scope: !3665, file: !2155, line: 397, column: 9)
!3668 = !DILocalVariable(name: "ptr", scope: !3669, file: !2155, line: 400, type: !1847, align: 8)
!3669 = distinct !DILexicalBlock(scope: !3667, file: !2155, line: 400, column: 9)
!3670 = !DILocalVariable(name: "residual", scope: !3671, file: !2155, line: 400, type: !3164, align: 8)
!3671 = distinct !DILexicalBlock(scope: !3667, file: !2155, line: 400, column: 82)
!3672 = !DILocalVariable(name: "val", scope: !3673, file: !2155, line: 400, type: !1847, align: 8)
!3673 = distinct !DILexicalBlock(scope: !3667, file: !2155, line: 400, column: 19)
!3674 = !DILocation(line: 379, column: 23, scope: !3648)
!3675 = !DILocation(line: 379, column: 34, scope: !3648)
!3676 = !DILocation(line: 379, column: 46, scope: !3648)
!3677 = !DILocalVariable(name: "self", scope: !3678, file: !2155, line: 390, type: !3696, align: 8)
!3678 = !DILexicalBlockFile(scope: !3679, file: !2155, discriminator: 0)
!3679 = distinct !DISubprogram(name: "branch<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h53e220cfc0df7582E", scope: !1349, file: !1348, line: 2117, type: !3680, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !3704, retainedNodes: !3710)
!3680 = !DISubroutineType(types: !3681)
!3681 = !{!3682, !3696}
!3682 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", scope: !1353, file: !2, size: 192, align: 64, elements: !3683, templateParams: !23, identifier: "aaa47d4c01b9e814e1128564379fb1ed")
!3683 = !{!3684}
!3684 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3682, file: !2, size: 192, align: 64, elements: !3685, templateParams: !23, identifier: "52bc498f97dcf0aebe4be722096289fa", discriminator: !3695)
!3685 = !{!3686, !3691}
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3684, file: !2, baseType: !3687, size: 192, align: 64, extraData: i64 0)
!3687 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3682, file: !2, size: 192, align: 64, elements: !3688, templateParams: !3690, identifier: "aa7cd1170a8c6991d015bac63ac068a0")
!3688 = !{!3689}
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3687, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3690 = !{!3210, !1363}
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3684, file: !2, baseType: !3692, size: 192, align: 64, extraData: i64 1)
!3692 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3682, file: !2, size: 192, align: 64, elements: !3693, templateParams: !3690, identifier: "364459b0de7a7982990d34cdf2f986eb")
!3693 = !{!3694}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3692, file: !2, baseType: !3147, size: 128, align: 64, offset: 64)
!3695 = !DIDerivedType(tag: DW_TAG_member, scope: !3682, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagArtificial)
!3696 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, alloc::collections::TryReserveErrorKind>", scope: !376, file: !2, size: 192, align: 64, elements: !3697, templateParams: !23, identifier: "3631237889770fa7267d5501216770d")
!3697 = !{!3698}
!3698 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3696, file: !2, size: 192, align: 64, elements: !3699, templateParams: !23, identifier: "1d1f45ee59d9f1cfc391058ed79e0cae", discriminator: !3709)
!3699 = !{!3700, !3705}
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !3698, file: !2, baseType: !3701, size: 192, align: 64, extraData: i64 0)
!3701 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !3696, file: !2, size: 192, align: 64, elements: !3702, templateParams: !3704, identifier: "e350c9849d9dffdf1ffb40e48a20f918")
!3702 = !{!3703}
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3701, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3704 = !{!408, !1763}
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !3698, file: !2, baseType: !3706, size: 192, align: 64, extraData: i64 1)
!3706 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !3696, file: !2, size: 192, align: 64, elements: !3707, templateParams: !3704, identifier: "4805f2b2529d263fd0f1d3d0e43e54f8")
!3707 = !{!3708}
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3706, file: !2, baseType: !251, size: 128, align: 64, offset: 64)
!3709 = !DIDerivedType(tag: DW_TAG_member, scope: !3696, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagArtificial)
!3710 = !{!3677, !3711, !3714}
!3711 = !DILocalVariable(name: "v", scope: !3712, file: !2155, line: 390, type: !9, align: 8)
!3712 = !DILexicalBlockFile(scope: !3713, file: !2155, discriminator: 0)
!3713 = distinct !DILexicalBlock(scope: !3679, file: !1348, line: 2119, column: 13)
!3714 = !DILocalVariable(name: "e", scope: !3715, file: !2155, line: 390, type: !251, align: 8)
!3715 = !DILexicalBlockFile(scope: !3716, file: !2155, discriminator: 0)
!3716 = distinct !DILexicalBlock(scope: !3679, file: !1348, line: 2120, column: 13)
!3717 = !DILocation(line: 390, column: 28, scope: !3678, inlinedAt: !3718)
!3718 = !DILocation(line: 390, column: 28, scope: !3648)
!3719 = !DILocalVariable(name: "self", scope: !3720, file: !2155, line: 390, type: !400, align: 8)
!3720 = !DILexicalBlockFile(scope: !3721, file: !2155, discriminator: 0)
!3721 = distinct !DISubprogram(name: "ok_or<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h78e35cfdb30ac409E", scope: !400, file: !1395, line: 1051, type: !3722, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !3704, retainedNodes: !3724)
!3722 = !DISubroutineType(types: !3723)
!3723 = !{!3696, !400, !251}
!3724 = !{!3719, !3725, !3726}
!3725 = !DILocalVariable(name: "err", scope: !3720, file: !2155, line: 390, type: !251, align: 8)
!3726 = !DILocalVariable(name: "v", scope: !3727, file: !2155, line: 390, type: !9, align: 8)
!3727 = !DILexicalBlockFile(scope: !3728, file: !2155, discriminator: 0)
!3728 = distinct !DILexicalBlock(scope: !3721, file: !1395, line: 1056, column: 13)
!3729 = !DILocation(line: 390, column: 28, scope: !3720, inlinedAt: !3718)
!3730 = !DILocalVariable(name: "residual", scope: !3731, file: !2155, line: 390, type: !3147, align: 8)
!3731 = !DILexicalBlockFile(scope: !3732, file: !2155, discriminator: 0)
!3732 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc85f43fc1f4c3b92E", scope: !1408, file: !1348, line: 2132, type: !3733, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !3739, retainedNodes: !3735)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{!1737, !3147, !869}
!3735 = !{!3730, !3736}
!3736 = !DILocalVariable(name: "e", scope: !3737, file: !2155, line: 390, type: !251, align: 8)
!3737 = !DILexicalBlockFile(scope: !3738, file: !2155, discriminator: 0)
!3738 = distinct !DILexicalBlock(scope: !3732, file: !1348, line: 2134, column: 13)
!3739 = !{!290, !1763, !1891}
!3740 = !DILocation(line: 390, column: 28, scope: !3731, inlinedAt: !3741)
!3741 = !DILocation(line: 390, column: 28, scope: !3659)
!3742 = !DILocalVariable(name: "self", scope: !3743, file: !2155, line: 400, type: !1865, align: 8)
!3743 = !DILexicalBlockFile(scope: !3744, file: !2155, discriminator: 0)
!3744 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h826bc0734014f5ecE", scope: !1349, file: !1348, line: 2117, type: !3745, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1873, retainedNodes: !3761)
!3745 = !DISubroutineType(types: !3746)
!3746 = !{!3747, !1865}
!3747 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", scope: !1353, file: !2, size: 192, align: 64, elements: !3748, templateParams: !23, identifier: "79c6e5125639b127cfa81db755c4cffd")
!3748 = !{!3749}
!3749 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3747, file: !2, size: 192, align: 64, elements: !3750, templateParams: !23, identifier: "bdca6637e968c25e4fe4c2dfef1c199f", discriminator: !3760)
!3750 = !{!3751, !3756}
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3749, file: !2, baseType: !3752, size: 192, align: 64, extraData: i64 0)
!3752 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3747, file: !2, size: 192, align: 64, elements: !3753, templateParams: !3755, identifier: "15ba5a416f94883524aa415e9e484c18")
!3753 = !{!3754}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3752, file: !2, baseType: !1847, size: 128, align: 64, offset: 64)
!3755 = !{!3252, !2789}
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3749, file: !2, baseType: !3757, size: 192, align: 64, extraData: i64 1)
!3757 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3747, file: !2, size: 192, align: 64, elements: !3758, templateParams: !3755, identifier: "e100a24ff060842f7e06542fb969c57c")
!3758 = !{!3759}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3757, file: !2, baseType: !3164, size: 128, align: 64, offset: 64)
!3760 = !DIDerivedType(tag: DW_TAG_member, scope: !3747, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagArtificial)
!3761 = !{!3742, !3762, !3765}
!3762 = !DILocalVariable(name: "v", scope: !3763, file: !2155, line: 400, type: !1847, align: 8)
!3763 = !DILexicalBlockFile(scope: !3764, file: !2155, discriminator: 0)
!3764 = distinct !DILexicalBlock(scope: !3744, file: !1348, line: 2119, column: 13)
!3765 = !DILocalVariable(name: "e", scope: !3766, file: !2155, line: 400, type: !248, align: 8)
!3766 = !DILexicalBlockFile(scope: !3767, file: !2155, discriminator: 0)
!3767 = distinct !DILexicalBlock(scope: !3744, file: !1348, line: 2120, column: 13)
!3768 = !DILocation(line: 400, column: 19, scope: !3743, inlinedAt: !3769)
!3769 = !DILocation(line: 400, column: 19, scope: !3667)
!3770 = !DILocalVariable(name: "residual", scope: !3771, file: !2155, line: 400, type: !3164, align: 8)
!3771 = !DILexicalBlockFile(scope: !3772, file: !2155, discriminator: 0)
!3772 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17ha0f3b19ba206a324E", scope: !1408, file: !1348, line: 2132, type: !3773, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !3779, retainedNodes: !3775)
!3773 = !DISubroutineType(types: !3774)
!3774 = !{!1737, !3164, !869}
!3775 = !{!3770, !3776}
!3776 = !DILocalVariable(name: "e", scope: !3777, file: !2155, line: 400, type: !248, align: 8)
!3777 = !DILexicalBlockFile(scope: !3778, file: !2155, discriminator: 0)
!3778 = distinct !DILexicalBlock(scope: !3772, file: !1348, line: 2134, column: 13)
!3779 = !{!290, !1746, !1891}
!3780 = !DILocation(line: 400, column: 19, scope: !3771, inlinedAt: !3781)
!3781 = !DILocation(line: 400, column: 19, scope: !3671)
!3782 = !DILocation(line: 383, column: 12, scope: !3648)
!3783 = !DILocation(line: 386, column: 24, scope: !3648)
!3784 = !DILocation(line: 390, column: 62, scope: !3648)
!3785 = !DILocation(line: 390, column: 28, scope: !3727, inlinedAt: !3718)
!3786 = !DILocation(line: 390, column: 28, scope: !3712, inlinedAt: !3718)
!3787 = !DILocation(line: 390, column: 28, scope: !3715, inlinedAt: !3718)
!3788 = !DILocation(line: 390, column: 28, scope: !3661)
!3789 = !DILocation(line: 390, column: 13, scope: !3657)
!3790 = !DILocation(line: 394, column: 28, scope: !3657)
!3791 = !DILocalVariable(name: "v1", scope: !3792, file: !2155, line: 394, type: !9, align: 8)
!3792 = !DILexicalBlockFile(scope: !3793, file: !2155, discriminator: 0)
!3793 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17h1136dce2d9da21a7E", scope: !176, file: !569, line: 1278, type: !549, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !407, retainedNodes: !3794)
!3794 = !{!3791, !3795}
!3795 = !DILocalVariable(name: "v2", scope: !3792, file: !2155, line: 394, type: !9, align: 8)
!3796 = !DILocation(line: 394, column: 19, scope: !3792, inlinedAt: !3797)
!3797 = !DILocation(line: 394, column: 19, scope: !3657)
!3798 = !DILocation(line: 394, column: 42, scope: !3657)
!3799 = !DILocation(line: 394, column: 13, scope: !3663)
!3800 = !DILocation(line: 390, column: 79, scope: !3648)
!3801 = !DILocation(line: 390, column: 79, scope: !3659)
!3802 = !DILocation(line: 390, column: 28, scope: !3737, inlinedAt: !3741)
!3803 = !DILocalVariable(name: "kind", scope: !3804, file: !2155, line: 390, type: !251, align: 8)
!3804 = !DILexicalBlockFile(scope: !3805, file: !2155, discriminator: 0)
!3805 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hc4cd94cd5fec9894E", scope: !244, file: !243, line: 116, type: !246, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !3806)
!3806 = !{!3803}
!3807 = !DILocation(line: 390, column: 28, scope: !3804, inlinedAt: !3808)
!3808 = !DILocation(line: 2134, column: 27, scope: !3738, inlinedAt: !3741)
!3809 = !DILocation(line: 1, column: 1, scope: !3810)
!3810 = !DILexicalBlockFile(scope: !3648, file: !2982, discriminator: 0)
!3811 = !DILocation(line: 395, column: 52, scope: !3663)
!3812 = !DILocalVariable(name: "v2", scope: !3813, file: !2155, line: 395, type: !9, align: 8)
!3813 = !DILexicalBlockFile(scope: !3814, file: !2155, discriminator: 0)
!3814 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17h1136dce2d9da21a7E", scope: !176, file: !569, line: 1278, type: !549, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !407, retainedNodes: !3815)
!3815 = !{!3816, !3812}
!3816 = !DILocalVariable(name: "v1", scope: !3813, file: !2155, line: 395, type: !9, align: 8)
!3817 = !DILocation(line: 395, column: 19, scope: !3813, inlinedAt: !3818)
!3818 = !DILocation(line: 395, column: 19, scope: !3663)
!3819 = !DILocation(line: 395, column: 13, scope: !3665)
!3820 = !DILocation(line: 397, column: 26, scope: !3665)
!3821 = !DILocation(line: 397, column: 13, scope: !3667)
!3822 = !DILocation(line: 400, column: 43, scope: !3667)
!3823 = !DILocation(line: 400, column: 66, scope: !3667)
!3824 = !DILocation(line: 400, column: 19, scope: !3763, inlinedAt: !3769)
!3825 = !DILocation(line: 400, column: 19, scope: !3766, inlinedAt: !3769)
!3826 = !DILocation(line: 400, column: 19, scope: !3673)
!3827 = !DILocation(line: 400, column: 13, scope: !3669)
!3828 = !DILocation(line: 401, column: 9, scope: !3669)
!3829 = !DILocation(line: 400, column: 82, scope: !3667)
!3830 = !DILocation(line: 400, column: 82, scope: !3671)
!3831 = !DILocation(line: 400, column: 19, scope: !3777, inlinedAt: !3781)
!3832 = !DILocation(line: 1, column: 1, scope: !3833)
!3833 = !DILexicalBlockFile(scope: !3657, file: !2982, discriminator: 0)
!3834 = !DILocation(line: 403, column: 6, scope: !3648)
!3835 = !DILocation(line: 402, column: 9, scope: !3669)
!3836 = !DILocation(line: 386, column: 20, scope: !3648)
!3837 = distinct !DISubprogram(name: "set_ptr_and_cap<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h0b29d7ade1b3d978E", scope: !1090, file: !2155, line: 364, type: !3838, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1102, retainedNodes: !3840)
!3838 = !DISubroutineType(types: !3839)
!3839 = !{null, !3651, !1847, !9}
!3840 = !{!3841, !3842, !3843}
!3841 = !DILocalVariable(name: "self", arg: 1, scope: !3837, file: !2155, line: 364, type: !3651)
!3842 = !DILocalVariable(name: "ptr", arg: 2, scope: !3837, file: !2155, line: 364, type: !1847)
!3843 = !DILocalVariable(name: "cap", arg: 3, scope: !3837, file: !2155, line: 364, type: !9)
!3844 = !DILocation(line: 364, column: 24, scope: !3837)
!3845 = !DILocation(line: 364, column: 35, scope: !3837)
!3846 = !DILocation(line: 364, column: 55, scope: !3837)
!3847 = !DILocalVariable(name: "self", scope: !3848, file: !2155, line: 368, type: !532, align: 8)
!3848 = !DILexicalBlockFile(scope: !3849, file: !2155, discriminator: 0)
!3849 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17haa1145af21efe5f7E", scope: !532, file: !195, line: 330, type: !2172, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !3850)
!3850 = !{!3847}
!3851 = !DILocation(line: 368, column: 51, scope: !3848, inlinedAt: !3852)
!3852 = !DILocation(line: 368, column: 51, scope: !3837)
!3853 = !DILocalVariable(name: "self", scope: !3854, file: !2155, line: 368, type: !1847, align: 8)
!3854 = !DILexicalBlockFile(scope: !3855, file: !2155, discriminator: 0)
!3855 = distinct !DISubprogram(name: "cast<[u8], i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hd9dd0d2c9726179cE", scope: !1847, file: !195, line: 453, type: !3516, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !3519, retainedNodes: !3856)
!3856 = !{!3853}
!3857 = !DILocation(line: 368, column: 51, scope: !3854, inlinedAt: !3852)
!3858 = !DILocalVariable(name: "self", scope: !3859, file: !2155, line: 368, type: !1847, align: 8)
!3859 = !DILexicalBlockFile(scope: !3860, file: !2155, discriminator: 0)
!3860 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h699163c5d71ce887E", scope: !1847, file: !195, line: 330, type: !3093, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !3861)
!3861 = !{!3858}
!3862 = !DILocation(line: 368, column: 51, scope: !3859, inlinedAt: !3863)
!3863 = !DILocation(line: 455, column: 41, scope: !3855, inlinedAt: !3852)
!3864 = !DILocalVariable(name: "ptr", scope: !3865, file: !2155, line: 368, type: !1555, align: 8)
!3865 = !DILexicalBlockFile(scope: !3866, file: !2155, discriminator: 0)
!3866 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17he381bebfe6eab803E", scope: !532, file: !195, line: 196, type: !1728, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !3867)
!3867 = !{!3864}
!3868 = !DILocation(line: 368, column: 51, scope: !3865, inlinedAt: !3869)
!3869 = !DILocation(line: 455, column: 18, scope: !3855, inlinedAt: !3852)
!3870 = !DILocalVariable(name: "ptr", scope: !3871, file: !2155, line: 368, type: !1555, align: 8)
!3871 = !DILexicalBlockFile(scope: !3872, file: !2155, discriminator: 0)
!3872 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h5f657428ca633803E", scope: !1093, file: !221, line: 85, type: !3536, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !3873)
!3873 = !{!3870}
!3874 = !DILocation(line: 368, column: 29, scope: !3871, inlinedAt: !3875)
!3875 = !DILocation(line: 368, column: 29, scope: !3837)
!3876 = !DILocalVariable(name: "ptr", scope: !3877, file: !2155, line: 368, type: !1555, align: 8)
!3877 = !DILexicalBlockFile(scope: !3878, file: !2155, discriminator: 0)
!3878 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17he381bebfe6eab803E", scope: !532, file: !195, line: 196, type: !1728, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !3879)
!3879 = !{!3876}
!3880 = !DILocation(line: 368, column: 29, scope: !3877, inlinedAt: !3881)
!3881 = !DILocation(line: 87, column: 36, scope: !3872, inlinedAt: !3875)
!3882 = !DILocation(line: 368, column: 9, scope: !3837)
!3883 = !DILocation(line: 369, column: 9, scope: !3837)
!3884 = !DILocation(line: 370, column: 6, scope: !3837)
!3885 = distinct !DISubprogram(name: "new_in<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h94fea6ba2e4d686dE", scope: !1090, file: !2155, line: 121, type: !3886, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1102, retainedNodes: !3888)
!3886 = !DISubroutineType(types: !3887)
!3887 = !{!1090, !1100}
!3888 = !{!3889}
!3889 = !DILocalVariable(name: "alloc", arg: 1, scope: !3885, file: !2155, line: 121, type: !1100)
!3890 = !DILocation(line: 121, column: 25, scope: !3885)
!3891 = !DILocalVariable(name: "pointer", scope: !3892, file: !2155, line: 123, type: !532, align: 8)
!3892 = !DILexicalBlockFile(scope: !3893, file: !2155, discriminator: 0)
!3893 = distinct !DISubprogram(name: "from<i32>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h5dc6fc451e7e958dE", scope: !3598, file: !221, line: 190, type: !3894, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !3896)
!3894 = !DISubroutineType(types: !3895)
!3895 = !{!1093, !532}
!3896 = !{!3891}
!3897 = !DILocation(line: 123, column: 21, scope: !3892, inlinedAt: !3898)
!3898 = !DILocation(line: 73, column: 9, scope: !3899, inlinedAt: !3902)
!3899 = distinct !DISubprogram(name: "dangling<i32>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h7f909907a673746cE", scope: !1093, file: !221, line: 72, type: !3900, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !23)
!3900 = !DISubroutineType(types: !3901)
!3901 = !{!1093}
!3902 = !DILocation(line: 123, column: 21, scope: !3885)
!3903 = !DILocation(line: 123, column: 21, scope: !3904, inlinedAt: !3906)
!3904 = !DILexicalBlockFile(scope: !3905, file: !2155, discriminator: 0)
!3905 = distinct !DISubprogram(name: "align_of<i32>", linkageName: "_ZN4core3mem8align_of17h569ffa138586200eE", scope: !97, file: !803, line: 464, type: !1428, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !23)
!3906 = !DILocation(line: 95, column: 52, scope: !3907, inlinedAt: !3914)
!3907 = distinct !DISubprogram(name: "dangling<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17ha9b62138cc8508beE", scope: !532, file: !195, line: 90, type: !3908, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !3910)
!3908 = !DISubroutineType(types: !3909)
!3909 = !{!532}
!3910 = !{!3911}
!3911 = !DILocalVariable(name: "ptr", scope: !3912, file: !2155, line: 123, type: !1555, align: 8)
!3912 = !DILexicalBlockFile(scope: !3913, file: !2155, discriminator: 0)
!3913 = distinct !DILexicalBlock(scope: !3907, file: !195, line: 95, column: 13)
!3914 = !DILocation(line: 73, column: 20, scope: !3899, inlinedAt: !3902)
!3915 = !DILocalVariable(name: "addr", scope: !3916, file: !2155, line: 123, type: !9, align: 8)
!3916 = !DILexicalBlockFile(scope: !3917, file: !2155, discriminator: 0)
!3917 = distinct !DISubprogram(name: "invalid_mut<i32>", linkageName: "_ZN4core3ptr11invalid_mut17h56659099eb55de9aE", scope: !198, file: !817, line: 569, type: !3918, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !3920)
!3918 = !DISubroutineType(types: !3919)
!3919 = !{!1555, !9}
!3920 = !{!3915}
!3921 = !DILocation(line: 123, column: 21, scope: !3916, inlinedAt: !3922)
!3922 = !DILocation(line: 95, column: 23, scope: !3907, inlinedAt: !3914)
!3923 = !DILocation(line: 123, column: 21, scope: !3912, inlinedAt: !3914)
!3924 = !DILocalVariable(name: "ptr", scope: !3925, file: !2155, line: 123, type: !1555, align: 8)
!3925 = !DILexicalBlockFile(scope: !3926, file: !2155, discriminator: 0)
!3926 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17he381bebfe6eab803E", scope: !532, file: !195, line: 196, type: !1728, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !3927)
!3927 = !{!3924}
!3928 = !DILocation(line: 123, column: 21, scope: !3925, inlinedAt: !3929)
!3929 = !DILocation(line: 96, column: 13, scope: !3913, inlinedAt: !3914)
!3930 = !DILocation(line: 123, column: 9, scope: !3885)
!3931 = !DILocation(line: 124, column: 6, scope: !3885)
!3932 = !DILocation(line: 124, column: 5, scope: !3885)
!3933 = !DILocation(line: 121, column: 5, scope: !3885)
!3934 = distinct !DISubprogram(name: "reserve<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h25e84a25c1d24822E", scope: !1090, file: !2155, line: 274, type: !3935, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1102, retainedNodes: !3937)
!3935 = !DISubroutineType(types: !3936)
!3936 = !{null, !3651, !9, !9}
!3937 = !{!3938, !3939, !3940}
!3938 = !DILocalVariable(name: "self", arg: 1, scope: !3934, file: !2155, line: 274, type: !3651)
!3939 = !DILocalVariable(name: "len", arg: 2, scope: !3934, file: !2155, line: 274, type: !9)
!3940 = !DILocalVariable(name: "additional", arg: 3, scope: !3934, file: !2155, line: 274, type: !9)
!3941 = !DILocation(line: 274, column: 20, scope: !3934)
!3942 = !DILocation(line: 274, column: 31, scope: !3934)
!3943 = !DILocation(line: 274, column: 43, scope: !3934)
!3944 = !DILocation(line: 288, column: 12, scope: !3934)
!3945 = !DILocation(line: 291, column: 6, scope: !3934)
!3946 = !DILocation(line: 289, column: 13, scope: !3934)
!3947 = !DILocation(line: 288, column: 9, scope: !3934)
!3948 = distinct !DISubprogram(name: "do_reserve_and_handle<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hff666f51d4222939E", scope: !3949, file: !2155, line: 280, type: !3935, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1102, retainedNodes: !3951)
!3949 = !DINamespace(name: "reserve", scope: !3950)
!3950 = !DINamespace(name: "{impl#1}", scope: !188)
!3951 = !{!3952, !3953, !3954}
!3952 = !DILocalVariable(name: "slf", arg: 1, scope: !3948, file: !2155, line: 281, type: !3651)
!3953 = !DILocalVariable(name: "len", arg: 2, scope: !3948, file: !2155, line: 282, type: !9)
!3954 = !DILocalVariable(name: "additional", arg: 3, scope: !3948, file: !2155, line: 283, type: !9)
!3955 = !DILocation(line: 281, column: 13, scope: !3948)
!3956 = !DILocation(line: 282, column: 13, scope: !3948)
!3957 = !DILocation(line: 283, column: 13, scope: !3948)
!3958 = !DILocation(line: 285, column: 28, scope: !3948)
!3959 = !DILocation(line: 285, column: 13, scope: !3948)
!3960 = !DILocation(line: 286, column: 10, scope: !3948)
!3961 = distinct !DISubprogram(name: "from_elem<i32, alloc::alloc::Global>", linkageName: "_ZN62_$LT$T$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17h466e1c1691e18845E", scope: !3963, file: !3962, line: 23, type: !3965, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1102, retainedNodes: !3967)
!3962 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/spec_from_elem.rs", directory: "", checksumkind: CSK_MD5, checksum: "0a540c7458367f313cf051b1c5d2f659")
!3963 = !DINamespace(name: "{impl#1}", scope: !3964)
!3964 = !DINamespace(name: "spec_from_elem", scope: !1087)
!3965 = !DISubroutineType(types: !3966)
!3966 = !{!1086, !33, !9, !1100}
!3967 = !{!3968, !3969, !3970, !3971}
!3968 = !DILocalVariable(name: "elem", arg: 1, scope: !3961, file: !3962, line: 23, type: !33)
!3969 = !DILocalVariable(name: "n", arg: 2, scope: !3961, file: !3962, line: 23, type: !9)
!3970 = !DILocalVariable(name: "alloc", arg: 3, scope: !3961, file: !3962, line: 23, type: !1100)
!3971 = !DILocalVariable(name: "v", scope: !3972, file: !3962, line: 27, type: !1086, align: 8)
!3972 = distinct !DILexicalBlock(scope: !3961, file: !3962, line: 27, column: 9)
!3973 = !DILocation(line: 23, column: 40, scope: !3961)
!3974 = !DILocation(line: 23, column: 49, scope: !3961)
!3975 = !DILocation(line: 23, column: 59, scope: !3961)
!3976 = !DILocalVariable(name: "alloc", scope: !3977, file: !3962, line: 25, type: !1100, align: 1)
!3977 = !DILexicalBlockFile(scope: !3978, file: !3962, discriminator: 0)
!3978 = distinct !DISubprogram(name: "with_capacity_zeroed_in<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$23with_capacity_zeroed_in17he74b47d935c1ad7eE", scope: !1090, file: !2155, line: 138, type: !3979, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1102, retainedNodes: !3981)
!3979 = !DISubroutineType(types: !3980)
!3980 = !{!1090, !9, !1100}
!3981 = !{!3982, !3976}
!3982 = !DILocalVariable(name: "capacity", scope: !3977, file: !3962, line: 25, type: !9, align: 8)
!3983 = !DILocation(line: 25, column: 31, scope: !3977, inlinedAt: !3984)
!3984 = !DILocation(line: 25, column: 31, scope: !3961)
!3985 = !DILocation(line: 27, column: 13, scope: !3972)
!3986 = !DILocalVariable(name: "alloc", scope: !3987, file: !3962, line: 27, type: !1100, align: 1)
!3987 = !DILexicalBlockFile(scope: !3988, file: !3962, discriminator: 0)
!3988 = distinct !DISubprogram(name: "with_capacity_in<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hd03d62bd8c05cf57E", scope: !1086, file: !2126, line: 640, type: !3989, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1102, retainedNodes: !3991)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{!1086, !9, !1100}
!3991 = !{!3992, !3986}
!3992 = !DILocalVariable(name: "capacity", scope: !3987, file: !3962, line: 27, type: !9, align: 8)
!3993 = !DILocation(line: 27, column: 21, scope: !3987, inlinedAt: !3994)
!3994 = !DILocation(line: 27, column: 21, scope: !3961)
!3995 = !DILocalVariable(name: "alloc", scope: !3996, file: !3962, line: 27, type: !1100, align: 1)
!3996 = !DILexicalBlockFile(scope: !3997, file: !3962, discriminator: 0)
!3997 = distinct !DISubprogram(name: "with_capacity_in<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h2411377ea459144cE", scope: !1090, file: !2155, line: 130, type: !3979, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1102, retainedNodes: !3998)
!3998 = !{!3999, !3995}
!3999 = !DILocalVariable(name: "capacity", scope: !3996, file: !3962, line: 27, type: !9, align: 8)
!4000 = !DILocation(line: 27, column: 21, scope: !3996, inlinedAt: !4001)
!4001 = !DILocation(line: 641, column: 20, scope: !3988, inlinedAt: !3994)
!4002 = !DILocation(line: 24, column: 9, scope: !3961)
!4003 = !DILocation(line: 24, column: 12, scope: !3961)
!4004 = !DILocation(line: 30, column: 5, scope: !3961)
!4005 = !DILocation(line: 27, column: 43, scope: !3961)
!4006 = !DILocation(line: 27, column: 46, scope: !3961)
!4007 = !DILocation(line: 25, column: 63, scope: !3961)
!4008 = !DILocation(line: 25, column: 66, scope: !3961)
!4009 = !DILocation(line: 25, column: 20, scope: !3961)
!4010 = !DILocation(line: 30, column: 6, scope: !3961)
!4011 = !DILocation(line: 28, column: 40, scope: !3972)
!4012 = !DILocation(line: 28, column: 26, scope: !3972)
!4013 = !DILocation(line: 28, column: 9, scope: !3972)
!4014 = !DILocation(line: 29, column: 9, scope: !3972)
!4015 = !DILocation(line: 23, column: 5, scope: !3961)
!4016 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<usize>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9b4d6d2b6d8eadeeE", scope: !2222, file: !2221, line: 271, type: !2225, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !2228, retainedNodes: !4017)
!4017 = !{!4018}
!4018 = !DILocalVariable(name: "self", arg: 1, scope: !4016, file: !2221, line: 271, type: !1229)
!4019 = !DILocation(line: 271, column: 18, scope: !4016)
!4020 = !DILocation(line: 273, column: 6, scope: !4016)
!4021 = distinct !DISubprogram(name: "into_iter<core::slice::iter::Iter<i32>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hbedba93d2b3aafecE", scope: !2222, file: !2221, line: 271, type: !4022, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !4026, retainedNodes: !4024)
!4022 = !DISubroutineType(types: !4023)
!4023 = !{!528, !528}
!4024 = !{!4025}
!4025 = !DILocalVariable(name: "self", arg: 1, scope: !4021, file: !2221, line: 271, type: !528)
!4026 = !{!709}
!4027 = !DILocation(line: 271, column: 18, scope: !4021)
!4028 = !DILocation(line: 273, column: 6, scope: !4021)
!4029 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h2cd896543431de43E", scope: !4030, file: !2349, line: 246, type: !4031, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !4033)
!4030 = !DINamespace(name: "{impl#1}", scope: !1101)
!4031 = !DISubroutineType(types: !4032)
!4032 = !{null, !2352, !201, !261}
!4033 = !{!4034, !4035, !4036}
!4034 = !DILocalVariable(name: "self", arg: 1, scope: !4029, file: !2349, line: 246, type: !2352)
!4035 = !DILocalVariable(name: "ptr", arg: 2, scope: !4029, file: !2349, line: 246, type: !201)
!4036 = !DILocalVariable(name: "layout", arg: 3, scope: !4029, file: !2349, line: 246, type: !261)
!4037 = !DILocation(line: 246, column: 26, scope: !4029)
!4038 = !DILocation(line: 246, column: 33, scope: !4029)
!4039 = !DILocation(line: 246, column: 51, scope: !4029)
!4040 = !DILocalVariable(name: "layout", scope: !4041, file: !2349, line: 250, type: !261, align: 8)
!4041 = distinct !DISubprogram(name: "dealloc", linkageName: "_ZN5alloc5alloc7dealloc17h900afb010c65f91fE", scope: !1101, file: !2349, line: 112, type: !4042, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !4044)
!4042 = !DISubroutineType(types: !4043)
!4043 = !{null, !224, !261}
!4044 = !{!4045, !4040}
!4045 = !DILocalVariable(name: "ptr", scope: !4041, file: !2349, line: 250, type: !224, align: 8)
!4046 = !DILocation(line: 250, column: 22, scope: !4041, inlinedAt: !4047)
!4047 = !DILocation(line: 250, column: 22, scope: !4029)
!4048 = !DILocalVariable(name: "self", scope: !4049, file: !2349, line: 250, type: !1273, align: 8)
!4049 = !DILexicalBlockFile(scope: !4050, file: !2349, discriminator: 0)
!4050 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17hc3e9e20e967012deE", scope: !1273, file: !1272, line: 82, type: !1277, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !4051)
!4051 = !{!4048}
!4052 = !DILocation(line: 250, column: 22, scope: !4049, inlinedAt: !4053)
!4053 = !DILocation(line: 131, column: 9, scope: !4054, inlinedAt: !4058)
!4054 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h18656b4472f77024E", scope: !261, file: !1244, line: 130, type: !2481, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !4055)
!4055 = !{!4056}
!4056 = !DILocalVariable(name: "self", scope: !4057, file: !2349, line: 250, type: !1882, align: 8)
!4057 = !DILexicalBlockFile(scope: !4054, file: !2349, discriminator: 0)
!4058 = !DILocation(line: 113, column: 49, scope: !4041, inlinedAt: !4047)
!4059 = !DILocalVariable(name: "self", scope: !4060, file: !2349, line: 250, type: !267, align: 8)
!4060 = !DILexicalBlockFile(scope: !4061, file: !2349, discriminator: 0)
!4061 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1b1d76d92bec5242E", scope: !267, file: !1285, line: 39, type: !1286, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !4062)
!4062 = !{!4059}
!4063 = !DILocation(line: 250, column: 22, scope: !4060, inlinedAt: !4053)
!4064 = !DILocation(line: 247, column: 12, scope: !4029)
!4065 = !DILocalVariable(name: "self", scope: !4066, file: !2349, line: 247, type: !1882, align: 8)
!4066 = !DILexicalBlockFile(scope: !4067, file: !2349, discriminator: 0)
!4067 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h5ead29542ac74488E", scope: !261, file: !1244, line: 120, type: !2481, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !4068)
!4068 = !{!4065}
!4069 = !DILocation(line: 247, column: 12, scope: !4066, inlinedAt: !4064)
!4070 = !DILocation(line: 247, column: 9, scope: !4029)
!4071 = !DILocation(line: 250, column: 30, scope: !4029)
!4072 = !DILocalVariable(name: "self", scope: !4073, file: !2349, line: 250, type: !201, align: 8)
!4073 = !DILexicalBlockFile(scope: !4074, file: !2349, discriminator: 0)
!4074 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h0a8b74df506a48abE", scope: !201, file: !195, line: 330, type: !229, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !4075)
!4075 = !{!4072}
!4076 = !DILocation(line: 250, column: 30, scope: !4073, inlinedAt: !4071)
!4077 = !DILocation(line: 250, column: 44, scope: !4029)
!4078 = !DILocalVariable(name: "self", scope: !4079, file: !2349, line: 250, type: !1882, align: 8)
!4079 = !DILexicalBlockFile(scope: !4080, file: !2349, discriminator: 0)
!4080 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h5ead29542ac74488E", scope: !261, file: !1244, line: 120, type: !2481, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !4081)
!4081 = !{!4078}
!4082 = !DILocation(line: 250, column: 22, scope: !4079, inlinedAt: !4083)
!4083 = !DILocation(line: 113, column: 34, scope: !4041, inlinedAt: !4047)
!4084 = !DILocation(line: 250, column: 22, scope: !4057, inlinedAt: !4058)
!4085 = !DILocalVariable(name: "n", scope: !4086, file: !2349, line: 250, type: !9, align: 8)
!4086 = !DILexicalBlockFile(scope: !4087, file: !2349, discriminator: 0)
!4087 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h2d52a1a9b55eac1dE", scope: !1273, file: !1272, line: 56, type: !1294, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !4088)
!4088 = !{!4085, !4089}
!4089 = !DILocalVariable(name: "runtime", scope: !4090, file: !2349, line: 250, type: !1301, align: 8)
!4090 = !DILexicalBlockFile(scope: !4091, file: !2349, discriminator: 0)
!4091 = distinct !DILexicalBlock(scope: !4087, file: !1300, line: 2336, column: 13)
!4092 = !DILocation(line: 250, column: 22, scope: !4086, inlinedAt: !4093)
!4093 = !DILocation(line: 41, column: 18, scope: !4061, inlinedAt: !4053)
!4094 = !DILocation(line: 252, column: 6, scope: !4029)
!4095 = distinct !DISubprogram(name: "allocate_zeroed", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h90e76ae377f35347E", scope: !4030, file: !2349, line: 241, type: !4096, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !4098)
!4096 = !DISubroutineType(types: !4097)
!4097 = !{!1839, !2352, !261}
!4098 = !{!4099, !4100}
!4099 = !DILocalVariable(name: "self", arg: 1, scope: !4095, file: !2349, line: 241, type: !2352)
!4100 = !DILocalVariable(name: "layout", arg: 2, scope: !4095, file: !2349, line: 241, type: !261)
!4101 = !DILocation(line: 241, column: 24, scope: !4095)
!4102 = !DILocation(line: 241, column: 31, scope: !4095)
!4103 = !DILocation(line: 242, column: 9, scope: !4095)
!4104 = !DILocation(line: 243, column: 6, scope: !4095)
!4105 = distinct !DISubprogram(name: "grow", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h71cb829e3f23683aE", scope: !4030, file: !2349, line: 255, type: !4106, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !4108)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{!1839, !2352, !201, !261, !261}
!4108 = !{!4109, !4110, !4111, !4112}
!4109 = !DILocalVariable(name: "self", arg: 1, scope: !4105, file: !2349, line: 256, type: !2352)
!4110 = !DILocalVariable(name: "ptr", arg: 2, scope: !4105, file: !2349, line: 257, type: !201)
!4111 = !DILocalVariable(name: "old_layout", arg: 3, scope: !4105, file: !2349, line: 258, type: !261)
!4112 = !DILocalVariable(name: "new_layout", arg: 4, scope: !4105, file: !2349, line: 259, type: !261)
!4113 = !DILocation(line: 256, column: 9, scope: !4105)
!4114 = !DILocation(line: 257, column: 9, scope: !4105)
!4115 = !DILocation(line: 258, column: 9, scope: !4105)
!4116 = !DILocation(line: 259, column: 9, scope: !4105)
!4117 = !DILocation(line: 262, column: 18, scope: !4105)
!4118 = !DILocation(line: 263, column: 6, scope: !4105)
!4119 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hd9f6b6db6286ec88E", scope: !4030, file: !2349, line: 236, type: !4096, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !4120)
!4120 = !{!4121, !4122}
!4121 = !DILocalVariable(name: "self", arg: 1, scope: !4119, file: !2349, line: 236, type: !2352)
!4122 = !DILocalVariable(name: "layout", arg: 2, scope: !4119, file: !2349, line: 236, type: !261)
!4123 = !DILocation(line: 236, column: 17, scope: !4119)
!4124 = !DILocation(line: 236, column: 24, scope: !4119)
!4125 = !DILocation(line: 237, column: 9, scope: !4119)
!4126 = !DILocation(line: 238, column: 6, scope: !4119)
!4127 = distinct !DISubprogram(name: "spec_eq<i32, i32, 2>", linkageName: "_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h1bfe710c6ea46e74E", scope: !4128, file: !1502, line: 148, type: !1505, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1947, retainedNodes: !4129)
!4128 = !DINamespace(name: "{impl#9}", scope: !1504)
!4129 = !{!4130, !4131, !4132}
!4130 = !DILocalVariable(name: "a", arg: 1, scope: !4127, file: !1502, line: 148, type: !62)
!4131 = !DILocalVariable(name: "b", arg: 2, scope: !4127, file: !1502, line: 148, type: !62)
!4132 = !DILocalVariable(name: "b", scope: !4133, file: !1502, line: 151, type: !62, align: 8)
!4133 = distinct !DILexicalBlock(scope: !4127, file: !1502, line: 151, column: 13)
!4134 = !DILocation(line: 148, column: 16, scope: !4127)
!4135 = !DILocation(line: 148, column: 28, scope: !4127)
!4136 = !DILocation(line: 151, column: 23, scope: !4127)
!4137 = !DILocalVariable(name: "self", scope: !4138, file: !1502, line: 151, type: !453, align: 8)
!4138 = !DILexicalBlockFile(scope: !4139, file: !1502, discriminator: 0)
!4139 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h1eda4966a3efb19dE", scope: !524, file: !523, line: 476, type: !1617, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !4140)
!4140 = !{!4137}
!4141 = !DILocation(line: 151, column: 23, scope: !4138, inlinedAt: !4136)
!4142 = !DILocalVariable(name: "self", scope: !4143, file: !1502, line: 151, type: !535, align: 8)
!4143 = !DILexicalBlockFile(scope: !4144, file: !1502, discriminator: 0)
!4144 = distinct !DISubprogram(name: "cast<i32, [i32; 2]>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h2d4337a86ab1b8a5E", scope: !1649, file: !1648, line: 46, type: !4145, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !4149, retainedNodes: !4148)
!4145 = !DISubroutineType(types: !4146)
!4146 = !{!4147, !535}
!4147 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const [i32; 2]", baseType: !63, size: 64, align: 64, dwarfAddressSpace: 0)
!4148 = !{!4142}
!4149 = !{!462, !1984}
!4150 = !DILocation(line: 151, column: 23, scope: !4143, inlinedAt: !4136)
!4151 = !DILocation(line: 151, column: 21, scope: !4127)
!4152 = !DILocation(line: 151, column: 17, scope: !4133)
!4153 = !DILocation(line: 152, column: 13, scope: !4133)
!4154 = !DILocation(line: 154, column: 6, scope: !4127)
!4155 = distinct !DISubprogram(name: "drop<i32, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h70905a73bf71b336E", scope: !4156, file: !2126, line: 2915, type: !4157, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1102, retainedNodes: !4159)
!4156 = !DINamespace(name: "{impl#28}", scope: !1087)
!4157 = !DISubroutineType(types: !4158)
!4158 = !{null, !2129}
!4159 = !{!4160}
!4160 = !DILocalVariable(name: "self", arg: 1, scope: !4155, file: !2126, line: 2915, type: !2129)
!4161 = !DILocation(line: 2915, column: 13, scope: !4155)
!4162 = !DILocation(line: 2920, column: 62, scope: !4155)
!4163 = !DILocalVariable(name: "data", scope: !4164, file: !2126, line: 2920, type: !1555, align: 8)
!4164 = !DILexicalBlockFile(scope: !4165, file: !2126, discriminator: 0)
!4165 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<i32>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h0bd53885bd36785dE", scope: !198, file: !817, line: 727, type: !4166, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !4172)
!4166 = !DISubroutineType(types: !4167)
!4167 = !{!4168, !1555, !9}
!4168 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [i32]", file: !2, size: 128, align: 64, elements: !4169, templateParams: !23, identifier: "882e8de4e8ad4bf739e64bffb4a9228")
!4169 = !{!4170, !4171}
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !4168, file: !2, baseType: !456, size: 64, align: 64)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4168, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4172 = !{!4163, !4173}
!4173 = !DILocalVariable(name: "len", scope: !4164, file: !2126, line: 2920, type: !9, align: 8)
!4174 = !DILocation(line: 2920, column: 32, scope: !4164, inlinedAt: !4175)
!4175 = !DILocation(line: 2920, column: 32, scope: !4155)
!4176 = !DILocation(line: 2920, column: 81, scope: !4155)
!4177 = !DILocalVariable(name: "self", scope: !4178, file: !2126, line: 2920, type: !1555, align: 8)
!4178 = !DILexicalBlockFile(scope: !4179, file: !2126, discriminator: 0)
!4179 = distinct !DISubprogram(name: "cast<i32, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17ha6f5042d1f83dd84E", scope: !1187, file: !1186, line: 45, type: !4180, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !4183, retainedNodes: !4182)
!4180 = !DISubroutineType(types: !4181)
!4181 = !{!1176, !1555}
!4182 = !{!4177}
!4183 = !{!462, !2643}
!4184 = !DILocation(line: 2920, column: 32, scope: !4178, inlinedAt: !4185)
!4185 = !DILocation(line: 728, column: 24, scope: !4165, inlinedAt: !4175)
!4186 = !DILocalVariable(name: "data_address", scope: !4187, file: !2126, line: 2920, type: !1176, align: 8)
!4187 = !DILexicalBlockFile(scope: !4188, file: !2126, discriminator: 0)
!4188 = distinct !DISubprogram(name: "from_raw_parts_mut<[i32]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h795d0388ebb564b1E", scope: !1173, file: !1172, line: 127, type: !4189, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !4191)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{!4168, !1176, !9}
!4191 = !{!4186, !4192}
!4192 = !DILocalVariable(name: "metadata", scope: !4187, file: !2126, line: 2920, type: !9, align: 8)
!4193 = !DILocation(line: 2920, column: 32, scope: !4187, inlinedAt: !4194)
!4194 = !DILocation(line: 728, column: 5, scope: !4165, inlinedAt: !4175)
!4195 = !DILocation(line: 2920, column: 13, scope: !4155)
!4196 = !DILocation(line: 2923, column: 6, scope: !4155)
!4197 = distinct !DISubprogram(name: "drop<i32, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb421582263d5d1b2E", scope: !4198, file: !2155, line: 477, type: !4199, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1102, retainedNodes: !4201)
!4198 = !DINamespace(name: "{impl#3}", scope: !188)
!4199 = !DISubroutineType(types: !4200)
!4200 = !{null, !3651}
!4201 = !{!4202, !4203, !4205}
!4202 = !DILocalVariable(name: "self", arg: 1, scope: !4197, file: !2155, line: 477, type: !3651)
!4203 = !DILocalVariable(name: "ptr", scope: !4204, file: !2155, line: 478, type: !201, align: 8)
!4204 = distinct !DILexicalBlock(scope: !4197, file: !2155, line: 478, column: 60)
!4205 = !DILocalVariable(name: "layout", scope: !4204, file: !2155, line: 478, type: !261, align: 8)
!4206 = !DILocation(line: 477, column: 13, scope: !4197)
!4207 = !DILocation(line: 478, column: 38, scope: !4204)
!4208 = !DILocation(line: 478, column: 16, scope: !4204)
!4209 = !DILocation(line: 478, column: 22, scope: !4204)
!4210 = !DILocation(line: 478, column: 27, scope: !4204)
!4211 = !DILocation(line: 479, column: 22, scope: !4204)
!4212 = !DILocation(line: 481, column: 6, scope: !4197)
!4213 = !DILocation(line: 478, column: 9, scope: !4197)
!4214 = distinct !DISubprogram(name: "drop", linkageName: "_ZN83_$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5f4f1e79ad2e8108E", scope: !4215, file: !2281, line: 25, type: !4216, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !4218)
!4215 = !DINamespace(name: "{impl#1}", scope: !1133)
!4216 = !DISubroutineType(types: !4217)
!4217 = !{null, !2311}
!4218 = !{!4219}
!4219 = !DILocalVariable(name: "self", arg: 1, scope: !4214, file: !2281, line: 25, type: !2311)
!4220 = !DILocation(line: 25, column: 13, scope: !4214)
!4221 = !DILocation(line: 26, column: 21, scope: !4214)
!4222 = !DILocation(line: 26, column: 9, scope: !4214)
!4223 = !DILocation(line: 27, column: 6, scope: !4214)
!4224 = distinct !DISubprogram(name: "last<i32>", linkageName: "_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4last17ha28606eb736bcb7bE", scope: !4225, file: !2126, line: 2380, type: !4226, scopeLine: 2380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !4228)
!4225 = !DINamespace(name: "{impl#4}", scope: !1087)
!4226 = !DISubroutineType(types: !4227)
!4227 = !{!33, !2198}
!4228 = !{!4229}
!4229 = !DILocalVariable(name: "self", arg: 1, scope: !4224, file: !2126, line: 2380, type: !2198)
!4230 = !DILocation(line: 2380, column: 13, scope: !4224)
!4231 = !DILocation(line: 2382, column: 6, scope: !4224)
!4232 = distinct !DISubprogram(name: "next<i32>", linkageName: "_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4next17h9f98ea69187512e2E", scope: !4225, file: !2126, line: 2377, type: !4233, scopeLine: 2377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !4236)
!4233 = !DISubroutineType(types: !4234)
!4234 = !{!33, !4235}
!4235 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::ExtendElement<i32>", baseType: !2198, size: 64, align: 64, dwarfAddressSpace: 0)
!4236 = !{!4237}
!4237 = !DILocalVariable(name: "self", arg: 1, scope: !4232, file: !2126, line: 2377, type: !4235)
!4238 = !DILocation(line: 2377, column: 13, scope: !4232)
!4239 = !DILocation(line: 2378, column: 9, scope: !4232)
!4240 = !DILocation(line: 2379, column: 6, scope: !4232)
!4241 = distinct !DISubprogram(name: "spec_next<usize>", linkageName: "_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h728e80b1bfdf1381E", scope: !4242, file: !545, line: 620, type: !1226, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !407, retainedNodes: !4243)
!4242 = !DINamespace(name: "{impl#2}", scope: !547)
!4243 = !{!4244, !4245}
!4244 = !DILocalVariable(name: "self", arg: 1, scope: !4241, file: !545, line: 620, type: !1228)
!4245 = !DILocalVariable(name: "n", scope: !4246, file: !545, line: 623, type: !9, align: 8)
!4246 = distinct !DILexicalBlock(scope: !4241, file: !545, line: 623, column: 13)
!4247 = !DILocation(line: 620, column: 18, scope: !4241)
!4248 = !DILocation(line: 621, column: 12, scope: !4241)
!4249 = !DILocation(line: 621, column: 25, scope: !4241)
!4250 = !DILocation(line: 626, column: 13, scope: !4241)
!4251 = !DILocation(line: 621, column: 9, scope: !4241)
!4252 = !DILocation(line: 623, column: 54, scope: !4241)
!4253 = !DILocation(line: 623, column: 30, scope: !4241)
!4254 = !DILocation(line: 623, column: 17, scope: !4246)
!4255 = !DILocation(line: 624, column: 31, scope: !4246)
!4256 = !DILocation(line: 624, column: 18, scope: !4246)
!4257 = !DILocation(line: 624, column: 13, scope: !4246)
!4258 = !DILocation(line: 628, column: 6, scope: !4241)
!4259 = distinct !DISubprogram(name: "next<i32>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7353489ac595ce3aE", scope: !4261, file: !4260, line: 134, type: !4262, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !4276)
!4260 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "41903112aef4079fb81d70967f52d92d")
!4261 = !DINamespace(name: "{impl#181}", scope: !529)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{!4264, !4275}
!4264 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&i32>", scope: !401, file: !2, size: 64, align: 64, elements: !4265, templateParams: !23, identifier: "324ce9e215b65561e56a4e40dc41c26a")
!4265 = !{!4266}
!4266 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4264, file: !2, size: 64, align: 64, elements: !4267, templateParams: !23, identifier: "7a132f634b787d2ff3bb697f10bd55f1", discriminator: !4274)
!4267 = !{!4268, !4270}
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4266, file: !2, baseType: !4269, size: 64, align: 64, extraData: i64 0)
!4269 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4264, file: !2, size: 64, align: 64, elements: !23, templateParams: !539, identifier: "bdbca88789dba77455c6fdf7b07427bc")
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4266, file: !2, baseType: !4271, size: 64, align: 64)
!4271 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4264, file: !2, size: 64, align: 64, elements: !4272, templateParams: !539, identifier: "c74e16f3f5ba0f0f9deeaf73819c704")
!4272 = !{!4273}
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4271, file: !2, baseType: !32, size: 64, align: 64)
!4274 = !DIDerivedType(tag: DW_TAG_member, scope: !4264, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagArtificial)
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<i32>", baseType: !528, size: 64, align: 64, dwarfAddressSpace: 0)
!4276 = !{!4277}
!4277 = !DILocalVariable(name: "self", arg: 1, scope: !4259, file: !4260, line: 134, type: !4275)
!4278 = !DILocation(line: 134, column: 21, scope: !4259)
!4279 = !DILocalVariable(name: "metadata", scope: !4280, file: !4260, line: 142, type: !7, align: 1)
!4280 = !DILexicalBlockFile(scope: !4281, file: !4260, discriminator: 0)
!4281 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h5094a4a4d205c897E", scope: !1173, file: !1172, line: 127, type: !1174, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !4282)
!4282 = !{!4283, !4279}
!4283 = !DILocalVariable(name: "data_address", scope: !4280, file: !4260, line: 142, type: !1176, align: 8)
!4284 = !DILocation(line: 142, column: 29, scope: !4280, inlinedAt: !4285)
!4285 = !DILocation(line: 668, column: 5, scope: !4286, inlinedAt: !4287)
!4286 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h390c2df580356f7fE", scope: !198, file: !817, line: 667, type: !1182, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !23)
!4287 = !DILocation(line: 38, column: 41, scope: !4288, inlinedAt: !4292)
!4288 = distinct !DISubprogram(name: "is_null<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h10577b5c9d54a231E", scope: !1187, file: !1186, line: 35, type: !2145, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !4289)
!4289 = !{!4290}
!4290 = !DILocalVariable(name: "self", scope: !4291, file: !4260, line: 142, type: !1555, align: 8)
!4291 = !DILexicalBlockFile(scope: !4288, file: !4260, discriminator: 0)
!4292 = !DILocation(line: 142, column: 29, scope: !4259)
!4293 = !DILocalVariable(name: "metadata", scope: !4294, file: !4260, line: 144, type: !7, align: 1)
!4294 = !DILexicalBlockFile(scope: !4295, file: !4260, discriminator: 0)
!4295 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h5bb22926a456e3e7E", scope: !1173, file: !1172, line: 110, type: !1637, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !4296)
!4296 = !{!4297, !4293}
!4297 = !DILocalVariable(name: "data_address", scope: !4294, file: !4260, line: 144, type: !6, align: 8)
!4298 = !DILocation(line: 144, column: 33, scope: !4294, inlinedAt: !4299)
!4299 = !DILocation(line: 513, column: 5, scope: !4300, inlinedAt: !4301)
!4300 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17h5b4d995a46e58f0cE", scope: !198, file: !817, line: 512, type: !1644, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !23)
!4301 = !DILocation(line: 39, column: 43, scope: !4302, inlinedAt: !4306)
!4302 = distinct !DISubprogram(name: "is_null<i32>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hc33852f37e7fcec3E", scope: !1649, file: !1648, line: 36, type: !1651, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !4303)
!4303 = !{!4304}
!4304 = !DILocalVariable(name: "self", scope: !4305, file: !4260, line: 144, type: !535, align: 8)
!4305 = !DILexicalBlockFile(scope: !4302, file: !4260, discriminator: 0)
!4306 = !DILocation(line: 144, column: 33, scope: !4259)
!4307 = !DILocalVariable(name: "self", scope: !4308, file: !4260, line: 142, type: !532, align: 8)
!4308 = !DILexicalBlockFile(scope: !4309, file: !4260, discriminator: 0)
!4309 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17haa1145af21efe5f7E", scope: !532, file: !195, line: 330, type: !2172, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !4310)
!4310 = !{!4307}
!4311 = !DILocation(line: 142, column: 29, scope: !4308, inlinedAt: !4292)
!4312 = !DILocation(line: 142, column: 29, scope: !4291, inlinedAt: !4292)
!4313 = !DILocalVariable(name: "self", scope: !4314, file: !4260, line: 142, type: !224, align: 8)
!4314 = !DILexicalBlockFile(scope: !4315, file: !4260, discriminator: 0)
!4315 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17he1dd2630bb4fa294E", scope: !1187, file: !1186, line: 707, type: !1199, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !4316)
!4316 = !{!4313, !4317}
!4317 = !DILocalVariable(name: "other", scope: !4314, file: !4260, line: 142, type: !224, align: 8)
!4318 = !DILocation(line: 142, column: 29, scope: !4314, inlinedAt: !4319)
!4319 = !DILocation(line: 38, column: 9, scope: !4288, inlinedAt: !4292)
!4320 = !DILocation(line: 142, column: 29, scope: !4321, inlinedAt: !4325)
!4321 = !DILexicalBlockFile(scope: !4322, file: !4260, discriminator: 0)
!4322 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17hee63661066bd1171E", scope: !198, file: !817, line: 569, type: !1208, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !301, retainedNodes: !4323)
!4323 = !{!4324}
!4324 = !DILocalVariable(name: "addr", scope: !4321, file: !4260, line: 142, type: !9, align: 8)
!4325 = !DILocation(line: 668, column: 24, scope: !4286, inlinedAt: !4287)
!4326 = !DILocation(line: 142, column: 28, scope: !4259)
!4327 = !DILocation(line: 142, column: 21, scope: !4259)
!4328 = !DILocation(line: 143, column: 24, scope: !4259)
!4329 = !DILocation(line: 143, column: 21, scope: !4259)
!4330 = !DILocation(line: 144, column: 33, scope: !4305, inlinedAt: !4306)
!4331 = !DILocalVariable(name: "self", scope: !4332, file: !4260, line: 144, type: !204, align: 8)
!4332 = !DILexicalBlockFile(scope: !4333, file: !4260, discriminator: 0)
!4333 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h99649a1342ba48d4E", scope: !1649, file: !1648, line: 777, type: !1668, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !4334)
!4334 = !{!4331, !4335}
!4335 = !DILocalVariable(name: "other", scope: !4332, file: !4260, line: 144, type: !204, align: 8)
!4336 = !DILocation(line: 144, column: 33, scope: !4332, inlinedAt: !4337)
!4337 = !DILocation(line: 39, column: 9, scope: !4302, inlinedAt: !4306)
!4338 = !DILocation(line: 144, column: 33, scope: !4339, inlinedAt: !4343)
!4339 = !DILexicalBlockFile(scope: !4340, file: !4260, discriminator: 0)
!4340 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h836cdbe426db23cbE", scope: !198, file: !817, line: 538, type: !1677, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !301, retainedNodes: !4341)
!4341 = !{!4342}
!4342 = !DILocalVariable(name: "addr", scope: !4339, file: !4260, line: 144, type: !9, align: 8)
!4343 = !DILocation(line: 513, column: 20, scope: !4300, inlinedAt: !4301)
!4344 = !DILocation(line: 144, column: 32, scope: !4259)
!4345 = !DILocation(line: 144, column: 25, scope: !4259)
!4346 = !DILocation(line: 146, column: 24, scope: !4259)
!4347 = !DILocalVariable(name: "self", scope: !4348, file: !4260, line: 146, type: !532, align: 8)
!4348 = !DILexicalBlockFile(scope: !4349, file: !4260, discriminator: 0)
!4349 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17haa1145af21efe5f7E", scope: !532, file: !195, line: 330, type: !2172, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !4350)
!4350 = !{!4347}
!4351 = !DILocation(line: 146, column: 24, scope: !4348, inlinedAt: !4352)
!4352 = !DILocation(line: 8, column: 9, scope: !4259)
!4353 = !DILocation(line: 149, column: 30, scope: !4259)
!4354 = !DILocalVariable(name: "self", scope: !4355, file: !4260, line: 149, type: !4275, align: 8)
!4355 = distinct !DISubprogram(name: "post_inc_start<i32>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17hd67349acd529ddccE", scope: !528, file: !4260, line: 85, type: !4356, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !4358)
!4356 = !DISubroutineType(types: !4357)
!4357 = !{!535, !4275, !313}
!4358 = !{!4354, !4359, !4360}
!4359 = !DILocalVariable(name: "offset", scope: !4355, file: !4260, line: 149, type: !313, align: 8)
!4360 = !DILocalVariable(name: "old", scope: !4361, file: !4260, line: 149, type: !1555, align: 8)
!4361 = distinct !DILexicalBlock(scope: !4355, file: !4260, line: 90, column: 21)
!4362 = !DILocation(line: 149, column: 30, scope: !4355, inlinedAt: !4363)
!4363 = !DILocation(line: 53, column: 47, scope: !4259)
!4364 = !DILocation(line: 147, column: 25, scope: !4259)
!4365 = !DILocation(line: 146, column: 21, scope: !4259)
!4366 = !DILocation(line: 152, column: 14, scope: !4259)
!4367 = !DILocalVariable(name: "self", scope: !4368, file: !4260, line: 149, type: !204, align: 8)
!4368 = !DILexicalBlockFile(scope: !4369, file: !4260, discriminator: 0)
!4369 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17ha71d60e195e224daE", scope: !1649, file: !1648, line: 536, type: !1698, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !205, retainedNodes: !4370)
!4370 = !{!4367, !4371}
!4371 = !DILocalVariable(name: "count", scope: !4368, file: !4260, line: 149, type: !313, align: 8)
!4372 = !DILocation(line: 149, column: 30, scope: !4368, inlinedAt: !4373)
!4373 = !DILocation(line: 67, column: 29, scope: !4355, inlinedAt: !4363)
!4374 = !DILocalVariable(name: "self", scope: !4375, file: !4260, line: 149, type: !532, align: 8)
!4375 = !DILexicalBlockFile(scope: !4376, file: !4260, discriminator: 0)
!4376 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17haa1145af21efe5f7E", scope: !532, file: !195, line: 330, type: !2172, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !4377)
!4377 = !{!4374}
!4378 = !DILocation(line: 149, column: 30, scope: !4375, inlinedAt: !4379)
!4379 = !DILocation(line: 90, column: 31, scope: !4355, inlinedAt: !4363)
!4380 = !DILocation(line: 149, column: 30, scope: !4361, inlinedAt: !4363)
!4381 = !DILocalVariable(name: "self", scope: !4382, file: !4260, line: 149, type: !532, align: 8)
!4382 = !DILexicalBlockFile(scope: !4383, file: !4260, discriminator: 0)
!4383 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17haa1145af21efe5f7E", scope: !532, file: !195, line: 330, type: !2172, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !4384)
!4384 = !{!4381}
!4385 = !DILocation(line: 149, column: 30, scope: !4382, inlinedAt: !4386)
!4386 = !DILocation(line: 93, column: 64, scope: !4361, inlinedAt: !4363)
!4387 = !DILocalVariable(name: "self", scope: !4388, file: !4260, line: 149, type: !1555, align: 8)
!4388 = !DILexicalBlockFile(scope: !4389, file: !4260, discriminator: 0)
!4389 = distinct !DISubprogram(name: "offset<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17he50ecddcc032164bE", scope: !1187, file: !1186, line: 465, type: !2271, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !4390)
!4390 = !{!4387, !4391}
!4391 = !DILocalVariable(name: "count", scope: !4388, file: !4260, line: 149, type: !313, align: 8)
!4392 = !DILocation(line: 149, column: 30, scope: !4388, inlinedAt: !4386)
!4393 = !DILocalVariable(name: "ptr", scope: !4394, file: !4260, line: 149, type: !1555, align: 8)
!4394 = !DILexicalBlockFile(scope: !4395, file: !4260, discriminator: 0)
!4395 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17he381bebfe6eab803E", scope: !532, file: !195, line: 196, type: !1728, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !4396)
!4396 = !{!4393}
!4397 = !DILocation(line: 149, column: 30, scope: !4394, inlinedAt: !4398)
!4398 = !DILocation(line: 93, column: 41, scope: !4361, inlinedAt: !4363)
!4399 = !DILocation(line: 149, column: 25, scope: !4259)
!4400 = !DILocalVariable(name: "self", scope: !4401, file: !4260, line: 149, type: !532, align: 8)
!4401 = !DILexicalBlockFile(scope: !4402, file: !4260, discriminator: 0)
!4402 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17haa1145af21efe5f7E", scope: !532, file: !195, line: 330, type: !2172, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !4403)
!4403 = !{!4400}
!4404 = !DILocation(line: 149, column: 30, scope: !4401, inlinedAt: !4405)
!4405 = !DILocation(line: 88, column: 21, scope: !4355, inlinedAt: !4363)
!4406 = distinct !DISubprogram(name: "rust_event_queues_init", scope: !4408, file: !4407, line: 22, type: !4409, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !4418)
!4407 = !DIFile(filename: "src/packed_arrays.rs", directory: "/home/calvin/git/c2rust/tests/arrays", checksumkind: CSK_MD5, checksum: "9d33ea6f0beeb65c90f5d9e522e00ba6")
!4408 = !DINamespace(name: "packed_arrays", scope: !69)
!4409 = !DISubroutineType(types: !4410)
!4410 = !{null, !4411}
!4411 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut array_tests::packed_arrays::event_queue_t", baseType: !4412, size: 64, align: 64, dwarfAddressSpace: 0)
!4412 = !DICompositeType(tag: DW_TAG_structure_type, name: "event_queue_t", scope: !4408, file: !2, size: 32, align: 32, elements: !4413, templateParams: !23, identifier: "a37dfd70f8374e4b4c9b11554148133")
!4413 = !{!4414}
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4412, file: !2, baseType: !4415, size: 32, align: 32)
!4415 = !DICompositeType(tag: DW_TAG_structure_type, name: "event_queue_t_Inner", scope: !4408, file: !2, size: 32, align: 32, elements: !4416, templateParams: !23, identifier: "6ec103d5c6e93881693de2c91a49d9b1")
!4416 = !{!4417}
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "waiter", scope: !4415, file: !2, baseType: !33, size: 32, align: 32)
!4418 = !{!4419}
!4419 = !DILocalVariable(name: "queues", arg: 1, scope: !4406, file: !4407, line: 22, type: !4411)
!4420 = !DILocation(line: 22, column: 49, scope: !4406)
!4421 = !DILocalVariable(name: "self", arg: 1, scope: !4422, file: !1186, line: 465, type: !4411)
!4422 = distinct !DISubprogram(name: "offset<array_tests::packed_arrays::event_queue_t>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h7acabd46a7efdb3aE", scope: !1187, file: !1186, line: 465, type: !4423, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !4427, retainedNodes: !4425)
!4423 = !DISubroutineType(types: !4424)
!4424 = !{!4411, !4411, !313}
!4425 = !{!4421, !4426}
!4426 = !DILocalVariable(name: "count", arg: 2, scope: !4422, file: !1186, line: 465, type: !313)
!4427 = !{!4428}
!4428 = !DITemplateTypeParameter(name: "T", type: !4412)
!4429 = !DILocation(line: 465, column: 32, scope: !4422, inlinedAt: !4430)
!4430 = distinct !DILocation(line: 23, column: 7, scope: !4406)
!4431 = !DILocation(line: 465, column: 38, scope: !4422, inlinedAt: !4430)
!4432 = !DILocation(line: 472, column: 18, scope: !4422, inlinedAt: !4430)
!4433 = !DILocation(line: 23, column: 7, scope: !4406)
!4434 = !DILocation(line: 23, column: 5, scope: !4406)
!4435 = !DILocation(line: 24, column: 2, scope: !4406)
!4436 = distinct !DISubprogram(name: "rust_entry", scope: !78, file: !79, line: 23, type: !4437, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !4439)
!4437 = !DISubroutineType(types: !4438)
!4438 = !{null, !53, !1555}
!4439 = !{!4440, !4441, !4442, !4448, !4453, !4460, !4462, !4465, !4467, !4469, !4471, !4473, !4476, !4478, !4480, !4482, !4485, !4487, !4489, !4491, !4493, !4495, !4497, !4499, !4502, !4504, !4506, !4508, !4510, !4512, !4514, !4516, !4518, !4523, !4525, !4527, !4529, !4531, !4533, !4535, !4537, !4539, !4541, !4543, !4546, !4548, !4550, !4552, !4554, !4556, !4558, !4560, !4562, !4564, !4566, !4568, !4570, !4572, !4574, !4576, !4578, !4580, !4582, !4584, !4586, !4588}
!4440 = !DILocalVariable(name: "buffer_size", arg: 1, scope: !4436, file: !79, line: 24, type: !53)
!4441 = !DILocalVariable(name: "buffer", arg: 2, scope: !4436, file: !79, line: 25, type: !1555)
!4442 = !DILocalVariable(name: "arr", scope: !4443, file: !79, line: 27, type: !4444, align: 4)
!4443 = distinct !DILexicalBlock(scope: !4436, file: !79, line: 27, column: 5)
!4444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4445, size: 32, align: 32, elements: !4446)
!4445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 32, align: 32, elements: !4446)
!4446 = !{!4447}
!4447 = !DISubrange(count: 1, lowerBound: 0)
!4448 = !DILocalVariable(name: "arr2", scope: !4449, file: !79, line: 30, type: !4450, align: 4)
!4449 = distinct !DILexicalBlock(scope: !4443, file: !79, line: 30, column: 5)
!4450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 512, align: 32, elements: !4451)
!4451 = !{!4452}
!4452 = !DISubrange(count: 16, lowerBound: 0)
!4453 = !DILocalVariable(name: "arr3", scope: !4454, file: !79, line: 32, type: !4455, align: 8)
!4454 = distinct !DILexicalBlock(scope: !4449, file: !79, line: 32, column: 5)
!4455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4456, size: 128, align: 64, elements: !4446)
!4456 = !DICompositeType(tag: DW_TAG_structure_type, name: "C2RustUnnamed", scope: !78, file: !2, size: 128, align: 64, elements: !4457, templateParams: !23, identifier: "1ddf623b87d8ee65c193d9254208fdc7")
!4457 = !{!4458, !4459}
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4456, file: !2, baseType: !86, size: 64, align: 64)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4456, file: !2, baseType: !33, size: 32, align: 32, offset: 64)
!4460 = !DILocalVariable(name: "i", scope: !4461, file: !79, line: 37, type: !33, align: 4)
!4461 = distinct !DILexicalBlock(scope: !4454, file: !79, line: 37, column: 5)
!4462 = !DILocalVariable(name: "abc", scope: !4463, file: !79, line: 38, type: !4464, align: 1)
!4463 = distinct !DILexicalBlock(scope: !4461, file: !79, line: 38, column: 5)
!4464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !81, size: 32, align: 8, elements: !72)
!4465 = !DILocalVariable(name: "fresh0", scope: !4466, file: !79, line: 42, type: !33, align: 4)
!4466 = distinct !DILexicalBlock(scope: !4463, file: !79, line: 42, column: 5)
!4467 = !DILocalVariable(name: "fresh1", scope: !4468, file: !79, line: 46, type: !33, align: 4)
!4468 = distinct !DILexicalBlock(scope: !4466, file: !79, line: 46, column: 5)
!4469 = !DILocalVariable(name: "fresh2", scope: !4470, file: !79, line: 50, type: !33, align: 4)
!4470 = distinct !DILexicalBlock(scope: !4468, file: !79, line: 50, column: 5)
!4471 = !DILocalVariable(name: "fresh3", scope: !4472, file: !79, line: 54, type: !33, align: 4)
!4472 = distinct !DILexicalBlock(scope: !4470, file: !79, line: 54, column: 5)
!4473 = !DILocalVariable(name: "def", scope: !4474, file: !79, line: 58, type: !4475, align: 1)
!4474 = distinct !DILexicalBlock(scope: !4472, file: !79, line: 58, column: 5)
!4475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !81, size: 24, align: 8, elements: !424)
!4476 = !DILocalVariable(name: "fresh4", scope: !4477, file: !79, line: 63, type: !33, align: 4)
!4477 = distinct !DILexicalBlock(scope: !4474, file: !79, line: 63, column: 5)
!4478 = !DILocalVariable(name: "fresh5", scope: !4479, file: !79, line: 67, type: !33, align: 4)
!4479 = distinct !DILexicalBlock(scope: !4477, file: !79, line: 67, column: 5)
!4480 = !DILocalVariable(name: "fresh6", scope: !4481, file: !79, line: 71, type: !33, align: 4)
!4481 = distinct !DILexicalBlock(scope: !4479, file: !79, line: 71, column: 5)
!4482 = !DILocalVariable(name: "part", scope: !4483, file: !79, line: 75, type: !4484, align: 1)
!4483 = distinct !DILexicalBlock(scope: !4481, file: !79, line: 75, column: 5)
!4484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !81, size: 16, align: 8, elements: !64)
!4485 = !DILocalVariable(name: "fresh7", scope: !4486, file: !79, line: 76, type: !33, align: 4)
!4486 = distinct !DILexicalBlock(scope: !4483, file: !79, line: 76, column: 5)
!4487 = !DILocalVariable(name: "fresh8", scope: !4488, file: !79, line: 80, type: !33, align: 4)
!4488 = distinct !DILexicalBlock(scope: !4486, file: !79, line: 80, column: 5)
!4489 = !DILocalVariable(name: "abcptr", scope: !4490, file: !79, line: 84, type: !86, align: 8)
!4490 = distinct !DILexicalBlock(scope: !4488, file: !79, line: 84, column: 5)
!4491 = !DILocalVariable(name: "fresh9", scope: !4492, file: !79, line: 86, type: !33, align: 4)
!4492 = distinct !DILexicalBlock(scope: !4490, file: !79, line: 86, column: 5)
!4493 = !DILocalVariable(name: "fresh10", scope: !4494, file: !79, line: 90, type: !33, align: 4)
!4494 = distinct !DILexicalBlock(scope: !4492, file: !79, line: 90, column: 5)
!4495 = !DILocalVariable(name: "fresh11", scope: !4496, file: !79, line: 94, type: !33, align: 4)
!4496 = distinct !DILexicalBlock(scope: !4494, file: !79, line: 94, column: 5)
!4497 = !DILocalVariable(name: "fresh12", scope: !4498, file: !79, line: 98, type: !33, align: 4)
!4498 = distinct !DILexicalBlock(scope: !4496, file: !79, line: 98, column: 5)
!4499 = !DILocalVariable(name: "init", scope: !4500, file: !79, line: 102, type: !4501, align: 1)
!4500 = distinct !DILexicalBlock(scope: !4498, file: !79, line: 102, column: 5)
!4501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !81, size: 40, align: 8, elements: !1571)
!4502 = !DILocalVariable(name: "fresh13", scope: !4503, file: !79, line: 106, type: !33, align: 4)
!4503 = distinct !DILexicalBlock(scope: !4500, file: !79, line: 106, column: 5)
!4504 = !DILocalVariable(name: "fresh14", scope: !4505, file: !79, line: 110, type: !33, align: 4)
!4505 = distinct !DILexicalBlock(scope: !4503, file: !79, line: 110, column: 5)
!4506 = !DILocalVariable(name: "fresh15", scope: !4507, file: !79, line: 114, type: !33, align: 4)
!4507 = distinct !DILexicalBlock(scope: !4505, file: !79, line: 114, column: 5)
!4508 = !DILocalVariable(name: "fresh16", scope: !4509, file: !79, line: 118, type: !33, align: 4)
!4509 = distinct !DILexicalBlock(scope: !4507, file: !79, line: 118, column: 5)
!4510 = !DILocalVariable(name: "too_long", scope: !4511, file: !79, line: 122, type: !4475, align: 1)
!4511 = distinct !DILexicalBlock(scope: !4509, file: !79, line: 122, column: 5)
!4512 = !DILocalVariable(name: "fresh17", scope: !4513, file: !79, line: 126, type: !33, align: 4)
!4513 = distinct !DILexicalBlock(scope: !4511, file: !79, line: 126, column: 5)
!4514 = !DILocalVariable(name: "fresh18", scope: !4515, file: !79, line: 130, type: !33, align: 4)
!4515 = distinct !DILexicalBlock(scope: !4513, file: !79, line: 130, column: 5)
!4516 = !DILocalVariable(name: "fresh19", scope: !4517, file: !79, line: 134, type: !33, align: 4)
!4517 = distinct !DILexicalBlock(scope: !4515, file: !79, line: 134, column: 5)
!4518 = !DILocalVariable(name: "too_short", scope: !4519, file: !79, line: 138, type: !4520, align: 1)
!4519 = distinct !DILexicalBlock(scope: !4517, file: !79, line: 138, column: 5)
!4520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !81, size: 160, align: 8, elements: !4521)
!4521 = !{!4522}
!4522 = !DISubrange(count: 20, lowerBound: 0)
!4523 = !DILocalVariable(name: "fresh20", scope: !4524, file: !79, line: 142, type: !33, align: 4)
!4524 = distinct !DILexicalBlock(scope: !4519, file: !79, line: 142, column: 5)
!4525 = !DILocalVariable(name: "fresh21", scope: !4526, file: !79, line: 146, type: !33, align: 4)
!4526 = distinct !DILexicalBlock(scope: !4524, file: !79, line: 146, column: 5)
!4527 = !DILocalVariable(name: "fresh22", scope: !4528, file: !79, line: 150, type: !33, align: 4)
!4528 = distinct !DILexicalBlock(scope: !4526, file: !79, line: 150, column: 5)
!4529 = !DILocalVariable(name: "fresh23", scope: !4530, file: !79, line: 154, type: !33, align: 4)
!4530 = distinct !DILexicalBlock(scope: !4528, file: !79, line: 154, column: 5)
!4531 = !DILocalVariable(name: "fresh24", scope: !4532, file: !79, line: 158, type: !33, align: 4)
!4532 = distinct !DILexicalBlock(scope: !4530, file: !79, line: 158, column: 5)
!4533 = !DILocalVariable(name: "fresh25", scope: !4534, file: !79, line: 162, type: !33, align: 4)
!4534 = distinct !DILexicalBlock(scope: !4532, file: !79, line: 162, column: 5)
!4535 = !DILocalVariable(name: "fresh26", scope: !4536, file: !79, line: 166, type: !33, align: 4)
!4536 = distinct !DILexicalBlock(scope: !4534, file: !79, line: 166, column: 5)
!4537 = !DILocalVariable(name: "wide1", scope: !4538, file: !79, line: 170, type: !63, align: 4)
!4538 = distinct !DILexicalBlock(scope: !4536, file: !79, line: 170, column: 5)
!4539 = !DILocalVariable(name: "fresh27", scope: !4540, file: !79, line: 174, type: !33, align: 4)
!4540 = distinct !DILexicalBlock(scope: !4538, file: !79, line: 174, column: 5)
!4541 = !DILocalVariable(name: "fresh28", scope: !4542, file: !79, line: 177, type: !33, align: 4)
!4542 = distinct !DILexicalBlock(scope: !4540, file: !79, line: 177, column: 5)
!4543 = !DILocalVariable(name: "wide2", scope: !4544, file: !79, line: 180, type: !4545, align: 4)
!4544 = distinct !DILexicalBlock(scope: !4542, file: !79, line: 180, column: 5)
!4545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 96, align: 32, elements: !424)
!4546 = !DILocalVariable(name: "fresh29", scope: !4547, file: !79, line: 184, type: !33, align: 4)
!4547 = distinct !DILexicalBlock(scope: !4544, file: !79, line: 184, column: 5)
!4548 = !DILocalVariable(name: "fresh30", scope: !4549, file: !79, line: 187, type: !33, align: 4)
!4549 = distinct !DILexicalBlock(scope: !4547, file: !79, line: 187, column: 5)
!4550 = !DILocalVariable(name: "fresh31", scope: !4551, file: !79, line: 190, type: !33, align: 4)
!4551 = distinct !DILexicalBlock(scope: !4549, file: !79, line: 190, column: 5)
!4552 = !DILocalVariable(name: "wide3", scope: !4553, file: !79, line: 193, type: !4445, align: 4)
!4553 = distinct !DILexicalBlock(scope: !4551, file: !79, line: 193, column: 5)
!4554 = !DILocalVariable(name: "fresh32", scope: !4555, file: !79, line: 197, type: !33, align: 4)
!4555 = distinct !DILexicalBlock(scope: !4553, file: !79, line: 197, column: 5)
!4556 = !DILocalVariable(name: "fresh33", scope: !4557, file: !79, line: 200, type: !33, align: 4)
!4557 = distinct !DILexicalBlock(scope: !4555, file: !79, line: 200, column: 5)
!4558 = !DILocalVariable(name: "fresh34", scope: !4559, file: !79, line: 204, type: !33, align: 4)
!4559 = distinct !DILexicalBlock(scope: !4557, file: !79, line: 204, column: 5)
!4560 = !DILocalVariable(name: "fresh35", scope: !4561, file: !79, line: 208, type: !33, align: 4)
!4561 = distinct !DILexicalBlock(scope: !4559, file: !79, line: 208, column: 5)
!4562 = !DILocalVariable(name: "fresh36", scope: !4563, file: !79, line: 212, type: !33, align: 4)
!4563 = distinct !DILexicalBlock(scope: !4561, file: !79, line: 212, column: 5)
!4564 = !DILocalVariable(name: "fresh37", scope: !4565, file: !79, line: 216, type: !33, align: 4)
!4565 = distinct !DILexicalBlock(scope: !4563, file: !79, line: 216, column: 5)
!4566 = !DILocalVariable(name: "fresh38", scope: !4567, file: !79, line: 220, type: !33, align: 4)
!4567 = distinct !DILexicalBlock(scope: !4565, file: !79, line: 220, column: 5)
!4568 = !DILocalVariable(name: "fresh39", scope: !4569, file: !79, line: 224, type: !33, align: 4)
!4569 = distinct !DILexicalBlock(scope: !4567, file: !79, line: 224, column: 5)
!4570 = !DILocalVariable(name: "fresh40", scope: !4571, file: !79, line: 228, type: !33, align: 4)
!4571 = distinct !DILexicalBlock(scope: !4569, file: !79, line: 228, column: 5)
!4572 = !DILocalVariable(name: "fresh41", scope: !4573, file: !79, line: 232, type: !33, align: 4)
!4573 = distinct !DILexicalBlock(scope: !4571, file: !79, line: 232, column: 5)
!4574 = !DILocalVariable(name: "fresh42", scope: !4575, file: !79, line: 236, type: !33, align: 4)
!4575 = distinct !DILexicalBlock(scope: !4573, file: !79, line: 236, column: 5)
!4576 = !DILocalVariable(name: "fresh43", scope: !4577, file: !79, line: 240, type: !33, align: 4)
!4577 = distinct !DILexicalBlock(scope: !4575, file: !79, line: 240, column: 5)
!4578 = !DILocalVariable(name: "fresh44", scope: !4579, file: !79, line: 244, type: !33, align: 4)
!4579 = distinct !DILexicalBlock(scope: !4577, file: !79, line: 244, column: 5)
!4580 = !DILocalVariable(name: "fresh45", scope: !4581, file: !79, line: 248, type: !33, align: 4)
!4581 = distinct !DILexicalBlock(scope: !4579, file: !79, line: 248, column: 5)
!4582 = !DILocalVariable(name: "fresh46", scope: !4583, file: !79, line: 252, type: !33, align: 4)
!4583 = distinct !DILexicalBlock(scope: !4581, file: !79, line: 252, column: 5)
!4584 = !DILocalVariable(name: "fresh47", scope: !4585, file: !79, line: 256, type: !33, align: 4)
!4585 = distinct !DILexicalBlock(scope: !4583, file: !79, line: 256, column: 5)
!4586 = !DILocalVariable(name: "fresh48", scope: !4587, file: !79, line: 260, type: !33, align: 4)
!4587 = distinct !DILexicalBlock(scope: !4585, file: !79, line: 260, column: 5)
!4588 = !DILocalVariable(name: "past_end", scope: !4589, file: !79, line: 264, type: !86, align: 8)
!4589 = distinct !DILexicalBlock(scope: !4587, file: !79, line: 264, column: 5)
!4590 = !DILocation(line: 24, column: 5, scope: !4436)
!4591 = !DILocation(line: 25, column: 5, scope: !4436)
!4592 = !DILocation(line: 27, column: 9, scope: !4443)
!4593 = !DILocation(line: 30, column: 9, scope: !4449)
!4594 = !DILocation(line: 32, column: 9, scope: !4454)
!4595 = !DILocation(line: 37, column: 9, scope: !4461)
!4596 = !DILocation(line: 38, column: 9, scope: !4463)
!4597 = !DILocation(line: 58, column: 9, scope: !4474)
!4598 = !DILocation(line: 75, column: 9, scope: !4483)
!4599 = !DILocation(line: 102, column: 9, scope: !4500)
!4600 = !DILocation(line: 122, column: 9, scope: !4511)
!4601 = !DILocation(line: 138, column: 9, scope: !4519)
!4602 = !DILocation(line: 170, column: 9, scope: !4538)
!4603 = !DILocation(line: 180, column: 9, scope: !4544)
!4604 = !DILocation(line: 193, column: 9, scope: !4553)
!4605 = !DILocation(line: 264, column: 9, scope: !4589)
!4606 = !DILocation(line: 27, column: 47, scope: !4436)
!4607 = !DILocation(line: 27, column: 46, scope: !4436)
!4608 = !DILocation(line: 28, column: 5, scope: !4443)
!4609 = !DILocation(line: 30, column: 43, scope: !4443)
!4610 = !DILocation(line: 31, column: 5, scope: !4449)
!4611 = !DILocation(line: 32, column: 41, scope: !4449)
!4612 = !DILocation(line: 32, column: 40, scope: !4449)
!4613 = !DILocation(line: 36, column: 5, scope: !4454)
!4614 = !DILocation(line: 37, column: 34, scope: !4454)
!4615 = !DILocation(line: 38, column: 43, scope: !4461)
!4616 = !DILocation(line: 38, column: 42, scope: !4461)
!4617 = !DILocation(line: 42, column: 18, scope: !4463)
!4618 = !DILocation(line: 42, column: 9, scope: !4466)
!4619 = !DILocation(line: 43, column: 9, scope: !4466)
!4620 = !DILocation(line: 43, column: 5, scope: !4466)
!4621 = !DILocation(line: 44, column: 39, scope: !4466)
!4622 = !DILocation(line: 44, column: 20, scope: !4466)
!4623 = !DILocalVariable(name: "self", arg: 1, scope: !4624, file: !1186, line: 465, type: !1555)
!4624 = distinct !DISubprogram(name: "offset<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17he50ecddcc032164bE", scope: !1187, file: !1186, line: 465, type: !2271, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !4625)
!4625 = !{!4623, !4626}
!4626 = !DILocalVariable(name: "count", arg: 2, scope: !4624, file: !1186, line: 465, type: !313)
!4627 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4628)
!4628 = distinct !DILocation(line: 44, column: 6, scope: !4466)
!4629 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4628)
!4630 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4628)
!4631 = !DILocation(line: 44, column: 6, scope: !4466)
!4632 = !DILocation(line: 44, column: 5, scope: !4466)
!4633 = !DILocation(line: 46, column: 18, scope: !4466)
!4634 = !DILocation(line: 46, column: 9, scope: !4468)
!4635 = !DILocation(line: 47, column: 9, scope: !4468)
!4636 = !DILocation(line: 47, column: 5, scope: !4468)
!4637 = !DILocation(line: 48, column: 39, scope: !4468)
!4638 = !DILocation(line: 48, column: 20, scope: !4468)
!4639 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4640)
!4640 = distinct !DILocation(line: 48, column: 6, scope: !4468)
!4641 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4640)
!4642 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4640)
!4643 = !DILocation(line: 48, column: 6, scope: !4468)
!4644 = !DILocation(line: 48, column: 5, scope: !4468)
!4645 = !DILocation(line: 50, column: 18, scope: !4468)
!4646 = !DILocation(line: 50, column: 9, scope: !4470)
!4647 = !DILocation(line: 51, column: 9, scope: !4470)
!4648 = !DILocation(line: 51, column: 5, scope: !4470)
!4649 = !DILocation(line: 52, column: 39, scope: !4470)
!4650 = !DILocation(line: 52, column: 20, scope: !4470)
!4651 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4652)
!4652 = distinct !DILocation(line: 52, column: 6, scope: !4470)
!4653 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4652)
!4654 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4652)
!4655 = !DILocation(line: 52, column: 6, scope: !4470)
!4656 = !DILocation(line: 52, column: 5, scope: !4470)
!4657 = !DILocation(line: 54, column: 18, scope: !4470)
!4658 = !DILocation(line: 54, column: 9, scope: !4472)
!4659 = !DILocation(line: 55, column: 9, scope: !4472)
!4660 = !DILocation(line: 55, column: 5, scope: !4472)
!4661 = !DILocation(line: 56, column: 39, scope: !4472)
!4662 = !DILocation(line: 56, column: 20, scope: !4472)
!4663 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4664)
!4664 = distinct !DILocation(line: 56, column: 6, scope: !4472)
!4665 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4664)
!4666 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4664)
!4667 = !DILocation(line: 56, column: 6, scope: !4472)
!4668 = !DILocation(line: 56, column: 5, scope: !4472)
!4669 = !DILocation(line: 58, column: 42, scope: !4472)
!4670 = !DILocation(line: 63, column: 18, scope: !4474)
!4671 = !DILocation(line: 63, column: 9, scope: !4477)
!4672 = !DILocation(line: 64, column: 9, scope: !4477)
!4673 = !DILocation(line: 64, column: 5, scope: !4477)
!4674 = !DILocation(line: 65, column: 39, scope: !4477)
!4675 = !DILocation(line: 65, column: 20, scope: !4477)
!4676 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4677)
!4677 = distinct !DILocation(line: 65, column: 6, scope: !4477)
!4678 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4677)
!4679 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4677)
!4680 = !DILocation(line: 65, column: 6, scope: !4477)
!4681 = !DILocation(line: 65, column: 5, scope: !4477)
!4682 = !DILocation(line: 67, column: 18, scope: !4477)
!4683 = !DILocation(line: 67, column: 9, scope: !4479)
!4684 = !DILocation(line: 68, column: 9, scope: !4479)
!4685 = !DILocation(line: 68, column: 5, scope: !4479)
!4686 = !DILocation(line: 69, column: 39, scope: !4479)
!4687 = !DILocation(line: 69, column: 20, scope: !4479)
!4688 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4689)
!4689 = distinct !DILocation(line: 69, column: 6, scope: !4479)
!4690 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4689)
!4691 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4689)
!4692 = !DILocation(line: 69, column: 6, scope: !4479)
!4693 = !DILocation(line: 69, column: 5, scope: !4479)
!4694 = !DILocation(line: 71, column: 18, scope: !4479)
!4695 = !DILocation(line: 71, column: 9, scope: !4481)
!4696 = !DILocation(line: 72, column: 9, scope: !4481)
!4697 = !DILocation(line: 72, column: 5, scope: !4481)
!4698 = !DILocation(line: 73, column: 39, scope: !4481)
!4699 = !DILocation(line: 73, column: 20, scope: !4481)
!4700 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4701)
!4701 = distinct !DILocation(line: 73, column: 6, scope: !4481)
!4702 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4701)
!4703 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4701)
!4704 = !DILocation(line: 73, column: 6, scope: !4481)
!4705 = !DILocation(line: 73, column: 5, scope: !4481)
!4706 = !DILocation(line: 75, column: 43, scope: !4481)
!4707 = !DILocation(line: 76, column: 18, scope: !4483)
!4708 = !DILocation(line: 76, column: 9, scope: !4486)
!4709 = !DILocation(line: 77, column: 9, scope: !4486)
!4710 = !DILocation(line: 77, column: 5, scope: !4486)
!4711 = !DILocation(line: 78, column: 39, scope: !4486)
!4712 = !DILocation(line: 78, column: 20, scope: !4486)
!4713 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4714)
!4714 = distinct !DILocation(line: 78, column: 6, scope: !4486)
!4715 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4714)
!4716 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4714)
!4717 = !DILocation(line: 78, column: 6, scope: !4486)
!4718 = !DILocation(line: 78, column: 5, scope: !4486)
!4719 = !DILocation(line: 80, column: 18, scope: !4486)
!4720 = !DILocation(line: 80, column: 9, scope: !4488)
!4721 = !DILocation(line: 81, column: 9, scope: !4488)
!4722 = !DILocation(line: 81, column: 5, scope: !4488)
!4723 = !DILocation(line: 82, column: 39, scope: !4488)
!4724 = !DILocation(line: 82, column: 20, scope: !4488)
!4725 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4726)
!4726 = distinct !DILocation(line: 82, column: 6, scope: !4488)
!4727 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4726)
!4728 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4726)
!4729 = !DILocation(line: 82, column: 6, scope: !4488)
!4730 = !DILocation(line: 82, column: 5, scope: !4488)
!4731 = !DILocation(line: 84, column: 45, scope: !4488)
!4732 = !DILocation(line: 84, column: 9, scope: !4490)
!4733 = !DILocation(line: 86, column: 18, scope: !4490)
!4734 = !DILocation(line: 86, column: 9, scope: !4492)
!4735 = !DILocation(line: 87, column: 9, scope: !4492)
!4736 = !DILocation(line: 87, column: 5, scope: !4492)
!4737 = !DILocalVariable(name: "self", arg: 1, scope: !4738, file: !1186, line: 465, type: !86)
!4738 = distinct !DISubprogram(name: "offset<i8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h6a3151e9057e60d3E", scope: !1187, file: !1186, line: 465, type: !4739, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1595, retainedNodes: !4741)
!4739 = !DISubroutineType(types: !4740)
!4740 = !{!86, !86, !313}
!4741 = !{!4737, !4742}
!4742 = !DILocalVariable(name: "count", arg: 2, scope: !4738, file: !1186, line: 465, type: !313)
!4743 = !DILocation(line: 465, column: 32, scope: !4738, inlinedAt: !4744)
!4744 = distinct !DILocation(line: 88, column: 40, scope: !4492)
!4745 = !DILocation(line: 465, column: 38, scope: !4738, inlinedAt: !4744)
!4746 = !DILocation(line: 472, column: 18, scope: !4738, inlinedAt: !4744)
!4747 = !DILocation(line: 88, column: 40, scope: !4492)
!4748 = !DILocation(line: 88, column: 39, scope: !4492)
!4749 = !DILocation(line: 88, column: 20, scope: !4492)
!4750 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4751)
!4751 = distinct !DILocation(line: 88, column: 6, scope: !4492)
!4752 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4751)
!4753 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4751)
!4754 = !DILocation(line: 88, column: 6, scope: !4492)
!4755 = !DILocation(line: 88, column: 5, scope: !4492)
!4756 = !DILocation(line: 90, column: 19, scope: !4492)
!4757 = !DILocation(line: 90, column: 9, scope: !4494)
!4758 = !DILocation(line: 91, column: 9, scope: !4494)
!4759 = !DILocation(line: 91, column: 5, scope: !4494)
!4760 = !DILocation(line: 465, column: 32, scope: !4738, inlinedAt: !4761)
!4761 = distinct !DILocation(line: 92, column: 41, scope: !4494)
!4762 = !DILocation(line: 465, column: 38, scope: !4738, inlinedAt: !4761)
!4763 = !DILocation(line: 472, column: 18, scope: !4738, inlinedAt: !4761)
!4764 = !DILocation(line: 92, column: 41, scope: !4494)
!4765 = !DILocation(line: 92, column: 40, scope: !4494)
!4766 = !DILocation(line: 92, column: 20, scope: !4494)
!4767 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4768)
!4768 = distinct !DILocation(line: 92, column: 6, scope: !4494)
!4769 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4768)
!4770 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4768)
!4771 = !DILocation(line: 92, column: 6, scope: !4494)
!4772 = !DILocation(line: 92, column: 5, scope: !4494)
!4773 = !DILocation(line: 94, column: 19, scope: !4494)
!4774 = !DILocation(line: 94, column: 9, scope: !4496)
!4775 = !DILocation(line: 95, column: 9, scope: !4496)
!4776 = !DILocation(line: 95, column: 5, scope: !4496)
!4777 = !DILocation(line: 465, column: 32, scope: !4738, inlinedAt: !4778)
!4778 = distinct !DILocation(line: 96, column: 41, scope: !4496)
!4779 = !DILocation(line: 465, column: 38, scope: !4738, inlinedAt: !4778)
!4780 = !DILocation(line: 472, column: 18, scope: !4738, inlinedAt: !4778)
!4781 = !DILocation(line: 96, column: 41, scope: !4496)
!4782 = !DILocation(line: 96, column: 40, scope: !4496)
!4783 = !DILocation(line: 96, column: 20, scope: !4496)
!4784 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4785)
!4785 = distinct !DILocation(line: 96, column: 6, scope: !4496)
!4786 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4785)
!4787 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4785)
!4788 = !DILocation(line: 96, column: 6, scope: !4496)
!4789 = !DILocation(line: 96, column: 5, scope: !4496)
!4790 = !DILocation(line: 98, column: 19, scope: !4496)
!4791 = !DILocation(line: 98, column: 9, scope: !4498)
!4792 = !DILocation(line: 99, column: 9, scope: !4498)
!4793 = !DILocation(line: 99, column: 5, scope: !4498)
!4794 = !DILocation(line: 465, column: 32, scope: !4738, inlinedAt: !4795)
!4795 = distinct !DILocation(line: 100, column: 41, scope: !4498)
!4796 = !DILocation(line: 465, column: 38, scope: !4738, inlinedAt: !4795)
!4797 = !DILocation(line: 472, column: 18, scope: !4738, inlinedAt: !4795)
!4798 = !DILocation(line: 100, column: 41, scope: !4498)
!4799 = !DILocation(line: 100, column: 40, scope: !4498)
!4800 = !DILocation(line: 100, column: 20, scope: !4498)
!4801 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4802)
!4802 = distinct !DILocation(line: 100, column: 6, scope: !4498)
!4803 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4802)
!4804 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4802)
!4805 = !DILocation(line: 100, column: 6, scope: !4498)
!4806 = !DILocation(line: 100, column: 5, scope: !4498)
!4807 = !DILocation(line: 102, column: 44, scope: !4498)
!4808 = !DILocation(line: 102, column: 43, scope: !4498)
!4809 = !DILocation(line: 106, column: 19, scope: !4500)
!4810 = !DILocation(line: 106, column: 9, scope: !4503)
!4811 = !DILocation(line: 107, column: 9, scope: !4503)
!4812 = !DILocation(line: 107, column: 5, scope: !4503)
!4813 = !DILocation(line: 108, column: 40, scope: !4503)
!4814 = !DILocation(line: 108, column: 20, scope: !4503)
!4815 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4816)
!4816 = distinct !DILocation(line: 108, column: 6, scope: !4503)
!4817 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4816)
!4818 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4816)
!4819 = !DILocation(line: 108, column: 6, scope: !4503)
!4820 = !DILocation(line: 108, column: 5, scope: !4503)
!4821 = !DILocation(line: 110, column: 19, scope: !4503)
!4822 = !DILocation(line: 110, column: 9, scope: !4505)
!4823 = !DILocation(line: 111, column: 9, scope: !4505)
!4824 = !DILocation(line: 111, column: 5, scope: !4505)
!4825 = !DILocation(line: 112, column: 40, scope: !4505)
!4826 = !DILocation(line: 112, column: 20, scope: !4505)
!4827 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4828)
!4828 = distinct !DILocation(line: 112, column: 6, scope: !4505)
!4829 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4828)
!4830 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4828)
!4831 = !DILocation(line: 112, column: 6, scope: !4505)
!4832 = !DILocation(line: 112, column: 5, scope: !4505)
!4833 = !DILocation(line: 114, column: 19, scope: !4505)
!4834 = !DILocation(line: 114, column: 9, scope: !4507)
!4835 = !DILocation(line: 115, column: 9, scope: !4507)
!4836 = !DILocation(line: 115, column: 5, scope: !4507)
!4837 = !DILocation(line: 116, column: 40, scope: !4507)
!4838 = !DILocation(line: 116, column: 20, scope: !4507)
!4839 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4840)
!4840 = distinct !DILocation(line: 116, column: 6, scope: !4507)
!4841 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4840)
!4842 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4840)
!4843 = !DILocation(line: 116, column: 6, scope: !4507)
!4844 = !DILocation(line: 116, column: 5, scope: !4507)
!4845 = !DILocation(line: 118, column: 19, scope: !4507)
!4846 = !DILocation(line: 118, column: 9, scope: !4509)
!4847 = !DILocation(line: 119, column: 9, scope: !4509)
!4848 = !DILocation(line: 119, column: 5, scope: !4509)
!4849 = !DILocation(line: 120, column: 40, scope: !4509)
!4850 = !DILocation(line: 120, column: 20, scope: !4509)
!4851 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4852)
!4852 = distinct !DILocation(line: 120, column: 6, scope: !4509)
!4853 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4852)
!4854 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4852)
!4855 = !DILocation(line: 120, column: 6, scope: !4509)
!4856 = !DILocation(line: 120, column: 5, scope: !4509)
!4857 = !DILocation(line: 122, column: 48, scope: !4509)
!4858 = !DILocation(line: 122, column: 47, scope: !4509)
!4859 = !DILocation(line: 126, column: 19, scope: !4511)
!4860 = !DILocation(line: 126, column: 9, scope: !4513)
!4861 = !DILocation(line: 127, column: 9, scope: !4513)
!4862 = !DILocation(line: 127, column: 5, scope: !4513)
!4863 = !DILocation(line: 128, column: 40, scope: !4513)
!4864 = !DILocation(line: 128, column: 20, scope: !4513)
!4865 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4866)
!4866 = distinct !DILocation(line: 128, column: 6, scope: !4513)
!4867 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4866)
!4868 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4866)
!4869 = !DILocation(line: 128, column: 6, scope: !4513)
!4870 = !DILocation(line: 128, column: 5, scope: !4513)
!4871 = !DILocation(line: 130, column: 19, scope: !4513)
!4872 = !DILocation(line: 130, column: 9, scope: !4515)
!4873 = !DILocation(line: 131, column: 9, scope: !4515)
!4874 = !DILocation(line: 131, column: 5, scope: !4515)
!4875 = !DILocation(line: 132, column: 40, scope: !4515)
!4876 = !DILocation(line: 132, column: 20, scope: !4515)
!4877 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4878)
!4878 = distinct !DILocation(line: 132, column: 6, scope: !4515)
!4879 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4878)
!4880 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4878)
!4881 = !DILocation(line: 132, column: 6, scope: !4515)
!4882 = !DILocation(line: 132, column: 5, scope: !4515)
!4883 = !DILocation(line: 134, column: 19, scope: !4515)
!4884 = !DILocation(line: 134, column: 9, scope: !4517)
!4885 = !DILocation(line: 135, column: 9, scope: !4517)
!4886 = !DILocation(line: 135, column: 5, scope: !4517)
!4887 = !DILocation(line: 136, column: 40, scope: !4517)
!4888 = !DILocation(line: 136, column: 20, scope: !4517)
!4889 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4890)
!4890 = distinct !DILocation(line: 136, column: 6, scope: !4517)
!4891 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4890)
!4892 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4890)
!4893 = !DILocation(line: 136, column: 6, scope: !4517)
!4894 = !DILocation(line: 136, column: 5, scope: !4517)
!4895 = !DILocation(line: 138, column: 50, scope: !4517)
!4896 = !DILocation(line: 138, column: 49, scope: !4517)
!4897 = !DILocation(line: 142, column: 19, scope: !4519)
!4898 = !DILocation(line: 142, column: 9, scope: !4524)
!4899 = !DILocation(line: 143, column: 9, scope: !4524)
!4900 = !DILocation(line: 143, column: 5, scope: !4524)
!4901 = !DILocation(line: 144, column: 40, scope: !4524)
!4902 = !DILocation(line: 144, column: 20, scope: !4524)
!4903 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4904)
!4904 = distinct !DILocation(line: 144, column: 6, scope: !4524)
!4905 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4904)
!4906 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4904)
!4907 = !DILocation(line: 144, column: 6, scope: !4524)
!4908 = !DILocation(line: 144, column: 5, scope: !4524)
!4909 = !DILocation(line: 146, column: 19, scope: !4524)
!4910 = !DILocation(line: 146, column: 9, scope: !4526)
!4911 = !DILocation(line: 147, column: 9, scope: !4526)
!4912 = !DILocation(line: 147, column: 5, scope: !4526)
!4913 = !DILocation(line: 148, column: 40, scope: !4526)
!4914 = !DILocation(line: 148, column: 20, scope: !4526)
!4915 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4916)
!4916 = distinct !DILocation(line: 148, column: 6, scope: !4526)
!4917 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4916)
!4918 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4916)
!4919 = !DILocation(line: 148, column: 6, scope: !4526)
!4920 = !DILocation(line: 148, column: 5, scope: !4526)
!4921 = !DILocation(line: 150, column: 19, scope: !4526)
!4922 = !DILocation(line: 150, column: 9, scope: !4528)
!4923 = !DILocation(line: 151, column: 9, scope: !4528)
!4924 = !DILocation(line: 151, column: 5, scope: !4528)
!4925 = !DILocation(line: 152, column: 40, scope: !4528)
!4926 = !DILocation(line: 152, column: 20, scope: !4528)
!4927 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4928)
!4928 = distinct !DILocation(line: 152, column: 6, scope: !4528)
!4929 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4928)
!4930 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4928)
!4931 = !DILocation(line: 152, column: 6, scope: !4528)
!4932 = !DILocation(line: 152, column: 5, scope: !4528)
!4933 = !DILocation(line: 154, column: 19, scope: !4528)
!4934 = !DILocation(line: 154, column: 9, scope: !4530)
!4935 = !DILocation(line: 155, column: 9, scope: !4530)
!4936 = !DILocation(line: 155, column: 5, scope: !4530)
!4937 = !DILocation(line: 156, column: 40, scope: !4530)
!4938 = !DILocation(line: 156, column: 20, scope: !4530)
!4939 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4940)
!4940 = distinct !DILocation(line: 156, column: 6, scope: !4530)
!4941 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4940)
!4942 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4940)
!4943 = !DILocation(line: 156, column: 6, scope: !4530)
!4944 = !DILocation(line: 156, column: 5, scope: !4530)
!4945 = !DILocation(line: 158, column: 19, scope: !4530)
!4946 = !DILocation(line: 158, column: 9, scope: !4532)
!4947 = !DILocation(line: 159, column: 9, scope: !4532)
!4948 = !DILocation(line: 159, column: 5, scope: !4532)
!4949 = !DILocation(line: 160, column: 40, scope: !4532)
!4950 = !DILocation(line: 160, column: 20, scope: !4532)
!4951 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4952)
!4952 = distinct !DILocation(line: 160, column: 6, scope: !4532)
!4953 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4952)
!4954 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4952)
!4955 = !DILocation(line: 160, column: 6, scope: !4532)
!4956 = !DILocation(line: 160, column: 5, scope: !4532)
!4957 = !DILocation(line: 162, column: 19, scope: !4532)
!4958 = !DILocation(line: 162, column: 9, scope: !4534)
!4959 = !DILocation(line: 163, column: 9, scope: !4534)
!4960 = !DILocation(line: 163, column: 5, scope: !4534)
!4961 = !DILocation(line: 164, column: 40, scope: !4534)
!4962 = !DILocation(line: 164, column: 20, scope: !4534)
!4963 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4964)
!4964 = distinct !DILocation(line: 164, column: 6, scope: !4534)
!4965 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4964)
!4966 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4964)
!4967 = !DILocation(line: 164, column: 6, scope: !4534)
!4968 = !DILocation(line: 164, column: 5, scope: !4534)
!4969 = !DILocation(line: 166, column: 19, scope: !4534)
!4970 = !DILocation(line: 166, column: 9, scope: !4536)
!4971 = !DILocation(line: 167, column: 9, scope: !4536)
!4972 = !DILocation(line: 167, column: 5, scope: !4536)
!4973 = !DILocation(line: 168, column: 40, scope: !4536)
!4974 = !DILocation(line: 168, column: 20, scope: !4536)
!4975 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4976)
!4976 = distinct !DILocation(line: 168, column: 6, scope: !4536)
!4977 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4976)
!4978 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4976)
!4979 = !DILocation(line: 168, column: 6, scope: !4536)
!4980 = !DILocation(line: 168, column: 5, scope: !4536)
!4981 = !DILocation(line: 170, column: 36, scope: !4536)
!4982 = !DILocation(line: 170, column: 35, scope: !4536)
!4983 = !DILocation(line: 174, column: 19, scope: !4538)
!4984 = !DILocation(line: 174, column: 9, scope: !4540)
!4985 = !DILocation(line: 175, column: 9, scope: !4540)
!4986 = !DILocation(line: 175, column: 5, scope: !4540)
!4987 = !DILocation(line: 176, column: 40, scope: !4540)
!4988 = !DILocation(line: 176, column: 20, scope: !4540)
!4989 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !4990)
!4990 = distinct !DILocation(line: 176, column: 6, scope: !4540)
!4991 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !4990)
!4992 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !4990)
!4993 = !DILocation(line: 176, column: 6, scope: !4540)
!4994 = !DILocation(line: 176, column: 5, scope: !4540)
!4995 = !DILocation(line: 177, column: 19, scope: !4540)
!4996 = !DILocation(line: 177, column: 9, scope: !4542)
!4997 = !DILocation(line: 178, column: 9, scope: !4542)
!4998 = !DILocation(line: 178, column: 5, scope: !4542)
!4999 = !DILocation(line: 179, column: 40, scope: !4542)
!5000 = !DILocation(line: 179, column: 20, scope: !4542)
!5001 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5002)
!5002 = distinct !DILocation(line: 179, column: 6, scope: !4542)
!5003 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5002)
!5004 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5002)
!5005 = !DILocation(line: 179, column: 6, scope: !4542)
!5006 = !DILocation(line: 179, column: 5, scope: !4542)
!5007 = !DILocation(line: 180, column: 36, scope: !4542)
!5008 = !DILocation(line: 180, column: 35, scope: !4542)
!5009 = !DILocation(line: 184, column: 19, scope: !4544)
!5010 = !DILocation(line: 184, column: 9, scope: !4547)
!5011 = !DILocation(line: 185, column: 9, scope: !4547)
!5012 = !DILocation(line: 185, column: 5, scope: !4547)
!5013 = !DILocation(line: 186, column: 40, scope: !4547)
!5014 = !DILocation(line: 186, column: 20, scope: !4547)
!5015 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5016)
!5016 = distinct !DILocation(line: 186, column: 6, scope: !4547)
!5017 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5016)
!5018 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5016)
!5019 = !DILocation(line: 186, column: 6, scope: !4547)
!5020 = !DILocation(line: 186, column: 5, scope: !4547)
!5021 = !DILocation(line: 187, column: 19, scope: !4547)
!5022 = !DILocation(line: 187, column: 9, scope: !4549)
!5023 = !DILocation(line: 188, column: 9, scope: !4549)
!5024 = !DILocation(line: 188, column: 5, scope: !4549)
!5025 = !DILocation(line: 189, column: 40, scope: !4549)
!5026 = !DILocation(line: 189, column: 20, scope: !4549)
!5027 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5028)
!5028 = distinct !DILocation(line: 189, column: 6, scope: !4549)
!5029 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5028)
!5030 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5028)
!5031 = !DILocation(line: 189, column: 6, scope: !4549)
!5032 = !DILocation(line: 189, column: 5, scope: !4549)
!5033 = !DILocation(line: 190, column: 19, scope: !4549)
!5034 = !DILocation(line: 190, column: 9, scope: !4551)
!5035 = !DILocation(line: 191, column: 9, scope: !4551)
!5036 = !DILocation(line: 191, column: 5, scope: !4551)
!5037 = !DILocation(line: 192, column: 40, scope: !4551)
!5038 = !DILocation(line: 192, column: 20, scope: !4551)
!5039 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5040)
!5040 = distinct !DILocation(line: 192, column: 6, scope: !4551)
!5041 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5040)
!5042 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5040)
!5043 = !DILocation(line: 192, column: 6, scope: !4551)
!5044 = !DILocation(line: 192, column: 5, scope: !4551)
!5045 = !DILocation(line: 193, column: 36, scope: !4551)
!5046 = !DILocation(line: 193, column: 35, scope: !4551)
!5047 = !DILocation(line: 197, column: 19, scope: !4553)
!5048 = !DILocation(line: 197, column: 9, scope: !4555)
!5049 = !DILocation(line: 198, column: 9, scope: !4555)
!5050 = !DILocation(line: 198, column: 5, scope: !4555)
!5051 = !DILocation(line: 199, column: 40, scope: !4555)
!5052 = !DILocation(line: 199, column: 20, scope: !4555)
!5053 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5054)
!5054 = distinct !DILocation(line: 199, column: 6, scope: !4555)
!5055 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5054)
!5056 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5054)
!5057 = !DILocation(line: 199, column: 6, scope: !4555)
!5058 = !DILocation(line: 199, column: 5, scope: !4555)
!5059 = !DILocation(line: 200, column: 19, scope: !4555)
!5060 = !DILocation(line: 200, column: 9, scope: !4557)
!5061 = !DILocation(line: 201, column: 9, scope: !4557)
!5062 = !DILocation(line: 201, column: 5, scope: !4557)
!5063 = !DILocation(line: 202, column: 40, scope: !4557)
!5064 = !DILocation(line: 202, column: 20, scope: !4557)
!5065 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5066)
!5066 = distinct !DILocation(line: 202, column: 6, scope: !4557)
!5067 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5066)
!5068 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5066)
!5069 = !DILocation(line: 202, column: 6, scope: !4557)
!5070 = !DILocation(line: 202, column: 5, scope: !4557)
!5071 = !DILocation(line: 204, column: 19, scope: !4557)
!5072 = !DILocation(line: 204, column: 9, scope: !4559)
!5073 = !DILocation(line: 205, column: 9, scope: !4559)
!5074 = !DILocation(line: 205, column: 5, scope: !4559)
!5075 = !DILocation(line: 206, column: 40, scope: !4559)
!5076 = !DILocation(line: 206, column: 20, scope: !4559)
!5077 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5078)
!5078 = distinct !DILocation(line: 206, column: 6, scope: !4559)
!5079 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5078)
!5080 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5078)
!5081 = !DILocation(line: 206, column: 6, scope: !4559)
!5082 = !DILocation(line: 206, column: 5, scope: !4559)
!5083 = !DILocation(line: 208, column: 19, scope: !4559)
!5084 = !DILocation(line: 208, column: 9, scope: !4561)
!5085 = !DILocation(line: 209, column: 9, scope: !4561)
!5086 = !DILocation(line: 209, column: 5, scope: !4561)
!5087 = !DILocation(line: 210, column: 40, scope: !4561)
!5088 = !DILocation(line: 210, column: 20, scope: !4561)
!5089 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5090)
!5090 = distinct !DILocation(line: 210, column: 6, scope: !4561)
!5091 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5090)
!5092 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5090)
!5093 = !DILocation(line: 210, column: 6, scope: !4561)
!5094 = !DILocation(line: 210, column: 5, scope: !4561)
!5095 = !DILocation(line: 212, column: 19, scope: !4561)
!5096 = !DILocation(line: 212, column: 9, scope: !4563)
!5097 = !DILocation(line: 213, column: 9, scope: !4563)
!5098 = !DILocation(line: 213, column: 5, scope: !4563)
!5099 = !DILocation(line: 214, column: 40, scope: !4563)
!5100 = !DILocation(line: 214, column: 20, scope: !4563)
!5101 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5102)
!5102 = distinct !DILocation(line: 214, column: 6, scope: !4563)
!5103 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5102)
!5104 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5102)
!5105 = !DILocation(line: 214, column: 6, scope: !4563)
!5106 = !DILocation(line: 214, column: 5, scope: !4563)
!5107 = !DILocation(line: 216, column: 19, scope: !4563)
!5108 = !DILocation(line: 216, column: 9, scope: !4565)
!5109 = !DILocation(line: 217, column: 9, scope: !4565)
!5110 = !DILocation(line: 217, column: 5, scope: !4565)
!5111 = !DILocation(line: 218, column: 40, scope: !4565)
!5112 = !DILocation(line: 218, column: 20, scope: !4565)
!5113 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5114)
!5114 = distinct !DILocation(line: 218, column: 6, scope: !4565)
!5115 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5114)
!5116 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5114)
!5117 = !DILocation(line: 218, column: 6, scope: !4565)
!5118 = !DILocation(line: 218, column: 5, scope: !4565)
!5119 = !DILocation(line: 220, column: 19, scope: !4565)
!5120 = !DILocation(line: 220, column: 9, scope: !4567)
!5121 = !DILocation(line: 221, column: 9, scope: !4567)
!5122 = !DILocation(line: 221, column: 5, scope: !4567)
!5123 = !DILocation(line: 222, column: 40, scope: !4567)
!5124 = !DILocation(line: 222, column: 20, scope: !4567)
!5125 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5126)
!5126 = distinct !DILocation(line: 222, column: 6, scope: !4567)
!5127 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5126)
!5128 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5126)
!5129 = !DILocation(line: 222, column: 6, scope: !4567)
!5130 = !DILocation(line: 222, column: 5, scope: !4567)
!5131 = !DILocation(line: 224, column: 19, scope: !4567)
!5132 = !DILocation(line: 224, column: 9, scope: !4569)
!5133 = !DILocation(line: 225, column: 9, scope: !4569)
!5134 = !DILocation(line: 225, column: 5, scope: !4569)
!5135 = !DILocation(line: 226, column: 40, scope: !4569)
!5136 = !DILocation(line: 226, column: 20, scope: !4569)
!5137 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5138)
!5138 = distinct !DILocation(line: 226, column: 6, scope: !4569)
!5139 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5138)
!5140 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5138)
!5141 = !DILocation(line: 226, column: 6, scope: !4569)
!5142 = !DILocation(line: 226, column: 5, scope: !4569)
!5143 = !DILocation(line: 228, column: 19, scope: !4569)
!5144 = !DILocation(line: 228, column: 9, scope: !4571)
!5145 = !DILocation(line: 229, column: 9, scope: !4571)
!5146 = !DILocation(line: 229, column: 5, scope: !4571)
!5147 = !DILocation(line: 230, column: 40, scope: !4571)
!5148 = !DILocation(line: 230, column: 20, scope: !4571)
!5149 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5150)
!5150 = distinct !DILocation(line: 230, column: 6, scope: !4571)
!5151 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5150)
!5152 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5150)
!5153 = !DILocation(line: 230, column: 6, scope: !4571)
!5154 = !DILocation(line: 230, column: 5, scope: !4571)
!5155 = !DILocation(line: 232, column: 19, scope: !4571)
!5156 = !DILocation(line: 232, column: 9, scope: !4573)
!5157 = !DILocation(line: 233, column: 9, scope: !4573)
!5158 = !DILocation(line: 233, column: 5, scope: !4573)
!5159 = !DILocation(line: 234, column: 41, scope: !4573)
!5160 = !DILocation(line: 465, column: 32, scope: !4738, inlinedAt: !5161)
!5161 = distinct !DILocation(line: 234, column: 41, scope: !4573)
!5162 = !DILocation(line: 465, column: 38, scope: !4738, inlinedAt: !5161)
!5163 = !DILocation(line: 472, column: 18, scope: !4738, inlinedAt: !5161)
!5164 = !DILocation(line: 234, column: 40, scope: !4573)
!5165 = !DILocation(line: 234, column: 20, scope: !4573)
!5166 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5167)
!5167 = distinct !DILocation(line: 234, column: 6, scope: !4573)
!5168 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5167)
!5169 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5167)
!5170 = !DILocation(line: 234, column: 6, scope: !4573)
!5171 = !DILocation(line: 234, column: 5, scope: !4573)
!5172 = !DILocation(line: 236, column: 19, scope: !4573)
!5173 = !DILocation(line: 236, column: 9, scope: !4575)
!5174 = !DILocation(line: 237, column: 9, scope: !4575)
!5175 = !DILocation(line: 237, column: 5, scope: !4575)
!5176 = !DILocation(line: 238, column: 41, scope: !4575)
!5177 = !DILocation(line: 465, column: 32, scope: !4738, inlinedAt: !5178)
!5178 = distinct !DILocation(line: 238, column: 41, scope: !4575)
!5179 = !DILocation(line: 465, column: 38, scope: !4738, inlinedAt: !5178)
!5180 = !DILocation(line: 472, column: 18, scope: !4738, inlinedAt: !5178)
!5181 = !DILocation(line: 238, column: 40, scope: !4575)
!5182 = !DILocation(line: 238, column: 20, scope: !4575)
!5183 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5184)
!5184 = distinct !DILocation(line: 238, column: 6, scope: !4575)
!5185 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5184)
!5186 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5184)
!5187 = !DILocation(line: 238, column: 6, scope: !4575)
!5188 = !DILocation(line: 238, column: 5, scope: !4575)
!5189 = !DILocation(line: 240, column: 19, scope: !4575)
!5190 = !DILocation(line: 240, column: 9, scope: !4577)
!5191 = !DILocation(line: 241, column: 9, scope: !4577)
!5192 = !DILocation(line: 241, column: 5, scope: !4577)
!5193 = !DILocation(line: 242, column: 41, scope: !4577)
!5194 = !DILocation(line: 465, column: 32, scope: !4738, inlinedAt: !5195)
!5195 = distinct !DILocation(line: 242, column: 41, scope: !4577)
!5196 = !DILocation(line: 465, column: 38, scope: !4738, inlinedAt: !5195)
!5197 = !DILocation(line: 472, column: 18, scope: !4738, inlinedAt: !5195)
!5198 = !DILocation(line: 242, column: 40, scope: !4577)
!5199 = !DILocation(line: 242, column: 20, scope: !4577)
!5200 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5201)
!5201 = distinct !DILocation(line: 242, column: 6, scope: !4577)
!5202 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5201)
!5203 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5201)
!5204 = !DILocation(line: 242, column: 6, scope: !4577)
!5205 = !DILocation(line: 242, column: 5, scope: !4577)
!5206 = !DILocation(line: 244, column: 19, scope: !4577)
!5207 = !DILocation(line: 244, column: 9, scope: !4579)
!5208 = !DILocation(line: 245, column: 9, scope: !4579)
!5209 = !DILocation(line: 245, column: 5, scope: !4579)
!5210 = !DILocation(line: 246, column: 41, scope: !4579)
!5211 = !DILocation(line: 465, column: 32, scope: !4738, inlinedAt: !5212)
!5212 = distinct !DILocation(line: 246, column: 41, scope: !4579)
!5213 = !DILocation(line: 465, column: 38, scope: !4738, inlinedAt: !5212)
!5214 = !DILocation(line: 472, column: 18, scope: !4738, inlinedAt: !5212)
!5215 = !DILocation(line: 246, column: 40, scope: !4579)
!5216 = !DILocation(line: 246, column: 20, scope: !4579)
!5217 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5218)
!5218 = distinct !DILocation(line: 246, column: 6, scope: !4579)
!5219 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5218)
!5220 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5218)
!5221 = !DILocation(line: 246, column: 6, scope: !4579)
!5222 = !DILocation(line: 246, column: 5, scope: !4579)
!5223 = !DILocation(line: 248, column: 19, scope: !4579)
!5224 = !DILocation(line: 248, column: 9, scope: !4581)
!5225 = !DILocation(line: 249, column: 9, scope: !4581)
!5226 = !DILocation(line: 249, column: 5, scope: !4581)
!5227 = !DILocation(line: 250, column: 41, scope: !4581)
!5228 = !DILocation(line: 465, column: 32, scope: !4738, inlinedAt: !5229)
!5229 = distinct !DILocation(line: 250, column: 41, scope: !4581)
!5230 = !DILocation(line: 465, column: 38, scope: !4738, inlinedAt: !5229)
!5231 = !DILocation(line: 472, column: 18, scope: !4738, inlinedAt: !5229)
!5232 = !DILocation(line: 250, column: 40, scope: !4581)
!5233 = !DILocation(line: 250, column: 20, scope: !4581)
!5234 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5235)
!5235 = distinct !DILocation(line: 250, column: 6, scope: !4581)
!5236 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5235)
!5237 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5235)
!5238 = !DILocation(line: 250, column: 6, scope: !4581)
!5239 = !DILocation(line: 250, column: 5, scope: !4581)
!5240 = !DILocation(line: 252, column: 19, scope: !4581)
!5241 = !DILocation(line: 252, column: 9, scope: !4583)
!5242 = !DILocation(line: 253, column: 9, scope: !4583)
!5243 = !DILocation(line: 253, column: 5, scope: !4583)
!5244 = !DILocation(line: 254, column: 41, scope: !4583)
!5245 = !DILocation(line: 465, column: 32, scope: !4738, inlinedAt: !5246)
!5246 = distinct !DILocation(line: 254, column: 41, scope: !4583)
!5247 = !DILocation(line: 465, column: 38, scope: !4738, inlinedAt: !5246)
!5248 = !DILocation(line: 472, column: 18, scope: !4738, inlinedAt: !5246)
!5249 = !DILocation(line: 254, column: 40, scope: !4583)
!5250 = !DILocation(line: 254, column: 20, scope: !4583)
!5251 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5252)
!5252 = distinct !DILocation(line: 254, column: 6, scope: !4583)
!5253 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5252)
!5254 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5252)
!5255 = !DILocation(line: 254, column: 6, scope: !4583)
!5256 = !DILocation(line: 254, column: 5, scope: !4583)
!5257 = !DILocation(line: 256, column: 19, scope: !4583)
!5258 = !DILocation(line: 256, column: 9, scope: !4585)
!5259 = !DILocation(line: 257, column: 9, scope: !4585)
!5260 = !DILocation(line: 257, column: 5, scope: !4585)
!5261 = !DILocation(line: 258, column: 41, scope: !4585)
!5262 = !DILocation(line: 465, column: 32, scope: !4738, inlinedAt: !5263)
!5263 = distinct !DILocation(line: 258, column: 41, scope: !4585)
!5264 = !DILocation(line: 465, column: 38, scope: !4738, inlinedAt: !5263)
!5265 = !DILocation(line: 472, column: 18, scope: !4738, inlinedAt: !5263)
!5266 = !DILocation(line: 258, column: 40, scope: !4585)
!5267 = !DILocation(line: 258, column: 20, scope: !4585)
!5268 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5269)
!5269 = distinct !DILocation(line: 258, column: 6, scope: !4585)
!5270 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5269)
!5271 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5269)
!5272 = !DILocation(line: 258, column: 6, scope: !4585)
!5273 = !DILocation(line: 258, column: 5, scope: !4585)
!5274 = !DILocation(line: 260, column: 19, scope: !4585)
!5275 = !DILocation(line: 260, column: 9, scope: !4587)
!5276 = !DILocation(line: 261, column: 9, scope: !4587)
!5277 = !DILocation(line: 261, column: 5, scope: !4587)
!5278 = !DILocation(line: 262, column: 41, scope: !4587)
!5279 = !DILocation(line: 465, column: 32, scope: !4738, inlinedAt: !5280)
!5280 = distinct !DILocation(line: 262, column: 41, scope: !4587)
!5281 = !DILocation(line: 465, column: 38, scope: !4738, inlinedAt: !5280)
!5282 = !DILocation(line: 472, column: 18, scope: !4738, inlinedAt: !5280)
!5283 = !DILocation(line: 262, column: 40, scope: !4587)
!5284 = !DILocation(line: 262, column: 20, scope: !4587)
!5285 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5286)
!5286 = distinct !DILocation(line: 262, column: 6, scope: !4587)
!5287 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5286)
!5288 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5286)
!5289 = !DILocation(line: 262, column: 6, scope: !4587)
!5290 = !DILocation(line: 262, column: 5, scope: !4587)
!5291 = !DILocation(line: 264, column: 53, scope: !4587)
!5292 = !DILocation(line: 267, column: 13, scope: !4587)
!5293 = !DILocation(line: 465, column: 32, scope: !4738, inlinedAt: !5294)
!5294 = distinct !DILocation(line: 264, column: 53, scope: !4587)
!5295 = !DILocation(line: 465, column: 38, scope: !4738, inlinedAt: !5294)
!5296 = !DILocation(line: 472, column: 18, scope: !4738, inlinedAt: !5294)
!5297 = !DILocation(line: 264, column: 47, scope: !4587)
!5298 = !DILocation(line: 269, column: 22, scope: !4589)
!5299 = !DILocation(line: 465, column: 32, scope: !4738, inlinedAt: !5300)
!5300 = distinct !DILocation(line: 269, column: 22, scope: !4589)
!5301 = !DILocation(line: 465, column: 38, scope: !4738, inlinedAt: !5300)
!5302 = !DILocation(line: 472, column: 18, scope: !4738, inlinedAt: !5300)
!5303 = !DILocation(line: 269, column: 5, scope: !4589)
!5304 = !DILocation(line: 271, column: 2, scope: !4436)
!5305 = distinct !DISubprogram(name: "rust_use_arrays", scope: !5307, file: !5306, line: 11, type: !5308, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !5310)
!5306 = !DIFile(filename: "src/variable_arrays.rs", directory: "/home/calvin/git/c2rust/tests/arrays", checksumkind: CSK_MD5, checksum: "6d30eb5dae4bf17996c200e0a34cd035")
!5307 = !DINamespace(name: "variable_arrays", scope: !69)
!5308 = !DISubroutineType(types: !5309)
!5309 = !{null, !33, !33, !1555}
!5310 = !{!5311, !5312, !5313, !5314, !5316, !5318, !5320, !5322, !5324, !5326, !5328}
!5311 = !DILocalVariable(name: "n", arg: 1, scope: !5305, file: !5306, line: 12, type: !33)
!5312 = !DILocalVariable(name: "m", arg: 2, scope: !5305, file: !5306, line: 13, type: !33)
!5313 = !DILocalVariable(name: "a", arg: 3, scope: !5305, file: !5306, line: 14, type: !1555)
!5314 = !DILocalVariable(name: "vla", scope: !5315, file: !5306, line: 16, type: !9, align: 8)
!5315 = distinct !DILexicalBlock(scope: !5305, file: !5306, line: 16, column: 5)
!5316 = !DILocalVariable(name: "vla_0", scope: !5317, file: !5306, line: 17, type: !9, align: 8)
!5317 = distinct !DILexicalBlock(scope: !5315, file: !5306, line: 17, column: 5)
!5318 = !DILocalVariable(name: "counter", scope: !5319, file: !5306, line: 18, type: !33, align: 4)
!5319 = distinct !DILexicalBlock(scope: !5317, file: !5306, line: 18, column: 5)
!5320 = !DILocalVariable(name: "i", scope: !5321, file: !5306, line: 19, type: !33, align: 4)
!5321 = distinct !DILexicalBlock(scope: !5319, file: !5306, line: 19, column: 5)
!5322 = !DILocalVariable(name: "j", scope: !5323, file: !5306, line: 21, type: !33, align: 4)
!5323 = distinct !DILexicalBlock(scope: !5321, file: !5306, line: 21, column: 9)
!5324 = !DILocalVariable(name: "k", scope: !5325, file: !5306, line: 23, type: !33, align: 4)
!5325 = distinct !DILexicalBlock(scope: !5323, file: !5306, line: 23, column: 13)
!5326 = !DILocalVariable(name: "fresh0", scope: !5327, file: !5306, line: 25, type: !33, align: 4)
!5327 = distinct !DILexicalBlock(scope: !5325, file: !5306, line: 25, column: 17)
!5328 = !DILocalVariable(name: "past_end", scope: !5329, file: !5306, line: 40, type: !1555, align: 8)
!5329 = distinct !DILexicalBlock(scope: !5321, file: !5306, line: 40, column: 5)
!5330 = !DILocation(line: 12, column: 5, scope: !5305)
!5331 = !DILocation(line: 13, column: 5, scope: !5305)
!5332 = !DILocation(line: 14, column: 5, scope: !5305)
!5333 = !DILocation(line: 18, column: 9, scope: !5319)
!5334 = !DILocation(line: 19, column: 9, scope: !5321)
!5335 = !DILocation(line: 21, column: 13, scope: !5323)
!5336 = !DILocation(line: 23, column: 17, scope: !5325)
!5337 = !DILocation(line: 16, column: 15, scope: !5305)
!5338 = !DILocation(line: 16, column: 9, scope: !5315)
!5339 = !DILocation(line: 17, column: 17, scope: !5315)
!5340 = !DILocation(line: 17, column: 9, scope: !5317)
!5341 = !DILocation(line: 18, column: 40, scope: !5317)
!5342 = !DILocation(line: 19, column: 34, scope: !5319)
!5343 = !DILocation(line: 20, column: 5, scope: !5321)
!5344 = !DILocation(line: 20, column: 11, scope: !5321)
!5345 = !DILocation(line: 41, column: 49, scope: !5321)
!5346 = !DILocation(line: 21, column: 38, scope: !5321)
!5347 = !DILocation(line: 22, column: 9, scope: !5323)
!5348 = !DILocation(line: 22, column: 15, scope: !5323)
!5349 = !DILocation(line: 22, column: 19, scope: !5323)
!5350 = !DILocation(line: 37, column: 9, scope: !5323)
!5351 = !DILocation(line: 23, column: 42, scope: !5323)
!5352 = !DILocation(line: 24, column: 13, scope: !5325)
!5353 = !DILocation(line: 24, column: 19, scope: !5325)
!5354 = !DILocation(line: 34, column: 13, scope: !5325)
!5355 = !DILocation(line: 25, column: 30, scope: !5325)
!5356 = !DILocation(line: 25, column: 21, scope: !5327)
!5357 = !DILocation(line: 26, column: 27, scope: !5327)
!5358 = !DILocation(line: 26, column: 17, scope: !5327)
!5359 = !DILocation(line: 28, column: 29, scope: !5327)
!5360 = !DILocation(line: 28, column: 42, scope: !5327)
!5361 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5362)
!5362 = distinct !DILocation(line: 27, column: 18, scope: !5327)
!5363 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5362)
!5364 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5362)
!5365 = !DILocation(line: 27, column: 18, scope: !5327)
!5366 = !DILocation(line: 29, column: 29, scope: !5327)
!5367 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5368)
!5368 = distinct !DILocation(line: 27, column: 18, scope: !5327)
!5369 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5368)
!5370 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5368)
!5371 = !DILocation(line: 30, column: 29, scope: !5327)
!5372 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5373)
!5373 = distinct !DILocation(line: 27, column: 18, scope: !5327)
!5374 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5373)
!5375 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5373)
!5376 = !DILocation(line: 27, column: 17, scope: !5327)
!5377 = !DILocation(line: 31, column: 17, scope: !5327)
!5378 = !DILocation(line: 41, column: 17, scope: !5321)
!5379 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5380)
!5380 = distinct !DILocation(line: 40, column: 52, scope: !5321)
!5381 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5380)
!5382 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5380)
!5383 = !DILocation(line: 40, column: 52, scope: !5321)
!5384 = !DILocation(line: 42, column: 17, scope: !5321)
!5385 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5386)
!5386 = distinct !DILocation(line: 40, column: 52, scope: !5321)
!5387 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5386)
!5388 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5386)
!5389 = !DILocation(line: 43, column: 17, scope: !5321)
!5390 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5391)
!5391 = distinct !DILocation(line: 40, column: 52, scope: !5321)
!5392 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5391)
!5393 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5391)
!5394 = !DILocation(line: 40, column: 46, scope: !5321)
!5395 = !DILocation(line: 40, column: 9, scope: !5329)
!5396 = !DILocation(line: 44, column: 2, scope: !5305)
!5397 = distinct !DISubprogram(name: "rust_use_arrays2", scope: !5307, file: !5306, line: 46, type: !5308, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !5398)
!5398 = !{!5399, !5400, !5401, !5402, !5404, !5406, !5408, !5410, !5412, !5414}
!5399 = !DILocalVariable(name: "n", arg: 1, scope: !5397, file: !5306, line: 47, type: !33)
!5400 = !DILocalVariable(name: "m", arg: 2, scope: !5397, file: !5306, line: 48, type: !33)
!5401 = !DILocalVariable(name: "a", arg: 3, scope: !5397, file: !5306, line: 49, type: !1555)
!5402 = !DILocalVariable(name: "vla", scope: !5403, file: !5306, line: 51, type: !9, align: 8)
!5403 = distinct !DILexicalBlock(scope: !5397, file: !5306, line: 51, column: 5)
!5404 = !DILocalVariable(name: "vla_0", scope: !5405, file: !5306, line: 52, type: !9, align: 8)
!5405 = distinct !DILexicalBlock(scope: !5403, file: !5306, line: 52, column: 5)
!5406 = !DILocalVariable(name: "counter", scope: !5407, file: !5306, line: 53, type: !33, align: 4)
!5407 = distinct !DILexicalBlock(scope: !5405, file: !5306, line: 53, column: 5)
!5408 = !DILocalVariable(name: "i", scope: !5409, file: !5306, line: 54, type: !33, align: 4)
!5409 = distinct !DILexicalBlock(scope: !5407, file: !5306, line: 54, column: 5)
!5410 = !DILocalVariable(name: "j", scope: !5411, file: !5306, line: 56, type: !33, align: 4)
!5411 = distinct !DILexicalBlock(scope: !5409, file: !5306, line: 56, column: 9)
!5412 = !DILocalVariable(name: "k", scope: !5413, file: !5306, line: 58, type: !33, align: 4)
!5413 = distinct !DILexicalBlock(scope: !5411, file: !5306, line: 58, column: 13)
!5414 = !DILocalVariable(name: "fresh1", scope: !5415, file: !5306, line: 60, type: !33, align: 4)
!5415 = distinct !DILexicalBlock(scope: !5413, file: !5306, line: 60, column: 17)
!5416 = !DILocation(line: 47, column: 5, scope: !5397)
!5417 = !DILocation(line: 48, column: 5, scope: !5397)
!5418 = !DILocation(line: 49, column: 5, scope: !5397)
!5419 = !DILocation(line: 53, column: 9, scope: !5407)
!5420 = !DILocation(line: 54, column: 9, scope: !5409)
!5421 = !DILocation(line: 56, column: 13, scope: !5411)
!5422 = !DILocation(line: 58, column: 17, scope: !5413)
!5423 = !DILocation(line: 51, column: 15, scope: !5397)
!5424 = !DILocation(line: 51, column: 9, scope: !5403)
!5425 = !DILocation(line: 52, column: 17, scope: !5403)
!5426 = !DILocation(line: 52, column: 9, scope: !5405)
!5427 = !DILocation(line: 53, column: 40, scope: !5405)
!5428 = !DILocation(line: 54, column: 34, scope: !5407)
!5429 = !DILocation(line: 55, column: 5, scope: !5409)
!5430 = !DILocation(line: 55, column: 11, scope: !5409)
!5431 = !DILocation(line: 75, column: 2, scope: !5397)
!5432 = !DILocation(line: 56, column: 38, scope: !5409)
!5433 = !DILocation(line: 57, column: 9, scope: !5411)
!5434 = !DILocation(line: 57, column: 15, scope: !5411)
!5435 = !DILocation(line: 57, column: 19, scope: !5411)
!5436 = !DILocation(line: 72, column: 9, scope: !5411)
!5437 = !DILocation(line: 58, column: 42, scope: !5411)
!5438 = !DILocation(line: 59, column: 13, scope: !5413)
!5439 = !DILocation(line: 59, column: 19, scope: !5413)
!5440 = !DILocation(line: 69, column: 13, scope: !5413)
!5441 = !DILocation(line: 60, column: 30, scope: !5413)
!5442 = !DILocation(line: 60, column: 21, scope: !5415)
!5443 = !DILocation(line: 61, column: 27, scope: !5415)
!5444 = !DILocation(line: 61, column: 17, scope: !5415)
!5445 = !DILocation(line: 63, column: 29, scope: !5415)
!5446 = !DILocation(line: 63, column: 42, scope: !5415)
!5447 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5448)
!5448 = distinct !DILocation(line: 62, column: 18, scope: !5415)
!5449 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5448)
!5450 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5448)
!5451 = !DILocation(line: 62, column: 18, scope: !5415)
!5452 = !DILocation(line: 64, column: 29, scope: !5415)
!5453 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5454)
!5454 = distinct !DILocation(line: 62, column: 18, scope: !5415)
!5455 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5454)
!5456 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5454)
!5457 = !DILocation(line: 65, column: 29, scope: !5415)
!5458 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5459)
!5459 = distinct !DILocation(line: 62, column: 18, scope: !5415)
!5460 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5459)
!5461 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5459)
!5462 = !DILocation(line: 62, column: 17, scope: !5415)
!5463 = !DILocation(line: 66, column: 17, scope: !5415)
!5464 = distinct !DISubprogram(name: "rust_variable_arrays", scope: !5307, file: !5306, line: 77, type: !5465, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !5467)
!5465 = !DISubroutineType(types: !5466)
!5466 = !{null, !1555}
!5467 = !{!5468, !5469, !5472, !5474, !5476, !5478, !5480, !5482, !5484, !5486, !5488, !5490, !5492}
!5468 = !DILocalVariable(name: "buf", arg: 1, scope: !5464, file: !5306, line: 77, type: !1555)
!5469 = !DILocalVariable(name: "grid", scope: !5470, file: !5306, line: 78, type: !5471, align: 4)
!5470 = distinct !DILexicalBlock(scope: !5464, file: !5306, line: 78, column: 5)
!5471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1569, size: 2560, align: 32, elements: !72)
!5472 = !DILocalVariable(name: "counter", scope: !5473, file: !5306, line: 89, type: !33, align: 4)
!5473 = distinct !DILexicalBlock(scope: !5470, file: !5306, line: 89, column: 5)
!5474 = !DILocalVariable(name: "i", scope: !5475, file: !5306, line: 90, type: !33, align: 4)
!5475 = distinct !DILexicalBlock(scope: !5473, file: !5306, line: 90, column: 5)
!5476 = !DILocalVariable(name: "j", scope: !5477, file: !5306, line: 92, type: !33, align: 4)
!5477 = distinct !DILexicalBlock(scope: !5475, file: !5306, line: 92, column: 9)
!5478 = !DILocalVariable(name: "k", scope: !5479, file: !5306, line: 94, type: !33, align: 4)
!5479 = distinct !DILexicalBlock(scope: !5477, file: !5306, line: 94, column: 13)
!5480 = !DILocalVariable(name: "fresh2", scope: !5481, file: !5306, line: 96, type: !33, align: 4)
!5481 = distinct !DILexicalBlock(scope: !5479, file: !5306, line: 96, column: 17)
!5482 = !DILocalVariable(name: "n", scope: !5483, file: !5306, line: 108, type: !33, align: 4)
!5483 = distinct !DILexicalBlock(scope: !5475, file: !5306, line: 108, column: 5)
!5484 = !DILocalVariable(name: "vla", scope: !5485, file: !5306, line: 109, type: !9, align: 8)
!5485 = distinct !DILexicalBlock(scope: !5483, file: !5306, line: 109, column: 5)
!5486 = !DILocalVariable(name: "var1", scope: !5487, file: !5306, line: 110, type: !1086, align: 8)
!5487 = distinct !DILexicalBlock(scope: !5485, file: !5306, line: 110, column: 5)
!5488 = !DILocalVariable(name: "i_0", scope: !5489, file: !5306, line: 111, type: !33, align: 4)
!5489 = distinct !DILexicalBlock(scope: !5487, file: !5306, line: 111, column: 5)
!5490 = !DILocalVariable(name: "fresh3", scope: !5491, file: !5306, line: 114, type: !33, align: 4)
!5491 = distinct !DILexicalBlock(scope: !5489, file: !5306, line: 114, column: 9)
!5492 = !DILocalVariable(name: "past_end", scope: !5493, file: !5306, line: 120, type: !1555, align: 8)
!5493 = distinct !DILexicalBlock(scope: !5489, file: !5306, line: 120, column: 5)
!5494 = !DILocation(line: 77, column: 47, scope: !5464)
!5495 = !DILocation(line: 78, column: 9, scope: !5470)
!5496 = !DILocation(line: 89, column: 9, scope: !5473)
!5497 = !DILocation(line: 90, column: 9, scope: !5475)
!5498 = !DILocation(line: 92, column: 13, scope: !5477)
!5499 = !DILocation(line: 94, column: 17, scope: !5479)
!5500 = !DILocation(line: 110, column: 9, scope: !5487)
!5501 = !DILocation(line: 111, column: 9, scope: !5489)
!5502 = !DILocation(line: 120, column: 9, scope: !5493)
!5503 = !DILocation(line: 78, column: 54, scope: !5464)
!5504 = !DILocation(line: 78, column: 53, scope: !5464)
!5505 = !DILocation(line: 78, column: 52, scope: !5464)
!5506 = !DILocation(line: 82, column: 9, scope: !5470)
!5507 = !DILocation(line: 79, column: 5, scope: !5470)
!5508 = !DILocation(line: 87, column: 9, scope: !5470)
!5509 = !DILocalVariable(name: "self", arg: 1, scope: !5510, file: !1186, line: 465, type: !1568)
!5510 = distinct !DISubprogram(name: "offset<[[i32; 5]; 4]>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h6fd4dd859c65bf89E", scope: !1187, file: !1186, line: 465, type: !5511, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1580, retainedNodes: !5513)
!5511 = !DISubroutineType(types: !5512)
!5512 = !{!1568, !1568, !313}
!5513 = !{!5509, !5514}
!5514 = !DILocalVariable(name: "count", arg: 2, scope: !5510, file: !1186, line: 465, type: !313)
!5515 = !DILocation(line: 465, column: 32, scope: !5510, inlinedAt: !5516)
!5516 = distinct !DILocation(line: 87, column: 9, scope: !5470)
!5517 = !DILocation(line: 465, column: 38, scope: !5510, inlinedAt: !5516)
!5518 = !DILocation(line: 472, column: 18, scope: !5510, inlinedAt: !5516)
!5519 = !DILocation(line: 84, column: 5, scope: !5470)
!5520 = !DILocation(line: 89, column: 40, scope: !5470)
!5521 = !DILocation(line: 90, column: 34, scope: !5473)
!5522 = !DILocation(line: 91, column: 5, scope: !5475)
!5523 = !DILocation(line: 91, column: 11, scope: !5475)
!5524 = !DILocation(line: 108, column: 34, scope: !5475)
!5525 = !DILocation(line: 108, column: 9, scope: !5483)
!5526 = !DILocation(line: 109, column: 15, scope: !5483)
!5527 = !DILocation(line: 109, column: 9, scope: !5485)
!5528 = !DILocation(line: 110, column: 42, scope: !5485)
!5529 = !DILocation(line: 92, column: 38, scope: !5475)
!5530 = !DILocation(line: 93, column: 9, scope: !5477)
!5531 = !DILocation(line: 93, column: 15, scope: !5477)
!5532 = !DILocation(line: 105, column: 9, scope: !5477)
!5533 = !DILocation(line: 94, column: 42, scope: !5477)
!5534 = !DILocation(line: 95, column: 13, scope: !5479)
!5535 = !DILocation(line: 95, column: 19, scope: !5479)
!5536 = !DILocation(line: 102, column: 13, scope: !5479)
!5537 = !DILocation(line: 96, column: 30, scope: !5479)
!5538 = !DILocation(line: 96, column: 21, scope: !5481)
!5539 = !DILocation(line: 97, column: 27, scope: !5481)
!5540 = !DILocation(line: 97, column: 17, scope: !5481)
!5541 = !DILocation(line: 98, column: 53, scope: !5481)
!5542 = !DILocation(line: 98, column: 48, scope: !5481)
!5543 = !DILocation(line: 98, column: 65, scope: !5481)
!5544 = !DILocation(line: 98, column: 77, scope: !5481)
!5545 = !DILocation(line: 98, column: 29, scope: !5481)
!5546 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5547)
!5547 = distinct !DILocation(line: 98, column: 18, scope: !5481)
!5548 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5547)
!5549 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5547)
!5550 = !DILocation(line: 98, column: 18, scope: !5481)
!5551 = !DILocation(line: 98, column: 17, scope: !5481)
!5552 = !DILocation(line: 99, column: 17, scope: !5481)
!5553 = !DILocation(line: 111, column: 36, scope: !5487)
!5554 = !DILocation(line: 112, column: 5, scope: !5489)
!5555 = !DILocation(line: 112, column: 11, scope: !5489)
!5556 = !DILocation(line: 120, column: 56, scope: !5489)
!5557 = !DILocation(line: 113, column: 74, scope: !5489)
!5558 = !DILocation(line: 113, column: 51, scope: !5489)
!5559 = !DILocation(line: 113, column: 10, scope: !5489)
!5560 = !DILocation(line: 128, column: 1, scope: !5485)
!5561 = !DILocation(line: 113, column: 35, scope: !5489)
!5562 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5563)
!5563 = distinct !DILocation(line: 113, column: 10, scope: !5489)
!5564 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5563)
!5565 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5563)
!5566 = !DILocation(line: 473, column: 6, scope: !4624, inlinedAt: !5563)
!5567 = !DILocation(line: 113, column: 9, scope: !5489)
!5568 = !DILocation(line: 114, column: 22, scope: !5489)
!5569 = !DILocation(line: 114, column: 13, scope: !5491)
!5570 = !DILocation(line: 115, column: 19, scope: !5491)
!5571 = !DILocation(line: 115, column: 9, scope: !5491)
!5572 = !DILocation(line: 116, column: 41, scope: !5491)
!5573 = !DILocation(line: 116, column: 66, scope: !5491)
!5574 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5575)
!5575 = distinct !DILocation(line: 116, column: 41, scope: !5491)
!5576 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5575)
!5577 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5575)
!5578 = !DILocation(line: 473, column: 6, scope: !4624, inlinedAt: !5575)
!5579 = !DILocation(line: 116, column: 40, scope: !5491)
!5580 = !DILocation(line: 116, column: 21, scope: !5491)
!5581 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5582)
!5582 = distinct !DILocation(line: 116, column: 10, scope: !5491)
!5583 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5582)
!5584 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5582)
!5585 = !DILocation(line: 473, column: 6, scope: !4624, inlinedAt: !5582)
!5586 = !DILocation(line: 116, column: 9, scope: !5491)
!5587 = !DILocation(line: 117, column: 9, scope: !5491)
!5588 = !DILocation(line: 465, column: 32, scope: !5510, inlinedAt: !5589)
!5589 = distinct !DILocation(line: 120, column: 56, scope: !5489)
!5590 = !DILocation(line: 465, column: 38, scope: !5510, inlinedAt: !5589)
!5591 = !DILocation(line: 472, column: 18, scope: !5510, inlinedAt: !5589)
!5592 = !DILocation(line: 473, column: 6, scope: !5510, inlinedAt: !5589)
!5593 = !DILocation(line: 120, column: 54, scope: !5489)
!5594 = !DILocalVariable(name: "self", arg: 1, scope: !5595, file: !1186, line: 465, type: !1603)
!5595 = distinct !DISubprogram(name: "offset<[i32; 5]>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h2aa1b9136554792cE", scope: !1187, file: !1186, line: 465, type: !5596, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !1611, retainedNodes: !5598)
!5596 = !DISubroutineType(types: !5597)
!5597 = !{!1603, !1603, !313}
!5598 = !{!5594, !5599}
!5599 = !DILocalVariable(name: "count", arg: 2, scope: !5595, file: !1186, line: 465, type: !313)
!5600 = !DILocation(line: 465, column: 32, scope: !5595, inlinedAt: !5601)
!5601 = distinct !DILocation(line: 120, column: 54, scope: !5489)
!5602 = !DILocation(line: 465, column: 38, scope: !5595, inlinedAt: !5601)
!5603 = !DILocation(line: 472, column: 18, scope: !5595, inlinedAt: !5601)
!5604 = !DILocation(line: 473, column: 6, scope: !5595, inlinedAt: !5601)
!5605 = !DILocation(line: 120, column: 52, scope: !5489)
!5606 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5607)
!5607 = distinct !DILocation(line: 120, column: 52, scope: !5489)
!5608 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5607)
!5609 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5607)
!5610 = !DILocation(line: 473, column: 6, scope: !4624, inlinedAt: !5607)
!5611 = !DILocation(line: 120, column: 46, scope: !5489)
!5612 = !DILocation(line: 127, column: 22, scope: !5493)
!5613 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5614)
!5614 = distinct !DILocation(line: 127, column: 22, scope: !5493)
!5615 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5614)
!5616 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5614)
!5617 = !DILocation(line: 473, column: 6, scope: !4624, inlinedAt: !5614)
!5618 = !DILocation(line: 127, column: 5, scope: !5493)
!5619 = !DILocation(line: 77, column: 1, scope: !5464)
!5620 = !DILocation(line: 128, column: 2, scope: !5464)
!5621 = distinct !DISubprogram(name: "rust_alloca_arrays", scope: !5307, file: !5306, line: 130, type: !5465, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !5622)
!5622 = !{!5623, !5624, !5626, !5628, !5630, !5632, !5634, !5636, !5638, !5640, !5642, !5644, !5646}
!5623 = !DILocalVariable(name: "buf", arg: 1, scope: !5621, file: !5306, line: 130, type: !1555)
!5624 = !DILocalVariable(name: "grid", scope: !5625, file: !5306, line: 131, type: !5471, align: 4)
!5625 = distinct !DILexicalBlock(scope: !5621, file: !5306, line: 131, column: 5)
!5626 = !DILocalVariable(name: "counter", scope: !5627, file: !5306, line: 142, type: !33, align: 4)
!5627 = distinct !DILexicalBlock(scope: !5625, file: !5306, line: 142, column: 5)
!5628 = !DILocalVariable(name: "i", scope: !5629, file: !5306, line: 143, type: !33, align: 4)
!5629 = distinct !DILexicalBlock(scope: !5627, file: !5306, line: 143, column: 5)
!5630 = !DILocalVariable(name: "j", scope: !5631, file: !5306, line: 145, type: !33, align: 4)
!5631 = distinct !DILexicalBlock(scope: !5629, file: !5306, line: 145, column: 9)
!5632 = !DILocalVariable(name: "k", scope: !5633, file: !5306, line: 147, type: !33, align: 4)
!5633 = distinct !DILexicalBlock(scope: !5631, file: !5306, line: 147, column: 13)
!5634 = !DILocalVariable(name: "fresh4", scope: !5635, file: !5306, line: 149, type: !33, align: 4)
!5635 = distinct !DILexicalBlock(scope: !5633, file: !5306, line: 149, column: 17)
!5636 = !DILocalVariable(name: "n", scope: !5637, file: !5306, line: 161, type: !33, align: 4)
!5637 = distinct !DILexicalBlock(scope: !5629, file: !5306, line: 161, column: 5)
!5638 = !DILocalVariable(name: "fresh5", scope: !5639, file: !5306, line: 162, type: !1086, align: 8)
!5639 = distinct !DILexicalBlock(scope: !5637, file: !5306, line: 162, column: 5)
!5640 = !DILocalVariable(name: "var1", scope: !5641, file: !5306, line: 167, type: !1555, align: 8)
!5641 = distinct !DILexicalBlock(scope: !5639, file: !5306, line: 167, column: 5)
!5642 = !DILocalVariable(name: "i_0", scope: !5643, file: !5306, line: 168, type: !33, align: 4)
!5643 = distinct !DILexicalBlock(scope: !5641, file: !5306, line: 168, column: 5)
!5644 = !DILocalVariable(name: "fresh6", scope: !5645, file: !5306, line: 171, type: !33, align: 4)
!5645 = distinct !DILexicalBlock(scope: !5643, file: !5306, line: 171, column: 9)
!5646 = !DILocalVariable(name: "past_end", scope: !5647, file: !5306, line: 177, type: !1555, align: 8)
!5647 = distinct !DILexicalBlock(scope: !5643, file: !5306, line: 177, column: 5)
!5648 = !DILocation(line: 130, column: 45, scope: !5621)
!5649 = !DILocation(line: 131, column: 9, scope: !5625)
!5650 = !DILocation(line: 142, column: 9, scope: !5627)
!5651 = !DILocation(line: 143, column: 9, scope: !5629)
!5652 = !DILocation(line: 145, column: 13, scope: !5631)
!5653 = !DILocation(line: 147, column: 17, scope: !5633)
!5654 = !DILocation(line: 162, column: 9, scope: !5639)
!5655 = !DILocation(line: 168, column: 9, scope: !5643)
!5656 = !DILocation(line: 177, column: 9, scope: !5647)
!5657 = !DILocation(line: 131, column: 54, scope: !5621)
!5658 = !DILocation(line: 131, column: 53, scope: !5621)
!5659 = !DILocation(line: 131, column: 52, scope: !5621)
!5660 = !DILocation(line: 135, column: 9, scope: !5625)
!5661 = !DILocation(line: 132, column: 5, scope: !5625)
!5662 = !DILocation(line: 140, column: 9, scope: !5625)
!5663 = !DILocation(line: 465, column: 32, scope: !5510, inlinedAt: !5664)
!5664 = distinct !DILocation(line: 140, column: 9, scope: !5625)
!5665 = !DILocation(line: 465, column: 38, scope: !5510, inlinedAt: !5664)
!5666 = !DILocation(line: 472, column: 18, scope: !5510, inlinedAt: !5664)
!5667 = !DILocation(line: 137, column: 5, scope: !5625)
!5668 = !DILocation(line: 142, column: 40, scope: !5625)
!5669 = !DILocation(line: 143, column: 34, scope: !5627)
!5670 = !DILocation(line: 144, column: 5, scope: !5629)
!5671 = !DILocation(line: 144, column: 11, scope: !5629)
!5672 = !DILocation(line: 161, column: 34, scope: !5629)
!5673 = !DILocation(line: 161, column: 9, scope: !5637)
!5674 = !DILocation(line: 164, column: 10, scope: !5637)
!5675 = !DILocation(line: 145, column: 38, scope: !5629)
!5676 = !DILocation(line: 146, column: 9, scope: !5631)
!5677 = !DILocation(line: 146, column: 15, scope: !5631)
!5678 = !DILocation(line: 158, column: 9, scope: !5631)
!5679 = !DILocation(line: 147, column: 42, scope: !5631)
!5680 = !DILocation(line: 148, column: 13, scope: !5633)
!5681 = !DILocation(line: 148, column: 19, scope: !5633)
!5682 = !DILocation(line: 155, column: 13, scope: !5633)
!5683 = !DILocation(line: 149, column: 30, scope: !5633)
!5684 = !DILocation(line: 149, column: 21, scope: !5635)
!5685 = !DILocation(line: 150, column: 27, scope: !5635)
!5686 = !DILocation(line: 150, column: 17, scope: !5635)
!5687 = !DILocation(line: 151, column: 53, scope: !5635)
!5688 = !DILocation(line: 151, column: 48, scope: !5635)
!5689 = !DILocation(line: 151, column: 65, scope: !5635)
!5690 = !DILocation(line: 151, column: 77, scope: !5635)
!5691 = !DILocation(line: 151, column: 29, scope: !5635)
!5692 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5693)
!5693 = distinct !DILocation(line: 151, column: 18, scope: !5635)
!5694 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5693)
!5695 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5693)
!5696 = !DILocation(line: 151, column: 18, scope: !5635)
!5697 = !DILocation(line: 151, column: 17, scope: !5635)
!5698 = !DILocation(line: 152, column: 17, scope: !5635)
!5699 = !DILocalVariable(name: "self", arg: 1, scope: !5700, file: !560, line: 1254, type: !99)
!5700 = distinct !DISubprogram(name: "wrapping_mul", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$12wrapping_mul17hb98dec13d905c3dcE", scope: !5701, file: !560, line: 1254, type: !5702, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !5704)
!5701 = !DINamespace(name: "{impl#9}", scope: !562)
!5702 = !DISubroutineType(types: !5703)
!5703 = !{!99, !99, !99}
!5704 = !{!5699, !5705}
!5705 = !DILocalVariable(name: "rhs", arg: 2, scope: !5700, file: !560, line: 1254, type: !99)
!5706 = !DILocation(line: 1254, column: 35, scope: !5700, inlinedAt: !5707)
!5707 = distinct !DILocation(line: 164, column: 9, scope: !5637)
!5708 = !DILocation(line: 1254, column: 41, scope: !5700, inlinedAt: !5707)
!5709 = !DILocation(line: 164, column: 9, scope: !5637)
!5710 = !DILocation(line: 162, column: 22, scope: !5637)
!5711 = !DILocation(line: 167, column: 42, scope: !5639)
!5712 = !DILocation(line: 185, column: 1, scope: !5637)
!5713 = !DILocation(line: 167, column: 9, scope: !5641)
!5714 = !DILocation(line: 168, column: 36, scope: !5641)
!5715 = !DILocation(line: 169, column: 5, scope: !5643)
!5716 = !DILocation(line: 169, column: 11, scope: !5643)
!5717 = !DILocation(line: 177, column: 56, scope: !5643)
!5718 = !DILocation(line: 170, column: 61, scope: !5643)
!5719 = !DILocation(line: 170, column: 38, scope: !5643)
!5720 = !DILocation(line: 170, column: 22, scope: !5643)
!5721 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5722)
!5722 = distinct !DILocation(line: 170, column: 10, scope: !5643)
!5723 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5722)
!5724 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5722)
!5725 = !DILocation(line: 473, column: 6, scope: !4624, inlinedAt: !5722)
!5726 = !DILocation(line: 170, column: 9, scope: !5643)
!5727 = !DILocation(line: 171, column: 22, scope: !5643)
!5728 = !DILocation(line: 171, column: 13, scope: !5645)
!5729 = !DILocation(line: 172, column: 19, scope: !5645)
!5730 = !DILocation(line: 172, column: 9, scope: !5645)
!5731 = !DILocation(line: 173, column: 53, scope: !5645)
!5732 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5733)
!5733 = distinct !DILocation(line: 173, column: 41, scope: !5645)
!5734 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5733)
!5735 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5733)
!5736 = !DILocation(line: 473, column: 6, scope: !4624, inlinedAt: !5733)
!5737 = !DILocation(line: 173, column: 40, scope: !5645)
!5738 = !DILocation(line: 173, column: 21, scope: !5645)
!5739 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5740)
!5740 = distinct !DILocation(line: 173, column: 10, scope: !5645)
!5741 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5740)
!5742 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5740)
!5743 = !DILocation(line: 473, column: 6, scope: !4624, inlinedAt: !5740)
!5744 = !DILocation(line: 173, column: 9, scope: !5645)
!5745 = !DILocation(line: 174, column: 9, scope: !5645)
!5746 = !DILocation(line: 465, column: 32, scope: !5510, inlinedAt: !5747)
!5747 = distinct !DILocation(line: 177, column: 56, scope: !5643)
!5748 = !DILocation(line: 465, column: 38, scope: !5510, inlinedAt: !5747)
!5749 = !DILocation(line: 472, column: 18, scope: !5510, inlinedAt: !5747)
!5750 = !DILocation(line: 473, column: 6, scope: !5510, inlinedAt: !5747)
!5751 = !DILocation(line: 177, column: 54, scope: !5643)
!5752 = !DILocation(line: 465, column: 32, scope: !5595, inlinedAt: !5753)
!5753 = distinct !DILocation(line: 177, column: 54, scope: !5643)
!5754 = !DILocation(line: 465, column: 38, scope: !5595, inlinedAt: !5753)
!5755 = !DILocation(line: 472, column: 18, scope: !5595, inlinedAt: !5753)
!5756 = !DILocation(line: 473, column: 6, scope: !5595, inlinedAt: !5753)
!5757 = !DILocation(line: 177, column: 52, scope: !5643)
!5758 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5759)
!5759 = distinct !DILocation(line: 177, column: 52, scope: !5643)
!5760 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5759)
!5761 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5759)
!5762 = !DILocation(line: 473, column: 6, scope: !4624, inlinedAt: !5759)
!5763 = !DILocation(line: 177, column: 46, scope: !5643)
!5764 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5765)
!5765 = distinct !DILocation(line: 184, column: 22, scope: !5647)
!5766 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5765)
!5767 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5765)
!5768 = !DILocation(line: 473, column: 6, scope: !4624, inlinedAt: !5765)
!5769 = !DILocation(line: 184, column: 5, scope: !5647)
!5770 = !DILocation(line: 130, column: 1, scope: !5621)
!5771 = !DILocation(line: 185, column: 2, scope: !5621)
!5772 = distinct !DISubprogram(name: "rust_check_some_ints", scope: !5774, file: !5773, line: 25, type: !5775, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !23)
!5773 = !DIFile(filename: "src/incomplete_arrays.rs", directory: "/home/calvin/git/c2rust/tests/arrays", checksumkind: CSK_MD5, checksum: "625178dbe5e451839aa9071df2b9dd44")
!5774 = !DINamespace(name: "incomplete_arrays", scope: !69)
!5775 = !DISubroutineType(types: !5776)
!5776 = !{!43}
!5777 = !DILocation(line: 26, column: 13, scope: !5772)
!5778 = !DILocalVariable(name: "self", arg: 1, scope: !5779, file: !1186, line: 465, type: !1541)
!5779 = distinct !DISubprogram(name: "offset<u32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h2b958d030e90f1f9E", scope: !1187, file: !1186, line: 465, type: !5780, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !441, retainedNodes: !5782)
!5780 = !DISubroutineType(types: !5781)
!5781 = !{!1541, !1541, !313}
!5782 = !{!5778, !5783}
!5783 = !DILocalVariable(name: "count", arg: 2, scope: !5779, file: !1186, line: 465, type: !313)
!5784 = !DILocation(line: 465, column: 32, scope: !5779, inlinedAt: !5785)
!5785 = distinct !DILocation(line: 26, column: 13, scope: !5772)
!5786 = !DILocation(line: 465, column: 38, scope: !5779, inlinedAt: !5785)
!5787 = !DILocation(line: 472, column: 18, scope: !5779, inlinedAt: !5785)
!5788 = !DILocation(line: 26, column: 12, scope: !5772)
!5789 = !DILocation(line: 28, column: 13, scope: !5772)
!5790 = !DILocation(line: 465, column: 32, scope: !5779, inlinedAt: !5791)
!5791 = distinct !DILocation(line: 28, column: 13, scope: !5772)
!5792 = !DILocation(line: 465, column: 38, scope: !5779, inlinedAt: !5791)
!5793 = !DILocation(line: 472, column: 18, scope: !5779, inlinedAt: !5791)
!5794 = !DILocation(line: 28, column: 12, scope: !5772)
!5795 = !DILocation(line: 30, column: 13, scope: !5772)
!5796 = !DILocation(line: 465, column: 32, scope: !5779, inlinedAt: !5797)
!5797 = distinct !DILocation(line: 30, column: 13, scope: !5772)
!5798 = !DILocation(line: 465, column: 38, scope: !5779, inlinedAt: !5797)
!5799 = !DILocation(line: 472, column: 18, scope: !5779, inlinedAt: !5797)
!5800 = !DILocation(line: 30, column: 12, scope: !5772)
!5801 = !DILocation(line: 32, column: 13, scope: !5772)
!5802 = !DILocation(line: 465, column: 32, scope: !5779, inlinedAt: !5803)
!5803 = distinct !DILocation(line: 32, column: 13, scope: !5772)
!5804 = !DILocation(line: 465, column: 38, scope: !5779, inlinedAt: !5803)
!5805 = !DILocation(line: 472, column: 18, scope: !5779, inlinedAt: !5803)
!5806 = !DILocation(line: 32, column: 12, scope: !5772)
!5807 = !DILocation(line: 34, column: 2, scope: !5772)
!5808 = distinct !DISubprogram(name: "rust_new_sized_array", scope: !5774, file: !5773, line: 36, type: !5809, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !5819)
!5809 = !DISubroutineType(types: !5810)
!5810 = !{!5811, !99}
!5811 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut array_tests::incomplete_arrays::sized_array", baseType: !5812, size: 64, align: 64, dwarfAddressSpace: 0)
!5812 = !DICompositeType(tag: DW_TAG_structure_type, name: "sized_array", scope: !5774, file: !2, size: 64, align: 64, elements: !5813, templateParams: !23, identifier: "d3648f149788a3f51442bda6b962d772")
!5813 = !{!5814, !5815}
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !5812, file: !2, baseType: !99, size: 64, align: 64)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !5812, file: !2, baseType: !5816, align: 32, offset: 64)
!5816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, align: 32, elements: !5817)
!5817 = !{!5818}
!5818 = !DISubrange(count: 0, lowerBound: 0)
!5819 = !{!5820, !5821, !5823}
!5820 = !DILocalVariable(name: "n", arg: 1, scope: !5808, file: !5773, line: 36, type: !99)
!5821 = !DILocalVariable(name: "sz", scope: !5822, file: !5773, line: 37, type: !99, align: 8)
!5822 = distinct !DILexicalBlock(scope: !5808, file: !5773, line: 37, column: 5)
!5823 = !DILocalVariable(name: "res", scope: !5824, file: !5773, line: 44, type: !5811, align: 8)
!5824 = distinct !DILexicalBlock(scope: !5822, file: !5773, line: 44, column: 5)
!5825 = !DILocation(line: 36, column: 47, scope: !5808)
!5826 = !DILocation(line: 37, column: 23, scope: !5808)
!5827 = !DILocation(line: 41, column: 21, scope: !5808)
!5828 = !DILocation(line: 1254, column: 35, scope: !5700, inlinedAt: !5829)
!5829 = distinct !DILocation(line: 39, column: 13, scope: !5808)
!5830 = !DILocation(line: 1254, column: 41, scope: !5700, inlinedAt: !5829)
!5831 = !DILocation(line: 1255, column: 13, scope: !5700, inlinedAt: !5829)
!5832 = !DILocation(line: 39, column: 13, scope: !5808)
!5833 = !DILocalVariable(name: "self", arg: 1, scope: !5834, file: !560, line: 1189, type: !99)
!5834 = distinct !DISubprogram(name: "wrapping_add", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$12wrapping_add17h90c3da8f79f58448E", scope: !5701, file: !560, line: 1189, type: !5702, scopeLine: 1189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !5835)
!5835 = !{!5833, !5836}
!5836 = !DILocalVariable(name: "rhs", arg: 2, scope: !5834, file: !560, line: 1189, type: !99)
!5837 = !DILocation(line: 1189, column: 35, scope: !5834, inlinedAt: !5838)
!5838 = distinct !DILocation(line: 37, column: 22, scope: !5808)
!5839 = !DILocation(line: 1189, column: 41, scope: !5834, inlinedAt: !5838)
!5840 = !DILocation(line: 1190, column: 13, scope: !5834, inlinedAt: !5838)
!5841 = !DILocation(line: 37, column: 22, scope: !5808)
!5842 = !DILocation(line: 37, column: 9, scope: !5822)
!5843 = !DILocation(line: 44, column: 37, scope: !5822)
!5844 = !DILocation(line: 44, column: 9, scope: !5824)
!5845 = !DILocation(line: 45, column: 5, scope: !5824)
!5846 = !DILocation(line: 47, column: 2, scope: !5808)
!5847 = distinct !DISubprogram(name: "rust_sized_array_sum_last_n", scope: !5774, file: !5773, line: 49, type: !5848, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !5850)
!5848 = !DISubroutineType(types: !5849)
!5849 = !{!53, !5811, !99}
!5850 = !{!5851, !5852, !5853, !5855}
!5851 = !DILocalVariable(name: "a", arg: 1, scope: !5847, file: !5773, line: 50, type: !5811)
!5852 = !DILocalVariable(name: "n", arg: 2, scope: !5847, file: !5773, line: 51, type: !99)
!5853 = !DILocalVariable(name: "acc", scope: !5854, file: !5773, line: 53, type: !53, align: 4)
!5854 = distinct !DILexicalBlock(scope: !5847, file: !5773, line: 53, column: 5)
!5855 = !DILocalVariable(name: "i", scope: !5856, file: !5773, line: 54, type: !99, align: 8)
!5856 = distinct !DILexicalBlock(scope: !5854, file: !5773, line: 54, column: 5)
!5857 = !DILocation(line: 53, column: 9, scope: !5854)
!5858 = !DILocation(line: 50, column: 5, scope: !5847)
!5859 = !DILocation(line: 51, column: 5, scope: !5847)
!5860 = !DILocation(line: 54, column: 9, scope: !5856)
!5861 = !DILocation(line: 53, column: 37, scope: !5847)
!5862 = !DILocation(line: 54, column: 25, scope: !5854)
!5863 = !DILocalVariable(name: "self", arg: 1, scope: !5864, file: !560, line: 1231, type: !99)
!5864 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$12wrapping_sub17h2fcb60c8cae33e6aE", scope: !5701, file: !560, line: 1231, type: !5702, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !5865)
!5865 = !{!5863, !5866}
!5866 = !DILocalVariable(name: "rhs", arg: 2, scope: !5864, file: !560, line: 1231, type: !99)
!5867 = !DILocation(line: 1231, column: 35, scope: !5864, inlinedAt: !5868)
!5868 = distinct !DILocation(line: 54, column: 25, scope: !5854)
!5869 = !DILocation(line: 1231, column: 41, scope: !5864, inlinedAt: !5868)
!5870 = !DILocation(line: 1232, column: 13, scope: !5864, inlinedAt: !5868)
!5871 = !DILocation(line: 55, column: 11, scope: !5856)
!5872 = !DILocation(line: 55, column: 15, scope: !5856)
!5873 = !DILocation(line: 61, column: 2, scope: !5847)
!5874 = !DILocation(line: 56, column: 15, scope: !5856)
!5875 = !DILocation(line: 56, column: 33, scope: !5856)
!5876 = !DILocation(line: 56, column: 65, scope: !5856)
!5877 = !DILocation(line: 465, column: 32, scope: !5779, inlinedAt: !5878)
!5878 = distinct !DILocation(line: 56, column: 33, scope: !5856)
!5879 = !DILocation(line: 465, column: 38, scope: !5779, inlinedAt: !5878)
!5880 = !DILocation(line: 472, column: 18, scope: !5779, inlinedAt: !5878)
!5881 = !DILocation(line: 56, column: 32, scope: !5856)
!5882 = !DILocalVariable(name: "self", arg: 1, scope: !5883, file: !560, line: 1189, type: !53)
!5883 = distinct !DISubprogram(name: "wrapping_add", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$12wrapping_add17h0fbd9558745a3ef4E", scope: !5884, file: !560, line: 1189, type: !5885, scopeLine: 1189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !5887)
!5884 = !DINamespace(name: "{impl#8}", scope: !562)
!5885 = !DISubroutineType(types: !5886)
!5886 = !{!53, !53, !53}
!5887 = !{!5882, !5888}
!5888 = !DILocalVariable(name: "rhs", arg: 2, scope: !5883, file: !560, line: 1189, type: !53)
!5889 = !DILocation(line: 1189, column: 35, scope: !5883, inlinedAt: !5890)
!5890 = distinct !DILocation(line: 56, column: 15, scope: !5856)
!5891 = !DILocation(line: 1189, column: 41, scope: !5883, inlinedAt: !5890)
!5892 = !DILocation(line: 1190, column: 13, scope: !5883, inlinedAt: !5890)
!5893 = !DILocation(line: 56, column: 9, scope: !5856)
!5894 = !DILocation(line: 57, column: 13, scope: !5856)
!5895 = !DILocation(line: 1189, column: 35, scope: !5834, inlinedAt: !5896)
!5896 = distinct !DILocation(line: 57, column: 13, scope: !5856)
!5897 = !DILocation(line: 1189, column: 41, scope: !5834, inlinedAt: !5896)
!5898 = !DILocation(line: 1190, column: 13, scope: !5834, inlinedAt: !5896)
!5899 = !DILocation(line: 57, column: 9, scope: !5856)
!5900 = !DILocation(line: 55, column: 5, scope: !5856)
!5901 = distinct !DISubprogram(name: "rust_test_sized_array", scope: !5774, file: !5773, line: 63, type: !5902, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !5904)
!5902 = !DISubroutineType(types: !5903)
!5903 = !{!53}
!5904 = !{!5905, !5907, !5909}
!5905 = !DILocalVariable(name: "a", scope: !5906, file: !5773, line: 64, type: !5811, align: 8)
!5906 = distinct !DILexicalBlock(scope: !5901, file: !5773, line: 64, column: 5)
!5907 = !DILocalVariable(name: "i", scope: !5908, file: !5773, line: 65, type: !33, align: 4)
!5908 = distinct !DILexicalBlock(scope: !5906, file: !5773, line: 65, column: 5)
!5909 = !DILocalVariable(name: "sum", scope: !5910, file: !5773, line: 71, type: !53, align: 4)
!5910 = distinct !DILexicalBlock(scope: !5908, file: !5773, line: 71, column: 5)
!5911 = !DILocation(line: 65, column: 9, scope: !5908)
!5912 = !DILocation(line: 64, column: 35, scope: !5901)
!5913 = !DILocation(line: 64, column: 9, scope: !5906)
!5914 = !DILocation(line: 65, column: 34, scope: !5906)
!5915 = !DILocation(line: 66, column: 5, scope: !5908)
!5916 = !DILocation(line: 66, column: 11, scope: !5908)
!5917 = !DILocation(line: 71, column: 33, scope: !5908)
!5918 = !DILocation(line: 71, column: 9, scope: !5910)
!5919 = !DILocation(line: 67, column: 56, scope: !5908)
!5920 = !DILocation(line: 67, column: 10, scope: !5908)
!5921 = !DILocation(line: 67, column: 42, scope: !5908)
!5922 = !DILocation(line: 465, column: 32, scope: !5779, inlinedAt: !5923)
!5923 = distinct !DILocation(line: 67, column: 10, scope: !5908)
!5924 = !DILocation(line: 465, column: 38, scope: !5779, inlinedAt: !5923)
!5925 = !DILocation(line: 472, column: 18, scope: !5779, inlinedAt: !5923)
!5926 = !DILocation(line: 67, column: 9, scope: !5908)
!5927 = !DILocation(line: 68, column: 9, scope: !5908)
!5928 = !DILocation(line: 75, column: 10, scope: !5910)
!5929 = !DILocation(line: 75, column: 5, scope: !5910)
!5930 = !DILocation(line: 77, column: 2, scope: !5901)
!5931 = distinct !DISubprogram(name: "rust_entry2", scope: !5774, file: !5773, line: 79, type: !4437, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !5932)
!5932 = !{!5933, !5934, !5935, !5937, !5941, !5943, !5945, !5948}
!5933 = !DILocalVariable(name: "buffer_size", arg: 1, scope: !5931, file: !5773, line: 80, type: !53)
!5934 = !DILocalVariable(name: "buffer", arg: 2, scope: !5931, file: !5773, line: 81, type: !1555)
!5935 = !DILocalVariable(name: "arr", scope: !5936, file: !5773, line: 83, type: !4545, align: 4)
!5936 = distinct !DILexicalBlock(scope: !5931, file: !5773, line: 83, column: 5)
!5937 = !DILocalVariable(name: "p_arr", scope: !5938, file: !5773, line: 88, type: !5939, align: 8)
!5938 = distinct !DILexicalBlock(scope: !5936, file: !5773, line: 88, column: 5)
!5939 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut [i32; 0]", baseType: !5940, size: 64, align: 64, dwarfAddressSpace: 0)
!5940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, align: 32, elements: !5817)
!5941 = !DILocalVariable(name: "x", scope: !5942, file: !5773, line: 90, type: !33, align: 4)
!5942 = distinct !DILexicalBlock(scope: !5938, file: !5773, line: 90, column: 5)
!5943 = !DILocalVariable(name: "carr", scope: !5944, file: !5773, line: 94, type: !4545, align: 4)
!5944 = distinct !DILexicalBlock(scope: !5942, file: !5773, line: 94, column: 5)
!5945 = !DILocalVariable(name: "p_carr", scope: !5946, file: !5773, line: 99, type: !5947, align: 8)
!5946 = distinct !DILexicalBlock(scope: !5944, file: !5773, line: 99, column: 5)
!5947 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const [i32; 0]", baseType: !5940, size: 64, align: 64, dwarfAddressSpace: 0)
!5948 = !DILocalVariable(name: "cx", scope: !5949, file: !5773, line: 101, type: !33, align: 4)
!5949 = distinct !DILexicalBlock(scope: !5946, file: !5773, line: 101, column: 5)
!5950 = !DILocation(line: 80, column: 5, scope: !5931)
!5951 = !DILocation(line: 81, column: 5, scope: !5931)
!5952 = !DILocation(line: 83, column: 9, scope: !5936)
!5953 = !DILocation(line: 94, column: 9, scope: !5944)
!5954 = !DILocation(line: 83, column: 41, scope: !5931)
!5955 = !DILocation(line: 88, column: 48, scope: !5936)
!5956 = !DILocation(line: 88, column: 9, scope: !5938)
!5957 = !DILocation(line: 90, column: 35, scope: !5938)
!5958 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5959)
!5959 = distinct !DILocation(line: 90, column: 35, scope: !5938)
!5960 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5959)
!5961 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5959)
!5962 = !DILocation(line: 90, column: 34, scope: !5938)
!5963 = !DILocation(line: 90, column: 9, scope: !5942)
!5964 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5965)
!5965 = distinct !DILocation(line: 93, column: 6, scope: !5942)
!5966 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5965)
!5967 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5965)
!5968 = !DILocation(line: 93, column: 6, scope: !5942)
!5969 = !DILocation(line: 93, column: 5, scope: !5942)
!5970 = !DILocation(line: 94, column: 38, scope: !5942)
!5971 = !DILocation(line: 99, column: 51, scope: !5944)
!5972 = !DILocation(line: 99, column: 9, scope: !5946)
!5973 = !DILocation(line: 101, column: 36, scope: !5946)
!5974 = !DILocalVariable(name: "self", arg: 1, scope: !5975, file: !1648, line: 453, type: !535)
!5975 = distinct !DISubprogram(name: "offset<i32>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h9f8b2166a4edd168E", scope: !1649, file: !1648, line: 453, type: !1717, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !461, retainedNodes: !5976)
!5976 = !{!5974, !5977}
!5977 = !DILocalVariable(name: "count", arg: 2, scope: !5975, file: !1648, line: 453, type: !313)
!5978 = !DILocation(line: 453, column: 32, scope: !5975, inlinedAt: !5979)
!5979 = distinct !DILocation(line: 101, column: 36, scope: !5946)
!5980 = !DILocation(line: 453, column: 38, scope: !5975, inlinedAt: !5979)
!5981 = !DILocation(line: 458, column: 18, scope: !5975, inlinedAt: !5979)
!5982 = !DILocation(line: 101, column: 35, scope: !5946)
!5983 = !DILocation(line: 101, column: 9, scope: !5949)
!5984 = !DILocation(line: 465, column: 32, scope: !4624, inlinedAt: !5985)
!5985 = distinct !DILocation(line: 104, column: 6, scope: !5949)
!5986 = !DILocation(line: 465, column: 38, scope: !4624, inlinedAt: !5985)
!5987 = !DILocation(line: 472, column: 18, scope: !4624, inlinedAt: !5985)
!5988 = !DILocation(line: 104, column: 6, scope: !5949)
!5989 = !DILocation(line: 104, column: 5, scope: !5949)
!5990 = !DILocation(line: 105, column: 2, scope: !5931)
!5991 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11array_tests11test_arrays22test_sized_array_impls28_$u7b$$u7b$closure$u7d$$u7d$17h6b18364a9b840387E", scope: !992, file: !70, line: 32, type: !5992, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !5995)
!5992 = !DISubroutineType(types: !5993)
!5993 = !{null, !5994}
!5994 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&array_tests::test_arrays::test_sized_array_impls::{closure_env#0}", baseType: !991, size: 64, align: 64, dwarfAddressSpace: 0)
!5995 = !{!5996}
!5996 = !DILocalVariable(arg: 1, scope: !5991, file: !70, line: 32, type: !5994)
!5997 = !DILocation(line: 32, column: 1, scope: !5991)
!5998 = !DILocation(line: 36, column: 2, scope: !5991)
!5999 = distinct !DISubprogram(name: "test_sized_array_impls", scope: !68, file: !70, line: 32, type: !21, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !6000)
!6000 = !{!6001, !6004, !6005}
!6001 = !DILocalVariable(name: "left_val", scope: !6002, file: !70, line: 34, type: !52, align: 8)
!6002 = !DILexicalBlockFile(scope: !6003, file: !70, discriminator: 0)
!6003 = distinct !DILexicalBlock(scope: !5999, file: !2003, line: 39, column: 13)
!6004 = !DILocalVariable(name: "right_val", scope: !6002, file: !70, line: 34, type: !52, align: 8)
!6005 = !DILocalVariable(name: "kind", scope: !6006, file: !70, line: 34, type: !181, align: 1)
!6006 = !DILexicalBlockFile(scope: !6007, file: !70, discriminator: 0)
!6007 = distinct !DILexicalBlock(scope: !6003, file: !2003, line: 41, column: 21)
!6008 = !DILocation(line: 34, column: 9, scope: !6006)
!6009 = !DILocation(line: 34, column: 20, scope: !5999)
!6010 = !DILocation(line: 34, column: 45, scope: !5999)
!6011 = !DILocation(line: 34, column: 9, scope: !5999)
!6012 = !DILocation(line: 34, column: 9, scope: !6002)
!6013 = !DILocation(line: 36, column: 2, scope: !5999)
!6014 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11array_tests11test_arrays28test_global_incomplete_array28_$u7b$$u7b$closure$u7d$$u7d$17h7f805434574bb4ecE", scope: !1021, file: !70, line: 40, type: !6015, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !6018)
!6015 = !DISubroutineType(types: !6016)
!6016 = !{null, !6017}
!6017 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&array_tests::test_arrays::test_global_incomplete_array::{closure_env#0}", baseType: !1020, size: 64, align: 64, dwarfAddressSpace: 0)
!6018 = !{!6019}
!6019 = !DILocalVariable(arg: 1, scope: !6014, file: !70, line: 40, type: !6017)
!6020 = !DILocation(line: 40, column: 1, scope: !6014)
!6021 = !DILocation(line: 44, column: 2, scope: !6014)
!6022 = distinct !DISubprogram(name: "test_global_incomplete_array", scope: !68, file: !70, line: 40, type: !21, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !6023)
!6023 = !{!6024, !6027, !6028}
!6024 = !DILocalVariable(name: "left_val", scope: !6025, file: !70, line: 42, type: !42, align: 8)
!6025 = !DILexicalBlockFile(scope: !6026, file: !70, discriminator: 0)
!6026 = distinct !DILexicalBlock(scope: !6022, file: !2003, line: 39, column: 13)
!6027 = !DILocalVariable(name: "right_val", scope: !6025, file: !70, line: 42, type: !42, align: 8)
!6028 = !DILocalVariable(name: "kind", scope: !6029, file: !70, line: 42, type: !181, align: 1)
!6029 = !DILexicalBlockFile(scope: !6030, file: !70, discriminator: 0)
!6030 = distinct !DILexicalBlock(scope: !6026, file: !2003, line: 41, column: 21)
!6031 = !DILocation(line: 42, column: 9, scope: !6029)
!6032 = !DILocation(line: 42, column: 20, scope: !6022)
!6033 = !DILocation(line: 42, column: 44, scope: !6022)
!6034 = !DILocation(line: 42, column: 9, scope: !6022)
!6035 = !DILocation(line: 42, column: 9, scope: !6025)
!6036 = !DILocation(line: 44, column: 2, scope: !6022)
!6037 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11array_tests11test_arrays11test_buffer28_$u7b$$u7b$closure$u7d$$u7d$17hac85ceb01446f1c5E", scope: !981, file: !70, line: 48, type: !6038, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !6041)
!6038 = !DISubroutineType(types: !6039)
!6039 = !{null, !6040}
!6040 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&array_tests::test_arrays::test_buffer::{closure_env#0}", baseType: !980, size: 64, align: 64, dwarfAddressSpace: 0)
!6041 = !{!6042}
!6042 = !DILocalVariable(arg: 1, scope: !6037, file: !70, line: 48, type: !6040)
!6043 = !DILocation(line: 48, column: 1, scope: !6037)
!6044 = !DILocation(line: 66, column: 2, scope: !6037)
!6045 = distinct !DISubprogram(name: "test_buffer", scope: !68, file: !70, line: 48, type: !21, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !6046)
!6046 = !{!6047, !6052, !6054, !6056, !6058, !6060, !6063, !6064, !6067, !6070, !6071}
!6047 = !DILocalVariable(name: "buffer", scope: !6048, file: !70, line: 49, type: !6049, align: 4)
!6048 = distinct !DILexicalBlock(scope: !6045, file: !70, line: 49, column: 5)
!6049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 1568, align: 32, elements: !6050)
!6050 = !{!6051}
!6051 = !DISubrange(count: 49, lowerBound: 0)
!6052 = !DILocalVariable(name: "rust_buffer", scope: !6053, file: !70, line: 50, type: !6049, align: 4)
!6053 = distinct !DILexicalBlock(scope: !6048, file: !70, line: 50, column: 5)
!6054 = !DILocalVariable(name: "expected_buffer", scope: !6055, file: !70, line: 51, type: !6049, align: 4)
!6055 = distinct !DILexicalBlock(scope: !6053, file: !70, line: 51, column: 5)
!6056 = !DILocalVariable(name: "iter", scope: !6057, file: !70, line: 62, type: !1229, align: 8)
!6057 = distinct !DILexicalBlock(scope: !6055, file: !70, line: 62, column: 5)
!6058 = !DILocalVariable(name: "index", scope: !6059, file: !70, line: 62, type: !9, align: 8)
!6059 = distinct !DILexicalBlock(scope: !6057, file: !70, line: 62, column: 33)
!6060 = !DILocalVariable(name: "left_val", scope: !6061, file: !70, line: 63, type: !32, align: 8)
!6061 = !DILexicalBlockFile(scope: !6062, file: !70, discriminator: 0)
!6062 = distinct !DILexicalBlock(scope: !6059, file: !2003, line: 39, column: 13)
!6063 = !DILocalVariable(name: "right_val", scope: !6061, file: !70, line: 63, type: !32, align: 8)
!6064 = !DILocalVariable(name: "kind", scope: !6065, file: !70, line: 63, type: !181, align: 1)
!6065 = !DILexicalBlockFile(scope: !6066, file: !70, discriminator: 0)
!6066 = distinct !DILexicalBlock(scope: !6062, file: !2003, line: 41, column: 21)
!6067 = !DILocalVariable(name: "left_val", scope: !6068, file: !70, line: 64, type: !32, align: 8)
!6068 = !DILexicalBlockFile(scope: !6069, file: !70, discriminator: 0)
!6069 = distinct !DILexicalBlock(scope: !6059, file: !2003, line: 52, column: 13)
!6070 = !DILocalVariable(name: "right_val", scope: !6068, file: !70, line: 64, type: !32, align: 8)
!6071 = !DILocalVariable(name: "kind", scope: !6072, file: !70, line: 64, type: !181, align: 1)
!6072 = !DILexicalBlockFile(scope: !6073, file: !70, discriminator: 0)
!6073 = distinct !DILexicalBlock(scope: !6069, file: !2003, line: 54, column: 21)
!6074 = !DILocation(line: 49, column: 9, scope: !6048)
!6075 = !DILocation(line: 50, column: 9, scope: !6053)
!6076 = !DILocation(line: 51, column: 9, scope: !6055)
!6077 = !DILocation(line: 62, column: 18, scope: !6057)
!6078 = !DILocation(line: 62, column: 9, scope: !6059)
!6079 = !DILocation(line: 63, column: 9, scope: !6065)
!6080 = !DILocation(line: 64, column: 9, scope: !6072)
!6081 = !DILocation(line: 49, column: 22, scope: !6045)
!6082 = !DILocation(line: 50, column: 27, scope: !6048)
!6083 = !DILocation(line: 51, column: 27, scope: !6053)
!6084 = !DILocation(line: 58, column: 35, scope: !6055)
!6085 = !DILocation(line: 58, column: 9, scope: !6055)
!6086 = !DILocation(line: 59, column: 40, scope: !6055)
!6087 = !DILocation(line: 59, column: 9, scope: !6055)
!6088 = !DILocation(line: 62, column: 18, scope: !6055)
!6089 = !DILocation(line: 62, column: 5, scope: !6057)
!6090 = !DILocation(line: 66, column: 2, scope: !6045)
!6091 = !DILocation(line: 62, column: 9, scope: !6057)
!6092 = !DILocation(line: 63, column: 27, scope: !6059)
!6093 = !DILocation(line: 63, column: 20, scope: !6059)
!6094 = !DILocation(line: 63, column: 9, scope: !6059)
!6095 = !DILocation(line: 63, column: 47, scope: !6059)
!6096 = !DILocation(line: 63, column: 35, scope: !6059)
!6097 = !DILocation(line: 63, column: 9, scope: !6061)
!6098 = !DILocation(line: 64, column: 27, scope: !6059)
!6099 = !DILocation(line: 64, column: 20, scope: !6059)
!6100 = !DILocation(line: 64, column: 9, scope: !6059)
!6101 = !DILocation(line: 64, column: 51, scope: !6059)
!6102 = !DILocation(line: 64, column: 35, scope: !6059)
!6103 = !DILocation(line: 64, column: 9, scope: !6068)
!6104 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11array_tests11test_arrays12test_buffer228_$u7b$$u7b$closure$u7d$$u7d$17he1c17185810d04e8E", scope: !1003, file: !70, line: 70, type: !6105, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !6108)
!6105 = !DISubroutineType(types: !6106)
!6106 = !{null, !6107}
!6107 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&array_tests::test_arrays::test_buffer2::{closure_env#0}", baseType: !1002, size: 64, align: 64, dwarfAddressSpace: 0)
!6108 = !{!6109}
!6109 = !DILocalVariable(arg: 1, scope: !6104, file: !70, line: 70, type: !6107)
!6110 = !DILocation(line: 70, column: 1, scope: !6104)
!6111 = !DILocation(line: 82, column: 2, scope: !6104)
!6112 = distinct !DISubprogram(name: "test_buffer2", scope: !68, file: !70, line: 70, type: !21, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !6113)
!6113 = !{!6114, !6116, !6118, !6120, !6123, !6124, !6127, !6130, !6131}
!6114 = !DILocalVariable(name: "buffer", scope: !6115, file: !70, line: 71, type: !63, align: 4)
!6115 = distinct !DILexicalBlock(scope: !6112, file: !70, line: 71, column: 5)
!6116 = !DILocalVariable(name: "rust_buffer", scope: !6117, file: !70, line: 72, type: !63, align: 4)
!6117 = distinct !DILexicalBlock(scope: !6115, file: !70, line: 72, column: 5)
!6118 = !DILocalVariable(name: "expected_buffer", scope: !6119, file: !70, line: 73, type: !63, align: 4)
!6119 = distinct !DILexicalBlock(scope: !6117, file: !70, line: 73, column: 5)
!6120 = !DILocalVariable(name: "left_val", scope: !6121, file: !70, line: 80, type: !62, align: 8)
!6121 = !DILexicalBlockFile(scope: !6122, file: !70, discriminator: 0)
!6122 = distinct !DILexicalBlock(scope: !6119, file: !2003, line: 39, column: 13)
!6123 = !DILocalVariable(name: "right_val", scope: !6121, file: !70, line: 80, type: !62, align: 8)
!6124 = !DILocalVariable(name: "kind", scope: !6125, file: !70, line: 80, type: !181, align: 1)
!6125 = !DILexicalBlockFile(scope: !6126, file: !70, discriminator: 0)
!6126 = distinct !DILexicalBlock(scope: !6122, file: !2003, line: 41, column: 21)
!6127 = !DILocalVariable(name: "left_val", scope: !6128, file: !70, line: 81, type: !62, align: 8)
!6128 = !DILexicalBlockFile(scope: !6129, file: !70, discriminator: 0)
!6129 = distinct !DILexicalBlock(scope: !6119, file: !2003, line: 39, column: 13)
!6130 = !DILocalVariable(name: "right_val", scope: !6128, file: !70, line: 81, type: !62, align: 8)
!6131 = !DILocalVariable(name: "kind", scope: !6132, file: !70, line: 81, type: !181, align: 1)
!6132 = !DILexicalBlockFile(scope: !6133, file: !70, discriminator: 0)
!6133 = distinct !DILexicalBlock(scope: !6129, file: !2003, line: 41, column: 21)
!6134 = !DILocation(line: 71, column: 9, scope: !6115)
!6135 = !DILocation(line: 72, column: 9, scope: !6117)
!6136 = !DILocation(line: 73, column: 9, scope: !6119)
!6137 = !DILocation(line: 80, column: 5, scope: !6125)
!6138 = !DILocation(line: 81, column: 5, scope: !6132)
!6139 = !DILocation(line: 71, column: 22, scope: !6112)
!6140 = !DILocation(line: 72, column: 27, scope: !6115)
!6141 = !DILocation(line: 73, column: 27, scope: !6117)
!6142 = !DILocation(line: 76, column: 37, scope: !6119)
!6143 = !DILocation(line: 76, column: 9, scope: !6119)
!6144 = !DILocation(line: 77, column: 42, scope: !6119)
!6145 = !DILocation(line: 77, column: 9, scope: !6119)
!6146 = !DILocation(line: 80, column: 5, scope: !6119)
!6147 = !DILocation(line: 80, column: 5, scope: !6121)
!6148 = !DILocation(line: 81, column: 5, scope: !6119)
!6149 = !DILocation(line: 81, column: 5, scope: !6128)
!6150 = !DILocation(line: 82, column: 2, scope: !6112)
!6151 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11array_tests11test_arrays20test_variable_arrays28_$u7b$$u7b$closure$u7d$$u7d$17h36e6b28ca8e568caE", scope: !1039, file: !70, line: 86, type: !6152, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !6155)
!6152 = !DISubroutineType(types: !6153)
!6153 = !{null, !6154}
!6154 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&array_tests::test_arrays::test_variable_arrays::{closure_env#0}", baseType: !1038, size: 64, align: 64, dwarfAddressSpace: 0)
!6155 = !{!6156}
!6156 = !DILocalVariable(arg: 1, scope: !6151, file: !70, line: 86, type: !6154)
!6157 = !DILocation(line: 86, column: 1, scope: !6151)
!6158 = !DILocation(line: 104, column: 2, scope: !6151)
!6159 = distinct !DISubprogram(name: "test_variable_arrays", scope: !68, file: !70, line: 86, type: !21, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !6160)
!6160 = !{!6161, !6166, !6168, !6170, !6172, !6174, !6177, !6178, !6181, !6184, !6185}
!6161 = !DILocalVariable(name: "buffer", scope: !6162, file: !70, line: 87, type: !6163, align: 4)
!6162 = distinct !DILexicalBlock(scope: !6159, file: !70, line: 87, column: 5)
!6163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 2816, align: 32, elements: !6164)
!6164 = !{!6165}
!6165 = !DISubrange(count: 88, lowerBound: 0)
!6166 = !DILocalVariable(name: "rust_buffer", scope: !6167, file: !70, line: 88, type: !6163, align: 4)
!6167 = distinct !DILexicalBlock(scope: !6162, file: !70, line: 88, column: 5)
!6168 = !DILocalVariable(name: "expected_buffer", scope: !6169, file: !70, line: 89, type: !6163, align: 4)
!6169 = distinct !DILexicalBlock(scope: !6167, file: !70, line: 89, column: 5)
!6170 = !DILocalVariable(name: "iter", scope: !6171, file: !70, line: 100, type: !1229, align: 8)
!6171 = distinct !DILexicalBlock(scope: !6169, file: !70, line: 100, column: 5)
!6172 = !DILocalVariable(name: "index", scope: !6173, file: !70, line: 100, type: !9, align: 8)
!6173 = distinct !DILexicalBlock(scope: !6171, file: !70, line: 100, column: 34)
!6174 = !DILocalVariable(name: "left_val", scope: !6175, file: !70, line: 101, type: !32, align: 8)
!6175 = !DILexicalBlockFile(scope: !6176, file: !70, discriminator: 0)
!6176 = distinct !DILexicalBlock(scope: !6173, file: !2003, line: 52, column: 13)
!6177 = !DILocalVariable(name: "right_val", scope: !6175, file: !70, line: 101, type: !32, align: 8)
!6178 = !DILocalVariable(name: "kind", scope: !6179, file: !70, line: 101, type: !181, align: 1)
!6179 = !DILexicalBlockFile(scope: !6180, file: !70, discriminator: 0)
!6180 = distinct !DILexicalBlock(scope: !6176, file: !2003, line: 54, column: 21)
!6181 = !DILocalVariable(name: "left_val", scope: !6182, file: !70, line: 102, type: !32, align: 8)
!6182 = !DILexicalBlockFile(scope: !6183, file: !70, discriminator: 0)
!6183 = distinct !DILexicalBlock(scope: !6173, file: !2003, line: 52, column: 13)
!6184 = !DILocalVariable(name: "right_val", scope: !6182, file: !70, line: 102, type: !32, align: 8)
!6185 = !DILocalVariable(name: "kind", scope: !6186, file: !70, line: 102, type: !181, align: 1)
!6186 = !DILexicalBlockFile(scope: !6187, file: !70, discriminator: 0)
!6187 = distinct !DILexicalBlock(scope: !6183, file: !2003, line: 54, column: 21)
!6188 = !DILocation(line: 87, column: 9, scope: !6162)
!6189 = !DILocation(line: 88, column: 9, scope: !6167)
!6190 = !DILocation(line: 89, column: 9, scope: !6169)
!6191 = !DILocation(line: 100, column: 18, scope: !6171)
!6192 = !DILocation(line: 100, column: 9, scope: !6173)
!6193 = !DILocation(line: 101, column: 9, scope: !6179)
!6194 = !DILocation(line: 102, column: 9, scope: !6186)
!6195 = !DILocation(line: 87, column: 22, scope: !6159)
!6196 = !DILocation(line: 88, column: 27, scope: !6162)
!6197 = !DILocation(line: 89, column: 27, scope: !6167)
!6198 = !DILocation(line: 96, column: 25, scope: !6169)
!6199 = !DILocation(line: 96, column: 9, scope: !6169)
!6200 = !DILocation(line: 97, column: 30, scope: !6169)
!6201 = !DILocation(line: 97, column: 9, scope: !6169)
!6202 = !DILocation(line: 100, column: 18, scope: !6169)
!6203 = !DILocation(line: 100, column: 5, scope: !6171)
!6204 = !DILocation(line: 104, column: 2, scope: !6159)
!6205 = !DILocation(line: 100, column: 9, scope: !6171)
!6206 = !DILocation(line: 101, column: 27, scope: !6173)
!6207 = !DILocation(line: 101, column: 20, scope: !6173)
!6208 = !DILocation(line: 101, column: 9, scope: !6173)
!6209 = !DILocation(line: 101, column: 51, scope: !6173)
!6210 = !DILocation(line: 101, column: 35, scope: !6173)
!6211 = !DILocation(line: 101, column: 9, scope: !6175)
!6212 = !DILocation(line: 102, column: 27, scope: !6173)
!6213 = !DILocation(line: 102, column: 20, scope: !6173)
!6214 = !DILocation(line: 102, column: 9, scope: !6173)
!6215 = !DILocation(line: 102, column: 47, scope: !6173)
!6216 = !DILocation(line: 102, column: 35, scope: !6173)
!6217 = !DILocation(line: 102, column: 9, scope: !6182)
!6218 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11array_tests11test_arrays18test_alloca_arrays28_$u7b$$u7b$closure$u7d$$u7d$17h4849e9a2f935d764E", scope: !1050, file: !70, line: 108, type: !6219, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !6222)
!6219 = !DISubroutineType(types: !6220)
!6220 = !{null, !6221}
!6221 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&array_tests::test_arrays::test_alloca_arrays::{closure_env#0}", baseType: !1049, size: 64, align: 64, dwarfAddressSpace: 0)
!6222 = !{!6223}
!6223 = !DILocalVariable(arg: 1, scope: !6218, file: !70, line: 108, type: !6221)
!6224 = !DILocation(line: 108, column: 1, scope: !6218)
!6225 = !DILocation(line: 126, column: 2, scope: !6218)
!6226 = distinct !DISubprogram(name: "test_alloca_arrays", scope: !68, file: !70, line: 108, type: !21, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !92, templateParams: !23, retainedNodes: !6227)
!6227 = !{!6228, !6230, !6232, !6234, !6236, !6238, !6241, !6242, !6245, !6248, !6249}
!6228 = !DILocalVariable(name: "buffer", scope: !6229, file: !70, line: 109, type: !6163, align: 4)
!6229 = distinct !DILexicalBlock(scope: !6226, file: !70, line: 109, column: 5)
!6230 = !DILocalVariable(name: "rust_buffer", scope: !6231, file: !70, line: 110, type: !6163, align: 4)
!6231 = distinct !DILexicalBlock(scope: !6229, file: !70, line: 110, column: 5)
!6232 = !DILocalVariable(name: "expected_buffer", scope: !6233, file: !70, line: 111, type: !6163, align: 4)
!6233 = distinct !DILexicalBlock(scope: !6231, file: !70, line: 111, column: 5)
!6234 = !DILocalVariable(name: "iter", scope: !6235, file: !70, line: 122, type: !1229, align: 8)
!6235 = distinct !DILexicalBlock(scope: !6233, file: !70, line: 122, column: 5)
!6236 = !DILocalVariable(name: "index", scope: !6237, file: !70, line: 122, type: !9, align: 8)
!6237 = distinct !DILexicalBlock(scope: !6235, file: !70, line: 122, column: 34)
!6238 = !DILocalVariable(name: "left_val", scope: !6239, file: !70, line: 123, type: !32, align: 8)
!6239 = !DILexicalBlockFile(scope: !6240, file: !70, discriminator: 0)
!6240 = distinct !DILexicalBlock(scope: !6237, file: !2003, line: 52, column: 13)
!6241 = !DILocalVariable(name: "right_val", scope: !6239, file: !70, line: 123, type: !32, align: 8)
!6242 = !DILocalVariable(name: "kind", scope: !6243, file: !70, line: 123, type: !181, align: 1)
!6243 = !DILexicalBlockFile(scope: !6244, file: !70, discriminator: 0)
!6244 = distinct !DILexicalBlock(scope: !6240, file: !2003, line: 54, column: 21)
!6245 = !DILocalVariable(name: "left_val", scope: !6246, file: !70, line: 124, type: !32, align: 8)
!6246 = !DILexicalBlockFile(scope: !6247, file: !70, discriminator: 0)
!6247 = distinct !DILexicalBlock(scope: !6237, file: !2003, line: 52, column: 13)
!6248 = !DILocalVariable(name: "right_val", scope: !6246, file: !70, line: 124, type: !32, align: 8)
!6249 = !DILocalVariable(name: "kind", scope: !6250, file: !70, line: 124, type: !181, align: 1)
!6250 = !DILexicalBlockFile(scope: !6251, file: !70, discriminator: 0)
!6251 = distinct !DILexicalBlock(scope: !6247, file: !2003, line: 54, column: 21)
!6252 = !DILocation(line: 109, column: 9, scope: !6229)
!6253 = !DILocation(line: 110, column: 9, scope: !6231)
!6254 = !DILocation(line: 111, column: 9, scope: !6233)
!6255 = !DILocation(line: 122, column: 18, scope: !6235)
!6256 = !DILocation(line: 122, column: 9, scope: !6237)
!6257 = !DILocation(line: 123, column: 9, scope: !6243)
!6258 = !DILocation(line: 124, column: 9, scope: !6250)
!6259 = !DILocation(line: 109, column: 22, scope: !6226)
!6260 = !DILocation(line: 110, column: 27, scope: !6229)
!6261 = !DILocation(line: 111, column: 27, scope: !6231)
!6262 = !DILocation(line: 118, column: 23, scope: !6233)
!6263 = !DILocation(line: 118, column: 9, scope: !6233)
!6264 = !DILocation(line: 119, column: 28, scope: !6233)
!6265 = !DILocation(line: 119, column: 9, scope: !6233)
!6266 = !DILocation(line: 122, column: 18, scope: !6233)
!6267 = !DILocation(line: 122, column: 5, scope: !6235)
!6268 = !DILocation(line: 126, column: 2, scope: !6226)
!6269 = !DILocation(line: 122, column: 9, scope: !6235)
!6270 = !DILocation(line: 123, column: 27, scope: !6237)
!6271 = !DILocation(line: 123, column: 20, scope: !6237)
!6272 = !DILocation(line: 123, column: 9, scope: !6237)
!6273 = !DILocation(line: 123, column: 51, scope: !6237)
!6274 = !DILocation(line: 123, column: 35, scope: !6237)
!6275 = !DILocation(line: 123, column: 9, scope: !6239)
!6276 = !DILocation(line: 124, column: 27, scope: !6237)
!6277 = !DILocation(line: 124, column: 20, scope: !6237)
!6278 = !DILocation(line: 124, column: 9, scope: !6237)
!6279 = !DILocation(line: 124, column: 47, scope: !6237)
!6280 = !DILocation(line: 124, column: 35, scope: !6237)
!6281 = !DILocation(line: 124, column: 9, scope: !6246)
!6282 = distinct !DISubprogram(name: "main", linkageName: "_ZN11array_tests4main17h235eec6d3a7779e1E", scope: !69, file: !2982, line: 1, type: !21, scopeLine: 1, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagMainSubprogram, unit: !92, templateParams: !23, retainedNodes: !23)
!6283 = !DILocation(line: 1, column: 1, scope: !6282)
