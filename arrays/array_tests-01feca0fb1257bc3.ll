; ModuleID = 'bd5x83h89eiqhu6'
source_filename = "bd5x83h89eiqhu6"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"alloc::vec::Vec<i32>" = type { { i32*, i64 }, i64 }
%"core::ptr::metadata::PtrComponents<u8>" = type { {}*, {} }
%"core::ptr::metadata::PtrRepr<u8>" = type { [1 x i64] }
%"core::alloc::layout::LayoutError" = type {}
%"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::alloc::AllocError" = type {}
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"[closure@alloc::raw_vec::handle_reserve::{closure#0}]" = type {}
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok" = type { {} }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]" = type {}
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]" = type {}
%"alloc::alloc::Global" = type {}
%"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]" = type { i8**, i8**, i64* }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>" = type { [2 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some" = type { { i8*, { i64, i64 } } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue" = type { [1 x i64], { i8*, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ptr::metadata::PtrRepr<[i32]>" = type { [2 x i64] }
%"packed_arrays::event_queue_t" = type { %"packed_arrays::event_queue_t_Inner" }
%"packed_arrays::event_queue_t_Inner" = type { i32 }
%"core::panic::location::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"incomplete_arrays::sized_array" = type { i64, [0 x i32] }
%"unwind::libunwind::_Unwind_Exception" = type { i64, void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [6 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

@alloc99 = private unnamed_addr constant <{}> zeroinitializer, align 1
@SOME_INTS = constant <{ [16 x i8] }> <{ [16 x i8] c"\02\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00" }>, align 4, !dbg !0
@rust_SOME_INTS = constant <{ [16 x i8] }> <{ [16 x i8] c"\02\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00" }>, align 4, !dbg !9
@_ZN11array_tests6arrays11rust_simple17h51c03bc5d8c0d344E = internal global <{ [9 x i8] }> <{ [9 x i8] c"mystring\00" }>, align 1, !dbg !11
@alloc2 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"mystring\00" }>, align 1
@_ZN11array_tests6arrays8rust_foo17h75da38f065933bfaE = internal global <{ i8* }> <{ i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc2, i32 0, i32 0, i32 0) }>, align 8, !dbg !19
@alloc308 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"src/arrays.rs" }>, align 1
@alloc207 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\1C\00\00\00\05\00\00\00" }>, align 8
@str.0 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc209 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\1F\00\00\00\05\00\00\00" }>, align 8
@alloc211 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00$\00\00\00\05\00\00\00" }>, align 8
@alloc6 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"abc\00" }>, align 1
@alloc213 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00+\00\00\00\09\00\00\00" }>, align 8
@alloc215 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00/\00\00\00\09\00\00\00" }>, align 8
@alloc217 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\003\00\00\00\09\00\00\00" }>, align 8
@alloc219 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\007\00\00\00\09\00\00\00" }>, align 8
@alloc221 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00@\00\00\00\09\00\00\00" }>, align 8
@alloc223 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00D\00\00\00\09\00\00\00" }>, align 8
@alloc225 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00H\00\00\00\09\00\00\00" }>, align 8
@alloc227 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00M\00\00\00\09\00\00\00" }>, align 8
@alloc229 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00Q\00\00\00\09\00\00\00" }>, align 8
@alloc231 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00W\00\00\00\09\00\00\00" }>, align 8
@alloc233 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00[\00\00\00\09\00\00\00" }>, align 8
@alloc235 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00_\00\00\00\09\00\00\00" }>, align 8
@alloc237 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00c\00\00\00\09\00\00\00" }>, align 8
@alloc7 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"abcd\00" }>, align 1
@alloc239 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00k\00\00\00\09\00\00\00" }>, align 8
@alloc241 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00o\00\00\00\09\00\00\00" }>, align 8
@alloc243 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00s\00\00\00\09\00\00\00" }>, align 8
@alloc245 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00w\00\00\00\09\00\00\00" }>, align 8
@alloc8 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"abc" }>, align 1
@alloc247 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\7F\00\00\00\09\00\00\00" }>, align 8
@alloc249 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\83\00\00\00\09\00\00\00" }>, align 8
@alloc251 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\87\00\00\00\09\00\00\00" }>, align 8
@alloc9 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"abc\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 1
@alloc253 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\8F\00\00\00\09\00\00\00" }>, align 8
@alloc255 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\93\00\00\00\09\00\00\00" }>, align 8
@alloc257 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\97\00\00\00\09\00\00\00" }>, align 8
@alloc259 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\9B\00\00\00\09\00\00\00" }>, align 8
@alloc261 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\9F\00\00\00\09\00\00\00" }>, align 8
@alloc263 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\A3\00\00\00\09\00\00\00" }>, align 8
@alloc265 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\A7\00\00\00\09\00\00\00" }>, align 8
@alloc10 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"x\00\00\00\00\00\00\00" }>, align 1
@alloc267 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\AF\00\00\00\09\00\00\00" }>, align 8
@alloc269 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\B2\00\00\00\09\00\00\00" }>, align 8
@alloc11 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"x\00\00\00\00\00\00\00\00\00\00\00" }>, align 1
@alloc271 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\B9\00\00\00\09\00\00\00" }>, align 8
@alloc273 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\BC\00\00\00\09\00\00\00" }>, align 8
@alloc275 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\BF\00\00\00\09\00\00\00" }>, align 8
@alloc12 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"x\00\00\00" }>, align 1
@alloc277 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\C6\00\00\00\09\00\00\00" }>, align 8
@alloc279 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\C9\00\00\00\09\00\00\00" }>, align 8
@alloc281 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\CD\00\00\00\09\00\00\00" }>, align 8
@alloc283 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\D1\00\00\00\09\00\00\00" }>, align 8
@alloc285 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\D5\00\00\00\09\00\00\00" }>, align 8
@alloc287 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\D9\00\00\00\09\00\00\00" }>, align 8
@alloc289 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\DD\00\00\00\09\00\00\00" }>, align 8
@alloc291 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\E1\00\00\00\09\00\00\00" }>, align 8
@alloc293 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\E5\00\00\00\09\00\00\00" }>, align 8
@alloc295 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\E9\00\00\00\09\00\00\00" }>, align 8
@alloc297 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\ED\00\00\00\09\00\00\00" }>, align 8
@alloc299 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\F1\00\00\00\09\00\00\00" }>, align 8
@alloc301 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\F5\00\00\00\09\00\00\00" }>, align 8
@alloc303 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\F9\00\00\00\09\00\00\00" }>, align 8
@alloc305 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\FD\00\00\00\09\00\00\00" }>, align 8
@alloc307 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\01\01\00\00\09\00\00\00" }>, align 8
@alloc309 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc308, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\05\01\00\00\09\00\00\00" }>, align 8
@alloc382 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"src/variable_arrays.rs" }>, align 1
@alloc311 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\10\00\00\00\0F\00\00\00" }>, align 8
@str.1 = internal constant [33 x i8] c"attempt to multiply with overflow"
@alloc313 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\16\00\00\00\13\00\00\00" }>, align 8
@alloc315 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\1A\00\00\00\1B\00\00\00" }>, align 8
@alloc317 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\1C\00\00\00*\00\00\00" }>, align 8
@alloc319 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\1C\00\00\00\1D\00\00\00" }>, align 8
@alloc321 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\1D\00\00\00\1D\00\00\00" }>, align 8
@alloc323 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\1F\00\00\00\11\00\00\00" }>, align 8
@alloc325 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\22\00\00\00\0D\00\00\00" }>, align 8
@alloc327 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00%\00\00\00\09\00\00\00" }>, align 8
@alloc329 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00)\00\00\001\00\00\00" }>, align 8
@alloc331 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00)\00\00\00\11\00\00\00" }>, align 8
@alloc333 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00*\00\00\00\11\00\00\00" }>, align 8
@alloc335 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\003\00\00\00\0F\00\00\00" }>, align 8
@alloc337 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\009\00\00\00\13\00\00\00" }>, align 8
@alloc339 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00=\00\00\00\1B\00\00\00" }>, align 8
@alloc341 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00?\00\00\00*\00\00\00" }>, align 8
@alloc343 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00?\00\00\00\1D\00\00\00" }>, align 8
@alloc345 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00@\00\00\00\1D\00\00\00" }>, align 8
@alloc347 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00B\00\00\00\11\00\00\00" }>, align 8
@alloc349 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00E\00\00\00\0D\00\00\00" }>, align 8
@alloc351 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00H\00\00\00\09\00\00\00" }>, align 8
@alloc353 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00a\00\00\00\1B\00\00\00" }>, align 8
@alloc355 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00b\00\00\000\00\00\00" }>, align 8
@alloc357 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00c\00\00\00\11\00\00\00" }>, align 8
@alloc359 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00f\00\00\00\0D\00\00\00" }>, align 8
@alloc361 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00i\00\00\00\09\00\00\00" }>, align 8
@alloc363 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00q\00\00\003\00\00\00" }>, align 8
@alloc365 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00s\00\00\00\13\00\00\00" }>, align 8
@alloc367 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00u\00\00\00\09\00\00\00" }>, align 8
@alloc369 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\96\00\00\00\1B\00\00\00" }>, align 8
@alloc371 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\97\00\00\000\00\00\00" }>, align 8
@alloc373 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\98\00\00\00\11\00\00\00" }>, align 8
@alloc375 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\9B\00\00\00\0D\00\00\00" }>, align 8
@alloc377 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\9E\00\00\00\09\00\00\00" }>, align 8
@alloc379 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\AA\00\00\00&\00\00\00" }>, align 8
@alloc381 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\AC\00\00\00\13\00\00\00" }>, align 8
@alloc383 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc382, i32 0, i32 0, i32 0), [16 x i8] c"\16\00\00\00\00\00\00\00\AE\00\00\00\09\00\00\00" }>, align 8
@alloc384 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"src/incomplete_arrays.rs" }>, align 1
@alloc385 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [24 x i8] }>, <{ [24 x i8] }>* @alloc384, i32 0, i32 0, i32 0), [16 x i8] c"\18\00\00\00\00\00\00\00D\00\00\00\09\00\00\00" }>, align 8

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h90c671efbcbc3846E"(i8* %unique) unnamed_addr #0 !dbg !120 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %unique.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  store i8* %unique, i8** %unique.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %unique.dbg.spill, metadata !142, metadata !DIExpression()), !dbg !143
  store i8* %unique, i8** %self.dbg.spill, align 8, !dbg !144
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !145, metadata !DIExpression()), !dbg !153
  store i8* %unique, i8** %self.dbg.spill1, align 8, !dbg !153
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !154, metadata !DIExpression()), !dbg !159
  store i8* %unique, i8** %ptr.dbg.spill, align 8, !dbg !159
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !161, metadata !DIExpression()), !dbg !166
  store i8* %unique, i8** %0, align 8, !dbg !166
  %1 = load i8*, i8** %0, align 8, !dbg !168, !nonnull !140, !noundef !140
  ret i8* %1, !dbg !168
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h07c1f08a15bfc68eE"(i64 %kind.0, i64 %kind.1) unnamed_addr #0 !dbg !169 {
start:
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0
  store i64 %kind.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1
  store i64 %kind.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !202, metadata !DIExpression()), !dbg !203
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !204
  store i64 %kind.0, i64* %3, align 8, !dbg !204
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !204
  store i64 %kind.1, i64* %4, align 8, !dbg !204
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !205
  %6 = load i64, i64* %5, align 8, !dbg !205
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !205
  %8 = load i64, i64* %7, align 8, !dbg !205, !range !206, !noundef !140
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !205
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !205
  ret { i64, i64 } %10, !dbg !205
}

; <usize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hed6d6ab6e2392a88E"(i64 %start1, i64 %n) unnamed_addr #0 !dbg !207 {
start:
  %0 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  store i64 %start1, i64* %start.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !215, metadata !DIExpression()), !dbg !217
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !216, metadata !DIExpression()), !dbg !218
  store i64 %start1, i64* %self.dbg.spill, align 8, !dbg !219
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !220, metadata !DIExpression()), !dbg !228
  store i64 %n, i64* %rhs.dbg.spill, align 8, !dbg !229
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !227, metadata !DIExpression()), !dbg !228
  %1 = add nuw i64 %start1, %n, !dbg !228
  store i64 %1, i64* %0, align 8, !dbg !228
  %2 = load i64, i64* %0, align 8, !dbg !228
  br label %bb1, !dbg !228

bb1:                                              ; preds = %start
  ret i64 %2, !dbg !230
}

; core::cmp::Ord::max
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3Ord3max17h87106b455f34e45bE(i64 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !231 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %_8 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %3 = alloca i64, align 8
  %other = alloca i64, align 8
  %self = alloca i64, align 8
  store i64 %0, i64* %self, align 8
  store i64 %1, i64* %other, align 8
  call void @llvm.dbg.declare(metadata i64* %self, metadata !235, metadata !DIExpression()), !dbg !239
  call void @llvm.dbg.declare(metadata i64* %other, metadata !236, metadata !DIExpression()), !dbg !240
  store i8 1, i8* %_9, align 1, !dbg !241
  store i8 1, i8* %_8, align 1, !dbg !241
; invoke core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %4 = invoke i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h3d2a18e0790e5393E"(i64* align 8 %self, i64* align 8 %other)
          to label %bb1 unwind label %cleanup, !dbg !241, !range !242

bb8:                                              ; preds = %cleanup
  br label %bb13, !dbg !243

cleanup:                                          ; preds = %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb8

bb1:                                              ; preds = %start
  store i8 %4, i8* %_3, align 1, !dbg !241
  %_7 = load i8, i8* %_3, align 1, !dbg !241, !range !242, !noundef !140
  switch i8 %_7, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ], !dbg !244

bb13:                                             ; preds = %bb8
  %10 = load i8, i8* %_9, align 1, !dbg !243, !range !245, !noundef !140
  %11 = trunc i8 %10 to i1, !dbg !243
  br i1 %11, label %bb12, label %bb9, !dbg !243

bb3:                                              ; preds = %bb1
  unreachable, !dbg !241

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_8, align 1, !dbg !246
  %12 = load i64, i64* %other, align 8, !dbg !246
  store i64 %12, i64* %3, align 8, !dbg !246
  br label %bb5, !dbg !246

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_9, align 1, !dbg !247
  %13 = load i64, i64* %self, align 8, !dbg !247
  store i64 %13, i64* %3, align 8, !dbg !247
  br label %bb5, !dbg !247

bb5:                                              ; preds = %bb4, %bb2
  %14 = load i8, i8* %_8, align 1, !dbg !243, !range !245, !noundef !140
  %15 = trunc i8 %14 to i1, !dbg !243
  br i1 %15, label %bb10, label %bb6, !dbg !243

bb6:                                              ; preds = %bb10, %bb5
  %16 = load i8, i8* %_9, align 1, !dbg !243, !range !245, !noundef !140
  %17 = trunc i8 %16 to i1, !dbg !243
  br i1 %17, label %bb11, label %bb7, !dbg !243

bb10:                                             ; preds = %bb5
  br label %bb6, !dbg !243

bb9:                                              ; preds = %bb12, %bb13
  %18 = bitcast { i8*, i32 }* %2 to i8**, !dbg !248
  %19 = load i8*, i8** %18, align 8, !dbg !248
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !248
  %21 = load i32, i32* %20, align 8, !dbg !248
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0, !dbg !248
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1, !dbg !248
  resume { i8*, i32 } %23, !dbg !248

bb12:                                             ; preds = %bb13
  br label %bb9, !dbg !243

bb7:                                              ; preds = %bb11, %bb6
  %24 = load i64, i64* %3, align 8, !dbg !249
  ret i64 %24, !dbg !249

bb11:                                             ; preds = %bb6
  br label %bb7, !dbg !243
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h3d2a18e0790e5393E"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #0 !dbg !250 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  %0 = alloca i8, align 1
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !257, metadata !DIExpression()), !dbg !259
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !258, metadata !DIExpression()), !dbg !260
  %_4 = load i64, i64* %self, align 8, !dbg !261
  %_5 = load i64, i64* %other, align 8, !dbg !262
  %_3 = icmp ult i64 %_4, %_5, !dbg !261
  br i1 %_3, label %bb1, label %bb2, !dbg !261

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8, !dbg !263
  %_8 = load i64, i64* %other, align 8, !dbg !264
  %_6 = icmp eq i64 %_7, %_8, !dbg !263
  br i1 %_6, label %bb3, label %bb4, !dbg !263

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1, !dbg !265
  br label %bb6, !dbg !266

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !dbg !267, !range !242, !noundef !140
  ret i8 %1, !dbg !267

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1, !dbg !268
  br label %bb5, !dbg !269

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1, !dbg !270
  br label %bb5, !dbg !269

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6, !dbg !266
}

; core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hff8f36e2a393695fE"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #0 !dbg !271 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !277, metadata !DIExpression()), !dbg !279
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !278, metadata !DIExpression()), !dbg !280
  %_3 = load i64, i64* %self, align 8, !dbg !281
  %_4 = load i64, i64* %other, align 8, !dbg !282
  %0 = icmp ult i64 %_3, %_4, !dbg !281
  ret i1 %0, !dbg !283
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem7replace17h1b0f877508390cefE(i64* align 8 %dest, i64 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !284 {
start:
  %dst.dbg.spill = alloca i64*, align 8
  %result.dbg.spill = alloca i64, align 8
  %slot.dbg.spill = alloca i64, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill3 = alloca i64, align 8
  %self.dbg.spill = alloca i64*, align 8
  %src.dbg.spill2 = alloca i64*, align 8
  %src.dbg.spill = alloca i64, align 8
  %dest.dbg.spill = alloca i64*, align 8
  %tmp = alloca i64, align 8
  %src1 = alloca i64, align 8
  store i64* %dest, i64** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dest.dbg.spill, metadata !290, metadata !DIExpression()), !dbg !296
  store i64 %src, i64* %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %src.dbg.spill, metadata !291, metadata !DIExpression()), !dbg !297
  call void @llvm.dbg.declare(metadata i64* %src1, metadata !298, metadata !DIExpression()), !dbg !307
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !309, metadata !DIExpression()), !dbg !328
  store i64* %dest, i64** %src.dbg.spill2, align 8, !dbg !330
  call void @llvm.dbg.declare(metadata i64** %src.dbg.spill2, metadata !317, metadata !DIExpression()), !dbg !331
  %1 = bitcast i64* %tmp to {}*, !dbg !332
  store i64* %tmp, i64** %self.dbg.spill, align 8, !dbg !328
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !339, metadata !DIExpression()), !dbg !346
  %2 = bitcast i64* %tmp to i8*, !dbg !328
  %3 = bitcast i64* %dest to i8*, !dbg !328
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !328
  %self = load i64, i64* %tmp, align 8, !dbg !328
  store i64 %self, i64* %self.dbg.spill3, align 8, !dbg !328
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill3, metadata !348, metadata !DIExpression()), !dbg !367
  br label %bb4, !dbg !367

bb4:                                              ; preds = %start
  store i64 %self, i64* %slot.dbg.spill, align 8, !dbg !367
  call void @llvm.dbg.declare(metadata i64* %slot.dbg.spill, metadata !369, metadata !DIExpression()), !dbg !376
  store i64 %self, i64* %result.dbg.spill, align 8, !dbg !376
  call void @llvm.dbg.declare(metadata i64* %result.dbg.spill, metadata !292, metadata !DIExpression()), !dbg !378
  store i64* %dest, i64** %dst.dbg.spill, align 8, !dbg !379
  call void @llvm.dbg.declare(metadata i64** %dst.dbg.spill, metadata !306, metadata !DIExpression()), !dbg !307
  store i64 %src, i64* %src1, align 8, !dbg !380
  %4 = bitcast i64* %dest to i8*, !dbg !307
  %5 = bitcast i64* %src1 to i8*, !dbg !307
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 8, i1 false), !dbg !307
  ret i64 %self, !dbg !381

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !382

bb1:                                              ; preds = %bb2, %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !383
  %7 = load i8*, i8** %6, align 8, !dbg !383
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !383
  %9 = load i32, i32* %8, align 8, !dbg !383
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !383
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !383
  resume { i8*, i32 } %11, !dbg !383

bb2:                                              ; preds = %bb3
  br label %bb1, !dbg !382
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17he45b9f2a8ce2079eE"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !384 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill4 = alloca i8, align 1
  %a.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill2 = alloca i64, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i8 }, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !400, metadata !DIExpression()), !dbg !405
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !401, metadata !DIExpression()), !dbg !406
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !407
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !408, metadata !DIExpression()), !dbg !421
  store i64 %rhs, i64* %rhs.dbg.spill2, align 8, !dbg !422
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill2, metadata !417, metadata !DIExpression()), !dbg !421
  %3 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs), !dbg !421
  %4 = extractvalue { i64, i1 } %3, 0, !dbg !421
  %5 = extractvalue { i64, i1 } %3, 1, !dbg !421
  %6 = zext i1 %5 to i8, !dbg !421
  %7 = bitcast { i64, i8 }* %1 to i64*, !dbg !421
  store i64 %4, i64* %7, align 8, !dbg !421
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !421
  store i8 %6, i8* %8, align 8, !dbg !421
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !421
  %_13.0 = load i64, i64* %9, align 8, !dbg !421
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !421
  %11 = load i8, i8* %10, align 8, !dbg !421, !range !245, !noundef !140
  %_13.1 = trunc i8 %11 to i1, !dbg !421
  br label %bb5, !dbg !421

bb5:                                              ; preds = %start
  store i64 %_13.0, i64* %a.dbg.spill, align 8, !dbg !421
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !418, metadata !DIExpression()), !dbg !423
  %12 = zext i1 %_13.1 to i8, !dbg !421
  store i8 %12, i8* %b.dbg.spill, align 1, !dbg !421
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !420, metadata !DIExpression()), !dbg !423
  %13 = bitcast { i64, i8 }* %_5 to i64*, !dbg !423
  store i64 %_13.0, i64* %13, align 8, !dbg !423
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !423
  %15 = zext i1 %_13.1 to i8, !dbg !423
  store i8 %15, i8* %14, align 8, !dbg !423
  %16 = bitcast { i64, i8 }* %_5 to i64*, !dbg !424
  %a = load i64, i64* %16, align 8, !dbg !424
  store i64 %a, i64* %a.dbg.spill3, align 8, !dbg !424
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill3, metadata !402, metadata !DIExpression()), !dbg !425
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !426
  %18 = load i8, i8* %17, align 8, !dbg !426, !range !245, !noundef !140
  %b = trunc i8 %18 to i1, !dbg !426
  %19 = zext i1 %b to i8, !dbg !426
  store i8 %19, i8* %b.dbg.spill4, align 1, !dbg !426
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill4, metadata !404, metadata !DIExpression()), !dbg !427
  %20 = call i1 @llvm.expect.i1(i1 %b, i1 false), !dbg !428
  %21 = zext i1 %20 to i8, !dbg !428
  store i8 %21, i8* %0, align 1, !dbg !428
  %22 = load i8, i8* %0, align 1, !dbg !428, !range !245, !noundef !140
  %_8 = trunc i8 %22 to i1, !dbg !428
  br label %bb1, !dbg !428

bb1:                                              ; preds = %bb5
  br i1 %_8, label %bb2, label %bb3, !dbg !428

bb3:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !429
  store i64 %a, i64* %23, align 8, !dbg !429
  %24 = bitcast { i64, i64 }* %2 to i64*, !dbg !429
  store i64 1, i64* %24, align 8, !dbg !429
  br label %bb4, !dbg !430

bb2:                                              ; preds = %bb1
  %25 = bitcast { i64, i64 }* %2 to i64*, !dbg !431
  store i64 0, i64* %25, align 8, !dbg !431
  br label %bb4, !dbg !430

bb4:                                              ; preds = %bb3, %bb2
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !432
  %27 = load i64, i64* %26, align 8, !dbg !432, !range !433, !noundef !140
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !432
  %29 = load i64, i64* %28, align 8, !dbg !432
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !432
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !432
  ret { i64, i64 } %31, !dbg !432
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h48ab1638bb420a1eE"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !434 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill4 = alloca i8, align 1
  %a.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill2 = alloca i64, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i8 }, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !436, metadata !DIExpression()), !dbg !441
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !437, metadata !DIExpression()), !dbg !442
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !443
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !444, metadata !DIExpression()), !dbg !451
  store i64 %rhs, i64* %rhs.dbg.spill2, align 8, !dbg !452
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill2, metadata !447, metadata !DIExpression()), !dbg !451
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !451
  %4 = extractvalue { i64, i1 } %3, 0, !dbg !451
  %5 = extractvalue { i64, i1 } %3, 1, !dbg !451
  %6 = zext i1 %5 to i8, !dbg !451
  %7 = bitcast { i64, i8 }* %1 to i64*, !dbg !451
  store i64 %4, i64* %7, align 8, !dbg !451
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !451
  store i8 %6, i8* %8, align 8, !dbg !451
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !451
  %_13.0 = load i64, i64* %9, align 8, !dbg !451
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !451
  %11 = load i8, i8* %10, align 8, !dbg !451, !range !245, !noundef !140
  %_13.1 = trunc i8 %11 to i1, !dbg !451
  br label %bb5, !dbg !451

bb5:                                              ; preds = %start
  store i64 %_13.0, i64* %a.dbg.spill, align 8, !dbg !451
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !448, metadata !DIExpression()), !dbg !453
  %12 = zext i1 %_13.1 to i8, !dbg !451
  store i8 %12, i8* %b.dbg.spill, align 1, !dbg !451
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !450, metadata !DIExpression()), !dbg !453
  %13 = bitcast { i64, i8 }* %_5 to i64*, !dbg !453
  store i64 %_13.0, i64* %13, align 8, !dbg !453
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !453
  %15 = zext i1 %_13.1 to i8, !dbg !453
  store i8 %15, i8* %14, align 8, !dbg !453
  %16 = bitcast { i64, i8 }* %_5 to i64*, !dbg !454
  %a = load i64, i64* %16, align 8, !dbg !454
  store i64 %a, i64* %a.dbg.spill3, align 8, !dbg !454
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill3, metadata !438, metadata !DIExpression()), !dbg !455
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !456
  %18 = load i8, i8* %17, align 8, !dbg !456, !range !245, !noundef !140
  %b = trunc i8 %18 to i1, !dbg !456
  %19 = zext i1 %b to i8, !dbg !456
  store i8 %19, i8* %b.dbg.spill4, align 1, !dbg !456
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill4, metadata !440, metadata !DIExpression()), !dbg !457
  %20 = call i1 @llvm.expect.i1(i1 %b, i1 false), !dbg !458
  %21 = zext i1 %20 to i8, !dbg !458
  store i8 %21, i8* %0, align 1, !dbg !458
  %22 = load i8, i8* %0, align 1, !dbg !458, !range !245, !noundef !140
  %_8 = trunc i8 %22 to i1, !dbg !458
  br label %bb1, !dbg !458

bb1:                                              ; preds = %bb5
  br i1 %_8, label %bb2, label %bb3, !dbg !458

bb3:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !459
  store i64 %a, i64* %23, align 8, !dbg !459
  %24 = bitcast { i64, i64 }* %2 to i64*, !dbg !459
  store i64 1, i64* %24, align 8, !dbg !459
  br label %bb4, !dbg !460

bb2:                                              ; preds = %bb1
  %25 = bitcast { i64, i64 }* %2 to i64*, !dbg !461
  store i64 0, i64* %25, align 8, !dbg !461
  br label %bb4, !dbg !460

bb4:                                              ; preds = %bb3, %bb2
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !462
  %27 = load i64, i64* %26, align 8, !dbg !462, !range !433, !noundef !140
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !462
  %29 = load i64, i64* %28, align 8, !dbg !462
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !462
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !462
  ret { i64, i64 } %31, !dbg !462
}

; core::ptr::drop_in_place<alloc::vec::Vec<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17h7c47488e4f4ba9f1E"(%"alloc::vec::Vec<i32>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !463 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"alloc::vec::Vec<i32>"*, align 8
  store %"alloc::vec::Vec<i32>"* %_1, %"alloc::vec::Vec<i32>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"** %_1.dbg.spill, metadata !494, metadata !DIExpression()), !dbg !497
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h41f40f774e80318dE"(%"alloc::vec::Vec<i32>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !497

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<i32>"* %_1 to { i32*, i64 }*, !dbg !497
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<i32>>
  invoke void @"_ZN4core3ptr54drop_in_place$LT$alloc..raw_vec..RawVec$LT$i32$GT$$GT$17h1b855c137f48d48aE"({ i32*, i64 }* %1) #14
          to label %bb1 unwind label %abort, !dbg !497

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<i32>"* %_1 to { i32*, i64 }*, !dbg !497
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<i32>>
  call void @"_ZN4core3ptr54drop_in_place$LT$alloc..raw_vec..RawVec$LT$i32$GT$$GT$17h1b855c137f48d48aE"({ i32*, i64 }* %7), !dbg !497
  br label %bb2, !dbg !497

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !497
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #15, !dbg !497
  unreachable, !dbg !497

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !497
  %10 = load i8*, i8** %9, align 8, !dbg !497
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !497
  %12 = load i32, i32* %11, align 8, !dbg !497
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !497
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !497
  resume { i8*, i32 } %14, !dbg !497

bb2:                                              ; preds = %bb4
  ret void, !dbg !497
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr54drop_in_place$LT$alloc..raw_vec..RawVec$LT$i32$GT$$GT$17h1b855c137f48d48aE"({ i32*, i64 }* %_1) unnamed_addr #1 !dbg !498 {
start:
  %_1.dbg.spill = alloca { i32*, i64 }*, align 8
  store { i32*, i64 }* %_1, { i32*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %_1.dbg.spill, metadata !503, metadata !DIExpression()), !dbg !506
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h22055de03b59e758E"({ i32*, i64 }* align 8 %_1), !dbg !506
  br label %bb1, !dbg !506

bb1:                                              ; preds = %start
  ret void, !dbg !506
}

; core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17h46860c8a65c5d677E"({ i64*, i64 }* %_1) unnamed_addr #1 !dbg !507 {
start:
  %_1.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %_1, { i64*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %_1.dbg.spill, metadata !517, metadata !DIExpression()), !dbg !520
; call <alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop>::drop
  call void @"_ZN83_$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17h519becda5e36f13fE"({ i64*, i64 }* align 8 %_1), !dbg !520
  br label %bb1, !dbg !520

bb1:                                              ; preds = %start
  ret void, !dbg !520
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h04dfd1802f349fbdE"(i8* %ptr) unnamed_addr #0 !dbg !521 {
start:
  %ptr.dbg.spill2 = alloca i8*, align 8
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %_15 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_14 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_5 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !538, metadata !DIExpression()), !dbg !539
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !540, metadata !DIExpression()), !dbg !550
  store i8* %ptr, i8** %self.dbg.spill, align 8, !dbg !565
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !563, metadata !DIExpression()), !dbg !566
  store i8* %ptr, i8** %self.dbg.spill1, align 8, !dbg !566
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !567, metadata !DIExpression()), !dbg !574
  %3 = bitcast {}** %1 to i64*, !dbg !576
  store i64 0, i64* %3, align 8, !dbg !576
  %data_address = load {}*, {}** %1, align 8, !dbg !576
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !576
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !549, metadata !DIExpression()), !dbg !550
  br label %bb4, !dbg !576

bb4:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_15 to {}**, !dbg !550
  store {}* %data_address, {}** %4, align 8, !dbg !550
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_14 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !550
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !550
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_15 to i8*, !dbg !550
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !550
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_14 to i8**, !dbg !550
  %other = load i8*, i8** %8, align 8, !dbg !550
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !550
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !573, metadata !DIExpression()), !dbg !574
  %9 = icmp eq i8* %ptr, %other, !dbg !574
  %10 = zext i1 %9 to i8, !dbg !574
  store i8 %10, i8* %0, align 1, !dbg !574
  %11 = load i8, i8* %0, align 1, !dbg !574, !range !245, !noundef !140
  %_3 = trunc i8 %11 to i1, !dbg !574
  br label %bb5, !dbg !574

bb5:                                              ; preds = %bb4
  %_2 = xor i1 %_3, true, !dbg !586
  br i1 %_2, label %bb1, label %bb2, !dbg !586

bb2:                                              ; preds = %bb5
  %12 = bitcast i8** %2 to {}**, !dbg !587
  store {}* null, {}** %12, align 8, !dbg !587
  br label %bb3, !dbg !588

bb1:                                              ; preds = %bb5
  store i8* %ptr, i8** %ptr.dbg.spill2, align 8, !dbg !589
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill2, metadata !590, metadata !DIExpression()), !dbg !593
  store i8* %ptr, i8** %_5, align 8, !dbg !593
  %13 = load i8*, i8** %_5, align 8, !dbg !595, !nonnull !140, !noundef !140
  store i8* %13, i8** %2, align 8, !dbg !595
  br label %bb3, !dbg !588

bb3:                                              ; preds = %bb2, %bb1
  %14 = load i8*, i8** %2, align 8, !dbg !596
  ret i8* %14, !dbg !596
}

; core::alloc::layout::Layout::from_size_valid_align
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17h61365ef5c3cb2737E(i64 %size, i64 %align) unnamed_addr #0 !dbg !597 {
start:
  %n.dbg.spill = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %_11 = alloca { i64, i64 }, align 8
  %self1 = alloca i64, align 8
  %self = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %size, i64* %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !620, metadata !DIExpression()), !dbg !622
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !621, metadata !DIExpression()), !dbg !623
  call void @llvm.dbg.declare(metadata i64* %self, metadata !624, metadata !DIExpression()), !dbg !635
  call void @llvm.dbg.declare(metadata i64* %self1, metadata !637, metadata !DIExpression()), !dbg !644
  store i64 %align, i64* %self1, align 8, !dbg !636
  %_15 = load i64, i64* %self1, align 8, !dbg !644, !range !645, !noundef !140
  store i64 %_15, i64* %n.dbg.spill, align 8, !dbg !644
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !646, metadata !DIExpression()), !dbg !661
  store i64 %_15, i64* %self, align 8, !dbg !661
  %_8 = load i64, i64* %self, align 8, !dbg !635
  %_7 = sub i64 %_8, 1, !dbg !663
  %_5 = sub i64 9223372036854775807, %_7, !dbg !664
  %_3 = icmp ugt i64 %size, %_5, !dbg !665
  br i1 %_3, label %bb1, label %bb2, !dbg !665

bb2:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %_11 to i64*, !dbg !666
  store i64 %size, i64* %1, align 8, !dbg !666
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !666
  store i64 %align, i64* %2, align 8, !dbg !666
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 0, !dbg !667
  %4 = load i64, i64* %3, align 8, !dbg !667
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !667
  %6 = load i64, i64* %5, align 8, !dbg !667, !range !645, !noundef !140
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !667
  store i64 %4, i64* %7, align 8, !dbg !667
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !667
  store i64 %6, i64* %8, align 8, !dbg !667
  br label %bb3, !dbg !668

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !669
  store i64 0, i64* %9, align 8, !dbg !669
  br label %bb3, !dbg !668

bb3:                                              ; preds = %bb2, %bb1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !668
  %11 = load i64, i64* %10, align 8, !dbg !668
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !668
  %13 = load i64, i64* %12, align 8, !dbg !668, !range !206, !noundef !140
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !668
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !668
  ret { i64, i64 } %15, !dbg !668
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hacb403b6aba41249E(i64 %n) unnamed_addr #0 !dbg !670 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill5 = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill3 = alloca %"core::alloc::layout::LayoutError", align 1
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %n.dbg.spill = alloca i64, align 8
  %self1 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !674, metadata !DIExpression()), !dbg !699
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !700, metadata !DIExpression()), !dbg !746
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !748, metadata !DIExpression()), !dbg !759
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %err.dbg.spill, metadata !755, metadata !DIExpression()), !dbg !759
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill, metadata !677, metadata !DIExpression()), !dbg !760
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill2, metadata !761, metadata !DIExpression()), !dbg !773
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !743, metadata !DIExpression()), !dbg !775
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill3, metadata !768, metadata !DIExpression()), !dbg !776
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h48ab1638bb420a1eE"(i64 4, i64 %n), !dbg !747
  store { i64, i64 } %2, { i64, i64 }* %self1, align 8, !dbg !747
  br label %bb1, !dbg !747

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %self1 to i64*, !dbg !759
  %_15 = load i64, i64* %3, align 8, !dbg !759, !range !433, !noundef !140
  switch i64 %_15, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !759

bb9:                                              ; preds = %bb1
  unreachable, !dbg !759

bb8:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %self to i64*, !dbg !759
  store i64 1, i64* %4, align 8, !dbg !759
  br label %bb11, !dbg !759

bb10:                                             ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !759
  %v = load i64, i64* %5, align 8, !dbg !759
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !759
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !756, metadata !DIExpression()), !dbg !777
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !777
  store i64 %v, i64* %6, align 8, !dbg !777
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !777
  store i64 0, i64* %7, align 8, !dbg !777
  br label %bb11, !dbg !759

bb11:                                             ; preds = %bb8, %bb10
  %8 = bitcast { i64, i64 }* %self to i64*, !dbg !746
  %_18 = load i64, i64* %8, align 8, !dbg !746, !range !433, !noundef !140
  switch i64 %_18, label %bb13 [
    i64 0, label %bb14
    i64 1, label %bb12
  ], !dbg !746

bb13:                                             ; preds = %bb11
  unreachable, !dbg !746

bb14:                                             ; preds = %bb11
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !746
  %v4 = load i64, i64* %9, align 8, !dbg !746
  store i64 %v4, i64* %v.dbg.spill5, align 8, !dbg !746
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill5, metadata !740, metadata !DIExpression()), !dbg !778
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !778
  store i64 %v4, i64* %10, align 8, !dbg !778
  %11 = bitcast { i64, i64 }* %_3 to i64*, !dbg !778
  store i64 0, i64* %11, align 8, !dbg !778
  br label %bb2, !dbg !746

bb12:                                             ; preds = %bb11
  %12 = bitcast { i64, i64 }* %_3 to i64*, !dbg !775
  store i64 1, i64* %12, align 8, !dbg !775
  br label %bb2, !dbg !746

bb2:                                              ; preds = %bb14, %bb12
  %13 = bitcast { i64, i64 }* %_3 to i64*, !dbg !747
  %_9 = load i64, i64* %13, align 8, !dbg !747, !range !433, !noundef !140
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !747

bb4:                                              ; preds = %bb2
  unreachable, !dbg !747

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !747
  %val = load i64, i64* %14, align 8, !dbg !747
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !747
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !697, metadata !DIExpression()), !dbg !779
  store i64 %val, i64* %array_size.dbg.spill, align 8, !dbg !779
  call void @llvm.dbg.declare(metadata i64* %array_size.dbg.spill, metadata !675, metadata !DIExpression()), !dbg !780
  store i64 4, i64* %align.dbg.spill, align 8, !dbg !781
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !791, metadata !DIExpression()), !dbg !805
  store i64 4, i64* %0, align 8, !dbg !805
  %_14 = load i64, i64* %0, align 8, !dbg !805, !range !645, !noundef !140
  br label %bb15, !dbg !805

bb5:                                              ; preds = %bb2
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h37595fa91c3f459cE"(), !dbg !776
  br label %bb16, !dbg !776

bb16:                                             ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !776
  store i64 0, i64* %15, align 8, !dbg !776
  br label %bb7, !dbg !807

bb7:                                              ; preds = %bb6, %bb16
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !807
  %17 = load i64, i64* %16, align 8, !dbg !807
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !807
  %19 = load i64, i64* %18, align 8, !dbg !807, !range !206, !noundef !140
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !807
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !807
  ret { i64, i64 } %21, !dbg !807

bb15:                                             ; preds = %bb3
; call core::alloc::layout::Layout::from_size_valid_align
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17h61365ef5c3cb2737E(i64 %val, i64 %_14), !dbg !808
  store { i64, i64 } %22, { i64, i64 }* %1, align 8, !dbg !808
  br label %bb6, !dbg !808

bb6:                                              ; preds = %bb15
  br label %bb7, !dbg !807
}

; core::clone::impls::<impl core::clone::Clone for i32>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i32$GT$5clone17h7a924f1f3d20347eE"(i32* align 4 %self) unnamed_addr #0 !dbg !809 {
start:
  %self.dbg.spill = alloca i32*, align 8
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !818, metadata !DIExpression()), !dbg !819
  %0 = load i32, i32* %self, align 4, !dbg !820
  ret i32 %0, !dbg !821
}

; core::clone::impls::<impl core::clone::Clone for usize>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h7e0d3ce2d87c0f13E"(i64* align 8 %self) unnamed_addr #0 !dbg !822 {
start:
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !827, metadata !DIExpression()), !dbg !828
  %0 = load i64, i64* %self, align 8, !dbg !829
  ret i64 %0, !dbg !830
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define [5 x i32]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h36f4bc00422b1ce6E"([0 x [5 x i32]]* align 4 %self.0, i64 %self.1) unnamed_addr #0 !dbg !831 {
start:
  %self.dbg.spill = alloca { [0 x [5 x i32]]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x [5 x i32]]*, i64 }, { [0 x [5 x i32]]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x [5 x i32]]* %self.0, [0 x [5 x i32]]** %0, align 8
  %1 = getelementptr inbounds { [0 x [5 x i32]]*, i64 }, { [0 x [5 x i32]]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x [5 x i32]]*, i64 }* %self.dbg.spill, metadata !847, metadata !DIExpression()), !dbg !850
  %2 = bitcast [0 x [5 x i32]]* %self.0 to [5 x i32]*, !dbg !851
  ret [5 x i32]* %2, !dbg !852
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h44bbeca8685a138cE"([0 x i32]* align 4 %self.0, i64 %self.1) unnamed_addr #0 !dbg !853 {
start:
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i32]* %self.0, [0 x i32]** %0, align 8
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !863, metadata !DIExpression()), !dbg !864
  %2 = bitcast [0 x i32]* %self.0 to i32*, !dbg !865
  ret i32* %2, !dbg !866
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define [4 x [5 x i32]]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h9f1040c218b50131E"([0 x [4 x [5 x i32]]]* align 4 %self.0, i64 %self.1) unnamed_addr #0 !dbg !867 {
start:
  %self.dbg.spill = alloca { [0 x [4 x [5 x i32]]]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x [4 x [5 x i32]]]*, i64 }, { [0 x [4 x [5 x i32]]]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x [4 x [5 x i32]]]* %self.0, [0 x [4 x [5 x i32]]]** %0, align 8
  %1 = getelementptr inbounds { [0 x [4 x [5 x i32]]]*, i64 }, { [0 x [4 x [5 x i32]]]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x [4 x [5 x i32]]]*, i64 }* %self.dbg.spill, metadata !878, metadata !DIExpression()), !dbg !881
  %2 = bitcast [0 x [4 x [5 x i32]]]* %self.0 to [4 x [5 x i32]]*, !dbg !882
  ret [4 x [5 x i32]]* %2, !dbg !883
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hbc3c92b75ce6dbfaE"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !884 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !893, metadata !DIExpression()), !dbg !896
  %2 = bitcast [0 x i8]* %self.0 to i8*, !dbg !897
  ret i8* %2, !dbg !898
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hd816d9d6afa269d2E"([0 x i32]* align 4 %self.0, i64 %self.1) unnamed_addr #0 !dbg !899 {
start:
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i32]* %self.0, [0 x i32]** %0, align 8
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !909, metadata !DIExpression()), !dbg !912
  %2 = bitcast [0 x i32]* %self.0 to i32*, !dbg !913
  ret i32* %2, !dbg !914
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hc19f3106568bca55E"([0 x i32]* align 4 %self.0, i64 %self.1) unnamed_addr #0 !dbg !915 {
start:
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i32]* %self.0, [0 x i32]** %0, align 8
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !923, metadata !DIExpression()), !dbg !924
  %2 = bitcast [0 x i32]* %self.0 to i32*, !dbg !925
  ret i32* %2, !dbg !926
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h165ad2397c373541E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i8* %1, i64 %2, i64* align 8 %op) unnamed_addr #0 !dbg !927 {
start:
  %t.dbg.spill = alloca { i8*, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %op.dbg.spill = alloca i64*, align 8
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::AllocError" }, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !975, metadata !DIExpression()), !dbg !984
  store i64* %op, i64** %op.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %op.dbg.spill, metadata !976, metadata !DIExpression()), !dbg !985
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !979, metadata !DIExpression()), !dbg !986
  store i8 1, i8* %_11, align 1, !dbg !987
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !987
  %6 = load {}*, {}** %5, align 8, !dbg !987
  %7 = icmp eq {}* %6, null, !dbg !987
  %_3 = select i1 %7, i64 1, i64 0, !dbg !987
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !988

bb2:                                              ; preds = %start
  unreachable, !dbg !987

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0, !dbg !989
  %t.0 = load i8*, i8** %8, align 8, !dbg !989, !nonnull !140, !noundef !140
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !989
  %t.1 = load i64, i64* %9, align 8, !dbg !989
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !989
  store i8* %t.0, i8** %10, align 8, !dbg !989
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !989
  store i64 %t.1, i64* %11, align 8, !dbg !989
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %t.dbg.spill, metadata !977, metadata !DIExpression()), !dbg !990
  %12 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*, !dbg !991
  %13 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %12, i32 0, i32 1, !dbg !991
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 0, !dbg !991
  store i8* %t.0, i8** %14, align 8, !dbg !991
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 1, !dbg !991
  store i64 %t.1, i64* %15, align 8, !dbg !991
  %16 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !991
  store i64 0, i64* %16, align 8, !dbg !991
  br label %bb7, !dbg !992

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !993
  %17 = bitcast { %"core::alloc::AllocError" }* %_9 to %"core::alloc::AllocError"*, !dbg !993
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hf3f1149945585880E"(i64* align 8 %op), !dbg !993
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !993
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !993
  br label %bb4, !dbg !993

bb4:                                              ; preds = %bb1
  %19 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !994
  %20 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %19, i32 0, i32 1, !dbg !994
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !994
  store i64 %_7.0, i64* %21, align 8, !dbg !994
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !994
  store i64 %_7.1, i64* %22, align 8, !dbg !994
  %23 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !994
  store i64 1, i64* %23, align 8, !dbg !994
  br label %bb7, !dbg !995

bb7:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !996, !range !245, !noundef !140
  %25 = trunc i8 %24 to i1, !dbg !996
  br i1 %25, label %bb6, label %bb5, !dbg !996

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !997

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !996
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h7c2c49ffc86eed49E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !998 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca {}, align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !1033, metadata !DIExpression()), !dbg !1042
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %op.dbg.spill, metadata !1034, metadata !DIExpression()), !dbg !1043
  call void @llvm.dbg.declare(metadata {}* %t.dbg.spill, metadata !1035, metadata !DIExpression()), !dbg !1044
  store i8 1, i8* %_11, align 1, !dbg !1045
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1045
  %6 = load i64, i64* %5, align 8, !dbg !1045, !range !1046, !noundef !140
  %7 = sub i64 %6, -9223372036854775807, !dbg !1045
  %8 = icmp eq i64 %7, 0, !dbg !1045
  %_3 = select i1 %8, i64 0, i64 1, !dbg !1045
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !1047

bb2:                                              ; preds = %start
  unreachable, !dbg !1045

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %2 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !1048
  %10 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"* %9 to {}*, !dbg !1048
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !1048
  store i64 -9223372036854775807, i64* %11, align 8, !dbg !1048
  br label %bb7, !dbg !1049

bb1:                                              ; preds = %start
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !1050
  %e.0 = load i64, i64* %12, align 8, !dbg !1050
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1050
  %e.1 = load i64, i64* %13, align 8, !dbg !1050, !range !206, !noundef !140
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !1050
  store i64 %e.0, i64* %14, align 8, !dbg !1050
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !1050
  store i64 %e.1, i64* %15, align 8, !dbg !1050
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !1037, metadata !DIExpression()), !dbg !1051
  store i8 0, i8* %_11, align 1, !dbg !1052
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !1052
  store i64 %e.0, i64* %16, align 8, !dbg !1052
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !1052
  store i64 %e.1, i64* %17, align 8, !dbg !1052
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !1052
  %19 = load i64, i64* %18, align 8, !dbg !1052
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !1052
  %21 = load i64, i64* %20, align 8, !dbg !1052, !range !206, !noundef !140
; call alloc::raw_vec::handle_reserve::{{closure}}
  %22 = call { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h4c6e33af5edd4a36E"(i64 %19, i64 %21), !dbg !1052
  %_7.0 = extractvalue { i64, i64 } %22, 0, !dbg !1052
  %_7.1 = extractvalue { i64, i64 } %22, 1, !dbg !1052
  br label %bb4, !dbg !1052

bb4:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !1053
  store i64 %_7.0, i64* %23, align 8, !dbg !1053
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !1053
  store i64 %_7.1, i64* %24, align 8, !dbg !1053
  br label %bb7, !dbg !1054

bb7:                                              ; preds = %bb3, %bb4
  %25 = load i8, i8* %_11, align 1, !dbg !1055, !range !245, !noundef !140
  %26 = trunc i8 %25 to i1, !dbg !1055
  br i1 %26, label %bb6, label %bb5, !dbg !1055

bb5:                                              ; preds = %bb6, %bb7
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !1056
  %28 = load i64, i64* %27, align 8, !dbg !1056
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !1056
  %30 = load i64, i64* %29, align 8, !dbg !1056, !range !1046, !noundef !140
  %31 = insertvalue { i64, i64 } undef, i64 %28, 0, !dbg !1056
  %32 = insertvalue { i64, i64 } %31, i64 %30, 1, !dbg !1056
  ret { i64, i64 } %32, !dbg !1056

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !1055
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h8e9bd93aa89f042cE"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !1057 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::layout::LayoutError" }, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !1076, metadata !DIExpression()), !dbg !1084
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]"* %op.dbg.spill, metadata !1077, metadata !DIExpression()), !dbg !1085
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !1080, metadata !DIExpression()), !dbg !1086
  store i8 1, i8* %_11, align 1, !dbg !1087
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1087
  %6 = load i64, i64* %5, align 8, !dbg !1087, !range !206, !noundef !140
  %7 = icmp eq i64 %6, 0, !dbg !1087
  %_3 = select i1 %7, i64 1, i64 0, !dbg !1087
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !1088

bb2:                                              ; preds = %start
  unreachable, !dbg !1087

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !1089
  %t.0 = load i64, i64* %8, align 8, !dbg !1089
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1089
  %t.1 = load i64, i64* %9, align 8, !dbg !1089, !range !645, !noundef !140
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !1089
  store i64 %t.0, i64* %10, align 8, !dbg !1089
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !1089
  store i64 %t.1, i64* %11, align 8, !dbg !1089
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !1078, metadata !DIExpression()), !dbg !1090
  %12 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !1091
  %13 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %12, i32 0, i32 1, !dbg !1091
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !1091
  store i64 %t.0, i64* %14, align 8, !dbg !1091
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !1091
  store i64 %t.1, i64* %15, align 8, !dbg !1091
  %16 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !1091
  store i64 0, i64* %16, align 8, !dbg !1091
  br label %bb7, !dbg !1092

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !1093
  %17 = bitcast { %"core::alloc::layout::LayoutError" }* %_9 to %"core::alloc::layout::LayoutError"*, !dbg !1093
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h279df25bbe7182e6E"(), !dbg !1093
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !1093
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !1093
  br label %bb4, !dbg !1093

bb4:                                              ; preds = %bb1
  %19 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !1094
  %20 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %19, i32 0, i32 1, !dbg !1094
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !1094
  store i64 %_7.0, i64* %21, align 8, !dbg !1094
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !1094
  store i64 %_7.1, i64* %22, align 8, !dbg !1094
  %23 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !1094
  store i64 1, i64* %23, align 8, !dbg !1094
  br label %bb7, !dbg !1095

bb7:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !1096, !range !245, !noundef !140
  %25 = trunc i8 %24 to i1, !dbg !1096
  br i1 %25, label %bb6, label %bb5, !dbg !1096

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !1097

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !1096
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h37595fa91c3f459cE"() unnamed_addr #1 !dbg !1098 {
start:
  %t.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %t.dbg.spill, metadata !1104, metadata !DIExpression()), !dbg !1107
  ret void, !dbg !1108
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h841464a645d964abE"() unnamed_addr #1 !dbg !1109 {
start:
  %t.dbg.spill = alloca %"core::alloc::AllocError", align 1
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %t.dbg.spill, metadata !1113, metadata !DIExpression()), !dbg !1116
  ret void, !dbg !1117
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h91aa860e841d02efE"(i64 %t.0, i64 %t.1) unnamed_addr #1 !dbg !1118 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0
  store i64 %t.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1
  store i64 %t.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !1122, metadata !DIExpression()), !dbg !1125
  %2 = insertvalue { i64, i64 } undef, i64 %t.0, 0, !dbg !1126
  %3 = insertvalue { i64, i64 } %2, i64 %t.1, 1, !dbg !1126
  ret { i64, i64 } %3, !dbg !1126
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h846831bd743ffb62E"(i64 %self.0, i64 %self.1) unnamed_addr #1 !dbg !1127 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !1130, metadata !DIExpression()), !dbg !1134
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %2 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h07c1f08a15bfc68eE"(i64 %self.0, i64 %self.1), !dbg !1135
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !1135
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !1135
  br label %bb1, !dbg !1135

bb1:                                              ; preds = %start
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !1136
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !1136
  ret { i64, i64 } %6, !dbg !1136
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h9dd4420d8f9307edE"(i8* %self) unnamed_addr #1 !dbg !1137 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1139, metadata !DIExpression()), !dbg !1143
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h90c671efbcbc3846E"(i8* %self), !dbg !1144
  br label %bb1, !dbg !1144

bb1:                                              ; preds = %start
  ret i8* %0, !dbg !1145
}

; <i32 as alloc::vec::is_zero::IsZero>::is_zero
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN51_$LT$i32$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero17hf9193789f5d15d37E"(i32* align 4 %self) unnamed_addr #0 !dbg !1146 {
start:
  %self.dbg.spill = alloca i32*, align 8
  %_3 = alloca i32, align 4
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !1153, metadata !DIExpression()), !dbg !1154
  %_4 = load i32, i32* %self, align 4, !dbg !1155
  store i32 %_4, i32* %_3, align 4, !dbg !1156
  %0 = load i32, i32* %_3, align 4, !dbg !1156
; call <i32 as alloc::vec::is_zero::IsZero>::is_zero::{{closure}}
  %1 = call zeroext i1 @"_ZN51_$LT$i32$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero28_$u7b$$u7b$closure$u7d$$u7d$17hd69734bb95f27cc1E"(%"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"* align 1 bitcast (<{}>* @alloc99 to %"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"*), i32 %0), !dbg !1156
  br label %bb1, !dbg !1156

bb1:                                              ; preds = %start
  ret i1 %1, !dbg !1157
}

; <i32 as alloc::vec::is_zero::IsZero>::is_zero::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN51_$LT$i32$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero28_$u7b$$u7b$closure$u7d$$u7d$17hd69734bb95f27cc1E"(%"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"* align 1 %_1, i32 %x) unnamed_addr #0 !dbg !1158 {
start:
  %x.dbg.spill = alloca i32, align 4
  %_1.dbg.spill = alloca %"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"*, align 8
  store %"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"* %_1, %"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"** %_1.dbg.spill, metadata !1166, metadata !DIExpression()), !dbg !1167
  store i32 %x, i32* %x.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill, metadata !1165, metadata !DIExpression()), !dbg !1168
  %0 = icmp eq i32 %x, 0, !dbg !1169
  ret i1 %0, !dbg !1170
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hffe6c8eac2fd4d5aE"(%"alloc::vec::Vec<i32>"* align 8 %self) unnamed_addr #0 !dbg !1171 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i32*, align 8
  %ptr.dbg.spill = alloca i32*, align 8
  %self.dbg.spill5 = alloca i32*, align 8
  %self.dbg.spill4 = alloca i32*, align 8
  %self.dbg.spill2 = alloca { i32*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<i32>"*, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<i32>"* %self, %"alloc::vec::Vec<i32>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"** %self.dbg.spill, metadata !1177, metadata !DIExpression()), !dbg !1180
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !1181, metadata !DIExpression()), !dbg !1186
  %self1 = bitcast %"alloc::vec::Vec<i32>"* %self to { i32*, i64 }*, !dbg !1197
  store { i32*, i64 }* %self1, { i32*, i64 }** %self.dbg.spill2, align 8, !dbg !1197
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill2, metadata !1198, metadata !DIExpression()), !dbg !1206
  %2 = bitcast { i32*, i64 }* %self1 to i32**, !dbg !1206
  %self3 = load i32*, i32** %2, align 8, !dbg !1206, !nonnull !140, !noundef !140
  store i32* %self3, i32** %self.dbg.spill4, align 8, !dbg !1206
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill4, metadata !1207, metadata !DIExpression()), !dbg !1213
  store i32* %self3, i32** %self.dbg.spill5, align 8, !dbg !1213
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill5, metadata !1215, metadata !DIExpression()), !dbg !1221
  store i32* %self3, i32** %ptr.dbg.spill, align 8, !dbg !1221
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill, metadata !1178, metadata !DIExpression()), !dbg !1223
  store i32* %self3, i32** %self.dbg.spill6, align 8, !dbg !1196
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill6, metadata !1194, metadata !DIExpression()), !dbg !1224
  %self7 = bitcast i32* %self3 to i8*, !dbg !1224
  store i8* %self7, i8** %self.dbg.spill8, align 8, !dbg !1224
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !1225, metadata !DIExpression()), !dbg !1230
  %3 = bitcast {}** %1 to i64*, !dbg !1232
  store i64 0, i64* %3, align 8, !dbg !1232
  %data_address = load {}*, {}** %1, align 8, !dbg !1232
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !1232
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1185, metadata !DIExpression()), !dbg !1186
  br label %bb2, !dbg !1232

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to {}**, !dbg !1186
  store {}* %data_address, {}** %4, align 8, !dbg !1186
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !1186
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !1186
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to i8*, !dbg !1186
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !1186
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to i8**, !dbg !1186
  %other = load i8*, i8** %8, align 8, !dbg !1186
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !1186
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !1229, metadata !DIExpression()), !dbg !1230
  %9 = icmp eq i8* %self7, %other, !dbg !1230
  %10 = zext i1 %9 to i8, !dbg !1230
  store i8 %10, i8* %0, align 1, !dbg !1230
  %11 = load i8, i8* %0, align 1, !dbg !1230, !range !245, !noundef !140
  %_5 = trunc i8 %11 to i1, !dbg !1230
  br label %bb3, !dbg !1230

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true, !dbg !1238
  call void @llvm.assume(i1 %_4), !dbg !1239
  br label %bb1, !dbg !1239

bb1:                                              ; preds = %bb3
  ret i32* %self3, !dbg !1240
}

; alloc::vec::Vec<T,A>::extend_with
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$11extend_with17h05f27130d0fb2a4aE"(%"alloc::vec::Vec<i32>"* align 8 %self, i64 %n, i32 %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1241 {
start:
  %self.dbg.spill15 = alloca { i64*, i64 }*, align 8
  %dst.dbg.spill14 = alloca i32*, align 8
  %self.dbg.spill12 = alloca { i64*, i64 }*, align 8
  %1 = alloca i32*, align 8
  %self.dbg.spill11 = alloca i32*, align 8
  %dst.dbg.spill = alloca i32*, align 8
  %self.dbg.spill8 = alloca { i64, i64 }*, align 8
  %len.dbg.spill = alloca i64*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill7 = alloca i64, align 8
  %self.dbg.spill6 = alloca i32*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill5 = alloca %"alloc::vec::Vec<i32>"*, align 8
  %self.dbg.spill4 = alloca i32*, align 8
  %3 = alloca { i8*, i32 }, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<i32>"*, align 8
  %_35 = alloca i8, align 1
  %src2 = alloca i32, align 4
  %src = alloca i32, align 4
  %_19 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %local_len = alloca { i64*, i64 }, align 8
  %ptr = alloca i32*, align 8
  %value = alloca i32, align 4
  store i32 %0, i32* %value, align 4
  store %"alloc::vec::Vec<i32>"* %self, %"alloc::vec::Vec<i32>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"** %self.dbg.spill, metadata !1248, metadata !DIExpression()), !dbg !1266
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1249, metadata !DIExpression()), !dbg !1267
  call void @llvm.dbg.declare(metadata i32* %value, metadata !1250, metadata !DIExpression()), !dbg !1268
  call void @llvm.dbg.declare(metadata i32** %ptr, metadata !1251, metadata !DIExpression()), !dbg !1269
  call void @llvm.dbg.declare(metadata { i64*, i64 }* %local_len, metadata !1253, metadata !DIExpression()), !dbg !1270
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !1271, metadata !DIExpression()), !dbg !1283
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter, metadata !1255, metadata !DIExpression()), !dbg !1285
  call void @llvm.dbg.declare(metadata i32* %src, metadata !1286, metadata !DIExpression()), !dbg !1293
  call void @llvm.dbg.declare(metadata i32* %src2, metadata !1295, metadata !DIExpression()), !dbg !1300
  store i8 1, i8* %_35, align 1, !dbg !1302
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h10f06679282f1355E"(%"alloc::vec::Vec<i32>"* align 8 %self, i64 %n)
          to label %bb1 unwind label %cleanup, !dbg !1302

bb17:                                             ; preds = %bb13, %cleanup
  %4 = load i8, i8* %_35, align 1, !dbg !1303, !range !245, !noundef !140
  %5 = trunc i8 %4 to i1, !dbg !1303
  br i1 %5, label %bb16, label %bb14, !dbg !1303

cleanup:                                          ; preds = %bb10, %bb1, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb17

bb1:                                              ; preds = %start
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %self3 = invoke i32* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hffe6c8eac2fd4d5aE"(%"alloc::vec::Vec<i32>"* align 8 %self)
          to label %bb2 unwind label %cleanup, !dbg !1304

bb2:                                              ; preds = %bb1
  store i32* %self3, i32** %self.dbg.spill4, align 8, !dbg !1304
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill4, metadata !1305, metadata !DIExpression()), !dbg !1312
  store %"alloc::vec::Vec<i32>"* %self, %"alloc::vec::Vec<i32>"** %self.dbg.spill5, align 8, !dbg !1313
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"** %self.dbg.spill5, metadata !1314, metadata !DIExpression()), !dbg !1320
  %11 = getelementptr inbounds %"alloc::vec::Vec<i32>", %"alloc::vec::Vec<i32>"* %self, i32 0, i32 1, !dbg !1320
  %count = load i64, i64* %11, align 8, !dbg !1320
  store i64 %count, i64* %count.dbg.spill, align 8, !dbg !1320
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !1311, metadata !DIExpression()), !dbg !1312
  store i32* %self3, i32** %self.dbg.spill6, align 8, !dbg !1312
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill6, metadata !1321, metadata !DIExpression()), !dbg !1329
  store i64 %count, i64* %count.dbg.spill7, align 8, !dbg !1312
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill7, metadata !1328, metadata !DIExpression()), !dbg !1329
  %12 = getelementptr inbounds i32, i32* %self3, i64 %count, !dbg !1329
  store i32* %12, i32** %2, align 8, !dbg !1329
  %_39 = load i32*, i32** %2, align 8, !dbg !1329
  br label %bb18, !dbg !1329

bb18:                                             ; preds = %bb2
  store i32* %_39, i32** %ptr, align 8, !dbg !1329
  %_14 = getelementptr inbounds %"alloc::vec::Vec<i32>", %"alloc::vec::Vec<i32>"* %self, i32 0, i32 1, !dbg !1331
  store i64* %_14, i64** %len.dbg.spill, align 8, !dbg !1331
  call void @llvm.dbg.declare(metadata i64** %len.dbg.spill, metadata !1332, metadata !DIExpression()), !dbg !1339
  %_43 = load i64, i64* %_14, align 8, !dbg !1339
  %13 = bitcast { i64*, i64 }* %local_len to i64**, !dbg !1339
  store i64* %_14, i64** %13, align 8, !dbg !1339
  %14 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !1339
  store i64 %_43, i64* %14, align 8, !dbg !1339
  %15 = bitcast { i64, i64 }* %self1 to i64*, !dbg !1284
  store i64 1, i64* %15, align 8, !dbg !1284
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !1284
  store i64 %n, i64* %16, align 8, !dbg !1284
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !1283
  %_15.0 = load i64, i64* %17, align 8, !dbg !1283
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !1283
  %_15.1 = load i64, i64* %18, align 8, !dbg !1283
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0, !dbg !1284
  store i64 %_15.0, i64* %19, align 8, !dbg !1284
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1, !dbg !1284
  store i64 %_15.1, i64* %20, align 8, !dbg !1284
  br label %bb3, !dbg !1341

bb3:                                              ; preds = %bb20, %bb18
  store { i64, i64 }* %iter, { i64, i64 }** %self.dbg.spill8, align 8, !dbg !1285
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill8, metadata !1342, metadata !DIExpression()), !dbg !1352
; invoke <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %21 = invoke { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h663205a6379ad5f3E"({ i64, i64 }* align 8 %iter)
          to label %bb19 unwind label %cleanup9, !dbg !1352

bb13:                                             ; preds = %cleanup9
; invoke core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17h46860c8a65c5d677E"({ i64*, i64 }* %local_len) #14
          to label %bb17 unwind label %abort, !dbg !1353

cleanup9:                                         ; preds = %bb8, %bb4, %bb3
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb13

bb19:                                             ; preds = %bb3
  store { i64, i64 } %21, { i64, i64 }* %_19, align 8, !dbg !1352
  %27 = bitcast { i64, i64 }* %_19 to i64*, !dbg !1285
  %_22 = load i64, i64* %27, align 8, !dbg !1285, !range !433, !noundef !140
  switch i64 %_22, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ], !dbg !1285

bb5:                                              ; preds = %bb19
  unreachable, !dbg !1285

bb6:                                              ; preds = %bb19
  %_29 = icmp ugt i64 %n, 0, !dbg !1354
  br i1 %_29, label %bb8, label %bb10, !dbg !1354

bb4:                                              ; preds = %bb19
  %dst = load i32*, i32** %ptr, align 8, !dbg !1355
  store i32* %dst, i32** %dst.dbg.spill, align 8, !dbg !1355
  call void @llvm.dbg.declare(metadata i32** %dst.dbg.spill, metadata !1292, metadata !DIExpression()), !dbg !1293
; invoke <alloc::vec::ExtendElement<T> as alloc::vec::ExtendWith<T>>::next
  %28 = invoke i32 @"_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4next17hb147526a62d0f643E"(i32* align 4 %value)
          to label %bb7 unwind label %cleanup9, !dbg !1356

bb7:                                              ; preds = %bb4
  store i32 %28, i32* %src, align 4, !dbg !1356
  %29 = bitcast i32* %dst to i8*, !dbg !1293
  %30 = bitcast i32* %src to i8*, !dbg !1293
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 4, i1 false), !dbg !1293
  %self10 = load i32*, i32** %ptr, align 8, !dbg !1357
  store i32* %self10, i32** %self.dbg.spill11, align 8, !dbg !1357
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill11, metadata !1358, metadata !DIExpression()), !dbg !1363
  %31 = getelementptr inbounds i32, i32* %self10, i64 1, !dbg !1363
  store i32* %31, i32** %1, align 8, !dbg !1363
  %_50 = load i32*, i32** %1, align 8, !dbg !1363
  br label %bb20, !dbg !1363

bb20:                                             ; preds = %bb7
  store i32* %_50, i32** %ptr, align 8, !dbg !1364
  store { i64*, i64 }* %local_len, { i64*, i64 }** %self.dbg.spill12, align 8, !dbg !1365
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill12, metadata !1366, metadata !DIExpression()), !dbg !1374
  %32 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !1374
  %33 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !1374
  %34 = load i64, i64* %33, align 8, !dbg !1374
  %35 = add i64 %34, 1, !dbg !1374
  store i64 %35, i64* %32, align 8, !dbg !1374
  br label %bb3, !dbg !1341

bb10:                                             ; preds = %bb9, %bb6
; invoke core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17h46860c8a65c5d677E"({ i64*, i64 }* %local_len)
          to label %bb11 unwind label %cleanup, !dbg !1353

bb8:                                              ; preds = %bb6
  %dst13 = load i32*, i32** %ptr, align 8, !dbg !1375
  store i32* %dst13, i32** %dst.dbg.spill14, align 8, !dbg !1375
  call void @llvm.dbg.declare(metadata i32** %dst.dbg.spill14, metadata !1299, metadata !DIExpression()), !dbg !1300
  store i8 0, i8* %_35, align 1, !dbg !1376
  %_33 = load i32, i32* %value, align 4, !dbg !1376
; invoke <alloc::vec::ExtendElement<T> as alloc::vec::ExtendWith<T>>::last
  %36 = invoke i32 @"_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4last17h17905b74ccda79b9E"(i32 %_33)
          to label %bb9 unwind label %cleanup9, !dbg !1376

bb9:                                              ; preds = %bb8
  store i32 %36, i32* %src2, align 4, !dbg !1376
  %37 = bitcast i32* %dst13 to i8*, !dbg !1300
  %38 = bitcast i32* %src2 to i8*, !dbg !1300
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 4 %38, i64 4, i1 false), !dbg !1300
  store { i64*, i64 }* %local_len, { i64*, i64 }** %self.dbg.spill15, align 8, !dbg !1377
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill15, metadata !1378, metadata !DIExpression()), !dbg !1383
  %39 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !1383
  %40 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !1383
  %41 = load i64, i64* %40, align 8, !dbg !1383
  %42 = add i64 %41, 1, !dbg !1383
  store i64 %42, i64* %39, align 8, !dbg !1383
  br label %bb10, !dbg !1384

abort:                                            ; preds = %bb13
  %43 = landingpad { i8*, i32 }
          cleanup, !dbg !1385
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #15, !dbg !1385
  unreachable, !dbg !1385

bb11:                                             ; preds = %bb10
  %44 = load i8, i8* %_35, align 1, !dbg !1303, !range !245, !noundef !140
  %45 = trunc i8 %44 to i1, !dbg !1303
  br i1 %45, label %bb15, label %bb12, !dbg !1303

bb14:                                             ; preds = %bb16, %bb17
  %46 = bitcast { i8*, i32 }* %3 to i8**, !dbg !1385
  %47 = load i8*, i8** %46, align 8, !dbg !1385
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !1385
  %49 = load i32, i32* %48, align 8, !dbg !1385
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0, !dbg !1385
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1, !dbg !1385
  resume { i8*, i32 } %51, !dbg !1385

bb16:                                             ; preds = %bb17
  br label %bb14, !dbg !1303

bb12:                                             ; preds = %bb15, %bb11
  ret void, !dbg !1386

bb15:                                             ; preds = %bb11
  br label %bb12, !dbg !1303
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h10f06679282f1355E"(%"alloc::vec::Vec<i32>"* align 8 %self, i64 %additional) unnamed_addr #1 !dbg !1387 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<i32>"*, align 8
  store %"alloc::vec::Vec<i32>"* %self, %"alloc::vec::Vec<i32>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"** %self.dbg.spill, metadata !1391, metadata !DIExpression()), !dbg !1393
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !1392, metadata !DIExpression()), !dbg !1394
  %_4 = bitcast %"alloc::vec::Vec<i32>"* %self to { i32*, i64 }*, !dbg !1395
  %0 = getelementptr inbounds %"alloc::vec::Vec<i32>", %"alloc::vec::Vec<i32>"* %self, i32 0, i32 1, !dbg !1396
  %_5 = load i64, i64* %0, align 8, !dbg !1396
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hc4ee03f4f9f62be6E"({ i32*, i64 }* align 8 %_4, i64 %_5, i64 %additional), !dbg !1395
  br label %bb1, !dbg !1395

bb1:                                              ; preds = %start
  ret void, !dbg !1397
}

; alloc::vec::from_elem
; Function Attrs: nonlazybind uwtable
define void @_ZN5alloc3vec9from_elem17h24dc4e25bdbefd73E(%"alloc::vec::Vec<i32>"* sret(%"alloc::vec::Vec<i32>") %0, i32 %elem, i64 %n) unnamed_addr #1 !dbg !1398 {
start:
  %n.dbg.spill = alloca i64, align 8
  %elem.dbg.spill = alloca i32, align 4
  store i32 %elem, i32* %elem.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %elem.dbg.spill, metadata !1402, metadata !DIExpression()), !dbg !1404
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1403, metadata !DIExpression()), !dbg !1405
; call <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem
  call void @"_ZN62_$LT$T$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17hb933320d2d611d8fE"(%"alloc::vec::Vec<i32>"* sret(%"alloc::vec::Vec<i32>") %0, i32 %elem, i64 %n), !dbg !1406
  br label %bb1, !dbg !1406

bb1:                                              ; preds = %start
  ret void, !dbg !1407
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hea9263b0758b56d9E(%"alloc::alloc::Global"* align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #0 !dbg !1408 {
start:
  %ptr.dbg.spill38 = alloca { [0 x i8]*, i64 }, align 8
  %data_address.dbg.spill35 = alloca {}*, align 8
  %self.dbg.spill33 = alloca i8*, align 8
  %data.dbg.spill32 = alloca i8*, align 8
  %self.dbg.spill31 = alloca i8*, align 8
  %ptr.dbg.spill29 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %addr.dbg.spill = alloca i64, align 8
  %n.dbg.spill28 = alloca i64, align 8
  %self.dbg.spill27 = alloca { i64, i64 }*, align 8
  %self.dbg.spill26 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill25 = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill24 = alloca i8*, align 8
  %len.dbg.spill23 = alloca i64, align 8
  %data.dbg.spill22 = alloca i8*, align 8
  %self.dbg.spill21 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill20 = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %n.dbg.spill18 = alloca i64, align 8
  %self.dbg.spill17 = alloca { i64, i64 }*, align 8
  %self.dbg.spill16 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill15 = alloca { i64, i64 }*, align 8
  %self.dbg.spill14 = alloca { i64, i64 }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %self.dbg.spill13 = alloca { i64, i64 }*, align 8
  %e.dbg.spill12 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %residual.dbg.spill5 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %_94 = alloca { i8*, i64 }, align 8
  %_93 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self11 = alloca i64, align 8
  %self10 = alloca i64, align 8
  %self9 = alloca i64, align 8
  %self8 = alloca i64, align 8
  %_51 = alloca { i8*, i64 }, align 8
  %_50 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self7 = alloca i64, align 8
  %self6 = alloca i64, align 8
  %_24 = alloca { i8*, i64 }, align 8
  %self4 = alloca i8*, align 8
  %self3 = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout2 = alloca { i64, i64 }, align 8
  %layout1 = alloca { i64, i64 }, align 8
  %raw_ptr = alloca i8*, align 8
  %data = alloca i8*, align 8
  %_6 = alloca { i8*, i64 }, align 8
  %3 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !1414, metadata !DIExpression()), !dbg !1440
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !1415, metadata !DIExpression()), !dbg !1441
  %6 = zext i1 %zeroed to i8
  store i8 %6, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !1416, metadata !DIExpression()), !dbg !1442
  call void @llvm.dbg.declare(metadata i8** %data, metadata !1443, metadata !DIExpression()), !dbg !1450
  call void @llvm.dbg.declare(metadata i8** %raw_ptr, metadata !1419, metadata !DIExpression()), !dbg !1452
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout1, metadata !1453, metadata !DIExpression()), !dbg !1458
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout2, metadata !1460, metadata !DIExpression()), !dbg !1463
  call void @llvm.dbg.declare(metadata i8** %self3, metadata !1465, metadata !DIExpression()), !dbg !1507
  call void @llvm.dbg.declare(metadata i8** %self4, metadata !1509, metadata !DIExpression()), !dbg !1519
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %err.dbg.spill, metadata !1515, metadata !DIExpression()), !dbg !1519
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !1423, metadata !DIExpression()), !dbg !1520
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill5, metadata !1521, metadata !DIExpression()), !dbg !1532
  call void @llvm.dbg.declare(metadata i64* %self6, metadata !1534, metadata !DIExpression()), !dbg !1538
  call void @llvm.dbg.declare(metadata i64* %self7, metadata !1554, metadata !DIExpression()), !dbg !1558
  call void @llvm.dbg.declare(metadata i64* %self8, metadata !1559, metadata !DIExpression()), !dbg !1563
  call void @llvm.dbg.declare(metadata i64* %self9, metadata !1570, metadata !DIExpression()), !dbg !1574
  call void @llvm.dbg.declare(metadata i64* %self10, metadata !1575, metadata !DIExpression()), !dbg !1579
  call void @llvm.dbg.declare(metadata i64* %self11, metadata !1586, metadata !DIExpression()), !dbg !1590
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !1504, metadata !DIExpression()), !dbg !1591
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill12, metadata !1527, metadata !DIExpression()), !dbg !1592
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill13, align 8, !dbg !1593
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill13, metadata !1594, metadata !DIExpression()), !dbg !1598
  %7 = bitcast { i64, i64 }* %layout to i64*, !dbg !1598
  %_4 = load i64, i64* %7, align 8, !dbg !1598
  %8 = icmp eq i64 %_4, 0, !dbg !1599
  br i1 %8, label %bb2, label %bb1, !dbg !1599

bb2:                                              ; preds = %start
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill26, align 8, !dbg !1553
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill26, metadata !1551, metadata !DIExpression()), !dbg !1600
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill27, align 8, !dbg !1600
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill27, metadata !1544, metadata !DIExpression()), !dbg !1601
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !1601
  %10 = load i64, i64* %9, align 8, !dbg !1601, !range !645, !noundef !140
  store i64 %10, i64* %self7, align 8, !dbg !1601
  %_33 = load i64, i64* %self7, align 8, !dbg !1558, !range !645, !noundef !140
  store i64 %_33, i64* %n.dbg.spill28, align 8, !dbg !1558
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill28, metadata !1602, metadata !DIExpression()), !dbg !1609
  store i64 %_33, i64* %self6, align 8, !dbg !1609
  %addr = load i64, i64* %self6, align 8, !dbg !1538
  store i64 %addr, i64* %addr.dbg.spill, align 8, !dbg !1538
  call void @llvm.dbg.declare(metadata i64* %addr.dbg.spill, metadata !1611, metadata !DIExpression()), !dbg !1617
  %11 = bitcast i8** %2 to i64*, !dbg !1617
  store i64 %addr, i64* %11, align 8, !dbg !1617
  %ptr = load i8*, i8** %2, align 8, !dbg !1617
  store i8* %ptr, i8** %ptr.dbg.spill29, align 8, !dbg !1617
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill29, metadata !1619, metadata !DIExpression()), !dbg !1623
  br label %bb13, !dbg !1617

bb1:                                              ; preds = %start
  store i64 %_4, i64* %size.dbg.spill, align 8, !dbg !1625
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !1417, metadata !DIExpression()), !dbg !1626
  br i1 %zeroed, label %bb3, label %bb4, !dbg !1627

bb4:                                              ; preds = %bb1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !1628
  %13 = load i64, i64* %12, align 8, !dbg !1628
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !1628
  %15 = load i64, i64* %14, align 8, !dbg !1628, !range !645, !noundef !140
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 0, !dbg !1628
  store i64 %13, i64* %16, align 8, !dbg !1628
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 1, !dbg !1628
  store i64 %15, i64* %17, align 8, !dbg !1628
  store { i64, i64 }* %layout2, { i64, i64 }** %self.dbg.spill16, align 8, !dbg !1463
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill16, metadata !1629, metadata !DIExpression()), !dbg !1633
  %18 = bitcast { i64, i64 }* %layout2 to i64*, !dbg !1633
  %_67 = load i64, i64* %18, align 8, !dbg !1633
  store { i64, i64 }* %layout2, { i64, i64 }** %self.dbg.spill17, align 8, !dbg !1463
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill17, metadata !1583, metadata !DIExpression()), !dbg !1635
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 1, !dbg !1635
  %20 = load i64, i64* %19, align 8, !dbg !1635, !range !645, !noundef !140
  store i64 %20, i64* %self11, align 8, !dbg !1635
  %_74 = load i64, i64* %self11, align 8, !dbg !1590, !range !645, !noundef !140
  store i64 %_74, i64* %n.dbg.spill18, align 8, !dbg !1590
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill18, metadata !1636, metadata !DIExpression()), !dbg !1643
  store i64 %_74, i64* %self10, align 8, !dbg !1643
  %_69 = load i64, i64* %self10, align 8, !dbg !1579
  %21 = call i8* @__rust_alloc(i64 %_67, i64 %_69) #16, !dbg !1463
  store i8* %21, i8** %raw_ptr, align 8, !dbg !1463
  br label %bb15, !dbg !1463

bb3:                                              ; preds = %bb1
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !1645
  %23 = load i64, i64* %22, align 8, !dbg !1645
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !1645
  %25 = load i64, i64* %24, align 8, !dbg !1645, !range !645, !noundef !140
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 0, !dbg !1645
  store i64 %23, i64* %26, align 8, !dbg !1645
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !1645
  store i64 %25, i64* %27, align 8, !dbg !1645
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill14, align 8, !dbg !1458
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill14, metadata !1646, metadata !DIExpression()), !dbg !1650
  %28 = bitcast { i64, i64 }* %layout1 to i64*, !dbg !1650
  %_57 = load i64, i64* %28, align 8, !dbg !1650
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill15, align 8, !dbg !1458
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill15, metadata !1567, metadata !DIExpression()), !dbg !1652
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !1652
  %30 = load i64, i64* %29, align 8, !dbg !1652, !range !645, !noundef !140
  store i64 %30, i64* %self9, align 8, !dbg !1652
  %_64 = load i64, i64* %self9, align 8, !dbg !1574, !range !645, !noundef !140
  store i64 %_64, i64* %n.dbg.spill, align 8, !dbg !1574
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1653, metadata !DIExpression()), !dbg !1660
  store i64 %_64, i64* %self8, align 8, !dbg !1660
  %_59 = load i64, i64* %self8, align 8, !dbg !1563
  %31 = call i8* @__rust_alloc_zeroed(i64 %_57, i64 %_59) #16, !dbg !1458
  store i8* %31, i8** %raw_ptr, align 8, !dbg !1458
  br label %bb14, !dbg !1458

bb14:                                             ; preds = %bb3
  br label %bb5, !dbg !1662

bb5:                                              ; preds = %bb15, %bb14
  %_18 = load i8*, i8** %raw_ptr, align 8, !dbg !1663
; call core::ptr::non_null::NonNull<T>::new
  %32 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h04dfd1802f349fbdE"(i8* %_18), !dbg !1508
  store i8* %32, i8** %self4, align 8, !dbg !1508
  br label %bb6, !dbg !1508

bb15:                                             ; preds = %bb4
  br label %bb5, !dbg !1662

bb6:                                              ; preds = %bb5
  %33 = bitcast i8** %self4 to {}**, !dbg !1519
  %34 = load {}*, {}** %33, align 8, !dbg !1519
  %35 = icmp eq {}* %34, null, !dbg !1519
  %_77 = select i1 %35, i64 0, i64 1, !dbg !1519
  switch i64 %_77, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ], !dbg !1519

bb17:                                             ; preds = %bb6
  unreachable, !dbg !1519

bb16:                                             ; preds = %bb6
  %36 = bitcast i8** %self3 to {}**, !dbg !1519
  store {}* null, {}** %36, align 8, !dbg !1519
  br label %bb19, !dbg !1519

bb18:                                             ; preds = %bb6
  %v = load i8*, i8** %self4, align 8, !dbg !1519, !nonnull !140, !noundef !140
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !1519
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !1516, metadata !DIExpression()), !dbg !1664
  store i8* %v, i8** %self3, align 8, !dbg !1664
  br label %bb19, !dbg !1519

bb19:                                             ; preds = %bb16, %bb18
  %37 = bitcast i8** %self3 to {}**, !dbg !1507
  %38 = load {}*, {}** %37, align 8, !dbg !1507
  %39 = icmp eq {}* %38, null, !dbg !1507
  %_80 = select i1 %39, i64 1, i64 0, !dbg !1507
  switch i64 %_80, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !1507

bb21:                                             ; preds = %bb19
  unreachable, !dbg !1507

bb22:                                             ; preds = %bb19
  %v19 = load i8*, i8** %self3, align 8, !dbg !1507, !nonnull !140, !noundef !140
  store i8* %v19, i8** %v.dbg.spill20, align 8, !dbg !1507
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill20, metadata !1501, metadata !DIExpression()), !dbg !1665
  store i8* %v19, i8** %_15, align 8, !dbg !1665
  br label %bb7, !dbg !1507

bb20:                                             ; preds = %bb19
  %40 = bitcast i8** %_15 to {}**, !dbg !1591
  store {}* null, {}** %40, align 8, !dbg !1591
  br label %bb7, !dbg !1507

bb7:                                              ; preds = %bb22, %bb20
  %41 = bitcast i8** %_15 to {}**, !dbg !1508
  %42 = load {}*, {}** %41, align 8, !dbg !1508
  %43 = icmp eq {}* %42, null, !dbg !1508
  %_20 = select i1 %43, i64 1, i64 0, !dbg !1508
  switch i64 %_20, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !1508

bb9:                                              ; preds = %bb7
  unreachable, !dbg !1508

bb8:                                              ; preds = %bb7
  %val = load i8*, i8** %_15, align 8, !dbg !1508, !nonnull !140, !noundef !140
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !1508
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !1438, metadata !DIExpression()), !dbg !1666
  store i8* %val, i8** %ptr.dbg.spill, align 8, !dbg !1666
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1421, metadata !DIExpression()), !dbg !1667
  store i8* %val, i8** %data.dbg.spill, align 8, !dbg !1668
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !1669, metadata !DIExpression()), !dbg !1674
  store i64 %_4, i64* %len.dbg.spill, align 8, !dbg !1676
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !1673, metadata !DIExpression()), !dbg !1674
  store i8* %val, i8** %self.dbg.spill21, align 8, !dbg !1674
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill21, metadata !1677, metadata !DIExpression()), !dbg !1681
  store i8* %val, i8** %data.dbg.spill22, align 8, !dbg !1681
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill22, metadata !1683, metadata !DIExpression()), !dbg !1694
  store i64 %_4, i64* %len.dbg.spill23, align 8, !dbg !1674
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill23, metadata !1693, metadata !DIExpression()), !dbg !1694
  store i8* %val, i8** %self.dbg.spill24, align 8, !dbg !1694
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill24, metadata !1696, metadata !DIExpression()), !dbg !1704
  %data_address = bitcast i8* %val to {}*, !dbg !1704
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !1704
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1706, metadata !DIExpression()), !dbg !1713
  store i64 %_4, i64* %metadata.dbg.spill, align 8, !dbg !1694
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !1712, metadata !DIExpression()), !dbg !1713
  %44 = bitcast { i8*, i64 }* %_94 to {}**, !dbg !1713
  store {}* %data_address, {}** %44, align 8, !dbg !1713
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 1, !dbg !1713
  store i64 %_4, i64* %45, align 8, !dbg !1713
  %46 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_93 to { i8*, i64 }*, !dbg !1713
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 0, !dbg !1713
  %48 = load i8*, i8** %47, align 8, !dbg !1713
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 1, !dbg !1713
  %50 = load i64, i64* %49, align 8, !dbg !1713
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 0, !dbg !1713
  store i8* %48, i8** %51, align 8, !dbg !1713
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 1, !dbg !1713
  store i64 %50, i64* %52, align 8, !dbg !1713
  %53 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_93 to { [0 x i8]*, i64 }*, !dbg !1713
  %54 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 0, !dbg !1713
  %ptr.0 = load [0 x i8]*, [0 x i8]** %54, align 8, !dbg !1713
  %55 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 1, !dbg !1713
  %ptr.1 = load i64, i64* %55, align 8, !dbg !1713
  %56 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill25, i32 0, i32 0, !dbg !1713
  store [0 x i8]* %ptr.0, [0 x i8]** %56, align 8, !dbg !1713
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill25, i32 0, i32 1, !dbg !1713
  store i64 %ptr.1, i64* %57, align 8, !dbg !1713
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill25, metadata !1715, metadata !DIExpression()), !dbg !1721
  %58 = bitcast { i8*, i64 }* %_24 to { [0 x i8]*, i64 }*, !dbg !1721
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 0, !dbg !1721
  store [0 x i8]* %ptr.0, [0 x i8]** %59, align 8, !dbg !1721
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 1, !dbg !1721
  store i64 %ptr.1, i64* %60, align 8, !dbg !1721
  %61 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 0, !dbg !1723
  %62 = load i8*, i8** %61, align 8, !dbg !1723, !nonnull !140, !noundef !140
  %63 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !1723
  %64 = load i64, i64* %63, align 8, !dbg !1723
  %65 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !1723
  store i8* %62, i8** %65, align 8, !dbg !1723
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !1723
  store i64 %64, i64* %66, align 8, !dbg !1723
  br label %bb11, !dbg !1724

bb10:                                             ; preds = %bb7
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h841464a645d964abE"(), !dbg !1592
  br label %bb23, !dbg !1592

bb23:                                             ; preds = %bb10
  %67 = bitcast { i8*, i64 }* %3 to {}**, !dbg !1592
  store {}* null, {}** %67, align 8, !dbg !1592
  br label %bb12, !dbg !1725

bb12:                                             ; preds = %bb11, %bb23
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !1725
  %69 = load i8*, i8** %68, align 8, !dbg !1725
  %70 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !1725
  %71 = load i64, i64* %70, align 8, !dbg !1725
  %72 = insertvalue { i8*, i64 } undef, i8* %69, 0, !dbg !1725
  %73 = insertvalue { i8*, i64 } %72, i64 %71, 1, !dbg !1725
  ret { i8*, i64 } %73, !dbg !1725

bb11:                                             ; preds = %bb13, %bb8
  br label %bb12, !dbg !1725

bb13:                                             ; preds = %bb2
  store i8* %ptr, i8** %data, align 8, !dbg !1623
  %self30 = load i8*, i8** %data, align 8, !dbg !1450, !nonnull !140, !noundef !140
  store i8* %self30, i8** %self.dbg.spill31, align 8, !dbg !1450
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill31, metadata !1726, metadata !DIExpression()), !dbg !1730
  store i8* %self30, i8** %data.dbg.spill32, align 8, !dbg !1730
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill32, metadata !1732, metadata !DIExpression()), !dbg !1737
  store i8* %self30, i8** %self.dbg.spill33, align 8, !dbg !1737
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill33, metadata !1739, metadata !DIExpression()), !dbg !1743
  %data_address34 = bitcast i8* %self30 to {}*, !dbg !1743
  store {}* %data_address34, {}** %data_address.dbg.spill35, align 8, !dbg !1743
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill35, metadata !1745, metadata !DIExpression()), !dbg !1750
  %74 = bitcast { i8*, i64 }* %_51 to {}**, !dbg !1750
  store {}* %data_address34, {}** %74, align 8, !dbg !1750
  %75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 1, !dbg !1750
  store i64 0, i64* %75, align 8, !dbg !1750
  %76 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_50 to { i8*, i64 }*, !dbg !1750
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 0, !dbg !1750
  %78 = load i8*, i8** %77, align 8, !dbg !1750
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 1, !dbg !1750
  %80 = load i64, i64* %79, align 8, !dbg !1750
  %81 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %76, i32 0, i32 0, !dbg !1750
  store i8* %78, i8** %81, align 8, !dbg !1750
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %76, i32 0, i32 1, !dbg !1750
  store i64 %80, i64* %82, align 8, !dbg !1750
  %83 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_50 to { [0 x i8]*, i64 }*, !dbg !1750
  %84 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %83, i32 0, i32 0, !dbg !1750
  %ptr.036 = load [0 x i8]*, [0 x i8]** %84, align 8, !dbg !1750
  %85 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %83, i32 0, i32 1, !dbg !1750
  %ptr.137 = load i64, i64* %85, align 8, !dbg !1750
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill38, i32 0, i32 0, !dbg !1750
  store [0 x i8]* %ptr.036, [0 x i8]** %86, align 8, !dbg !1750
  %87 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill38, i32 0, i32 1, !dbg !1750
  store i64 %ptr.137, i64* %87, align 8, !dbg !1750
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill38, metadata !1752, metadata !DIExpression()), !dbg !1756
  %88 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*, !dbg !1756
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 0, !dbg !1756
  store [0 x i8]* %ptr.036, [0 x i8]** %89, align 8, !dbg !1756
  %90 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 1, !dbg !1756
  store i64 %ptr.137, i64* %90, align 8, !dbg !1756
  %91 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !1758
  %92 = load i8*, i8** %91, align 8, !dbg !1758, !nonnull !140, !noundef !140
  %93 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !1758
  %94 = load i64, i64* %93, align 8, !dbg !1758
  %95 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !1758
  store i8* %92, i8** %95, align 8, !dbg !1758
  %96 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !1758
  store i64 %94, i64* %96, align 8, !dbg !1758
  br label %bb11, !dbg !1759
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h179fb7ce387b3544E(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #0 !dbg !1760 {
start:
  %count.dbg.spill54 = alloca i64, align 8
  %dst.dbg.spill53 = alloca i8*, align 8
  %ptr.dbg.spill52 = alloca i8*, align 8
  %self.dbg.spill50 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill49 = alloca { i8*, i64 }, align 8
  %self.dbg.spill48 = alloca { i8*, i64 }, align 8
  %self.dbg.spill47 = alloca { i8*, i64 }, align 8
  %src.dbg.spill = alloca i8*, align 8
  %self.dbg.spill46 = alloca i8*, align 8
  %new_ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill45 = alloca { i8*, i64 }, align 8
  %v.dbg.spill44 = alloca { i8*, i64 }, align 8
  %old_size.dbg.spill43 = alloca i64, align 8
  %ptr.dbg.spill42 = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill41 = alloca i8*, align 8
  %len.dbg.spill40 = alloca i64, align 8
  %data.dbg.spill39 = alloca i8*, align 8
  %self.dbg.spill38 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %count.dbg.spill37 = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %count.dbg.spill36 = alloca i64, align 8
  %self.dbg.spill35 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %count.dbg.spill34 = alloca i64, align 8
  %self.dbg.spill33 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill32 = alloca i8*, align 8
  %ptr.dbg.spill31 = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill30 = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %raw_ptr.dbg.spill = alloca i8*, align 8
  %n.dbg.spill28 = alloca i64, align 8
  %self.dbg.spill27 = alloca { i64, i64 }*, align 8
  %self.dbg.spill26 = alloca { i64, i64 }*, align 8
  %new_size.dbg.spill25 = alloca i64, align 8
  %ptr.dbg.spill24 = alloca i8*, align 8
  %self.dbg.spill23 = alloca i8*, align 8
  %self.dbg.spill22 = alloca { i64, i64 }*, align 8
  %new_size.dbg.spill = alloca i64, align 8
  %self.dbg.spill21 = alloca { i64, i64 }*, align 8
  %old_size.dbg.spill = alloca i64, align 8
  %n.dbg.spill20 = alloca i64, align 8
  %self.dbg.spill19 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill18 = alloca { i64, i64 }*, align 8
  %self.dbg.spill17 = alloca { i64, i64 }*, align 8
  %e.dbg.spill15 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill14 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill13 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %residual.dbg.spill6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill5 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill3 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]", align 8
  %self16 = alloca i8*, align 8
  %_135 = alloca { i8*, i64 }, align 8
  %_134 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self12 = alloca i64, align 8
  %self11 = alloca i64, align 8
  %self10 = alloca i64, align 8
  %self9 = alloca i64, align 8
  %self8 = alloca i64, align 8
  %self7 = alloca i64, align 8
  %self4 = alloca { i8*, i64 }, align 8
  %_55 = alloca { i8*, i64 }, align 8
  %_50 = alloca { i8*, i64 }, align 8
  %self2 = alloca i8*, align 8
  %self1 = alloca i8*, align 8
  %_33 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %5 = alloca { i8*, i64 }, align 8
  %new_layout = alloca { i64, i64 }, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %3, i64* %9, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !1764, metadata !DIExpression()), !dbg !1790
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1765, metadata !DIExpression()), !dbg !1791
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !1766, metadata !DIExpression()), !dbg !1792
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !1767, metadata !DIExpression()), !dbg !1793
  %10 = zext i1 %zeroed to i8
  store i8 %10, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !1768, metadata !DIExpression()), !dbg !1794
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !1795, metadata !DIExpression()), !dbg !1802
  call void @llvm.dbg.declare(metadata i8** %self1, metadata !1804, metadata !DIExpression()), !dbg !1814
  call void @llvm.dbg.declare(metadata i8** %self2, metadata !1816, metadata !DIExpression()), !dbg !1824
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %err.dbg.spill, metadata !1820, metadata !DIExpression()), !dbg !1824
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !1778, metadata !DIExpression()), !dbg !1825
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill3, metadata !1826, metadata !DIExpression()), !dbg !1833
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self4, metadata !1835, metadata !DIExpression()), !dbg !1862
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill5, metadata !1786, metadata !DIExpression()), !dbg !1864
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill6, metadata !1865, metadata !DIExpression()), !dbg !1872
  call void @llvm.dbg.declare(metadata i64* %self7, metadata !1874, metadata !DIExpression()), !dbg !1878
  call void @llvm.dbg.declare(metadata i64* %self8, metadata !1885, metadata !DIExpression()), !dbg !1889
  call void @llvm.dbg.declare(metadata i64* %self9, metadata !1890, metadata !DIExpression()), !dbg !1894
  call void @llvm.dbg.declare(metadata i64* %self10, metadata !1901, metadata !DIExpression()), !dbg !1905
  call void @llvm.dbg.declare(metadata i64* %self11, metadata !1906, metadata !DIExpression()), !dbg !1910
  call void @llvm.dbg.declare(metadata i64* %self12, metadata !1917, metadata !DIExpression()), !dbg !1921
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !1811, metadata !DIExpression()), !dbg !1922
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill13, metadata !1830, metadata !DIExpression()), !dbg !1923
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill14, metadata !1859, metadata !DIExpression()), !dbg !1924
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill15, metadata !1869, metadata !DIExpression()), !dbg !1925
  call void @llvm.dbg.declare(metadata i8** %self16, metadata !1926, metadata !DIExpression()), !dbg !1930
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]"* %runtime, metadata !1939, metadata !DIExpression()), !dbg !1959
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill17, align 8, !dbg !1961
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill17, metadata !1962, metadata !DIExpression()), !dbg !1966
  %11 = bitcast { i64, i64 }* %old_layout to i64*, !dbg !1966
  %_8 = load i64, i64* %11, align 8, !dbg !1966
  %12 = icmp eq i64 %_8, 0, !dbg !1967
  br i1 %12, label %bb1, label %bb3, !dbg !1967

bb1:                                              ; preds = %start
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !1968
  %_11.0 = load i64, i64* %13, align 8, !dbg !1968
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !1968
  %_11.1 = load i64, i64* %14, align 8, !dbg !1968, !range !645, !noundef !140
; call alloc::alloc::Global::alloc_impl
  %15 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hea9263b0758b56d9E(%"alloc::alloc::Global"* align 1 %self, i64 %_11.0, i64 %_11.1, i1 zeroext %zeroed), !dbg !1969
  store { i8*, i64 } %15, { i8*, i64 }* %5, align 8, !dbg !1969
  br label %bb2, !dbg !1969

bb3:                                              ; preds = %start
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill18, align 8, !dbg !1884
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill18, metadata !1882, metadata !DIExpression()), !dbg !1970
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !1970
  %17 = load i64, i64* %16, align 8, !dbg !1970, !range !645, !noundef !140
  store i64 %17, i64* %self8, align 8, !dbg !1970
  %_78 = load i64, i64* %self8, align 8, !dbg !1889, !range !645, !noundef !140
  store i64 %_78, i64* %n.dbg.spill, align 8, !dbg !1889
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1971, metadata !DIExpression()), !dbg !1978
  store i64 %_78, i64* %self7, align 8, !dbg !1978
  %_16 = load i64, i64* %self7, align 8, !dbg !1878
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill19, align 8, !dbg !1900
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill19, metadata !1898, metadata !DIExpression()), !dbg !1980
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !1980
  %19 = load i64, i64* %18, align 8, !dbg !1980, !range !645, !noundef !140
  store i64 %19, i64* %self10, align 8, !dbg !1980
  %_84 = load i64, i64* %self10, align 8, !dbg !1905, !range !645, !noundef !140
  store i64 %_84, i64* %n.dbg.spill20, align 8, !dbg !1905
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill20, metadata !1981, metadata !DIExpression()), !dbg !1988
  store i64 %_84, i64* %self9, align 8, !dbg !1988
  %_18 = load i64, i64* %self9, align 8, !dbg !1894
  %_15 = icmp eq i64 %_16, %_18, !dbg !1884
  br i1 %_15, label %bb4, label %bb5, !dbg !1884

bb5:                                              ; preds = %bb3
  store i64 %_8, i64* %old_size.dbg.spill43, align 8, !dbg !1990
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill43, metadata !1782, metadata !DIExpression()), !dbg !1991
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !1992
  %_58.0 = load i64, i64* %20, align 8, !dbg !1992
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !1992
  %_58.1 = load i64, i64* %21, align 8, !dbg !1992, !range !645, !noundef !140
; call alloc::alloc::Global::alloc_impl
  %22 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hea9263b0758b56d9E(%"alloc::alloc::Global"* align 1 %self, i64 %_58.0, i64 %_58.1, i1 zeroext %zeroed), !dbg !1863
  store { i8*, i64 } %22, { i8*, i64 }* %self4, align 8, !dbg !1863
  br label %bb14, !dbg !1863

bb4:                                              ; preds = %bb3
  store i64 %_8, i64* %old_size.dbg.spill, align 8, !dbg !1993
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill, metadata !1769, metadata !DIExpression()), !dbg !1994
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill21, align 8, !dbg !1995
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill21, metadata !1996, metadata !DIExpression()), !dbg !2000
  %23 = bitcast { i64, i64 }* %new_layout to i64*, !dbg !2000
  %new_size = load i64, i64* %23, align 8, !dbg !2000
  store i64 %new_size, i64* %new_size.dbg.spill, align 8, !dbg !2000
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill, metadata !1772, metadata !DIExpression()), !dbg !2001
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill22, align 8, !dbg !2002
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill22, metadata !2003, metadata !DIExpression()), !dbg !2007
  %24 = bitcast { i64, i64 }* %old_layout to i64*, !dbg !2007
  %_25 = load i64, i64* %24, align 8, !dbg !2007
  %_23 = icmp uge i64 %new_size, %_25, !dbg !2008
  call void @llvm.assume(i1 %_23), !dbg !2009
  br label %bb6, !dbg !2009

bb6:                                              ; preds = %bb4
  store i8* %ptr, i8** %self.dbg.spill23, align 8, !dbg !2010
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill23, metadata !2011, metadata !DIExpression()), !dbg !2015
  store i8* %ptr, i8** %ptr.dbg.spill24, align 8, !dbg !2015
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill24, metadata !1800, metadata !DIExpression()), !dbg !1802
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !2016
  %26 = load i64, i64* %25, align 8, !dbg !2016
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !2016
  %28 = load i64, i64* %27, align 8, !dbg !2016, !range !645, !noundef !140
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !2016
  store i64 %26, i64* %29, align 8, !dbg !2016
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2016
  store i64 %28, i64* %30, align 8, !dbg !2016
  store i64 %new_size, i64* %new_size.dbg.spill25, align 8, !dbg !2017
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill25, metadata !1801, metadata !DIExpression()), !dbg !1802
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill26, align 8, !dbg !1802
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill26, metadata !2018, metadata !DIExpression()), !dbg !2022
  %31 = bitcast { i64, i64 }* %layout to i64*, !dbg !2022
  %_89 = load i64, i64* %31, align 8, !dbg !2022
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill27, align 8, !dbg !1802
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill27, metadata !1914, metadata !DIExpression()), !dbg !2024
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2024
  %33 = load i64, i64* %32, align 8, !dbg !2024, !range !645, !noundef !140
  store i64 %33, i64* %self12, align 8, !dbg !2024
  %_97 = load i64, i64* %self12, align 8, !dbg !1921, !range !645, !noundef !140
  store i64 %_97, i64* %n.dbg.spill28, align 8, !dbg !1921
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill28, metadata !2025, metadata !DIExpression()), !dbg !2032
  store i64 %_97, i64* %self11, align 8, !dbg !2032
  %_91 = load i64, i64* %self11, align 8, !dbg !1910
  %raw_ptr = call i8* @__rust_realloc(i8* %ptr, i64 %_89, i64 %_91, i64 %new_size) #16, !dbg !1802
  store i8* %raw_ptr, i8** %raw_ptr.dbg.spill, align 8, !dbg !1802
  call void @llvm.dbg.declare(metadata i8** %raw_ptr.dbg.spill, metadata !1774, metadata !DIExpression()), !dbg !2034
  br label %bb23, !dbg !1802

bb23:                                             ; preds = %bb6
; call core::ptr::non_null::NonNull<T>::new
  %34 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h04dfd1802f349fbdE"(i8* %raw_ptr), !dbg !1815
  store i8* %34, i8** %self2, align 8, !dbg !1815
  br label %bb7, !dbg !1815

bb7:                                              ; preds = %bb23
  %35 = bitcast i8** %self2 to {}**, !dbg !1824
  %36 = load {}*, {}** %35, align 8, !dbg !1824
  %37 = icmp eq {}* %36, null, !dbg !1824
  %_100 = select i1 %37, i64 0, i64 1, !dbg !1824
  switch i64 %_100, label %bb25 [
    i64 0, label %bb24
    i64 1, label %bb26
  ], !dbg !1824

bb25:                                             ; preds = %bb7
  unreachable, !dbg !1824

bb24:                                             ; preds = %bb7
  %38 = bitcast i8** %self1 to {}**, !dbg !1824
  store {}* null, {}** %38, align 8, !dbg !1824
  br label %bb27, !dbg !1824

bb26:                                             ; preds = %bb7
  %v = load i8*, i8** %self2, align 8, !dbg !1824, !nonnull !140, !noundef !140
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !1824
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !1821, metadata !DIExpression()), !dbg !2035
  store i8* %v, i8** %self1, align 8, !dbg !2035
  br label %bb27, !dbg !1824

bb27:                                             ; preds = %bb24, %bb26
  %39 = bitcast i8** %self1 to {}**, !dbg !1814
  %40 = load {}*, {}** %39, align 8, !dbg !1814
  %41 = icmp eq {}* %40, null, !dbg !1814
  %_103 = select i1 %41, i64 1, i64 0, !dbg !1814
  switch i64 %_103, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ], !dbg !1814

bb29:                                             ; preds = %bb27
  unreachable, !dbg !1814

bb30:                                             ; preds = %bb27
  %v29 = load i8*, i8** %self1, align 8, !dbg !1814, !nonnull !140, !noundef !140
  store i8* %v29, i8** %v.dbg.spill30, align 8, !dbg !1814
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill30, metadata !1808, metadata !DIExpression()), !dbg !2036
  store i8* %v29, i8** %_33, align 8, !dbg !2036
  br label %bb8, !dbg !1814

bb28:                                             ; preds = %bb27
  %42 = bitcast i8** %_33 to {}**, !dbg !1922
  store {}* null, {}** %42, align 8, !dbg !1922
  br label %bb8, !dbg !1814

bb8:                                              ; preds = %bb30, %bb28
  %43 = bitcast i8** %_33 to {}**, !dbg !1815
  %44 = load {}*, {}** %43, align 8, !dbg !1815
  %45 = icmp eq {}* %44, null, !dbg !1815
  %_38 = select i1 %45, i64 1, i64 0, !dbg !1815
  switch i64 %_38, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ], !dbg !1815

bb10:                                             ; preds = %bb8
  unreachable, !dbg !1815

bb9:                                              ; preds = %bb8
  %val = load i8*, i8** %_33, align 8, !dbg !1815, !nonnull !140, !noundef !140
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !1815
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !1780, metadata !DIExpression()), !dbg !2037
  store i8* %val, i8** %ptr.dbg.spill31, align 8, !dbg !2037
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill31, metadata !1776, metadata !DIExpression()), !dbg !2038
  br i1 %zeroed, label %bb12, label %bb13, !dbg !2039

bb11:                                             ; preds = %bb8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h841464a645d964abE"(), !dbg !1923
  br label %bb31, !dbg !1923

bb31:                                             ; preds = %bb11
  %46 = bitcast { i8*, i64 }* %5 to {}**, !dbg !1923
  store {}* null, {}** %46, align 8, !dbg !1923
  br label %bb21, !dbg !2040

bb21:                                             ; preds = %bb37, %bb31
  br label %bb22, !dbg !2043

bb13:                                             ; preds = %bb33, %bb9
  store i8* %val, i8** %data.dbg.spill, align 8, !dbg !2044
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !2045, metadata !DIExpression()), !dbg !2050
  store i64 %new_size, i64* %len.dbg.spill, align 8, !dbg !2052
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2049, metadata !DIExpression()), !dbg !2050
  store i8* %val, i8** %self.dbg.spill38, align 8, !dbg !2050
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill38, metadata !2053, metadata !DIExpression()), !dbg !2057
  store i8* %val, i8** %data.dbg.spill39, align 8, !dbg !2057
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill39, metadata !2059, metadata !DIExpression()), !dbg !2064
  store i64 %new_size, i64* %len.dbg.spill40, align 8, !dbg !2050
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill40, metadata !2063, metadata !DIExpression()), !dbg !2064
  store i8* %val, i8** %self.dbg.spill41, align 8, !dbg !2064
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill41, metadata !2066, metadata !DIExpression()), !dbg !2070
  %data_address = bitcast i8* %val to {}*, !dbg !2070
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !2070
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !2072, metadata !DIExpression()), !dbg !2077
  store i64 %new_size, i64* %metadata.dbg.spill, align 8, !dbg !2064
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !2076, metadata !DIExpression()), !dbg !2077
  %47 = bitcast { i8*, i64 }* %_135 to {}**, !dbg !2077
  store {}* %data_address, {}** %47, align 8, !dbg !2077
  %48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 1, !dbg !2077
  store i64 %new_size, i64* %48, align 8, !dbg !2077
  %49 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_134 to { i8*, i64 }*, !dbg !2077
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 0, !dbg !2077
  %51 = load i8*, i8** %50, align 8, !dbg !2077
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 1, !dbg !2077
  %53 = load i64, i64* %52, align 8, !dbg !2077
  %54 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %49, i32 0, i32 0, !dbg !2077
  store i8* %51, i8** %54, align 8, !dbg !2077
  %55 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %49, i32 0, i32 1, !dbg !2077
  store i64 %53, i64* %55, align 8, !dbg !2077
  %56 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_134 to { [0 x i8]*, i64 }*, !dbg !2077
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 0, !dbg !2077
  %ptr.0 = load [0 x i8]*, [0 x i8]** %57, align 8, !dbg !2077
  %58 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 1, !dbg !2077
  %ptr.1 = load i64, i64* %58, align 8, !dbg !2077
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill42, i32 0, i32 0, !dbg !2077
  store [0 x i8]* %ptr.0, [0 x i8]** %59, align 8, !dbg !2077
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill42, i32 0, i32 1, !dbg !2077
  store i64 %ptr.1, i64* %60, align 8, !dbg !2077
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill42, metadata !2079, metadata !DIExpression()), !dbg !2083
  %61 = bitcast { i8*, i64 }* %_50 to { [0 x i8]*, i64 }*, !dbg !2083
  %62 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 0, !dbg !2083
  store [0 x i8]* %ptr.0, [0 x i8]** %62, align 8, !dbg !2083
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 1, !dbg !2083
  store i64 %ptr.1, i64* %63, align 8, !dbg !2083
  %64 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_50, i32 0, i32 0, !dbg !2085
  %65 = load i8*, i8** %64, align 8, !dbg !2085, !nonnull !140, !noundef !140
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_50, i32 0, i32 1, !dbg !2085
  %67 = load i64, i64* %66, align 8, !dbg !2085
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !2085
  store i8* %65, i8** %68, align 8, !dbg !2085
  %69 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !2085
  store i64 %67, i64* %69, align 8, !dbg !2085
  br label %bb20, !dbg !2086

bb12:                                             ; preds = %bb9
  store i8* %raw_ptr, i8** %self.dbg.spill32, align 8, !dbg !2087
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill32, metadata !2088, metadata !DIExpression()), !dbg !2095
  store i64 %_8, i64* %count.dbg.spill, align 8, !dbg !2096
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !2094, metadata !DIExpression()), !dbg !2095
  store i8* %raw_ptr, i8** %self.dbg.spill33, align 8, !dbg !2095
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill33, metadata !2097, metadata !DIExpression()), !dbg !2104
  store i64 %_8, i64* %count.dbg.spill34, align 8, !dbg !2095
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill34, metadata !2103, metadata !DIExpression()), !dbg !2104
  %70 = getelementptr inbounds i8, i8* %raw_ptr, i64 %_8, !dbg !2104
  store i8* %70, i8** %4, align 8, !dbg !2104
  %_113 = load i8*, i8** %4, align 8, !dbg !2104
  br label %bb32, !dbg !2104

bb32:                                             ; preds = %bb12
  store i8* %_113, i8** %self.dbg.spill35, align 8, !dbg !2104
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill35, metadata !2106, metadata !DIExpression()), !dbg !2114
  %count = sub i64 %new_size, %_8, !dbg !2115
  store i64 %count, i64* %count.dbg.spill36, align 8, !dbg !2115
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill36, metadata !2113, metadata !DIExpression()), !dbg !2114
  store i8* %_113, i8** %dst.dbg.spill, align 8, !dbg !2114
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !2116, metadata !DIExpression()), !dbg !2129
  store i64 %count, i64* %count.dbg.spill37, align 8, !dbg !2114
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill37, metadata !2121, metadata !DIExpression()), !dbg !2129
  %71 = mul i64 1, %count, !dbg !2129
  call void @llvm.memset.p0i8.i64(i8* align 1 %_113, i8 0, i64 %71, i1 false), !dbg !2129
  br label %bb33, !dbg !2129

bb33:                                             ; preds = %bb32
  br label %bb13, !dbg !2131

bb20:                                             ; preds = %bb2, %bb19, %bb13
  br label %bb22, !dbg !2043

bb14:                                             ; preds = %bb5
  %72 = bitcast { i8*, i64 }* %self4 to {}**, !dbg !1862
  %73 = load {}*, {}** %72, align 8, !dbg !1862
  %74 = icmp eq {}* %73, null, !dbg !1862
  %_142 = select i1 %74, i64 1, i64 0, !dbg !1862
  switch i64 %_142, label %bb35 [
    i64 0, label %bb36
    i64 1, label %bb34
  ], !dbg !1862

bb35:                                             ; preds = %bb14
  unreachable, !dbg !1862

bb36:                                             ; preds = %bb14
  %75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self4, i32 0, i32 0, !dbg !1862
  %v.0 = load i8*, i8** %75, align 8, !dbg !1862, !nonnull !140, !noundef !140
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self4, i32 0, i32 1, !dbg !1862
  %v.1 = load i64, i64* %76, align 8, !dbg !1862
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill44, i32 0, i32 0, !dbg !1862
  store i8* %v.0, i8** %77, align 8, !dbg !1862
  %78 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill44, i32 0, i32 1, !dbg !1862
  store i64 %v.1, i64* %78, align 8, !dbg !1862
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill44, metadata !1856, metadata !DIExpression()), !dbg !2132
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 0, !dbg !2132
  store i8* %v.0, i8** %79, align 8, !dbg !2132
  %80 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 1, !dbg !2132
  store i64 %v.1, i64* %80, align 8, !dbg !2132
  br label %bb15, !dbg !1862

bb34:                                             ; preds = %bb14
  %81 = bitcast { i8*, i64 }* %_55 to {}**, !dbg !1924
  store {}* null, {}** %81, align 8, !dbg !1924
  br label %bb15, !dbg !1862

bb15:                                             ; preds = %bb36, %bb34
  %82 = bitcast { i8*, i64 }* %_55 to {}**, !dbg !1863
  %83 = load {}*, {}** %82, align 8, !dbg !1863
  %84 = icmp eq {}* %83, null, !dbg !1863
  %_60 = select i1 %84, i64 1, i64 0, !dbg !1863
  switch i64 %_60, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ], !dbg !1863

bb17:                                             ; preds = %bb15
  unreachable, !dbg !1863

bb16:                                             ; preds = %bb15
  %85 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 0, !dbg !1863
  %val.0 = load i8*, i8** %85, align 8, !dbg !1863, !nonnull !140, !noundef !140
  %86 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 1, !dbg !1863
  %val.1 = load i64, i64* %86, align 8, !dbg !1863
  %87 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill45, i32 0, i32 0, !dbg !1863
  store i8* %val.0, i8** %87, align 8, !dbg !1863
  %88 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill45, i32 0, i32 1, !dbg !1863
  store i64 %val.1, i64* %88, align 8, !dbg !1863
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill45, metadata !1788, metadata !DIExpression()), !dbg !2133
  %89 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 0, !dbg !2133
  store i8* %val.0, i8** %89, align 8, !dbg !2133
  %90 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 1, !dbg !2133
  store i64 %val.1, i64* %90, align 8, !dbg !2133
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %new_ptr.dbg.spill, metadata !1784, metadata !DIExpression()), !dbg !2134
  store i8* %ptr, i8** %self.dbg.spill46, align 8, !dbg !2135
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill46, metadata !2136, metadata !DIExpression()), !dbg !2140
  store i8* %ptr, i8** %src.dbg.spill, align 8, !dbg !2135
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill, metadata !1947, metadata !DIExpression()), !dbg !2141
  %91 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill47, i32 0, i32 0, !dbg !1938
  store i8* %val.0, i8** %91, align 8, !dbg !1938
  %92 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill47, i32 0, i32 1, !dbg !1938
  store i64 %val.1, i64* %92, align 8, !dbg !1938
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill47, metadata !1936, metadata !DIExpression()), !dbg !2142
  %93 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill48, i32 0, i32 0, !dbg !2142
  store i8* %val.0, i8** %93, align 8, !dbg !2142
  %94 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill48, i32 0, i32 1, !dbg !2142
  store i64 %val.1, i64* %94, align 8, !dbg !2142
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill48, metadata !2143, metadata !DIExpression()), !dbg !2149
  %95 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill49, i32 0, i32 0, !dbg !2149
  store i8* %val.0, i8** %95, align 8, !dbg !2149
  %96 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill49, i32 0, i32 1, !dbg !2149
  store i64 %val.1, i64* %96, align 8, !dbg !2149
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill49, metadata !2150, metadata !DIExpression()), !dbg !2156
  %_155.0 = bitcast i8* %val.0 to [0 x i8]*, !dbg !2156
  %97 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill50, i32 0, i32 0, !dbg !2156
  store [0 x i8]* %_155.0, [0 x i8]** %97, align 8, !dbg !2156
  %98 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill50, i32 0, i32 1, !dbg !2156
  store i64 %val.1, i64* %98, align 8, !dbg !2156
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill50, metadata !2158, metadata !DIExpression()), !dbg !2165
  %ptr51 = bitcast [0 x i8]* %_155.0 to i8*, !dbg !2165
  store i8* %ptr51, i8** %ptr.dbg.spill52, align 8, !dbg !2165
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill52, metadata !2166, metadata !DIExpression()), !dbg !2170
  store i8* %ptr51, i8** %self16, align 8, !dbg !2170
  %_160 = load i8*, i8** %self16, align 8, !dbg !1930
  store i8* %_160, i8** %dst.dbg.spill53, align 8, !dbg !1930
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill53, metadata !1949, metadata !DIExpression()), !dbg !2141
  store i64 %_8, i64* %count.dbg.spill54, align 8, !dbg !2172
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill54, metadata !1950, metadata !DIExpression()), !dbg !2141
  %99 = mul i64 %_8, 1, !dbg !2141
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %_160, i8* align 1 %ptr, i64 %99, i1 false), !dbg !2141
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !2173
  %_73.0 = load i64, i64* %100, align 8, !dbg !2173
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !2173
  %_73.1 = load i64, i64* %101, align 8, !dbg !2173, !range !645, !noundef !140
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17ha7516eb11e3641feE"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %_73.0, i64 %_73.1), !dbg !2174
  br label %bb19, !dbg !2174

bb18:                                             ; preds = %bb15
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h841464a645d964abE"(), !dbg !1925
  br label %bb37, !dbg !1925

bb37:                                             ; preds = %bb18
  %102 = bitcast { i8*, i64 }* %5 to {}**, !dbg !1925
  store {}* null, {}** %102, align 8, !dbg !1925
  br label %bb21, !dbg !2040

bb22:                                             ; preds = %bb20, %bb21
  %103 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !2043
  %104 = load i8*, i8** %103, align 8, !dbg !2043
  %105 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !2043
  %106 = load i64, i64* %105, align 8, !dbg !2043
  %107 = insertvalue { i8*, i64 } undef, i8* %104, 0, !dbg !2043
  %108 = insertvalue { i8*, i64 } %107, i64 %106, 1, !dbg !2043
  ret { i8*, i64 } %108, !dbg !2043

bb19:                                             ; preds = %bb16
  %109 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !2175
  store i8* %val.0, i8** %109, align 8, !dbg !2175
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !2175
  store i64 %val.1, i64* %110, align 8, !dbg !2175
  br label %bb20, !dbg !2176

bb2:                                              ; preds = %bb1
  br label %bb20, !dbg !2177
}

; alloc::raw_vec::finish_grow
; Function Attrs: noinline nonlazybind uwtable
define void @_ZN5alloc7raw_vec11finish_grow17h2bc375db3f95f233E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, %"alloc::alloc::Global"* align 1 %alloc) unnamed_addr #2 !dbg !2178 {
start:
  %n.dbg.spill22 = alloca i64, align 8
  %self.dbg.spill21 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %e.dbg.spill20 = alloca { i64, i64 }, align 8
  %residual.dbg.spill17 = alloca { i64, i64 }, align 8
  %e.dbg.spill14 = alloca { i64, i64 }, align 8
  %val.dbg.spill11 = alloca { i64, i64 }, align 8
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill10 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill7 = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca {}, align 1
  %val.dbg.spill = alloca {}, align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %self6 = alloca i64, align 8
  %self5 = alloca i64, align 8
  %self4 = alloca i64, align 8
  %self3 = alloca i64, align 8
  %_58 = alloca { i64, i64 }, align 8
  %_52 = alloca { i64, i64 }, align 8
  %_49 = alloca { i64, i64 }, align 8
  %_43 = alloca i64*, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %memory = alloca { i8*, i64 }, align 8
  %residual2 = alloca { i64, i64 }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %self = alloca %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", align 8
  %new_layout = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !2200, metadata !DIExpression()), !dbg !2253
  call void @llvm.dbg.declare(metadata %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, metadata !2201, metadata !DIExpression()), !dbg !2254
  store %"alloc::alloc::Global"* %alloc, %"alloc::alloc::Global"** %alloc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %alloc.dbg.spill, metadata !2202, metadata !DIExpression()), !dbg !2255
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !2203, metadata !DIExpression()), !dbg !2256
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self, metadata !2257, metadata !DIExpression()), !dbg !2285
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !2287, metadata !DIExpression()), !dbg !2297
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !2299, metadata !DIExpression()), !dbg !2327
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual2, metadata !2329, metadata !DIExpression()), !dbg !2339
  call void @llvm.dbg.declare(metadata {}* %val.dbg.spill, metadata !2237, metadata !DIExpression()), !dbg !2341
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %memory, metadata !2239, metadata !DIExpression()), !dbg !2342
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !2243, metadata !DIExpression()), !dbg !2343
  call void @llvm.dbg.declare(metadata {}* %v.dbg.spill, metadata !2321, metadata !DIExpression()), !dbg !2344
  call void @llvm.dbg.declare(metadata i64* %self3, metadata !2345, metadata !DIExpression()), !dbg !2349
  call void @llvm.dbg.declare(metadata i64* %self4, metadata !2356, metadata !DIExpression()), !dbg !2360
  call void @llvm.dbg.declare(metadata i64* %self5, metadata !2361, metadata !DIExpression()), !dbg !2365
  call void @llvm.dbg.declare(metadata i64* %self6, metadata !2372, metadata !DIExpression()), !dbg !2376
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h8e9bd93aa89f042cE"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") %self, i64 %new_layout.0, i64 %new_layout.1), !dbg !2286
  br label %bb1, !dbg !2286

bb1:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to i64*, !dbg !2285
  %_45 = load i64, i64* %3, align 8, !dbg !2285, !range !433, !noundef !140
  switch i64 %_45, label %bb20 [
    i64 0, label %bb21
    i64 1, label %bb19
  ], !dbg !2285

bb20:                                             ; preds = %bb1
  unreachable, !dbg !2285

bb21:                                             ; preds = %bb1
  %4 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !2285
  %5 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %4, i32 0, i32 1, !dbg !2285
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0, !dbg !2285
  %v.0 = load i64, i64* %6, align 8, !dbg !2285
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1, !dbg !2285
  %v.1 = load i64, i64* %7, align 8, !dbg !2285, !range !645, !noundef !140
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill7, i32 0, i32 0, !dbg !2285
  store i64 %v.0, i64* %8, align 8, !dbg !2285
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill7, i32 0, i32 1, !dbg !2285
  store i64 %v.1, i64* %9, align 8, !dbg !2285
  call void @llvm.dbg.declare(metadata { i64, i64 }* %v.dbg.spill7, metadata !2279, metadata !DIExpression()), !dbg !2377
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*, !dbg !2377
  %11 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %10, i32 0, i32 1, !dbg !2377
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !2377
  store i64 %v.0, i64* %12, align 8, !dbg !2377
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !2377
  store i64 %v.1, i64* %13, align 8, !dbg !2377
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !2377
  store i64 0, i64* %14, align 8, !dbg !2377
  br label %bb2, !dbg !2285

bb19:                                             ; preds = %bb1
  %15 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !2285
  %16 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %15, i32 0, i32 1, !dbg !2285
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !2285
  %e.0 = load i64, i64* %17, align 8, !dbg !2285
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !2285
  %e.1 = load i64, i64* %18, align 8, !dbg !2285, !range !206, !noundef !140
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !2285
  store i64 %e.0, i64* %19, align 8, !dbg !2285
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !2285
  store i64 %e.1, i64* %20, align 8, !dbg !2285
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !2282, metadata !DIExpression()), !dbg !2378
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 0, !dbg !2378
  store i64 %e.0, i64* %21, align 8, !dbg !2378
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1, !dbg !2378
  store i64 %e.1, i64* %22, align 8, !dbg !2378
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*, !dbg !2378
  %24 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %23, i32 0, i32 1, !dbg !2378
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 0, !dbg !2378
  %26 = load i64, i64* %25, align 8, !dbg !2378
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1, !dbg !2378
  %28 = load i64, i64* %27, align 8, !dbg !2378, !range !206, !noundef !140
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 0, !dbg !2378
  store i64 %26, i64* %29, align 8, !dbg !2378
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 1, !dbg !2378
  store i64 %28, i64* %30, align 8, !dbg !2378
  %31 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !2378
  store i64 1, i64* %31, align 8, !dbg !2378
  br label %bb2, !dbg !2285

bb2:                                              ; preds = %bb21, %bb19
  %32 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !2286
  %_9 = load i64, i64* %32, align 8, !dbg !2286, !range !433, !noundef !140
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !2286

bb4:                                              ; preds = %bb2
  unreachable, !dbg !2286

bb3:                                              ; preds = %bb2
  %33 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*, !dbg !2286
  %34 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %33, i32 0, i32 1, !dbg !2286
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0, !dbg !2286
  %val.0 = load i64, i64* %35, align 8, !dbg !2286
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1, !dbg !2286
  %val.1 = load i64, i64* %36, align 8, !dbg !2286, !range !645, !noundef !140
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill11, i32 0, i32 0, !dbg !2286
  store i64 %val.0, i64* %37, align 8, !dbg !2286
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill11, i32 0, i32 1, !dbg !2286
  store i64 %val.1, i64* %38, align 8, !dbg !2286
  call void @llvm.dbg.declare(metadata { i64, i64 }* %val.dbg.spill11, metadata !2220, metadata !DIExpression()), !dbg !2379
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !2379
  store i64 %val.0, i64* %39, align 8, !dbg !2379
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !2379
  store i64 %val.1, i64* %40, align 8, !dbg !2379
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !2380
  store i64 -9223372036854775807, i64* %41, align 8, !dbg !2380
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !2327
  %43 = load i64, i64* %42, align 8, !dbg !2327, !range !1046, !noundef !140
  %44 = sub i64 %43, -9223372036854775807, !dbg !2327
  %45 = icmp eq i64 %44, 0, !dbg !2327
  %_55 = select i1 %45, i64 0, i64 1, !dbg !2327
  switch i64 %_55, label %bb23 [
    i64 0, label %bb24
    i64 1, label %bb22
  ], !dbg !2327

bb5:                                              ; preds = %bb2
  %46 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*, !dbg !2386
  %47 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %46, i32 0, i32 1, !dbg !2386
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %47, i32 0, i32 0, !dbg !2386
  %residual.0 = load i64, i64* %48, align 8, !dbg !2386
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %47, i32 0, i32 1, !dbg !2386
  %residual.1 = load i64, i64* %49, align 8, !dbg !2386, !range !206, !noundef !140
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !2386
  store i64 %residual.0, i64* %50, align 8, !dbg !2386
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !2386
  store i64 %residual.1, i64* %51, align 8, !dbg !2386
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !2205, metadata !DIExpression()), !dbg !2387
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !2387
  store i64 %residual.0, i64* %52, align 8, !dbg !2387
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !2387
  store i64 %residual.1, i64* %53, align 8, !dbg !2387
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !2297
  %e.08 = load i64, i64* %54, align 8, !dbg !2297
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !2297
  %e.19 = load i64, i64* %55, align 8, !dbg !2297, !range !206, !noundef !140
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill10, i32 0, i32 0, !dbg !2297
  store i64 %e.08, i64* %56, align 8, !dbg !2297
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill10, i32 0, i32 1, !dbg !2297
  store i64 %e.19, i64* %57, align 8, !dbg !2297
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill10, metadata !2293, metadata !DIExpression()), !dbg !2388
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0, !dbg !2388
  store i64 %e.08, i64* %58, align 8, !dbg !2388
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1, !dbg !2388
  store i64 %e.19, i64* %59, align 8, !dbg !2388
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !2389, metadata !DIExpression()), !dbg !2393
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 0, !dbg !2393
  store i64 %e.08, i64* %60, align 8, !dbg !2393
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 1, !dbg !2393
  store i64 %e.19, i64* %61, align 8, !dbg !2393
  %62 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !2388
  %63 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %62, i32 0, i32 1, !dbg !2388
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 0, !dbg !2388
  %65 = load i64, i64* %64, align 8, !dbg !2388
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 1, !dbg !2388
  %67 = load i64, i64* %66, align 8, !dbg !2388, !range !206, !noundef !140
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %63, i32 0, i32 0, !dbg !2388
  store i64 %65, i64* %68, align 8, !dbg !2388
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %63, i32 0, i32 1, !dbg !2388
  store i64 %67, i64* %69, align 8, !dbg !2388
  %70 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !2388
  store i64 1, i64* %70, align 8, !dbg !2388
  br label %bb17, !dbg !2395

bb17:                                             ; preds = %bb25, %bb5
  br label %bb18, !dbg !2397

bb23:                                             ; preds = %bb3
  unreachable, !dbg !2327

bb24:                                             ; preds = %bb3
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !2344
  store i64 -9223372036854775807, i64* %71, align 8, !dbg !2344
  br label %bb6, !dbg !2327

bb22:                                             ; preds = %bb3
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !2327
  %e.012 = load i64, i64* %72, align 8, !dbg !2327
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !2327
  %e.113 = load i64, i64* %73, align 8, !dbg !2327, !range !206, !noundef !140
  %74 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill14, i32 0, i32 0, !dbg !2327
  store i64 %e.012, i64* %74, align 8, !dbg !2327
  %75 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill14, i32 0, i32 1, !dbg !2327
  store i64 %e.113, i64* %75, align 8, !dbg !2327
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill14, metadata !2324, metadata !DIExpression()), !dbg !2398
  %76 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 0, !dbg !2398
  store i64 %e.012, i64* %76, align 8, !dbg !2398
  %77 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1, !dbg !2398
  store i64 %e.113, i64* %77, align 8, !dbg !2398
  %78 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 0, !dbg !2398
  %79 = load i64, i64* %78, align 8, !dbg !2398
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1, !dbg !2398
  %81 = load i64, i64* %80, align 8, !dbg !2398, !range !206, !noundef !140
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !2398
  store i64 %79, i64* %82, align 8, !dbg !2398
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !2398
  store i64 %81, i64* %83, align 8, !dbg !2398
  br label %bb6, !dbg !2327

bb6:                                              ; preds = %bb24, %bb22
  %84 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !2328
  %85 = load i64, i64* %84, align 8, !dbg !2328, !range !1046, !noundef !140
  %86 = sub i64 %85, -9223372036854775807, !dbg !2328
  %87 = icmp eq i64 %86, 0, !dbg !2328
  %_17 = select i1 %87, i64 0, i64 1, !dbg !2328
  switch i64 %_17, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ], !dbg !2328

bb8:                                              ; preds = %bb6
  unreachable, !dbg !2328

bb7:                                              ; preds = %bb6
  %88 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, i32 0, i32 1, !dbg !2399
  %89 = load i64, i64* %88, align 8, !dbg !2399, !range !206, !noundef !140
  %90 = icmp eq i64 %89, 0, !dbg !2399
  %_22 = select i1 %90, i64 0, i64 1, !dbg !2399
  %91 = icmp eq i64 %_22, 1, !dbg !2399
  br i1 %91, label %bb11, label %bb10, !dbg !2399

bb9:                                              ; preds = %bb6
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !2400
  %residual.015 = load i64, i64* %92, align 8, !dbg !2400
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !2400
  %residual.116 = load i64, i64* %93, align 8, !dbg !2400, !range !206, !noundef !140
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill17, i32 0, i32 0, !dbg !2400
  store i64 %residual.015, i64* %94, align 8, !dbg !2400
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill17, i32 0, i32 1, !dbg !2400
  store i64 %residual.116, i64* %95, align 8, !dbg !2400
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill17, metadata !2222, metadata !DIExpression()), !dbg !2401
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 0, !dbg !2401
  store i64 %residual.015, i64* %96, align 8, !dbg !2401
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 1, !dbg !2401
  store i64 %residual.116, i64* %97, align 8, !dbg !2401
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 0, !dbg !2339
  %e.018 = load i64, i64* %98, align 8, !dbg !2339
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 1, !dbg !2339
  %e.119 = load i64, i64* %99, align 8, !dbg !2339, !range !206, !noundef !140
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill20, i32 0, i32 0, !dbg !2339
  store i64 %e.018, i64* %100, align 8, !dbg !2339
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill20, i32 0, i32 1, !dbg !2339
  store i64 %e.119, i64* %101, align 8, !dbg !2339
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill20, metadata !2335, metadata !DIExpression()), !dbg !2402
; call <T as core::convert::From<T>>::from
  %102 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h91aa860e841d02efE"(i64 %e.018, i64 %e.119), !dbg !2402
  %_61.0 = extractvalue { i64, i64 } %102, 0, !dbg !2402
  %_61.1 = extractvalue { i64, i64 } %102, 1, !dbg !2402
  br label %bb25, !dbg !2402

bb25:                                             ; preds = %bb9
  %103 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !2402
  %104 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %103, i32 0, i32 1, !dbg !2402
  %105 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %104, i32 0, i32 0, !dbg !2402
  store i64 %_61.0, i64* %105, align 8, !dbg !2402
  %106 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %104, i32 0, i32 1, !dbg !2402
  store i64 %_61.1, i64* %106, align 8, !dbg !2402
  %107 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !2402
  store i64 1, i64* %107, align 8, !dbg !2402
  br label %bb17, !dbg !2403

bb18:                                             ; preds = %bb16, %bb17
  ret void, !dbg !2397

bb11:                                             ; preds = %bb7
  %108 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !2405
  %109 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %108 to { i8*, { i64, i64 } }*, !dbg !2405
  %110 = bitcast { i8*, { i64, i64 } }* %109 to i8**, !dbg !2405
  %ptr = load i8*, i8** %110, align 8, !dbg !2405, !nonnull !140, !noundef !140
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !2405
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2241, metadata !DIExpression()), !dbg !2405
  %111 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !2343
  %112 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %111 to { i8*, { i64, i64 } }*, !dbg !2343
  %113 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %112, i32 0, i32 1, !dbg !2343
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %113, i32 0, i32 0, !dbg !2343
  %115 = load i64, i64* %114, align 8, !dbg !2343
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %113, i32 0, i32 1, !dbg !2343
  %117 = load i64, i64* %116, align 8, !dbg !2343, !range !645, !noundef !140
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !2343
  store i64 %115, i64* %118, align 8, !dbg !2343
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !2343
  store i64 %117, i64* %119, align 8, !dbg !2343
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill, align 8, !dbg !2355
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !2353, metadata !DIExpression()), !dbg !2406
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !2406
  %121 = load i64, i64* %120, align 8, !dbg !2406, !range !645, !noundef !140
  store i64 %121, i64* %self4, align 8, !dbg !2406
  %_74 = load i64, i64* %self4, align 8, !dbg !2360, !range !645, !noundef !140
  store i64 %_74, i64* %n.dbg.spill, align 8, !dbg !2360
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !2407, metadata !DIExpression()), !dbg !2414
  store i64 %_74, i64* %self3, align 8, !dbg !2414
  %_32 = load i64, i64* %self3, align 8, !dbg !2349
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill21, align 8, !dbg !2371
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill21, metadata !2369, metadata !DIExpression()), !dbg !2416
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !2416
  %123 = load i64, i64* %122, align 8, !dbg !2416, !range !645, !noundef !140
  store i64 %123, i64* %self6, align 8, !dbg !2416
  %_80 = load i64, i64* %self6, align 8, !dbg !2376, !range !645, !noundef !140
  store i64 %_80, i64* %n.dbg.spill22, align 8, !dbg !2376
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill22, metadata !2417, metadata !DIExpression()), !dbg !2424
  store i64 %_80, i64* %self5, align 8, !dbg !2424
  %_34 = load i64, i64* %self5, align 8, !dbg !2365
  %_31 = icmp eq i64 %_32, %_34, !dbg !2355
  call void @llvm.assume(i1 %_31), !dbg !2426
  br label %bb12, !dbg !2426

bb10:                                             ; preds = %bb7
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !2427
  %_41.0 = load i64, i64* %124, align 8, !dbg !2427
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !2427
  %_41.1 = load i64, i64* %125, align 8, !dbg !2427, !range !645, !noundef !140
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %126 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h0fb66dc17ec3f176E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %_41.0, i64 %_41.1), !dbg !2428
  store { i8*, i64 } %126, { i8*, i64 }* %memory, align 8, !dbg !2428
  br label %bb14, !dbg !2428

bb14:                                             ; preds = %bb10
  br label %bb15, !dbg !2429

bb15:                                             ; preds = %bb13, %bb14
  %127 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 0, !dbg !2430
  %_42.0 = load i8*, i8** %127, align 8, !dbg !2430
  %128 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 1, !dbg !2430
  %_42.1 = load i64, i64* %128, align 8, !dbg !2430
  %129 = bitcast i64** %_43 to { i64, i64 }**, !dbg !2431
  store { i64, i64 }* %new_layout, { i64, i64 }** %129, align 8, !dbg !2431
  %130 = load i64*, i64** %_43, align 8, !dbg !2430, !nonnull !140, !align !2432, !noundef !140
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h165ad2397c373541E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i8* %_42.0, i64 %_42.1, i64* align 8 %130), !dbg !2430
  br label %bb16, !dbg !2430

bb12:                                             ; preds = %bb11
  %131 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !2433
  %_38.0 = load i64, i64* %131, align 8, !dbg !2433
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !2433
  %_38.1 = load i64, i64* %132, align 8, !dbg !2433, !range !645, !noundef !140
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !2434
  %_39.0 = load i64, i64* %133, align 8, !dbg !2434
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !2434
  %_39.1 = load i64, i64* %134, align 8, !dbg !2434, !range !645, !noundef !140
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %135 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h9e85290fb7de99d4E"(%"alloc::alloc::Global"* align 1 %alloc, i8* %ptr, i64 %_38.0, i64 %_38.1, i64 %_39.0, i64 %_39.1), !dbg !2435
  store { i8*, i64 } %135, { i8*, i64 }* %memory, align 8, !dbg !2435
  br label %bb13, !dbg !2435

bb13:                                             ; preds = %bb12
  br label %bb15, !dbg !2429

bb16:                                             ; preds = %bb15
  br label %bb18, !dbg !2397
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h279df25bbe7182e6E"() unnamed_addr #0 !dbg !2436 {
start:
  %_2.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]", align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]"* %_1.dbg.spill, metadata !2440, metadata !DIExpression()), !dbg !2442
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %_2.dbg.spill, metadata !2441, metadata !DIExpression()), !dbg !2443
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2444
  store i64 0, i64* %1, align 8, !dbg !2444
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !2445
  %3 = load i64, i64* %2, align 8, !dbg !2445
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2445
  %5 = load i64, i64* %4, align 8, !dbg !2445, !range !206, !noundef !140
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !2445
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !2445
  ret { i64, i64 } %7, !dbg !2445
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hf3f1149945585880E"(i64* align 8 %0) unnamed_addr #0 !dbg !2446 {
start:
  %_2.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %_3 = alloca { i64, i64 }, align 8
  %_1 = alloca i64*, align 8
  store i64* %0, i64** %_1, align 8
  %1 = bitcast i64** %_1 to { i64, i64 }**
  %2 = load { i64, i64 }*, { i64, i64 }** %1, align 8, !nonnull !140, !align !2432, !noundef !140
  call void @llvm.dbg.declare(metadata i64** %_1, metadata !2450, metadata !DIExpression(DW_OP_deref)), !dbg !2452
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %_2.dbg.spill, metadata !2451, metadata !DIExpression()), !dbg !2453
  %3 = bitcast i64** %_1 to { i64, i64 }**, !dbg !2454
  %_5 = load { i64, i64 }*, { i64, i64 }** %3, align 8, !dbg !2454, !nonnull !140, !align !2432, !noundef !140
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0, !dbg !2454
  %_4.0 = load i64, i64* %4, align 8, !dbg !2454
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !2454
  %_4.1 = load i64, i64* %5, align 8, !dbg !2454, !range !645, !noundef !140
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !2455
  store i64 %_4.0, i64* %6, align 8, !dbg !2455
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !2455
  store i64 %_4.1, i64* %7, align 8, !dbg !2455
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !2455
  %9 = load i64, i64* %8, align 8, !dbg !2455
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !2455
  %11 = load i64, i64* %10, align 8, !dbg !2455, !range !206, !noundef !140
; call <T as core::convert::Into<U>>::into
  %12 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h846831bd743ffb62E"(i64 %9, i64 %11), !dbg !2455
  %13 = extractvalue { i64, i64 } %12, 0, !dbg !2455
  %14 = extractvalue { i64, i64 } %12, 1, !dbg !2455
  br label %bb1, !dbg !2455

bb1:                                              ; preds = %start
  %15 = insertvalue { i64, i64 } undef, i64 %13, 0, !dbg !2456
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1, !dbg !2456
  ret { i64, i64 } %16, !dbg !2456
}

; alloc::raw_vec::handle_reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec14handle_reserve17h1a4fd17d14696974E(i64 %result.0, i64 %result.1) unnamed_addr #0 !dbg !2457 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %result.dbg.spill = alloca { i64, i64 }, align 8
  %_2 = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %result.dbg.spill, i32 0, i32 0
  store i64 %result.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %result.dbg.spill, i32 0, i32 1
  store i64 %result.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %result.dbg.spill, metadata !2461, metadata !DIExpression()), !dbg !2464
; call core::result::Result<T,E>::map_err
  %2 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h7c2c49ffc86eed49E"(i64 %result.0, i64 %result.1), !dbg !2465
  store { i64, i64 } %2, { i64, i64 }* %_2, align 8, !dbg !2465
  br label %bb1, !dbg !2465

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !2465
  %4 = load i64, i64* %3, align 8, !dbg !2465, !range !1046, !noundef !140
  %5 = sub i64 %4, -9223372036854775807, !dbg !2465
  %6 = icmp eq i64 %5, 0, !dbg !2465
  %_6 = select i1 %6, i64 0, i64 1, !dbg !2465
  switch i64 %_6, label %bb4 [
    i64 0, label %bb2
    i64 1, label %bb3
  ], !dbg !2466

bb4:                                              ; preds = %bb3, %bb1
  unreachable, !dbg !2465

bb2:                                              ; preds = %bb1
  ret void, !dbg !2467

bb3:                                              ; preds = %bb1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !2465
  %8 = load i64, i64* %7, align 8, !dbg !2465, !range !206, !noundef !140
  %9 = icmp eq i64 %8, 0, !dbg !2465
  %_5 = select i1 %9, i64 0, i64 1, !dbg !2465
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ], !dbg !2466

bb5:                                              ; preds = %bb3
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #17, !dbg !2468
  unreachable, !dbg !2468

bb6:                                              ; preds = %bb3
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 0, !dbg !2469
  %layout.0 = load i64, i64* %10, align 8, !dbg !2469
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !2469
  %layout.1 = load i64, i64* %11, align 8, !dbg !2469, !range !645, !noundef !140
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !2469
  store i64 %layout.0, i64* %12, align 8, !dbg !2469
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !2469
  store i64 %layout.1, i64* %13, align 8, !dbg !2469
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !2462, metadata !DIExpression()), !dbg !2470
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64 %layout.0, i64 %layout.1) #17, !dbg !2471
  unreachable, !dbg !2471
}

; alloc::raw_vec::handle_reserve::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h4c6e33af5edd4a36E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !2472 {
start:
  %self.dbg.spill2 = alloca { i64, i64 }*, align 8
  %__self_0.dbg.spill = alloca { i64, i64 }*, align 8
  %self.dbg.spill1 = alloca { i64, i64 }*, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %2 = alloca { i64, i64 }, align 8
  %e = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %_1.dbg.spill, metadata !2477, metadata !DIExpression()), !dbg !2478
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e, metadata !2476, metadata !DIExpression()), !dbg !2479
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill, align 8, !dbg !2480
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !2481, metadata !DIExpression()), !dbg !2488
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill1, align 8, !dbg !2488
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill1, metadata !2489, metadata !DIExpression()), !dbg !2502
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1, !dbg !2502
  %6 = load i64, i64* %5, align 8, !dbg !2502, !range !206, !noundef !140
  %7 = icmp eq i64 %6, 0, !dbg !2502
  %_5 = select i1 %7, i64 0, i64 1, !dbg !2502
  switch i64 %_5, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !2502

bb3:                                              ; preds = %start
  unreachable, !dbg !2502

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !2502
  store i64 0, i64* %8, align 8, !dbg !2502
  br label %bb1, !dbg !2502

bb2:                                              ; preds = %start
  store { i64, i64 }* %e, { i64, i64 }** %__self_0.dbg.spill, align 8, !dbg !2502
  call void @llvm.dbg.declare(metadata { i64, i64 }** %__self_0.dbg.spill, metadata !2497, metadata !DIExpression()), !dbg !2504
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill2, align 8, !dbg !2504
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill2, metadata !2505, metadata !DIExpression()), !dbg !2512
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0, !dbg !2512
  %_8.0 = load i64, i64* %9, align 8, !dbg !2512
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1, !dbg !2512
  %_8.1 = load i64, i64* %10, align 8, !dbg !2512, !range !645, !noundef !140
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !2504
  store i64 %_8.0, i64* %11, align 8, !dbg !2504
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !2504
  store i64 %_8.1, i64* %12, align 8, !dbg !2504
  br label %bb1, !dbg !2502

bb1:                                              ; preds = %bb4, %bb2
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !2514
  %14 = load i64, i64* %13, align 8, !dbg !2514
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !2514
  %16 = load i64, i64* %15, align 8, !dbg !2514, !range !206, !noundef !140
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0, !dbg !2514
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1, !dbg !2514
  ret { i64, i64 } %18, !dbg !2514
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h91f49f7466e9561cE"(i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2515 {
start:
  %ptr.dbg.spill6 = alloca i32*, align 8
  %ptr.dbg.spill5 = alloca i32*, align 8
  %ptr.dbg.spill4 = alloca i32*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill2 = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %layout.dbg.spill1 = alloca { i64, i64 }, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %_46 = alloca i32*, align 8
  %_37 = alloca i8, align 1
  %self = alloca i32*, align 8
  %_31 = alloca i32*, align 8
  %result = alloca { i8*, i64 }, align 8
  %_15 = alloca { i64, i64 }, align 8
  %_10 = alloca { i64, i64 }, align 8
  %_4 = alloca i8, align 1
  %2 = alloca { i32*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i64 %capacity, i64* %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !2519, metadata !DIExpression()), !dbg !2532
  call void @llvm.dbg.declare(metadata i8* %init, metadata !2520, metadata !DIExpression()), !dbg !2533
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !2521, metadata !DIExpression()), !dbg !2534
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %result, metadata !2526, metadata !DIExpression()), !dbg !2535
  call void @llvm.dbg.declare(metadata i32** %self, metadata !2536, metadata !DIExpression()), !dbg !2540
  store i8 1, i8* %_37, align 1, !dbg !2542
  br i1 false, label %bb1, label %bb2, !dbg !2542

bb1:                                              ; preds = %start
  store i8 1, i8* %_4, align 1, !dbg !2542
  br label %bb3, !dbg !2542

bb2:                                              ; preds = %start
  %_6 = icmp eq i64 %capacity, 0, !dbg !2543
  %4 = zext i1 %_6 to i8, !dbg !2542
  store i8 %4, i8* %_4, align 1, !dbg !2542
  br label %bb3, !dbg !2542

bb3:                                              ; preds = %bb1, %bb2
  %5 = load i8, i8* %_4, align 1, !dbg !2542, !range !245, !noundef !140
  %6 = trunc i8 %5 to i1, !dbg !2542
  br i1 %6, label %bb4, label %bb6, !dbg !2542

bb6:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::array
  %7 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hacb403b6aba41249E(i64 %capacity)
          to label %bb7 unwind label %cleanup, !dbg !2544

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_37, align 1, !dbg !2545
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %8 = invoke { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h5fddc5eaa03b3122E"()
          to label %bb5 unwind label %cleanup, !dbg !2546

bb26:                                             ; preds = %cleanup
  %9 = load i8, i8* %_37, align 1, !dbg !2547, !range !245, !noundef !140
  %10 = trunc i8 %9 to i1, !dbg !2547
  br i1 %10, label %bb25, label %bb24, !dbg !2547

cleanup:                                          ; preds = %bb20, %bb16, %bb14, %bb11, %bb8, %bb6, %bb4
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb26

bb5:                                              ; preds = %bb4
  store { i32*, i64 } %8, { i32*, i64 }* %2, align 8, !dbg !2546
  br label %bb23, !dbg !2548

bb23:                                             ; preds = %bb22, %bb5
  %16 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 0, !dbg !2549
  %17 = load i32*, i32** %16, align 8, !dbg !2549, !nonnull !140, !noundef !140
  %18 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1, !dbg !2549
  %19 = load i64, i64* %18, align 8, !dbg !2549
  %20 = insertvalue { i32*, i64 } undef, i32* %17, 0, !dbg !2549
  %21 = insertvalue { i32*, i64 } %20, i64 %19, 1, !dbg !2549
  ret { i32*, i64 } %21, !dbg !2549

bb7:                                              ; preds = %bb6
  store { i64, i64 } %7, { i64, i64 }* %_10, align 8, !dbg !2544
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !2544
  %23 = load i64, i64* %22, align 8, !dbg !2544, !range !206, !noundef !140
  %24 = icmp eq i64 %23, 0, !dbg !2544
  %_12 = select i1 %24, i64 1, i64 0, !dbg !2544
  switch i64 %_12, label %bb9 [
    i64 0, label %bb10
    i64 1, label %bb8
  ], !dbg !2550

bb9:                                              ; preds = %bb7
  unreachable, !dbg !2544

bb10:                                             ; preds = %bb7
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 0, !dbg !2551
  %layout.0 = load i64, i64* %25, align 8, !dbg !2551
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !2551
  %layout.1 = load i64, i64* %26, align 8, !dbg !2551, !range !645, !noundef !140
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !2551
  store i64 %layout.0, i64* %27, align 8, !dbg !2551
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !2551
  store i64 %layout.1, i64* %28, align 8, !dbg !2551
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !2524, metadata !DIExpression()), !dbg !2552
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 0, !dbg !2553
  store i64 %layout.0, i64* %29, align 8, !dbg !2553
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 1, !dbg !2553
  store i64 %layout.1, i64* %30, align 8, !dbg !2553
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill1, metadata !2522, metadata !DIExpression()), !dbg !2554
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !2555
  store i64 -9223372036854775807, i64* %31, align 8, !dbg !2555
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !2559
  %33 = load i64, i64* %32, align 8, !dbg !2559, !range !1046, !noundef !140
  %34 = sub i64 %33, -9223372036854775807, !dbg !2559
  %35 = icmp eq i64 %34, 0, !dbg !2559
  %_18 = select i1 %35, i64 0, i64 1, !dbg !2559
  switch i64 %_18, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ], !dbg !2560

bb8:                                              ; preds = %bb7
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #17
          to label %unreachable unwind label %cleanup, !dbg !2561

unreachable:                                      ; preds = %bb20, %bb11, %bb8
  unreachable

bb12:                                             ; preds = %bb10
  unreachable, !dbg !2559

bb13:                                             ; preds = %bb10
  %36 = load i8, i8* %init, align 1, !dbg !2562, !range !245, !noundef !140
  %37 = trunc i8 %36 to i1, !dbg !2562
  %_21 = zext i1 %37 to i64, !dbg !2562
  switch i64 %_21, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ], !dbg !2563

bb11:                                             ; preds = %bb10
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #17
          to label %unreachable unwind label %cleanup, !dbg !2564

bb15:                                             ; preds = %bb13
  unreachable, !dbg !2562

bb16:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %38 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h0fb66dc17ec3f176E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb17 unwind label %cleanup, !dbg !2565

bb14:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %39 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h1c4b5b40c04fef75E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb18 unwind label %cleanup, !dbg !2566

bb18:                                             ; preds = %bb14
  store { i8*, i64 } %39, { i8*, i64 }* %result, align 8, !dbg !2566
  br label %bb19, !dbg !2567

bb19:                                             ; preds = %bb17, %bb18
  %40 = bitcast { i8*, i64 }* %result to {}**, !dbg !2568
  %41 = load {}*, {}** %40, align 8, !dbg !2568
  %42 = icmp eq {}* %41, null, !dbg !2568
  %_27 = select i1 %42, i64 1, i64 0, !dbg !2568
  switch i64 %_27, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !2569

bb17:                                             ; preds = %bb16
  store { i8*, i64 } %38, { i8*, i64 }* %result, align 8, !dbg !2565
  br label %bb19, !dbg !2570

bb21:                                             ; preds = %bb19
  unreachable, !dbg !2568

bb22:                                             ; preds = %bb19
  %43 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0, !dbg !2571
  %ptr.0 = load i8*, i8** %43, align 8, !dbg !2571, !nonnull !140, !noundef !140
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1, !dbg !2571
  %ptr.1 = load i64, i64* %44, align 8, !dbg !2571
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !2571
  store i8* %ptr.0, i8** %45, align 8, !dbg !2571
  %46 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !2571
  store i64 %ptr.1, i64* %46, align 8, !dbg !2571
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !2530, metadata !DIExpression()), !dbg !2572
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 0, !dbg !2573
  store i8* %ptr.0, i8** %47, align 8, !dbg !2573
  %48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 1, !dbg !2573
  store i64 %ptr.1, i64* %48, align 8, !dbg !2573
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill2, metadata !2528, metadata !DIExpression()), !dbg !2574
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !2541
  store i8* %ptr.0, i8** %49, align 8, !dbg !2541
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !2541
  store i64 %ptr.1, i64* %50, align 8, !dbg !2541
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !2575, metadata !DIExpression()), !dbg !2583
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !2583
  store i8* %ptr.0, i8** %51, align 8, !dbg !2583
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !2583
  store i64 %ptr.1, i64* %52, align 8, !dbg !2583
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !2584, metadata !DIExpression()), !dbg !2588
  %_41.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !2588
  %ptr = bitcast [0 x i8]* %_41.0 to i32*, !dbg !2583
  store i32* %ptr, i32** %ptr.dbg.spill4, align 8, !dbg !2583
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill4, metadata !2590, metadata !DIExpression()), !dbg !2596
  store i32* %ptr, i32** %self, align 8, !dbg !2596
  %_45 = load i32*, i32** %self, align 8, !dbg !2540
  store i32* %_45, i32** %ptr.dbg.spill5, align 8, !dbg !2540
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill5, metadata !2598, metadata !DIExpression()), !dbg !2604
  store i32* %_45, i32** %ptr.dbg.spill6, align 8, !dbg !2604
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill6, metadata !2606, metadata !DIExpression()), !dbg !2610
  store i32* %_45, i32** %_46, align 8, !dbg !2610
  %53 = load i32*, i32** %_46, align 8, !dbg !2604, !nonnull !140, !noundef !140
  store i32* %53, i32** %_31, align 8, !dbg !2604
  %54 = bitcast { i32*, i64 }* %2 to i32**, !dbg !2612
  %55 = load i32*, i32** %_31, align 8, !dbg !2612, !nonnull !140, !noundef !140
  store i32* %55, i32** %54, align 8, !dbg !2612
  %56 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1, !dbg !2612
  store i64 %capacity, i64* %56, align 8, !dbg !2612
  %57 = bitcast { i32*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !2612
  br label %bb23, !dbg !2548

bb20:                                             ; preds = %bb19
; invoke alloc::alloc::handle_alloc_error
  invoke void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64 %layout.0, i64 %layout.1) #17
          to label %unreachable unwind label %cleanup, !dbg !2613

bb24:                                             ; preds = %bb25, %bb26
  %58 = bitcast { i8*, i32 }* %1 to i8**, !dbg !2614
  %59 = load i8*, i8** %58, align 8, !dbg !2614
  %60 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !2614
  %61 = load i32, i32* %60, align 8, !dbg !2614
  %62 = insertvalue { i8*, i32 } undef, i8* %59, 0, !dbg !2614
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1, !dbg !2614
  resume { i8*, i32 } %63, !dbg !2614

bb25:                                             ; preds = %bb26
  br label %bb24, !dbg !2547
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hd3a07ce867a517c5E"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !2615 {
start:
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca { i32*, i64 }*, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %self1 = alloca i64, align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !2619, metadata !DIExpression()), !dbg !2622
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2620, metadata !DIExpression()), !dbg !2623
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !2621, metadata !DIExpression()), !dbg !2624
  call void @llvm.dbg.declare(metadata i64* %self1, metadata !2625, metadata !DIExpression()), !dbg !2630
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill2, align 8, !dbg !2631
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill2, metadata !2632, metadata !DIExpression()), !dbg !2637
  br i1 false, label %bb2, label %bb3, !dbg !2637

bb2:                                              ; preds = %start
  store i64 -1, i64* %self1, align 8, !dbg !2637
  br label %bb1, !dbg !2637

bb3:                                              ; preds = %start
  %0 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !2637
  %1 = load i64, i64* %0, align 8, !dbg !2637
  store i64 %1, i64* %self1, align 8, !dbg !2637
  br label %bb1, !dbg !2637

bb1:                                              ; preds = %bb2, %bb3
  store i64 %len, i64* %rhs.dbg.spill, align 8, !dbg !2638
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !2629, metadata !DIExpression()), !dbg !2630
  %_10 = load i64, i64* %self1, align 8, !dbg !2630
  %_5 = sub i64 %_10, %len, !dbg !2630
  %2 = icmp ugt i64 %additional, %_5, !dbg !2639
  ret i1 %2, !dbg !2640
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hf4494b29e24149ddE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i32*, i64 }* align 8 %self) unnamed_addr #1 !dbg !2641 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i32*, align 8
  %self.dbg.spill4 = alloca i32*, align 8
  %self.dbg.spill3 = alloca i32*, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %_11 = alloca i8*, align 8
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !2645, metadata !DIExpression()), !dbg !2648
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !2649, metadata !DIExpression()), !dbg !2658
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !2660, metadata !DIExpression()), !dbg !2667
  br i1 false, label %bb1, label %bb2, !dbg !2678

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !2678
  br label %bb3, !dbg !2678

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !2679
  %_5 = load i64, i64* %1, align 8, !dbg !2679
  %_4 = icmp eq i64 %_5, 0, !dbg !2679
  %2 = zext i1 %_4 to i8, !dbg !2678
  store i8 %2, i8* %_2, align 1, !dbg !2678
  br label %bb3, !dbg !2678

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_2, align 1, !dbg !2678, !range !245, !noundef !140
  %4 = trunc i8 %3 to i1, !dbg !2678
  br i1 %4, label %bb4, label %bb5, !dbg !2678

bb5:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !2680
  %_8 = load i64, i64* %5, align 8, !dbg !2680
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hacb403b6aba41249E(i64 %_8), !dbg !2659
  store { i64, i64 } %6, { i64, i64 }* %self1, align 8, !dbg !2659
  br label %bb6, !dbg !2659

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1, !dbg !2681
  store i64 0, i64* %7, align 8, !dbg !2681
  br label %bb8, !dbg !2682

bb8:                                              ; preds = %bb7, %bb4
  ret void, !dbg !2683

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !2658
  %9 = load i64, i64* %8, align 8, !dbg !2658, !range !206, !noundef !140
  %10 = icmp eq i64 %9, 0, !dbg !2658
  %_15 = select i1 %10, i64 1, i64 0, !dbg !2658
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !2658

bb10:                                             ; preds = %bb6
  unreachable, !dbg !2658

bb11:                                             ; preds = %bb6
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !2658
  %t.0 = load i64, i64* %11, align 8, !dbg !2658
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !2658
  %t.1 = load i64, i64* %12, align 8, !dbg !2658, !range !645, !noundef !140
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !2658
  store i64 %t.0, i64* %13, align 8, !dbg !2658
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !2658
  store i64 %t.1, i64* %14, align 8, !dbg !2658
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !2655, metadata !DIExpression()), !dbg !2684
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !2684
  store i64 %t.0, i64* %15, align 8, !dbg !2684
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !2684
  store i64 %t.1, i64* %16, align 8, !dbg !2684
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !2646, metadata !DIExpression()), !dbg !2685
  %17 = bitcast { i32*, i64 }* %self to i32**, !dbg !2677
  %self2 = load i32*, i32** %17, align 8, !dbg !2677, !nonnull !140, !noundef !140
  store i32* %self2, i32** %self.dbg.spill3, align 8, !dbg !2677
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill3, metadata !2673, metadata !DIExpression()), !dbg !2686
  store i32* %self2, i32** %self.dbg.spill4, align 8, !dbg !2686
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill4, metadata !2687, metadata !DIExpression()), !dbg !2693
  store i32* %self2, i32** %self.dbg.spill5, align 8, !dbg !2693
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill5, metadata !2695, metadata !DIExpression()), !dbg !2699
  %ptr = bitcast i32* %self2 to i8*, !dbg !2693
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !2693
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2701, metadata !DIExpression()), !dbg !2705
  store i8* %ptr, i8** %pointer, align 8, !dbg !2705
  %_26 = load i8*, i8** %pointer, align 8, !dbg !2667, !nonnull !140, !noundef !140
  store i8* %_26, i8** %_11, align 8, !dbg !2667
  %18 = load i8*, i8** %_11, align 8, !dbg !2677, !nonnull !140, !noundef !140
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h9dd4420d8f9307edE"(i8* %18), !dbg !2677
  br label %bb7, !dbg !2677

bb9:                                              ; preds = %bb6
  unreachable, !dbg !2707

bb7:                                              ; preds = %bb11
  %19 = bitcast { i8*, { i64, i64 } }* %_9 to i8**, !dbg !2715
  store i8* %_10, i8** %19, align 8, !dbg !2715
  %20 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1, !dbg !2715
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !2715
  store i64 %t.0, i64* %21, align 8, !dbg !2715
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !2715
  store i64 %t.1, i64* %22, align 8, !dbg !2715
  %23 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !2716
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %23 to { i8*, { i64, i64 } }*, !dbg !2716
  %25 = bitcast { i8*, { i64, i64 } }* %24 to i8*, !dbg !2716
  %26 = bitcast { i8*, { i64, i64 } }* %_9 to i8*, !dbg !2716
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !2716
  br label %bb8, !dbg !2682
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h1f74a417d8ab45c3E"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !2717 {
start:
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill24 = alloca { i8*, i64 }, align 8
  %e.dbg.spill23 = alloca { i64, i64 }, align 8
  %residual.dbg.spill20 = alloca { i64, i64 }, align 8
  %v.dbg.spill17 = alloca { i8*, i64 }, align 8
  %e.dbg.spill16 = alloca { i64, i64 }, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %cap.dbg.spill13 = alloca i64, align 8
  %v1.dbg.spill11 = alloca i64, align 8
  %v2.dbg.spill10 = alloca i64, align 8
  %cap.dbg.spill = alloca i64, align 8
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %required_cap.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill9 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill6 = alloca i64, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca i64, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %_65 = alloca { i64, i64 }, align 8
  %_55 = alloca { i64, i64 }, align 8
  %_50 = alloca { i64, i64 }, align 8
  %residual4 = alloca { i64, i64 }, align 8
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %residual = alloca { i64, i64 }, align 8
  %err = alloca { i64, i64 }, align 8
  %self2 = alloca { i64, i64 }, align 8
  %self1 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !2722, metadata !DIExpression()), !dbg !2743
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2723, metadata !DIExpression()), !dbg !2744
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !2724, metadata !DIExpression()), !dbg !2745
  call void @llvm.dbg.declare(metadata %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1, metadata !2746, metadata !DIExpression()), !dbg !2786
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self2, metadata !2788, metadata !DIExpression()), !dbg !2798
  call void @llvm.dbg.declare(metadata { i64, i64 }* %err, metadata !2794, metadata !DIExpression()), !dbg !2798
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !2799, metadata !DIExpression()), !dbg !2809
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3, metadata !2811, metadata !DIExpression()), !dbg !2837
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual4, metadata !2839, metadata !DIExpression()), !dbg !2849
  br i1 false, label %bb1, label %bb3, !dbg !2851

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !2852
  store i64 0, i64* %1, align 8, !dbg !2852
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !2852
  %3 = load i64, i64* %2, align 8, !dbg !2852
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !2852
  %5 = load i64, i64* %4, align 8, !dbg !2852, !range !206, !noundef !140
; call <T as core::convert::Into<U>>::into
  %6 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h846831bd743ffb62E"(i64 %3, i64 %5), !dbg !2852
  %_5.0 = extractvalue { i64, i64 } %6, 0, !dbg !2852
  %_5.1 = extractvalue { i64, i64 } %6, 1, !dbg !2852
  br label %bb2, !dbg !2852

bb3:                                              ; preds = %start
; call core::num::<impl usize>::checked_add
  %7 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17he45b9f2a8ce2079eE"(i64 %len, i64 %additional), !dbg !2787
  store { i64, i64 } %7, { i64, i64 }* %self2, align 8, !dbg !2787
  br label %bb4, !dbg !2787

bb4:                                              ; preds = %bb3
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !2853
  store i64 0, i64* %8, align 8, !dbg !2853
  %9 = bitcast { i64, i64 }* %self2 to i64*, !dbg !2798
  %_42 = load i64, i64* %9, align 8, !dbg !2798, !range !433, !noundef !140
  switch i64 %_42, label %bb20 [
    i64 0, label %bb19
    i64 1, label %bb21
  ], !dbg !2798

bb20:                                             ; preds = %bb4
  unreachable, !dbg !2798

bb19:                                             ; preds = %bb4
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 0, !dbg !2798
  %_45.0 = load i64, i64* %10, align 8, !dbg !2798
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !2798
  %_45.1 = load i64, i64* %11, align 8, !dbg !2798, !range !206, !noundef !140
  %12 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !2798
  %13 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %12, i32 0, i32 1, !dbg !2798
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !2798
  store i64 %_45.0, i64* %14, align 8, !dbg !2798
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !2798
  store i64 %_45.1, i64* %15, align 8, !dbg !2798
  %16 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !2798
  store i64 1, i64* %16, align 8, !dbg !2798
  br label %bb22, !dbg !2798

bb21:                                             ; preds = %bb4
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 1, !dbg !2798
  %v = load i64, i64* %17, align 8, !dbg !2798
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !2798
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !2795, metadata !DIExpression()), !dbg !2854
  %18 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !2854
  %19 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %18, i32 0, i32 1, !dbg !2854
  store i64 %v, i64* %19, align 8, !dbg !2854
  %20 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !2854
  store i64 0, i64* %20, align 8, !dbg !2854
  br label %bb22, !dbg !2798

bb22:                                             ; preds = %bb19, %bb21
  %21 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !2786
  %_46 = load i64, i64* %21, align 8, !dbg !2786, !range !433, !noundef !140
  switch i64 %_46, label %bb24 [
    i64 0, label %bb25
    i64 1, label %bb23
  ], !dbg !2786

bb24:                                             ; preds = %bb22
  unreachable, !dbg !2786

bb25:                                             ; preds = %bb22
  %22 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !2786
  %23 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %22, i32 0, i32 1, !dbg !2786
  %v5 = load i64, i64* %23, align 8, !dbg !2786
  store i64 %v5, i64* %v.dbg.spill6, align 8, !dbg !2786
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill6, metadata !2780, metadata !DIExpression()), !dbg !2855
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !2855
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %24, i32 0, i32 1, !dbg !2855
  store i64 %v5, i64* %25, align 8, !dbg !2855
  %26 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !2855
  store i64 0, i64* %26, align 8, !dbg !2855
  br label %bb5, !dbg !2786

bb23:                                             ; preds = %bb22
  %27 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !2786
  %28 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %27, i32 0, i32 1, !dbg !2786
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0, !dbg !2786
  %e.0 = load i64, i64* %29, align 8, !dbg !2786
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1, !dbg !2786
  %e.1 = load i64, i64* %30, align 8, !dbg !2786, !range !206, !noundef !140
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !2786
  store i64 %e.0, i64* %31, align 8, !dbg !2786
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !2786
  store i64 %e.1, i64* %32, align 8, !dbg !2786
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !2783, metadata !DIExpression()), !dbg !2856
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !2856
  store i64 %e.0, i64* %33, align 8, !dbg !2856
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !2856
  store i64 %e.1, i64* %34, align 8, !dbg !2856
  %35 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !2856
  %36 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %35, i32 0, i32 1, !dbg !2856
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !2856
  %38 = load i64, i64* %37, align 8, !dbg !2856
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !2856
  %40 = load i64, i64* %39, align 8, !dbg !2856, !range !206, !noundef !140
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 0, !dbg !2856
  store i64 %38, i64* %41, align 8, !dbg !2856
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 1, !dbg !2856
  store i64 %40, i64* %42, align 8, !dbg !2856
  %43 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !2856
  store i64 1, i64* %43, align 8, !dbg !2856
  br label %bb5, !dbg !2786

bb5:                                              ; preds = %bb25, %bb23
  %44 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !2787
  %_14 = load i64, i64* %44, align 8, !dbg !2787, !range !433, !noundef !140
  switch i64 %_14, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !2787

bb7:                                              ; preds = %bb5
  unreachable, !dbg !2787

bb6:                                              ; preds = %bb5
  %45 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !2787
  %46 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %45, i32 0, i32 1, !dbg !2787
  %val = load i64, i64* %46, align 8, !dbg !2787
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !2787
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !2729, metadata !DIExpression()), !dbg !2857
  store i64 %val, i64* %required_cap.dbg.spill, align 8, !dbg !2857
  call void @llvm.dbg.declare(metadata i64* %required_cap.dbg.spill, metadata !2725, metadata !DIExpression()), !dbg !2858
  %47 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !2859
  %_20 = load i64, i64* %47, align 8, !dbg !2859
  %v1 = mul i64 %_20, 2, !dbg !2859
  store i64 %v1, i64* %v1.dbg.spill, align 8, !dbg !2859
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !2860, metadata !DIExpression()), !dbg !2865
  store i64 %val, i64* %v2.dbg.spill, align 8, !dbg !2867
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !2864, metadata !DIExpression()), !dbg !2865
; call core::cmp::Ord::max
  %cap = call i64 @_ZN4core3cmp3Ord3max17h87106b455f34e45bE(i64 %v1, i64 %val), !dbg !2865
  store i64 %cap, i64* %cap.dbg.spill, align 8, !dbg !2865
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !2731, metadata !DIExpression()), !dbg !2868
  br label %bb26, !dbg !2865

bb8:                                              ; preds = %bb5
  %48 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !2869
  %49 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %48, i32 0, i32 1, !dbg !2869
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 0, !dbg !2869
  %residual.0 = load i64, i64* %50, align 8, !dbg !2869
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 1, !dbg !2869
  %residual.1 = load i64, i64* %51, align 8, !dbg !2869, !range !206, !noundef !140
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !2869
  store i64 %residual.0, i64* %52, align 8, !dbg !2869
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !2869
  store i64 %residual.1, i64* %53, align 8, !dbg !2869
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !2727, metadata !DIExpression()), !dbg !2870
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !2870
  store i64 %residual.0, i64* %54, align 8, !dbg !2870
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !2870
  store i64 %residual.1, i64* %55, align 8, !dbg !2870
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !2809
  %e.07 = load i64, i64* %56, align 8, !dbg !2809
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !2809
  %e.18 = load i64, i64* %57, align 8, !dbg !2809, !range !206, !noundef !140
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 0, !dbg !2809
  store i64 %e.07, i64* %58, align 8, !dbg !2809
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 1, !dbg !2809
  store i64 %e.18, i64* %59, align 8, !dbg !2809
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill9, metadata !2805, metadata !DIExpression()), !dbg !2871
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0, !dbg !2871
  store i64 %e.07, i64* %60, align 8, !dbg !2871
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1, !dbg !2871
  store i64 %e.18, i64* %61, align 8, !dbg !2871
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !2872, metadata !DIExpression()), !dbg !2876
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !2876
  store i64 %e.07, i64* %62, align 8, !dbg !2876
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !2876
  store i64 %e.18, i64* %63, align 8, !dbg !2876
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !2871
  %65 = load i64, i64* %64, align 8, !dbg !2871
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !2871
  %67 = load i64, i64* %66, align 8, !dbg !2871, !range !206, !noundef !140
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !2871
  store i64 %65, i64* %68, align 8, !dbg !2871
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2871
  store i64 %67, i64* %69, align 8, !dbg !2871
  br label %bb17, !dbg !2878

bb17:                                             ; preds = %bb31, %bb8
  br label %bb18, !dbg !2878

bb26:                                             ; preds = %bb6
  store i64 %cap, i64* %v2.dbg.spill10, align 8, !dbg !2880
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill10, metadata !2881, metadata !DIExpression()), !dbg !2886
  store i64 4, i64* %v1.dbg.spill11, align 8, !dbg !2887
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill11, metadata !2885, metadata !DIExpression()), !dbg !2886
; call core::cmp::Ord::max
  %cap12 = call i64 @_ZN4core3cmp3Ord3max17h87106b455f34e45bE(i64 4, i64 %cap), !dbg !2886
  store i64 %cap12, i64* %cap.dbg.spill13, align 8, !dbg !2886
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill13, metadata !2733, metadata !DIExpression()), !dbg !2888
  br label %bb27, !dbg !2886

bb27:                                             ; preds = %bb26
; call core::alloc::layout::Layout::array
  %70 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hacb403b6aba41249E(i64 %cap12), !dbg !2889
  %new_layout.0 = extractvalue { i64, i64 } %70, 0, !dbg !2889
  %new_layout.1 = extractvalue { i64, i64 } %70, 1, !dbg !2889
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0, !dbg !2889
  store i64 %new_layout.0, i64* %71, align 8, !dbg !2889
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1, !dbg !2889
  store i64 %new_layout.1, i64* %72, align 8, !dbg !2889
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !2735, metadata !DIExpression()), !dbg !2890
  br label %bb9, !dbg !2889

bb9:                                              ; preds = %bb27
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hf4494b29e24149ddE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_30, { i32*, i64 }* align 8 %self), !dbg !2891
  br label %bb10, !dbg !2891

bb10:                                             ; preds = %bb9
  %_33 = bitcast { i32*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !2892
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h2bc375db3f95f233E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %self3, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_30, %"alloc::alloc::Global"* align 1 %_33), !dbg !2838
  br label %bb11, !dbg !2838

bb11:                                             ; preds = %bb10
  %73 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to i64*, !dbg !2837
  %_61 = load i64, i64* %73, align 8, !dbg !2837, !range !433, !noundef !140
  switch i64 %_61, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ], !dbg !2837

bb29:                                             ; preds = %bb11
  unreachable, !dbg !2837

bb30:                                             ; preds = %bb11
  %74 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*, !dbg !2837
  %75 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %74, i32 0, i32 1, !dbg !2837
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 0, !dbg !2837
  %v.0 = load i8*, i8** %76, align 8, !dbg !2837, !nonnull !140, !noundef !140
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 1, !dbg !2837
  %v.1 = load i64, i64* %77, align 8, !dbg !2837
  %78 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 0, !dbg !2837
  store i8* %v.0, i8** %78, align 8, !dbg !2837
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 1, !dbg !2837
  store i64 %v.1, i64* %79, align 8, !dbg !2837
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill17, metadata !2831, metadata !DIExpression()), !dbg !2893
  %80 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !2893
  %81 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %80, i32 0, i32 1, !dbg !2893
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 0, !dbg !2893
  store i8* %v.0, i8** %82, align 8, !dbg !2893
  %83 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 1, !dbg !2893
  store i64 %v.1, i64* %83, align 8, !dbg !2893
  %84 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !2893
  store i64 0, i64* %84, align 8, !dbg !2893
  br label %bb12, !dbg !2837

bb28:                                             ; preds = %bb11
  %85 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !2837
  %86 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %85, i32 0, i32 1, !dbg !2837
  %87 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 0, !dbg !2837
  %e.014 = load i64, i64* %87, align 8, !dbg !2837
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 1, !dbg !2837
  %e.115 = load i64, i64* %88, align 8, !dbg !2837, !range !206, !noundef !140
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 0, !dbg !2837
  store i64 %e.014, i64* %89, align 8, !dbg !2837
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 1, !dbg !2837
  store i64 %e.115, i64* %90, align 8, !dbg !2837
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill16, metadata !2834, metadata !DIExpression()), !dbg !2894
  %91 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !2894
  store i64 %e.014, i64* %91, align 8, !dbg !2894
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !2894
  store i64 %e.115, i64* %92, align 8, !dbg !2894
  %93 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !2894
  %94 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %93, i32 0, i32 1, !dbg !2894
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !2894
  %96 = load i64, i64* %95, align 8, !dbg !2894
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !2894
  %98 = load i64, i64* %97, align 8, !dbg !2894, !range !206, !noundef !140
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 0, !dbg !2894
  store i64 %96, i64* %99, align 8, !dbg !2894
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 1, !dbg !2894
  store i64 %98, i64* %100, align 8, !dbg !2894
  %101 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !2894
  store i64 1, i64* %101, align 8, !dbg !2894
  br label %bb12, !dbg !2837

bb12:                                             ; preds = %bb30, %bb28
  %102 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !2838
  %_34 = load i64, i64* %102, align 8, !dbg !2838, !range !433, !noundef !140
  switch i64 %_34, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ], !dbg !2838

bb14:                                             ; preds = %bb12
  unreachable, !dbg !2838

bb13:                                             ; preds = %bb12
  %103 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !2838
  %104 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %103, i32 0, i32 1, !dbg !2838
  %105 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 0, !dbg !2838
  %val.0 = load i8*, i8** %105, align 8, !dbg !2838, !nonnull !140, !noundef !140
  %106 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 1, !dbg !2838
  %val.1 = load i64, i64* %106, align 8, !dbg !2838
  %107 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 0, !dbg !2838
  store i8* %val.0, i8** %107, align 8, !dbg !2838
  %108 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 1, !dbg !2838
  store i64 %val.1, i64* %108, align 8, !dbg !2838
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill24, metadata !2741, metadata !DIExpression()), !dbg !2895
  %109 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !2895
  store i8* %val.0, i8** %109, align 8, !dbg !2895
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !2895
  store i64 %val.1, i64* %110, align 8, !dbg !2895
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !2737, metadata !DIExpression()), !dbg !2896
; call alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h004e3e9f052de042E"({ i32*, i64 }* align 8 %self, i8* %val.0, i64 %val.1, i64 %cap12), !dbg !2897
  br label %bb16, !dbg !2897

bb15:                                             ; preds = %bb12
  %111 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !2898
  %112 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %111, i32 0, i32 1, !dbg !2898
  %113 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 0, !dbg !2898
  %residual.018 = load i64, i64* %113, align 8, !dbg !2898
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 1, !dbg !2898
  %residual.119 = load i64, i64* %114, align 8, !dbg !2898, !range !206, !noundef !140
  %115 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 0, !dbg !2898
  store i64 %residual.018, i64* %115, align 8, !dbg !2898
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 1, !dbg !2898
  store i64 %residual.119, i64* %116, align 8, !dbg !2898
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill20, metadata !2739, metadata !DIExpression()), !dbg !2899
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !2899
  store i64 %residual.018, i64* %117, align 8, !dbg !2899
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !2899
  store i64 %residual.119, i64* %118, align 8, !dbg !2899
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !2849
  %e.021 = load i64, i64* %119, align 8, !dbg !2849
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !2849
  %e.122 = load i64, i64* %120, align 8, !dbg !2849, !range !206, !noundef !140
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 0, !dbg !2849
  store i64 %e.021, i64* %121, align 8, !dbg !2849
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 1, !dbg !2849
  store i64 %e.122, i64* %122, align 8, !dbg !2849
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill23, metadata !2845, metadata !DIExpression()), !dbg !2900
; call <T as core::convert::From<T>>::from
  %123 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h91aa860e841d02efE"(i64 %e.021, i64 %e.122), !dbg !2900
  %_68.0 = extractvalue { i64, i64 } %123, 0, !dbg !2900
  %_68.1 = extractvalue { i64, i64 } %123, 1, !dbg !2900
  br label %bb31, !dbg !2900

bb31:                                             ; preds = %bb15
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !2900
  store i64 %_68.0, i64* %124, align 8, !dbg !2900
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2900
  store i64 %_68.1, i64* %125, align 8, !dbg !2900
  br label %bb17, !dbg !2901

bb18:                                             ; preds = %bb2, %bb16, %bb17
  %126 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !2903
  %127 = load i64, i64* %126, align 8, !dbg !2903
  %128 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2903
  %129 = load i64, i64* %128, align 8, !dbg !2903, !range !1046, !noundef !140
  %130 = insertvalue { i64, i64 } undef, i64 %127, 0, !dbg !2903
  %131 = insertvalue { i64, i64 } %130, i64 %129, 1, !dbg !2903
  ret { i64, i64 } %131, !dbg !2903

bb16:                                             ; preds = %bb13
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2904
  store i64 -9223372036854775807, i64* %132, align 8, !dbg !2904
  br label %bb18, !dbg !2903

bb2:                                              ; preds = %bb1
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !2905
  store i64 %_5.0, i64* %133, align 8, !dbg !2905
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2905
  store i64 %_5.1, i64* %134, align 8, !dbg !2905
  br label %bb18, !dbg !2878
}

; alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h004e3e9f052de042E"({ i32*, i64 }* align 8 %self, i8* %ptr.0, i64 %ptr.1, i64 %cap) unnamed_addr #1 !dbg !2906 {
start:
  %ptr.dbg.spill6 = alloca i32*, align 8
  %ptr.dbg.spill5 = alloca i32*, align 8
  %ptr.dbg.spill4 = alloca i32*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }, align 8
  %cap.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %_17 = alloca i32*, align 8
  %self1 = alloca i32*, align 8
  %_4 = alloca i32*, align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !2910, metadata !DIExpression()), !dbg !2913
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store i8* %ptr.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !2911, metadata !DIExpression()), !dbg !2914
  store i64 %cap, i64* %cap.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !2912, metadata !DIExpression()), !dbg !2915
  call void @llvm.dbg.declare(metadata i32** %self1, metadata !2916, metadata !DIExpression()), !dbg !2920
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !2921
  store i8* %ptr.0, i8** %2, align 8, !dbg !2921
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !2921
  store i64 %ptr.1, i64* %3, align 8, !dbg !2921
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill2, metadata !2922, metadata !DIExpression()), !dbg !2926
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !2926
  store i8* %ptr.0, i8** %4, align 8, !dbg !2926
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !2926
  store i64 %ptr.1, i64* %5, align 8, !dbg !2926
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !2927, metadata !DIExpression()), !dbg !2931
  %_12.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !2931
  %ptr = bitcast [0 x i8]* %_12.0 to i32*, !dbg !2926
  store i32* %ptr, i32** %ptr.dbg.spill4, align 8, !dbg !2926
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill4, metadata !2933, metadata !DIExpression()), !dbg !2937
  store i32* %ptr, i32** %self1, align 8, !dbg !2937
  %_16 = load i32*, i32** %self1, align 8, !dbg !2920
  store i32* %_16, i32** %ptr.dbg.spill5, align 8, !dbg !2920
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill5, metadata !2939, metadata !DIExpression()), !dbg !2943
  store i32* %_16, i32** %ptr.dbg.spill6, align 8, !dbg !2943
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill6, metadata !2945, metadata !DIExpression()), !dbg !2949
  store i32* %_16, i32** %_17, align 8, !dbg !2949
  %6 = load i32*, i32** %_17, align 8, !dbg !2943, !nonnull !140, !noundef !140
  store i32* %6, i32** %_4, align 8, !dbg !2943
  %7 = bitcast { i32*, i64 }* %self to i32**, !dbg !2951
  %8 = load i32*, i32** %_4, align 8, !dbg !2951, !nonnull !140, !noundef !140
  store i32* %8, i32** %7, align 8, !dbg !2951
  %9 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !2952
  store i64 %cap, i64* %9, align 8, !dbg !2952
  ret void, !dbg !2953
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h5fddc5eaa03b3122E"() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2954 {
start:
  %ptr.dbg.spill1 = alloca i32*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %addr.dbg.spill = alloca i64, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %pointer = alloca i32*, align 8
  %_2 = alloca i32*, align 8
  %2 = alloca { i32*, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !2958, metadata !DIExpression()), !dbg !2959
  call void @llvm.dbg.declare(metadata i32** %pointer, metadata !2960, metadata !DIExpression()), !dbg !2966
  store i64 4, i64* %addr.dbg.spill, align 8, !dbg !2972
  call void @llvm.dbg.declare(metadata i64* %addr.dbg.spill, metadata !2984, metadata !DIExpression()), !dbg !2990
  %3 = bitcast i32** %1 to i64*, !dbg !2990
  store i64 4, i64* %3, align 8, !dbg !2990
  %ptr = load i32*, i32** %1, align 8, !dbg !2990
  store i32* %ptr, i32** %ptr.dbg.spill, align 8, !dbg !2990
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill, metadata !2980, metadata !DIExpression()), !dbg !2992
  br label %bb3, !dbg !2990

bb3:                                              ; preds = %start
  store i32* %ptr, i32** %ptr.dbg.spill1, align 8, !dbg !2992
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill1, metadata !2993, metadata !DIExpression()), !dbg !2997
  store i32* %ptr, i32** %pointer, align 8, !dbg !2997
  %_12 = load i32*, i32** %pointer, align 8, !dbg !2966, !nonnull !140, !noundef !140
  store i32* %_12, i32** %_2, align 8, !dbg !2966
  %4 = bitcast { i32*, i64 }* %2 to i32**, !dbg !2999
  %5 = load i32*, i32** %_2, align 8, !dbg !2999, !nonnull !140, !noundef !140
  store i32* %5, i32** %4, align 8, !dbg !2999
  %6 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1, !dbg !2999
  store i64 0, i64* %6, align 8, !dbg !2999
  %7 = bitcast { i32*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !2999
  %8 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 0, !dbg !3000
  %9 = load i32*, i32** %8, align 8, !dbg !3000, !nonnull !140, !noundef !140
  %10 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1, !dbg !3000
  %11 = load i64, i64* %10, align 8, !dbg !3000
  %12 = insertvalue { i32*, i64 } undef, i32* %9, 0, !dbg !3000
  %13 = insertvalue { i32*, i64 } %12, i64 %11, 1, !dbg !3000
  ret { i32*, i64 } %13, !dbg !3000

bb1:                                              ; No predecessors!
  br label %bb2, !dbg !3001

bb2:                                              ; preds = %bb1
  %14 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3002
  %15 = load i8*, i8** %14, align 8, !dbg !3002
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3002
  %17 = load i32, i32* %16, align 8, !dbg !3002
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0, !dbg !3002
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1, !dbg !3002
  resume { i8*, i32 } %19, !dbg !3002
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hc4ee03f4f9f62be6E"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !3003 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !3007, metadata !DIExpression()), !dbg !3010
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3008, metadata !DIExpression()), !dbg !3011
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !3009, metadata !DIExpression()), !dbg !3012
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hd3a07ce867a517c5E"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !3013
  br label %bb1, !dbg !3013

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4, !dbg !3013

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3014

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17ha2776089d27e1a62E"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !3015
  br label %bb3, !dbg !3015

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !3016
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17ha2776089d27e1a62E"({ i32*, i64 }* align 8 %slf, i64 %len, i64 %additional) unnamed_addr #3 !dbg !3017 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %slf.dbg.spill = alloca { i32*, i64 }*, align 8
  store { i32*, i64 }* %slf, { i32*, i64 }** %slf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %slf.dbg.spill, metadata !3021, metadata !DIExpression()), !dbg !3024
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3022, metadata !DIExpression()), !dbg !3025
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !3023, metadata !DIExpression()), !dbg !3026
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h1f74a417d8ab45c3E"({ i32*, i64 }* align 8 %slf, i64 %len, i64 %additional), !dbg !3027
  %_5.0 = extractvalue { i64, i64 } %0, 0, !dbg !3027
  %_5.1 = extractvalue { i64, i64 } %0, 1, !dbg !3027
  br label %bb1, !dbg !3027

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h1a4fd17d14696974E(i64 %_5.0, i64 %_5.1), !dbg !3028
  br label %bb2, !dbg !3028

bb2:                                              ; preds = %bb1
  ret void, !dbg !3029
}

; <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN62_$LT$T$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17hb933320d2d611d8fE"(%"alloc::vec::Vec<i32>"* sret(%"alloc::vec::Vec<i32>") %0, i32 %1, i64 %n) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3030 {
start:
  %capacity.dbg.spill5 = alloca i64, align 8
  %capacity.dbg.spill4 = alloca i64, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %alloc.dbg.spill3 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill2 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill1 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %n.dbg.spill = alloca i64, align 8
  %_27 = alloca i8, align 1
  %_21 = alloca i8, align 1
  %_19 = alloca i8, align 1
  %_18 = alloca i8, align 1
  %_16 = alloca i32, align 4
  %v = alloca %"alloc::vec::Vec<i32>", align 8
  %elem = alloca i32, align 4
  store i32 %1, i32* %elem, align 4
  call void @llvm.dbg.declare(metadata i32* %elem, metadata !3037, metadata !DIExpression()), !dbg !3042
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3038, metadata !DIExpression()), !dbg !3043
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !3039, metadata !DIExpression()), !dbg !3044
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill1, metadata !3045, metadata !DIExpression()), !dbg !3052
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"* %v, metadata !3040, metadata !DIExpression()), !dbg !3054
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill2, metadata !3055, metadata !DIExpression()), !dbg !3062
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill3, metadata !3064, metadata !DIExpression()), !dbg !3069
  store i8 1, i8* %_19, align 1, !dbg !3071
  store i8 1, i8* %_18, align 1, !dbg !3071
; invoke <i32 as alloc::vec::is_zero::IsZero>::is_zero
  %_4 = invoke zeroext i1 @"_ZN51_$LT$i32$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero17hf9193789f5d15d37E"(i32* align 4 %elem)
          to label %bb1 unwind label %cleanup, !dbg !3072

bb10:                                             ; preds = %bb6, %cleanup
  %3 = load i8, i8* %_18, align 1, !dbg !3073, !range !245, !noundef !140
  %4 = trunc i8 %3 to i1, !dbg !3073
  br i1 %4, label %bb9, label %bb7, !dbg !3073

cleanup:                                          ; preds = %bb3, %bb2, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb10

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3, !dbg !3072

bb3:                                              ; preds = %bb1
  store i64 %n, i64* %capacity.dbg.spill4, align 8, !dbg !3074
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill4, metadata !3061, metadata !DIExpression()), !dbg !3062
  store i8 0, i8* %_18, align 1, !dbg !3075
  store i64 %n, i64* %capacity.dbg.spill5, align 8, !dbg !3062
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill5, metadata !3068, metadata !DIExpression()), !dbg !3069
  store i8 0, i8* %_27, align 1, !dbg !3069
  %10 = load i8, i8* %_27, align 1, !dbg !3069, !range !245, !noundef !140
  %11 = trunc i8 %10 to i1, !dbg !3069
; invoke alloc::raw_vec::RawVec<T,A>::allocate_in
  %12 = invoke { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h91f49f7466e9561cE"(i64 %n, i1 zeroext %11)
          to label %bb13 unwind label %cleanup, !dbg !3069

bb2:                                              ; preds = %bb1
  store i64 %n, i64* %capacity.dbg.spill, align 8, !dbg !3076
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !3051, metadata !DIExpression()), !dbg !3052
  store i8 0, i8* %_18, align 1, !dbg !3077
  store i8 1, i8* %_21, align 1, !dbg !3052
  %13 = load i8, i8* %_21, align 1, !dbg !3052, !range !245, !noundef !140
  %14 = trunc i8 %13 to i1, !dbg !3052
; invoke alloc::raw_vec::RawVec<T,A>::allocate_in
  %15 = invoke { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h91f49f7466e9561cE"(i64 %n, i1 zeroext %14)
          to label %bb12 unwind label %cleanup, !dbg !3052

bb12:                                             ; preds = %bb2
  %_6.0 = extractvalue { i32*, i64 } %15, 0, !dbg !3052
  %_6.1 = extractvalue { i32*, i64 } %15, 1, !dbg !3052
  %16 = bitcast %"alloc::vec::Vec<i32>"* %0 to { i32*, i64 }*, !dbg !3078
  %17 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %16, i32 0, i32 0, !dbg !3078
  store i32* %_6.0, i32** %17, align 8, !dbg !3078
  %18 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %16, i32 0, i32 1, !dbg !3078
  store i64 %_6.1, i64* %18, align 8, !dbg !3078
  %19 = getelementptr inbounds %"alloc::vec::Vec<i32>", %"alloc::vec::Vec<i32>"* %0, i32 0, i32 1, !dbg !3078
  store i64 %n, i64* %19, align 8, !dbg !3078
  br label %bb5, !dbg !3073

bb5:                                              ; preds = %bb4, %bb12
  ret void, !dbg !3079

bb13:                                             ; preds = %bb3
  %_23.0 = extractvalue { i32*, i64 } %12, 0, !dbg !3069
  %_23.1 = extractvalue { i32*, i64 } %12, 1, !dbg !3069
  %20 = bitcast %"alloc::vec::Vec<i32>"* %v to { i32*, i64 }*, !dbg !3062
  %21 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %20, i32 0, i32 0, !dbg !3062
  store i32* %_23.0, i32** %21, align 8, !dbg !3062
  %22 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %20, i32 0, i32 1, !dbg !3062
  store i64 %_23.1, i64* %22, align 8, !dbg !3062
  %23 = getelementptr inbounds %"alloc::vec::Vec<i32>", %"alloc::vec::Vec<i32>"* %v, i32 0, i32 1, !dbg !3062
  store i64 0, i64* %23, align 8, !dbg !3062
  store i8 0, i8* %_19, align 1, !dbg !3080
  %_17 = load i32, i32* %elem, align 4, !dbg !3080
  store i32 %_17, i32* %_16, align 4, !dbg !3081
  %24 = load i32, i32* %_16, align 4, !dbg !3082
; invoke alloc::vec::Vec<T,A>::extend_with
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$11extend_with17h05f27130d0fb2a4aE"(%"alloc::vec::Vec<i32>"* align 8 %v, i64 %n, i32 %24)
          to label %bb4 unwind label %cleanup6, !dbg !3082

bb6:                                              ; preds = %cleanup6
; invoke core::ptr::drop_in_place<alloc::vec::Vec<i32>>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17h7c47488e4f4ba9f1E"(%"alloc::vec::Vec<i32>"* %v) #14
          to label %bb10 unwind label %abort, !dbg !3073

cleanup6:                                         ; preds = %bb13
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb6

bb4:                                              ; preds = %bb13
  %30 = bitcast %"alloc::vec::Vec<i32>"* %0 to i8*, !dbg !3083
  %31 = bitcast %"alloc::vec::Vec<i32>"* %v to i8*, !dbg !3083
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false), !dbg !3083
  br label %bb5, !dbg !3073

abort:                                            ; preds = %bb6
  %32 = landingpad { i8*, i32 }
          cleanup, !dbg !3084
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #15, !dbg !3084
  unreachable, !dbg !3084

bb7:                                              ; preds = %bb9, %bb10
  %33 = load i8, i8* %_19, align 1, !dbg !3073, !range !245, !noundef !140
  %34 = trunc i8 %33 to i1, !dbg !3073
  br i1 %34, label %bb11, label %bb8, !dbg !3073

bb9:                                              ; preds = %bb10
  br label %bb7, !dbg !3073

bb8:                                              ; preds = %bb11, %bb7
  %35 = bitcast { i8*, i32 }* %2 to i8**, !dbg !3084
  %36 = load i8*, i8** %35, align 8, !dbg !3084
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !3084
  %38 = load i32, i32* %37, align 8, !dbg !3084
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0, !dbg !3084
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1, !dbg !3084
  resume { i8*, i32 } %40, !dbg !3084

bb11:                                             ; preds = %bb7
  br label %bb8, !dbg !3073
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17ha7516eb11e3641feE"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1) unnamed_addr #0 !dbg !3085 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca { i64, i64 }*, align 8
  %self.dbg.spill7 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %self3 = alloca i64, align 8
  %self2 = alloca i64, align 8
  %layout1 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !3090, metadata !DIExpression()), !dbg !3093
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3091, metadata !DIExpression()), !dbg !3094
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !3092, metadata !DIExpression()), !dbg !3095
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout1, metadata !3096, metadata !DIExpression()), !dbg !3102
  call void @llvm.dbg.declare(metadata i64* %self2, metadata !3104, metadata !DIExpression()), !dbg !3108
  call void @llvm.dbg.declare(metadata i64* %self3, metadata !3115, metadata !DIExpression()), !dbg !3119
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill4, align 8, !dbg !3120
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill4, metadata !3121, metadata !DIExpression()), !dbg !3125
  %4 = bitcast { i64, i64 }* %layout to i64*, !dbg !3125
  %_4 = load i64, i64* %4, align 8, !dbg !3125
  %5 = icmp eq i64 %_4, 0, !dbg !3120
  br i1 %5, label %bb2, label %bb1, !dbg !3120

bb2:                                              ; preds = %start
  br label %bb3, !dbg !3126

bb1:                                              ; preds = %start
  store i8* %ptr, i8** %self.dbg.spill5, align 8, !dbg !3127
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !3128, metadata !DIExpression()), !dbg !3132
  store i8* %ptr, i8** %ptr.dbg.spill6, align 8, !dbg !3132
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill6, metadata !3101, metadata !DIExpression()), !dbg !3102
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !3133
  %7 = load i64, i64* %6, align 8, !dbg !3133
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3133
  %9 = load i64, i64* %8, align 8, !dbg !3133, !range !645, !noundef !140
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 0, !dbg !3133
  store i64 %7, i64* %10, align 8, !dbg !3133
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !3133
  store i64 %9, i64* %11, align 8, !dbg !3133
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill7, align 8, !dbg !3102
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill7, metadata !3134, metadata !DIExpression()), !dbg !3138
  %12 = bitcast { i64, i64 }* %layout1 to i64*, !dbg !3138
  %_11 = load i64, i64* %12, align 8, !dbg !3138
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill8, align 8, !dbg !3102
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill8, metadata !3112, metadata !DIExpression()), !dbg !3140
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !3140
  %14 = load i64, i64* %13, align 8, !dbg !3140, !range !645, !noundef !140
  store i64 %14, i64* %self3, align 8, !dbg !3140
  %_18 = load i64, i64* %self3, align 8, !dbg !3119, !range !645, !noundef !140
  store i64 %_18, i64* %n.dbg.spill, align 8, !dbg !3119
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3141, metadata !DIExpression()), !dbg !3148
  store i64 %_18, i64* %self2, align 8, !dbg !3148
  %_13 = load i64, i64* %self2, align 8, !dbg !3108
  call void @__rust_dealloc(i8* %ptr, i64 %_11, i64 %_13) #16, !dbg !3102
  br label %bb4, !dbg !3102

bb4:                                              ; preds = %bb1
  br label %bb3, !dbg !3126

bb3:                                              ; preds = %bb2, %bb4
  ret void, !dbg !3150
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h1c4b5b40c04fef75E"(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !3151 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !3155, metadata !DIExpression()), !dbg !3157
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !3156, metadata !DIExpression()), !dbg !3158
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hea9263b0758b56d9E(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext true), !dbg !3159
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !3159
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !3159
  br label %bb1, !dbg !3159

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !3160
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !3160
  ret { i8*, i64 } %6, !dbg !3160
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h9e85290fb7de99d4E"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #0 !dbg !3161 {
start:
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %old_layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !3165, metadata !DIExpression()), !dbg !3169
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3166, metadata !DIExpression()), !dbg !3170
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 0
  store i64 %old_layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 1
  store i64 %old_layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout.dbg.spill, metadata !3167, metadata !DIExpression()), !dbg !3171
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !3168, metadata !DIExpression()), !dbg !3172
; call alloc::alloc::Global::grow_impl
  %4 = call { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h179fb7ce387b3544E(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false), !dbg !3173
  %5 = extractvalue { i8*, i64 } %4, 0, !dbg !3173
  %6 = extractvalue { i8*, i64 } %4, 1, !dbg !3173
  br label %bb1, !dbg !3173

bb1:                                              ; preds = %start
  %7 = insertvalue { i8*, i64 } undef, i8* %5, 0, !dbg !3174
  %8 = insertvalue { i8*, i64 } %7, i64 %6, 1, !dbg !3174
  ret { i8*, i64 } %8, !dbg !3174
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h0fb66dc17ec3f176E"(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !3175 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !3177, metadata !DIExpression()), !dbg !3179
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !3178, metadata !DIExpression()), !dbg !3180
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hea9263b0758b56d9E(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false), !dbg !3181
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !3181
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !3181
  br label %bb1, !dbg !3181

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !3182
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !3182
  ret { i8*, i64 } %6, !dbg !3182
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h41f40f774e80318dE"(%"alloc::vec::Vec<i32>"* align 8 %self) unnamed_addr #1 !dbg !3183 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill1 = alloca i32*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i32*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<i32>"*, align 8
  %_11 = alloca { i8*, i64 }, align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[i32]>", align 8
  store %"alloc::vec::Vec<i32>"* %self, %"alloc::vec::Vec<i32>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"** %self.dbg.spill, metadata !3188, metadata !DIExpression()), !dbg !3189
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %data = call i32* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hffe6c8eac2fd4d5aE"(%"alloc::vec::Vec<i32>"* align 8 %self), !dbg !3190
  store i32* %data, i32** %data.dbg.spill, align 8, !dbg !3190
  call void @llvm.dbg.declare(metadata i32** %data.dbg.spill, metadata !3191, metadata !DIExpression()), !dbg !3202
  br label %bb1, !dbg !3190

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<i32>", %"alloc::vec::Vec<i32>"* %self, i32 0, i32 1, !dbg !3204
  %len = load i64, i64* %0, align 8, !dbg !3204
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !3204
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3201, metadata !DIExpression()), !dbg !3202
  store i32* %data, i32** %self.dbg.spill1, align 8, !dbg !3202
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill1, metadata !3205, metadata !DIExpression()), !dbg !3212
  %data_address = bitcast i32* %data to {}*, !dbg !3212
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !3212
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !3214, metadata !DIExpression()), !dbg !3221
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !3202
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !3220, metadata !DIExpression()), !dbg !3221
  %1 = bitcast { i8*, i64 }* %_11 to {}**, !dbg !3221
  store {}* %data_address, {}** %1, align 8, !dbg !3221
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !3221
  store i64 %len, i64* %2, align 8, !dbg !3221
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[i32]>"* %_10 to { i8*, i64 }*, !dbg !3221
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 0, !dbg !3221
  %5 = load i8*, i8** %4, align 8, !dbg !3221
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !3221
  %7 = load i64, i64* %6, align 8, !dbg !3221
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !3221
  store i8* %5, i8** %8, align 8, !dbg !3221
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !3221
  store i64 %7, i64* %9, align 8, !dbg !3221
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[i32]>"* %_10 to { [0 x i32]*, i64 }*, !dbg !3221
  %11 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %10, i32 0, i32 0, !dbg !3221
  %_2.0 = load [0 x i32]*, [0 x i32]** %11, align 8, !dbg !3221
  %12 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %10, i32 0, i32 1, !dbg !3221
  %_2.1 = load i64, i64* %12, align 8, !dbg !3221
  br label %bb2, !dbg !3223

bb2:                                              ; preds = %bb1
  ret void, !dbg !3224
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h22055de03b59e758E"({ i32*, i64 }* align 8 %self) unnamed_addr #1 !dbg !3225 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !3230, metadata !DIExpression()), !dbg !3234
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hf4494b29e24149ddE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i32*, i64 }* align 8 %self), !dbg !3235
  br label %bb1, !dbg !3235

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1, !dbg !3236
  %1 = load i64, i64* %0, align 8, !dbg !3236, !range !206, !noundef !140
  %2 = icmp eq i64 %1, 0, !dbg !3236
  %_4 = select i1 %2, i64 0, i64 1, !dbg !3236
  %3 = icmp eq i64 %_4, 1, !dbg !3236
  br i1 %3, label %bb2, label %bb4, !dbg !3236

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !3237
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !3237
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !3237
  %ptr = load i8*, i8** %6, align 8, !dbg !3237, !nonnull !140, !noundef !140
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !3237
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3231, metadata !DIExpression()), !dbg !3237
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !3238
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !3238
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !3238
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !3238
  %layout.0 = load i64, i64* %10, align 8, !dbg !3238
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !3238
  %layout.1 = load i64, i64* %11, align 8, !dbg !3238, !range !645, !noundef !140
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !3238
  store i64 %layout.0, i64* %12, align 8, !dbg !3238
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !3238
  store i64 %layout.1, i64* %13, align 8, !dbg !3238
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !3233, metadata !DIExpression()), !dbg !3238
  %_7 = bitcast { i32*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !3239
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17ha7516eb11e3641feE"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1), !dbg !3239
  br label %bb3, !dbg !3239

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3240

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !3241
}

; <alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN83_$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17h519becda5e36f13fE"({ i64*, i64 }* align 8 %self) unnamed_addr #0 !dbg !3242 {
start:
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !3247, metadata !DIExpression()), !dbg !3248
  %0 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !3249
  %_2 = load i64, i64* %0, align 8, !dbg !3249
  %1 = bitcast { i64*, i64 }* %self to i64**, !dbg !3250
  %_3 = load i64*, i64** %1, align 8, !dbg !3250, !nonnull !140, !align !2432, !noundef !140
  store i64 %_2, i64* %_3, align 8, !dbg !3250
  ret void, !dbg !3251
}

; <alloc::vec::ExtendElement<T> as alloc::vec::ExtendWith<T>>::last
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4last17h17905b74ccda79b9E"(i32 %self) unnamed_addr #1 !dbg !3252 {
start:
  %self.dbg.spill = alloca i32, align 4
  store i32 %self, i32* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill, metadata !3257, metadata !DIExpression()), !dbg !3258
  ret i32 %self, !dbg !3259
}

; <alloc::vec::ExtendElement<T> as alloc::vec::ExtendWith<T>>::next
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4next17hb147526a62d0f643E"(i32* align 4 %self) unnamed_addr #1 !dbg !3260 {
start:
  %self.dbg.spill = alloca i32*, align 8
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !3265, metadata !DIExpression()), !dbg !3266
; call core::clone::impls::<impl core::clone::Clone for i32>::clone
  %0 = call i32 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i32$GT$5clone17h7a924f1f3d20347eE"(i32* align 4 %self), !dbg !3267
  br label %bb1, !dbg !3267

bb1:                                              ; preds = %start
  ret i32 %0, !dbg !3268
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h663205a6379ad5f3E"({ i64, i64 }* align 8 %self) unnamed_addr #0 !dbg !3269 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !3272, metadata !DIExpression()), !dbg !3275
  %_3 = bitcast { i64, i64 }* %self to i64*, !dbg !3276
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !3277
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hff8f36e2a393695fE"(i64* align 8 %_3, i64* align 8 %_4), !dbg !3276
  br label %bb1, !dbg !3276

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6, !dbg !3276

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !3278
  store i64 0, i64* %1, align 8, !dbg !3278
  br label %bb7, !dbg !3279

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*, !dbg !3280
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h7e0d3ce2d87c0f13E"(i64* align 8 %_7), !dbg !3280
  br label %bb3, !dbg !3280

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hed6d6ab6e2392a88E"(i64 %_6, i64 1), !dbg !3281
  store i64 %n, i64* %n.dbg.spill, align 8, !dbg !3281
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3273, metadata !DIExpression()), !dbg !3282
  br label %bb4, !dbg !3281

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i64, i64 }* %self to i64*, !dbg !3283
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17h1b0f877508390cefE(i64* align 8 %_10, i64 %n), !dbg !3284
  br label %bb5, !dbg !3284

bb5:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3285
  store i64 %_8, i64* %2, align 8, !dbg !3285
  %3 = bitcast { i64, i64 }* %0 to i64*, !dbg !3285
  store i64 1, i64* %3, align 8, !dbg !3285
  br label %bb7, !dbg !3279

bb7:                                              ; preds = %bb6, %bb5
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3286
  %5 = load i64, i64* %4, align 8, !dbg !3286, !range !433, !noundef !140
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3286
  %7 = load i64, i64* %6, align 8, !dbg !3286
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0, !dbg !3286
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1, !dbg !3286
  ret { i64, i64 } %9, !dbg !3286
}

; Function Attrs: nonlazybind uwtable
define void @rust_event_queues_init(%"packed_arrays::event_queue_t"* %queues) unnamed_addr #1 !dbg !3287 {
start:
  %0 = alloca %"packed_arrays::event_queue_t"*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca %"packed_arrays::event_queue_t"*, align 8
  %queues.dbg.spill = alloca %"packed_arrays::event_queue_t"*, align 8
  store %"packed_arrays::event_queue_t"* %queues, %"packed_arrays::event_queue_t"** %queues.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"packed_arrays::event_queue_t"** %queues.dbg.spill, metadata !3300, metadata !DIExpression()), !dbg !3301
  store %"packed_arrays::event_queue_t"* %queues, %"packed_arrays::event_queue_t"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"packed_arrays::event_queue_t"** %self.dbg.spill.i, metadata !3302, metadata !DIExpression()), !dbg !3310
  store i64 0, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !3307, metadata !DIExpression()), !dbg !3312
  store %"packed_arrays::event_queue_t"* %queues, %"packed_arrays::event_queue_t"** %0, align 8, !dbg !3313
  %_3.i = load %"packed_arrays::event_queue_t"*, %"packed_arrays::event_queue_t"** %0, align 8, !dbg !3313
  br label %bb1, !dbg !3314

bb1:                                              ; preds = %start
  %1 = bitcast %"packed_arrays::event_queue_t"* %_3.i to %"packed_arrays::event_queue_t_Inner"*, !dbg !3315
  %2 = bitcast %"packed_arrays::event_queue_t_Inner"* %1 to i32*, !dbg !3315
  store i32 42, i32* %2, align 4, !dbg !3315
  ret void, !dbg !3316
}

; Function Attrs: nonlazybind uwtable
define void @rust_entry(i32 %buffer_size, i32* %buffer) unnamed_addr #1 !dbg !3317 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i235 = alloca i64, align 8
  %self.dbg.spill.i236 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i232 = alloca i64, align 8
  %self.dbg.spill.i233 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i229 = alloca i64, align 8
  %self.dbg.spill.i230 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i226 = alloca i64, align 8
  %self.dbg.spill.i227 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %count.dbg.spill.i223 = alloca i64, align 8
  %self.dbg.spill.i224 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %count.dbg.spill.i220 = alloca i64, align 8
  %self.dbg.spill.i221 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %count.dbg.spill.i217 = alloca i64, align 8
  %self.dbg.spill.i218 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %count.dbg.spill.i214 = alloca i64, align 8
  %self.dbg.spill.i215 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %count.dbg.spill.i211 = alloca i64, align 8
  %self.dbg.spill.i212 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %count.dbg.spill.i208 = alloca i64, align 8
  %self.dbg.spill.i209 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %count.dbg.spill.i205 = alloca i64, align 8
  %self.dbg.spill.i206 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %count.dbg.spill.i202 = alloca i64, align 8
  %self.dbg.spill.i203 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %count.dbg.spill.i199 = alloca i64, align 8
  %self.dbg.spill.i200 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %count.dbg.spill.i196 = alloca i64, align 8
  %self.dbg.spill.i197 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %count.dbg.spill.i193 = alloca i64, align 8
  %self.dbg.spill.i194 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  %count.dbg.spill.i190 = alloca i64, align 8
  %self.dbg.spill.i191 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %count.dbg.spill.i187 = alloca i64, align 8
  %self.dbg.spill.i188 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %count.dbg.spill.i184 = alloca i64, align 8
  %self.dbg.spill.i185 = alloca i32*, align 8
  %18 = alloca i32*, align 8
  %count.dbg.spill.i181 = alloca i64, align 8
  %self.dbg.spill.i182 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  %count.dbg.spill.i178 = alloca i64, align 8
  %self.dbg.spill.i179 = alloca i32*, align 8
  %20 = alloca i32*, align 8
  %count.dbg.spill.i175 = alloca i64, align 8
  %self.dbg.spill.i176 = alloca i32*, align 8
  %21 = alloca i32*, align 8
  %count.dbg.spill.i172 = alloca i64, align 8
  %self.dbg.spill.i173 = alloca i32*, align 8
  %22 = alloca i32*, align 8
  %count.dbg.spill.i169 = alloca i64, align 8
  %self.dbg.spill.i170 = alloca i32*, align 8
  %23 = alloca i32*, align 8
  %count.dbg.spill.i166 = alloca i64, align 8
  %self.dbg.spill.i167 = alloca i32*, align 8
  %24 = alloca i32*, align 8
  %count.dbg.spill.i163 = alloca i64, align 8
  %self.dbg.spill.i164 = alloca i32*, align 8
  %25 = alloca i32*, align 8
  %count.dbg.spill.i160 = alloca i64, align 8
  %self.dbg.spill.i161 = alloca i32*, align 8
  %26 = alloca i32*, align 8
  %count.dbg.spill.i157 = alloca i64, align 8
  %self.dbg.spill.i158 = alloca i32*, align 8
  %27 = alloca i32*, align 8
  %count.dbg.spill.i154 = alloca i64, align 8
  %self.dbg.spill.i155 = alloca i32*, align 8
  %28 = alloca i32*, align 8
  %count.dbg.spill.i151 = alloca i64, align 8
  %self.dbg.spill.i152 = alloca i32*, align 8
  %29 = alloca i32*, align 8
  %count.dbg.spill.i148 = alloca i64, align 8
  %self.dbg.spill.i149 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  %count.dbg.spill.i145 = alloca i64, align 8
  %self.dbg.spill.i146 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  %count.dbg.spill.i142 = alloca i64, align 8
  %self.dbg.spill.i143 = alloca i32*, align 8
  %32 = alloca i32*, align 8
  %count.dbg.spill.i139 = alloca i64, align 8
  %self.dbg.spill.i140 = alloca i32*, align 8
  %33 = alloca i32*, align 8
  %count.dbg.spill.i136 = alloca i64, align 8
  %self.dbg.spill.i137 = alloca i32*, align 8
  %34 = alloca i32*, align 8
  %count.dbg.spill.i133 = alloca i64, align 8
  %self.dbg.spill.i134 = alloca i32*, align 8
  %35 = alloca i32*, align 8
  %count.dbg.spill.i130 = alloca i64, align 8
  %self.dbg.spill.i131 = alloca i32*, align 8
  %36 = alloca i32*, align 8
  %count.dbg.spill.i127 = alloca i64, align 8
  %self.dbg.spill.i128 = alloca i32*, align 8
  %37 = alloca i32*, align 8
  %count.dbg.spill.i124 = alloca i64, align 8
  %self.dbg.spill.i125 = alloca i32*, align 8
  %38 = alloca i32*, align 8
  %count.dbg.spill.i121 = alloca i64, align 8
  %self.dbg.spill.i122 = alloca i32*, align 8
  %39 = alloca i32*, align 8
  %count.dbg.spill.i118 = alloca i64, align 8
  %self.dbg.spill.i119 = alloca i32*, align 8
  %40 = alloca i32*, align 8
  %count.dbg.spill.i115 = alloca i64, align 8
  %self.dbg.spill.i116 = alloca i32*, align 8
  %41 = alloca i32*, align 8
  %count.dbg.spill.i112 = alloca i64, align 8
  %self.dbg.spill.i113 = alloca i32*, align 8
  %42 = alloca i32*, align 8
  %count.dbg.spill.i109 = alloca i64, align 8
  %self.dbg.spill.i110 = alloca i32*, align 8
  %43 = alloca i32*, align 8
  %count.dbg.spill.i106 = alloca i64, align 8
  %self.dbg.spill.i107 = alloca i32*, align 8
  %44 = alloca i32*, align 8
  %count.dbg.spill.i103 = alloca i64, align 8
  %self.dbg.spill.i104 = alloca i32*, align 8
  %45 = alloca i32*, align 8
  %count.dbg.spill.i100 = alloca i64, align 8
  %self.dbg.spill.i101 = alloca i32*, align 8
  %46 = alloca i32*, align 8
  %count.dbg.spill.i97 = alloca i64, align 8
  %self.dbg.spill.i98 = alloca i32*, align 8
  %47 = alloca i32*, align 8
  %count.dbg.spill.i94 = alloca i64, align 8
  %self.dbg.spill.i95 = alloca i32*, align 8
  %48 = alloca i32*, align 8
  %count.dbg.spill.i91 = alloca i64, align 8
  %self.dbg.spill.i92 = alloca i32*, align 8
  %49 = alloca i8*, align 8
  %count.dbg.spill.i88 = alloca i64, align 8
  %self.dbg.spill.i89 = alloca i8*, align 8
  %50 = alloca i8*, align 8
  %count.dbg.spill.i85 = alloca i64, align 8
  %self.dbg.spill.i86 = alloca i8*, align 8
  %51 = alloca i8*, align 8
  %count.dbg.spill.i82 = alloca i64, align 8
  %self.dbg.spill.i83 = alloca i8*, align 8
  %52 = alloca i8*, align 8
  %count.dbg.spill.i79 = alloca i64, align 8
  %self.dbg.spill.i80 = alloca i8*, align 8
  %53 = alloca i8*, align 8
  %count.dbg.spill.i76 = alloca i64, align 8
  %self.dbg.spill.i77 = alloca i8*, align 8
  %54 = alloca i8*, align 8
  %count.dbg.spill.i73 = alloca i64, align 8
  %self.dbg.spill.i74 = alloca i8*, align 8
  %55 = alloca i8*, align 8
  %count.dbg.spill.i70 = alloca i64, align 8
  %self.dbg.spill.i71 = alloca i8*, align 8
  %56 = alloca i8*, align 8
  %count.dbg.spill.i67 = alloca i64, align 8
  %self.dbg.spill.i68 = alloca i8*, align 8
  %57 = alloca i8*, align 8
  %count.dbg.spill.i64 = alloca i64, align 8
  %self.dbg.spill.i65 = alloca i8*, align 8
  %58 = alloca i8*, align 8
  %count.dbg.spill.i61 = alloca i64, align 8
  %self.dbg.spill.i62 = alloca i8*, align 8
  %59 = alloca i8*, align 8
  %count.dbg.spill.i58 = alloca i64, align 8
  %self.dbg.spill.i59 = alloca i8*, align 8
  %60 = alloca i8*, align 8
  %count.dbg.spill.i55 = alloca i64, align 8
  %self.dbg.spill.i56 = alloca i8*, align 8
  %61 = alloca i8*, align 8
  %count.dbg.spill.i52 = alloca i64, align 8
  %self.dbg.spill.i53 = alloca i8*, align 8
  %62 = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i8*, align 8
  %fresh48.dbg.spill = alloca i32, align 4
  %fresh47.dbg.spill = alloca i32, align 4
  %fresh46.dbg.spill = alloca i32, align 4
  %fresh45.dbg.spill = alloca i32, align 4
  %fresh44.dbg.spill = alloca i32, align 4
  %fresh43.dbg.spill = alloca i32, align 4
  %fresh42.dbg.spill = alloca i32, align 4
  %fresh41.dbg.spill = alloca i32, align 4
  %fresh40.dbg.spill = alloca i32, align 4
  %fresh39.dbg.spill = alloca i32, align 4
  %fresh38.dbg.spill = alloca i32, align 4
  %fresh37.dbg.spill = alloca i32, align 4
  %fresh36.dbg.spill = alloca i32, align 4
  %fresh35.dbg.spill = alloca i32, align 4
  %fresh34.dbg.spill = alloca i32, align 4
  %fresh33.dbg.spill = alloca i32, align 4
  %fresh32.dbg.spill = alloca i32, align 4
  %63 = alloca [1 x i32]*, align 8
  %fresh31.dbg.spill = alloca i32, align 4
  %fresh30.dbg.spill = alloca i32, align 4
  %fresh29.dbg.spill = alloca i32, align 4
  %64 = alloca [3 x i32]*, align 8
  %fresh28.dbg.spill = alloca i32, align 4
  %fresh27.dbg.spill = alloca i32, align 4
  %65 = alloca [2 x i32]*, align 8
  %fresh26.dbg.spill = alloca i32, align 4
  %fresh25.dbg.spill = alloca i32, align 4
  %fresh24.dbg.spill = alloca i32, align 4
  %fresh23.dbg.spill = alloca i32, align 4
  %fresh22.dbg.spill = alloca i32, align 4
  %fresh21.dbg.spill = alloca i32, align 4
  %fresh20.dbg.spill = alloca i32, align 4
  %66 = alloca [20 x i8]*, align 8
  %fresh19.dbg.spill = alloca i32, align 4
  %fresh18.dbg.spill = alloca i32, align 4
  %fresh17.dbg.spill = alloca i32, align 4
  %67 = alloca [3 x i8]*, align 8
  %fresh16.dbg.spill = alloca i32, align 4
  %fresh15.dbg.spill = alloca i32, align 4
  %fresh14.dbg.spill = alloca i32, align 4
  %fresh13.dbg.spill = alloca i32, align 4
  %68 = alloca [5 x i8]*, align 8
  %fresh12.dbg.spill = alloca i32, align 4
  %fresh11.dbg.spill = alloca i32, align 4
  %fresh10.dbg.spill = alloca i32, align 4
  %fresh9.dbg.spill = alloca i32, align 4
  %abcptr.dbg.spill = alloca i8*, align 8
  %fresh8.dbg.spill = alloca i32, align 4
  %fresh7.dbg.spill = alloca i32, align 4
  %fresh6.dbg.spill = alloca i32, align 4
  %fresh5.dbg.spill = alloca i32, align 4
  %fresh4.dbg.spill = alloca i32, align 4
  %fresh3.dbg.spill = alloca i32, align 4
  %fresh2.dbg.spill = alloca i32, align 4
  %fresh1.dbg.spill = alloca i32, align 4
  %fresh0.dbg.spill = alloca i32, align 4
  %69 = alloca [4 x i8]*, align 8
  %buffer.dbg.spill = alloca i32*, align 8
  %buffer_size.dbg.spill = alloca i32, align 4
  %past_end = alloca i8*, align 8
  %wide3 = alloca [1 x i32], align 4
  %wide2 = alloca [3 x i32], align 4
  %wide1 = alloca [2 x i32], align 4
  %too_short = alloca [20 x i8], align 1
  %too_long = alloca [3 x i8], align 1
  %init = alloca [5 x i8], align 1
  %part = alloca [2 x i8], align 1
  %def = alloca [3 x i8], align 1
  %abc = alloca [4 x i8], align 1
  %i = alloca i32, align 4
  %_15 = alloca { i8*, i32 }, align 8
  %arr3 = alloca [1 x { i8*, i32 }], align 8
  %arr2 = alloca [16 x i32], align 4
  %_4 = alloca [1 x i32], align 4
  %arr = alloca [1 x [1 x i32]], align 4
  store i32 %buffer_size, i32* %buffer_size.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_size.dbg.spill, metadata !3321, metadata !DIExpression()), !dbg !3476
  store i32* %buffer, i32** %buffer.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %buffer.dbg.spill, metadata !3322, metadata !DIExpression()), !dbg !3477
  call void @llvm.dbg.declare(metadata [1 x [1 x i32]]* %arr, metadata !3323, metadata !DIExpression()), !dbg !3478
  call void @llvm.dbg.declare(metadata [16 x i32]* %arr2, metadata !3329, metadata !DIExpression()), !dbg !3479
  call void @llvm.dbg.declare(metadata [1 x { i8*, i32 }]* %arr3, metadata !3334, metadata !DIExpression()), !dbg !3480
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3341, metadata !DIExpression()), !dbg !3481
  call void @llvm.dbg.declare(metadata [4 x i8]* %abc, metadata !3343, metadata !DIExpression()), !dbg !3482
  call void @llvm.dbg.declare(metadata [3 x i8]* %def, metadata !3354, metadata !DIExpression()), !dbg !3483
  call void @llvm.dbg.declare(metadata [2 x i8]* %part, metadata !3365, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.declare(metadata [5 x i8]* %init, metadata !3384, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.declare(metadata [3 x i8]* %too_long, metadata !3395, metadata !DIExpression()), !dbg !3486
  call void @llvm.dbg.declare(metadata [20 x i8]* %too_short, metadata !3403, metadata !DIExpression()), !dbg !3487
  call void @llvm.dbg.declare(metadata [2 x i32]* %wide1, metadata !3422, metadata !DIExpression()), !dbg !3488
  call void @llvm.dbg.declare(metadata [3 x i32]* %wide2, metadata !3429, metadata !DIExpression()), !dbg !3489
  call void @llvm.dbg.declare(metadata [1 x i32]* %wide3, metadata !3438, metadata !DIExpression()), !dbg !3490
  call void @llvm.dbg.declare(metadata i8** %past_end, metadata !3474, metadata !DIExpression()), !dbg !3491
  %70 = getelementptr inbounds [1 x i32], [1 x i32]* %_4, i64 0, i64 0, !dbg !3492
  store i32 1, i32* %70, align 4, !dbg !3492
  %71 = getelementptr inbounds [1 x [1 x i32]], [1 x [1 x i32]]* %arr, i64 0, i64 0, !dbg !3493
  %72 = bitcast [1 x i32]* %71 to i8*, !dbg !3493
  %73 = bitcast [1 x i32]* %_4 to i8*, !dbg !3493
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 4, i1 false), !dbg !3493
  %74 = getelementptr inbounds [1 x [1 x i32]], [1 x [1 x i32]]* %arr, i64 0, i64 0, !dbg !3494
  %75 = getelementptr inbounds [1 x i32], [1 x i32]* %74, i64 0, i64 0, !dbg !3494
  %76 = load i32, i32* %75, align 4, !dbg !3494
  %77 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %76, i32 9), !dbg !3494
  %_9.0 = extractvalue { i32, i1 } %77, 0, !dbg !3494
  %_9.1 = extractvalue { i32, i1 } %77, 1, !dbg !3494
  %78 = call i1 @llvm.expect.i1(i1 %_9.1, i1 false), !dbg !3494
  br i1 %78, label %panic, label %bb1, !dbg !3494

bb1:                                              ; preds = %start
  %79 = getelementptr inbounds [1 x [1 x i32]], [1 x [1 x i32]]* %arr, i64 0, i64 0, !dbg !3494
  %80 = getelementptr inbounds [1 x i32], [1 x i32]* %79, i64 0, i64 0, !dbg !3494
  store i32 %_9.0, i32* %80, align 4, !dbg !3494
  %81 = getelementptr inbounds [16 x i32], [16 x i32]* %arr2, i64 0, i64 0, !dbg !3495
  %82 = bitcast i32* %81 to i8*, !dbg !3495
  call void @llvm.memset.p0i8.i64(i8* align 4 %82, i8 0, i64 64, i1 false), !dbg !3495
  %83 = getelementptr inbounds [16 x i32], [16 x i32]* %arr2, i64 0, i64 15, !dbg !3496
  %84 = load i32, i32* %83, align 4, !dbg !3496
  %85 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %84, i32 9), !dbg !3496
  %_13.0 = extractvalue { i32, i1 } %85, 0, !dbg !3496
  %_13.1 = extractvalue { i32, i1 } %85, 1, !dbg !3496
  %86 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false), !dbg !3496
  br i1 %86, label %panic1, label %bb2, !dbg !3496

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc207 to %"core::panic::location::Location"*)) #17, !dbg !3494
  unreachable, !dbg !3494

bb2:                                              ; preds = %bb1
  %87 = getelementptr inbounds [16 x i32], [16 x i32]* %arr2, i64 0, i64 15, !dbg !3496
  store i32 %_13.0, i32* %87, align 4, !dbg !3496
  %88 = bitcast { i8*, i32 }* %_15 to i8**, !dbg !3497
  store i8* null, i8** %88, align 8, !dbg !3497
  %89 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %_15, i32 0, i32 1, !dbg !3497
  store i32 0, i32* %89, align 8, !dbg !3497
  %90 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %_15, i32 0, i32 0, !dbg !3498
  %91 = load i8*, i8** %90, align 8, !dbg !3498
  %92 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %_15, i32 0, i32 1, !dbg !3498
  %93 = load i32, i32* %92, align 8, !dbg !3498
  %94 = getelementptr inbounds [1 x { i8*, i32 }], [1 x { i8*, i32 }]* %arr3, i64 0, i64 0, !dbg !3498
  %95 = getelementptr inbounds [1 x { i8*, i32 }], [1 x { i8*, i32 }]* %arr3, i64 0, i64 1, !dbg !3498
  br label %repeat_loop_header, !dbg !3498

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc209 to %"core::panic::location::Location"*)) #17, !dbg !3496
  unreachable, !dbg !3496

repeat_loop_header:                               ; preds = %repeat_loop_body, %bb2
  %96 = phi { i8*, i32 }* [ %94, %bb2 ], [ %100, %repeat_loop_body ]
  %97 = icmp ne { i8*, i32 }* %96, %95
  br i1 %97, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  %98 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %96, i32 0, i32 0
  store i8* %91, i8** %98, align 8
  %99 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %96, i32 0, i32 1
  store i32 %93, i32* %99, align 8
  %100 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %96, i64 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  %101 = getelementptr inbounds [1 x { i8*, i32 }], [1 x { i8*, i32 }]* %arr3, i64 0, i64 0, !dbg !3499
  %102 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %101, i32 0, i32 1, !dbg !3499
  %103 = load i32, i32* %102, align 8, !dbg !3499
  %104 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %103, i32 9), !dbg !3499
  %_18.0 = extractvalue { i32, i1 } %104, 0, !dbg !3499
  %_18.1 = extractvalue { i32, i1 } %104, 1, !dbg !3499
  %105 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false), !dbg !3499
  br i1 %105, label %panic2, label %bb3, !dbg !3499

bb3:                                              ; preds = %repeat_loop_next
  %106 = getelementptr inbounds [1 x { i8*, i32 }], [1 x { i8*, i32 }]* %arr3, i64 0, i64 0, !dbg !3499
  %107 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %106, i32 0, i32 1, !dbg !3499
  store i32 %_18.0, i32* %107, align 8, !dbg !3499
  store i32 0, i32* %i, align 4, !dbg !3500
  store [4 x i8]* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc6, i32 0, i32 0), [4 x i8]** %69, align 8, !dbg !3501
  %_21 = load [4 x i8]*, [4 x i8]** %69, align 8, !dbg !3501, !nonnull !140, !align !3502, !noundef !140
  br label %bb4, !dbg !3501

panic2:                                           ; preds = %repeat_loop_next
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc211 to %"core::panic::location::Location"*)) #17, !dbg !3499
  unreachable, !dbg !3499

bb4:                                              ; preds = %bb3
  %108 = bitcast [4 x i8]* %abc to i8*, !dbg !3503
  %109 = bitcast [4 x i8]* %_21 to i8*, !dbg !3503
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %108, i8* align 1 %109, i64 4, i1 false), !dbg !3503
  %fresh0 = load i32, i32* %i, align 4, !dbg !3504
  store i32 %fresh0, i32* %fresh0.dbg.spill, align 4, !dbg !3504
  call void @llvm.dbg.declare(metadata i32* %fresh0.dbg.spill, metadata !3346, metadata !DIExpression()), !dbg !3505
  %_25 = load i32, i32* %i, align 4, !dbg !3506
  %110 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_25, i32 1), !dbg !3506
  %_26.0 = extractvalue { i32, i1 } %110, 0, !dbg !3506
  %_26.1 = extractvalue { i32, i1 } %110, 1, !dbg !3506
  %111 = call i1 @llvm.expect.i1(i1 %_26.1, i1 false), !dbg !3506
  br i1 %111, label %panic3, label %bb5, !dbg !3506

bb5:                                              ; preds = %bb4
  store i32 %_26.0, i32* %i, align 4, !dbg !3507
  %112 = getelementptr inbounds [4 x i8], [4 x i8]* %abc, i64 0, i64 0, !dbg !3508
  %_27 = load i8, i8* %112, align 1, !dbg !3508
  %_31 = sext i32 %fresh0 to i64, !dbg !3509
  store i32* %buffer, i32** %self.dbg.spill.i236, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i236, metadata !3510, metadata !DIExpression()), !dbg !3514
  store i64 %_31, i64* %count.dbg.spill.i235, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i235, metadata !3513, metadata !DIExpression()), !dbg !3516
  %113 = getelementptr inbounds i32, i32* %buffer, i64 %_31, !dbg !3517
  store i32* %113, i32** %0, align 8, !dbg !3517
  %_3.i237 = load i32*, i32** %0, align 8, !dbg !3517
  br label %bb6, !dbg !3518

panic3:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc213 to %"core::panic::location::Location"*)) #17, !dbg !3506
  unreachable, !dbg !3506

bb6:                                              ; preds = %bb5
  %114 = sext i8 %_27 to i32, !dbg !3519
  store i32 %114, i32* %_3.i237, align 4, !dbg !3519
  %fresh1 = load i32, i32* %i, align 4, !dbg !3520
  store i32 %fresh1, i32* %fresh1.dbg.spill, align 4, !dbg !3520
  call void @llvm.dbg.declare(metadata i32* %fresh1.dbg.spill, metadata !3348, metadata !DIExpression()), !dbg !3521
  %_34 = load i32, i32* %i, align 4, !dbg !3522
  %115 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_34, i32 1), !dbg !3522
  %_35.0 = extractvalue { i32, i1 } %115, 0, !dbg !3522
  %_35.1 = extractvalue { i32, i1 } %115, 1, !dbg !3522
  %116 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !3522
  br i1 %116, label %panic4, label %bb7, !dbg !3522

bb7:                                              ; preds = %bb6
  store i32 %_35.0, i32* %i, align 4, !dbg !3523
  %117 = getelementptr inbounds [4 x i8], [4 x i8]* %abc, i64 0, i64 1, !dbg !3524
  %_36 = load i8, i8* %117, align 1, !dbg !3524
  %_40 = sext i32 %fresh1 to i64, !dbg !3525
  store i32* %buffer, i32** %self.dbg.spill.i233, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i233, metadata !3510, metadata !DIExpression()), !dbg !3526
  store i64 %_40, i64* %count.dbg.spill.i232, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i232, metadata !3513, metadata !DIExpression()), !dbg !3528
  %118 = getelementptr inbounds i32, i32* %buffer, i64 %_40, !dbg !3529
  store i32* %118, i32** %1, align 8, !dbg !3529
  %_3.i234 = load i32*, i32** %1, align 8, !dbg !3529
  br label %bb8, !dbg !3530

panic4:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc215 to %"core::panic::location::Location"*)) #17, !dbg !3522
  unreachable, !dbg !3522

bb8:                                              ; preds = %bb7
  %119 = sext i8 %_36 to i32, !dbg !3531
  store i32 %119, i32* %_3.i234, align 4, !dbg !3531
  %fresh2 = load i32, i32* %i, align 4, !dbg !3532
  store i32 %fresh2, i32* %fresh2.dbg.spill, align 4, !dbg !3532
  call void @llvm.dbg.declare(metadata i32* %fresh2.dbg.spill, metadata !3350, metadata !DIExpression()), !dbg !3533
  %_43 = load i32, i32* %i, align 4, !dbg !3534
  %120 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_43, i32 1), !dbg !3534
  %_44.0 = extractvalue { i32, i1 } %120, 0, !dbg !3534
  %_44.1 = extractvalue { i32, i1 } %120, 1, !dbg !3534
  %121 = call i1 @llvm.expect.i1(i1 %_44.1, i1 false), !dbg !3534
  br i1 %121, label %panic5, label %bb9, !dbg !3534

bb9:                                              ; preds = %bb8
  store i32 %_44.0, i32* %i, align 4, !dbg !3535
  %122 = getelementptr inbounds [4 x i8], [4 x i8]* %abc, i64 0, i64 2, !dbg !3536
  %_45 = load i8, i8* %122, align 1, !dbg !3536
  %_49 = sext i32 %fresh2 to i64, !dbg !3537
  store i32* %buffer, i32** %self.dbg.spill.i230, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i230, metadata !3510, metadata !DIExpression()), !dbg !3538
  store i64 %_49, i64* %count.dbg.spill.i229, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i229, metadata !3513, metadata !DIExpression()), !dbg !3540
  %123 = getelementptr inbounds i32, i32* %buffer, i64 %_49, !dbg !3541
  store i32* %123, i32** %2, align 8, !dbg !3541
  %_3.i231 = load i32*, i32** %2, align 8, !dbg !3541
  br label %bb10, !dbg !3542

panic5:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc217 to %"core::panic::location::Location"*)) #17, !dbg !3534
  unreachable, !dbg !3534

bb10:                                             ; preds = %bb9
  %124 = sext i8 %_45 to i32, !dbg !3543
  store i32 %124, i32* %_3.i231, align 4, !dbg !3543
  %fresh3 = load i32, i32* %i, align 4, !dbg !3544
  store i32 %fresh3, i32* %fresh3.dbg.spill, align 4, !dbg !3544
  call void @llvm.dbg.declare(metadata i32* %fresh3.dbg.spill, metadata !3352, metadata !DIExpression()), !dbg !3545
  %_52 = load i32, i32* %i, align 4, !dbg !3546
  %125 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_52, i32 1), !dbg !3546
  %_53.0 = extractvalue { i32, i1 } %125, 0, !dbg !3546
  %_53.1 = extractvalue { i32, i1 } %125, 1, !dbg !3546
  %126 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !3546
  br i1 %126, label %panic6, label %bb11, !dbg !3546

bb11:                                             ; preds = %bb10
  store i32 %_53.0, i32* %i, align 4, !dbg !3547
  %127 = getelementptr inbounds [4 x i8], [4 x i8]* %abc, i64 0, i64 3, !dbg !3548
  %_54 = load i8, i8* %127, align 1, !dbg !3548
  %_58 = sext i32 %fresh3 to i64, !dbg !3549
  store i32* %buffer, i32** %self.dbg.spill.i227, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i227, metadata !3510, metadata !DIExpression()), !dbg !3550
  store i64 %_58, i64* %count.dbg.spill.i226, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i226, metadata !3513, metadata !DIExpression()), !dbg !3552
  %128 = getelementptr inbounds i32, i32* %buffer, i64 %_58, !dbg !3553
  store i32* %128, i32** %3, align 8, !dbg !3553
  %_3.i228 = load i32*, i32** %3, align 8, !dbg !3553
  br label %bb12, !dbg !3554

panic6:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc219 to %"core::panic::location::Location"*)) #17, !dbg !3546
  unreachable, !dbg !3546

bb12:                                             ; preds = %bb11
  %129 = sext i8 %_54 to i32, !dbg !3555
  store i32 %129, i32* %_3.i228, align 4, !dbg !3555
  %130 = getelementptr inbounds [3 x i8], [3 x i8]* %def, i64 0, i64 0, !dbg !3556
  store i8 100, i8* %130, align 1, !dbg !3556
  %131 = getelementptr inbounds [3 x i8], [3 x i8]* %def, i64 0, i64 1, !dbg !3556
  store i8 101, i8* %131, align 1, !dbg !3556
  %132 = getelementptr inbounds [3 x i8], [3 x i8]* %def, i64 0, i64 2, !dbg !3556
  store i8 102, i8* %132, align 1, !dbg !3556
  %fresh4 = load i32, i32* %i, align 4, !dbg !3557
  store i32 %fresh4, i32* %fresh4.dbg.spill, align 4, !dbg !3557
  call void @llvm.dbg.declare(metadata i32* %fresh4.dbg.spill, metadata !3359, metadata !DIExpression()), !dbg !3558
  %_65 = load i32, i32* %i, align 4, !dbg !3559
  %133 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_65, i32 1), !dbg !3559
  %_66.0 = extractvalue { i32, i1 } %133, 0, !dbg !3559
  %_66.1 = extractvalue { i32, i1 } %133, 1, !dbg !3559
  %134 = call i1 @llvm.expect.i1(i1 %_66.1, i1 false), !dbg !3559
  br i1 %134, label %panic7, label %bb13, !dbg !3559

bb13:                                             ; preds = %bb12
  store i32 %_66.0, i32* %i, align 4, !dbg !3560
  %135 = getelementptr inbounds [3 x i8], [3 x i8]* %def, i64 0, i64 0, !dbg !3561
  %_67 = load i8, i8* %135, align 1, !dbg !3561
  %_71 = sext i32 %fresh4 to i64, !dbg !3562
  store i32* %buffer, i32** %self.dbg.spill.i224, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i224, metadata !3510, metadata !DIExpression()), !dbg !3563
  store i64 %_71, i64* %count.dbg.spill.i223, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i223, metadata !3513, metadata !DIExpression()), !dbg !3565
  %136 = getelementptr inbounds i32, i32* %buffer, i64 %_71, !dbg !3566
  store i32* %136, i32** %4, align 8, !dbg !3566
  %_3.i225 = load i32*, i32** %4, align 8, !dbg !3566
  br label %bb14, !dbg !3567

panic7:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc221 to %"core::panic::location::Location"*)) #17, !dbg !3559
  unreachable, !dbg !3559

bb14:                                             ; preds = %bb13
  %137 = sext i8 %_67 to i32, !dbg !3568
  store i32 %137, i32* %_3.i225, align 4, !dbg !3568
  %fresh5 = load i32, i32* %i, align 4, !dbg !3569
  store i32 %fresh5, i32* %fresh5.dbg.spill, align 4, !dbg !3569
  call void @llvm.dbg.declare(metadata i32* %fresh5.dbg.spill, metadata !3361, metadata !DIExpression()), !dbg !3570
  %_74 = load i32, i32* %i, align 4, !dbg !3571
  %138 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_74, i32 1), !dbg !3571
  %_75.0 = extractvalue { i32, i1 } %138, 0, !dbg !3571
  %_75.1 = extractvalue { i32, i1 } %138, 1, !dbg !3571
  %139 = call i1 @llvm.expect.i1(i1 %_75.1, i1 false), !dbg !3571
  br i1 %139, label %panic8, label %bb15, !dbg !3571

bb15:                                             ; preds = %bb14
  store i32 %_75.0, i32* %i, align 4, !dbg !3572
  %140 = getelementptr inbounds [3 x i8], [3 x i8]* %def, i64 0, i64 1, !dbg !3573
  %_76 = load i8, i8* %140, align 1, !dbg !3573
  %_80 = sext i32 %fresh5 to i64, !dbg !3574
  store i32* %buffer, i32** %self.dbg.spill.i221, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i221, metadata !3510, metadata !DIExpression()), !dbg !3575
  store i64 %_80, i64* %count.dbg.spill.i220, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i220, metadata !3513, metadata !DIExpression()), !dbg !3577
  %141 = getelementptr inbounds i32, i32* %buffer, i64 %_80, !dbg !3578
  store i32* %141, i32** %5, align 8, !dbg !3578
  %_3.i222 = load i32*, i32** %5, align 8, !dbg !3578
  br label %bb16, !dbg !3579

panic8:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc223 to %"core::panic::location::Location"*)) #17, !dbg !3571
  unreachable, !dbg !3571

bb16:                                             ; preds = %bb15
  %142 = sext i8 %_76 to i32, !dbg !3580
  store i32 %142, i32* %_3.i222, align 4, !dbg !3580
  %fresh6 = load i32, i32* %i, align 4, !dbg !3581
  store i32 %fresh6, i32* %fresh6.dbg.spill, align 4, !dbg !3581
  call void @llvm.dbg.declare(metadata i32* %fresh6.dbg.spill, metadata !3363, metadata !DIExpression()), !dbg !3582
  %_83 = load i32, i32* %i, align 4, !dbg !3583
  %143 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_83, i32 1), !dbg !3583
  %_84.0 = extractvalue { i32, i1 } %143, 0, !dbg !3583
  %_84.1 = extractvalue { i32, i1 } %143, 1, !dbg !3583
  %144 = call i1 @llvm.expect.i1(i1 %_84.1, i1 false), !dbg !3583
  br i1 %144, label %panic9, label %bb17, !dbg !3583

bb17:                                             ; preds = %bb16
  store i32 %_84.0, i32* %i, align 4, !dbg !3584
  %145 = getelementptr inbounds [3 x i8], [3 x i8]* %def, i64 0, i64 2, !dbg !3585
  %_85 = load i8, i8* %145, align 1, !dbg !3585
  %_89 = sext i32 %fresh6 to i64, !dbg !3586
  store i32* %buffer, i32** %self.dbg.spill.i218, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i218, metadata !3510, metadata !DIExpression()), !dbg !3587
  store i64 %_89, i64* %count.dbg.spill.i217, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i217, metadata !3513, metadata !DIExpression()), !dbg !3589
  %146 = getelementptr inbounds i32, i32* %buffer, i64 %_89, !dbg !3590
  store i32* %146, i32** %6, align 8, !dbg !3590
  %_3.i219 = load i32*, i32** %6, align 8, !dbg !3590
  br label %bb18, !dbg !3591

panic9:                                           ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc225 to %"core::panic::location::Location"*)) #17, !dbg !3583
  unreachable, !dbg !3583

bb18:                                             ; preds = %bb17
  %147 = sext i8 %_85 to i32, !dbg !3592
  store i32 %147, i32* %_3.i219, align 4, !dbg !3592
  %148 = getelementptr inbounds [2 x i8], [2 x i8]* %part, i64 0, i64 0, !dbg !3593
  store i8 1, i8* %148, align 1, !dbg !3593
  %149 = getelementptr inbounds [2 x i8], [2 x i8]* %part, i64 0, i64 1, !dbg !3593
  store i8 0, i8* %149, align 1, !dbg !3593
  %fresh7 = load i32, i32* %i, align 4, !dbg !3594
  store i32 %fresh7, i32* %fresh7.dbg.spill, align 4, !dbg !3594
  call void @llvm.dbg.declare(metadata i32* %fresh7.dbg.spill, metadata !3370, metadata !DIExpression()), !dbg !3595
  %_94 = load i32, i32* %i, align 4, !dbg !3596
  %150 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_94, i32 1), !dbg !3596
  %_95.0 = extractvalue { i32, i1 } %150, 0, !dbg !3596
  %_95.1 = extractvalue { i32, i1 } %150, 1, !dbg !3596
  %151 = call i1 @llvm.expect.i1(i1 %_95.1, i1 false), !dbg !3596
  br i1 %151, label %panic10, label %bb19, !dbg !3596

bb19:                                             ; preds = %bb18
  store i32 %_95.0, i32* %i, align 4, !dbg !3597
  %152 = getelementptr inbounds [2 x i8], [2 x i8]* %part, i64 0, i64 0, !dbg !3598
  %_96 = load i8, i8* %152, align 1, !dbg !3598
  %_100 = sext i32 %fresh7 to i64, !dbg !3599
  store i32* %buffer, i32** %self.dbg.spill.i215, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i215, metadata !3510, metadata !DIExpression()), !dbg !3600
  store i64 %_100, i64* %count.dbg.spill.i214, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i214, metadata !3513, metadata !DIExpression()), !dbg !3602
  %153 = getelementptr inbounds i32, i32* %buffer, i64 %_100, !dbg !3603
  store i32* %153, i32** %7, align 8, !dbg !3603
  %_3.i216 = load i32*, i32** %7, align 8, !dbg !3603
  br label %bb20, !dbg !3604

panic10:                                          ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc227 to %"core::panic::location::Location"*)) #17, !dbg !3596
  unreachable, !dbg !3596

bb20:                                             ; preds = %bb19
  %154 = sext i8 %_96 to i32, !dbg !3605
  store i32 %154, i32* %_3.i216, align 4, !dbg !3605
  %fresh8 = load i32, i32* %i, align 4, !dbg !3606
  store i32 %fresh8, i32* %fresh8.dbg.spill, align 4, !dbg !3606
  call void @llvm.dbg.declare(metadata i32* %fresh8.dbg.spill, metadata !3372, metadata !DIExpression()), !dbg !3607
  %_103 = load i32, i32* %i, align 4, !dbg !3608
  %155 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_103, i32 1), !dbg !3608
  %_104.0 = extractvalue { i32, i1 } %155, 0, !dbg !3608
  %_104.1 = extractvalue { i32, i1 } %155, 1, !dbg !3608
  %156 = call i1 @llvm.expect.i1(i1 %_104.1, i1 false), !dbg !3608
  br i1 %156, label %panic11, label %bb21, !dbg !3608

bb21:                                             ; preds = %bb20
  store i32 %_104.0, i32* %i, align 4, !dbg !3609
  %157 = getelementptr inbounds [2 x i8], [2 x i8]* %part, i64 0, i64 1, !dbg !3610
  %_105 = load i8, i8* %157, align 1, !dbg !3610
  %_109 = sext i32 %fresh8 to i64, !dbg !3611
  store i32* %buffer, i32** %self.dbg.spill.i212, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i212, metadata !3510, metadata !DIExpression()), !dbg !3612
  store i64 %_109, i64* %count.dbg.spill.i211, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i211, metadata !3513, metadata !DIExpression()), !dbg !3614
  %158 = getelementptr inbounds i32, i32* %buffer, i64 %_109, !dbg !3615
  store i32* %158, i32** %8, align 8, !dbg !3615
  %_3.i213 = load i32*, i32** %8, align 8, !dbg !3615
  br label %bb22, !dbg !3616

panic11:                                          ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc229 to %"core::panic::location::Location"*)) #17, !dbg !3608
  unreachable, !dbg !3608

bb22:                                             ; preds = %bb21
  %159 = sext i8 %_105 to i32, !dbg !3617
  store i32 %159, i32* %_3.i213, align 4, !dbg !3617
  store i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc6, i32 0, i32 0, i32 0), i8** %abcptr.dbg.spill, align 8, !dbg !3618
  call void @llvm.dbg.declare(metadata i8** %abcptr.dbg.spill, metadata !3374, metadata !DIExpression()), !dbg !3619
  %fresh9 = load i32, i32* %i, align 4, !dbg !3620
  store i32 %fresh9, i32* %fresh9.dbg.spill, align 4, !dbg !3620
  call void @llvm.dbg.declare(metadata i32* %fresh9.dbg.spill, metadata !3376, metadata !DIExpression()), !dbg !3621
  %_117 = load i32, i32* %i, align 4, !dbg !3622
  %160 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_117, i32 1), !dbg !3622
  %_118.0 = extractvalue { i32, i1 } %160, 0, !dbg !3622
  %_118.1 = extractvalue { i32, i1 } %160, 1, !dbg !3622
  %161 = call i1 @llvm.expect.i1(i1 %_118.1, i1 false), !dbg !3622
  br i1 %161, label %panic12, label %bb23, !dbg !3622

bb23:                                             ; preds = %bb22
  store i32 %_118.0, i32* %i, align 4, !dbg !3623
  store i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc6, i32 0, i32 0, i32 0), i8** %self.dbg.spill.i89, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i89, metadata !3624, metadata !DIExpression()), !dbg !3630
  store i64 0, i64* %count.dbg.spill.i88, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i88, metadata !3629, metadata !DIExpression()), !dbg !3632
  store i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc6, i32 0, i32 0, i32 0), i8** %49, align 8, !dbg !3633
  %_3.i90 = load i8*, i8** %49, align 8, !dbg !3633
  br label %bb24, !dbg !3634

panic12:                                          ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc231 to %"core::panic::location::Location"*)) #17, !dbg !3622
  unreachable, !dbg !3622

bb24:                                             ; preds = %bb23
  %_119 = load i8, i8* %_3.i90, align 1, !dbg !3635
  %_125 = sext i32 %fresh9 to i64, !dbg !3636
  store i32* %buffer, i32** %self.dbg.spill.i209, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i209, metadata !3510, metadata !DIExpression()), !dbg !3637
  store i64 %_125, i64* %count.dbg.spill.i208, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i208, metadata !3513, metadata !DIExpression()), !dbg !3639
  %162 = getelementptr inbounds i32, i32* %buffer, i64 %_125, !dbg !3640
  store i32* %162, i32** %9, align 8, !dbg !3640
  %_3.i210 = load i32*, i32** %9, align 8, !dbg !3640
  br label %bb25, !dbg !3641

bb25:                                             ; preds = %bb24
  %163 = sext i8 %_119 to i32, !dbg !3642
  store i32 %163, i32* %_3.i210, align 4, !dbg !3642
  %fresh10 = load i32, i32* %i, align 4, !dbg !3643
  store i32 %fresh10, i32* %fresh10.dbg.spill, align 4, !dbg !3643
  call void @llvm.dbg.declare(metadata i32* %fresh10.dbg.spill, metadata !3378, metadata !DIExpression()), !dbg !3644
  %_128 = load i32, i32* %i, align 4, !dbg !3645
  %164 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_128, i32 1), !dbg !3645
  %_129.0 = extractvalue { i32, i1 } %164, 0, !dbg !3645
  %_129.1 = extractvalue { i32, i1 } %164, 1, !dbg !3645
  %165 = call i1 @llvm.expect.i1(i1 %_129.1, i1 false), !dbg !3645
  br i1 %165, label %panic13, label %bb26, !dbg !3645

bb26:                                             ; preds = %bb25
  store i32 %_129.0, i32* %i, align 4, !dbg !3646
  store i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc6, i32 0, i32 0, i32 0), i8** %self.dbg.spill.i86, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i86, metadata !3624, metadata !DIExpression()), !dbg !3647
  store i64 1, i64* %count.dbg.spill.i85, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i85, metadata !3629, metadata !DIExpression()), !dbg !3649
  store i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc6, i64 0, i32 0, i64 1), i8** %50, align 8, !dbg !3650
  %_3.i87 = load i8*, i8** %50, align 8, !dbg !3650
  br label %bb27, !dbg !3651

panic13:                                          ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc233 to %"core::panic::location::Location"*)) #17, !dbg !3645
  unreachable, !dbg !3645

bb27:                                             ; preds = %bb26
  %_130 = load i8, i8* %_3.i87, align 1, !dbg !3652
  %_136 = sext i32 %fresh10 to i64, !dbg !3653
  store i32* %buffer, i32** %self.dbg.spill.i206, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i206, metadata !3510, metadata !DIExpression()), !dbg !3654
  store i64 %_136, i64* %count.dbg.spill.i205, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i205, metadata !3513, metadata !DIExpression()), !dbg !3656
  %166 = getelementptr inbounds i32, i32* %buffer, i64 %_136, !dbg !3657
  store i32* %166, i32** %10, align 8, !dbg !3657
  %_3.i207 = load i32*, i32** %10, align 8, !dbg !3657
  br label %bb28, !dbg !3658

bb28:                                             ; preds = %bb27
  %167 = sext i8 %_130 to i32, !dbg !3659
  store i32 %167, i32* %_3.i207, align 4, !dbg !3659
  %fresh11 = load i32, i32* %i, align 4, !dbg !3660
  store i32 %fresh11, i32* %fresh11.dbg.spill, align 4, !dbg !3660
  call void @llvm.dbg.declare(metadata i32* %fresh11.dbg.spill, metadata !3380, metadata !DIExpression()), !dbg !3661
  %_139 = load i32, i32* %i, align 4, !dbg !3662
  %168 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_139, i32 1), !dbg !3662
  %_140.0 = extractvalue { i32, i1 } %168, 0, !dbg !3662
  %_140.1 = extractvalue { i32, i1 } %168, 1, !dbg !3662
  %169 = call i1 @llvm.expect.i1(i1 %_140.1, i1 false), !dbg !3662
  br i1 %169, label %panic14, label %bb29, !dbg !3662

bb29:                                             ; preds = %bb28
  store i32 %_140.0, i32* %i, align 4, !dbg !3663
  store i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc6, i32 0, i32 0, i32 0), i8** %self.dbg.spill.i83, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i83, metadata !3624, metadata !DIExpression()), !dbg !3664
  store i64 2, i64* %count.dbg.spill.i82, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i82, metadata !3629, metadata !DIExpression()), !dbg !3666
  store i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc6, i64 0, i32 0, i64 2), i8** %51, align 8, !dbg !3667
  %_3.i84 = load i8*, i8** %51, align 8, !dbg !3667
  br label %bb30, !dbg !3668

panic14:                                          ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc235 to %"core::panic::location::Location"*)) #17, !dbg !3662
  unreachable, !dbg !3662

bb30:                                             ; preds = %bb29
  %_141 = load i8, i8* %_3.i84, align 1, !dbg !3669
  %_147 = sext i32 %fresh11 to i64, !dbg !3670
  store i32* %buffer, i32** %self.dbg.spill.i203, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i203, metadata !3510, metadata !DIExpression()), !dbg !3671
  store i64 %_147, i64* %count.dbg.spill.i202, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i202, metadata !3513, metadata !DIExpression()), !dbg !3673
  %170 = getelementptr inbounds i32, i32* %buffer, i64 %_147, !dbg !3674
  store i32* %170, i32** %11, align 8, !dbg !3674
  %_3.i204 = load i32*, i32** %11, align 8, !dbg !3674
  br label %bb31, !dbg !3675

bb31:                                             ; preds = %bb30
  %171 = sext i8 %_141 to i32, !dbg !3676
  store i32 %171, i32* %_3.i204, align 4, !dbg !3676
  %fresh12 = load i32, i32* %i, align 4, !dbg !3677
  store i32 %fresh12, i32* %fresh12.dbg.spill, align 4, !dbg !3677
  call void @llvm.dbg.declare(metadata i32* %fresh12.dbg.spill, metadata !3382, metadata !DIExpression()), !dbg !3678
  %_150 = load i32, i32* %i, align 4, !dbg !3679
  %172 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_150, i32 1), !dbg !3679
  %_151.0 = extractvalue { i32, i1 } %172, 0, !dbg !3679
  %_151.1 = extractvalue { i32, i1 } %172, 1, !dbg !3679
  %173 = call i1 @llvm.expect.i1(i1 %_151.1, i1 false), !dbg !3679
  br i1 %173, label %panic15, label %bb32, !dbg !3679

bb32:                                             ; preds = %bb31
  store i32 %_151.0, i32* %i, align 4, !dbg !3680
  store i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc6, i32 0, i32 0, i32 0), i8** %self.dbg.spill.i80, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i80, metadata !3624, metadata !DIExpression()), !dbg !3681
  store i64 3, i64* %count.dbg.spill.i79, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i79, metadata !3629, metadata !DIExpression()), !dbg !3683
  store i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc6, i64 0, i32 0, i64 3), i8** %52, align 8, !dbg !3684
  %_3.i81 = load i8*, i8** %52, align 8, !dbg !3684
  br label %bb33, !dbg !3685

panic15:                                          ; preds = %bb31
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc237 to %"core::panic::location::Location"*)) #17, !dbg !3679
  unreachable, !dbg !3679

bb33:                                             ; preds = %bb32
  %_152 = load i8, i8* %_3.i81, align 1, !dbg !3686
  %_158 = sext i32 %fresh12 to i64, !dbg !3687
  store i32* %buffer, i32** %self.dbg.spill.i200, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i200, metadata !3510, metadata !DIExpression()), !dbg !3688
  store i64 %_158, i64* %count.dbg.spill.i199, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i199, metadata !3513, metadata !DIExpression()), !dbg !3690
  %174 = getelementptr inbounds i32, i32* %buffer, i64 %_158, !dbg !3691
  store i32* %174, i32** %12, align 8, !dbg !3691
  %_3.i201 = load i32*, i32** %12, align 8, !dbg !3691
  br label %bb34, !dbg !3692

bb34:                                             ; preds = %bb33
  %175 = sext i8 %_152 to i32, !dbg !3693
  store i32 %175, i32* %_3.i201, align 4, !dbg !3693
  store [5 x i8]* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc7, i32 0, i32 0), [5 x i8]** %68, align 8, !dbg !3694
  %_161 = load [5 x i8]*, [5 x i8]** %68, align 8, !dbg !3694, !nonnull !140, !align !3502, !noundef !140
  br label %bb35, !dbg !3694

bb35:                                             ; preds = %bb34
  %176 = bitcast [5 x i8]* %init to i8*, !dbg !3695
  %177 = bitcast [5 x i8]* %_161 to i8*, !dbg !3695
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %176, i8* align 1 %177, i64 5, i1 false), !dbg !3695
  %fresh13 = load i32, i32* %i, align 4, !dbg !3696
  store i32 %fresh13, i32* %fresh13.dbg.spill, align 4, !dbg !3696
  call void @llvm.dbg.declare(metadata i32* %fresh13.dbg.spill, metadata !3387, metadata !DIExpression()), !dbg !3697
  %_165 = load i32, i32* %i, align 4, !dbg !3698
  %178 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_165, i32 1), !dbg !3698
  %_166.0 = extractvalue { i32, i1 } %178, 0, !dbg !3698
  %_166.1 = extractvalue { i32, i1 } %178, 1, !dbg !3698
  %179 = call i1 @llvm.expect.i1(i1 %_166.1, i1 false), !dbg !3698
  br i1 %179, label %panic16, label %bb36, !dbg !3698

bb36:                                             ; preds = %bb35
  store i32 %_166.0, i32* %i, align 4, !dbg !3699
  %180 = getelementptr inbounds [5 x i8], [5 x i8]* %init, i64 0, i64 0, !dbg !3700
  %_167 = load i8, i8* %180, align 1, !dbg !3700
  %_171 = sext i32 %fresh13 to i64, !dbg !3701
  store i32* %buffer, i32** %self.dbg.spill.i197, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i197, metadata !3510, metadata !DIExpression()), !dbg !3702
  store i64 %_171, i64* %count.dbg.spill.i196, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i196, metadata !3513, metadata !DIExpression()), !dbg !3704
  %181 = getelementptr inbounds i32, i32* %buffer, i64 %_171, !dbg !3705
  store i32* %181, i32** %13, align 8, !dbg !3705
  %_3.i198 = load i32*, i32** %13, align 8, !dbg !3705
  br label %bb37, !dbg !3706

panic16:                                          ; preds = %bb35
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc239 to %"core::panic::location::Location"*)) #17, !dbg !3698
  unreachable, !dbg !3698

bb37:                                             ; preds = %bb36
  %182 = sext i8 %_167 to i32, !dbg !3707
  store i32 %182, i32* %_3.i198, align 4, !dbg !3707
  %fresh14 = load i32, i32* %i, align 4, !dbg !3708
  store i32 %fresh14, i32* %fresh14.dbg.spill, align 4, !dbg !3708
  call void @llvm.dbg.declare(metadata i32* %fresh14.dbg.spill, metadata !3389, metadata !DIExpression()), !dbg !3709
  %_174 = load i32, i32* %i, align 4, !dbg !3710
  %183 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_174, i32 1), !dbg !3710
  %_175.0 = extractvalue { i32, i1 } %183, 0, !dbg !3710
  %_175.1 = extractvalue { i32, i1 } %183, 1, !dbg !3710
  %184 = call i1 @llvm.expect.i1(i1 %_175.1, i1 false), !dbg !3710
  br i1 %184, label %panic17, label %bb38, !dbg !3710

bb38:                                             ; preds = %bb37
  store i32 %_175.0, i32* %i, align 4, !dbg !3711
  %185 = getelementptr inbounds [5 x i8], [5 x i8]* %init, i64 0, i64 1, !dbg !3712
  %_176 = load i8, i8* %185, align 1, !dbg !3712
  %_180 = sext i32 %fresh14 to i64, !dbg !3713
  store i32* %buffer, i32** %self.dbg.spill.i194, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i194, metadata !3510, metadata !DIExpression()), !dbg !3714
  store i64 %_180, i64* %count.dbg.spill.i193, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i193, metadata !3513, metadata !DIExpression()), !dbg !3716
  %186 = getelementptr inbounds i32, i32* %buffer, i64 %_180, !dbg !3717
  store i32* %186, i32** %14, align 8, !dbg !3717
  %_3.i195 = load i32*, i32** %14, align 8, !dbg !3717
  br label %bb39, !dbg !3718

panic17:                                          ; preds = %bb37
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc241 to %"core::panic::location::Location"*)) #17, !dbg !3710
  unreachable, !dbg !3710

bb39:                                             ; preds = %bb38
  %187 = sext i8 %_176 to i32, !dbg !3719
  store i32 %187, i32* %_3.i195, align 4, !dbg !3719
  %fresh15 = load i32, i32* %i, align 4, !dbg !3720
  store i32 %fresh15, i32* %fresh15.dbg.spill, align 4, !dbg !3720
  call void @llvm.dbg.declare(metadata i32* %fresh15.dbg.spill, metadata !3391, metadata !DIExpression()), !dbg !3721
  %_183 = load i32, i32* %i, align 4, !dbg !3722
  %188 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_183, i32 1), !dbg !3722
  %_184.0 = extractvalue { i32, i1 } %188, 0, !dbg !3722
  %_184.1 = extractvalue { i32, i1 } %188, 1, !dbg !3722
  %189 = call i1 @llvm.expect.i1(i1 %_184.1, i1 false), !dbg !3722
  br i1 %189, label %panic18, label %bb40, !dbg !3722

bb40:                                             ; preds = %bb39
  store i32 %_184.0, i32* %i, align 4, !dbg !3723
  %190 = getelementptr inbounds [5 x i8], [5 x i8]* %init, i64 0, i64 2, !dbg !3724
  %_185 = load i8, i8* %190, align 1, !dbg !3724
  %_189 = sext i32 %fresh15 to i64, !dbg !3725
  store i32* %buffer, i32** %self.dbg.spill.i191, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i191, metadata !3510, metadata !DIExpression()), !dbg !3726
  store i64 %_189, i64* %count.dbg.spill.i190, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i190, metadata !3513, metadata !DIExpression()), !dbg !3728
  %191 = getelementptr inbounds i32, i32* %buffer, i64 %_189, !dbg !3729
  store i32* %191, i32** %15, align 8, !dbg !3729
  %_3.i192 = load i32*, i32** %15, align 8, !dbg !3729
  br label %bb41, !dbg !3730

panic18:                                          ; preds = %bb39
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc243 to %"core::panic::location::Location"*)) #17, !dbg !3722
  unreachable, !dbg !3722

bb41:                                             ; preds = %bb40
  %192 = sext i8 %_185 to i32, !dbg !3731
  store i32 %192, i32* %_3.i192, align 4, !dbg !3731
  %fresh16 = load i32, i32* %i, align 4, !dbg !3732
  store i32 %fresh16, i32* %fresh16.dbg.spill, align 4, !dbg !3732
  call void @llvm.dbg.declare(metadata i32* %fresh16.dbg.spill, metadata !3393, metadata !DIExpression()), !dbg !3733
  %_192 = load i32, i32* %i, align 4, !dbg !3734
  %193 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_192, i32 1), !dbg !3734
  %_193.0 = extractvalue { i32, i1 } %193, 0, !dbg !3734
  %_193.1 = extractvalue { i32, i1 } %193, 1, !dbg !3734
  %194 = call i1 @llvm.expect.i1(i1 %_193.1, i1 false), !dbg !3734
  br i1 %194, label %panic19, label %bb42, !dbg !3734

bb42:                                             ; preds = %bb41
  store i32 %_193.0, i32* %i, align 4, !dbg !3735
  %195 = getelementptr inbounds [5 x i8], [5 x i8]* %init, i64 0, i64 3, !dbg !3736
  %_194 = load i8, i8* %195, align 1, !dbg !3736
  %_198 = sext i32 %fresh16 to i64, !dbg !3737
  store i32* %buffer, i32** %self.dbg.spill.i188, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i188, metadata !3510, metadata !DIExpression()), !dbg !3738
  store i64 %_198, i64* %count.dbg.spill.i187, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i187, metadata !3513, metadata !DIExpression()), !dbg !3740
  %196 = getelementptr inbounds i32, i32* %buffer, i64 %_198, !dbg !3741
  store i32* %196, i32** %16, align 8, !dbg !3741
  %_3.i189 = load i32*, i32** %16, align 8, !dbg !3741
  br label %bb43, !dbg !3742

panic19:                                          ; preds = %bb41
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc245 to %"core::panic::location::Location"*)) #17, !dbg !3734
  unreachable, !dbg !3734

bb43:                                             ; preds = %bb42
  %197 = sext i8 %_194 to i32, !dbg !3743
  store i32 %197, i32* %_3.i189, align 4, !dbg !3743
  store [3 x i8]* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc8, i32 0, i32 0), [3 x i8]** %67, align 8, !dbg !3744
  %_201 = load [3 x i8]*, [3 x i8]** %67, align 8, !dbg !3744, !nonnull !140, !align !3502, !noundef !140
  br label %bb44, !dbg !3744

bb44:                                             ; preds = %bb43
  %198 = bitcast [3 x i8]* %too_long to i8*, !dbg !3745
  %199 = bitcast [3 x i8]* %_201 to i8*, !dbg !3745
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %198, i8* align 1 %199, i64 3, i1 false), !dbg !3745
  %fresh17 = load i32, i32* %i, align 4, !dbg !3746
  store i32 %fresh17, i32* %fresh17.dbg.spill, align 4, !dbg !3746
  call void @llvm.dbg.declare(metadata i32* %fresh17.dbg.spill, metadata !3397, metadata !DIExpression()), !dbg !3747
  %_205 = load i32, i32* %i, align 4, !dbg !3748
  %200 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_205, i32 1), !dbg !3748
  %_206.0 = extractvalue { i32, i1 } %200, 0, !dbg !3748
  %_206.1 = extractvalue { i32, i1 } %200, 1, !dbg !3748
  %201 = call i1 @llvm.expect.i1(i1 %_206.1, i1 false), !dbg !3748
  br i1 %201, label %panic20, label %bb45, !dbg !3748

bb45:                                             ; preds = %bb44
  store i32 %_206.0, i32* %i, align 4, !dbg !3749
  %202 = getelementptr inbounds [3 x i8], [3 x i8]* %too_long, i64 0, i64 0, !dbg !3750
  %_207 = load i8, i8* %202, align 1, !dbg !3750
  %_211 = sext i32 %fresh17 to i64, !dbg !3751
  store i32* %buffer, i32** %self.dbg.spill.i185, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i185, metadata !3510, metadata !DIExpression()), !dbg !3752
  store i64 %_211, i64* %count.dbg.spill.i184, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i184, metadata !3513, metadata !DIExpression()), !dbg !3754
  %203 = getelementptr inbounds i32, i32* %buffer, i64 %_211, !dbg !3755
  store i32* %203, i32** %17, align 8, !dbg !3755
  %_3.i186 = load i32*, i32** %17, align 8, !dbg !3755
  br label %bb46, !dbg !3756

panic20:                                          ; preds = %bb44
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc247 to %"core::panic::location::Location"*)) #17, !dbg !3748
  unreachable, !dbg !3748

bb46:                                             ; preds = %bb45
  %204 = sext i8 %_207 to i32, !dbg !3757
  store i32 %204, i32* %_3.i186, align 4, !dbg !3757
  %fresh18 = load i32, i32* %i, align 4, !dbg !3758
  store i32 %fresh18, i32* %fresh18.dbg.spill, align 4, !dbg !3758
  call void @llvm.dbg.declare(metadata i32* %fresh18.dbg.spill, metadata !3399, metadata !DIExpression()), !dbg !3759
  %_214 = load i32, i32* %i, align 4, !dbg !3760
  %205 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_214, i32 1), !dbg !3760
  %_215.0 = extractvalue { i32, i1 } %205, 0, !dbg !3760
  %_215.1 = extractvalue { i32, i1 } %205, 1, !dbg !3760
  %206 = call i1 @llvm.expect.i1(i1 %_215.1, i1 false), !dbg !3760
  br i1 %206, label %panic21, label %bb47, !dbg !3760

bb47:                                             ; preds = %bb46
  store i32 %_215.0, i32* %i, align 4, !dbg !3761
  %207 = getelementptr inbounds [3 x i8], [3 x i8]* %too_long, i64 0, i64 1, !dbg !3762
  %_216 = load i8, i8* %207, align 1, !dbg !3762
  %_220 = sext i32 %fresh18 to i64, !dbg !3763
  store i32* %buffer, i32** %self.dbg.spill.i182, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i182, metadata !3510, metadata !DIExpression()), !dbg !3764
  store i64 %_220, i64* %count.dbg.spill.i181, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i181, metadata !3513, metadata !DIExpression()), !dbg !3766
  %208 = getelementptr inbounds i32, i32* %buffer, i64 %_220, !dbg !3767
  store i32* %208, i32** %18, align 8, !dbg !3767
  %_3.i183 = load i32*, i32** %18, align 8, !dbg !3767
  br label %bb48, !dbg !3768

panic21:                                          ; preds = %bb46
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc249 to %"core::panic::location::Location"*)) #17, !dbg !3760
  unreachable, !dbg !3760

bb48:                                             ; preds = %bb47
  %209 = sext i8 %_216 to i32, !dbg !3769
  store i32 %209, i32* %_3.i183, align 4, !dbg !3769
  %fresh19 = load i32, i32* %i, align 4, !dbg !3770
  store i32 %fresh19, i32* %fresh19.dbg.spill, align 4, !dbg !3770
  call void @llvm.dbg.declare(metadata i32* %fresh19.dbg.spill, metadata !3401, metadata !DIExpression()), !dbg !3771
  %_223 = load i32, i32* %i, align 4, !dbg !3772
  %210 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_223, i32 1), !dbg !3772
  %_224.0 = extractvalue { i32, i1 } %210, 0, !dbg !3772
  %_224.1 = extractvalue { i32, i1 } %210, 1, !dbg !3772
  %211 = call i1 @llvm.expect.i1(i1 %_224.1, i1 false), !dbg !3772
  br i1 %211, label %panic22, label %bb49, !dbg !3772

bb49:                                             ; preds = %bb48
  store i32 %_224.0, i32* %i, align 4, !dbg !3773
  %212 = getelementptr inbounds [3 x i8], [3 x i8]* %too_long, i64 0, i64 2, !dbg !3774
  %_225 = load i8, i8* %212, align 1, !dbg !3774
  %_229 = sext i32 %fresh19 to i64, !dbg !3775
  store i32* %buffer, i32** %self.dbg.spill.i179, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i179, metadata !3510, metadata !DIExpression()), !dbg !3776
  store i64 %_229, i64* %count.dbg.spill.i178, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i178, metadata !3513, metadata !DIExpression()), !dbg !3778
  %213 = getelementptr inbounds i32, i32* %buffer, i64 %_229, !dbg !3779
  store i32* %213, i32** %19, align 8, !dbg !3779
  %_3.i180 = load i32*, i32** %19, align 8, !dbg !3779
  br label %bb50, !dbg !3780

panic22:                                          ; preds = %bb48
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc251 to %"core::panic::location::Location"*)) #17, !dbg !3772
  unreachable, !dbg !3772

bb50:                                             ; preds = %bb49
  %214 = sext i8 %_225 to i32, !dbg !3781
  store i32 %214, i32* %_3.i180, align 4, !dbg !3781
  store [20 x i8]* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc9, i32 0, i32 0), [20 x i8]** %66, align 8, !dbg !3782
  %_232 = load [20 x i8]*, [20 x i8]** %66, align 8, !dbg !3782, !nonnull !140, !align !3502, !noundef !140
  br label %bb51, !dbg !3782

bb51:                                             ; preds = %bb50
  %215 = bitcast [20 x i8]* %too_short to i8*, !dbg !3783
  %216 = bitcast [20 x i8]* %_232 to i8*, !dbg !3783
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %215, i8* align 1 %216, i64 20, i1 false), !dbg !3783
  %fresh20 = load i32, i32* %i, align 4, !dbg !3784
  store i32 %fresh20, i32* %fresh20.dbg.spill, align 4, !dbg !3784
  call void @llvm.dbg.declare(metadata i32* %fresh20.dbg.spill, metadata !3408, metadata !DIExpression()), !dbg !3785
  %_236 = load i32, i32* %i, align 4, !dbg !3786
  %217 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_236, i32 1), !dbg !3786
  %_237.0 = extractvalue { i32, i1 } %217, 0, !dbg !3786
  %_237.1 = extractvalue { i32, i1 } %217, 1, !dbg !3786
  %218 = call i1 @llvm.expect.i1(i1 %_237.1, i1 false), !dbg !3786
  br i1 %218, label %panic23, label %bb52, !dbg !3786

bb52:                                             ; preds = %bb51
  store i32 %_237.0, i32* %i, align 4, !dbg !3787
  %219 = getelementptr inbounds [20 x i8], [20 x i8]* %too_short, i64 0, i64 0, !dbg !3788
  %_238 = load i8, i8* %219, align 1, !dbg !3788
  %_242 = sext i32 %fresh20 to i64, !dbg !3789
  store i32* %buffer, i32** %self.dbg.spill.i176, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i176, metadata !3510, metadata !DIExpression()), !dbg !3790
  store i64 %_242, i64* %count.dbg.spill.i175, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i175, metadata !3513, metadata !DIExpression()), !dbg !3792
  %220 = getelementptr inbounds i32, i32* %buffer, i64 %_242, !dbg !3793
  store i32* %220, i32** %20, align 8, !dbg !3793
  %_3.i177 = load i32*, i32** %20, align 8, !dbg !3793
  br label %bb53, !dbg !3794

panic23:                                          ; preds = %bb51
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc253 to %"core::panic::location::Location"*)) #17, !dbg !3786
  unreachable, !dbg !3786

bb53:                                             ; preds = %bb52
  %221 = sext i8 %_238 to i32, !dbg !3795
  store i32 %221, i32* %_3.i177, align 4, !dbg !3795
  %fresh21 = load i32, i32* %i, align 4, !dbg !3796
  store i32 %fresh21, i32* %fresh21.dbg.spill, align 4, !dbg !3796
  call void @llvm.dbg.declare(metadata i32* %fresh21.dbg.spill, metadata !3410, metadata !DIExpression()), !dbg !3797
  %_245 = load i32, i32* %i, align 4, !dbg !3798
  %222 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_245, i32 1), !dbg !3798
  %_246.0 = extractvalue { i32, i1 } %222, 0, !dbg !3798
  %_246.1 = extractvalue { i32, i1 } %222, 1, !dbg !3798
  %223 = call i1 @llvm.expect.i1(i1 %_246.1, i1 false), !dbg !3798
  br i1 %223, label %panic24, label %bb54, !dbg !3798

bb54:                                             ; preds = %bb53
  store i32 %_246.0, i32* %i, align 4, !dbg !3799
  %224 = getelementptr inbounds [20 x i8], [20 x i8]* %too_short, i64 0, i64 1, !dbg !3800
  %_247 = load i8, i8* %224, align 1, !dbg !3800
  %_251 = sext i32 %fresh21 to i64, !dbg !3801
  store i32* %buffer, i32** %self.dbg.spill.i173, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i173, metadata !3510, metadata !DIExpression()), !dbg !3802
  store i64 %_251, i64* %count.dbg.spill.i172, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i172, metadata !3513, metadata !DIExpression()), !dbg !3804
  %225 = getelementptr inbounds i32, i32* %buffer, i64 %_251, !dbg !3805
  store i32* %225, i32** %21, align 8, !dbg !3805
  %_3.i174 = load i32*, i32** %21, align 8, !dbg !3805
  br label %bb55, !dbg !3806

panic24:                                          ; preds = %bb53
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc255 to %"core::panic::location::Location"*)) #17, !dbg !3798
  unreachable, !dbg !3798

bb55:                                             ; preds = %bb54
  %226 = sext i8 %_247 to i32, !dbg !3807
  store i32 %226, i32* %_3.i174, align 4, !dbg !3807
  %fresh22 = load i32, i32* %i, align 4, !dbg !3808
  store i32 %fresh22, i32* %fresh22.dbg.spill, align 4, !dbg !3808
  call void @llvm.dbg.declare(metadata i32* %fresh22.dbg.spill, metadata !3412, metadata !DIExpression()), !dbg !3809
  %_254 = load i32, i32* %i, align 4, !dbg !3810
  %227 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_254, i32 1), !dbg !3810
  %_255.0 = extractvalue { i32, i1 } %227, 0, !dbg !3810
  %_255.1 = extractvalue { i32, i1 } %227, 1, !dbg !3810
  %228 = call i1 @llvm.expect.i1(i1 %_255.1, i1 false), !dbg !3810
  br i1 %228, label %panic25, label %bb56, !dbg !3810

bb56:                                             ; preds = %bb55
  store i32 %_255.0, i32* %i, align 4, !dbg !3811
  %229 = getelementptr inbounds [20 x i8], [20 x i8]* %too_short, i64 0, i64 2, !dbg !3812
  %_256 = load i8, i8* %229, align 1, !dbg !3812
  %_260 = sext i32 %fresh22 to i64, !dbg !3813
  store i32* %buffer, i32** %self.dbg.spill.i170, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i170, metadata !3510, metadata !DIExpression()), !dbg !3814
  store i64 %_260, i64* %count.dbg.spill.i169, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i169, metadata !3513, metadata !DIExpression()), !dbg !3816
  %230 = getelementptr inbounds i32, i32* %buffer, i64 %_260, !dbg !3817
  store i32* %230, i32** %22, align 8, !dbg !3817
  %_3.i171 = load i32*, i32** %22, align 8, !dbg !3817
  br label %bb57, !dbg !3818

panic25:                                          ; preds = %bb55
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc257 to %"core::panic::location::Location"*)) #17, !dbg !3810
  unreachable, !dbg !3810

bb57:                                             ; preds = %bb56
  %231 = sext i8 %_256 to i32, !dbg !3819
  store i32 %231, i32* %_3.i171, align 4, !dbg !3819
  %fresh23 = load i32, i32* %i, align 4, !dbg !3820
  store i32 %fresh23, i32* %fresh23.dbg.spill, align 4, !dbg !3820
  call void @llvm.dbg.declare(metadata i32* %fresh23.dbg.spill, metadata !3414, metadata !DIExpression()), !dbg !3821
  %_263 = load i32, i32* %i, align 4, !dbg !3822
  %232 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_263, i32 1), !dbg !3822
  %_264.0 = extractvalue { i32, i1 } %232, 0, !dbg !3822
  %_264.1 = extractvalue { i32, i1 } %232, 1, !dbg !3822
  %233 = call i1 @llvm.expect.i1(i1 %_264.1, i1 false), !dbg !3822
  br i1 %233, label %panic26, label %bb58, !dbg !3822

bb58:                                             ; preds = %bb57
  store i32 %_264.0, i32* %i, align 4, !dbg !3823
  %234 = getelementptr inbounds [20 x i8], [20 x i8]* %too_short, i64 0, i64 3, !dbg !3824
  %_265 = load i8, i8* %234, align 1, !dbg !3824
  %_269 = sext i32 %fresh23 to i64, !dbg !3825
  store i32* %buffer, i32** %self.dbg.spill.i167, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i167, metadata !3510, metadata !DIExpression()), !dbg !3826
  store i64 %_269, i64* %count.dbg.spill.i166, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i166, metadata !3513, metadata !DIExpression()), !dbg !3828
  %235 = getelementptr inbounds i32, i32* %buffer, i64 %_269, !dbg !3829
  store i32* %235, i32** %23, align 8, !dbg !3829
  %_3.i168 = load i32*, i32** %23, align 8, !dbg !3829
  br label %bb59, !dbg !3830

panic26:                                          ; preds = %bb57
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc259 to %"core::panic::location::Location"*)) #17, !dbg !3822
  unreachable, !dbg !3822

bb59:                                             ; preds = %bb58
  %236 = sext i8 %_265 to i32, !dbg !3831
  store i32 %236, i32* %_3.i168, align 4, !dbg !3831
  %fresh24 = load i32, i32* %i, align 4, !dbg !3832
  store i32 %fresh24, i32* %fresh24.dbg.spill, align 4, !dbg !3832
  call void @llvm.dbg.declare(metadata i32* %fresh24.dbg.spill, metadata !3416, metadata !DIExpression()), !dbg !3833
  %_272 = load i32, i32* %i, align 4, !dbg !3834
  %237 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_272, i32 1), !dbg !3834
  %_273.0 = extractvalue { i32, i1 } %237, 0, !dbg !3834
  %_273.1 = extractvalue { i32, i1 } %237, 1, !dbg !3834
  %238 = call i1 @llvm.expect.i1(i1 %_273.1, i1 false), !dbg !3834
  br i1 %238, label %panic27, label %bb60, !dbg !3834

bb60:                                             ; preds = %bb59
  store i32 %_273.0, i32* %i, align 4, !dbg !3835
  %239 = getelementptr inbounds [20 x i8], [20 x i8]* %too_short, i64 0, i64 4, !dbg !3836
  %_274 = load i8, i8* %239, align 1, !dbg !3836
  %_278 = sext i32 %fresh24 to i64, !dbg !3837
  store i32* %buffer, i32** %self.dbg.spill.i164, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i164, metadata !3510, metadata !DIExpression()), !dbg !3838
  store i64 %_278, i64* %count.dbg.spill.i163, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i163, metadata !3513, metadata !DIExpression()), !dbg !3840
  %240 = getelementptr inbounds i32, i32* %buffer, i64 %_278, !dbg !3841
  store i32* %240, i32** %24, align 8, !dbg !3841
  %_3.i165 = load i32*, i32** %24, align 8, !dbg !3841
  br label %bb61, !dbg !3842

panic27:                                          ; preds = %bb59
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc261 to %"core::panic::location::Location"*)) #17, !dbg !3834
  unreachable, !dbg !3834

bb61:                                             ; preds = %bb60
  %241 = sext i8 %_274 to i32, !dbg !3843
  store i32 %241, i32* %_3.i165, align 4, !dbg !3843
  %fresh25 = load i32, i32* %i, align 4, !dbg !3844
  store i32 %fresh25, i32* %fresh25.dbg.spill, align 4, !dbg !3844
  call void @llvm.dbg.declare(metadata i32* %fresh25.dbg.spill, metadata !3418, metadata !DIExpression()), !dbg !3845
  %_281 = load i32, i32* %i, align 4, !dbg !3846
  %242 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_281, i32 1), !dbg !3846
  %_282.0 = extractvalue { i32, i1 } %242, 0, !dbg !3846
  %_282.1 = extractvalue { i32, i1 } %242, 1, !dbg !3846
  %243 = call i1 @llvm.expect.i1(i1 %_282.1, i1 false), !dbg !3846
  br i1 %243, label %panic28, label %bb62, !dbg !3846

bb62:                                             ; preds = %bb61
  store i32 %_282.0, i32* %i, align 4, !dbg !3847
  %244 = getelementptr inbounds [20 x i8], [20 x i8]* %too_short, i64 0, i64 5, !dbg !3848
  %_283 = load i8, i8* %244, align 1, !dbg !3848
  %_287 = sext i32 %fresh25 to i64, !dbg !3849
  store i32* %buffer, i32** %self.dbg.spill.i161, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i161, metadata !3510, metadata !DIExpression()), !dbg !3850
  store i64 %_287, i64* %count.dbg.spill.i160, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i160, metadata !3513, metadata !DIExpression()), !dbg !3852
  %245 = getelementptr inbounds i32, i32* %buffer, i64 %_287, !dbg !3853
  store i32* %245, i32** %25, align 8, !dbg !3853
  %_3.i162 = load i32*, i32** %25, align 8, !dbg !3853
  br label %bb63, !dbg !3854

panic28:                                          ; preds = %bb61
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc263 to %"core::panic::location::Location"*)) #17, !dbg !3846
  unreachable, !dbg !3846

bb63:                                             ; preds = %bb62
  %246 = sext i8 %_283 to i32, !dbg !3855
  store i32 %246, i32* %_3.i162, align 4, !dbg !3855
  %fresh26 = load i32, i32* %i, align 4, !dbg !3856
  store i32 %fresh26, i32* %fresh26.dbg.spill, align 4, !dbg !3856
  call void @llvm.dbg.declare(metadata i32* %fresh26.dbg.spill, metadata !3420, metadata !DIExpression()), !dbg !3857
  %_290 = load i32, i32* %i, align 4, !dbg !3858
  %247 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_290, i32 1), !dbg !3858
  %_291.0 = extractvalue { i32, i1 } %247, 0, !dbg !3858
  %_291.1 = extractvalue { i32, i1 } %247, 1, !dbg !3858
  %248 = call i1 @llvm.expect.i1(i1 %_291.1, i1 false), !dbg !3858
  br i1 %248, label %panic29, label %bb64, !dbg !3858

bb64:                                             ; preds = %bb63
  store i32 %_291.0, i32* %i, align 4, !dbg !3859
  %249 = getelementptr inbounds [20 x i8], [20 x i8]* %too_short, i64 0, i64 6, !dbg !3860
  %_292 = load i8, i8* %249, align 1, !dbg !3860
  %_296 = sext i32 %fresh26 to i64, !dbg !3861
  store i32* %buffer, i32** %self.dbg.spill.i158, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i158, metadata !3510, metadata !DIExpression()), !dbg !3862
  store i64 %_296, i64* %count.dbg.spill.i157, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i157, metadata !3513, metadata !DIExpression()), !dbg !3864
  %250 = getelementptr inbounds i32, i32* %buffer, i64 %_296, !dbg !3865
  store i32* %250, i32** %26, align 8, !dbg !3865
  %_3.i159 = load i32*, i32** %26, align 8, !dbg !3865
  br label %bb65, !dbg !3866

panic29:                                          ; preds = %bb63
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc265 to %"core::panic::location::Location"*)) #17, !dbg !3858
  unreachable, !dbg !3858

bb65:                                             ; preds = %bb64
  %251 = sext i8 %_292 to i32, !dbg !3867
  store i32 %251, i32* %_3.i159, align 4, !dbg !3867
  store [2 x i32]* bitcast (<{ [8 x i8] }>* @alloc10 to [2 x i32]*), [2 x i32]** %65, align 8, !dbg !3868
  %_299 = load [2 x i32]*, [2 x i32]** %65, align 8, !dbg !3868, !nonnull !140, !align !3869, !noundef !140
  br label %bb66, !dbg !3868

bb66:                                             ; preds = %bb65
  %252 = bitcast [2 x i32]* %wide1 to i8*, !dbg !3870
  %253 = bitcast [2 x i32]* %_299 to i8*, !dbg !3870
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %252, i8* align 4 %253, i64 8, i1 false), !dbg !3870
  %fresh27 = load i32, i32* %i, align 4, !dbg !3871
  store i32 %fresh27, i32* %fresh27.dbg.spill, align 4, !dbg !3871
  call void @llvm.dbg.declare(metadata i32* %fresh27.dbg.spill, metadata !3425, metadata !DIExpression()), !dbg !3872
  %_303 = load i32, i32* %i, align 4, !dbg !3873
  %254 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_303, i32 1), !dbg !3873
  %_304.0 = extractvalue { i32, i1 } %254, 0, !dbg !3873
  %_304.1 = extractvalue { i32, i1 } %254, 1, !dbg !3873
  %255 = call i1 @llvm.expect.i1(i1 %_304.1, i1 false), !dbg !3873
  br i1 %255, label %panic30, label %bb67, !dbg !3873

bb67:                                             ; preds = %bb66
  store i32 %_304.0, i32* %i, align 4, !dbg !3874
  %256 = getelementptr inbounds [2 x i32], [2 x i32]* %wide1, i64 0, i64 0, !dbg !3875
  %_305 = load i32, i32* %256, align 4, !dbg !3875
  %_309 = sext i32 %fresh27 to i64, !dbg !3876
  store i32* %buffer, i32** %self.dbg.spill.i155, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i155, metadata !3510, metadata !DIExpression()), !dbg !3877
  store i64 %_309, i64* %count.dbg.spill.i154, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i154, metadata !3513, metadata !DIExpression()), !dbg !3879
  %257 = getelementptr inbounds i32, i32* %buffer, i64 %_309, !dbg !3880
  store i32* %257, i32** %27, align 8, !dbg !3880
  %_3.i156 = load i32*, i32** %27, align 8, !dbg !3880
  br label %bb68, !dbg !3881

panic30:                                          ; preds = %bb66
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc267 to %"core::panic::location::Location"*)) #17, !dbg !3873
  unreachable, !dbg !3873

bb68:                                             ; preds = %bb67
  store i32 %_305, i32* %_3.i156, align 4, !dbg !3882
  %fresh28 = load i32, i32* %i, align 4, !dbg !3883
  store i32 %fresh28, i32* %fresh28.dbg.spill, align 4, !dbg !3883
  call void @llvm.dbg.declare(metadata i32* %fresh28.dbg.spill, metadata !3427, metadata !DIExpression()), !dbg !3884
  %_312 = load i32, i32* %i, align 4, !dbg !3885
  %258 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_312, i32 1), !dbg !3885
  %_313.0 = extractvalue { i32, i1 } %258, 0, !dbg !3885
  %_313.1 = extractvalue { i32, i1 } %258, 1, !dbg !3885
  %259 = call i1 @llvm.expect.i1(i1 %_313.1, i1 false), !dbg !3885
  br i1 %259, label %panic31, label %bb69, !dbg !3885

bb69:                                             ; preds = %bb68
  store i32 %_313.0, i32* %i, align 4, !dbg !3886
  %260 = getelementptr inbounds [2 x i32], [2 x i32]* %wide1, i64 0, i64 1, !dbg !3887
  %_314 = load i32, i32* %260, align 4, !dbg !3887
  %_318 = sext i32 %fresh28 to i64, !dbg !3888
  store i32* %buffer, i32** %self.dbg.spill.i152, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i152, metadata !3510, metadata !DIExpression()), !dbg !3889
  store i64 %_318, i64* %count.dbg.spill.i151, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i151, metadata !3513, metadata !DIExpression()), !dbg !3891
  %261 = getelementptr inbounds i32, i32* %buffer, i64 %_318, !dbg !3892
  store i32* %261, i32** %28, align 8, !dbg !3892
  %_3.i153 = load i32*, i32** %28, align 8, !dbg !3892
  br label %bb70, !dbg !3893

panic31:                                          ; preds = %bb68
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc269 to %"core::panic::location::Location"*)) #17, !dbg !3885
  unreachable, !dbg !3885

bb70:                                             ; preds = %bb69
  store i32 %_314, i32* %_3.i153, align 4, !dbg !3894
  store [3 x i32]* bitcast (<{ [12 x i8] }>* @alloc11 to [3 x i32]*), [3 x i32]** %64, align 8, !dbg !3895
  %_321 = load [3 x i32]*, [3 x i32]** %64, align 8, !dbg !3895, !nonnull !140, !align !3869, !noundef !140
  br label %bb71, !dbg !3895

bb71:                                             ; preds = %bb70
  %262 = bitcast [3 x i32]* %wide2 to i8*, !dbg !3896
  %263 = bitcast [3 x i32]* %_321 to i8*, !dbg !3896
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %262, i8* align 4 %263, i64 12, i1 false), !dbg !3896
  %fresh29 = load i32, i32* %i, align 4, !dbg !3897
  store i32 %fresh29, i32* %fresh29.dbg.spill, align 4, !dbg !3897
  call void @llvm.dbg.declare(metadata i32* %fresh29.dbg.spill, metadata !3432, metadata !DIExpression()), !dbg !3898
  %_325 = load i32, i32* %i, align 4, !dbg !3899
  %264 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_325, i32 1), !dbg !3899
  %_326.0 = extractvalue { i32, i1 } %264, 0, !dbg !3899
  %_326.1 = extractvalue { i32, i1 } %264, 1, !dbg !3899
  %265 = call i1 @llvm.expect.i1(i1 %_326.1, i1 false), !dbg !3899
  br i1 %265, label %panic32, label %bb72, !dbg !3899

bb72:                                             ; preds = %bb71
  store i32 %_326.0, i32* %i, align 4, !dbg !3900
  %266 = getelementptr inbounds [3 x i32], [3 x i32]* %wide2, i64 0, i64 0, !dbg !3901
  %_327 = load i32, i32* %266, align 4, !dbg !3901
  %_331 = sext i32 %fresh29 to i64, !dbg !3902
  store i32* %buffer, i32** %self.dbg.spill.i149, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i149, metadata !3510, metadata !DIExpression()), !dbg !3903
  store i64 %_331, i64* %count.dbg.spill.i148, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i148, metadata !3513, metadata !DIExpression()), !dbg !3905
  %267 = getelementptr inbounds i32, i32* %buffer, i64 %_331, !dbg !3906
  store i32* %267, i32** %29, align 8, !dbg !3906
  %_3.i150 = load i32*, i32** %29, align 8, !dbg !3906
  br label %bb73, !dbg !3907

panic32:                                          ; preds = %bb71
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc271 to %"core::panic::location::Location"*)) #17, !dbg !3899
  unreachable, !dbg !3899

bb73:                                             ; preds = %bb72
  store i32 %_327, i32* %_3.i150, align 4, !dbg !3908
  %fresh30 = load i32, i32* %i, align 4, !dbg !3909
  store i32 %fresh30, i32* %fresh30.dbg.spill, align 4, !dbg !3909
  call void @llvm.dbg.declare(metadata i32* %fresh30.dbg.spill, metadata !3434, metadata !DIExpression()), !dbg !3910
  %_334 = load i32, i32* %i, align 4, !dbg !3911
  %268 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_334, i32 1), !dbg !3911
  %_335.0 = extractvalue { i32, i1 } %268, 0, !dbg !3911
  %_335.1 = extractvalue { i32, i1 } %268, 1, !dbg !3911
  %269 = call i1 @llvm.expect.i1(i1 %_335.1, i1 false), !dbg !3911
  br i1 %269, label %panic33, label %bb74, !dbg !3911

bb74:                                             ; preds = %bb73
  store i32 %_335.0, i32* %i, align 4, !dbg !3912
  %270 = getelementptr inbounds [3 x i32], [3 x i32]* %wide2, i64 0, i64 1, !dbg !3913
  %_336 = load i32, i32* %270, align 4, !dbg !3913
  %_340 = sext i32 %fresh30 to i64, !dbg !3914
  store i32* %buffer, i32** %self.dbg.spill.i146, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i146, metadata !3510, metadata !DIExpression()), !dbg !3915
  store i64 %_340, i64* %count.dbg.spill.i145, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i145, metadata !3513, metadata !DIExpression()), !dbg !3917
  %271 = getelementptr inbounds i32, i32* %buffer, i64 %_340, !dbg !3918
  store i32* %271, i32** %30, align 8, !dbg !3918
  %_3.i147 = load i32*, i32** %30, align 8, !dbg !3918
  br label %bb75, !dbg !3919

panic33:                                          ; preds = %bb73
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc273 to %"core::panic::location::Location"*)) #17, !dbg !3911
  unreachable, !dbg !3911

bb75:                                             ; preds = %bb74
  store i32 %_336, i32* %_3.i147, align 4, !dbg !3920
  %fresh31 = load i32, i32* %i, align 4, !dbg !3921
  store i32 %fresh31, i32* %fresh31.dbg.spill, align 4, !dbg !3921
  call void @llvm.dbg.declare(metadata i32* %fresh31.dbg.spill, metadata !3436, metadata !DIExpression()), !dbg !3922
  %_343 = load i32, i32* %i, align 4, !dbg !3923
  %272 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_343, i32 1), !dbg !3923
  %_344.0 = extractvalue { i32, i1 } %272, 0, !dbg !3923
  %_344.1 = extractvalue { i32, i1 } %272, 1, !dbg !3923
  %273 = call i1 @llvm.expect.i1(i1 %_344.1, i1 false), !dbg !3923
  br i1 %273, label %panic34, label %bb76, !dbg !3923

bb76:                                             ; preds = %bb75
  store i32 %_344.0, i32* %i, align 4, !dbg !3924
  %274 = getelementptr inbounds [3 x i32], [3 x i32]* %wide2, i64 0, i64 2, !dbg !3925
  %_345 = load i32, i32* %274, align 4, !dbg !3925
  %_349 = sext i32 %fresh31 to i64, !dbg !3926
  store i32* %buffer, i32** %self.dbg.spill.i143, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i143, metadata !3510, metadata !DIExpression()), !dbg !3927
  store i64 %_349, i64* %count.dbg.spill.i142, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i142, metadata !3513, metadata !DIExpression()), !dbg !3929
  %275 = getelementptr inbounds i32, i32* %buffer, i64 %_349, !dbg !3930
  store i32* %275, i32** %31, align 8, !dbg !3930
  %_3.i144 = load i32*, i32** %31, align 8, !dbg !3930
  br label %bb77, !dbg !3931

panic34:                                          ; preds = %bb75
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc275 to %"core::panic::location::Location"*)) #17, !dbg !3923
  unreachable, !dbg !3923

bb77:                                             ; preds = %bb76
  store i32 %_345, i32* %_3.i144, align 4, !dbg !3932
  store [1 x i32]* bitcast (<{ [4 x i8] }>* @alloc12 to [1 x i32]*), [1 x i32]** %63, align 8, !dbg !3933
  %_352 = load [1 x i32]*, [1 x i32]** %63, align 8, !dbg !3933, !nonnull !140, !align !3869, !noundef !140
  br label %bb78, !dbg !3933

bb78:                                             ; preds = %bb77
  %276 = bitcast [1 x i32]* %wide3 to i8*, !dbg !3934
  %277 = bitcast [1 x i32]* %_352 to i8*, !dbg !3934
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %276, i8* align 4 %277, i64 4, i1 false), !dbg !3934
  %fresh32 = load i32, i32* %i, align 4, !dbg !3935
  store i32 %fresh32, i32* %fresh32.dbg.spill, align 4, !dbg !3935
  call void @llvm.dbg.declare(metadata i32* %fresh32.dbg.spill, metadata !3440, metadata !DIExpression()), !dbg !3936
  %_356 = load i32, i32* %i, align 4, !dbg !3937
  %278 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_356, i32 1), !dbg !3937
  %_357.0 = extractvalue { i32, i1 } %278, 0, !dbg !3937
  %_357.1 = extractvalue { i32, i1 } %278, 1, !dbg !3937
  %279 = call i1 @llvm.expect.i1(i1 %_357.1, i1 false), !dbg !3937
  br i1 %279, label %panic35, label %bb79, !dbg !3937

bb79:                                             ; preds = %bb78
  store i32 %_357.0, i32* %i, align 4, !dbg !3938
  %280 = getelementptr inbounds [1 x i32], [1 x i32]* %wide3, i64 0, i64 0, !dbg !3939
  %_358 = load i32, i32* %280, align 4, !dbg !3939
  %_362 = sext i32 %fresh32 to i64, !dbg !3940
  store i32* %buffer, i32** %self.dbg.spill.i140, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i140, metadata !3510, metadata !DIExpression()), !dbg !3941
  store i64 %_362, i64* %count.dbg.spill.i139, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i139, metadata !3513, metadata !DIExpression()), !dbg !3943
  %281 = getelementptr inbounds i32, i32* %buffer, i64 %_362, !dbg !3944
  store i32* %281, i32** %32, align 8, !dbg !3944
  %_3.i141 = load i32*, i32** %32, align 8, !dbg !3944
  br label %bb80, !dbg !3945

panic35:                                          ; preds = %bb78
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc277 to %"core::panic::location::Location"*)) #17, !dbg !3937
  unreachable, !dbg !3937

bb80:                                             ; preds = %bb79
  store i32 %_358, i32* %_3.i141, align 4, !dbg !3946
  %fresh33 = load i32, i32* %i, align 4, !dbg !3947
  store i32 %fresh33, i32* %fresh33.dbg.spill, align 4, !dbg !3947
  call void @llvm.dbg.declare(metadata i32* %fresh33.dbg.spill, metadata !3442, metadata !DIExpression()), !dbg !3948
  %_365 = load i32, i32* %i, align 4, !dbg !3949
  %282 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_365, i32 1), !dbg !3949
  %_366.0 = extractvalue { i32, i1 } %282, 0, !dbg !3949
  %_366.1 = extractvalue { i32, i1 } %282, 1, !dbg !3949
  %283 = call i1 @llvm.expect.i1(i1 %_366.1, i1 false), !dbg !3949
  br i1 %283, label %panic36, label %bb81, !dbg !3949

bb81:                                             ; preds = %bb80
  store i32 %_366.0, i32* %i, align 4, !dbg !3950
  %_367 = load i8, i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @_ZN11array_tests6arrays11rust_simple17h51c03bc5d8c0d344E, i32 0, i32 0, i64 0), align 1, !dbg !3951
  %_372 = sext i32 %fresh33 to i64, !dbg !3952
  store i32* %buffer, i32** %self.dbg.spill.i137, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i137, metadata !3510, metadata !DIExpression()), !dbg !3953
  store i64 %_372, i64* %count.dbg.spill.i136, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i136, metadata !3513, metadata !DIExpression()), !dbg !3955
  %284 = getelementptr inbounds i32, i32* %buffer, i64 %_372, !dbg !3956
  store i32* %284, i32** %33, align 8, !dbg !3956
  %_3.i138 = load i32*, i32** %33, align 8, !dbg !3956
  br label %bb82, !dbg !3957

panic36:                                          ; preds = %bb80
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc279 to %"core::panic::location::Location"*)) #17, !dbg !3949
  unreachable, !dbg !3949

bb82:                                             ; preds = %bb81
  %285 = sext i8 %_367 to i32, !dbg !3958
  store i32 %285, i32* %_3.i138, align 4, !dbg !3958
  %fresh34 = load i32, i32* %i, align 4, !dbg !3959
  store i32 %fresh34, i32* %fresh34.dbg.spill, align 4, !dbg !3959
  call void @llvm.dbg.declare(metadata i32* %fresh34.dbg.spill, metadata !3444, metadata !DIExpression()), !dbg !3960
  %_375 = load i32, i32* %i, align 4, !dbg !3961
  %286 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_375, i32 1), !dbg !3961
  %_376.0 = extractvalue { i32, i1 } %286, 0, !dbg !3961
  %_376.1 = extractvalue { i32, i1 } %286, 1, !dbg !3961
  %287 = call i1 @llvm.expect.i1(i1 %_376.1, i1 false), !dbg !3961
  br i1 %287, label %panic37, label %bb83, !dbg !3961

bb83:                                             ; preds = %bb82
  store i32 %_376.0, i32* %i, align 4, !dbg !3962
  %_377 = load i8, i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @_ZN11array_tests6arrays11rust_simple17h51c03bc5d8c0d344E, i32 0, i32 0, i64 1), align 1, !dbg !3963
  %_382 = sext i32 %fresh34 to i64, !dbg !3964
  store i32* %buffer, i32** %self.dbg.spill.i134, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i134, metadata !3510, metadata !DIExpression()), !dbg !3965
  store i64 %_382, i64* %count.dbg.spill.i133, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i133, metadata !3513, metadata !DIExpression()), !dbg !3967
  %288 = getelementptr inbounds i32, i32* %buffer, i64 %_382, !dbg !3968
  store i32* %288, i32** %34, align 8, !dbg !3968
  %_3.i135 = load i32*, i32** %34, align 8, !dbg !3968
  br label %bb84, !dbg !3969

panic37:                                          ; preds = %bb82
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc281 to %"core::panic::location::Location"*)) #17, !dbg !3961
  unreachable, !dbg !3961

bb84:                                             ; preds = %bb83
  %289 = sext i8 %_377 to i32, !dbg !3970
  store i32 %289, i32* %_3.i135, align 4, !dbg !3970
  %fresh35 = load i32, i32* %i, align 4, !dbg !3971
  store i32 %fresh35, i32* %fresh35.dbg.spill, align 4, !dbg !3971
  call void @llvm.dbg.declare(metadata i32* %fresh35.dbg.spill, metadata !3446, metadata !DIExpression()), !dbg !3972
  %_385 = load i32, i32* %i, align 4, !dbg !3973
  %290 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_385, i32 1), !dbg !3973
  %_386.0 = extractvalue { i32, i1 } %290, 0, !dbg !3973
  %_386.1 = extractvalue { i32, i1 } %290, 1, !dbg !3973
  %291 = call i1 @llvm.expect.i1(i1 %_386.1, i1 false), !dbg !3973
  br i1 %291, label %panic38, label %bb85, !dbg !3973

bb85:                                             ; preds = %bb84
  store i32 %_386.0, i32* %i, align 4, !dbg !3974
  %_387 = load i8, i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @_ZN11array_tests6arrays11rust_simple17h51c03bc5d8c0d344E, i32 0, i32 0, i64 2), align 1, !dbg !3975
  %_392 = sext i32 %fresh35 to i64, !dbg !3976
  store i32* %buffer, i32** %self.dbg.spill.i131, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i131, metadata !3510, metadata !DIExpression()), !dbg !3977
  store i64 %_392, i64* %count.dbg.spill.i130, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i130, metadata !3513, metadata !DIExpression()), !dbg !3979
  %292 = getelementptr inbounds i32, i32* %buffer, i64 %_392, !dbg !3980
  store i32* %292, i32** %35, align 8, !dbg !3980
  %_3.i132 = load i32*, i32** %35, align 8, !dbg !3980
  br label %bb86, !dbg !3981

panic38:                                          ; preds = %bb84
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc283 to %"core::panic::location::Location"*)) #17, !dbg !3973
  unreachable, !dbg !3973

bb86:                                             ; preds = %bb85
  %293 = sext i8 %_387 to i32, !dbg !3982
  store i32 %293, i32* %_3.i132, align 4, !dbg !3982
  %fresh36 = load i32, i32* %i, align 4, !dbg !3983
  store i32 %fresh36, i32* %fresh36.dbg.spill, align 4, !dbg !3983
  call void @llvm.dbg.declare(metadata i32* %fresh36.dbg.spill, metadata !3448, metadata !DIExpression()), !dbg !3984
  %_395 = load i32, i32* %i, align 4, !dbg !3985
  %294 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_395, i32 1), !dbg !3985
  %_396.0 = extractvalue { i32, i1 } %294, 0, !dbg !3985
  %_396.1 = extractvalue { i32, i1 } %294, 1, !dbg !3985
  %295 = call i1 @llvm.expect.i1(i1 %_396.1, i1 false), !dbg !3985
  br i1 %295, label %panic39, label %bb87, !dbg !3985

bb87:                                             ; preds = %bb86
  store i32 %_396.0, i32* %i, align 4, !dbg !3986
  %_397 = load i8, i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @_ZN11array_tests6arrays11rust_simple17h51c03bc5d8c0d344E, i32 0, i32 0, i64 3), align 1, !dbg !3987
  %_402 = sext i32 %fresh36 to i64, !dbg !3988
  store i32* %buffer, i32** %self.dbg.spill.i128, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i128, metadata !3510, metadata !DIExpression()), !dbg !3989
  store i64 %_402, i64* %count.dbg.spill.i127, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i127, metadata !3513, metadata !DIExpression()), !dbg !3991
  %296 = getelementptr inbounds i32, i32* %buffer, i64 %_402, !dbg !3992
  store i32* %296, i32** %36, align 8, !dbg !3992
  %_3.i129 = load i32*, i32** %36, align 8, !dbg !3992
  br label %bb88, !dbg !3993

panic39:                                          ; preds = %bb86
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc285 to %"core::panic::location::Location"*)) #17, !dbg !3985
  unreachable, !dbg !3985

bb88:                                             ; preds = %bb87
  %297 = sext i8 %_397 to i32, !dbg !3994
  store i32 %297, i32* %_3.i129, align 4, !dbg !3994
  %fresh37 = load i32, i32* %i, align 4, !dbg !3995
  store i32 %fresh37, i32* %fresh37.dbg.spill, align 4, !dbg !3995
  call void @llvm.dbg.declare(metadata i32* %fresh37.dbg.spill, metadata !3450, metadata !DIExpression()), !dbg !3996
  %_405 = load i32, i32* %i, align 4, !dbg !3997
  %298 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_405, i32 1), !dbg !3997
  %_406.0 = extractvalue { i32, i1 } %298, 0, !dbg !3997
  %_406.1 = extractvalue { i32, i1 } %298, 1, !dbg !3997
  %299 = call i1 @llvm.expect.i1(i1 %_406.1, i1 false), !dbg !3997
  br i1 %299, label %panic40, label %bb89, !dbg !3997

bb89:                                             ; preds = %bb88
  store i32 %_406.0, i32* %i, align 4, !dbg !3998
  %_407 = load i8, i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @_ZN11array_tests6arrays11rust_simple17h51c03bc5d8c0d344E, i32 0, i32 0, i64 4), align 1, !dbg !3999
  %_412 = sext i32 %fresh37 to i64, !dbg !4000
  store i32* %buffer, i32** %self.dbg.spill.i125, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i125, metadata !3510, metadata !DIExpression()), !dbg !4001
  store i64 %_412, i64* %count.dbg.spill.i124, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i124, metadata !3513, metadata !DIExpression()), !dbg !4003
  %300 = getelementptr inbounds i32, i32* %buffer, i64 %_412, !dbg !4004
  store i32* %300, i32** %37, align 8, !dbg !4004
  %_3.i126 = load i32*, i32** %37, align 8, !dbg !4004
  br label %bb90, !dbg !4005

panic40:                                          ; preds = %bb88
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc287 to %"core::panic::location::Location"*)) #17, !dbg !3997
  unreachable, !dbg !3997

bb90:                                             ; preds = %bb89
  %301 = sext i8 %_407 to i32, !dbg !4006
  store i32 %301, i32* %_3.i126, align 4, !dbg !4006
  %fresh38 = load i32, i32* %i, align 4, !dbg !4007
  store i32 %fresh38, i32* %fresh38.dbg.spill, align 4, !dbg !4007
  call void @llvm.dbg.declare(metadata i32* %fresh38.dbg.spill, metadata !3452, metadata !DIExpression()), !dbg !4008
  %_415 = load i32, i32* %i, align 4, !dbg !4009
  %302 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_415, i32 1), !dbg !4009
  %_416.0 = extractvalue { i32, i1 } %302, 0, !dbg !4009
  %_416.1 = extractvalue { i32, i1 } %302, 1, !dbg !4009
  %303 = call i1 @llvm.expect.i1(i1 %_416.1, i1 false), !dbg !4009
  br i1 %303, label %panic41, label %bb91, !dbg !4009

bb91:                                             ; preds = %bb90
  store i32 %_416.0, i32* %i, align 4, !dbg !4010
  %_417 = load i8, i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @_ZN11array_tests6arrays11rust_simple17h51c03bc5d8c0d344E, i32 0, i32 0, i64 5), align 1, !dbg !4011
  %_422 = sext i32 %fresh38 to i64, !dbg !4012
  store i32* %buffer, i32** %self.dbg.spill.i122, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i122, metadata !3510, metadata !DIExpression()), !dbg !4013
  store i64 %_422, i64* %count.dbg.spill.i121, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i121, metadata !3513, metadata !DIExpression()), !dbg !4015
  %304 = getelementptr inbounds i32, i32* %buffer, i64 %_422, !dbg !4016
  store i32* %304, i32** %38, align 8, !dbg !4016
  %_3.i123 = load i32*, i32** %38, align 8, !dbg !4016
  br label %bb92, !dbg !4017

panic41:                                          ; preds = %bb90
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc289 to %"core::panic::location::Location"*)) #17, !dbg !4009
  unreachable, !dbg !4009

bb92:                                             ; preds = %bb91
  %305 = sext i8 %_417 to i32, !dbg !4018
  store i32 %305, i32* %_3.i123, align 4, !dbg !4018
  %fresh39 = load i32, i32* %i, align 4, !dbg !4019
  store i32 %fresh39, i32* %fresh39.dbg.spill, align 4, !dbg !4019
  call void @llvm.dbg.declare(metadata i32* %fresh39.dbg.spill, metadata !3454, metadata !DIExpression()), !dbg !4020
  %_425 = load i32, i32* %i, align 4, !dbg !4021
  %306 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_425, i32 1), !dbg !4021
  %_426.0 = extractvalue { i32, i1 } %306, 0, !dbg !4021
  %_426.1 = extractvalue { i32, i1 } %306, 1, !dbg !4021
  %307 = call i1 @llvm.expect.i1(i1 %_426.1, i1 false), !dbg !4021
  br i1 %307, label %panic42, label %bb93, !dbg !4021

bb93:                                             ; preds = %bb92
  store i32 %_426.0, i32* %i, align 4, !dbg !4022
  %_427 = load i8, i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @_ZN11array_tests6arrays11rust_simple17h51c03bc5d8c0d344E, i32 0, i32 0, i64 6), align 1, !dbg !4023
  %_432 = sext i32 %fresh39 to i64, !dbg !4024
  store i32* %buffer, i32** %self.dbg.spill.i119, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i119, metadata !3510, metadata !DIExpression()), !dbg !4025
  store i64 %_432, i64* %count.dbg.spill.i118, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i118, metadata !3513, metadata !DIExpression()), !dbg !4027
  %308 = getelementptr inbounds i32, i32* %buffer, i64 %_432, !dbg !4028
  store i32* %308, i32** %39, align 8, !dbg !4028
  %_3.i120 = load i32*, i32** %39, align 8, !dbg !4028
  br label %bb94, !dbg !4029

panic42:                                          ; preds = %bb92
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc291 to %"core::panic::location::Location"*)) #17, !dbg !4021
  unreachable, !dbg !4021

bb94:                                             ; preds = %bb93
  %309 = sext i8 %_427 to i32, !dbg !4030
  store i32 %309, i32* %_3.i120, align 4, !dbg !4030
  %fresh40 = load i32, i32* %i, align 4, !dbg !4031
  store i32 %fresh40, i32* %fresh40.dbg.spill, align 4, !dbg !4031
  call void @llvm.dbg.declare(metadata i32* %fresh40.dbg.spill, metadata !3456, metadata !DIExpression()), !dbg !4032
  %_435 = load i32, i32* %i, align 4, !dbg !4033
  %310 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_435, i32 1), !dbg !4033
  %_436.0 = extractvalue { i32, i1 } %310, 0, !dbg !4033
  %_436.1 = extractvalue { i32, i1 } %310, 1, !dbg !4033
  %311 = call i1 @llvm.expect.i1(i1 %_436.1, i1 false), !dbg !4033
  br i1 %311, label %panic43, label %bb95, !dbg !4033

bb95:                                             ; preds = %bb94
  store i32 %_436.0, i32* %i, align 4, !dbg !4034
  %_437 = load i8, i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @_ZN11array_tests6arrays11rust_simple17h51c03bc5d8c0d344E, i32 0, i32 0, i64 7), align 1, !dbg !4035
  %_442 = sext i32 %fresh40 to i64, !dbg !4036
  store i32* %buffer, i32** %self.dbg.spill.i116, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i116, metadata !3510, metadata !DIExpression()), !dbg !4037
  store i64 %_442, i64* %count.dbg.spill.i115, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i115, metadata !3513, metadata !DIExpression()), !dbg !4039
  %312 = getelementptr inbounds i32, i32* %buffer, i64 %_442, !dbg !4040
  store i32* %312, i32** %40, align 8, !dbg !4040
  %_3.i117 = load i32*, i32** %40, align 8, !dbg !4040
  br label %bb96, !dbg !4041

panic43:                                          ; preds = %bb94
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc293 to %"core::panic::location::Location"*)) #17, !dbg !4033
  unreachable, !dbg !4033

bb96:                                             ; preds = %bb95
  %313 = sext i8 %_437 to i32, !dbg !4042
  store i32 %313, i32* %_3.i117, align 4, !dbg !4042
  %fresh41 = load i32, i32* %i, align 4, !dbg !4043
  store i32 %fresh41, i32* %fresh41.dbg.spill, align 4, !dbg !4043
  call void @llvm.dbg.declare(metadata i32* %fresh41.dbg.spill, metadata !3458, metadata !DIExpression()), !dbg !4044
  %_445 = load i32, i32* %i, align 4, !dbg !4045
  %314 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_445, i32 1), !dbg !4045
  %_446.0 = extractvalue { i32, i1 } %314, 0, !dbg !4045
  %_446.1 = extractvalue { i32, i1 } %314, 1, !dbg !4045
  %315 = call i1 @llvm.expect.i1(i1 %_446.1, i1 false), !dbg !4045
  br i1 %315, label %panic44, label %bb97, !dbg !4045

bb97:                                             ; preds = %bb96
  store i32 %_446.0, i32* %i, align 4, !dbg !4046
  %_449 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN11array_tests6arrays8rust_foo17h75da38f065933bfaE, i32 0, i32 0), align 8, !dbg !4047
  store i8* %_449, i8** %self.dbg.spill.i77, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i77, metadata !3624, metadata !DIExpression()), !dbg !4048
  store i64 0, i64* %count.dbg.spill.i76, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i76, metadata !3629, metadata !DIExpression()), !dbg !4050
  store i8* %_449, i8** %53, align 8, !dbg !4051
  %_3.i78 = load i8*, i8** %53, align 8, !dbg !4051
  br label %bb98, !dbg !4047

panic44:                                          ; preds = %bb96
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc295 to %"core::panic::location::Location"*)) #17, !dbg !4045
  unreachable, !dbg !4045

bb98:                                             ; preds = %bb97
  %_447 = load i8, i8* %_3.i78, align 1, !dbg !4052
  %_454 = sext i32 %fresh41 to i64, !dbg !4053
  store i32* %buffer, i32** %self.dbg.spill.i113, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i113, metadata !3510, metadata !DIExpression()), !dbg !4054
  store i64 %_454, i64* %count.dbg.spill.i112, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i112, metadata !3513, metadata !DIExpression()), !dbg !4056
  %316 = getelementptr inbounds i32, i32* %buffer, i64 %_454, !dbg !4057
  store i32* %316, i32** %41, align 8, !dbg !4057
  %_3.i114 = load i32*, i32** %41, align 8, !dbg !4057
  br label %bb99, !dbg !4058

bb99:                                             ; preds = %bb98
  %317 = sext i8 %_447 to i32, !dbg !4059
  store i32 %317, i32* %_3.i114, align 4, !dbg !4059
  %fresh42 = load i32, i32* %i, align 4, !dbg !4060
  store i32 %fresh42, i32* %fresh42.dbg.spill, align 4, !dbg !4060
  call void @llvm.dbg.declare(metadata i32* %fresh42.dbg.spill, metadata !3460, metadata !DIExpression()), !dbg !4061
  %_457 = load i32, i32* %i, align 4, !dbg !4062
  %318 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_457, i32 1), !dbg !4062
  %_458.0 = extractvalue { i32, i1 } %318, 0, !dbg !4062
  %_458.1 = extractvalue { i32, i1 } %318, 1, !dbg !4062
  %319 = call i1 @llvm.expect.i1(i1 %_458.1, i1 false), !dbg !4062
  br i1 %319, label %panic45, label %bb100, !dbg !4062

bb100:                                            ; preds = %bb99
  store i32 %_458.0, i32* %i, align 4, !dbg !4063
  %_461 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN11array_tests6arrays8rust_foo17h75da38f065933bfaE, i32 0, i32 0), align 8, !dbg !4064
  store i8* %_461, i8** %self.dbg.spill.i74, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i74, metadata !3624, metadata !DIExpression()), !dbg !4065
  store i64 1, i64* %count.dbg.spill.i73, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i73, metadata !3629, metadata !DIExpression()), !dbg !4067
  %320 = getelementptr inbounds i8, i8* %_461, i64 1, !dbg !4068
  store i8* %320, i8** %54, align 8, !dbg !4068
  %_3.i75 = load i8*, i8** %54, align 8, !dbg !4068
  br label %bb101, !dbg !4064

panic45:                                          ; preds = %bb99
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc297 to %"core::panic::location::Location"*)) #17, !dbg !4062
  unreachable, !dbg !4062

bb101:                                            ; preds = %bb100
  %_459 = load i8, i8* %_3.i75, align 1, !dbg !4069
  %_466 = sext i32 %fresh42 to i64, !dbg !4070
  store i32* %buffer, i32** %self.dbg.spill.i110, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i110, metadata !3510, metadata !DIExpression()), !dbg !4071
  store i64 %_466, i64* %count.dbg.spill.i109, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i109, metadata !3513, metadata !DIExpression()), !dbg !4073
  %321 = getelementptr inbounds i32, i32* %buffer, i64 %_466, !dbg !4074
  store i32* %321, i32** %42, align 8, !dbg !4074
  %_3.i111 = load i32*, i32** %42, align 8, !dbg !4074
  br label %bb102, !dbg !4075

bb102:                                            ; preds = %bb101
  %322 = sext i8 %_459 to i32, !dbg !4076
  store i32 %322, i32* %_3.i111, align 4, !dbg !4076
  %fresh43 = load i32, i32* %i, align 4, !dbg !4077
  store i32 %fresh43, i32* %fresh43.dbg.spill, align 4, !dbg !4077
  call void @llvm.dbg.declare(metadata i32* %fresh43.dbg.spill, metadata !3462, metadata !DIExpression()), !dbg !4078
  %_469 = load i32, i32* %i, align 4, !dbg !4079
  %323 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_469, i32 1), !dbg !4079
  %_470.0 = extractvalue { i32, i1 } %323, 0, !dbg !4079
  %_470.1 = extractvalue { i32, i1 } %323, 1, !dbg !4079
  %324 = call i1 @llvm.expect.i1(i1 %_470.1, i1 false), !dbg !4079
  br i1 %324, label %panic46, label %bb103, !dbg !4079

bb103:                                            ; preds = %bb102
  store i32 %_470.0, i32* %i, align 4, !dbg !4080
  %_473 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN11array_tests6arrays8rust_foo17h75da38f065933bfaE, i32 0, i32 0), align 8, !dbg !4081
  store i8* %_473, i8** %self.dbg.spill.i71, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i71, metadata !3624, metadata !DIExpression()), !dbg !4082
  store i64 2, i64* %count.dbg.spill.i70, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i70, metadata !3629, metadata !DIExpression()), !dbg !4084
  %325 = getelementptr inbounds i8, i8* %_473, i64 2, !dbg !4085
  store i8* %325, i8** %55, align 8, !dbg !4085
  %_3.i72 = load i8*, i8** %55, align 8, !dbg !4085
  br label %bb104, !dbg !4081

panic46:                                          ; preds = %bb102
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc299 to %"core::panic::location::Location"*)) #17, !dbg !4079
  unreachable, !dbg !4079

bb104:                                            ; preds = %bb103
  %_471 = load i8, i8* %_3.i72, align 1, !dbg !4086
  %_478 = sext i32 %fresh43 to i64, !dbg !4087
  store i32* %buffer, i32** %self.dbg.spill.i107, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i107, metadata !3510, metadata !DIExpression()), !dbg !4088
  store i64 %_478, i64* %count.dbg.spill.i106, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i106, metadata !3513, metadata !DIExpression()), !dbg !4090
  %326 = getelementptr inbounds i32, i32* %buffer, i64 %_478, !dbg !4091
  store i32* %326, i32** %43, align 8, !dbg !4091
  %_3.i108 = load i32*, i32** %43, align 8, !dbg !4091
  br label %bb105, !dbg !4092

bb105:                                            ; preds = %bb104
  %327 = sext i8 %_471 to i32, !dbg !4093
  store i32 %327, i32* %_3.i108, align 4, !dbg !4093
  %fresh44 = load i32, i32* %i, align 4, !dbg !4094
  store i32 %fresh44, i32* %fresh44.dbg.spill, align 4, !dbg !4094
  call void @llvm.dbg.declare(metadata i32* %fresh44.dbg.spill, metadata !3464, metadata !DIExpression()), !dbg !4095
  %_481 = load i32, i32* %i, align 4, !dbg !4096
  %328 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_481, i32 1), !dbg !4096
  %_482.0 = extractvalue { i32, i1 } %328, 0, !dbg !4096
  %_482.1 = extractvalue { i32, i1 } %328, 1, !dbg !4096
  %329 = call i1 @llvm.expect.i1(i1 %_482.1, i1 false), !dbg !4096
  br i1 %329, label %panic47, label %bb106, !dbg !4096

bb106:                                            ; preds = %bb105
  store i32 %_482.0, i32* %i, align 4, !dbg !4097
  %_485 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN11array_tests6arrays8rust_foo17h75da38f065933bfaE, i32 0, i32 0), align 8, !dbg !4098
  store i8* %_485, i8** %self.dbg.spill.i68, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i68, metadata !3624, metadata !DIExpression()), !dbg !4099
  store i64 3, i64* %count.dbg.spill.i67, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i67, metadata !3629, metadata !DIExpression()), !dbg !4101
  %330 = getelementptr inbounds i8, i8* %_485, i64 3, !dbg !4102
  store i8* %330, i8** %56, align 8, !dbg !4102
  %_3.i69 = load i8*, i8** %56, align 8, !dbg !4102
  br label %bb107, !dbg !4098

panic47:                                          ; preds = %bb105
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc301 to %"core::panic::location::Location"*)) #17, !dbg !4096
  unreachable, !dbg !4096

bb107:                                            ; preds = %bb106
  %_483 = load i8, i8* %_3.i69, align 1, !dbg !4103
  %_490 = sext i32 %fresh44 to i64, !dbg !4104
  store i32* %buffer, i32** %self.dbg.spill.i104, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i104, metadata !3510, metadata !DIExpression()), !dbg !4105
  store i64 %_490, i64* %count.dbg.spill.i103, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i103, metadata !3513, metadata !DIExpression()), !dbg !4107
  %331 = getelementptr inbounds i32, i32* %buffer, i64 %_490, !dbg !4108
  store i32* %331, i32** %44, align 8, !dbg !4108
  %_3.i105 = load i32*, i32** %44, align 8, !dbg !4108
  br label %bb108, !dbg !4109

bb108:                                            ; preds = %bb107
  %332 = sext i8 %_483 to i32, !dbg !4110
  store i32 %332, i32* %_3.i105, align 4, !dbg !4110
  %fresh45 = load i32, i32* %i, align 4, !dbg !4111
  store i32 %fresh45, i32* %fresh45.dbg.spill, align 4, !dbg !4111
  call void @llvm.dbg.declare(metadata i32* %fresh45.dbg.spill, metadata !3466, metadata !DIExpression()), !dbg !4112
  %_493 = load i32, i32* %i, align 4, !dbg !4113
  %333 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_493, i32 1), !dbg !4113
  %_494.0 = extractvalue { i32, i1 } %333, 0, !dbg !4113
  %_494.1 = extractvalue { i32, i1 } %333, 1, !dbg !4113
  %334 = call i1 @llvm.expect.i1(i1 %_494.1, i1 false), !dbg !4113
  br i1 %334, label %panic48, label %bb109, !dbg !4113

bb109:                                            ; preds = %bb108
  store i32 %_494.0, i32* %i, align 4, !dbg !4114
  %_497 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN11array_tests6arrays8rust_foo17h75da38f065933bfaE, i32 0, i32 0), align 8, !dbg !4115
  store i8* %_497, i8** %self.dbg.spill.i65, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i65, metadata !3624, metadata !DIExpression()), !dbg !4116
  store i64 4, i64* %count.dbg.spill.i64, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i64, metadata !3629, metadata !DIExpression()), !dbg !4118
  %335 = getelementptr inbounds i8, i8* %_497, i64 4, !dbg !4119
  store i8* %335, i8** %57, align 8, !dbg !4119
  %_3.i66 = load i8*, i8** %57, align 8, !dbg !4119
  br label %bb110, !dbg !4115

panic48:                                          ; preds = %bb108
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc303 to %"core::panic::location::Location"*)) #17, !dbg !4113
  unreachable, !dbg !4113

bb110:                                            ; preds = %bb109
  %_495 = load i8, i8* %_3.i66, align 1, !dbg !4120
  %_502 = sext i32 %fresh45 to i64, !dbg !4121
  store i32* %buffer, i32** %self.dbg.spill.i101, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i101, metadata !3510, metadata !DIExpression()), !dbg !4122
  store i64 %_502, i64* %count.dbg.spill.i100, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i100, metadata !3513, metadata !DIExpression()), !dbg !4124
  %336 = getelementptr inbounds i32, i32* %buffer, i64 %_502, !dbg !4125
  store i32* %336, i32** %45, align 8, !dbg !4125
  %_3.i102 = load i32*, i32** %45, align 8, !dbg !4125
  br label %bb111, !dbg !4126

bb111:                                            ; preds = %bb110
  %337 = sext i8 %_495 to i32, !dbg !4127
  store i32 %337, i32* %_3.i102, align 4, !dbg !4127
  %fresh46 = load i32, i32* %i, align 4, !dbg !4128
  store i32 %fresh46, i32* %fresh46.dbg.spill, align 4, !dbg !4128
  call void @llvm.dbg.declare(metadata i32* %fresh46.dbg.spill, metadata !3468, metadata !DIExpression()), !dbg !4129
  %_505 = load i32, i32* %i, align 4, !dbg !4130
  %338 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_505, i32 1), !dbg !4130
  %_506.0 = extractvalue { i32, i1 } %338, 0, !dbg !4130
  %_506.1 = extractvalue { i32, i1 } %338, 1, !dbg !4130
  %339 = call i1 @llvm.expect.i1(i1 %_506.1, i1 false), !dbg !4130
  br i1 %339, label %panic49, label %bb112, !dbg !4130

bb112:                                            ; preds = %bb111
  store i32 %_506.0, i32* %i, align 4, !dbg !4131
  %_509 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN11array_tests6arrays8rust_foo17h75da38f065933bfaE, i32 0, i32 0), align 8, !dbg !4132
  store i8* %_509, i8** %self.dbg.spill.i62, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i62, metadata !3624, metadata !DIExpression()), !dbg !4133
  store i64 5, i64* %count.dbg.spill.i61, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i61, metadata !3629, metadata !DIExpression()), !dbg !4135
  %340 = getelementptr inbounds i8, i8* %_509, i64 5, !dbg !4136
  store i8* %340, i8** %58, align 8, !dbg !4136
  %_3.i63 = load i8*, i8** %58, align 8, !dbg !4136
  br label %bb113, !dbg !4132

panic49:                                          ; preds = %bb111
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc305 to %"core::panic::location::Location"*)) #17, !dbg !4130
  unreachable, !dbg !4130

bb113:                                            ; preds = %bb112
  %_507 = load i8, i8* %_3.i63, align 1, !dbg !4137
  %_514 = sext i32 %fresh46 to i64, !dbg !4138
  store i32* %buffer, i32** %self.dbg.spill.i98, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i98, metadata !3510, metadata !DIExpression()), !dbg !4139
  store i64 %_514, i64* %count.dbg.spill.i97, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i97, metadata !3513, metadata !DIExpression()), !dbg !4141
  %341 = getelementptr inbounds i32, i32* %buffer, i64 %_514, !dbg !4142
  store i32* %341, i32** %46, align 8, !dbg !4142
  %_3.i99 = load i32*, i32** %46, align 8, !dbg !4142
  br label %bb114, !dbg !4143

bb114:                                            ; preds = %bb113
  %342 = sext i8 %_507 to i32, !dbg !4144
  store i32 %342, i32* %_3.i99, align 4, !dbg !4144
  %fresh47 = load i32, i32* %i, align 4, !dbg !4145
  store i32 %fresh47, i32* %fresh47.dbg.spill, align 4, !dbg !4145
  call void @llvm.dbg.declare(metadata i32* %fresh47.dbg.spill, metadata !3470, metadata !DIExpression()), !dbg !4146
  %_517 = load i32, i32* %i, align 4, !dbg !4147
  %343 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_517, i32 1), !dbg !4147
  %_518.0 = extractvalue { i32, i1 } %343, 0, !dbg !4147
  %_518.1 = extractvalue { i32, i1 } %343, 1, !dbg !4147
  %344 = call i1 @llvm.expect.i1(i1 %_518.1, i1 false), !dbg !4147
  br i1 %344, label %panic50, label %bb115, !dbg !4147

bb115:                                            ; preds = %bb114
  store i32 %_518.0, i32* %i, align 4, !dbg !4148
  %_521 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN11array_tests6arrays8rust_foo17h75da38f065933bfaE, i32 0, i32 0), align 8, !dbg !4149
  store i8* %_521, i8** %self.dbg.spill.i59, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i59, metadata !3624, metadata !DIExpression()), !dbg !4150
  store i64 6, i64* %count.dbg.spill.i58, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i58, metadata !3629, metadata !DIExpression()), !dbg !4152
  %345 = getelementptr inbounds i8, i8* %_521, i64 6, !dbg !4153
  store i8* %345, i8** %59, align 8, !dbg !4153
  %_3.i60 = load i8*, i8** %59, align 8, !dbg !4153
  br label %bb116, !dbg !4149

panic50:                                          ; preds = %bb114
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc307 to %"core::panic::location::Location"*)) #17, !dbg !4147
  unreachable, !dbg !4147

bb116:                                            ; preds = %bb115
  %_519 = load i8, i8* %_3.i60, align 1, !dbg !4154
  %_526 = sext i32 %fresh47 to i64, !dbg !4155
  store i32* %buffer, i32** %self.dbg.spill.i95, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i95, metadata !3510, metadata !DIExpression()), !dbg !4156
  store i64 %_526, i64* %count.dbg.spill.i94, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i94, metadata !3513, metadata !DIExpression()), !dbg !4158
  %346 = getelementptr inbounds i32, i32* %buffer, i64 %_526, !dbg !4159
  store i32* %346, i32** %47, align 8, !dbg !4159
  %_3.i96 = load i32*, i32** %47, align 8, !dbg !4159
  br label %bb117, !dbg !4160

bb117:                                            ; preds = %bb116
  %347 = sext i8 %_519 to i32, !dbg !4161
  store i32 %347, i32* %_3.i96, align 4, !dbg !4161
  %fresh48 = load i32, i32* %i, align 4, !dbg !4162
  store i32 %fresh48, i32* %fresh48.dbg.spill, align 4, !dbg !4162
  call void @llvm.dbg.declare(metadata i32* %fresh48.dbg.spill, metadata !3472, metadata !DIExpression()), !dbg !4163
  %_529 = load i32, i32* %i, align 4, !dbg !4164
  %348 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_529, i32 1), !dbg !4164
  %_530.0 = extractvalue { i32, i1 } %348, 0, !dbg !4164
  %_530.1 = extractvalue { i32, i1 } %348, 1, !dbg !4164
  %349 = call i1 @llvm.expect.i1(i1 %_530.1, i1 false), !dbg !4164
  br i1 %349, label %panic51, label %bb118, !dbg !4164

bb118:                                            ; preds = %bb117
  store i32 %_530.0, i32* %i, align 4, !dbg !4165
  %_533 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN11array_tests6arrays8rust_foo17h75da38f065933bfaE, i32 0, i32 0), align 8, !dbg !4166
  store i8* %_533, i8** %self.dbg.spill.i56, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i56, metadata !3624, metadata !DIExpression()), !dbg !4167
  store i64 7, i64* %count.dbg.spill.i55, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i55, metadata !3629, metadata !DIExpression()), !dbg !4169
  %350 = getelementptr inbounds i8, i8* %_533, i64 7, !dbg !4170
  store i8* %350, i8** %60, align 8, !dbg !4170
  %_3.i57 = load i8*, i8** %60, align 8, !dbg !4170
  br label %bb119, !dbg !4166

panic51:                                          ; preds = %bb117
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc309 to %"core::panic::location::Location"*)) #17, !dbg !4164
  unreachable, !dbg !4164

bb119:                                            ; preds = %bb118
  %_531 = load i8, i8* %_3.i57, align 1, !dbg !4171
  %_538 = sext i32 %fresh48 to i64, !dbg !4172
  store i32* %buffer, i32** %self.dbg.spill.i92, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i92, metadata !3510, metadata !DIExpression()), !dbg !4173
  store i64 %_538, i64* %count.dbg.spill.i91, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i91, metadata !3513, metadata !DIExpression()), !dbg !4175
  %351 = getelementptr inbounds i32, i32* %buffer, i64 %_538, !dbg !4176
  store i32* %351, i32** %48, align 8, !dbg !4176
  %_3.i93 = load i32*, i32** %48, align 8, !dbg !4176
  br label %bb120, !dbg !4177

bb120:                                            ; preds = %bb119
  %352 = sext i8 %_531 to i32, !dbg !4178
  store i32 %352, i32* %_3.i93, align 4, !dbg !4178
; call core::slice::<impl [T]>::as_mut_ptr
  %_543 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hbc3c92b75ce6dbfaE"([0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @_ZN11array_tests6arrays11rust_simple17h51c03bc5d8c0d344E to [0 x i8]*), i64 9), !dbg !4179
  br label %bb121, !dbg !4179

bb121:                                            ; preds = %bb120
  br label %bb122, !dbg !4180

bb122:                                            ; preds = %bb121
  store i8* %_543, i8** %self.dbg.spill.i53, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i53, metadata !3624, metadata !DIExpression()), !dbg !4181
  store i64 9, i64* %count.dbg.spill.i52, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i52, metadata !3629, metadata !DIExpression()), !dbg !4183
  %353 = getelementptr inbounds i8, i8* %_543, i64 9, !dbg !4184
  store i8* %353, i8** %61, align 8, !dbg !4184
  %_3.i54 = load i8*, i8** %61, align 8, !dbg !4184
  br label %bb123, !dbg !4179

bb123:                                            ; preds = %bb122
  store i8* %_3.i54, i8** %past_end, align 8, !dbg !4185
  %_553 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN11array_tests6arrays8rust_foo17h75da38f065933bfaE, i32 0, i32 0), align 8, !dbg !4186
  store i8* %_553, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !3624, metadata !DIExpression()), !dbg !4187
  store i64 8, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !3629, metadata !DIExpression()), !dbg !4189
  %354 = getelementptr inbounds i8, i8* %_553, i64 8, !dbg !4190
  store i8* %354, i8** %62, align 8, !dbg !4190
  %_3.i = load i8*, i8** %62, align 8, !dbg !4190
  br label %bb124, !dbg !4186

bb124:                                            ; preds = %bb123
  store i8* %_3.i, i8** %past_end, align 8, !dbg !4191
  ret void, !dbg !4192
}

; Function Attrs: nonlazybind uwtable
define void @rust_use_arrays(i32 %n, i32 %m, i32* %a) unnamed_addr #1 !dbg !4193 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i25 = alloca i64, align 8
  %self.dbg.spill.i26 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i22 = alloca i64, align 8
  %self.dbg.spill.i23 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i19 = alloca i64, align 8
  %self.dbg.spill.i20 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i16 = alloca i64, align 8
  %self.dbg.spill.i17 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i32*, align 8
  %past_end.dbg.spill = alloca i32*, align 8
  %fresh0.dbg.spill = alloca i32, align 4
  %vla_0.dbg.spill = alloca i64, align 8
  %vla.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i32*, align 8
  %m.dbg.spill = alloca i32, align 4
  %n.dbg.spill = alloca i32, align 4
  %k = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %counter = alloca i32, align 4
  store i32 %n, i32* %n.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !4199, metadata !DIExpression()), !dbg !4218
  store i32 %m, i32* %m.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %m.dbg.spill, metadata !4200, metadata !DIExpression()), !dbg !4219
  store i32* %a, i32** %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %a.dbg.spill, metadata !4201, metadata !DIExpression()), !dbg !4220
  call void @llvm.dbg.declare(metadata i32* %counter, metadata !4206, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4208, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4210, metadata !DIExpression()), !dbg !4223
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4212, metadata !DIExpression()), !dbg !4224
  %6 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %n, i32 %n), !dbg !4225
  %_8.0 = extractvalue { i32, i1 } %6, 0, !dbg !4225
  %_8.1 = extractvalue { i32, i1 } %6, 1, !dbg !4225
  %7 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4225
  br i1 %7, label %panic, label %bb1, !dbg !4225

bb1:                                              ; preds = %start
  %vla = sext i32 %_8.0 to i64, !dbg !4225
  store i64 %vla, i64* %vla.dbg.spill, align 8, !dbg !4225
  call void @llvm.dbg.declare(metadata i64* %vla.dbg.spill, metadata !4202, metadata !DIExpression()), !dbg !4226
  %vla_0 = sext i32 %m to i64, !dbg !4227
  store i64 %vla_0, i64* %vla_0.dbg.spill, align 8, !dbg !4227
  call void @llvm.dbg.declare(metadata i64* %vla_0.dbg.spill, metadata !4204, metadata !DIExpression()), !dbg !4228
  store i32 1, i32* %counter, align 4, !dbg !4229
  store i32 0, i32* %i, align 4, !dbg !4230
  br label %bb2, !dbg !4231

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc311 to %"core::panic::location::Location"*)) #17, !dbg !4225
  unreachable, !dbg !4225

bb2:                                              ; preds = %bb20, %bb1
  %_14 = load i32, i32* %i, align 4, !dbg !4232
  %_13 = icmp slt i32 %_14, 2, !dbg !4232
  br i1 %_13, label %bb3, label %bb21, !dbg !4232

bb21:                                             ; preds = %bb2
  %8 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %vla, i64 %vla_0), !dbg !4233
  %_67.0 = extractvalue { i64, i1 } %8, 0, !dbg !4233
  %_67.1 = extractvalue { i64, i1 } %8, 1, !dbg !4233
  %9 = call i1 @llvm.expect.i1(i1 %_67.1, i1 false), !dbg !4233
  br i1 %9, label %panic9, label %bb22, !dbg !4233

bb3:                                              ; preds = %bb2
  store i32 0, i32* %j, align 4, !dbg !4234
  br label %bb4, !dbg !4235

bb4:                                              ; preds = %bb18, %bb3
  %_18 = load i32, i32* %j, align 4, !dbg !4236
  %10 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %n, i32 %n), !dbg !4237
  %_22.0 = extractvalue { i32, i1 } %10, 0, !dbg !4237
  %_22.1 = extractvalue { i32, i1 } %10, 1, !dbg !4237
  %11 = call i1 @llvm.expect.i1(i1 %_22.1, i1 false), !dbg !4237
  br i1 %11, label %panic1, label %bb5, !dbg !4237

bb5:                                              ; preds = %bb4
  %_17 = icmp slt i32 %_18, %_22.0, !dbg !4236
  br i1 %_17, label %bb6, label %bb19, !dbg !4236

panic1:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc313 to %"core::panic::location::Location"*)) #17, !dbg !4237
  unreachable, !dbg !4237

bb19:                                             ; preds = %bb5
  %12 = load i32, i32* %i, align 4, !dbg !4238
  %13 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %12, i32 1), !dbg !4238
  %_54.0 = extractvalue { i32, i1 } %13, 0, !dbg !4238
  %_54.1 = extractvalue { i32, i1 } %13, 1, !dbg !4238
  %14 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false), !dbg !4238
  br i1 %14, label %panic8, label %bb20, !dbg !4238

bb6:                                              ; preds = %bb5
  store i32 0, i32* %k, align 4, !dbg !4239
  br label %bb7, !dbg !4240

bb7:                                              ; preds = %bb16, %bb6
  %_25 = load i32, i32* %k, align 4, !dbg !4241
  %_24 = icmp slt i32 %_25, %m, !dbg !4241
  br i1 %_24, label %bb8, label %bb17, !dbg !4241

bb17:                                             ; preds = %bb7
  %15 = load i32, i32* %j, align 4, !dbg !4242
  %16 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %15, i32 1), !dbg !4242
  %_53.0 = extractvalue { i32, i1 } %16, 0, !dbg !4242
  %_53.1 = extractvalue { i32, i1 } %16, 1, !dbg !4242
  %17 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !4242
  br i1 %17, label %panic7, label %bb18, !dbg !4242

bb8:                                              ; preds = %bb7
  %fresh0 = load i32, i32* %counter, align 4, !dbg !4243
  store i32 %fresh0, i32* %fresh0.dbg.spill, align 4, !dbg !4243
  call void @llvm.dbg.declare(metadata i32* %fresh0.dbg.spill, metadata !4214, metadata !DIExpression()), !dbg !4244
  %_28 = load i32, i32* %counter, align 4, !dbg !4245
  %18 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_28, i32 1), !dbg !4245
  %_29.0 = extractvalue { i32, i1 } %18, 0, !dbg !4245
  %_29.1 = extractvalue { i32, i1 } %18, 1, !dbg !4245
  %19 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false), !dbg !4245
  br i1 %19, label %panic2, label %bb9, !dbg !4245

bb9:                                              ; preds = %bb8
  store i32 %_29.0, i32* %counter, align 4, !dbg !4246
  %_37 = load i32, i32* %i, align 4, !dbg !4247
  %_36 = sext i32 %_37 to i64, !dbg !4247
  %20 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %vla, i64 %vla_0), !dbg !4248
  %_42.0 = extractvalue { i64, i1 } %20, 0, !dbg !4248
  %_42.1 = extractvalue { i64, i1 } %20, 1, !dbg !4248
  %21 = call i1 @llvm.expect.i1(i1 %_42.1, i1 false), !dbg !4248
  br i1 %21, label %panic3, label %bb10, !dbg !4248

panic2:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc315 to %"core::panic::location::Location"*)) #17, !dbg !4245
  unreachable, !dbg !4245

bb10:                                             ; preds = %bb9
  %22 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %_36, i64 %_42.0), !dbg !4247
  %_43.0 = extractvalue { i64, i1 } %22, 0, !dbg !4247
  %_43.1 = extractvalue { i64, i1 } %22, 1, !dbg !4247
  %23 = call i1 @llvm.expect.i1(i1 %_43.1, i1 false), !dbg !4247
  br i1 %23, label %panic4, label %bb11, !dbg !4247

panic3:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc317 to %"core::panic::location::Location"*)) #17, !dbg !4248
  unreachable, !dbg !4248

bb11:                                             ; preds = %bb10
  store i32* %a, i32** %self.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i26, metadata !3510, metadata !DIExpression()), !dbg !4249
  store i64 %_43.0, i64* %count.dbg.spill.i25, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i25, metadata !3513, metadata !DIExpression()), !dbg !4251
  %24 = getelementptr inbounds i32, i32* %a, i64 %_43.0, !dbg !4252
  store i32* %24, i32** %0, align 8, !dbg !4252
  %_3.i27 = load i32*, i32** %0, align 8, !dbg !4252
  br label %bb12, !dbg !4253

panic4:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc319 to %"core::panic::location::Location"*)) #17, !dbg !4247
  unreachable, !dbg !4247

bb12:                                             ; preds = %bb11
  %_46 = load i32, i32* %j, align 4, !dbg !4254
  %_45 = sext i32 %_46 to i64, !dbg !4254
  %25 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %_45, i64 %vla_0), !dbg !4254
  %_49.0 = extractvalue { i64, i1 } %25, 0, !dbg !4254
  %_49.1 = extractvalue { i64, i1 } %25, 1, !dbg !4254
  %26 = call i1 @llvm.expect.i1(i1 %_49.1, i1 false), !dbg !4254
  br i1 %26, label %panic5, label %bb13, !dbg !4254

bb13:                                             ; preds = %bb12
  store i32* %_3.i27, i32** %self.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i23, metadata !3510, metadata !DIExpression()), !dbg !4255
  store i64 %_49.0, i64* %count.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i22, metadata !3513, metadata !DIExpression()), !dbg !4257
  %27 = getelementptr inbounds i32, i32* %_3.i27, i64 %_49.0, !dbg !4258
  store i32* %27, i32** %1, align 8, !dbg !4258
  %_3.i24 = load i32*, i32** %1, align 8, !dbg !4258
  br label %bb14, !dbg !4253

panic5:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc321 to %"core::panic::location::Location"*)) #17, !dbg !4254
  unreachable, !dbg !4254

bb14:                                             ; preds = %bb13
  %_51 = load i32, i32* %k, align 4, !dbg !4259
  %_50 = sext i32 %_51 to i64, !dbg !4259
  store i32* %_3.i24, i32** %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i20, metadata !3510, metadata !DIExpression()), !dbg !4260
  store i64 %_50, i64* %count.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i19, metadata !3513, metadata !DIExpression()), !dbg !4262
  %28 = getelementptr inbounds i32, i32* %_3.i24, i64 %_50, !dbg !4263
  store i32* %28, i32** %2, align 8, !dbg !4263
  %_3.i21 = load i32*, i32** %2, align 8, !dbg !4263
  br label %bb15, !dbg !4253

bb15:                                             ; preds = %bb14
  store i32 %fresh0, i32* %_3.i21, align 4, !dbg !4264
  %29 = load i32, i32* %k, align 4, !dbg !4265
  %30 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %29, i32 1), !dbg !4265
  %_52.0 = extractvalue { i32, i1 } %30, 0, !dbg !4265
  %_52.1 = extractvalue { i32, i1 } %30, 1, !dbg !4265
  %31 = call i1 @llvm.expect.i1(i1 %_52.1, i1 false), !dbg !4265
  br i1 %31, label %panic6, label %bb16, !dbg !4265

bb16:                                             ; preds = %bb15
  store i32 %_52.0, i32* %k, align 4, !dbg !4265
  br label %bb7, !dbg !4240

panic6:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc323 to %"core::panic::location::Location"*)) #17, !dbg !4265
  unreachable, !dbg !4265

bb18:                                             ; preds = %bb17
  store i32 %_53.0, i32* %j, align 4, !dbg !4242
  br label %bb4, !dbg !4235

panic7:                                           ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc325 to %"core::panic::location::Location"*)) #17, !dbg !4242
  unreachable, !dbg !4242

bb20:                                             ; preds = %bb19
  store i32 %_54.0, i32* %i, align 4, !dbg !4238
  br label %bb2, !dbg !4231

panic8:                                           ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc327 to %"core::panic::location::Location"*)) #17, !dbg !4238
  unreachable, !dbg !4238

bb22:                                             ; preds = %bb21
  %32 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 2, i64 %_67.0), !dbg !4266
  %_68.0 = extractvalue { i64, i1 } %32, 0, !dbg !4266
  %_68.1 = extractvalue { i64, i1 } %32, 1, !dbg !4266
  %33 = call i1 @llvm.expect.i1(i1 %_68.1, i1 false), !dbg !4266
  br i1 %33, label %panic10, label %bb23, !dbg !4266

panic9:                                           ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc329 to %"core::panic::location::Location"*)) #17, !dbg !4233
  unreachable, !dbg !4233

bb23:                                             ; preds = %bb22
  store i32* %a, i32** %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i17, metadata !3510, metadata !DIExpression()), !dbg !4267
  store i64 %_68.0, i64* %count.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i16, metadata !3513, metadata !DIExpression()), !dbg !4269
  %34 = getelementptr inbounds i32, i32* %a, i64 %_68.0, !dbg !4270
  store i32* %34, i32** %3, align 8, !dbg !4270
  %_3.i18 = load i32*, i32** %3, align 8, !dbg !4270
  br label %bb24, !dbg !4271

panic10:                                          ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc331 to %"core::panic::location::Location"*)) #17, !dbg !4266
  unreachable, !dbg !4266

bb24:                                             ; preds = %bb23
  %35 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %n, i32 %n), !dbg !4272
  %_74.0 = extractvalue { i32, i1 } %35, 0, !dbg !4272
  %_74.1 = extractvalue { i32, i1 } %35, 1, !dbg !4272
  %36 = call i1 @llvm.expect.i1(i1 %_74.1, i1 false), !dbg !4272
  br i1 %36, label %panic11, label %bb25, !dbg !4272

bb25:                                             ; preds = %bb24
  %_70 = sext i32 %_74.0 to i64, !dbg !4272
  %37 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %_70, i64 %vla_0), !dbg !4272
  %_77.0 = extractvalue { i64, i1 } %37, 0, !dbg !4272
  %_77.1 = extractvalue { i64, i1 } %37, 1, !dbg !4272
  %38 = call i1 @llvm.expect.i1(i1 %_77.1, i1 false), !dbg !4272
  br i1 %38, label %panic12, label %bb26, !dbg !4272

panic11:                                          ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc333 to %"core::panic::location::Location"*)) #17, !dbg !4272
  unreachable, !dbg !4272

bb26:                                             ; preds = %bb25
  store i32* %_3.i18, i32** %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i14, metadata !3510, metadata !DIExpression()), !dbg !4273
  store i64 %_77.0, i64* %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i13, metadata !3513, metadata !DIExpression()), !dbg !4275
  %39 = getelementptr inbounds i32, i32* %_3.i18, i64 %_77.0, !dbg !4276
  store i32* %39, i32** %4, align 8, !dbg !4276
  %_3.i15 = load i32*, i32** %4, align 8, !dbg !4276
  br label %bb27, !dbg !4271

panic12:                                          ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc333 to %"core::panic::location::Location"*)) #17, !dbg !4272
  unreachable, !dbg !4272

bb27:                                             ; preds = %bb26
  %_78 = sext i32 %m to i64, !dbg !4277
  store i32* %_3.i15, i32** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i, metadata !3510, metadata !DIExpression()), !dbg !4278
  store i64 %_78, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !3513, metadata !DIExpression()), !dbg !4280
  %40 = getelementptr inbounds i32, i32* %_3.i15, i64 %_78, !dbg !4281
  store i32* %40, i32** %5, align 8, !dbg !4281
  %_3.i = load i32*, i32** %5, align 8, !dbg !4281
  br label %bb28, !dbg !4271

bb28:                                             ; preds = %bb27
  store i32* %_3.i, i32** %past_end.dbg.spill, align 8, !dbg !4282
  call void @llvm.dbg.declare(metadata i32** %past_end.dbg.spill, metadata !4216, metadata !DIExpression()), !dbg !4283
  ret void, !dbg !4284
}

; Function Attrs: nonlazybind uwtable
define void @rust_use_arrays2(i32 %n, i32 %m, i32* %a) unnamed_addr #1 !dbg !4285 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i12 = alloca i64, align 8
  %self.dbg.spill.i13 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i9 = alloca i64, align 8
  %self.dbg.spill.i10 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i32*, align 8
  %fresh1.dbg.spill = alloca i32, align 4
  %vla_0.dbg.spill = alloca i64, align 8
  %vla.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i32*, align 8
  %m.dbg.spill = alloca i32, align 4
  %n.dbg.spill = alloca i32, align 4
  %k = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %counter = alloca i32, align 4
  store i32 %n, i32* %n.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !4287, metadata !DIExpression()), !dbg !4304
  store i32 %m, i32* %m.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %m.dbg.spill, metadata !4288, metadata !DIExpression()), !dbg !4305
  store i32* %a, i32** %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %a.dbg.spill, metadata !4289, metadata !DIExpression()), !dbg !4306
  call void @llvm.dbg.declare(metadata i32* %counter, metadata !4294, metadata !DIExpression()), !dbg !4307
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4296, metadata !DIExpression()), !dbg !4308
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4298, metadata !DIExpression()), !dbg !4309
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4300, metadata !DIExpression()), !dbg !4310
  %3 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %n, i32 %n), !dbg !4311
  %_8.0 = extractvalue { i32, i1 } %3, 0, !dbg !4311
  %_8.1 = extractvalue { i32, i1 } %3, 1, !dbg !4311
  %4 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4311
  br i1 %4, label %panic, label %bb1, !dbg !4311

bb1:                                              ; preds = %start
  %vla = sext i32 %_8.0 to i64, !dbg !4311
  store i64 %vla, i64* %vla.dbg.spill, align 8, !dbg !4311
  call void @llvm.dbg.declare(metadata i64* %vla.dbg.spill, metadata !4290, metadata !DIExpression()), !dbg !4312
  %vla_0 = sext i32 %m to i64, !dbg !4313
  store i64 %vla_0, i64* %vla_0.dbg.spill, align 8, !dbg !4313
  call void @llvm.dbg.declare(metadata i64* %vla_0.dbg.spill, metadata !4292, metadata !DIExpression()), !dbg !4314
  store i32 1, i32* %counter, align 4, !dbg !4315
  store i32 0, i32* %i, align 4, !dbg !4316
  br label %bb2, !dbg !4317

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc335 to %"core::panic::location::Location"*)) #17, !dbg !4311
  unreachable, !dbg !4311

bb2:                                              ; preds = %bb20, %bb1
  %_14 = load i32, i32* %i, align 4, !dbg !4318
  %_13 = icmp slt i32 %_14, 2, !dbg !4318
  br i1 %_13, label %bb3, label %bb21, !dbg !4318

bb21:                                             ; preds = %bb2
  ret void, !dbg !4319

bb3:                                              ; preds = %bb2
  store i32 0, i32* %j, align 4, !dbg !4320
  br label %bb4, !dbg !4321

bb4:                                              ; preds = %bb18, %bb3
  %_18 = load i32, i32* %j, align 4, !dbg !4322
  %5 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %n, i32 %n), !dbg !4323
  %_22.0 = extractvalue { i32, i1 } %5, 0, !dbg !4323
  %_22.1 = extractvalue { i32, i1 } %5, 1, !dbg !4323
  %6 = call i1 @llvm.expect.i1(i1 %_22.1, i1 false), !dbg !4323
  br i1 %6, label %panic1, label %bb5, !dbg !4323

bb5:                                              ; preds = %bb4
  %_17 = icmp slt i32 %_18, %_22.0, !dbg !4322
  br i1 %_17, label %bb6, label %bb19, !dbg !4322

panic1:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc337 to %"core::panic::location::Location"*)) #17, !dbg !4323
  unreachable, !dbg !4323

bb19:                                             ; preds = %bb5
  %7 = load i32, i32* %i, align 4, !dbg !4324
  %8 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %7, i32 1), !dbg !4324
  %_54.0 = extractvalue { i32, i1 } %8, 0, !dbg !4324
  %_54.1 = extractvalue { i32, i1 } %8, 1, !dbg !4324
  %9 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false), !dbg !4324
  br i1 %9, label %panic8, label %bb20, !dbg !4324

bb6:                                              ; preds = %bb5
  store i32 0, i32* %k, align 4, !dbg !4325
  br label %bb7, !dbg !4326

bb7:                                              ; preds = %bb16, %bb6
  %_25 = load i32, i32* %k, align 4, !dbg !4327
  %_24 = icmp slt i32 %_25, %m, !dbg !4327
  br i1 %_24, label %bb8, label %bb17, !dbg !4327

bb17:                                             ; preds = %bb7
  %10 = load i32, i32* %j, align 4, !dbg !4328
  %11 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %10, i32 1), !dbg !4328
  %_53.0 = extractvalue { i32, i1 } %11, 0, !dbg !4328
  %_53.1 = extractvalue { i32, i1 } %11, 1, !dbg !4328
  %12 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !4328
  br i1 %12, label %panic7, label %bb18, !dbg !4328

bb8:                                              ; preds = %bb7
  %fresh1 = load i32, i32* %counter, align 4, !dbg !4329
  store i32 %fresh1, i32* %fresh1.dbg.spill, align 4, !dbg !4329
  call void @llvm.dbg.declare(metadata i32* %fresh1.dbg.spill, metadata !4302, metadata !DIExpression()), !dbg !4330
  %_28 = load i32, i32* %counter, align 4, !dbg !4331
  %13 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_28, i32 1), !dbg !4331
  %_29.0 = extractvalue { i32, i1 } %13, 0, !dbg !4331
  %_29.1 = extractvalue { i32, i1 } %13, 1, !dbg !4331
  %14 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false), !dbg !4331
  br i1 %14, label %panic2, label %bb9, !dbg !4331

bb9:                                              ; preds = %bb8
  store i32 %_29.0, i32* %counter, align 4, !dbg !4332
  %_37 = load i32, i32* %i, align 4, !dbg !4333
  %_36 = sext i32 %_37 to i64, !dbg !4333
  %15 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %vla, i64 %vla_0), !dbg !4334
  %_42.0 = extractvalue { i64, i1 } %15, 0, !dbg !4334
  %_42.1 = extractvalue { i64, i1 } %15, 1, !dbg !4334
  %16 = call i1 @llvm.expect.i1(i1 %_42.1, i1 false), !dbg !4334
  br i1 %16, label %panic3, label %bb10, !dbg !4334

panic2:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc339 to %"core::panic::location::Location"*)) #17, !dbg !4331
  unreachable, !dbg !4331

bb10:                                             ; preds = %bb9
  %17 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %_36, i64 %_42.0), !dbg !4333
  %_43.0 = extractvalue { i64, i1 } %17, 0, !dbg !4333
  %_43.1 = extractvalue { i64, i1 } %17, 1, !dbg !4333
  %18 = call i1 @llvm.expect.i1(i1 %_43.1, i1 false), !dbg !4333
  br i1 %18, label %panic4, label %bb11, !dbg !4333

panic3:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc341 to %"core::panic::location::Location"*)) #17, !dbg !4334
  unreachable, !dbg !4334

bb11:                                             ; preds = %bb10
  store i32* %a, i32** %self.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i13, metadata !3510, metadata !DIExpression()), !dbg !4335
  store i64 %_43.0, i64* %count.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i12, metadata !3513, metadata !DIExpression()), !dbg !4337
  %19 = getelementptr inbounds i32, i32* %a, i64 %_43.0, !dbg !4338
  store i32* %19, i32** %0, align 8, !dbg !4338
  %_3.i14 = load i32*, i32** %0, align 8, !dbg !4338
  br label %bb12, !dbg !4339

panic4:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc343 to %"core::panic::location::Location"*)) #17, !dbg !4333
  unreachable, !dbg !4333

bb12:                                             ; preds = %bb11
  %_46 = load i32, i32* %j, align 4, !dbg !4340
  %_45 = sext i32 %_46 to i64, !dbg !4340
  %20 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %_45, i64 %vla_0), !dbg !4340
  %_49.0 = extractvalue { i64, i1 } %20, 0, !dbg !4340
  %_49.1 = extractvalue { i64, i1 } %20, 1, !dbg !4340
  %21 = call i1 @llvm.expect.i1(i1 %_49.1, i1 false), !dbg !4340
  br i1 %21, label %panic5, label %bb13, !dbg !4340

bb13:                                             ; preds = %bb12
  store i32* %_3.i14, i32** %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i10, metadata !3510, metadata !DIExpression()), !dbg !4341
  store i64 %_49.0, i64* %count.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i9, metadata !3513, metadata !DIExpression()), !dbg !4343
  %22 = getelementptr inbounds i32, i32* %_3.i14, i64 %_49.0, !dbg !4344
  store i32* %22, i32** %1, align 8, !dbg !4344
  %_3.i11 = load i32*, i32** %1, align 8, !dbg !4344
  br label %bb14, !dbg !4339

panic5:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc345 to %"core::panic::location::Location"*)) #17, !dbg !4340
  unreachable, !dbg !4340

bb14:                                             ; preds = %bb13
  %_51 = load i32, i32* %k, align 4, !dbg !4345
  %_50 = sext i32 %_51 to i64, !dbg !4345
  store i32* %_3.i11, i32** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i, metadata !3510, metadata !DIExpression()), !dbg !4346
  store i64 %_50, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !3513, metadata !DIExpression()), !dbg !4348
  %23 = getelementptr inbounds i32, i32* %_3.i11, i64 %_50, !dbg !4349
  store i32* %23, i32** %2, align 8, !dbg !4349
  %_3.i = load i32*, i32** %2, align 8, !dbg !4349
  br label %bb15, !dbg !4339

bb15:                                             ; preds = %bb14
  store i32 %fresh1, i32* %_3.i, align 4, !dbg !4350
  %24 = load i32, i32* %k, align 4, !dbg !4351
  %25 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %24, i32 1), !dbg !4351
  %_52.0 = extractvalue { i32, i1 } %25, 0, !dbg !4351
  %_52.1 = extractvalue { i32, i1 } %25, 1, !dbg !4351
  %26 = call i1 @llvm.expect.i1(i1 %_52.1, i1 false), !dbg !4351
  br i1 %26, label %panic6, label %bb16, !dbg !4351

bb16:                                             ; preds = %bb15
  store i32 %_52.0, i32* %k, align 4, !dbg !4351
  br label %bb7, !dbg !4326

panic6:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc347 to %"core::panic::location::Location"*)) #17, !dbg !4351
  unreachable, !dbg !4351

bb18:                                             ; preds = %bb17
  store i32 %_53.0, i32* %j, align 4, !dbg !4328
  br label %bb4, !dbg !4321

panic7:                                           ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc349 to %"core::panic::location::Location"*)) #17, !dbg !4328
  unreachable, !dbg !4328

bb20:                                             ; preds = %bb19
  store i32 %_54.0, i32* %i, align 4, !dbg !4324
  br label %bb2, !dbg !4317

panic8:                                           ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc351 to %"core::panic::location::Location"*)) #17, !dbg !4324
  unreachable, !dbg !4324
}

; Function Attrs: nonlazybind uwtable
define void @rust_variable_arrays(i32* %buf) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4352 {
start:
  %0 = alloca [5 x i32]*, align 8
  %count.dbg.spill.i34 = alloca i64, align 8
  %self.dbg.spill.i35 = alloca [5 x i32]*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i31 = alloca i64, align 8
  %self.dbg.spill.i32 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i28 = alloca i64, align 8
  %self.dbg.spill.i29 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i25 = alloca i64, align 8
  %self.dbg.spill.i26 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %count.dbg.spill.i22 = alloca i64, align 8
  %self.dbg.spill.i23 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %count.dbg.spill.i19 = alloca i64, align 8
  %self.dbg.spill.i20 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %count.dbg.spill.i16 = alloca i64, align 8
  %self.dbg.spill.i17 = alloca i32*, align 8
  %7 = alloca [4 x [5 x i32]]*, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca [4 x [5 x i32]]*, align 8
  %8 = alloca [4 x [5 x i32]]*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca [4 x [5 x i32]]*, align 8
  %fresh3.dbg.spill = alloca i32, align 4
  %9 = alloca { i8*, i32 }, align 8
  %vla.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i32, align 4
  %fresh2.dbg.spill = alloca i32, align 4
  %buf.dbg.spill = alloca i32*, align 8
  %past_end = alloca i32*, align 8
  %i_0 = alloca i32, align 4
  %var1 = alloca %"alloc::vec::Vec<i32>", align 8
  %k = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %counter = alloca i32, align 4
  %_4 = alloca [5 x i32], align 4
  %_3 = alloca [4 x [5 x i32]], align 4
  %grid = alloca [4 x [4 x [5 x i32]]], align 4
  store i32* %buf, i32** %buf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %buf.dbg.spill, metadata !4356, metadata !DIExpression()), !dbg !4382
  call void @llvm.dbg.declare(metadata [4 x [4 x [5 x i32]]]* %grid, metadata !4357, metadata !DIExpression()), !dbg !4383
  call void @llvm.dbg.declare(metadata i32* %counter, metadata !4360, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4362, metadata !DIExpression()), !dbg !4385
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4364, metadata !DIExpression()), !dbg !4386
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4366, metadata !DIExpression()), !dbg !4387
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"* %var1, metadata !4374, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.declare(metadata i32* %i_0, metadata !4376, metadata !DIExpression()), !dbg !4389
  call void @llvm.dbg.declare(metadata i32** %past_end, metadata !4380, metadata !DIExpression()), !dbg !4390
  %10 = getelementptr inbounds [5 x i32], [5 x i32]* %_4, i64 0, i64 0, !dbg !4391
  %11 = bitcast i32* %10 to i8*, !dbg !4391
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 20, i1 false), !dbg !4391
  %12 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %_3, i64 0, i64 0, !dbg !4392
  %13 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %_3, i64 0, i64 4, !dbg !4392
  br label %repeat_loop_header, !dbg !4392

repeat_loop_header:                               ; preds = %repeat_loop_body, %start
  %14 = phi [5 x i32]* [ %12, %start ], [ %18, %repeat_loop_body ]
  %15 = icmp ne [5 x i32]* %14, %13
  br i1 %15, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  %16 = bitcast [5 x i32]* %14 to i8*
  %17 = bitcast [5 x i32]* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 20, i1 false)
  %18 = getelementptr inbounds [5 x i32], [5 x i32]* %14, i64 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  %19 = getelementptr inbounds [4 x [4 x [5 x i32]]], [4 x [4 x [5 x i32]]]* %grid, i64 0, i64 0, !dbg !4393
  %20 = getelementptr inbounds [4 x [4 x [5 x i32]]], [4 x [4 x [5 x i32]]]* %grid, i64 0, i64 4, !dbg !4393
  br label %repeat_loop_header1, !dbg !4393

repeat_loop_header1:                              ; preds = %repeat_loop_body2, %repeat_loop_next
  %21 = phi [4 x [5 x i32]]* [ %19, %repeat_loop_next ], [ %25, %repeat_loop_body2 ]
  %22 = icmp ne [4 x [5 x i32]]* %21, %20
  br i1 %22, label %repeat_loop_body2, label %repeat_loop_next3

repeat_loop_body2:                                ; preds = %repeat_loop_header1
  %23 = bitcast [4 x [5 x i32]]* %21 to i8*
  %24 = bitcast [4 x [5 x i32]]* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %24, i64 80, i1 false)
  %25 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %21, i64 1
  br label %repeat_loop_header1

repeat_loop_next3:                                ; preds = %repeat_loop_header1
  %_10.0 = bitcast [4 x [4 x [5 x i32]]]* %grid to [0 x [4 x [5 x i32]]]*, !dbg !4394
; call core::slice::<impl [T]>::as_mut_ptr
  %_9 = call [4 x [5 x i32]]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h9f1040c218b50131E"([0 x [4 x [5 x i32]]]* align 4 %_10.0, i64 4), !dbg !4394
  br label %bb1, !dbg !4394

bb1:                                              ; preds = %repeat_loop_next3
  %_8 = bitcast [4 x [5 x i32]]* %_9 to i32*, !dbg !4394
  call void @rust_use_arrays(i32 2, i32 5, i32* %_8), !dbg !4395
  br label %bb2, !dbg !4395

bb2:                                              ; preds = %bb1
  %_18.0 = bitcast [4 x [4 x [5 x i32]]]* %grid to [0 x [4 x [5 x i32]]]*, !dbg !4396
; call core::slice::<impl [T]>::as_mut_ptr
  %_17 = call [4 x [5 x i32]]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h9f1040c218b50131E"([0 x [4 x [5 x i32]]]* align 4 %_18.0, i64 4), !dbg !4396
  br label %bb3, !dbg !4396

bb3:                                              ; preds = %bb2
  store [4 x [5 x i32]]* %_17, [4 x [5 x i32]]** %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata [4 x [5 x i32]]** %self.dbg.spill.i14, metadata !4397, metadata !DIExpression()), !dbg !4403
  store i64 2, i64* %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i13, metadata !4402, metadata !DIExpression()), !dbg !4405
  %26 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %_17, i64 2, !dbg !4406
  store [4 x [5 x i32]]* %26, [4 x [5 x i32]]** %7, align 8, !dbg !4406
  %_3.i15 = load [4 x [5 x i32]]*, [4 x [5 x i32]]** %7, align 8, !dbg !4406
  br label %bb4, !dbg !4396

bb4:                                              ; preds = %bb3
  %_15 = bitcast [4 x [5 x i32]]* %_3.i15 to i32*, !dbg !4396
  call void @rust_use_arrays(i32 2, i32 5, i32* %_15), !dbg !4407
  br label %bb5, !dbg !4407

bb5:                                              ; preds = %bb4
  store i32 0, i32* %counter, align 4, !dbg !4408
  store i32 0, i32* %i, align 4, !dbg !4409
  br label %bb6, !dbg !4410

bb6:                                              ; preds = %bb21, %bb5
  %_24 = load i32, i32* %i, align 4, !dbg !4411
  %_23 = icmp slt i32 %_24, 4, !dbg !4411
  br i1 %_23, label %bb7, label %bb22, !dbg !4411

bb22:                                             ; preds = %bb6
  store i32 8, i32* %n.dbg.spill, align 4, !dbg !4412
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !4370, metadata !DIExpression()), !dbg !4413
  store i64 8, i64* %vla.dbg.spill, align 8, !dbg !4414
  call void @llvm.dbg.declare(metadata i64* %vla.dbg.spill, metadata !4372, metadata !DIExpression()), !dbg !4415
; call alloc::vec::from_elem
  call void @_ZN5alloc3vec9from_elem17h24dc4e25bdbefd73E(%"alloc::vec::Vec<i32>"* sret(%"alloc::vec::Vec<i32>") %var1, i32 0, i64 8), !dbg !4416
  br label %bb23, !dbg !4416

bb7:                                              ; preds = %bb6
  store i32 0, i32* %j, align 4, !dbg !4417
  br label %bb8, !dbg !4418

bb8:                                              ; preds = %bb19, %bb7
  %_28 = load i32, i32* %j, align 4, !dbg !4419
  %_27 = icmp slt i32 %_28, 4, !dbg !4419
  br i1 %_27, label %bb9, label %bb20, !dbg !4419

bb20:                                             ; preds = %bb8
  %27 = load i32, i32* %i, align 4, !dbg !4420
  %28 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 1), !dbg !4420
  %_56.0 = extractvalue { i32, i1 } %28, 0, !dbg !4420
  %_56.1 = extractvalue { i32, i1 } %28, 1, !dbg !4420
  %29 = call i1 @llvm.expect.i1(i1 %_56.1, i1 false), !dbg !4420
  br i1 %29, label %panic9, label %bb21, !dbg !4420

bb9:                                              ; preds = %bb8
  store i32 0, i32* %k, align 4, !dbg !4421
  br label %bb10, !dbg !4422

bb10:                                             ; preds = %bb17, %bb9
  %_32 = load i32, i32* %k, align 4, !dbg !4423
  %_31 = icmp slt i32 %_32, 5, !dbg !4423
  br i1 %_31, label %bb11, label %bb18, !dbg !4423

bb18:                                             ; preds = %bb10
  %30 = load i32, i32* %j, align 4, !dbg !4424
  %31 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %30, i32 1), !dbg !4424
  %_55.0 = extractvalue { i32, i1 } %31, 0, !dbg !4424
  %_55.1 = extractvalue { i32, i1 } %31, 1, !dbg !4424
  %32 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !4424
  br i1 %32, label %panic8, label %bb19, !dbg !4424

bb11:                                             ; preds = %bb10
  %fresh2 = load i32, i32* %counter, align 4, !dbg !4425
  store i32 %fresh2, i32* %fresh2.dbg.spill, align 4, !dbg !4425
  call void @llvm.dbg.declare(metadata i32* %fresh2.dbg.spill, metadata !4368, metadata !DIExpression()), !dbg !4426
  %_35 = load i32, i32* %counter, align 4, !dbg !4427
  %33 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_35, i32 1), !dbg !4427
  %_36.0 = extractvalue { i32, i1 } %33, 0, !dbg !4427
  %_36.1 = extractvalue { i32, i1 } %33, 1, !dbg !4427
  %34 = call i1 @llvm.expect.i1(i1 %_36.1, i1 false), !dbg !4427
  br i1 %34, label %panic, label %bb12, !dbg !4427

bb12:                                             ; preds = %bb11
  store i32 %_36.0, i32* %counter, align 4, !dbg !4428
  %_39 = load i32, i32* %i, align 4, !dbg !4429
  %_38 = sext i32 %_39 to i64, !dbg !4429
  %_41 = icmp ult i64 %_38, 4, !dbg !4430
  %35 = call i1 @llvm.expect.i1(i1 %_41, i1 true), !dbg !4430
  br i1 %35, label %bb13, label %panic4, !dbg !4430

panic:                                            ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc353 to %"core::panic::location::Location"*)) #17, !dbg !4427
  unreachable, !dbg !4427

bb13:                                             ; preds = %bb12
  %_43 = load i32, i32* %j, align 4, !dbg !4431
  %_42 = sext i32 %_43 to i64, !dbg !4431
  %_45 = icmp ult i64 %_42, 4, !dbg !4430
  %36 = call i1 @llvm.expect.i1(i1 %_45, i1 true), !dbg !4430
  br i1 %36, label %bb14, label %panic5, !dbg !4430

panic4:                                           ; preds = %bb12
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_38, i64 4, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc355 to %"core::panic::location::Location"*)) #17, !dbg !4430
  unreachable, !dbg !4430

bb14:                                             ; preds = %bb13
  %_47 = load i32, i32* %k, align 4, !dbg !4432
  %_46 = sext i32 %_47 to i64, !dbg !4432
  %_49 = icmp ult i64 %_46, 5, !dbg !4430
  %37 = call i1 @llvm.expect.i1(i1 %_49, i1 true), !dbg !4430
  br i1 %37, label %bb15, label %panic6, !dbg !4430

panic5:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_42, i64 4, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc355 to %"core::panic::location::Location"*)) #17, !dbg !4430
  unreachable, !dbg !4430

bb15:                                             ; preds = %bb14
  %38 = getelementptr inbounds [4 x [4 x [5 x i32]]], [4 x [4 x [5 x i32]]]* %grid, i64 0, i64 %_38, !dbg !4430
  %39 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %38, i64 0, i64 %_42, !dbg !4430
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %39, i64 0, i64 %_46, !dbg !4430
  %_37 = load i32, i32* %40, align 4, !dbg !4430
  %_52 = sext i32 %fresh2 to i64, !dbg !4433
  store i32* %buf, i32** %self.dbg.spill.i32, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i32, metadata !3510, metadata !DIExpression()), !dbg !4434
  store i64 %_52, i64* %count.dbg.spill.i31, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i31, metadata !3513, metadata !DIExpression()), !dbg !4436
  %41 = getelementptr inbounds i32, i32* %buf, i64 %_52, !dbg !4437
  store i32* %41, i32** %1, align 8, !dbg !4437
  %_3.i33 = load i32*, i32** %1, align 8, !dbg !4437
  br label %bb16, !dbg !4438

panic6:                                           ; preds = %bb14
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_46, i64 5, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc355 to %"core::panic::location::Location"*)) #17, !dbg !4430
  unreachable, !dbg !4430

bb16:                                             ; preds = %bb15
  store i32 %_37, i32* %_3.i33, align 4, !dbg !4439
  %42 = load i32, i32* %k, align 4, !dbg !4440
  %43 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %42, i32 1), !dbg !4440
  %_54.0 = extractvalue { i32, i1 } %43, 0, !dbg !4440
  %_54.1 = extractvalue { i32, i1 } %43, 1, !dbg !4440
  %44 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false), !dbg !4440
  br i1 %44, label %panic7, label %bb17, !dbg !4440

bb17:                                             ; preds = %bb16
  store i32 %_54.0, i32* %k, align 4, !dbg !4440
  br label %bb10, !dbg !4422

panic7:                                           ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc357 to %"core::panic::location::Location"*)) #17, !dbg !4440
  unreachable, !dbg !4440

bb19:                                             ; preds = %bb18
  store i32 %_55.0, i32* %j, align 4, !dbg !4424
  br label %bb8, !dbg !4418

panic8:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc359 to %"core::panic::location::Location"*)) #17, !dbg !4424
  unreachable, !dbg !4424

bb21:                                             ; preds = %bb20
  store i32 %_56.0, i32* %i, align 4, !dbg !4420
  br label %bb6, !dbg !4410

panic9:                                           ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc361 to %"core::panic::location::Location"*)) #17, !dbg !4420
  unreachable, !dbg !4420

bb23:                                             ; preds = %bb22
  store i32 0, i32* %i_0, align 4, !dbg !4441
  br label %bb24, !dbg !4442

bb24:                                             ; preds = %bb33, %bb23
  %_63 = load i32, i32* %i_0, align 4, !dbg !4443
  %_62 = icmp slt i32 %_63, 8, !dbg !4443
  br i1 %_62, label %bb25, label %bb34, !dbg !4443

bb34:                                             ; preds = %bb24
  %_99.0 = bitcast [4 x [4 x [5 x i32]]]* %grid to [0 x [4 x [5 x i32]]]*, !dbg !4444
; invoke core::slice::<impl [T]>::as_mut_ptr
  %_98 = invoke [4 x [5 x i32]]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h9f1040c218b50131E"([0 x [4 x [5 x i32]]]* align 4 %_99.0, i64 4)
          to label %bb35 unwind label %cleanup, !dbg !4444

bb25:                                             ; preds = %bb24
  %_66 = load i32, i32* %i_0, align 4, !dbg !4445
  %45 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 3, i32 %_66), !dbg !4446
  %_67.0 = extractvalue { i32, i1 } %45, 0, !dbg !4446
  %_67.1 = extractvalue { i32, i1 } %45, 1, !dbg !4446
  %46 = call i1 @llvm.expect.i1(i1 %_67.1, i1 false), !dbg !4446
  br i1 %46, label %panic10, label %bb26, !dbg !4446

bb26:                                             ; preds = %bb25
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_69 = invoke i32* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hffe6c8eac2fd4d5aE"(%"alloc::vec::Vec<i32>"* align 8 %var1)
          to label %bb27 unwind label %cleanup, !dbg !4447

panic10:                                          ; preds = %bb25
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc363 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup, !dbg !4446

bb44:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<i32>>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17h7c47488e4f4ba9f1E"(%"alloc::vec::Vec<i32>"* %var1) #14
          to label %bb45 unwind label %abort, !dbg !4448

cleanup:                                          ; preds = %bb40, %bb38, %bb36, %bb34, %panic12, %bb29, %panic11, %bb26, %panic10
  %47 = landingpad { i8*, i32 }
          cleanup
  %48 = extractvalue { i8*, i32 } %47, 0
  %49 = extractvalue { i8*, i32 } %47, 1
  %50 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %9, i32 0, i32 0
  store i8* %48, i8** %50, align 8
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %9, i32 0, i32 1
  store i32 %49, i32* %51, align 8
  br label %bb44

unreachable:                                      ; preds = %panic12, %panic11, %panic10
  unreachable

bb27:                                             ; preds = %bb26
  %_72 = load i32, i32* %i_0, align 4, !dbg !4449
  %_71 = sext i32 %_72 to i64, !dbg !4449
  store i32* %_69, i32** %self.dbg.spill.i29, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i29, metadata !3510, metadata !DIExpression()), !dbg !4450
  store i64 %_71, i64* %count.dbg.spill.i28, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i28, metadata !3513, metadata !DIExpression()), !dbg !4452
  %52 = getelementptr inbounds i32, i32* %_69, i64 %_71, !dbg !4453
  store i32* %52, i32** %2, align 8, !dbg !4453
  %_3.i30 = load i32*, i32** %2, align 8, !dbg !4453
  br label %bb28, !dbg !4454

bb28:                                             ; preds = %bb27
  store i32 %_67.0, i32* %_3.i30, align 4, !dbg !4455
  %fresh3 = load i32, i32* %counter, align 4, !dbg !4456
  store i32 %fresh3, i32* %fresh3.dbg.spill, align 4, !dbg !4456
  call void @llvm.dbg.declare(metadata i32* %fresh3.dbg.spill, metadata !4378, metadata !DIExpression()), !dbg !4457
  %_74 = load i32, i32* %counter, align 4, !dbg !4458
  %53 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_74, i32 1), !dbg !4458
  %_75.0 = extractvalue { i32, i1 } %53, 0, !dbg !4458
  %_75.1 = extractvalue { i32, i1 } %53, 1, !dbg !4458
  %54 = call i1 @llvm.expect.i1(i1 %_75.1, i1 false), !dbg !4458
  br i1 %54, label %panic11, label %bb29, !dbg !4458

bb29:                                             ; preds = %bb28
  store i32 %_75.0, i32* %counter, align 4, !dbg !4459
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_78 = invoke i32* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hffe6c8eac2fd4d5aE"(%"alloc::vec::Vec<i32>"* align 8 %var1)
          to label %bb30 unwind label %cleanup, !dbg !4460

panic11:                                          ; preds = %bb28
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc365 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup, !dbg !4458

bb30:                                             ; preds = %bb29
  %_81 = load i32, i32* %i_0, align 4, !dbg !4461
  %_80 = sext i32 %_81 to i64, !dbg !4461
  store i32* %_78, i32** %self.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i26, metadata !3510, metadata !DIExpression()), !dbg !4462
  store i64 %_80, i64* %count.dbg.spill.i25, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i25, metadata !3513, metadata !DIExpression()), !dbg !4464
  %55 = getelementptr inbounds i32, i32* %_78, i64 %_80, !dbg !4465
  store i32* %55, i32** %3, align 8, !dbg !4465
  %_3.i27 = load i32*, i32** %3, align 8, !dbg !4465
  br label %bb31, !dbg !4466

bb31:                                             ; preds = %bb30
  %_76 = load i32, i32* %_3.i27, align 4, !dbg !4467
  %_84 = sext i32 %fresh3 to i64, !dbg !4468
  store i32* %buf, i32** %self.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i23, metadata !3510, metadata !DIExpression()), !dbg !4469
  store i64 %_84, i64* %count.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i22, metadata !3513, metadata !DIExpression()), !dbg !4471
  %56 = getelementptr inbounds i32, i32* %buf, i64 %_84, !dbg !4472
  store i32* %56, i32** %4, align 8, !dbg !4472
  %_3.i24 = load i32*, i32** %4, align 8, !dbg !4472
  br label %bb32, !dbg !4473

bb32:                                             ; preds = %bb31
  store i32 %_76, i32* %_3.i24, align 4, !dbg !4474
  %57 = load i32, i32* %i_0, align 4, !dbg !4475
  %58 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 1), !dbg !4475
  %_86.0 = extractvalue { i32, i1 } %58, 0, !dbg !4475
  %_86.1 = extractvalue { i32, i1 } %58, 1, !dbg !4475
  %59 = call i1 @llvm.expect.i1(i1 %_86.1, i1 false), !dbg !4475
  br i1 %59, label %panic12, label %bb33, !dbg !4475

bb33:                                             ; preds = %bb32
  store i32 %_86.0, i32* %i_0, align 4, !dbg !4475
  br label %bb24, !dbg !4442

panic12:                                          ; preds = %bb32
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc367 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup, !dbg !4475

bb35:                                             ; preds = %bb34
  store [4 x [5 x i32]]* %_98, [4 x [5 x i32]]** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata [4 x [5 x i32]]** %self.dbg.spill.i, metadata !4397, metadata !DIExpression()), !dbg !4476
  store i64 4, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !4402, metadata !DIExpression()), !dbg !4478
  %60 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %_98, i64 4, !dbg !4479
  store [4 x [5 x i32]]* %60, [4 x [5 x i32]]** %8, align 8, !dbg !4479
  %_3.i = load [4 x [5 x i32]]*, [4 x [5 x i32]]** %8, align 8, !dbg !4479
  br label %bb36, !dbg !4480

bb36:                                             ; preds = %bb35
  %_95.0 = bitcast [4 x [5 x i32]]* %_3.i to [0 x [5 x i32]]*, !dbg !4481
; invoke core::slice::<impl [T]>::as_mut_ptr
  %_94 = invoke [5 x i32]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h36f4bc00422b1ce6E"([0 x [5 x i32]]* align 4 %_95.0, i64 4)
          to label %bb37 unwind label %cleanup, !dbg !4481

bb37:                                             ; preds = %bb36
  store [5 x i32]* %_94, [5 x i32]** %self.dbg.spill.i35, align 8
  call void @llvm.dbg.declare(metadata [5 x i32]** %self.dbg.spill.i35, metadata !4482, metadata !DIExpression()), !dbg !4488
  store i64 4, i64* %count.dbg.spill.i34, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i34, metadata !4487, metadata !DIExpression()), !dbg !4490
  %61 = getelementptr inbounds [5 x i32], [5 x i32]* %_94, i64 4, !dbg !4491
  store [5 x i32]* %61, [5 x i32]** %0, align 8, !dbg !4491
  %_3.i36 = load [5 x i32]*, [5 x i32]** %0, align 8, !dbg !4491
  br label %bb38, !dbg !4492

bb38:                                             ; preds = %bb37
  %_91.0 = bitcast [5 x i32]* %_3.i36 to [0 x i32]*, !dbg !4493
; invoke core::slice::<impl [T]>::as_mut_ptr
  %_90 = invoke i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h44bbeca8685a138cE"([0 x i32]* align 4 %_91.0, i64 5)
          to label %bb39 unwind label %cleanup, !dbg !4493

bb39:                                             ; preds = %bb38
  store i32* %_90, i32** %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i20, metadata !3510, metadata !DIExpression()), !dbg !4494
  store i64 5, i64* %count.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i19, metadata !3513, metadata !DIExpression()), !dbg !4496
  %62 = getelementptr inbounds i32, i32* %_90, i64 5, !dbg !4497
  store i32* %62, i32** %5, align 8, !dbg !4497
  %_3.i21 = load i32*, i32** %5, align 8, !dbg !4497
  br label %bb40, !dbg !4498

bb40:                                             ; preds = %bb39
  store i32* %_3.i21, i32** %past_end, align 8, !dbg !4499
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_107 = invoke i32* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hffe6c8eac2fd4d5aE"(%"alloc::vec::Vec<i32>"* align 8 %var1)
          to label %bb41 unwind label %cleanup, !dbg !4500

bb41:                                             ; preds = %bb40
  store i32* %_107, i32** %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i17, metadata !3510, metadata !DIExpression()), !dbg !4501
  store i64 8, i64* %count.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i16, metadata !3513, metadata !DIExpression()), !dbg !4503
  %63 = getelementptr inbounds i32, i32* %_107, i64 8, !dbg !4504
  store i32* %63, i32** %6, align 8, !dbg !4504
  %_3.i18 = load i32*, i32** %6, align 8, !dbg !4504
  br label %bb42, !dbg !4505

bb42:                                             ; preds = %bb41
  store i32* %_3.i18, i32** %past_end, align 8, !dbg !4506
; call core::ptr::drop_in_place<alloc::vec::Vec<i32>>
  call void @"_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17h7c47488e4f4ba9f1E"(%"alloc::vec::Vec<i32>"* %var1), !dbg !4448
  br label %bb43, !dbg !4448

abort:                                            ; preds = %bb44
  %64 = landingpad { i8*, i32 }
          cleanup, !dbg !4507
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #15, !dbg !4507
  unreachable, !dbg !4507

bb45:                                             ; preds = %bb44
  %65 = bitcast { i8*, i32 }* %9 to i8**, !dbg !4507
  %66 = load i8*, i8** %65, align 8, !dbg !4507
  %67 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %9, i32 0, i32 1, !dbg !4507
  %68 = load i32, i32* %67, align 8, !dbg !4507
  %69 = insertvalue { i8*, i32 } undef, i8* %66, 0, !dbg !4507
  %70 = insertvalue { i8*, i32 } %69, i32 %68, 1, !dbg !4507
  resume { i8*, i32 } %70, !dbg !4507

bb43:                                             ; preds = %bb42
  ret void, !dbg !4508
}

; Function Attrs: nonlazybind uwtable
define void @rust_alloca_arrays(i32* %buf) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4509 {
start:
  %0 = alloca [5 x i32]*, align 8
  %count.dbg.spill.i35 = alloca i64, align 8
  %self.dbg.spill.i36 = alloca [5 x i32]*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i32 = alloca i64, align 8
  %self.dbg.spill.i33 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i29 = alloca i64, align 8
  %self.dbg.spill.i30 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i26 = alloca i64, align 8
  %self.dbg.spill.i27 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %count.dbg.spill.i23 = alloca i64, align 8
  %self.dbg.spill.i24 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %count.dbg.spill.i20 = alloca i64, align 8
  %self.dbg.spill.i21 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %count.dbg.spill.i17 = alloca i64, align 8
  %self.dbg.spill.i18 = alloca i32*, align 8
  %7 = alloca [4 x [5 x i32]]*, align 8
  %count.dbg.spill.i14 = alloca i64, align 8
  %self.dbg.spill.i15 = alloca [4 x [5 x i32]]*, align 8
  %8 = alloca [4 x [5 x i32]]*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i13 = alloca [4 x [5 x i32]]*, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %fresh6.dbg.spill = alloca i32, align 4
  %var1.dbg.spill = alloca i32*, align 8
  %9 = alloca { i8*, i32 }, align 8
  %n.dbg.spill = alloca i32, align 4
  %fresh4.dbg.spill = alloca i32, align 4
  %buf.dbg.spill = alloca i32*, align 8
  %past_end = alloca i32*, align 8
  %i_0 = alloca i32, align 4
  %fresh5 = alloca %"alloc::vec::Vec<i32>", align 8
  %k = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %counter = alloca i32, align 4
  %_4 = alloca [5 x i32], align 4
  %_3 = alloca [4 x [5 x i32]], align 4
  %grid = alloca [4 x [4 x [5 x i32]]], align 4
  store i32* %buf, i32** %buf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %buf.dbg.spill, metadata !4511, metadata !DIExpression()), !dbg !4536
  call void @llvm.dbg.declare(metadata [4 x [4 x [5 x i32]]]* %grid, metadata !4512, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.declare(metadata i32* %counter, metadata !4514, metadata !DIExpression()), !dbg !4538
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4516, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4518, metadata !DIExpression()), !dbg !4540
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4520, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"* %fresh5, metadata !4526, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.declare(metadata i32* %i_0, metadata !4530, metadata !DIExpression()), !dbg !4543
  call void @llvm.dbg.declare(metadata i32** %past_end, metadata !4534, metadata !DIExpression()), !dbg !4544
  %10 = getelementptr inbounds [5 x i32], [5 x i32]* %_4, i64 0, i64 0, !dbg !4545
  %11 = bitcast i32* %10 to i8*, !dbg !4545
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 20, i1 false), !dbg !4545
  %12 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %_3, i64 0, i64 0, !dbg !4546
  %13 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %_3, i64 0, i64 4, !dbg !4546
  br label %repeat_loop_header, !dbg !4546

repeat_loop_header:                               ; preds = %repeat_loop_body, %start
  %14 = phi [5 x i32]* [ %12, %start ], [ %18, %repeat_loop_body ]
  %15 = icmp ne [5 x i32]* %14, %13
  br i1 %15, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  %16 = bitcast [5 x i32]* %14 to i8*
  %17 = bitcast [5 x i32]* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 20, i1 false)
  %18 = getelementptr inbounds [5 x i32], [5 x i32]* %14, i64 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  %19 = getelementptr inbounds [4 x [4 x [5 x i32]]], [4 x [4 x [5 x i32]]]* %grid, i64 0, i64 0, !dbg !4547
  %20 = getelementptr inbounds [4 x [4 x [5 x i32]]], [4 x [4 x [5 x i32]]]* %grid, i64 0, i64 4, !dbg !4547
  br label %repeat_loop_header1, !dbg !4547

repeat_loop_header1:                              ; preds = %repeat_loop_body2, %repeat_loop_next
  %21 = phi [4 x [5 x i32]]* [ %19, %repeat_loop_next ], [ %25, %repeat_loop_body2 ]
  %22 = icmp ne [4 x [5 x i32]]* %21, %20
  br i1 %22, label %repeat_loop_body2, label %repeat_loop_next3

repeat_loop_body2:                                ; preds = %repeat_loop_header1
  %23 = bitcast [4 x [5 x i32]]* %21 to i8*
  %24 = bitcast [4 x [5 x i32]]* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %24, i64 80, i1 false)
  %25 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %21, i64 1
  br label %repeat_loop_header1

repeat_loop_next3:                                ; preds = %repeat_loop_header1
  %_10.0 = bitcast [4 x [4 x [5 x i32]]]* %grid to [0 x [4 x [5 x i32]]]*, !dbg !4548
; call core::slice::<impl [T]>::as_mut_ptr
  %_9 = call [4 x [5 x i32]]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h9f1040c218b50131E"([0 x [4 x [5 x i32]]]* align 4 %_10.0, i64 4), !dbg !4548
  br label %bb1, !dbg !4548

bb1:                                              ; preds = %repeat_loop_next3
  %_8 = bitcast [4 x [5 x i32]]* %_9 to i32*, !dbg !4548
  call void @rust_use_arrays(i32 2, i32 5, i32* %_8), !dbg !4549
  br label %bb2, !dbg !4549

bb2:                                              ; preds = %bb1
  %_18.0 = bitcast [4 x [4 x [5 x i32]]]* %grid to [0 x [4 x [5 x i32]]]*, !dbg !4550
; call core::slice::<impl [T]>::as_mut_ptr
  %_17 = call [4 x [5 x i32]]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h9f1040c218b50131E"([0 x [4 x [5 x i32]]]* align 4 %_18.0, i64 4), !dbg !4550
  br label %bb3, !dbg !4550

bb3:                                              ; preds = %bb2
  store [4 x [5 x i32]]* %_17, [4 x [5 x i32]]** %self.dbg.spill.i15, align 8
  call void @llvm.dbg.declare(metadata [4 x [5 x i32]]** %self.dbg.spill.i15, metadata !4397, metadata !DIExpression()), !dbg !4551
  store i64 2, i64* %count.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i14, metadata !4402, metadata !DIExpression()), !dbg !4553
  %26 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %_17, i64 2, !dbg !4554
  store [4 x [5 x i32]]* %26, [4 x [5 x i32]]** %7, align 8, !dbg !4554
  %_3.i16 = load [4 x [5 x i32]]*, [4 x [5 x i32]]** %7, align 8, !dbg !4554
  br label %bb4, !dbg !4550

bb4:                                              ; preds = %bb3
  %_15 = bitcast [4 x [5 x i32]]* %_3.i16 to i32*, !dbg !4550
  call void @rust_use_arrays(i32 2, i32 5, i32* %_15), !dbg !4555
  br label %bb5, !dbg !4555

bb5:                                              ; preds = %bb4
  store i32 0, i32* %counter, align 4, !dbg !4556
  store i32 0, i32* %i, align 4, !dbg !4557
  br label %bb6, !dbg !4558

bb6:                                              ; preds = %bb21, %bb5
  %_24 = load i32, i32* %i, align 4, !dbg !4559
  %_23 = icmp slt i32 %_24, 4, !dbg !4559
  br i1 %_23, label %bb7, label %bb22, !dbg !4559

bb22:                                             ; preds = %bb6
  store i32 8, i32* %n.dbg.spill, align 4, !dbg !4560
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !4524, metadata !DIExpression()), !dbg !4561
  br label %bb23, !dbg !4562

bb7:                                              ; preds = %bb6
  store i32 0, i32* %j, align 4, !dbg !4563
  br label %bb8, !dbg !4564

bb8:                                              ; preds = %bb19, %bb7
  %_28 = load i32, i32* %j, align 4, !dbg !4565
  %_27 = icmp slt i32 %_28, 4, !dbg !4565
  br i1 %_27, label %bb9, label %bb20, !dbg !4565

bb20:                                             ; preds = %bb8
  %27 = load i32, i32* %i, align 4, !dbg !4566
  %28 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 1), !dbg !4566
  %_56.0 = extractvalue { i32, i1 } %28, 0, !dbg !4566
  %_56.1 = extractvalue { i32, i1 } %28, 1, !dbg !4566
  %29 = call i1 @llvm.expect.i1(i1 %_56.1, i1 false), !dbg !4566
  br i1 %29, label %panic9, label %bb21, !dbg !4566

bb9:                                              ; preds = %bb8
  store i32 0, i32* %k, align 4, !dbg !4567
  br label %bb10, !dbg !4568

bb10:                                             ; preds = %bb17, %bb9
  %_32 = load i32, i32* %k, align 4, !dbg !4569
  %_31 = icmp slt i32 %_32, 5, !dbg !4569
  br i1 %_31, label %bb11, label %bb18, !dbg !4569

bb18:                                             ; preds = %bb10
  %30 = load i32, i32* %j, align 4, !dbg !4570
  %31 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %30, i32 1), !dbg !4570
  %_55.0 = extractvalue { i32, i1 } %31, 0, !dbg !4570
  %_55.1 = extractvalue { i32, i1 } %31, 1, !dbg !4570
  %32 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !4570
  br i1 %32, label %panic8, label %bb19, !dbg !4570

bb11:                                             ; preds = %bb10
  %fresh4 = load i32, i32* %counter, align 4, !dbg !4571
  store i32 %fresh4, i32* %fresh4.dbg.spill, align 4, !dbg !4571
  call void @llvm.dbg.declare(metadata i32* %fresh4.dbg.spill, metadata !4522, metadata !DIExpression()), !dbg !4572
  %_35 = load i32, i32* %counter, align 4, !dbg !4573
  %33 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_35, i32 1), !dbg !4573
  %_36.0 = extractvalue { i32, i1 } %33, 0, !dbg !4573
  %_36.1 = extractvalue { i32, i1 } %33, 1, !dbg !4573
  %34 = call i1 @llvm.expect.i1(i1 %_36.1, i1 false), !dbg !4573
  br i1 %34, label %panic, label %bb12, !dbg !4573

bb12:                                             ; preds = %bb11
  store i32 %_36.0, i32* %counter, align 4, !dbg !4574
  %_39 = load i32, i32* %i, align 4, !dbg !4575
  %_38 = sext i32 %_39 to i64, !dbg !4575
  %_41 = icmp ult i64 %_38, 4, !dbg !4576
  %35 = call i1 @llvm.expect.i1(i1 %_41, i1 true), !dbg !4576
  br i1 %35, label %bb13, label %panic4, !dbg !4576

panic:                                            ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc369 to %"core::panic::location::Location"*)) #17, !dbg !4573
  unreachable, !dbg !4573

bb13:                                             ; preds = %bb12
  %_43 = load i32, i32* %j, align 4, !dbg !4577
  %_42 = sext i32 %_43 to i64, !dbg !4577
  %_45 = icmp ult i64 %_42, 4, !dbg !4576
  %36 = call i1 @llvm.expect.i1(i1 %_45, i1 true), !dbg !4576
  br i1 %36, label %bb14, label %panic5, !dbg !4576

panic4:                                           ; preds = %bb12
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_38, i64 4, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc371 to %"core::panic::location::Location"*)) #17, !dbg !4576
  unreachable, !dbg !4576

bb14:                                             ; preds = %bb13
  %_47 = load i32, i32* %k, align 4, !dbg !4578
  %_46 = sext i32 %_47 to i64, !dbg !4578
  %_49 = icmp ult i64 %_46, 5, !dbg !4576
  %37 = call i1 @llvm.expect.i1(i1 %_49, i1 true), !dbg !4576
  br i1 %37, label %bb15, label %panic6, !dbg !4576

panic5:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_42, i64 4, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc371 to %"core::panic::location::Location"*)) #17, !dbg !4576
  unreachable, !dbg !4576

bb15:                                             ; preds = %bb14
  %38 = getelementptr inbounds [4 x [4 x [5 x i32]]], [4 x [4 x [5 x i32]]]* %grid, i64 0, i64 %_38, !dbg !4576
  %39 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %38, i64 0, i64 %_42, !dbg !4576
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %39, i64 0, i64 %_46, !dbg !4576
  %_37 = load i32, i32* %40, align 4, !dbg !4576
  %_52 = sext i32 %fresh4 to i64, !dbg !4579
  store i32* %buf, i32** %self.dbg.spill.i33, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i33, metadata !3510, metadata !DIExpression()), !dbg !4580
  store i64 %_52, i64* %count.dbg.spill.i32, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i32, metadata !3513, metadata !DIExpression()), !dbg !4582
  %41 = getelementptr inbounds i32, i32* %buf, i64 %_52, !dbg !4583
  store i32* %41, i32** %1, align 8, !dbg !4583
  %_3.i34 = load i32*, i32** %1, align 8, !dbg !4583
  br label %bb16, !dbg !4584

panic6:                                           ; preds = %bb14
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_46, i64 5, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc371 to %"core::panic::location::Location"*)) #17, !dbg !4576
  unreachable, !dbg !4576

bb16:                                             ; preds = %bb15
  store i32 %_37, i32* %_3.i34, align 4, !dbg !4585
  %42 = load i32, i32* %k, align 4, !dbg !4586
  %43 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %42, i32 1), !dbg !4586
  %_54.0 = extractvalue { i32, i1 } %43, 0, !dbg !4586
  %_54.1 = extractvalue { i32, i1 } %43, 1, !dbg !4586
  %44 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false), !dbg !4586
  br i1 %44, label %panic7, label %bb17, !dbg !4586

bb17:                                             ; preds = %bb16
  store i32 %_54.0, i32* %k, align 4, !dbg !4586
  br label %bb10, !dbg !4568

panic7:                                           ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc373 to %"core::panic::location::Location"*)) #17, !dbg !4586
  unreachable, !dbg !4586

bb19:                                             ; preds = %bb18
  store i32 %_55.0, i32* %j, align 4, !dbg !4570
  br label %bb8, !dbg !4564

panic8:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc375 to %"core::panic::location::Location"*)) #17, !dbg !4570
  unreachable, !dbg !4570

bb21:                                             ; preds = %bb20
  store i32 %_56.0, i32* %i, align 4, !dbg !4566
  br label %bb6, !dbg !4558

panic9:                                           ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc377 to %"core::panic::location::Location"*)) #17, !dbg !4566
  unreachable, !dbg !4566

bb23:                                             ; preds = %bb22
  store i64 4, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !4587, metadata !DIExpression()), !dbg !4594
  store i64 8, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !4593, metadata !DIExpression()), !dbg !4596
  br label %bb24, !dbg !4597

bb24:                                             ; preds = %bb23
; call alloc::vec::from_elem
  call void @_ZN5alloc3vec9from_elem17h24dc4e25bdbefd73E(%"alloc::vec::Vec<i32>"* sret(%"alloc::vec::Vec<i32>") %fresh5, i32 0, i64 32), !dbg !4598
  br label %bb25, !dbg !4598

bb25:                                             ; preds = %bb24
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %var1 = invoke i32* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hffe6c8eac2fd4d5aE"(%"alloc::vec::Vec<i32>"* align 8 %fresh5)
          to label %bb26 unwind label %cleanup, !dbg !4599

bb44:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<i32>>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17h7c47488e4f4ba9f1E"(%"alloc::vec::Vec<i32>"* %fresh5) #14
          to label %bb45 unwind label %abort, !dbg !4600

cleanup:                                          ; preds = %bb39, %bb37, %bb35, %panic12, %panic11, %panic10, %bb25
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  %47 = extractvalue { i8*, i32 } %45, 1
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %9, i32 0, i32 0
  store i8* %46, i8** %48, align 8
  %49 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %9, i32 0, i32 1
  store i32 %47, i32* %49, align 8
  br label %bb44

bb26:                                             ; preds = %bb25
  store i32* %var1, i32** %var1.dbg.spill, align 8, !dbg !4599
  call void @llvm.dbg.declare(metadata i32** %var1.dbg.spill, metadata !4528, metadata !DIExpression()), !dbg !4601
  store i32 0, i32* %i_0, align 4, !dbg !4602
  br label %bb27, !dbg !4603

bb27:                                             ; preds = %bb34, %bb26
  %_69 = load i32, i32* %i_0, align 4, !dbg !4604
  %_68 = icmp slt i32 %_69, 8, !dbg !4604
  br i1 %_68, label %bb28, label %bb35, !dbg !4604

bb35:                                             ; preds = %bb27
  %_103.0 = bitcast [4 x [4 x [5 x i32]]]* %grid to [0 x [4 x [5 x i32]]]*, !dbg !4605
; invoke core::slice::<impl [T]>::as_mut_ptr
  %_102 = invoke [4 x [5 x i32]]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h9f1040c218b50131E"([0 x [4 x [5 x i32]]]* align 4 %_103.0, i64 4)
          to label %bb36 unwind label %cleanup, !dbg !4605

bb28:                                             ; preds = %bb27
  %_72 = load i32, i32* %i_0, align 4, !dbg !4606
  %50 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 3, i32 %_72), !dbg !4607
  %_73.0 = extractvalue { i32, i1 } %50, 0, !dbg !4607
  %_73.1 = extractvalue { i32, i1 } %50, 1, !dbg !4607
  %51 = call i1 @llvm.expect.i1(i1 %_73.1, i1 false), !dbg !4607
  br i1 %51, label %panic10, label %bb29, !dbg !4607

bb29:                                             ; preds = %bb28
  %_77 = load i32, i32* %i_0, align 4, !dbg !4608
  %_76 = sext i32 %_77 to i64, !dbg !4608
  store i32* %var1, i32** %self.dbg.spill.i30, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i30, metadata !3510, metadata !DIExpression()), !dbg !4609
  store i64 %_76, i64* %count.dbg.spill.i29, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i29, metadata !3513, metadata !DIExpression()), !dbg !4611
  %52 = getelementptr inbounds i32, i32* %var1, i64 %_76, !dbg !4612
  store i32* %52, i32** %2, align 8, !dbg !4612
  %_3.i31 = load i32*, i32** %2, align 8, !dbg !4612
  br label %bb30, !dbg !4613

panic10:                                          ; preds = %bb28
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc379 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup, !dbg !4607

unreachable:                                      ; preds = %panic12, %panic11, %panic10
  unreachable

bb30:                                             ; preds = %bb29
  store i32 %_73.0, i32* %_3.i31, align 4, !dbg !4614
  %fresh6 = load i32, i32* %counter, align 4, !dbg !4615
  store i32 %fresh6, i32* %fresh6.dbg.spill, align 4, !dbg !4615
  call void @llvm.dbg.declare(metadata i32* %fresh6.dbg.spill, metadata !4532, metadata !DIExpression()), !dbg !4616
  %_79 = load i32, i32* %counter, align 4, !dbg !4617
  %53 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_79, i32 1), !dbg !4617
  %_80.0 = extractvalue { i32, i1 } %53, 0, !dbg !4617
  %_80.1 = extractvalue { i32, i1 } %53, 1, !dbg !4617
  %54 = call i1 @llvm.expect.i1(i1 %_80.1, i1 false), !dbg !4617
  br i1 %54, label %panic11, label %bb31, !dbg !4617

bb31:                                             ; preds = %bb30
  store i32 %_80.0, i32* %counter, align 4, !dbg !4618
  %_85 = load i32, i32* %i_0, align 4, !dbg !4619
  %_84 = sext i32 %_85 to i64, !dbg !4619
  store i32* %var1, i32** %self.dbg.spill.i27, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i27, metadata !3510, metadata !DIExpression()), !dbg !4620
  store i64 %_84, i64* %count.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i26, metadata !3513, metadata !DIExpression()), !dbg !4622
  %55 = getelementptr inbounds i32, i32* %var1, i64 %_84, !dbg !4623
  store i32* %55, i32** %3, align 8, !dbg !4623
  %_3.i28 = load i32*, i32** %3, align 8, !dbg !4623
  br label %bb32, !dbg !4624

panic11:                                          ; preds = %bb30
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc381 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup, !dbg !4617

bb32:                                             ; preds = %bb31
  %_81 = load i32, i32* %_3.i28, align 4, !dbg !4625
  %_88 = sext i32 %fresh6 to i64, !dbg !4626
  store i32* %buf, i32** %self.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i24, metadata !3510, metadata !DIExpression()), !dbg !4627
  store i64 %_88, i64* %count.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i23, metadata !3513, metadata !DIExpression()), !dbg !4629
  %56 = getelementptr inbounds i32, i32* %buf, i64 %_88, !dbg !4630
  store i32* %56, i32** %4, align 8, !dbg !4630
  %_3.i25 = load i32*, i32** %4, align 8, !dbg !4630
  br label %bb33, !dbg !4631

bb33:                                             ; preds = %bb32
  store i32 %_81, i32* %_3.i25, align 4, !dbg !4632
  %57 = load i32, i32* %i_0, align 4, !dbg !4633
  %58 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 1), !dbg !4633
  %_90.0 = extractvalue { i32, i1 } %58, 0, !dbg !4633
  %_90.1 = extractvalue { i32, i1 } %58, 1, !dbg !4633
  %59 = call i1 @llvm.expect.i1(i1 %_90.1, i1 false), !dbg !4633
  br i1 %59, label %panic12, label %bb34, !dbg !4633

bb34:                                             ; preds = %bb33
  store i32 %_90.0, i32* %i_0, align 4, !dbg !4633
  br label %bb27, !dbg !4603

panic12:                                          ; preds = %bb33
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc383 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup, !dbg !4633

bb36:                                             ; preds = %bb35
  store [4 x [5 x i32]]* %_102, [4 x [5 x i32]]** %self.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata [4 x [5 x i32]]** %self.dbg.spill.i13, metadata !4397, metadata !DIExpression()), !dbg !4634
  store i64 4, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !4402, metadata !DIExpression()), !dbg !4636
  %60 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %_102, i64 4, !dbg !4637
  store [4 x [5 x i32]]* %60, [4 x [5 x i32]]** %8, align 8, !dbg !4637
  %_3.i = load [4 x [5 x i32]]*, [4 x [5 x i32]]** %8, align 8, !dbg !4637
  br label %bb37, !dbg !4638

bb37:                                             ; preds = %bb36
  %_99.0 = bitcast [4 x [5 x i32]]* %_3.i to [0 x [5 x i32]]*, !dbg !4639
; invoke core::slice::<impl [T]>::as_mut_ptr
  %_98 = invoke [5 x i32]* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h36f4bc00422b1ce6E"([0 x [5 x i32]]* align 4 %_99.0, i64 4)
          to label %bb38 unwind label %cleanup, !dbg !4639

bb38:                                             ; preds = %bb37
  store [5 x i32]* %_98, [5 x i32]** %self.dbg.spill.i36, align 8
  call void @llvm.dbg.declare(metadata [5 x i32]** %self.dbg.spill.i36, metadata !4482, metadata !DIExpression()), !dbg !4640
  store i64 4, i64* %count.dbg.spill.i35, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i35, metadata !4487, metadata !DIExpression()), !dbg !4642
  %61 = getelementptr inbounds [5 x i32], [5 x i32]* %_98, i64 4, !dbg !4643
  store [5 x i32]* %61, [5 x i32]** %0, align 8, !dbg !4643
  %_3.i37 = load [5 x i32]*, [5 x i32]** %0, align 8, !dbg !4643
  br label %bb39, !dbg !4644

bb39:                                             ; preds = %bb38
  %_95.0 = bitcast [5 x i32]* %_3.i37 to [0 x i32]*, !dbg !4645
; invoke core::slice::<impl [T]>::as_mut_ptr
  %_94 = invoke i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h44bbeca8685a138cE"([0 x i32]* align 4 %_95.0, i64 5)
          to label %bb40 unwind label %cleanup, !dbg !4645

bb40:                                             ; preds = %bb39
  store i32* %_94, i32** %self.dbg.spill.i21, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i21, metadata !3510, metadata !DIExpression()), !dbg !4646
  store i64 5, i64* %count.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i20, metadata !3513, metadata !DIExpression()), !dbg !4648
  %62 = getelementptr inbounds i32, i32* %_94, i64 5, !dbg !4649
  store i32* %62, i32** %5, align 8, !dbg !4649
  %_3.i22 = load i32*, i32** %5, align 8, !dbg !4649
  br label %bb41, !dbg !4650

bb41:                                             ; preds = %bb40
  store i32* %_3.i22, i32** %past_end, align 8, !dbg !4651
  store i32* %var1, i32** %self.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i18, metadata !3510, metadata !DIExpression()), !dbg !4652
  store i64 8, i64* %count.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i17, metadata !3513, metadata !DIExpression()), !dbg !4654
  %63 = getelementptr inbounds i32, i32* %var1, i64 8, !dbg !4655
  store i32* %63, i32** %6, align 8, !dbg !4655
  %_3.i19 = load i32*, i32** %6, align 8, !dbg !4655
  br label %bb42, !dbg !4656

bb42:                                             ; preds = %bb41
  store i32* %_3.i19, i32** %past_end, align 8, !dbg !4657
; call core::ptr::drop_in_place<alloc::vec::Vec<i32>>
  call void @"_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17h7c47488e4f4ba9f1E"(%"alloc::vec::Vec<i32>"* %fresh5), !dbg !4600
  br label %bb43, !dbg !4600

abort:                                            ; preds = %bb44
  %64 = landingpad { i8*, i32 }
          cleanup, !dbg !4658
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #15, !dbg !4658
  unreachable, !dbg !4658

bb45:                                             ; preds = %bb44
  %65 = bitcast { i8*, i32 }* %9 to i8**, !dbg !4658
  %66 = load i8*, i8** %65, align 8, !dbg !4658
  %67 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %9, i32 0, i32 1, !dbg !4658
  %68 = load i32, i32* %67, align 8, !dbg !4658
  %69 = insertvalue { i8*, i32 } undef, i8* %66, 0, !dbg !4658
  %70 = insertvalue { i8*, i32 } %69, i32 %68, 1, !dbg !4658
  resume { i8*, i32 } %70, !dbg !4658

bb43:                                             ; preds = %bb42
  ret void, !dbg !4659
}

; Function Attrs: nonlazybind uwtable
define zeroext i1 @rust_check_some_ints() unnamed_addr #1 !dbg !4660 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i4 = alloca i64, align 8
  %self.dbg.spill.i5 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i32*, align 8
  %_2 = alloca i8, align 1
  %_1 = alloca i8, align 1
  %4 = alloca i8, align 1
; call core::slice::<impl [T]>::as_mut_ptr
  %_6 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hd816d9d6afa269d2E"([0 x i32]* align 4 bitcast (<{ [16 x i8] }>* @rust_SOME_INTS to [0 x i32]*), i64 0), !dbg !4665
  br label %bb10, !dbg !4665

bb10:                                             ; preds = %start
  store i32* %_6, i32** %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i8, metadata !4666, metadata !DIExpression()), !dbg !4672
  store i64 0, i64* %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i7, metadata !4671, metadata !DIExpression()), !dbg !4674
  store i32* %_6, i32** %0, align 8, !dbg !4675
  %_3.i9 = load i32*, i32** %0, align 8, !dbg !4675
  br label %bb11, !dbg !4665

bb11:                                             ; preds = %bb10
  %_4 = load i32, i32* %_3.i9, align 4, !dbg !4676
  %_3 = icmp eq i32 %_4, 2, !dbg !4676
  br i1 %_3, label %bb8, label %bb7, !dbg !4676

bb7:                                              ; preds = %bb11
  store i8 0, i8* %_2, align 1, !dbg !4676
  br label %bb9, !dbg !4676

bb8:                                              ; preds = %bb11
; call core::slice::<impl [T]>::as_mut_ptr
  %_15 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hd816d9d6afa269d2E"([0 x i32]* align 4 bitcast (<{ [16 x i8] }>* @rust_SOME_INTS to [0 x i32]*), i64 0), !dbg !4677
  br label %bb12, !dbg !4677

bb12:                                             ; preds = %bb8
  store i32* %_15, i32** %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i5, metadata !4666, metadata !DIExpression()), !dbg !4678
  store i64 1, i64* %count.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i4, metadata !4671, metadata !DIExpression()), !dbg !4680
  %5 = getelementptr inbounds i32, i32* %_15, i64 1, !dbg !4681
  store i32* %5, i32** %1, align 8, !dbg !4681
  %_3.i6 = load i32*, i32** %1, align 8, !dbg !4681
  br label %bb13, !dbg !4677

bb13:                                             ; preds = %bb12
  %_13 = load i32, i32* %_3.i6, align 4, !dbg !4682
  %_12 = icmp eq i32 %_13, 0, !dbg !4682
  %6 = zext i1 %_12 to i8, !dbg !4676
  store i8 %6, i8* %_2, align 1, !dbg !4676
  br label %bb9, !dbg !4676

bb9:                                              ; preds = %bb7, %bb13
  %7 = load i8, i8* %_2, align 1, !dbg !4676, !range !245, !noundef !140
  %8 = trunc i8 %7 to i1, !dbg !4676
  br i1 %8, label %bb5, label %bb4, !dbg !4676

bb4:                                              ; preds = %bb9
  store i8 0, i8* %_1, align 1, !dbg !4676
  br label %bb6, !dbg !4676

bb5:                                              ; preds = %bb9
; call core::slice::<impl [T]>::as_mut_ptr
  %_24 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hd816d9d6afa269d2E"([0 x i32]* align 4 bitcast (<{ [16 x i8] }>* @rust_SOME_INTS to [0 x i32]*), i64 0), !dbg !4683
  br label %bb14, !dbg !4683

bb14:                                             ; preds = %bb5
  store i32* %_24, i32** %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i2, metadata !4666, metadata !DIExpression()), !dbg !4684
  store i64 2, i64* %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i1, metadata !4671, metadata !DIExpression()), !dbg !4686
  %9 = getelementptr inbounds i32, i32* %_24, i64 2, !dbg !4687
  store i32* %9, i32** %2, align 8, !dbg !4687
  %_3.i3 = load i32*, i32** %2, align 8, !dbg !4687
  br label %bb15, !dbg !4683

bb15:                                             ; preds = %bb14
  %_22 = load i32, i32* %_3.i3, align 4, !dbg !4688
  %_21 = icmp eq i32 %_22, 1, !dbg !4688
  %10 = zext i1 %_21 to i8, !dbg !4676
  store i8 %10, i8* %_1, align 1, !dbg !4676
  br label %bb6, !dbg !4676

bb6:                                              ; preds = %bb4, %bb15
  %11 = load i8, i8* %_1, align 1, !dbg !4676, !range !245, !noundef !140
  %12 = trunc i8 %11 to i1, !dbg !4676
  br i1 %12, label %bb2, label %bb1, !dbg !4676

bb1:                                              ; preds = %bb6
  store i8 0, i8* %4, align 1, !dbg !4676
  br label %bb3, !dbg !4676

bb2:                                              ; preds = %bb6
; call core::slice::<impl [T]>::as_mut_ptr
  %_33 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hd816d9d6afa269d2E"([0 x i32]* align 4 bitcast (<{ [16 x i8] }>* @rust_SOME_INTS to [0 x i32]*), i64 0), !dbg !4689
  br label %bb16, !dbg !4689

bb16:                                             ; preds = %bb2
  store i32* %_33, i32** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i, metadata !4666, metadata !DIExpression()), !dbg !4690
  store i64 3, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !4671, metadata !DIExpression()), !dbg !4692
  %13 = getelementptr inbounds i32, i32* %_33, i64 3, !dbg !4693
  store i32* %13, i32** %3, align 8, !dbg !4693
  %_3.i = load i32*, i32** %3, align 8, !dbg !4693
  br label %bb17, !dbg !4689

bb17:                                             ; preds = %bb16
  %_31 = load i32, i32* %_3.i, align 4, !dbg !4694
  %_30 = icmp eq i32 %_31, 8, !dbg !4694
  %14 = zext i1 %_30 to i8, !dbg !4676
  store i8 %14, i8* %4, align 1, !dbg !4676
  br label %bb3, !dbg !4676

bb3:                                              ; preds = %bb1, %bb17
  %15 = load i8, i8* %4, align 1, !dbg !4695, !range !245, !noundef !140
  %16 = trunc i8 %15 to i1, !dbg !4695
  ret i1 %16, !dbg !4695
}

; Function Attrs: nonlazybind uwtable
define %"incomplete_arrays::sized_array"* @rust_new_sized_array(i64 %n) unnamed_addr #1 !dbg !4696 {
start:
  %rhs.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %res.dbg.spill = alloca %"incomplete_arrays::sized_array"*, align 8
  %sz.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !4708, metadata !DIExpression()), !dbg !4713
  br label %bb1, !dbg !4714

bb1:                                              ; preds = %start
  br label %bb2, !dbg !4715

bb2:                                              ; preds = %bb1
  store i64 %n, i64* %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i2, metadata !4587, metadata !DIExpression()), !dbg !4716
  store i64 4, i64* %rhs.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i1, metadata !4593, metadata !DIExpression()), !dbg !4718
  %0 = mul i64 %n, 4, !dbg !4719
  br label %bb3, !dbg !4720

bb3:                                              ; preds = %bb2
  store i64 8, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !4721, metadata !DIExpression()), !dbg !4725
  store i64 %0, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !4724, metadata !DIExpression()), !dbg !4727
  %1 = add i64 8, %0, !dbg !4728
  store i64 %1, i64* %sz.dbg.spill, align 8, !dbg !4729
  call void @llvm.dbg.declare(metadata i64* %sz.dbg.spill, metadata !4709, metadata !DIExpression()), !dbg !4730
  br label %bb4, !dbg !4729

bb4:                                              ; preds = %bb3
  %_9 = call i8* @malloc(i64 %1), !dbg !4731
  br label %bb5, !dbg !4731

bb5:                                              ; preds = %bb4
  %res = bitcast i8* %_9 to %"incomplete_arrays::sized_array"*, !dbg !4731
  store %"incomplete_arrays::sized_array"* %res, %"incomplete_arrays::sized_array"** %res.dbg.spill, align 8, !dbg !4731
  call void @llvm.dbg.declare(metadata %"incomplete_arrays::sized_array"** %res.dbg.spill, metadata !4711, metadata !DIExpression()), !dbg !4732
  %2 = bitcast %"incomplete_arrays::sized_array"* %res to i64*, !dbg !4733
  store i64 %n, i64* %2, align 8, !dbg !4733
  ret %"incomplete_arrays::sized_array"* %res, !dbg !4734
}

; Function Attrs: nonlazybind uwtable
define i32 @rust_sized_array_sum_last_n(%"incomplete_arrays::sized_array"* %a, i64 %n) unnamed_addr #1 !dbg !4735 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i5 = alloca i32*, align 8
  %rhs.dbg.spill.i3 = alloca i64, align 8
  %self.dbg.spill.i4 = alloca i64, align 8
  %rhs.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i32, align 4
  %self.dbg.spill.i = alloca i32, align 4
  %n.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca %"incomplete_arrays::sized_array"*, align 8
  %i = alloca i64, align 8
  %acc = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %acc, metadata !4741, metadata !DIExpression()), !dbg !4745
  store %"incomplete_arrays::sized_array"* %a, %"incomplete_arrays::sized_array"** %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"incomplete_arrays::sized_array"** %a.dbg.spill, metadata !4739, metadata !DIExpression()), !dbg !4746
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !4740, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4743, metadata !DIExpression()), !dbg !4748
  store i32 0, i32* %acc, align 4, !dbg !4749
  %1 = bitcast %"incomplete_arrays::sized_array"* %a to i64*, !dbg !4750
  %_4 = load i64, i64* %1, align 8, !dbg !4750
  store i64 %_4, i64* %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i4, metadata !4751, metadata !DIExpression()), !dbg !4755
  store i64 %n, i64* %rhs.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i3, metadata !4754, metadata !DIExpression()), !dbg !4757
  %2 = sub i64 %_4, %n, !dbg !4758
  store i64 %2, i64* %i, align 8, !dbg !4750
  br label %bb1, !dbg !4750

bb1:                                              ; preds = %bb6, %start
  %_7 = load i64, i64* %i, align 8, !dbg !4759
  %3 = bitcast %"incomplete_arrays::sized_array"* %a to i64*, !dbg !4760
  %_8 = load i64, i64* %3, align 8, !dbg !4760
  %_6 = icmp ult i64 %_7, %_8, !dbg !4759
  br i1 %_6, label %bb2, label %bb7, !dbg !4759

bb7:                                              ; preds = %bb1
  %4 = load i32, i32* %acc, align 4, !dbg !4761
  ret i32 %4, !dbg !4761

bb2:                                              ; preds = %bb1
  %_10 = load i32, i32* %acc, align 4, !dbg !4762
  %_15 = getelementptr inbounds %"incomplete_arrays::sized_array", %"incomplete_arrays::sized_array"* %a, i32 0, i32 1, !dbg !4763
; call core::slice::<impl [T]>::as_mut_ptr
  %_13 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hd816d9d6afa269d2E"([0 x i32]* align 4 %_15, i64 0), !dbg !4763
  br label %bb3, !dbg !4763

bb3:                                              ; preds = %bb2
  %_17 = load i64, i64* %i, align 8, !dbg !4764
  store i32* %_13, i32** %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i5, metadata !4666, metadata !DIExpression()), !dbg !4765
  store i64 %_17, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !4671, metadata !DIExpression()), !dbg !4767
  %5 = getelementptr inbounds i32, i32* %_13, i64 %_17, !dbg !4768
  store i32* %5, i32** %0, align 8, !dbg !4768
  %_3.i = load i32*, i32** %0, align 8, !dbg !4768
  br label %bb4, !dbg !4763

bb4:                                              ; preds = %bb3
  %_11 = load i32, i32* %_3.i, align 4, !dbg !4769
  store i32 %_10, i32* %self.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill.i, metadata !4770, metadata !DIExpression()), !dbg !4777
  store i32 %_11, i32* %rhs.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata i32* %rhs.dbg.spill.i, metadata !4776, metadata !DIExpression()), !dbg !4779
  %6 = add i32 %_10, %_11, !dbg !4780
  br label %bb5, !dbg !4762

bb5:                                              ; preds = %bb4
  store i32 %6, i32* %acc, align 4, !dbg !4781
  %_19 = load i64, i64* %i, align 8, !dbg !4782
  store i64 %_19, i64* %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i2, metadata !4721, metadata !DIExpression()), !dbg !4783
  store i64 1, i64* %rhs.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i1, metadata !4724, metadata !DIExpression()), !dbg !4785
  %7 = add i64 %_19, 1, !dbg !4786
  br label %bb6, !dbg !4782

bb6:                                              ; preds = %bb5
  store i64 %7, i64* %i, align 8, !dbg !4787
  br label %bb1, !dbg !4788
}

; Function Attrs: nonlazybind uwtable
define i32 @rust_test_sized_array() unnamed_addr #1 !dbg !4789 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i32*, align 8
  %sum.dbg.spill = alloca i32, align 4
  %a.dbg.spill = alloca %"incomplete_arrays::sized_array"*, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4795, metadata !DIExpression()), !dbg !4799
  %a = call %"incomplete_arrays::sized_array"* @rust_new_sized_array(i64 10), !dbg !4800
  store %"incomplete_arrays::sized_array"* %a, %"incomplete_arrays::sized_array"** %a.dbg.spill, align 8, !dbg !4800
  call void @llvm.dbg.declare(metadata %"incomplete_arrays::sized_array"** %a.dbg.spill, metadata !4793, metadata !DIExpression()), !dbg !4801
  br label %bb1, !dbg !4800

bb1:                                              ; preds = %start
  store i32 0, i32* %i, align 4, !dbg !4802
  br label %bb2, !dbg !4803

bb2:                                              ; preds = %bb6, %bb1
  %_5 = load i32, i32* %i, align 4, !dbg !4804
  %_4 = icmp slt i32 %_5, 10, !dbg !4804
  br i1 %_4, label %bb3, label %bb7, !dbg !4804

bb7:                                              ; preds = %bb2
  %sum = call i32 @rust_sized_array_sum_last_n(%"incomplete_arrays::sized_array"* %a, i64 4), !dbg !4805
  store i32 %sum, i32* %sum.dbg.spill, align 4, !dbg !4805
  call void @llvm.dbg.declare(metadata i32* %sum.dbg.spill, metadata !4797, metadata !DIExpression()), !dbg !4806
  br label %bb8, !dbg !4805

bb3:                                              ; preds = %bb2
  %_7 = load i32, i32* %i, align 4, !dbg !4807
  %_11 = getelementptr inbounds %"incomplete_arrays::sized_array", %"incomplete_arrays::sized_array"* %a, i32 0, i32 1, !dbg !4808
; call core::slice::<impl [T]>::as_mut_ptr
  %_9 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hd816d9d6afa269d2E"([0 x i32]* align 4 %_11, i64 0), !dbg !4808
  br label %bb4, !dbg !4808

bb4:                                              ; preds = %bb3
  %_13 = load i32, i32* %i, align 4, !dbg !4809
  %_12 = sext i32 %_13 to i64, !dbg !4809
  store i32* %_9, i32** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i, metadata !4666, metadata !DIExpression()), !dbg !4810
  store i64 %_12, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !4671, metadata !DIExpression()), !dbg !4812
  %1 = getelementptr inbounds i32, i32* %_9, i64 %_12, !dbg !4813
  store i32* %1, i32** %0, align 8, !dbg !4813
  %_3.i = load i32*, i32** %0, align 8, !dbg !4813
  br label %bb5, !dbg !4808

bb5:                                              ; preds = %bb4
  store i32 %_7, i32* %_3.i, align 4, !dbg !4814
  %2 = load i32, i32* %i, align 4, !dbg !4815
  %3 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 1), !dbg !4815
  %_14.0 = extractvalue { i32, i1 } %3, 0, !dbg !4815
  %_14.1 = extractvalue { i32, i1 } %3, 1, !dbg !4815
  %4 = call i1 @llvm.expect.i1(i1 %_14.1, i1 false), !dbg !4815
  br i1 %4, label %panic, label %bb6, !dbg !4815

bb6:                                              ; preds = %bb5
  store i32 %_14.0, i32* %i, align 4, !dbg !4815
  br label %bb2, !dbg !4803

panic:                                            ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc385 to %"core::panic::location::Location"*)) #17, !dbg !4815
  unreachable, !dbg !4815

bb8:                                              ; preds = %bb7
  %_18 = bitcast %"incomplete_arrays::sized_array"* %a to i8*, !dbg !4816
  call void @free(i8* %_18), !dbg !4817
  br label %bb9, !dbg !4817

bb9:                                              ; preds = %bb8
  ret i32 %sum, !dbg !4818
}

; Function Attrs: nonlazybind uwtable
define void @rust_entry2(i32 %buffer_size, i32* %buffer) unnamed_addr #1 !dbg !4819 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i4 = alloca i64, align 8
  %self.dbg.spill.i5 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i32*, align 8
  %cx.dbg.spill = alloca i32, align 4
  %p_carr.dbg.spill = alloca [0 x i32]*, align 8
  %x.dbg.spill = alloca i32, align 4
  %p_arr.dbg.spill = alloca [0 x i32]*, align 8
  %buffer.dbg.spill = alloca i32*, align 8
  %buffer_size.dbg.spill = alloca i32, align 4
  %carr = alloca [3 x i32], align 4
  %arr = alloca [3 x i32], align 4
  store i32 %buffer_size, i32* %buffer_size.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_size.dbg.spill, metadata !4821, metadata !DIExpression()), !dbg !4838
  store i32* %buffer, i32** %buffer.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %buffer.dbg.spill, metadata !4822, metadata !DIExpression()), !dbg !4839
  call void @llvm.dbg.declare(metadata [3 x i32]* %arr, metadata !4823, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.declare(metadata [3 x i32]* %carr, metadata !4831, metadata !DIExpression()), !dbg !4841
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* %arr, i64 0, i64 0, !dbg !4842
  store i32 1, i32* %4, align 4, !dbg !4842
  %5 = getelementptr inbounds [3 x i32], [3 x i32]* %arr, i64 0, i64 1, !dbg !4842
  store i32 2, i32* %5, align 4, !dbg !4842
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* %arr, i64 0, i64 2, !dbg !4842
  store i32 3, i32* %6, align 4, !dbg !4842
  %p_arr = bitcast [3 x i32]* %arr to [0 x i32]*, !dbg !4843
  store [0 x i32]* %p_arr, [0 x i32]** %p_arr.dbg.spill, align 8, !dbg !4843
  call void @llvm.dbg.declare(metadata [0 x i32]** %p_arr.dbg.spill, metadata !4825, metadata !DIExpression()), !dbg !4844
; call core::slice::<impl [T]>::as_mut_ptr
  %_12 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h44bbeca8685a138cE"([0 x i32]* align 4 %p_arr, i64 0), !dbg !4845
  br label %bb1, !dbg !4845

bb1:                                              ; preds = %start
  store i32* %_12, i32** %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i5, metadata !3510, metadata !DIExpression()), !dbg !4846
  store i64 0, i64* %count.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i4, metadata !3513, metadata !DIExpression()), !dbg !4848
  store i32* %_12, i32** %1, align 8, !dbg !4849
  %_3.i6 = load i32*, i32** %1, align 8, !dbg !4849
  br label %bb2, !dbg !4845

bb2:                                              ; preds = %bb1
  %x = load i32, i32* %_3.i6, align 4, !dbg !4850
  store i32 %x, i32* %x.dbg.spill, align 4, !dbg !4850
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill, metadata !4829, metadata !DIExpression()), !dbg !4851
  store i32* %buffer, i32** %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i2, metadata !3510, metadata !DIExpression()), !dbg !4852
  store i64 0, i64* %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i1, metadata !3513, metadata !DIExpression()), !dbg !4854
  store i32* %buffer, i32** %2, align 8, !dbg !4855
  %_3.i3 = load i32*, i32** %2, align 8, !dbg !4855
  br label %bb3, !dbg !4856

bb3:                                              ; preds = %bb2
  store i32 %x, i32* %_3.i3, align 4, !dbg !4857
  %7 = getelementptr inbounds [3 x i32], [3 x i32]* %carr, i64 0, i64 0, !dbg !4858
  store i32 1, i32* %7, align 4, !dbg !4858
  %8 = getelementptr inbounds [3 x i32], [3 x i32]* %carr, i64 0, i64 1, !dbg !4858
  store i32 2, i32* %8, align 4, !dbg !4858
  %9 = getelementptr inbounds [3 x i32], [3 x i32]* %carr, i64 0, i64 2, !dbg !4858
  store i32 3, i32* %9, align 4, !dbg !4858
  %p_carr = bitcast [3 x i32]* %carr to [0 x i32]*, !dbg !4859
  store [0 x i32]* %p_carr, [0 x i32]** %p_carr.dbg.spill, align 8, !dbg !4859
  call void @llvm.dbg.declare(metadata [0 x i32]** %p_carr.dbg.spill, metadata !4833, metadata !DIExpression()), !dbg !4860
; call core::slice::<impl [T]>::as_ptr
  %_29 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hc19f3106568bca55E"([0 x i32]* align 4 %p_carr, i64 0), !dbg !4861
  br label %bb4, !dbg !4861

bb4:                                              ; preds = %bb3
  store i32* %_29, i32** %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i8, metadata !4862, metadata !DIExpression()), !dbg !4871
  store i64 0, i64* %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i7, metadata !4870, metadata !DIExpression()), !dbg !4873
  store i32* %_29, i32** %0, align 8, !dbg !4874
  %10 = load i32*, i32** %0, align 8, !dbg !4874
  br label %bb5, !dbg !4861

bb5:                                              ; preds = %bb4
  %cx = load i32, i32* %10, align 4, !dbg !4875
  store i32 %cx, i32* %cx.dbg.spill, align 4, !dbg !4875
  call void @llvm.dbg.declare(metadata i32* %cx.dbg.spill, metadata !4836, metadata !DIExpression()), !dbg !4876
  store i32* %buffer, i32** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i, metadata !3510, metadata !DIExpression()), !dbg !4877
  store i64 1, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !3513, metadata !DIExpression()), !dbg !4879
  %11 = getelementptr inbounds i32, i32* %buffer, i64 1, !dbg !4880
  store i32* %11, i32** %3, align 8, !dbg !4880
  %_3.i = load i32*, i32** %3, align 8, !dbg !4880
  br label %bb6, !dbg !4881

bb6:                                              ; preds = %bb5
  store i32 %cx, i32* %_3.i, align 4, !dbg !4882
  ret void, !dbg !4883
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #4

; Function Attrs: nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #4

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; core::panicking::panic_no_unwind
; Function Attrs: cold noinline noreturn nounwind nonlazybind uwtable
declare void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() unnamed_addr #7

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #8

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #9

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc(i64, i64) unnamed_addr #9

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_realloc(i8*, i64, i64, i64) unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #10

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64, i64) unnamed_addr #11

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() unnamed_addr #12

; Function Attrs: nounwind nonlazybind uwtable
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #9

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #4

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1, i64, %"core::panic::location::Location"* align 8) unnamed_addr #13

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.smul.with.overflow.i32(i32, i32) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #4

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #13

; Function Attrs: nonlazybind uwtable
declare i8* @malloc(i64) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare void @free(i8*) unnamed_addr #1

attributes #0 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { noinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #3 = { cold nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #4 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #5 = { argmemonly nofree nounwind willreturn }
attributes #6 = { nofree nosync nounwind readnone willreturn }
attributes #7 = { cold noinline noreturn nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #8 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #9 = { nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #10 = { argmemonly nofree nounwind willreturn writeonly }
attributes #11 = { cold noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #12 = { noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #13 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #14 = { noinline }
attributes #15 = { noinline noreturn nounwind }
attributes #16 = { nounwind }
attributes #17 = { noreturn }

!llvm.module.flags = !{!22, !23, !24, !25}
!llvm.dbg.cu = !{!26}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "SOME_INTS", scope: !2, file: !4, line: 22, type: !5, isLocal: false, isDefinition: true, align: 32)
!2 = !DINamespace(name: "test_arrays", scope: !3)
!3 = !DINamespace(name: "array_tests", scope: null)
!4 = !DIFile(filename: "src/test_arrays.rs", directory: "/home/calvin/git/c2rust/tests/arrays", checksumkind: CSK_MD5, checksum: "d9a909f94dbfde5953d7cce3c9f9e83e")
!5 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 128, align: 32, elements: !7)
!6 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!7 = !{!8}
!8 = !DISubrange(count: 4, lowerBound: 0)
!9 = !DIGlobalVariableExpression(var: !10, expr: !DIExpression())
!10 = distinct !DIGlobalVariable(name: "rust_SOME_INTS", scope: !2, file: !4, line: 24, type: !5, isLocal: false, isDefinition: true, align: 32)
!11 = !DIGlobalVariableExpression(var: !12, expr: !DIExpression())
!12 = distinct !DIGlobalVariable(name: "rust_simple", linkageName: "_ZN11array_tests6arrays11rust_simple17h51c03bc5d8c0d344E", scope: !13, file: !14, line: 17, type: !15, isLocal: true, isDefinition: true, align: 8)
!13 = !DINamespace(name: "arrays", scope: !3)
!14 = !DIFile(filename: "src/arrays.rs", directory: "/home/calvin/git/c2rust/tests/arrays", checksumkind: CSK_MD5, checksum: "c3638297c2a6eedad2307cb809a8b356")
!15 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 72, align: 8, elements: !17)
!16 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!17 = !{!18}
!18 = !DISubrange(count: 9, lowerBound: 0)
!19 = !DIGlobalVariableExpression(var: !20, expr: !DIExpression())
!20 = distinct !DIGlobalVariable(name: "rust_foo", linkageName: "_ZN11array_tests6arrays8rust_foo17h75da38f065933bfaE", scope: !13, file: !14, line: 20, type: !21, isLocal: true, isDefinition: true, align: 64)
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut i8", baseType: !16, size: 64, align: 64, dwarfAddressSpace: 0)
!22 = !{i32 7, !"PIC Level", i32 2}
!23 = !{i32 2, !"RtLibUseGOT", i32 1}
!24 = !{i32 2, !"Dwarf Version", i32 4}
!25 = !{i32 2, !"Debug Info Version", i32 3}
!26 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !27, producer: "clang LLVM (rustc version 1.65.0-nightly (d394408fb 2022-08-07))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !28, globals: !119)
!27 = !DIFile(filename: "src/lib.rs/@/bd5x83h89eiqhu6", directory: "/home/calvin/git/c2rust/tests/arrays")
!28 = !{!29, !100, !106, !113}
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ValidAlignEnum64", scope: !31, file: !30, baseType: !34, size: 64, align: 64, flags: DIFlagEnumClass, elements: !35)
!30 = !DIFile(filename: "<unknown>", directory: "")
!31 = !DINamespace(name: "valid_align", scope: !32)
!32 = !DINamespace(name: "mem", scope: !33)
!33 = !DINamespace(name: "core", scope: null)
!34 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!35 = !{!36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99}
!36 = !DIEnumerator(name: "_Align1Shl0", value: 1, isUnsigned: true)
!37 = !DIEnumerator(name: "_Align1Shl1", value: 2, isUnsigned: true)
!38 = !DIEnumerator(name: "_Align1Shl2", value: 4, isUnsigned: true)
!39 = !DIEnumerator(name: "_Align1Shl3", value: 8, isUnsigned: true)
!40 = !DIEnumerator(name: "_Align1Shl4", value: 16, isUnsigned: true)
!41 = !DIEnumerator(name: "_Align1Shl5", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "_Align1Shl6", value: 64, isUnsigned: true)
!43 = !DIEnumerator(name: "_Align1Shl7", value: 128, isUnsigned: true)
!44 = !DIEnumerator(name: "_Align1Shl8", value: 256, isUnsigned: true)
!45 = !DIEnumerator(name: "_Align1Shl9", value: 512, isUnsigned: true)
!46 = !DIEnumerator(name: "_Align1Shl10", value: 1024, isUnsigned: true)
!47 = !DIEnumerator(name: "_Align1Shl11", value: 2048, isUnsigned: true)
!48 = !DIEnumerator(name: "_Align1Shl12", value: 4096, isUnsigned: true)
!49 = !DIEnumerator(name: "_Align1Shl13", value: 8192, isUnsigned: true)
!50 = !DIEnumerator(name: "_Align1Shl14", value: 16384, isUnsigned: true)
!51 = !DIEnumerator(name: "_Align1Shl15", value: 32768, isUnsigned: true)
!52 = !DIEnumerator(name: "_Align1Shl16", value: 65536, isUnsigned: true)
!53 = !DIEnumerator(name: "_Align1Shl17", value: 131072, isUnsigned: true)
!54 = !DIEnumerator(name: "_Align1Shl18", value: 262144, isUnsigned: true)
!55 = !DIEnumerator(name: "_Align1Shl19", value: 524288, isUnsigned: true)
!56 = !DIEnumerator(name: "_Align1Shl20", value: 1048576, isUnsigned: true)
!57 = !DIEnumerator(name: "_Align1Shl21", value: 2097152, isUnsigned: true)
!58 = !DIEnumerator(name: "_Align1Shl22", value: 4194304, isUnsigned: true)
!59 = !DIEnumerator(name: "_Align1Shl23", value: 8388608, isUnsigned: true)
!60 = !DIEnumerator(name: "_Align1Shl24", value: 16777216, isUnsigned: true)
!61 = !DIEnumerator(name: "_Align1Shl25", value: 33554432, isUnsigned: true)
!62 = !DIEnumerator(name: "_Align1Shl26", value: 67108864, isUnsigned: true)
!63 = !DIEnumerator(name: "_Align1Shl27", value: 134217728, isUnsigned: true)
!64 = !DIEnumerator(name: "_Align1Shl28", value: 268435456, isUnsigned: true)
!65 = !DIEnumerator(name: "_Align1Shl29", value: 536870912, isUnsigned: true)
!66 = !DIEnumerator(name: "_Align1Shl30", value: 1073741824, isUnsigned: true)
!67 = !DIEnumerator(name: "_Align1Shl31", value: 2147483648, isUnsigned: true)
!68 = !DIEnumerator(name: "_Align1Shl32", value: 4294967296, isUnsigned: true)
!69 = !DIEnumerator(name: "_Align1Shl33", value: 8589934592, isUnsigned: true)
!70 = !DIEnumerator(name: "_Align1Shl34", value: 17179869184, isUnsigned: true)
!71 = !DIEnumerator(name: "_Align1Shl35", value: 34359738368, isUnsigned: true)
!72 = !DIEnumerator(name: "_Align1Shl36", value: 68719476736, isUnsigned: true)
!73 = !DIEnumerator(name: "_Align1Shl37", value: 137438953472, isUnsigned: true)
!74 = !DIEnumerator(name: "_Align1Shl38", value: 274877906944, isUnsigned: true)
!75 = !DIEnumerator(name: "_Align1Shl39", value: 549755813888, isUnsigned: true)
!76 = !DIEnumerator(name: "_Align1Shl40", value: 1099511627776, isUnsigned: true)
!77 = !DIEnumerator(name: "_Align1Shl41", value: 2199023255552, isUnsigned: true)
!78 = !DIEnumerator(name: "_Align1Shl42", value: 4398046511104, isUnsigned: true)
!79 = !DIEnumerator(name: "_Align1Shl43", value: 8796093022208, isUnsigned: true)
!80 = !DIEnumerator(name: "_Align1Shl44", value: 17592186044416, isUnsigned: true)
!81 = !DIEnumerator(name: "_Align1Shl45", value: 35184372088832, isUnsigned: true)
!82 = !DIEnumerator(name: "_Align1Shl46", value: 70368744177664, isUnsigned: true)
!83 = !DIEnumerator(name: "_Align1Shl47", value: 140737488355328, isUnsigned: true)
!84 = !DIEnumerator(name: "_Align1Shl48", value: 281474976710656, isUnsigned: true)
!85 = !DIEnumerator(name: "_Align1Shl49", value: 562949953421312, isUnsigned: true)
!86 = !DIEnumerator(name: "_Align1Shl50", value: 1125899906842624, isUnsigned: true)
!87 = !DIEnumerator(name: "_Align1Shl51", value: 2251799813685248, isUnsigned: true)
!88 = !DIEnumerator(name: "_Align1Shl52", value: 4503599627370496, isUnsigned: true)
!89 = !DIEnumerator(name: "_Align1Shl53", value: 9007199254740992, isUnsigned: true)
!90 = !DIEnumerator(name: "_Align1Shl54", value: 18014398509481984, isUnsigned: true)
!91 = !DIEnumerator(name: "_Align1Shl55", value: 36028797018963968, isUnsigned: true)
!92 = !DIEnumerator(name: "_Align1Shl56", value: 72057594037927936, isUnsigned: true)
!93 = !DIEnumerator(name: "_Align1Shl57", value: 144115188075855872, isUnsigned: true)
!94 = !DIEnumerator(name: "_Align1Shl58", value: 288230376151711744, isUnsigned: true)
!95 = !DIEnumerator(name: "_Align1Shl59", value: 576460752303423488, isUnsigned: true)
!96 = !DIEnumerator(name: "_Align1Shl60", value: 1152921504606846976, isUnsigned: true)
!97 = !DIEnumerator(name: "_Align1Shl61", value: 2305843009213693952, isUnsigned: true)
!98 = !DIEnumerator(name: "_Align1Shl62", value: 4611686018427387904, isUnsigned: true)
!99 = !DIEnumerator(name: "_Align1Shl63", value: 9223372036854775808, isUnsigned: true)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !101, file: !30, baseType: !16, size: 8, align: 8, flags: DIFlagEnumClass, elements: !102)
!101 = !DINamespace(name: "cmp", scope: !33)
!102 = !{!103, !104, !105}
!103 = !DIEnumerator(name: "Less", value: 255)
!104 = !DIEnumerator(name: "Equal", value: 0)
!105 = !DIEnumerator(name: "Greater", value: 1)
!106 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !107, file: !30, baseType: !108, size: 8, align: 8, flags: DIFlagEnumClass, elements: !109)
!107 = !DINamespace(name: "panicking", scope: !33)
!108 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!109 = !{!110, !111, !112}
!110 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!112 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AllocInit", scope: !114, file: !30, baseType: !108, size: 8, align: 8, flags: DIFlagEnumClass, elements: !116)
!114 = !DINamespace(name: "raw_vec", scope: !115)
!115 = !DINamespace(name: "alloc", scope: null)
!116 = !{!117, !118}
!117 = !DIEnumerator(name: "Uninitialized", value: 0, isUnsigned: true)
!118 = !DIEnumerator(name: "Zeroed", value: 1, isUnsigned: true)
!119 = !{!0, !9, !11, !19}
!120 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h90c671efbcbc3846E", scope: !122, file: !121, line: 770, type: !125, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !141)
!121 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "856acc92efd7925b83dd1e3c577ddbdc")
!122 = !DINamespace(name: "{impl#16}", scope: !123)
!123 = !DINamespace(name: "non_null", scope: !124)
!124 = !DINamespace(name: "ptr", scope: !33)
!125 = !DISubroutineType(types: !126)
!126 = !{!127, !133}
!127 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !123, file: !30, size: 64, align: 64, elements: !128, templateParams: !131, identifier: "3160283ea80cecf6149fff38a2e996de")
!128 = !{!129}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !127, file: !30, baseType: !130, size: 64, align: 64)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !108, size: 64, align: 64, dwarfAddressSpace: 0)
!131 = !{!132}
!132 = !DITemplateTypeParameter(name: "T", type: !108)
!133 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<u8>", scope: !134, file: !30, size: 64, align: 64, elements: !135, templateParams: !131, identifier: "7e72c5db004520f6d0779c7d4ace2142")
!134 = !DINamespace(name: "unique", scope: !124)
!135 = !{!136, !137}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !133, file: !30, baseType: !127, size: 64, align: 64)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !133, file: !30, baseType: !138, align: 8)
!138 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<u8>", scope: !139, file: !30, align: 8, elements: !140, templateParams: !131, identifier: "e338a8151f1037c76eadd10ab3c53972")
!139 = !DINamespace(name: "marker", scope: !33)
!140 = !{}
!141 = !{!142}
!142 = !DILocalVariable(name: "unique", arg: 1, scope: !120, file: !121, line: 770, type: !133)
!143 = !DILocation(line: 770, column: 13, scope: !120)
!144 = !DILocation(line: 773, column: 41, scope: !120)
!145 = !DILocalVariable(name: "self", scope: !146, file: !121, line: 773, type: !133, align: 8)
!146 = !DILexicalBlockFile(scope: !147, file: !121, discriminator: 0)
!147 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h198983d896b042acE", scope: !133, file: !148, line: 103, type: !149, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !152)
!148 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/unique.rs", directory: "", checksumkind: CSK_MD5, checksum: "acdefab5f14df6e5aef1141fd6b768c9")
!149 = !DISubroutineType(types: !150)
!150 = !{!151, !133}
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !108, size: 64, align: 64, dwarfAddressSpace: 0)
!152 = !{!145}
!153 = !DILocation(line: 773, column: 41, scope: !146, inlinedAt: !144)
!154 = !DILocalVariable(name: "self", scope: !155, file: !121, line: 773, type: !127, align: 8)
!155 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6e433918dc590b4bE", scope: !127, file: !121, line: 330, type: !156, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !158)
!156 = !DISubroutineType(types: !157)
!157 = !{!151, !127}
!158 = !{!154}
!159 = !DILocation(line: 773, column: 41, scope: !155, inlinedAt: !160)
!160 = !DILocation(line: 104, column: 9, scope: !147, inlinedAt: !144)
!161 = !DILocalVariable(name: "ptr", scope: !162, file: !121, line: 773, type: !151, align: 8)
!162 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h34d07e24ca4007b4E", scope: !127, file: !121, line: 196, type: !163, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !165)
!163 = !DISubroutineType(types: !164)
!164 = !{!127, !151}
!165 = !{!161}
!166 = !DILocation(line: 773, column: 18, scope: !162, inlinedAt: !167)
!167 = !DILocation(line: 773, column: 18, scope: !120)
!168 = !DILocation(line: 774, column: 6, scope: !120)
!169 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h07c1f08a15bfc68eE", scope: !171, file: !170, line: 116, type: !173, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !201)
!170 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/collections/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "9cfb71cd3b32f7eb830f45a756b00675")
!171 = !DINamespace(name: "{impl#1}", scope: !172)
!172 = !DINamespace(name: "collections", scope: !115)
!173 = !DISubroutineType(types: !174)
!174 = !{!175, !178}
!175 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveError", scope: !172, file: !30, size: 128, align: 64, elements: !176, templateParams: !140, identifier: "9329beb58cfce2a468bff9d53d352901")
!176 = !{!177}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !175, file: !30, baseType: !178, size: 128, align: 64)
!178 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveErrorKind", scope: !172, file: !30, size: 128, align: 64, elements: !179, templateParams: !140, identifier: "b80f03a2018170445eea4dcb9e8ba251")
!179 = !{!180}
!180 = !DICompositeType(tag: DW_TAG_variant_part, scope: !178, file: !30, size: 128, align: 64, elements: !181, templateParams: !140, identifier: "dd437972ee979c0cb5a8f1e81729b7e4", discriminator: !200)
!181 = !{!182, !184}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "CapacityOverflow", scope: !180, file: !30, baseType: !183, size: 128, align: 64, extraData: i64 0)
!183 = !DICompositeType(tag: DW_TAG_structure_type, name: "CapacityOverflow", scope: !178, file: !30, size: 128, align: 64, elements: !140, identifier: "9b997f4b8909a73a8576324b89f9b258")
!184 = !DIDerivedType(tag: DW_TAG_member, name: "AllocError", scope: !180, file: !30, baseType: !185, size: 128, align: 64)
!185 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !178, file: !30, size: 128, align: 64, elements: !186, templateParams: !140, identifier: "43ad075de287371ebe4e53de3e5ecf3d")
!186 = !{!187, !198}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !185, file: !30, baseType: !188, size: 128, align: 64)
!188 = !DICompositeType(tag: DW_TAG_structure_type, name: "Layout", scope: !189, file: !30, size: 128, align: 64, elements: !191, templateParams: !140, identifier: "6727bf1318ffccbbbfc5e6dc0dfc8722")
!189 = !DINamespace(name: "layout", scope: !190)
!190 = !DINamespace(name: "alloc", scope: !33)
!191 = !{!192, !194}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !188, file: !30, baseType: !193, size: 64, align: 64)
!193 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !188, file: !30, baseType: !195, size: 64, align: 64, offset: 64)
!195 = !DICompositeType(tag: DW_TAG_structure_type, name: "ValidAlign", scope: !31, file: !30, size: 64, align: 64, elements: !196, templateParams: !140, identifier: "e392ecbcb8f7df9e6beb2b20857b4b5a")
!196 = !{!197}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !195, file: !30, baseType: !29, size: 64, align: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "non_exhaustive", scope: !185, file: !30, baseType: !199, align: 8)
!199 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!200 = !DIDerivedType(tag: DW_TAG_member, scope: !178, file: !30, baseType: !34, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!201 = !{!202}
!202 = !DILocalVariable(name: "kind", arg: 1, scope: !169, file: !170, line: 116, type: !178)
!203 = !DILocation(line: 116, column: 13, scope: !169)
!204 = !DILocation(line: 117, column: 9, scope: !169)
!205 = !DILocation(line: 118, column: 6, scope: !169)
!206 = !{i64 0, i64 -9223372036854775807}
!207 = distinct !DISubprogram(name: "forward_unchecked", linkageName: "_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hed6d6ab6e2392a88E", scope: !209, file: !208, line: 189, type: !212, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !214)
!208 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "a5e6372fb466d62a237d46ecffb4676a")
!209 = !DINamespace(name: "{impl#37}", scope: !210)
!210 = !DINamespace(name: "range", scope: !211)
!211 = !DINamespace(name: "iter", scope: !33)
!212 = !DISubroutineType(types: !213)
!213 = !{!193, !193, !193}
!214 = !{!215, !216}
!215 = !DILocalVariable(name: "start", arg: 1, scope: !207, file: !208, line: 189, type: !193)
!216 = !DILocalVariable(name: "n", arg: 2, scope: !207, file: !208, line: 189, type: !193)
!217 = !DILocation(line: 189, column: 37, scope: !207)
!218 = !DILocation(line: 189, column: 50, scope: !207)
!219 = !DILocation(line: 191, column: 22, scope: !207)
!220 = !DILocalVariable(name: "self", scope: !221, file: !208, line: 191, type: !193, align: 8)
!221 = !DILexicalBlockFile(scope: !222, file: !208, discriminator: 0)
!222 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h248c853f68583999E", scope: !224, file: !223, line: 463, type: !212, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !226)
!223 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "510cfe98475d713af9de72a29146058c")
!224 = !DINamespace(name: "{impl#11}", scope: !225)
!225 = !DINamespace(name: "num", scope: !33)
!226 = !{!220, !227}
!227 = !DILocalVariable(name: "rhs", scope: !221, file: !208, line: 191, type: !193, align: 8)
!228 = !DILocation(line: 191, column: 22, scope: !221, inlinedAt: !219)
!229 = !DILocation(line: 191, column: 42, scope: !207)
!230 = !DILocation(line: 192, column: 10, scope: !207)
!231 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3Ord3max17h87106b455f34e45bE", scope: !233, file: !232, line: 800, type: !212, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !237, retainedNodes: !234)
!232 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "381f61764ec5ac4111e955260ff27c96")
!233 = !DINamespace(name: "Ord", scope: !101)
!234 = !{!235, !236}
!235 = !DILocalVariable(name: "self", arg: 1, scope: !231, file: !232, line: 800, type: !193)
!236 = !DILocalVariable(name: "other", arg: 2, scope: !231, file: !232, line: 800, type: !193)
!237 = !{!238}
!238 = !DITemplateTypeParameter(name: "Self", type: !193)
!239 = !DILocation(line: 800, column: 12, scope: !231)
!240 = !DILocation(line: 800, column: 18, scope: !231)
!241 = !DILocation(line: 808, column: 15, scope: !231)
!242 = !{i8 -1, i8 2}
!243 = !DILocation(line: 812, column: 5, scope: !231)
!244 = !DILocation(line: 808, column: 9, scope: !231)
!245 = !{i8 0, i8 2}
!246 = !DILocation(line: 809, column: 49, scope: !231)
!247 = !DILocation(line: 810, column: 34, scope: !231)
!248 = !DILocation(line: 800, column: 5, scope: !231)
!249 = !DILocation(line: 812, column: 6, scope: !231)
!250 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h3d2a18e0790e5393E", scope: !251, file: !232, line: 1436, type: !253, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !256)
!251 = !DINamespace(name: "{impl#55}", scope: !252)
!252 = !DINamespace(name: "impls", scope: !101)
!253 = !DISubroutineType(types: !254)
!254 = !{!100, !255, !255}
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !193, size: 64, align: 64, dwarfAddressSpace: 0)
!256 = !{!257, !258}
!257 = !DILocalVariable(name: "self", arg: 1, scope: !250, file: !232, line: 1436, type: !255)
!258 = !DILocalVariable(name: "other", arg: 2, scope: !250, file: !232, line: 1436, type: !255)
!259 = !DILocation(line: 1436, column: 24, scope: !250)
!260 = !DILocation(line: 1436, column: 31, scope: !250)
!261 = !DILocation(line: 1439, column: 24, scope: !250)
!262 = !DILocation(line: 1439, column: 32, scope: !250)
!263 = !DILocation(line: 1440, column: 29, scope: !250)
!264 = !DILocation(line: 1440, column: 38, scope: !250)
!265 = !DILocation(line: 1439, column: 41, scope: !250)
!266 = !DILocation(line: 1439, column: 21, scope: !250)
!267 = !DILocation(line: 1442, column: 18, scope: !250)
!268 = !DILocation(line: 1441, column: 28, scope: !250)
!269 = !DILocation(line: 1440, column: 26, scope: !250)
!270 = !DILocation(line: 1440, column: 47, scope: !250)
!271 = distinct !DISubprogram(name: "lt", linkageName: "_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hff8f36e2a393695fE", scope: !272, file: !232, line: 1423, type: !273, scopeLine: 1423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !276)
!272 = !DINamespace(name: "{impl#54}", scope: !252)
!273 = !DISubroutineType(types: !274)
!274 = !{!275, !255, !255}
!275 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!276 = !{!277, !278}
!277 = !DILocalVariable(name: "self", arg: 1, scope: !271, file: !232, line: 1423, type: !255)
!278 = !DILocalVariable(name: "other", arg: 2, scope: !271, file: !232, line: 1423, type: !255)
!279 = !DILocation(line: 1423, column: 23, scope: !271)
!280 = !DILocation(line: 1423, column: 30, scope: !271)
!281 = !DILocation(line: 1423, column: 52, scope: !271)
!282 = !DILocation(line: 1423, column: 62, scope: !271)
!283 = !DILocation(line: 1423, column: 72, scope: !271)
!284 = distinct !DISubprogram(name: "replace<usize>", linkageName: "_ZN4core3mem7replace17h1b0f877508390cefE", scope: !32, file: !285, line: 913, type: !286, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !294, retainedNodes: !289)
!285 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "27c8869548c9dcb65186c5584c2586f6")
!286 = !DISubroutineType(types: !287)
!287 = !{!193, !288, !193}
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut usize", baseType: !193, size: 64, align: 64, dwarfAddressSpace: 0)
!289 = !{!290, !291, !292}
!290 = !DILocalVariable(name: "dest", arg: 1, scope: !284, file: !285, line: 913, type: !288)
!291 = !DILocalVariable(name: "src", arg: 2, scope: !284, file: !285, line: 913, type: !193)
!292 = !DILocalVariable(name: "result", scope: !293, file: !285, line: 918, type: !193, align: 8)
!293 = distinct !DILexicalBlock(scope: !284, file: !285, line: 918, column: 9)
!294 = !{!295}
!295 = !DITemplateTypeParameter(name: "T", type: !193)
!296 = !DILocation(line: 913, column: 25, scope: !284)
!297 = !DILocation(line: 913, column: 39, scope: !284)
!298 = !DILocalVariable(name: "src", scope: !299, file: !285, line: 919, type: !193, align: 8)
!299 = !DILexicalBlockFile(scope: !300, file: !285, discriminator: 0)
!300 = distinct !DISubprogram(name: "write<usize>", linkageName: "_ZN4core3ptr5write17h7996df7986768da2E", scope: !124, file: !301, line: 1296, type: !302, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !294, retainedNodes: !305)
!301 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "13c32d970b0b4dd38131a1908223a155")
!302 = !DISubroutineType(types: !303)
!303 = !{null, !304, !193}
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut usize", baseType: !193, size: 64, align: 64, dwarfAddressSpace: 0)
!305 = !{!306, !298}
!306 = !DILocalVariable(name: "dst", scope: !299, file: !285, line: 919, type: !304, align: 8)
!307 = !DILocation(line: 919, column: 9, scope: !299, inlinedAt: !308)
!308 = !DILocation(line: 919, column: 9, scope: !293)
!309 = !DILocalVariable(name: "tmp", scope: !310, file: !285, line: 918, type: !319, align: 8)
!310 = !DILexicalBlockFile(scope: !311, file: !285, discriminator: 0)
!311 = distinct !DILexicalBlock(scope: !312, file: !301, line: 1107, column: 5)
!312 = distinct !DISubprogram(name: "read<usize>", linkageName: "_ZN4core3ptr4read17h5d2fa77dc1a54517E", scope: !124, file: !301, line: 1099, type: !313, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !294, retainedNodes: !316)
!313 = !DISubroutineType(types: !314)
!314 = !{!193, !315}
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const usize", baseType: !193, size: 64, align: 64, dwarfAddressSpace: 0)
!316 = !{!317, !309}
!317 = !DILocalVariable(name: "src", scope: !318, file: !285, line: 918, type: !315, align: 8)
!318 = !DILexicalBlockFile(scope: !312, file: !285, discriminator: 0)
!319 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<usize>", scope: !320, file: !30, size: 64, align: 64, elements: !321, templateParams: !294, identifier: "d5eca075936c223cc2b20ecedd1e4e46")
!320 = !DINamespace(name: "maybe_uninit", scope: !32)
!321 = !{!322, !323}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !319, file: !30, baseType: !199, align: 8)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !319, file: !30, baseType: !324, size: 64, align: 64)
!324 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<usize>", scope: !325, file: !30, size: 64, align: 64, elements: !326, templateParams: !294, identifier: "446cb116741bbe0e5138064f6b058dad")
!325 = !DINamespace(name: "manually_drop", scope: !32)
!326 = !{!327}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !324, file: !30, baseType: !193, size: 64, align: 64)
!328 = !DILocation(line: 918, column: 22, scope: !310, inlinedAt: !329)
!329 = !DILocation(line: 918, column: 22, scope: !284)
!330 = !DILocation(line: 918, column: 32, scope: !284)
!331 = !DILocation(line: 918, column: 22, scope: !318, inlinedAt: !329)
!332 = !DILocation(line: 918, column: 22, scope: !333, inlinedAt: !338)
!333 = !DILexicalBlockFile(scope: !334, file: !285, discriminator: 0)
!334 = distinct !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hd50d154a1eb9677eE", scope: !319, file: !335, line: 320, type: !336, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !294, retainedNodes: !140)
!335 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "d75c93d9a93fe65ef19edc0e8e272278")
!336 = !DISubroutineType(types: !337)
!337 = !{!319}
!338 = !DILocation(line: 1107, column: 19, scope: !312, inlinedAt: !329)
!339 = !DILocalVariable(name: "self", scope: !340, file: !285, line: 918, type: !344, align: 8)
!340 = !DILexicalBlockFile(scope: !341, file: !285, discriminator: 0)
!341 = distinct !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h8dadf7abf9ab9c7eE", scope: !319, file: !335, line: 574, type: !342, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !294, retainedNodes: !345)
!342 = !DISubroutineType(types: !343)
!343 = !{!304, !344}
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !319, size: 64, align: 64, dwarfAddressSpace: 0)
!345 = !{!339}
!346 = !DILocation(line: 918, column: 22, scope: !340, inlinedAt: !347)
!347 = !DILocation(line: 1115, column: 34, scope: !311, inlinedAt: !329)
!348 = !DILocalVariable(name: "self", scope: !349, file: !285, line: 918, type: !319, align: 8)
!349 = !DILexicalBlockFile(scope: !350, file: !285, discriminator: 0)
!350 = distinct !DISubprogram(name: "assume_init<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h396a38f15f71598dE", scope: !319, file: !335, line: 629, type: !351, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !294, retainedNodes: !366)
!351 = !DISubroutineType(types: !352)
!352 = !{!193, !319, !353}
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !354, size: 64, align: 64, dwarfAddressSpace: 0)
!354 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !355, file: !30, size: 192, align: 64, elements: !357, templateParams: !140, identifier: "ef576a844c237f54e9e75bf7bba044c0")
!355 = !DINamespace(name: "location", scope: !356)
!356 = !DINamespace(name: "panic", scope: !33)
!357 = !{!358, !364, !365}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !354, file: !30, baseType: !359, size: 128, align: 64)
!359 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !30, size: 128, align: 64, elements: !360, templateParams: !140, identifier: "c603ebb2af364502ef89131a86c6ad9b")
!360 = !{!361, !363}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !359, file: !30, baseType: !362, size: 64, align: 64)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64, align: 64, dwarfAddressSpace: 0)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !359, file: !30, baseType: !193, size: 64, align: 64, offset: 64)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !354, file: !30, baseType: !6, size: 32, align: 32, offset: 128)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !354, file: !30, baseType: !6, size: 32, align: 32, offset: 160)
!366 = !{!348}
!367 = !DILocation(line: 918, column: 22, scope: !349, inlinedAt: !368)
!368 = !DILocation(line: 1116, column: 9, scope: !311, inlinedAt: !329)
!369 = !DILocalVariable(name: "slot", scope: !370, file: !285, line: 918, type: !324, align: 8)
!370 = !DILexicalBlockFile(scope: !371, file: !285, discriminator: 0)
!371 = distinct !DISubprogram(name: "into_inner<usize>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hb70b0060a85e21cbE", scope: !324, file: !372, line: 88, type: !373, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !294, retainedNodes: !375)
!372 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "a34f39f0c1c25c8378cd3f4ec0bf00c3")
!373 = !DISubroutineType(types: !374)
!374 = !{!193, !324}
!375 = !{!369}
!376 = !DILocation(line: 918, column: 22, scope: !370, inlinedAt: !377)
!377 = !DILocation(line: 634, column: 13, scope: !350, inlinedAt: !368)
!378 = !DILocation(line: 918, column: 13, scope: !293)
!379 = !DILocation(line: 919, column: 20, scope: !293)
!380 = !DILocation(line: 919, column: 26, scope: !293)
!381 = !DILocation(line: 922, column: 2, scope: !284)
!382 = !DILocation(line: 922, column: 1, scope: !284)
!383 = !DILocation(line: 913, column: 1, scope: !284)
!384 = distinct !DISubprogram(name: "checked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17he45b9f2a8ce2079eE", scope: !224, file: !223, line: 438, type: !385, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !399)
!385 = !DISubroutineType(types: !386)
!386 = !{!387, !193, !193}
!387 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !388, file: !30, size: 128, align: 64, elements: !389, templateParams: !140, identifier: "5190463b0687da274ab794ccaf9d1fd8")
!388 = !DINamespace(name: "option", scope: !33)
!389 = !{!390}
!390 = !DICompositeType(tag: DW_TAG_variant_part, scope: !387, file: !30, size: 128, align: 64, elements: !391, templateParams: !140, identifier: "db59d501e5f76645f4edce4cdbfeb328", discriminator: !398)
!391 = !{!392, !394}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !390, file: !30, baseType: !393, size: 128, align: 64, extraData: i64 0)
!393 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !387, file: !30, size: 128, align: 64, elements: !140, templateParams: !294, identifier: "a1c5f3dead8f24ccdada7bc2feedd145")
!394 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !390, file: !30, baseType: !395, size: 128, align: 64, extraData: i64 1)
!395 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !387, file: !30, size: 128, align: 64, elements: !396, templateParams: !294, identifier: "3ad875242c049b8143d7577f4eb10d1a")
!396 = !{!397}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !395, file: !30, baseType: !193, size: 64, align: 64, offset: 64)
!398 = !DIDerivedType(tag: DW_TAG_member, scope: !387, file: !30, baseType: !34, size: 64, align: 64, flags: DIFlagArtificial)
!399 = !{!400, !401, !402, !404}
!400 = !DILocalVariable(name: "self", arg: 1, scope: !384, file: !223, line: 438, type: !193)
!401 = !DILocalVariable(name: "rhs", arg: 2, scope: !384, file: !223, line: 438, type: !193)
!402 = !DILocalVariable(name: "a", scope: !403, file: !223, line: 439, type: !193, align: 8)
!403 = distinct !DILexicalBlock(scope: !384, file: !223, line: 439, column: 13)
!404 = !DILocalVariable(name: "b", scope: !403, file: !223, line: 439, type: !275, align: 1)
!405 = !DILocation(line: 438, column: 34, scope: !384)
!406 = !DILocation(line: 438, column: 40, scope: !384)
!407 = !DILocation(line: 439, column: 26, scope: !384)
!408 = !DILocalVariable(name: "self", scope: !409, file: !223, line: 439, type: !193, align: 8)
!409 = distinct !DISubprogram(name: "overflowing_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17he3f36ecce9400a82E", scope: !224, file: !223, line: 1506, type: !410, scopeLine: 1506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !416)
!410 = !DISubroutineType(types: !411)
!411 = !{!412, !193, !193}
!412 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !30, size: 128, align: 64, elements: !413, templateParams: !140, identifier: "23309350ccb628a7900e37caa17b1249")
!413 = !{!414, !415}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !412, file: !30, baseType: !193, size: 64, align: 64)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !412, file: !30, baseType: !275, size: 8, align: 8, offset: 64)
!416 = !{!408, !417, !418, !420}
!417 = !DILocalVariable(name: "rhs", scope: !409, file: !223, line: 439, type: !193, align: 8)
!418 = !DILocalVariable(name: "a", scope: !419, file: !223, line: 439, type: !34, align: 8)
!419 = distinct !DILexicalBlock(scope: !409, file: !223, line: 1507, column: 13)
!420 = !DILocalVariable(name: "b", scope: !419, file: !223, line: 439, type: !275, align: 1)
!421 = !DILocation(line: 439, column: 26, scope: !409, inlinedAt: !407)
!422 = !DILocation(line: 439, column: 47, scope: !384)
!423 = !DILocation(line: 439, column: 26, scope: !419, inlinedAt: !407)
!424 = !DILocation(line: 439, column: 18, scope: !384)
!425 = !DILocation(line: 439, column: 18, scope: !403)
!426 = !DILocation(line: 439, column: 21, scope: !384)
!427 = !DILocation(line: 439, column: 21, scope: !403)
!428 = !DILocation(line: 440, column: 16, scope: !403)
!429 = !DILocation(line: 440, column: 42, scope: !403)
!430 = !DILocation(line: 440, column: 13, scope: !403)
!431 = !DILocation(line: 440, column: 30, scope: !403)
!432 = !DILocation(line: 441, column: 10, scope: !384)
!433 = !{i64 0, i64 2}
!434 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h48ab1638bb420a1eE", scope: !224, file: !223, line: 555, type: !385, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !435)
!435 = !{!436, !437, !438, !440}
!436 = !DILocalVariable(name: "self", arg: 1, scope: !434, file: !223, line: 555, type: !193)
!437 = !DILocalVariable(name: "rhs", arg: 2, scope: !434, file: !223, line: 555, type: !193)
!438 = !DILocalVariable(name: "a", scope: !439, file: !223, line: 556, type: !193, align: 8)
!439 = distinct !DILexicalBlock(scope: !434, file: !223, line: 556, column: 13)
!440 = !DILocalVariable(name: "b", scope: !439, file: !223, line: 556, type: !275, align: 1)
!441 = !DILocation(line: 555, column: 34, scope: !434)
!442 = !DILocation(line: 555, column: 40, scope: !434)
!443 = !DILocation(line: 556, column: 26, scope: !434)
!444 = !DILocalVariable(name: "self", scope: !445, file: !223, line: 556, type: !193, align: 8)
!445 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17hce0beb250bffdecdE", scope: !224, file: !223, line: 1688, type: !410, scopeLine: 1688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !446)
!446 = !{!444, !447, !448, !450}
!447 = !DILocalVariable(name: "rhs", scope: !445, file: !223, line: 556, type: !193, align: 8)
!448 = !DILocalVariable(name: "a", scope: !449, file: !223, line: 556, type: !34, align: 8)
!449 = distinct !DILexicalBlock(scope: !445, file: !223, line: 1689, column: 13)
!450 = !DILocalVariable(name: "b", scope: !449, file: !223, line: 556, type: !275, align: 1)
!451 = !DILocation(line: 556, column: 26, scope: !445, inlinedAt: !443)
!452 = !DILocation(line: 556, column: 47, scope: !434)
!453 = !DILocation(line: 556, column: 26, scope: !449, inlinedAt: !443)
!454 = !DILocation(line: 556, column: 18, scope: !434)
!455 = !DILocation(line: 556, column: 18, scope: !439)
!456 = !DILocation(line: 556, column: 21, scope: !434)
!457 = !DILocation(line: 556, column: 21, scope: !439)
!458 = !DILocation(line: 557, column: 16, scope: !439)
!459 = !DILocation(line: 557, column: 42, scope: !439)
!460 = !DILocation(line: 557, column: 13, scope: !439)
!461 = !DILocation(line: 557, column: 30, scope: !439)
!462 = !DILocation(line: 558, column: 10, scope: !434)
!463 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<i32, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17h7c47488e4f4ba9f1E", scope: !124, file: !301, line: 487, type: !464, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !495, retainedNodes: !493)
!464 = !DISubroutineType(types: !465)
!465 = !{null, !466}
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<i32, alloc::alloc::Global>", baseType: !467, size: 64, align: 64, dwarfAddressSpace: 0)
!467 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<i32, alloc::alloc::Global>", scope: !468, file: !30, size: 192, align: 64, elements: !469, templateParams: !490, identifier: "a91ce611025c7cb92c07812364ae35fe")
!468 = !DINamespace(name: "vec", scope: !115)
!469 = !{!470, !492}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !467, file: !30, baseType: !471, size: 128, align: 64)
!471 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<i32, alloc::alloc::Global>", scope: !114, file: !30, size: 128, align: 64, elements: !472, templateParams: !490, identifier: "8a8fe19ff2edd19bab1729ee8c5bad6a")
!472 = !{!473, !486, !487}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !471, file: !30, baseType: !474, size: 64, align: 64)
!474 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<i32>", scope: !134, file: !30, size: 64, align: 64, elements: !475, templateParams: !482, identifier: "62f4807ab3dce3cba7f30fc00f38cdd6")
!475 = !{!476, !484}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !474, file: !30, baseType: !477, size: 64, align: 64)
!477 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<i32>", scope: !123, file: !30, size: 64, align: 64, elements: !478, templateParams: !482, identifier: "aa602cb571ba548f8a76bb877f42f41a")
!478 = !{!479}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !477, file: !30, baseType: !480, size: 64, align: 64)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const i32", baseType: !481, size: 64, align: 64, dwarfAddressSpace: 0)
!481 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!482 = !{!483}
!483 = !DITemplateTypeParameter(name: "T", type: !481)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !474, file: !30, baseType: !485, align: 8)
!485 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<i32>", scope: !139, file: !30, align: 8, elements: !140, templateParams: !482, identifier: "34c013968c354612ac15edce1691fe68")
!486 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !471, file: !30, baseType: !193, size: 64, align: 64, offset: 64)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !471, file: !30, baseType: !488, align: 8)
!488 = !DICompositeType(tag: DW_TAG_structure_type, name: "Global", scope: !489, file: !30, align: 8, elements: !140, identifier: "3328ba4994ba07f4a4a3e83fae935932")
!489 = !DINamespace(name: "alloc", scope: !115)
!490 = !{!483, !491}
!491 = !DITemplateTypeParameter(name: "A", type: !488)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !467, file: !30, baseType: !193, size: 64, align: 64, offset: 128)
!493 = !{!494}
!494 = !DILocalVariable(arg: 1, scope: !463, file: !301, line: 487, type: !466)
!495 = !{!496}
!496 = !DITemplateTypeParameter(name: "T", type: !467)
!497 = !DILocation(line: 487, column: 1, scope: !463)
!498 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<i32, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr54drop_in_place$LT$alloc..raw_vec..RawVec$LT$i32$GT$$GT$17h1b855c137f48d48aE", scope: !124, file: !301, line: 487, type: !499, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !504, retainedNodes: !502)
!499 = !DISubroutineType(types: !500)
!500 = !{null, !501}
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<i32, alloc::alloc::Global>", baseType: !471, size: 64, align: 64, dwarfAddressSpace: 0)
!502 = !{!503}
!503 = !DILocalVariable(arg: 1, scope: !498, file: !301, line: 487, type: !501)
!504 = !{!505}
!505 = !DITemplateTypeParameter(name: "T", type: !471)
!506 = !DILocation(line: 487, column: 1, scope: !498)
!507 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>", linkageName: "_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17h46860c8a65c5d677E", scope: !124, file: !301, line: 487, type: !508, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !518, retainedNodes: !516)
!508 = !DISubroutineType(types: !509)
!509 = !{null, !510}
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::set_len_on_drop::SetLenOnDrop", baseType: !511, size: 64, align: 64, dwarfAddressSpace: 0)
!511 = !DICompositeType(tag: DW_TAG_structure_type, name: "SetLenOnDrop", scope: !512, file: !30, size: 128, align: 64, elements: !513, templateParams: !140, identifier: "92c56566f7dda87877f4ae307cd899c5")
!512 = !DINamespace(name: "set_len_on_drop", scope: !468)
!513 = !{!514, !515}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !511, file: !30, baseType: !288, size: 64, align: 64)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "local_len", scope: !511, file: !30, baseType: !193, size: 64, align: 64, offset: 64)
!516 = !{!517}
!517 = !DILocalVariable(arg: 1, scope: !507, file: !301, line: 487, type: !510)
!518 = !{!519}
!519 = !DITemplateTypeParameter(name: "T", type: !511)
!520 = !DILocation(line: 487, column: 1, scope: !507)
!521 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h04dfd1802f349fbdE", scope: !127, file: !121, line: 218, type: !522, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !537)
!522 = !DISubroutineType(types: !523)
!523 = !{!524, !151}
!524 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::ptr::non_null::NonNull<u8>>", scope: !388, file: !30, size: 64, align: 64, elements: !525, templateParams: !140, identifier: "73e5c906163f964bd09052518b6d2dc5")
!525 = !{!526}
!526 = !DICompositeType(tag: DW_TAG_variant_part, scope: !524, file: !30, size: 64, align: 64, elements: !527, templateParams: !140, identifier: "60204c6c6496841dbff7e7ec5dea5282", discriminator: !536)
!527 = !{!528, !532}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !526, file: !30, baseType: !529, size: 64, align: 64, extraData: i64 0)
!529 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !524, file: !30, size: 64, align: 64, elements: !140, templateParams: !530, identifier: "b393050474aeb0631755d975367153e1")
!530 = !{!531}
!531 = !DITemplateTypeParameter(name: "T", type: !127)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !526, file: !30, baseType: !533, size: 64, align: 64)
!533 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !524, file: !30, size: 64, align: 64, elements: !534, templateParams: !530, identifier: "a01a0b695bfd5d94759ea5c77533b9ea")
!534 = !{!535}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !533, file: !30, baseType: !127, size: 64, align: 64)
!536 = !DIDerivedType(tag: DW_TAG_member, scope: !524, file: !30, baseType: !34, size: 64, align: 64, flags: DIFlagArtificial)
!537 = !{!538}
!538 = !DILocalVariable(name: "ptr", arg: 1, scope: !521, file: !121, line: 218, type: !151)
!539 = !DILocation(line: 218, column: 22, scope: !521)
!540 = !DILocalVariable(name: "metadata", scope: !541, file: !121, line: 219, type: !199, align: 1)
!541 = !DILexicalBlockFile(scope: !542, file: !121, discriminator: 0)
!542 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17he32d9f342ecea984E", scope: !544, file: !543, line: 127, type: !545, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !548)
!543 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "59565ed3c34dee3e8f8928c29f8f7ce4")
!544 = !DINamespace(name: "metadata", scope: !124)
!545 = !DISubroutineType(types: !546)
!546 = !{!151, !547, !199}
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !199, size: 64, align: 64, dwarfAddressSpace: 0)
!548 = !{!549, !540}
!549 = !DILocalVariable(name: "data_address", scope: !541, file: !121, line: 219, type: !547, align: 8)
!550 = !DILocation(line: 219, column: 13, scope: !541, inlinedAt: !551)
!551 = !DILocation(line: 668, column: 5, scope: !552, inlinedAt: !555)
!552 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hc6de534b9a6395daE", scope: !124, file: !301, line: 667, type: !553, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !140)
!553 = !DISubroutineType(types: !554)
!554 = !{!151}
!555 = !DILocation(line: 38, column: 41, scope: !556, inlinedAt: !565)
!556 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h074072416bc41081E", scope: !558, file: !557, line: 35, type: !560, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !562)
!557 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "6672664af50614ec3c026afd55307af7")
!558 = !DINamespace(name: "{impl#0}", scope: !559)
!559 = !DINamespace(name: "mut_ptr", scope: !124)
!560 = !DISubroutineType(types: !561)
!561 = !{!275, !151}
!562 = !{!563}
!563 = !DILocalVariable(name: "self", scope: !564, file: !121, line: 219, type: !151, align: 8)
!564 = !DILexicalBlockFile(scope: !556, file: !121, discriminator: 0)
!565 = !DILocation(line: 219, column: 13, scope: !521)
!566 = !DILocation(line: 219, column: 13, scope: !564, inlinedAt: !565)
!567 = !DILocalVariable(name: "self", scope: !568, file: !121, line: 219, type: !151, align: 8)
!568 = !DILexicalBlockFile(scope: !569, file: !121, discriminator: 0)
!569 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h821d7c2a5a2b9ba1E", scope: !558, file: !557, line: 707, type: !570, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !572)
!570 = !DISubroutineType(types: !571)
!571 = !{!275, !151, !151}
!572 = !{!567, !573}
!573 = !DILocalVariable(name: "other", scope: !568, file: !121, line: 219, type: !151, align: 8)
!574 = !DILocation(line: 219, column: 13, scope: !568, inlinedAt: !575)
!575 = !DILocation(line: 38, column: 9, scope: !556, inlinedAt: !565)
!576 = !DILocation(line: 219, column: 13, scope: !577, inlinedAt: !585)
!577 = !DILexicalBlockFile(scope: !578, file: !121, discriminator: 0)
!578 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h647b57a84c614c40E", scope: !124, file: !301, line: 569, type: !579, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !583, retainedNodes: !581)
!579 = !DISubroutineType(types: !580)
!580 = !{!547, !193}
!581 = !{!582}
!582 = !DILocalVariable(name: "addr", scope: !577, file: !121, line: 219, type: !193, align: 8)
!583 = !{!584}
!584 = !DITemplateTypeParameter(name: "T", type: !199)
!585 = !DILocation(line: 668, column: 24, scope: !552, inlinedAt: !555)
!586 = !DILocation(line: 219, column: 12, scope: !521)
!587 = !DILocation(line: 223, column: 13, scope: !521)
!588 = !DILocation(line: 219, column: 9, scope: !521)
!589 = !DILocation(line: 221, column: 47, scope: !521)
!590 = !DILocalVariable(name: "ptr", scope: !591, file: !121, line: 221, type: !151, align: 8)
!591 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h34d07e24ca4007b4E", scope: !127, file: !121, line: 196, type: !163, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !592)
!592 = !{!590}
!593 = !DILocation(line: 221, column: 27, scope: !591, inlinedAt: !594)
!594 = !DILocation(line: 221, column: 27, scope: !521)
!595 = !DILocation(line: 221, column: 13, scope: !521)
!596 = !DILocation(line: 225, column: 6, scope: !521)
!597 = distinct !DISubprogram(name: "from_size_valid_align", linkageName: "_ZN4core5alloc6layout6Layout21from_size_valid_align17h61365ef5c3cb2737E", scope: !188, file: !598, line: 77, type: !599, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !619)
!598 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/alloc/layout.rs", directory: "", checksumkind: CSK_MD5, checksum: "2d0ac208ee70c69b94b07d38255a5525")
!599 = !DISubroutineType(types: !600)
!600 = !{!601, !193, !195}
!601 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", scope: !602, file: !30, size: 128, align: 64, elements: !603, templateParams: !140, identifier: "61ed90a3a60bf5c9da25fda9753d7b5")
!602 = !DINamespace(name: "result", scope: !33)
!603 = !{!604}
!604 = !DICompositeType(tag: DW_TAG_variant_part, scope: !601, file: !30, size: 128, align: 64, elements: !605, templateParams: !140, identifier: "e7bb3560bfa0d3445ee2359cfbf9e5fe", discriminator: !618)
!605 = !{!606, !614}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !604, file: !30, baseType: !607, size: 128, align: 64)
!607 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !601, file: !30, size: 128, align: 64, elements: !608, templateParams: !610, identifier: "1efd2a987c8fa52528b02bba0275d8c7")
!608 = !{!609}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !607, file: !30, baseType: !188, size: 128, align: 64)
!610 = !{!611, !612}
!611 = !DITemplateTypeParameter(name: "T", type: !188)
!612 = !DITemplateTypeParameter(name: "E", type: !613)
!613 = !DICompositeType(tag: DW_TAG_structure_type, name: "LayoutError", scope: !189, file: !30, align: 8, elements: !140, identifier: "6e89e1d1b17d37435f7b87cb1d5cb26d")
!614 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !604, file: !30, baseType: !615, size: 128, align: 64, extraData: i64 0)
!615 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !601, file: !30, size: 128, align: 64, elements: !616, templateParams: !610, identifier: "9488fb9df60d2b7e722ab2cffead9e28")
!616 = !{!617}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !615, file: !30, baseType: !613, align: 8)
!618 = !DIDerivedType(tag: DW_TAG_member, scope: !601, file: !30, baseType: !34, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!619 = !{!620, !621}
!620 = !DILocalVariable(name: "size", arg: 1, scope: !597, file: !598, line: 77, type: !193)
!621 = !DILocalVariable(name: "align", arg: 2, scope: !597, file: !598, line: 77, type: !195)
!622 = !DILocation(line: 77, column: 36, scope: !597)
!623 = !DILocation(line: 77, column: 49, scope: !597)
!624 = !DILocalVariable(name: "self", scope: !625, file: !598, line: 92, type: !628, align: 8)
!625 = !DILexicalBlockFile(scope: !626, file: !598, discriminator: 0)
!626 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h4c609daa585f4c69E", scope: !628, file: !627, line: 82, type: !632, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !634)
!627 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/nonzero.rs", directory: "", checksumkind: CSK_MD5, checksum: "f51cb88dd069db0b7fcd2123d03b69c9")
!628 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonZeroUsize", scope: !629, file: !30, size: 64, align: 64, elements: !630, templateParams: !140, identifier: "c6c54dffb7a9517405cc55666c804e7")
!629 = !DINamespace(name: "nonzero", scope: !225)
!630 = !{!631}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !628, file: !30, baseType: !193, size: 64, align: 64)
!632 = !DISubroutineType(types: !633)
!633 = !{!193, !628}
!634 = !{!624}
!635 = !DILocation(line: 92, column: 42, scope: !625, inlinedAt: !636)
!636 = !DILocation(line: 92, column: 42, scope: !597)
!637 = !DILocalVariable(name: "self", scope: !638, file: !598, line: 92, type: !195, align: 8)
!638 = !DILexicalBlockFile(scope: !639, file: !598, discriminator: 0)
!639 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h466a6ecaf9634463E", scope: !195, file: !640, line: 39, type: !641, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !643)
!640 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/valid_align.rs", directory: "", checksumkind: CSK_MD5, checksum: "681d44917f5a26aec3d3954431def51e")
!641 = !DISubroutineType(types: !642)
!642 = !{!628, !195}
!643 = !{!637}
!644 = !DILocation(line: 92, column: 42, scope: !638, inlinedAt: !636)
!645 = !{i64 1, i64 -9223372036854775807}
!646 = !DILocalVariable(name: "n", scope: !647, file: !598, line: 92, type: !193, align: 8)
!647 = !DILexicalBlockFile(scope: !648, file: !598, discriminator: 0)
!648 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hb7b27ac1e98aa935E", scope: !628, file: !627, line: 56, type: !649, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !651)
!649 = !DISubroutineType(types: !650)
!650 = !{!628, !193}
!651 = !{!646, !652}
!652 = !DILocalVariable(name: "runtime", scope: !653, file: !598, line: 92, type: !656, align: 8)
!653 = !DILexicalBlockFile(scope: !654, file: !598, discriminator: 0)
!654 = distinct !DILexicalBlock(scope: !648, file: !655, line: 2336, column: 13)
!655 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "f96ba730d7cf23ae45fdc72e7caf5f1b")
!656 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !657, file: !30, size: 64, align: 64, elements: !659, templateParams: !140, identifier: "cbed2d88a1ec7b20c4ad53e8c9863d89")
!657 = !DINamespace(name: "new_unchecked", scope: !658)
!658 = !DINamespace(name: "{impl#35}", scope: !629)
!659 = !{!660}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__n", scope: !656, file: !30, baseType: !255, size: 64, align: 64)
!661 = !DILocation(line: 92, column: 42, scope: !647, inlinedAt: !662)
!662 = !DILocation(line: 41, column: 18, scope: !639, inlinedAt: !636)
!663 = !DILocation(line: 92, column: 41, scope: !597)
!664 = !DILocation(line: 92, column: 19, scope: !597)
!665 = !DILocation(line: 92, column: 12, scope: !597)
!666 = !DILocation(line: 97, column: 12, scope: !597)
!667 = !DILocation(line: 97, column: 9, scope: !597)
!668 = !DILocation(line: 98, column: 6, scope: !597)
!669 = !DILocation(line: 93, column: 20, scope: !597)
!670 = distinct !DISubprogram(name: "array<i32>", linkageName: "_ZN4core5alloc6layout6Layout5array17hacb403b6aba41249E", scope: !188, file: !598, line: 416, type: !671, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !673)
!671 = !DISubroutineType(types: !672)
!672 = !{!601, !193}
!673 = !{!674, !675, !677, !697}
!674 = !DILocalVariable(name: "n", arg: 1, scope: !670, file: !598, line: 416, type: !193)
!675 = !DILocalVariable(name: "array_size", scope: !676, file: !598, line: 417, type: !193, align: 8)
!676 = distinct !DILexicalBlock(scope: !670, file: !598, line: 417, column: 9)
!677 = !DILocalVariable(name: "residual", scope: !678, file: !598, line: 417, type: !679, align: 1)
!678 = distinct !DILexicalBlock(scope: !670, file: !598, line: 417, column: 79)
!679 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::layout::LayoutError>", scope: !602, file: !30, align: 8, elements: !680, templateParams: !140, identifier: "2408e7ead4450472646681a937f2eed")
!680 = !{!681}
!681 = !DICompositeType(tag: DW_TAG_variant_part, scope: !679, file: !30, align: 8, elements: !682, templateParams: !140, identifier: "6cbcec323d74ab47f813265a09655e1e")
!682 = !{!683, !693}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !681, file: !30, baseType: !684, align: 8)
!684 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !679, file: !30, align: 8, elements: !685, templateParams: !691, identifier: "40ec0a271e0cb2d34d257ba58fdead82")
!685 = !{!686}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !684, file: !30, baseType: !687, align: 8)
!687 = !DICompositeType(tag: DW_TAG_structure_type, name: "Infallible", scope: !688, file: !30, align: 8, elements: !689, templateParams: !140, identifier: "54da939063c7c2baf203c9f582cd0995")
!688 = !DINamespace(name: "convert", scope: !33)
!689 = !{!690}
!690 = !DICompositeType(tag: DW_TAG_variant_part, scope: !687, file: !30, align: 8, elements: !140, identifier: "8a046f69014feadb4a5e941e4277afe9")
!691 = !{!692, !612}
!692 = !DITemplateTypeParameter(name: "T", type: !687)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !681, file: !30, baseType: !694, align: 8)
!694 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !679, file: !30, align: 8, elements: !695, templateParams: !691, identifier: "72611e72c15211a4d55dae520b84155f")
!695 = !{!696}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !694, file: !30, baseType: !613, align: 8)
!697 = !DILocalVariable(name: "val", scope: !698, file: !598, line: 417, type: !193, align: 8)
!698 = distinct !DILexicalBlock(scope: !670, file: !598, line: 417, column: 26)
!699 = !DILocation(line: 416, column: 21, scope: !670)
!700 = !DILocalVariable(name: "self", scope: !701, file: !598, line: 417, type: !725, align: 8)
!701 = !DILexicalBlockFile(scope: !702, file: !598, discriminator: 0)
!702 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2a2bbb95e25acb5aE", scope: !704, file: !703, line: 2117, type: !705, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !733, retainedNodes: !739)
!703 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "376d3f50f2b6d030dde9244768e6c6e1")
!704 = !DINamespace(name: "{impl#27}", scope: !602)
!705 = !DISubroutineType(types: !706)
!706 = !{!707, !725}
!707 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>", scope: !708, file: !30, size: 128, align: 64, elements: !710, templateParams: !140, identifier: "ce5c98f9de0798e97388caf7b24b4edc")
!708 = !DINamespace(name: "control_flow", scope: !709)
!709 = !DINamespace(name: "ops", scope: !33)
!710 = !{!711}
!711 = !DICompositeType(tag: DW_TAG_variant_part, scope: !707, file: !30, size: 128, align: 64, elements: !712, templateParams: !140, identifier: "6bdd8e43359c9849ce58ffeff4bb9b82", discriminator: !724)
!712 = !{!713, !720}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !711, file: !30, baseType: !714, size: 128, align: 64, extraData: i64 0)
!714 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !707, file: !30, size: 128, align: 64, elements: !715, templateParams: !717, identifier: "b6fdadee5e49b7207145efbc9b42a94a")
!715 = !{!716}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !714, file: !30, baseType: !193, size: 64, align: 64, offset: 64)
!717 = !{!718, !719}
!718 = !DITemplateTypeParameter(name: "B", type: !679)
!719 = !DITemplateTypeParameter(name: "C", type: !193)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !711, file: !30, baseType: !721, size: 128, align: 64, extraData: i64 1)
!721 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !707, file: !30, size: 128, align: 64, elements: !722, templateParams: !717, identifier: "b5889c00b354165f6e6f55dba1990157")
!722 = !{!723}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !721, file: !30, baseType: !679, align: 8, offset: 64)
!724 = !DIDerivedType(tag: DW_TAG_member, scope: !707, file: !30, baseType: !34, size: 64, align: 64, flags: DIFlagArtificial)
!725 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, core::alloc::layout::LayoutError>", scope: !602, file: !30, size: 128, align: 64, elements: !726, templateParams: !140, identifier: "c2a525df37a04684d727d3bb68e24786")
!726 = !{!727}
!727 = !DICompositeType(tag: DW_TAG_variant_part, scope: !725, file: !30, size: 128, align: 64, elements: !728, templateParams: !140, identifier: "59922648ff1b36fe1aa289683c505c74", discriminator: !738)
!728 = !{!729, !734}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !727, file: !30, baseType: !730, size: 128, align: 64, extraData: i64 0)
!730 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !725, file: !30, size: 128, align: 64, elements: !731, templateParams: !733, identifier: "98a9acae3d260aa3de9b86f4a7044881")
!731 = !{!732}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !730, file: !30, baseType: !193, size: 64, align: 64, offset: 64)
!733 = !{!295, !612}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !727, file: !30, baseType: !735, size: 128, align: 64, extraData: i64 1)
!735 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !725, file: !30, size: 128, align: 64, elements: !736, templateParams: !733, identifier: "3430eaa712a080f75cd3b02585f182")
!736 = !{!737}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !735, file: !30, baseType: !613, align: 8, offset: 64)
!738 = !DIDerivedType(tag: DW_TAG_member, scope: !725, file: !30, baseType: !34, size: 64, align: 64, flags: DIFlagArtificial)
!739 = !{!700, !740, !743}
!740 = !DILocalVariable(name: "v", scope: !741, file: !598, line: 417, type: !193, align: 8)
!741 = !DILexicalBlockFile(scope: !742, file: !598, discriminator: 0)
!742 = distinct !DILexicalBlock(scope: !702, file: !703, line: 2119, column: 13)
!743 = !DILocalVariable(name: "e", scope: !744, file: !598, line: 417, type: !613, align: 1)
!744 = !DILexicalBlockFile(scope: !745, file: !598, discriminator: 0)
!745 = distinct !DILexicalBlock(scope: !702, file: !703, line: 2120, column: 13)
!746 = !DILocation(line: 417, column: 26, scope: !701, inlinedAt: !747)
!747 = !DILocation(line: 417, column: 26, scope: !670)
!748 = !DILocalVariable(name: "self", scope: !749, file: !598, line: 417, type: !387, align: 8)
!749 = !DILexicalBlockFile(scope: !750, file: !598, discriminator: 0)
!750 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h780743c97ac3b21cE", scope: !387, file: !751, line: 1051, type: !752, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !733, retainedNodes: !754)
!751 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "86a5483c3993f03690545387e943de77")
!752 = !DISubroutineType(types: !753)
!753 = !{!725, !387, !613}
!754 = !{!748, !755, !756}
!755 = !DILocalVariable(name: "err", scope: !749, file: !598, line: 417, type: !613, align: 1)
!756 = !DILocalVariable(name: "v", scope: !757, file: !598, line: 417, type: !193, align: 8)
!757 = !DILexicalBlockFile(scope: !758, file: !598, discriminator: 0)
!758 = distinct !DILexicalBlock(scope: !750, file: !751, line: 1056, column: 13)
!759 = !DILocation(line: 417, column: 26, scope: !749, inlinedAt: !747)
!760 = !DILocation(line: 417, column: 79, scope: !678)
!761 = !DILocalVariable(name: "residual", scope: !762, file: !598, line: 417, type: !679, align: 1)
!762 = !DILexicalBlockFile(scope: !763, file: !598, discriminator: 0)
!763 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6383c0696c6a3651E", scope: !764, file: !703, line: 2132, type: !765, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !771, retainedNodes: !767)
!764 = !DINamespace(name: "{impl#28}", scope: !602)
!765 = !DISubroutineType(types: !766)
!766 = !{!601, !679, !353}
!767 = !{!761, !768}
!768 = !DILocalVariable(name: "e", scope: !769, file: !598, line: 417, type: !613, align: 1)
!769 = !DILexicalBlockFile(scope: !770, file: !598, discriminator: 0)
!770 = distinct !DILexicalBlock(scope: !763, file: !703, line: 2134, column: 13)
!771 = !{!611, !612, !772}
!772 = !DITemplateTypeParameter(name: "F", type: !613)
!773 = !DILocation(line: 417, column: 26, scope: !762, inlinedAt: !774)
!774 = !DILocation(line: 417, column: 26, scope: !678)
!775 = !DILocation(line: 417, column: 26, scope: !744, inlinedAt: !747)
!776 = !DILocation(line: 417, column: 26, scope: !769, inlinedAt: !774)
!777 = !DILocation(line: 417, column: 26, scope: !757, inlinedAt: !747)
!778 = !DILocation(line: 417, column: 26, scope: !741, inlinedAt: !747)
!779 = !DILocation(line: 417, column: 26, scope: !698)
!780 = !DILocation(line: 417, column: 13, scope: !676)
!781 = !DILocation(line: 419, column: 51, scope: !782, inlinedAt: !786)
!782 = !DILexicalBlockFile(scope: !783, file: !598, discriminator: 0)
!783 = distinct !DISubprogram(name: "align_of<i32>", linkageName: "_ZN4core3mem8align_of17hd5d54591e558afb2E", scope: !32, file: !285, line: 464, type: !784, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !140)
!784 = !DISubroutineType(types: !785)
!785 = !{!193}
!786 = !DILocation(line: 56, column: 44, scope: !787, inlinedAt: !790)
!787 = distinct !DISubprogram(name: "of<i32>", linkageName: "_ZN4core3mem11valid_align10ValidAlign2of17h0f7bcc6140977f82E", scope: !195, file: !640, line: 54, type: !788, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !140)
!788 = !DISubroutineType(types: !789)
!789 = !{!195}
!790 = !DILocation(line: 419, column: 51, scope: !676)
!791 = !DILocalVariable(name: "align", scope: !792, file: !598, line: 419, type: !193, align: 8)
!792 = !DILexicalBlockFile(scope: !793, file: !598, discriminator: 0)
!793 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h2d349291653d4097E", scope: !195, file: !640, line: 29, type: !794, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !796)
!794 = !DISubroutineType(types: !795)
!795 = !{!195, !193}
!796 = !{!791, !797}
!797 = !DILocalVariable(name: "runtime", scope: !798, file: !598, line: 419, type: !800, align: 8)
!798 = !DILexicalBlockFile(scope: !799, file: !598, discriminator: 0)
!799 = distinct !DILexicalBlock(scope: !793, file: !655, line: 2336, column: 13)
!800 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !801, file: !30, size: 64, align: 64, elements: !803, templateParams: !140, identifier: "a24236e50785a0359acaebf14a869a84")
!801 = !DINamespace(name: "new_unchecked", scope: !802)
!802 = !DINamespace(name: "{impl#0}", scope: !31)
!803 = !{!804}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__align", scope: !800, file: !30, baseType: !255, size: 64, align: 64)
!805 = !DILocation(line: 419, column: 51, scope: !792, inlinedAt: !806)
!806 = !DILocation(line: 56, column: 18, scope: !787, inlinedAt: !790)
!807 = !DILocation(line: 420, column: 6, scope: !670)
!808 = !DILocation(line: 419, column: 9, scope: !676)
!809 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i32$GT$5clone17h7a924f1f3d20347eE", scope: !811, file: !810, line: 189, type: !814, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !817)
!810 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/clone.rs", directory: "", checksumkind: CSK_MD5, checksum: "3792fef4e5cf0c1ef2457d8c192d163d")
!811 = !DINamespace(name: "{impl#14}", scope: !812)
!812 = !DINamespace(name: "impls", scope: !813)
!813 = !DINamespace(name: "clone", scope: !33)
!814 = !DISubroutineType(types: !815)
!815 = !{!481, !816}
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&i32", baseType: !481, size: 64, align: 64, dwarfAddressSpace: 0)
!817 = !{!818}
!818 = !DILocalVariable(name: "self", arg: 1, scope: !809, file: !810, line: 189, type: !816)
!819 = !DILocation(line: 189, column: 30, scope: !809)
!820 = !DILocation(line: 190, column: 25, scope: !809)
!821 = !DILocation(line: 191, column: 22, scope: !809)
!822 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h7e0d3ce2d87c0f13E", scope: !823, file: !810, line: 189, type: !824, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !826)
!823 = !DINamespace(name: "{impl#5}", scope: !812)
!824 = !DISubroutineType(types: !825)
!825 = !{!193, !255}
!826 = !{!827}
!827 = !DILocalVariable(name: "self", arg: 1, scope: !822, file: !810, line: 189, type: !255)
!828 = !DILocation(line: 189, column: 30, scope: !822)
!829 = !DILocation(line: 190, column: 25, scope: !822)
!830 = !DILocation(line: 191, column: 22, scope: !822)
!831 = distinct !DISubprogram(name: "as_mut_ptr<[i32; 5]>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h36f4bc00422b1ce6E", scope: !833, file: !832, line: 506, type: !835, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !848, retainedNodes: !846)
!832 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "7e4712ab5341970456c5be6b0829b712")
!833 = !DINamespace(name: "{impl#0}", scope: !834)
!834 = !DINamespace(name: "slice", scope: !33)
!835 = !DISubroutineType(types: !836)
!836 = !{!837, !841}
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut [i32; 5]", baseType: !838, size: 64, align: 64, dwarfAddressSpace: 0)
!838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 160, align: 32, elements: !839)
!839 = !{!840}
!840 = !DISubrange(count: 5, lowerBound: 0)
!841 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [[i32; 5]]", file: !30, size: 128, align: 64, elements: !842, templateParams: !140, identifier: "374362077b729e3ede5a088ac8fc2f11")
!842 = !{!843, !845}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !841, file: !30, baseType: !844, size: 64, align: 64)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64, align: 64, dwarfAddressSpace: 0)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !841, file: !30, baseType: !193, size: 64, align: 64, offset: 64)
!846 = !{!847}
!847 = !DILocalVariable(name: "self", arg: 1, scope: !831, file: !832, line: 506, type: !841)
!848 = !{!849}
!849 = !DITemplateTypeParameter(name: "T", type: !838)
!850 = !DILocation(line: 506, column: 29, scope: !831)
!851 = !DILocation(line: 507, column: 9, scope: !831)
!852 = !DILocation(line: 508, column: 6, scope: !831)
!853 = distinct !DISubprogram(name: "as_mut_ptr<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h44bbeca8685a138cE", scope: !833, file: !832, line: 506, type: !854, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !862)
!854 = !DISubroutineType(types: !855)
!855 = !{!856, !857}
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut i32", baseType: !481, size: 64, align: 64, dwarfAddressSpace: 0)
!857 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [i32]", file: !30, size: 128, align: 64, elements: !858, templateParams: !140, identifier: "e558f8cebf02444c46b3d01510c8747d")
!858 = !{!859, !861}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !857, file: !30, baseType: !860, size: 64, align: 64)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64, align: 64, dwarfAddressSpace: 0)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !857, file: !30, baseType: !193, size: 64, align: 64, offset: 64)
!862 = !{!863}
!863 = !DILocalVariable(name: "self", arg: 1, scope: !853, file: !832, line: 506, type: !857)
!864 = !DILocation(line: 506, column: 29, scope: !853)
!865 = !DILocation(line: 507, column: 9, scope: !853)
!866 = !DILocation(line: 508, column: 6, scope: !853)
!867 = distinct !DISubprogram(name: "as_mut_ptr<[[i32; 5]; 4]>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h9f1040c218b50131E", scope: !833, file: !832, line: 506, type: !868, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !879, retainedNodes: !877)
!868 = !DISubroutineType(types: !869)
!869 = !{!870, !872}
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut [[i32; 5]; 4]", baseType: !871, size: 64, align: 64, dwarfAddressSpace: 0)
!871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !838, size: 640, align: 32, elements: !7)
!872 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [[[i32; 5]; 4]]", file: !30, size: 128, align: 64, elements: !873, templateParams: !140, identifier: "9d2feb748d1fc727ac308b3c59e2330e")
!873 = !{!874, !876}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !872, file: !30, baseType: !875, size: 64, align: 64)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64, align: 64, dwarfAddressSpace: 0)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !872, file: !30, baseType: !193, size: 64, align: 64, offset: 64)
!877 = !{!878}
!878 = !DILocalVariable(name: "self", arg: 1, scope: !867, file: !832, line: 506, type: !872)
!879 = !{!880}
!880 = !DITemplateTypeParameter(name: "T", type: !871)
!881 = !DILocation(line: 506, column: 29, scope: !867)
!882 = !DILocation(line: 507, column: 9, scope: !867)
!883 = !DILocation(line: 508, column: 6, scope: !867)
!884 = distinct !DISubprogram(name: "as_mut_ptr<i8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hbc3c92b75ce6dbfaE", scope: !833, file: !832, line: 506, type: !885, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !894, retainedNodes: !892)
!885 = !DISubroutineType(types: !886)
!886 = !{!21, !887}
!887 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [i8]", file: !30, size: 128, align: 64, elements: !888, templateParams: !140, identifier: "853add56ec460b77b26ca0cac8dad9d")
!888 = !{!889, !891}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !887, file: !30, baseType: !890, size: 64, align: 64)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64, align: 64, dwarfAddressSpace: 0)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !887, file: !30, baseType: !193, size: 64, align: 64, offset: 64)
!892 = !{!893}
!893 = !DILocalVariable(name: "self", arg: 1, scope: !884, file: !832, line: 506, type: !887)
!894 = !{!895}
!895 = !DITemplateTypeParameter(name: "T", type: !16)
!896 = !DILocation(line: 506, column: 29, scope: !884)
!897 = !DILocation(line: 507, column: 9, scope: !884)
!898 = !DILocation(line: 508, column: 6, scope: !884)
!899 = distinct !DISubprogram(name: "as_mut_ptr<u32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hd816d9d6afa269d2E", scope: !833, file: !832, line: 506, type: !900, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !910, retainedNodes: !908)
!900 = !DISubroutineType(types: !901)
!901 = !{!902, !903}
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u32", baseType: !6, size: 64, align: 64, dwarfAddressSpace: 0)
!903 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [u32]", file: !30, size: 128, align: 64, elements: !904, templateParams: !140, identifier: "4c36065ce7cb5e94d96acf304bf82e03")
!904 = !{!905, !907}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !903, file: !30, baseType: !906, size: 64, align: 64)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64, align: 64, dwarfAddressSpace: 0)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !903, file: !30, baseType: !193, size: 64, align: 64, offset: 64)
!908 = !{!909}
!909 = !DILocalVariable(name: "self", arg: 1, scope: !899, file: !832, line: 506, type: !903)
!910 = !{!911}
!911 = !DITemplateTypeParameter(name: "T", type: !6)
!912 = !DILocation(line: 506, column: 29, scope: !899)
!913 = !DILocation(line: 507, column: 9, scope: !899)
!914 = !DILocation(line: 508, column: 6, scope: !899)
!915 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hc19f3106568bca55E", scope: !833, file: !832, line: 476, type: !916, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !922)
!916 = !DISubroutineType(types: !917)
!917 = !{!480, !918}
!918 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[i32]", file: !30, size: 128, align: 64, elements: !919, templateParams: !140, identifier: "8022034f3dbe6b09f9f0a7f6cd6bb480")
!919 = !{!920, !921}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !918, file: !30, baseType: !860, size: 64, align: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !918, file: !30, baseType: !193, size: 64, align: 64, offset: 64)
!922 = !{!923}
!923 = !DILocalVariable(name: "self", arg: 1, scope: !915, file: !832, line: 476, type: !918)
!924 = !DILocation(line: 476, column: 25, scope: !915)
!925 = !DILocation(line: 477, column: 9, scope: !915)
!926 = !DILocation(line: 478, column: 6, scope: !915)
!927 = distinct !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveError, alloc::raw_vec::finish_grow::{closure_env#1}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h165ad2397c373541E", scope: !928, file: !703, line: 852, type: !952, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !981, retainedNodes: !974)
!928 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", scope: !602, file: !30, size: 128, align: 64, elements: !929, templateParams: !140, identifier: "326c2eceea8ace7e7c754e4033de99df")
!929 = !{!930}
!930 = !DICompositeType(tag: DW_TAG_variant_part, scope: !928, file: !30, size: 128, align: 64, elements: !931, templateParams: !140, identifier: "55535437789a1bb6b6e72f8531454ed7", discriminator: !951)
!931 = !{!932, !947}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !930, file: !30, baseType: !933, size: 128, align: 64)
!933 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !928, file: !30, size: 128, align: 64, elements: !934, templateParams: !943, identifier: "ba797c89d5b07ad053fbf7cf4701a55")
!934 = !{!935}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !933, file: !30, baseType: !936, size: 128, align: 64)
!936 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8]>", scope: !123, file: !30, size: 128, align: 64, elements: !937, templateParams: !131, identifier: "5fc58ef498feac33c505ded838596228")
!937 = !{!938}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !936, file: !30, baseType: !939, size: 128, align: 64)
!939 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !30, size: 128, align: 64, elements: !940, templateParams: !140, identifier: "7b54d414f2f329e57c9aa3e4ca07f4")
!940 = !{!941, !942}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !939, file: !30, baseType: !362, size: 64, align: 64)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !939, file: !30, baseType: !193, size: 64, align: 64, offset: 64)
!943 = !{!944, !945}
!944 = !DITemplateTypeParameter(name: "T", type: !936)
!945 = !DITemplateTypeParameter(name: "E", type: !946)
!946 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !190, file: !30, align: 8, elements: !140, identifier: "34d6c5a45c099706becbbcb30500973a")
!947 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !930, file: !30, baseType: !948, size: 128, align: 64, extraData: i64 0)
!948 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !928, file: !30, size: 128, align: 64, elements: !949, templateParams: !943, identifier: "136305b53d5a9b78b331b3b0fa91ec26")
!949 = !{!950}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !948, file: !30, baseType: !946, align: 8)
!951 = !DIDerivedType(tag: DW_TAG_member, scope: !928, file: !30, baseType: !34, size: 64, align: 64, flags: DIFlagArtificial)
!952 = !DISubroutineType(types: !953)
!953 = !{!954, !928, !969}
!954 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", scope: !602, file: !30, size: 192, align: 64, elements: !955, templateParams: !140, identifier: "601fd7588d09095b28b20a9eb093c288")
!955 = !{!956}
!956 = !DICompositeType(tag: DW_TAG_variant_part, scope: !954, file: !30, size: 192, align: 64, elements: !957, templateParams: !140, identifier: "3025750a6e319fc619c06f01e4832005", discriminator: !968)
!957 = !{!958, !964}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !956, file: !30, baseType: !959, size: 192, align: 64, extraData: i64 0)
!959 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !954, file: !30, size: 192, align: 64, elements: !960, templateParams: !962, identifier: "c3a563ea9d0ebe44c356aab410dc20ec")
!960 = !{!961}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !959, file: !30, baseType: !936, size: 128, align: 64, offset: 64)
!962 = !{!944, !963}
!963 = !DITemplateTypeParameter(name: "E", type: !175)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !956, file: !30, baseType: !965, size: 192, align: 64, extraData: i64 1)
!965 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !954, file: !30, size: 192, align: 64, elements: !966, templateParams: !962, identifier: "b98766a8ef41cfa7c1a20700f8c2ac67")
!966 = !{!967}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !965, file: !30, baseType: !175, size: 128, align: 64, offset: 64)
!968 = !DIDerivedType(tag: DW_TAG_member, scope: !954, file: !30, baseType: !34, size: 64, align: 64, flags: DIFlagArtificial)
!969 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<alloc::alloc::Global>", scope: !970, file: !30, size: 64, align: 64, elements: !971, templateParams: !140, identifier: "d5ca5ecf61bc300819ddcb9ae83470a1")
!970 = !DINamespace(name: "finish_grow", scope: !114)
!971 = !{!972}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__new_layout", scope: !969, file: !30, baseType: !973, size: 64, align: 64)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::alloc::layout::Layout", baseType: !188, size: 64, align: 64, dwarfAddressSpace: 0)
!974 = !{!975, !976, !977, !979}
!975 = !DILocalVariable(name: "self", arg: 1, scope: !927, file: !703, line: 852, type: !928)
!976 = !DILocalVariable(name: "op", arg: 2, scope: !927, file: !703, line: 852, type: !969)
!977 = !DILocalVariable(name: "t", scope: !978, file: !703, line: 854, type: !936, align: 8)
!978 = distinct !DILexicalBlock(scope: !927, file: !703, line: 854, column: 13)
!979 = !DILocalVariable(name: "e", scope: !980, file: !703, line: 855, type: !946, align: 1)
!980 = distinct !DILexicalBlock(scope: !927, file: !703, line: 855, column: 13)
!981 = !{!944, !945, !982, !983}
!982 = !DITemplateTypeParameter(name: "F", type: !175)
!983 = !DITemplateTypeParameter(name: "O", type: !969)
!984 = !DILocation(line: 852, column: 42, scope: !927)
!985 = !DILocation(line: 852, column: 48, scope: !927)
!986 = !DILocation(line: 855, column: 17, scope: !980)
!987 = !DILocation(line: 853, column: 15, scope: !927)
!988 = !DILocation(line: 853, column: 9, scope: !927)
!989 = !DILocation(line: 854, column: 16, scope: !927)
!990 = !DILocation(line: 854, column: 16, scope: !978)
!991 = !DILocation(line: 854, column: 22, scope: !978)
!992 = !DILocation(line: 854, column: 26, scope: !927)
!993 = !DILocation(line: 855, column: 27, scope: !980)
!994 = !DILocation(line: 855, column: 23, scope: !980)
!995 = !DILocation(line: 855, column: 32, scope: !927)
!996 = !DILocation(line: 857, column: 5, scope: !927)
!997 = !DILocation(line: 857, column: 6, scope: !927)
!998 = distinct !DISubprogram(name: "map_err<(), alloc::collections::TryReserveError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::handle_reserve::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h7c2c49ffc86eed49E", scope: !999, file: !703, line: 852, type: !1013, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1039, retainedNodes: !1032)
!999 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveError>", scope: !602, file: !30, size: 128, align: 64, elements: !1000, templateParams: !140, identifier: "4b89620c7f2c166f553026a950f3f2d2")
!1000 = !{!1001}
!1001 = !DICompositeType(tag: DW_TAG_variant_part, scope: !999, file: !30, size: 128, align: 64, elements: !1002, templateParams: !140, identifier: "7cb265f2a07c8821328b46cc3c388b7f", discriminator: !1012)
!1002 = !{!1003, !1008}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1001, file: !30, baseType: !1004, size: 128, align: 64, extraData: i64 -9223372036854775807)
!1004 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !999, file: !30, size: 128, align: 64, elements: !1005, templateParams: !1007, identifier: "fdce6ff40bcf3f7ab3b51ba04b7afc44")
!1005 = !{!1006}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1004, file: !30, baseType: !199, align: 8)
!1007 = !{!584, !963}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1001, file: !30, baseType: !1009, size: 128, align: 64)
!1009 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !999, file: !30, size: 128, align: 64, elements: !1010, templateParams: !1007, identifier: "d84ca0f977a325112ceaab4e30797620")
!1010 = !{!1011}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1009, file: !30, baseType: !175, size: 128, align: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, scope: !999, file: !30, baseType: !34, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!1015, !999, !1030}
!1015 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveErrorKind>", scope: !602, file: !30, size: 128, align: 64, elements: !1016, templateParams: !140, identifier: "cdc62e1ada228a0a3eeb1363cc168dd1")
!1016 = !{!1017}
!1017 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1015, file: !30, size: 128, align: 64, elements: !1018, templateParams: !140, identifier: "c07cde87a483df02fa92a38d58df4905", discriminator: !1029)
!1018 = !{!1019, !1025}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1017, file: !30, baseType: !1020, size: 128, align: 64, extraData: i64 -9223372036854775807)
!1020 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1015, file: !30, size: 128, align: 64, elements: !1021, templateParams: !1023, identifier: "ef69269b9f8a8dcfd892b17f0cd69f3b")
!1021 = !{!1022}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1020, file: !30, baseType: !199, align: 8)
!1023 = !{!584, !1024}
!1024 = !DITemplateTypeParameter(name: "E", type: !178)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1017, file: !30, baseType: !1026, size: 128, align: 64)
!1026 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1015, file: !30, size: 128, align: 64, elements: !1027, templateParams: !1023, identifier: "d1e764ecae8c88012ac4b46bb3413624")
!1027 = !{!1028}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1026, file: !30, baseType: !178, size: 128, align: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, scope: !1015, file: !30, baseType: !34, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!1030 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1031, file: !30, align: 8, elements: !140, identifier: "38662dde61d7b1e78dacba2cb2773d17")
!1031 = !DINamespace(name: "handle_reserve", scope: !114)
!1032 = !{!1033, !1034, !1035, !1037}
!1033 = !DILocalVariable(name: "self", arg: 1, scope: !998, file: !703, line: 852, type: !999)
!1034 = !DILocalVariable(name: "op", arg: 2, scope: !998, file: !703, line: 852, type: !1030)
!1035 = !DILocalVariable(name: "t", scope: !1036, file: !703, line: 854, type: !199, align: 1)
!1036 = distinct !DILexicalBlock(scope: !998, file: !703, line: 854, column: 13)
!1037 = !DILocalVariable(name: "e", scope: !1038, file: !703, line: 855, type: !175, align: 8)
!1038 = distinct !DILexicalBlock(scope: !998, file: !703, line: 855, column: 13)
!1039 = !{!584, !963, !1040, !1041}
!1040 = !DITemplateTypeParameter(name: "F", type: !178)
!1041 = !DITemplateTypeParameter(name: "O", type: !1030)
!1042 = !DILocation(line: 852, column: 42, scope: !998)
!1043 = !DILocation(line: 852, column: 48, scope: !998)
!1044 = !DILocation(line: 854, column: 16, scope: !1036)
!1045 = !DILocation(line: 853, column: 15, scope: !998)
!1046 = !{i64 0, i64 -9223372036854775806}
!1047 = !DILocation(line: 853, column: 9, scope: !998)
!1048 = !DILocation(line: 854, column: 22, scope: !1036)
!1049 = !DILocation(line: 854, column: 26, scope: !998)
!1050 = !DILocation(line: 855, column: 17, scope: !998)
!1051 = !DILocation(line: 855, column: 17, scope: !1038)
!1052 = !DILocation(line: 855, column: 27, scope: !1038)
!1053 = !DILocation(line: 855, column: 23, scope: !1038)
!1054 = !DILocation(line: 855, column: 32, scope: !998)
!1055 = !DILocation(line: 857, column: 5, scope: !998)
!1056 = !DILocation(line: 857, column: 6, scope: !998)
!1057 = distinct !DISubprogram(name: "map_err<core::alloc::layout::Layout, core::alloc::layout::LayoutError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::finish_grow::{closure_env#0}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h8e9bd93aa89f042cE", scope: !601, file: !703, line: 852, type: !1058, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1082, retainedNodes: !1075)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!1060, !601, !1074}
!1060 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", scope: !602, file: !30, size: 192, align: 64, elements: !1061, templateParams: !140, identifier: "b9de8b8c009cd0becb59806c6ce8cc5f")
!1061 = !{!1062}
!1062 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1060, file: !30, size: 192, align: 64, elements: !1063, templateParams: !140, identifier: "2c02efbe3ea4d75026f025a2705c6c96", discriminator: !1073)
!1063 = !{!1064, !1069}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1062, file: !30, baseType: !1065, size: 192, align: 64, extraData: i64 0)
!1065 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1060, file: !30, size: 192, align: 64, elements: !1066, templateParams: !1068, identifier: "d52268884abf5d8c9a943cd013eaf021")
!1066 = !{!1067}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1065, file: !30, baseType: !188, size: 128, align: 64, offset: 64)
!1068 = !{!611, !1024}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1062, file: !30, baseType: !1070, size: 192, align: 64, extraData: i64 1)
!1070 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1060, file: !30, size: 192, align: 64, elements: !1071, templateParams: !1068, identifier: "8793f3a2507382c45ebef37ef1c4bc40")
!1071 = !{!1072}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1070, file: !30, baseType: !178, size: 128, align: 64, offset: 64)
!1073 = !DIDerivedType(tag: DW_TAG_member, scope: !1060, file: !30, baseType: !34, size: 64, align: 64, flags: DIFlagArtificial)
!1074 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::alloc::Global>", scope: !970, file: !30, align: 8, elements: !140, identifier: "f2bae2d168b0d8fd3c59ff569110796d")
!1075 = !{!1076, !1077, !1078, !1080}
!1076 = !DILocalVariable(name: "self", arg: 1, scope: !1057, file: !703, line: 852, type: !601)
!1077 = !DILocalVariable(name: "op", arg: 2, scope: !1057, file: !703, line: 852, type: !1074)
!1078 = !DILocalVariable(name: "t", scope: !1079, file: !703, line: 854, type: !188, align: 8)
!1079 = distinct !DILexicalBlock(scope: !1057, file: !703, line: 854, column: 13)
!1080 = !DILocalVariable(name: "e", scope: !1081, file: !703, line: 855, type: !613, align: 1)
!1081 = distinct !DILexicalBlock(scope: !1057, file: !703, line: 855, column: 13)
!1082 = !{!611, !612, !1040, !1083}
!1083 = !DITemplateTypeParameter(name: "O", type: !1074)
!1084 = !DILocation(line: 852, column: 42, scope: !1057)
!1085 = !DILocation(line: 852, column: 48, scope: !1057)
!1086 = !DILocation(line: 855, column: 17, scope: !1081)
!1087 = !DILocation(line: 853, column: 15, scope: !1057)
!1088 = !DILocation(line: 853, column: 9, scope: !1057)
!1089 = !DILocation(line: 854, column: 16, scope: !1057)
!1090 = !DILocation(line: 854, column: 16, scope: !1079)
!1091 = !DILocation(line: 854, column: 22, scope: !1079)
!1092 = !DILocation(line: 854, column: 26, scope: !1057)
!1093 = !DILocation(line: 855, column: 27, scope: !1081)
!1094 = !DILocation(line: 855, column: 23, scope: !1081)
!1095 = !DILocation(line: 855, column: 32, scope: !1057)
!1096 = !DILocation(line: 857, column: 5, scope: !1057)
!1097 = !DILocation(line: 857, column: 6, scope: !1057)
!1098 = distinct !DISubprogram(name: "from<core::alloc::layout::LayoutError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h37595fa91c3f459cE", scope: !1100, file: !1099, line: 559, type: !1101, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1105, retainedNodes: !1103)
!1099 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e9a22d2b51b4cfd278a09c9d531e27c4")
!1100 = !DINamespace(name: "{impl#4}", scope: !688)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{null, !613}
!1103 = !{!1104}
!1104 = !DILocalVariable(name: "t", arg: 1, scope: !1098, file: !1099, line: 559, type: !613)
!1105 = !{!1106}
!1106 = !DITemplateTypeParameter(name: "T", type: !613)
!1107 = !DILocation(line: 559, column: 13, scope: !1098)
!1108 = !DILocation(line: 561, column: 6, scope: !1098)
!1109 = distinct !DISubprogram(name: "from<core::alloc::AllocError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h841464a645d964abE", scope: !1100, file: !1099, line: 559, type: !1110, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1114, retainedNodes: !1112)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{null, !946}
!1112 = !{!1113}
!1113 = !DILocalVariable(name: "t", arg: 1, scope: !1109, file: !1099, line: 559, type: !946)
!1114 = !{!1115}
!1115 = !DITemplateTypeParameter(name: "T", type: !946)
!1116 = !DILocation(line: 559, column: 13, scope: !1109)
!1117 = !DILocation(line: 561, column: 6, scope: !1109)
!1118 = distinct !DISubprogram(name: "from<alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h91aa860e841d02efE", scope: !1100, file: !1099, line: 559, type: !1119, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1123, retainedNodes: !1121)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!175, !175}
!1121 = !{!1122}
!1122 = !DILocalVariable(name: "t", arg: 1, scope: !1118, file: !1099, line: 559, type: !175)
!1123 = !{!1124}
!1124 = !DITemplateTypeParameter(name: "T", type: !175)
!1125 = !DILocation(line: 559, column: 13, scope: !1118)
!1126 = !DILocation(line: 561, column: 6, scope: !1118)
!1127 = distinct !DISubprogram(name: "into<alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h846831bd743ffb62E", scope: !1128, file: !1099, line: 549, type: !173, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1131, retainedNodes: !1129)
!1128 = !DINamespace(name: "{impl#3}", scope: !688)
!1129 = !{!1130}
!1130 = !DILocalVariable(name: "self", arg: 1, scope: !1127, file: !1099, line: 549, type: !178)
!1131 = !{!1132, !1133}
!1132 = !DITemplateTypeParameter(name: "T", type: !178)
!1133 = !DITemplateTypeParameter(name: "U", type: !175)
!1134 = !DILocation(line: 549, column: 13, scope: !1127)
!1135 = !DILocation(line: 550, column: 9, scope: !1127)
!1136 = !DILocation(line: 551, column: 6, scope: !1127)
!1137 = distinct !DISubprogram(name: "into<core::ptr::unique::Unique<u8>, core::ptr::non_null::NonNull<u8>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h9dd4420d8f9307edE", scope: !1128, file: !1099, line: 549, type: !125, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1140, retainedNodes: !1138)
!1138 = !{!1139}
!1139 = !DILocalVariable(name: "self", arg: 1, scope: !1137, file: !1099, line: 549, type: !133)
!1140 = !{!1141, !1142}
!1141 = !DITemplateTypeParameter(name: "T", type: !133)
!1142 = !DITemplateTypeParameter(name: "U", type: !127)
!1143 = !DILocation(line: 549, column: 13, scope: !1137)
!1144 = !DILocation(line: 550, column: 9, scope: !1137)
!1145 = !DILocation(line: 551, column: 6, scope: !1137)
!1146 = distinct !DISubprogram(name: "is_zero", linkageName: "_ZN51_$LT$i32$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero17hf9193789f5d15d37E", scope: !1148, file: !1147, line: 13, type: !1150, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1152)
!1147 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/is_zero.rs", directory: "", checksumkind: CSK_MD5, checksum: "83b407d072d6bcd2e3812b178de30d71")
!1148 = !DINamespace(name: "{impl#7}", scope: !1149)
!1149 = !DINamespace(name: "is_zero", scope: !468)
!1150 = !DISubroutineType(types: !1151)
!1151 = !{!275, !816}
!1152 = !{!1153}
!1153 = !DILocalVariable(name: "self", arg: 1, scope: !1146, file: !1147, line: 13, type: !816)
!1154 = !DILocation(line: 13, column: 24, scope: !1146)
!1155 = !DILocation(line: 14, column: 26, scope: !1146)
!1156 = !DILocation(line: 14, column: 17, scope: !1146)
!1157 = !DILocation(line: 15, column: 14, scope: !1146)
!1158 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN51_$LT$i32$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero28_$u7b$$u7b$closure$u7d$$u7d$17hd69734bb95f27cc1E", scope: !1159, file: !1147, line: 22, type: !1160, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1164)
!1159 = !DINamespace(name: "is_zero", scope: !1148)
!1160 = !DISubroutineType(types: !1161)
!1161 = !{!275, !1162, !481}
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::is_zero::{impl#7}::is_zero::{closure_env#0}", baseType: !1163, size: 64, align: 64, dwarfAddressSpace: 0)
!1163 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1159, file: !30, align: 8, elements: !140, identifier: "57f7803d027d837e9b594a4dea351281")
!1164 = !{!1165, !1166}
!1165 = !DILocalVariable(name: "x", arg: 2, scope: !1158, file: !1147, line: 22, type: !481)
!1166 = !DILocalVariable(arg: 1, scope: !1158, file: !1147, line: 22, type: !1162)
!1167 = !DILocation(line: 22, column: 20, scope: !1158)
!1168 = !DILocation(line: 22, column: 21, scope: !1158)
!1169 = !DILocation(line: 22, column: 24, scope: !1158)
!1170 = !DILocation(line: 22, column: 23, scope: !1158)
!1171 = distinct !DISubprogram(name: "as_mut_ptr<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hffe6c8eac2fd4d5aE", scope: !467, file: !1172, line: 1204, type: !1173, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !490, retainedNodes: !1176)
!1172 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "ccced07f4d2284e276bdff9c5cb81e82")
!1173 = !DISubroutineType(types: !1174)
!1174 = !{!856, !1175}
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<i32, alloc::alloc::Global>", baseType: !467, size: 64, align: 64, dwarfAddressSpace: 0)
!1176 = !{!1177, !1178}
!1177 = !DILocalVariable(name: "self", arg: 1, scope: !1171, file: !1172, line: 1204, type: !1175)
!1178 = !DILocalVariable(name: "ptr", scope: !1179, file: !1172, line: 1207, type: !856, align: 8)
!1179 = distinct !DILexicalBlock(scope: !1171, file: !1172, line: 1207, column: 9)
!1180 = !DILocation(line: 1204, column: 23, scope: !1171)
!1181 = !DILocalVariable(name: "metadata", scope: !1182, file: !1172, line: 1209, type: !199, align: 1)
!1182 = !DILexicalBlockFile(scope: !1183, file: !1172, discriminator: 0)
!1183 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17he32d9f342ecea984E", scope: !544, file: !543, line: 127, type: !545, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !1184)
!1184 = !{!1185, !1181}
!1185 = !DILocalVariable(name: "data_address", scope: !1182, file: !1172, line: 1209, type: !547, align: 8)
!1186 = !DILocation(line: 1209, column: 21, scope: !1182, inlinedAt: !1187)
!1187 = !DILocation(line: 668, column: 5, scope: !1188, inlinedAt: !1189)
!1188 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hc6de534b9a6395daE", scope: !124, file: !301, line: 667, type: !553, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !140)
!1189 = !DILocation(line: 38, column: 41, scope: !1190, inlinedAt: !1196)
!1190 = distinct !DISubprogram(name: "is_null<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h01e5dfff083ec3b1E", scope: !558, file: !557, line: 35, type: !1191, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !1193)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{!275, !856}
!1193 = !{!1194}
!1194 = !DILocalVariable(name: "self", scope: !1195, file: !1172, line: 1209, type: !856, align: 8)
!1195 = !DILexicalBlockFile(scope: !1190, file: !1172, discriminator: 0)
!1196 = !DILocation(line: 1209, column: 21, scope: !1179)
!1197 = !DILocation(line: 1207, column: 19, scope: !1171)
!1198 = !DILocalVariable(name: "self", scope: !1199, file: !1172, line: 1207, type: !1204, align: 8)
!1199 = !DILexicalBlockFile(scope: !1200, file: !1172, discriminator: 0)
!1200 = distinct !DISubprogram(name: "ptr<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hc0f1bb48442b07a8E", scope: !471, file: !1201, line: 223, type: !1202, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !490, retainedNodes: !1205)
!1201 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/raw_vec.rs", directory: "", checksumkind: CSK_MD5, checksum: "7882a816b01a8bc5234f4586c1b0290b")
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!856, !1204}
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<i32, alloc::alloc::Global>", baseType: !471, size: 64, align: 64, dwarfAddressSpace: 0)
!1205 = !{!1198}
!1206 = !DILocation(line: 1207, column: 19, scope: !1199, inlinedAt: !1197)
!1207 = !DILocalVariable(name: "self", scope: !1208, file: !1172, line: 1207, type: !474, align: 8)
!1208 = !DILexicalBlockFile(scope: !1209, file: !1172, discriminator: 0)
!1209 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h7ceda2b18486d7f6E", scope: !474, file: !148, line: 103, type: !1210, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !1212)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!856, !474}
!1212 = !{!1207}
!1213 = !DILocation(line: 1207, column: 19, scope: !1208, inlinedAt: !1214)
!1214 = !DILocation(line: 224, column: 9, scope: !1200, inlinedAt: !1197)
!1215 = !DILocalVariable(name: "self", scope: !1216, file: !1172, line: 1207, type: !477, align: 8)
!1216 = !DILexicalBlockFile(scope: !1217, file: !1172, discriminator: 0)
!1217 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he26f67c1134ddd48E", scope: !477, file: !121, line: 330, type: !1218, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !1220)
!1218 = !DISubroutineType(types: !1219)
!1219 = !{!856, !477}
!1220 = !{!1215}
!1221 = !DILocation(line: 1207, column: 19, scope: !1216, inlinedAt: !1222)
!1222 = !DILocation(line: 104, column: 9, scope: !1209, inlinedAt: !1214)
!1223 = !DILocation(line: 1207, column: 13, scope: !1179)
!1224 = !DILocation(line: 1209, column: 21, scope: !1195, inlinedAt: !1196)
!1225 = !DILocalVariable(name: "self", scope: !1226, file: !1172, line: 1209, type: !151, align: 8)
!1226 = !DILexicalBlockFile(scope: !1227, file: !1172, discriminator: 0)
!1227 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h821d7c2a5a2b9ba1E", scope: !558, file: !557, line: 707, type: !570, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !1228)
!1228 = !{!1225, !1229}
!1229 = !DILocalVariable(name: "other", scope: !1226, file: !1172, line: 1209, type: !151, align: 8)
!1230 = !DILocation(line: 1209, column: 21, scope: !1226, inlinedAt: !1231)
!1231 = !DILocation(line: 38, column: 9, scope: !1190, inlinedAt: !1196)
!1232 = !DILocation(line: 1209, column: 21, scope: !1233, inlinedAt: !1237)
!1233 = !DILexicalBlockFile(scope: !1234, file: !1172, discriminator: 0)
!1234 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h647b57a84c614c40E", scope: !124, file: !301, line: 569, type: !579, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !583, retainedNodes: !1235)
!1235 = !{!1236}
!1236 = !DILocalVariable(name: "addr", scope: !1233, file: !1172, line: 1209, type: !193, align: 8)
!1237 = !DILocation(line: 668, column: 24, scope: !1188, inlinedAt: !1189)
!1238 = !DILocation(line: 1209, column: 20, scope: !1179)
!1239 = !DILocation(line: 1209, column: 13, scope: !1179)
!1240 = !DILocation(line: 1212, column: 6, scope: !1171)
!1241 = distinct !DISubprogram(name: "extend_with<i32, alloc::alloc::Global, alloc::vec::ExtendElement<i32>>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$11extend_with17h05f27130d0fb2a4aE", scope: !467, file: !1172, line: 2398, type: !1242, scopeLine: 2398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1264, retainedNodes: !1247)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{null, !1175, !193, !1244}
!1244 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExtendElement<i32>", scope: !468, file: !30, size: 32, align: 32, elements: !1245, templateParams: !482, identifier: "5d0991a1ea0ba07973638fd6b6c4a27a")
!1245 = !{!1246}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1244, file: !30, baseType: !481, size: 32, align: 32)
!1247 = !{!1248, !1249, !1250, !1251, !1253, !1255}
!1248 = !DILocalVariable(name: "self", arg: 1, scope: !1241, file: !1172, line: 2398, type: !1175)
!1249 = !DILocalVariable(name: "n", arg: 2, scope: !1241, file: !1172, line: 2398, type: !193)
!1250 = !DILocalVariable(name: "value", arg: 3, scope: !1241, file: !1172, line: 2398, type: !1244)
!1251 = !DILocalVariable(name: "ptr", scope: !1252, file: !1172, line: 2402, type: !856, align: 8)
!1252 = distinct !DILexicalBlock(scope: !1241, file: !1172, line: 2402, column: 13)
!1253 = !DILocalVariable(name: "local_len", scope: !1254, file: !1172, line: 2406, type: !511, align: 8)
!1254 = distinct !DILexicalBlock(scope: !1252, file: !1172, line: 2406, column: 13)
!1255 = !DILocalVariable(name: "iter", scope: !1256, file: !1172, line: 2409, type: !1257, align: 8)
!1256 = distinct !DILexicalBlock(scope: !1254, file: !1172, line: 2409, column: 13)
!1257 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !1258, file: !30, size: 128, align: 64, elements: !1259, templateParams: !1262, identifier: "855eb37746b15049ea4556b174e97dd7")
!1258 = !DINamespace(name: "range", scope: !709)
!1259 = !{!1260, !1261}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1257, file: !30, baseType: !193, size: 64, align: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1257, file: !30, baseType: !193, size: 64, align: 64, offset: 64)
!1262 = !{!1263}
!1263 = !DITemplateTypeParameter(name: "Idx", type: !193)
!1264 = !{!483, !491, !1265}
!1265 = !DITemplateTypeParameter(name: "E", type: !1244)
!1266 = !DILocation(line: 2398, column: 38, scope: !1241)
!1267 = !DILocation(line: 2398, column: 49, scope: !1241)
!1268 = !DILocation(line: 2398, column: 59, scope: !1241)
!1269 = !DILocation(line: 2402, column: 17, scope: !1252)
!1270 = !DILocation(line: 2406, column: 17, scope: !1254)
!1271 = !DILocalVariable(name: "self", scope: !1272, file: !1172, line: 2409, type: !1257, align: 8)
!1272 = !DILexicalBlockFile(scope: !1273, file: !1172, discriminator: 0)
!1273 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<usize>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h132cccccb5f5a0ecE", scope: !1275, file: !1274, line: 271, type: !1278, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1281, retainedNodes: !1280)
!1274 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "73b4070628f6fcec74cccccb11afa9ef")
!1275 = !DINamespace(name: "{impl#0}", scope: !1276)
!1276 = !DINamespace(name: "collect", scope: !1277)
!1277 = !DINamespace(name: "traits", scope: !211)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!1257, !1257}
!1280 = !{!1271}
!1281 = !{!1282}
!1282 = !DITemplateTypeParameter(name: "I", type: !1257)
!1283 = !DILocation(line: 2409, column: 22, scope: !1272, inlinedAt: !1284)
!1284 = !DILocation(line: 2409, column: 22, scope: !1254)
!1285 = !DILocation(line: 2409, column: 22, scope: !1256)
!1286 = !DILocalVariable(name: "src", scope: !1287, file: !1172, line: 2410, type: !481, align: 4)
!1287 = !DILexicalBlockFile(scope: !1288, file: !1172, discriminator: 0)
!1288 = distinct !DISubprogram(name: "write<i32>", linkageName: "_ZN4core3ptr5write17hda340de4973e49eaE", scope: !124, file: !301, line: 1296, type: !1289, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !1291)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{null, !856, !481}
!1291 = !{!1292, !1286}
!1292 = !DILocalVariable(name: "dst", scope: !1287, file: !1172, line: 2410, type: !856, align: 8)
!1293 = !DILocation(line: 2410, column: 17, scope: !1287, inlinedAt: !1294)
!1294 = !DILocation(line: 2410, column: 17, scope: !1256)
!1295 = !DILocalVariable(name: "src", scope: !1296, file: !1172, line: 2418, type: !481, align: 4)
!1296 = !DILexicalBlockFile(scope: !1297, file: !1172, discriminator: 0)
!1297 = distinct !DISubprogram(name: "write<i32>", linkageName: "_ZN4core3ptr5write17hda340de4973e49eaE", scope: !124, file: !301, line: 1296, type: !1289, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !1298)
!1298 = !{!1299, !1295}
!1299 = !DILocalVariable(name: "dst", scope: !1296, file: !1172, line: 2418, type: !856, align: 8)
!1300 = !DILocation(line: 2418, column: 17, scope: !1296, inlinedAt: !1301)
!1301 = !DILocation(line: 2418, column: 17, scope: !1254)
!1302 = !DILocation(line: 2399, column: 9, scope: !1241)
!1303 = !DILocation(line: 2424, column: 5, scope: !1241)
!1304 = !DILocation(line: 2402, column: 27, scope: !1241)
!1305 = !DILocalVariable(name: "self", scope: !1306, file: !1172, line: 2402, type: !856, align: 8)
!1306 = !DILexicalBlockFile(scope: !1307, file: !1172, discriminator: 0)
!1307 = distinct !DISubprogram(name: "add<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h71a7e84632d22142E", scope: !558, file: !557, line: 985, type: !1308, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !1310)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!856, !856, !193}
!1310 = !{!1305, !1311}
!1311 = !DILocalVariable(name: "count", scope: !1306, file: !1172, line: 2402, type: !193, align: 8)
!1312 = !DILocation(line: 2402, column: 27, scope: !1306, inlinedAt: !1304)
!1313 = !DILocation(line: 2402, column: 49, scope: !1241)
!1314 = !DILocalVariable(name: "self", scope: !1315, file: !1172, line: 2402, type: !1318, align: 8)
!1315 = distinct !DISubprogram(name: "len<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h6730026f07e1373fE", scope: !467, file: !1172, line: 1945, type: !1316, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !490, retainedNodes: !1319)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{!193, !1318}
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::Vec<i32, alloc::alloc::Global>", baseType: !467, size: 64, align: 64, dwarfAddressSpace: 0)
!1319 = !{!1314}
!1320 = !DILocation(line: 2402, column: 49, scope: !1315, inlinedAt: !1313)
!1321 = !DILocalVariable(name: "self", scope: !1322, file: !1172, line: 2402, type: !856, align: 8)
!1322 = !DILexicalBlockFile(scope: !1323, file: !1172, discriminator: 0)
!1323 = distinct !DISubprogram(name: "offset<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h86849c257a4818b4E", scope: !558, file: !557, line: 465, type: !1324, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !1327)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{!856, !856, !1326}
!1326 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!1327 = !{!1321, !1328}
!1328 = !DILocalVariable(name: "count", scope: !1322, file: !1172, line: 2402, type: !1326, align: 8)
!1329 = !DILocation(line: 2402, column: 27, scope: !1322, inlinedAt: !1330)
!1330 = !DILocation(line: 990, column: 18, scope: !1307, inlinedAt: !1304)
!1331 = !DILocation(line: 2406, column: 51, scope: !1252)
!1332 = !DILocalVariable(name: "len", scope: !1333, file: !1172, line: 2406, type: !288, align: 8)
!1333 = !DILexicalBlockFile(scope: !1334, file: !1172, discriminator: 0)
!1334 = distinct !DISubprogram(name: "new", linkageName: "_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop3new17hf866f14ff96d3243E", scope: !511, file: !1335, line: 13, type: !1336, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1338)
!1335 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/set_len_on_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "46ffd8255e376b538abacd2d8152b3c0")
!1336 = !DISubroutineType(types: !1337)
!1337 = !{!511, !288}
!1338 = !{!1332}
!1339 = !DILocation(line: 2406, column: 33, scope: !1333, inlinedAt: !1340)
!1340 = !DILocation(line: 2406, column: 33, scope: !1252)
!1341 = !DILocation(line: 2409, column: 13, scope: !1256)
!1342 = !DILocalVariable(name: "self", scope: !1343, file: !1172, line: 2409, type: !1348, align: 8)
!1343 = !DILexicalBlockFile(scope: !1344, file: !1172, discriminator: 0)
!1344 = distinct !DISubprogram(name: "next<usize>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h7e2dc03afb3f63a2E", scope: !1345, file: !208, line: 710, type: !1346, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1350, retainedNodes: !1349)
!1345 = !DINamespace(name: "{impl#3}", scope: !210)
!1346 = !DISubroutineType(types: !1347)
!1347 = !{!387, !1348}
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ops::range::Range<usize>", baseType: !1257, size: 64, align: 64, dwarfAddressSpace: 0)
!1349 = !{!1342}
!1350 = !{!1351}
!1351 = !DITemplateTypeParameter(name: "A", type: !193)
!1352 = !DILocation(line: 2409, column: 22, scope: !1343, inlinedAt: !1285)
!1353 = !DILocation(line: 2423, column: 9, scope: !1252)
!1354 = !DILocation(line: 2416, column: 16, scope: !1254)
!1355 = !DILocation(line: 2410, column: 28, scope: !1256)
!1356 = !DILocation(line: 2410, column: 33, scope: !1256)
!1357 = !DILocation(line: 2411, column: 23, scope: !1256)
!1358 = !DILocalVariable(name: "self", scope: !1359, file: !1172, line: 2411, type: !856, align: 8)
!1359 = !DILexicalBlockFile(scope: !1360, file: !1172, discriminator: 0)
!1360 = distinct !DISubprogram(name: "offset<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h86849c257a4818b4E", scope: !558, file: !557, line: 465, type: !1324, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !1361)
!1361 = !{!1358, !1362}
!1362 = !DILocalVariable(name: "count", scope: !1359, file: !1172, line: 2411, type: !1326, align: 8)
!1363 = !DILocation(line: 2411, column: 23, scope: !1359, inlinedAt: !1357)
!1364 = !DILocation(line: 2411, column: 17, scope: !1256)
!1365 = !DILocation(line: 2413, column: 17, scope: !1256)
!1366 = !DILocalVariable(name: "self", scope: !1367, file: !1172, line: 2413, type: !1371, align: 8)
!1367 = !DILexicalBlockFile(scope: !1368, file: !1172, discriminator: 0)
!1368 = distinct !DISubprogram(name: "increment_len", linkageName: "_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop13increment_len17h045c5c583c2663f4E", scope: !511, file: !1335, line: 18, type: !1369, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1372)
!1369 = !DISubroutineType(types: !1370)
!1370 = !{null, !1371, !193}
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::set_len_on_drop::SetLenOnDrop", baseType: !511, size: 64, align: 64, dwarfAddressSpace: 0)
!1372 = !{!1366, !1373}
!1373 = !DILocalVariable(name: "increment", scope: !1367, file: !1172, line: 2413, type: !193, align: 8)
!1374 = !DILocation(line: 2413, column: 17, scope: !1367, inlinedAt: !1365)
!1375 = !DILocation(line: 2418, column: 28, scope: !1254)
!1376 = !DILocation(line: 2418, column: 33, scope: !1254)
!1377 = !DILocation(line: 2419, column: 17, scope: !1254)
!1378 = !DILocalVariable(name: "self", scope: !1379, file: !1172, line: 2419, type: !1371, align: 8)
!1379 = !DILexicalBlockFile(scope: !1380, file: !1172, discriminator: 0)
!1380 = distinct !DISubprogram(name: "increment_len", linkageName: "_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop13increment_len17h045c5c583c2663f4E", scope: !511, file: !1335, line: 18, type: !1369, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1381)
!1381 = !{!1378, !1382}
!1382 = !DILocalVariable(name: "increment", scope: !1379, file: !1172, line: 2419, type: !193, align: 8)
!1383 = !DILocation(line: 2419, column: 17, scope: !1379, inlinedAt: !1377)
!1384 = !DILocation(line: 2416, column: 13, scope: !1254)
!1385 = !DILocation(line: 2398, column: 5, scope: !1241)
!1386 = !DILocation(line: 2424, column: 6, scope: !1241)
!1387 = distinct !DISubprogram(name: "reserve<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h10f06679282f1355E", scope: !467, file: !1172, line: 840, type: !1388, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !490, retainedNodes: !1390)
!1388 = !DISubroutineType(types: !1389)
!1389 = !{null, !1175, !193}
!1390 = !{!1391, !1392}
!1391 = !DILocalVariable(name: "self", arg: 1, scope: !1387, file: !1172, line: 840, type: !1175)
!1392 = !DILocalVariable(name: "additional", arg: 2, scope: !1387, file: !1172, line: 840, type: !193)
!1393 = !DILocation(line: 840, column: 20, scope: !1387)
!1394 = !DILocation(line: 840, column: 31, scope: !1387)
!1395 = !DILocation(line: 841, column: 9, scope: !1387)
!1396 = !DILocation(line: 841, column: 26, scope: !1387)
!1397 = !DILocation(line: 842, column: 6, scope: !1387)
!1398 = distinct !DISubprogram(name: "from_elem<i32>", linkageName: "_ZN5alloc3vec9from_elem17h24dc4e25bdbefd73E", scope: !468, file: !1172, line: 2456, type: !1399, scopeLine: 2456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !1401)
!1399 = !DISubroutineType(types: !1400)
!1400 = !{!467, !481, !193}
!1401 = !{!1402, !1403}
!1402 = !DILocalVariable(name: "elem", arg: 1, scope: !1398, file: !1172, line: 2456, type: !481)
!1403 = !DILocalVariable(name: "n", arg: 2, scope: !1398, file: !1172, line: 2456, type: !193)
!1404 = !DILocation(line: 2456, column: 28, scope: !1398)
!1405 = !DILocation(line: 2456, column: 37, scope: !1398)
!1406 = !DILocation(line: 2457, column: 5, scope: !1398)
!1407 = !DILocation(line: 2458, column: 2, scope: !1398)
!1408 = distinct !DISubprogram(name: "alloc_impl", linkageName: "_ZN5alloc5alloc6Global10alloc_impl17hea9263b0758b56d9E", scope: !488, file: !1409, line: 172, type: !1410, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1413)
!1409 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/alloc.rs", directory: "", checksumkind: CSK_MD5, checksum: "b6c7758b12bd6b7f0705d9bc90e671ea")
!1410 = !DISubroutineType(types: !1411)
!1411 = !{!928, !1412, !188, !275}
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::alloc::Global", baseType: !488, size: 64, align: 64, dwarfAddressSpace: 0)
!1413 = !{!1414, !1415, !1416, !1417, !1419, !1421, !1423, !1438}
!1414 = !DILocalVariable(name: "self", arg: 1, scope: !1408, file: !1409, line: 172, type: !1412)
!1415 = !DILocalVariable(name: "layout", arg: 2, scope: !1408, file: !1409, line: 172, type: !188)
!1416 = !DILocalVariable(name: "zeroed", arg: 3, scope: !1408, file: !1409, line: 172, type: !275)
!1417 = !DILocalVariable(name: "size", scope: !1418, file: !1409, line: 176, type: !193, align: 8)
!1418 = distinct !DILexicalBlock(scope: !1408, file: !1409, line: 176, column: 13)
!1419 = !DILocalVariable(name: "raw_ptr", scope: !1420, file: !1409, line: 177, type: !151, align: 8)
!1420 = distinct !DILexicalBlock(scope: !1418, file: !1409, line: 177, column: 17)
!1421 = !DILocalVariable(name: "ptr", scope: !1422, file: !1409, line: 178, type: !127, align: 8)
!1422 = distinct !DILexicalBlock(scope: !1420, file: !1409, line: 178, column: 17)
!1423 = !DILocalVariable(name: "residual", scope: !1424, file: !1409, line: 178, type: !1425, align: 1)
!1424 = distinct !DILexicalBlock(scope: !1420, file: !1409, line: 178, column: 66)
!1425 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::AllocError>", scope: !602, file: !30, align: 8, elements: !1426, templateParams: !140, identifier: "572d358f2a12b97961cfb71e38e53f04")
!1426 = !{!1427}
!1427 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1425, file: !30, align: 8, elements: !1428, templateParams: !140, identifier: "88663002e18d2fe1148d606c86c1d5ff")
!1428 = !{!1429, !1434}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1427, file: !30, baseType: !1430, align: 8)
!1430 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1425, file: !30, align: 8, elements: !1431, templateParams: !1433, identifier: "be577e6defde51b29863ecc8d4e2e22a")
!1431 = !{!1432}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1430, file: !30, baseType: !687, align: 8)
!1433 = !{!692, !945}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1427, file: !30, baseType: !1435, align: 8)
!1435 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1425, file: !30, align: 8, elements: !1436, templateParams: !1433, identifier: "1bce49b0456cc0581bfad8a74808f72")
!1436 = !{!1437}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1435, file: !30, baseType: !946, align: 8)
!1438 = !DILocalVariable(name: "val", scope: !1439, file: !1409, line: 178, type: !127, align: 8)
!1439 = distinct !DILexicalBlock(scope: !1420, file: !1409, line: 178, column: 27)
!1440 = !DILocation(line: 172, column: 19, scope: !1408)
!1441 = !DILocation(line: 172, column: 26, scope: !1408)
!1442 = !DILocation(line: 172, column: 42, scope: !1408)
!1443 = !DILocalVariable(name: "data", scope: !1444, file: !1409, line: 174, type: !127, align: 8)
!1444 = !DILexicalBlockFile(scope: !1445, file: !1409, discriminator: 0)
!1445 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h4bdb915c17c5b958E", scope: !936, file: !121, line: 487, type: !1446, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !1448)
!1446 = !DISubroutineType(types: !1447)
!1447 = !{!936, !127, !193}
!1448 = !{!1443, !1449}
!1449 = !DILocalVariable(name: "len", scope: !1444, file: !1409, line: 174, type: !193, align: 8)
!1450 = !DILocation(line: 174, column: 21, scope: !1444, inlinedAt: !1451)
!1451 = !DILocation(line: 174, column: 21, scope: !1408)
!1452 = !DILocation(line: 177, column: 21, scope: !1420)
!1453 = !DILocalVariable(name: "layout", scope: !1454, file: !1409, line: 177, type: !188, align: 8)
!1454 = distinct !DISubprogram(name: "alloc_zeroed", linkageName: "_ZN5alloc5alloc12alloc_zeroed17hc4638436b1621d09E", scope: !489, file: !1409, line: 165, type: !1455, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1457)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{!151, !188}
!1457 = !{!1453}
!1458 = !DILocation(line: 177, column: 43, scope: !1454, inlinedAt: !1459)
!1459 = !DILocation(line: 177, column: 43, scope: !1418)
!1460 = !DILocalVariable(name: "layout", scope: !1461, file: !1409, line: 177, type: !188, align: 8)
!1461 = distinct !DISubprogram(name: "alloc", linkageName: "_ZN5alloc5alloc5alloc17h72b6ea45aaebd70dE", scope: !489, file: !1409, line: 94, type: !1455, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1462)
!1462 = !{!1460}
!1463 = !DILocation(line: 177, column: 73, scope: !1461, inlinedAt: !1464)
!1464 = !DILocation(line: 177, column: 73, scope: !1418)
!1465 = !DILocalVariable(name: "self", scope: !1466, file: !1409, line: 178, type: !1486, align: 8)
!1466 = !DILexicalBlockFile(scope: !1467, file: !1409, discriminator: 0)
!1467 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7c49468d0b340f51E", scope: !704, file: !703, line: 2117, type: !1468, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1494, retainedNodes: !1500)
!1468 = !DISubroutineType(types: !1469)
!1469 = !{!1470, !1486}
!1470 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>", scope: !708, file: !30, size: 64, align: 64, elements: !1471, templateParams: !140, identifier: "7f8c65b25026163a60482c903b940372")
!1471 = !{!1472}
!1472 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1470, file: !30, size: 64, align: 64, elements: !1473, templateParams: !140, identifier: "a5a8c50ac5e6502472acbdda15ae7613", discriminator: !1485)
!1473 = !{!1474, !1481}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !1472, file: !30, baseType: !1475, size: 64, align: 64)
!1475 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !1470, file: !30, size: 64, align: 64, elements: !1476, templateParams: !1478, identifier: "d2ac067f6845ce1e8a08fbb330350406")
!1476 = !{!1477}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1475, file: !30, baseType: !127, size: 64, align: 64)
!1478 = !{!1479, !1480}
!1479 = !DITemplateTypeParameter(name: "B", type: !1425)
!1480 = !DITemplateTypeParameter(name: "C", type: !127)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !1472, file: !30, baseType: !1482, size: 64, align: 64, extraData: i64 0)
!1482 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !1470, file: !30, size: 64, align: 64, elements: !1483, templateParams: !1478, identifier: "81bddfbc89a9f0c5cc1c72e49b9ff534")
!1483 = !{!1484}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1482, file: !30, baseType: !1425, align: 8)
!1485 = !DIDerivedType(tag: DW_TAG_member, scope: !1470, file: !30, baseType: !34, size: 64, align: 64, flags: DIFlagArtificial)
!1486 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", scope: !602, file: !30, size: 64, align: 64, elements: !1487, templateParams: !140, identifier: "e71566aa277061ca8abc5a83ae5b9729")
!1487 = !{!1488}
!1488 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1486, file: !30, size: 64, align: 64, elements: !1489, templateParams: !140, identifier: "4a74327c407a883ea599f67b3290ba83", discriminator: !1499)
!1489 = !{!1490, !1495}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1488, file: !30, baseType: !1491, size: 64, align: 64)
!1491 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1486, file: !30, size: 64, align: 64, elements: !1492, templateParams: !1494, identifier: "71a196ee6c186d8bac41245f54989593")
!1492 = !{!1493}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1491, file: !30, baseType: !127, size: 64, align: 64)
!1494 = !{!531, !945}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1488, file: !30, baseType: !1496, size: 64, align: 64, extraData: i64 0)
!1496 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1486, file: !30, size: 64, align: 64, elements: !1497, templateParams: !1494, identifier: "fc861602d066f2f1f51a40a0537349e6")
!1497 = !{!1498}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1496, file: !30, baseType: !946, align: 8)
!1499 = !DIDerivedType(tag: DW_TAG_member, scope: !1486, file: !30, baseType: !34, size: 64, align: 64, flags: DIFlagArtificial)
!1500 = !{!1465, !1501, !1504}
!1501 = !DILocalVariable(name: "v", scope: !1502, file: !1409, line: 178, type: !127, align: 8)
!1502 = !DILexicalBlockFile(scope: !1503, file: !1409, discriminator: 0)
!1503 = distinct !DILexicalBlock(scope: !1467, file: !703, line: 2119, column: 13)
!1504 = !DILocalVariable(name: "e", scope: !1505, file: !1409, line: 178, type: !946, align: 1)
!1505 = !DILexicalBlockFile(scope: !1506, file: !1409, discriminator: 0)
!1506 = distinct !DILexicalBlock(scope: !1467, file: !703, line: 2120, column: 13)
!1507 = !DILocation(line: 178, column: 27, scope: !1466, inlinedAt: !1508)
!1508 = !DILocation(line: 178, column: 27, scope: !1420)
!1509 = !DILocalVariable(name: "self", scope: !1510, file: !1409, line: 178, type: !524, align: 8)
!1510 = !DILexicalBlockFile(scope: !1511, file: !1409, discriminator: 0)
!1511 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h04119dee30092c1eE", scope: !524, file: !751, line: 1051, type: !1512, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1494, retainedNodes: !1514)
!1512 = !DISubroutineType(types: !1513)
!1513 = !{!1486, !524, !946}
!1514 = !{!1509, !1515, !1516}
!1515 = !DILocalVariable(name: "err", scope: !1510, file: !1409, line: 178, type: !946, align: 1)
!1516 = !DILocalVariable(name: "v", scope: !1517, file: !1409, line: 178, type: !127, align: 8)
!1517 = !DILexicalBlockFile(scope: !1518, file: !1409, discriminator: 0)
!1518 = distinct !DILexicalBlock(scope: !1511, file: !751, line: 1056, column: 13)
!1519 = !DILocation(line: 178, column: 27, scope: !1510, inlinedAt: !1508)
!1520 = !DILocation(line: 178, column: 66, scope: !1424)
!1521 = !DILocalVariable(name: "residual", scope: !1522, file: !1409, line: 178, type: !1425, align: 1)
!1522 = !DILexicalBlockFile(scope: !1523, file: !1409, discriminator: 0)
!1523 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd371ba3745d67bacE", scope: !764, file: !703, line: 2132, type: !1524, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1530, retainedNodes: !1526)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!928, !1425, !353}
!1526 = !{!1521, !1527}
!1527 = !DILocalVariable(name: "e", scope: !1528, file: !1409, line: 178, type: !946, align: 1)
!1528 = !DILexicalBlockFile(scope: !1529, file: !1409, discriminator: 0)
!1529 = distinct !DILexicalBlock(scope: !1523, file: !703, line: 2134, column: 13)
!1530 = !{!944, !945, !1531}
!1531 = !DITemplateTypeParameter(name: "F", type: !946)
!1532 = !DILocation(line: 178, column: 27, scope: !1522, inlinedAt: !1533)
!1533 = !DILocation(line: 178, column: 27, scope: !1424)
!1534 = !DILocalVariable(name: "self", scope: !1535, file: !1409, line: 174, type: !628, align: 8)
!1535 = !DILexicalBlockFile(scope: !1536, file: !1409, discriminator: 0)
!1536 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h4c609daa585f4c69E", scope: !628, file: !627, line: 82, type: !632, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1537)
!1537 = !{!1534}
!1538 = !DILocation(line: 174, column: 51, scope: !1535, inlinedAt: !1539)
!1539 = !DILocation(line: 131, column: 9, scope: !1540, inlinedAt: !1546)
!1540 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17hcc6c9c31d4ab34e4E", scope: !188, file: !598, line: 130, type: !1541, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1543)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{!193, !973}
!1543 = !{!1544}
!1544 = !DILocalVariable(name: "self", scope: !1545, file: !1409, line: 174, type: !973, align: 8)
!1545 = !DILexicalBlockFile(scope: !1540, file: !1409, discriminator: 0)
!1546 = !DILocation(line: 205, column: 71, scope: !1547, inlinedAt: !1553)
!1547 = distinct !DISubprogram(name: "dangling", linkageName: "_ZN4core5alloc6layout6Layout8dangling17h221b5666fe5e1414E", scope: !188, file: !598, line: 203, type: !1548, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1550)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!127, !973}
!1550 = !{!1551}
!1551 = !DILocalVariable(name: "self", scope: !1552, file: !1409, line: 174, type: !973, align: 8)
!1552 = !DILexicalBlockFile(scope: !1547, file: !1409, discriminator: 0)
!1553 = !DILocation(line: 174, column: 51, scope: !1408)
!1554 = !DILocalVariable(name: "self", scope: !1555, file: !1409, line: 174, type: !195, align: 8)
!1555 = !DILexicalBlockFile(scope: !1556, file: !1409, discriminator: 0)
!1556 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h466a6ecaf9634463E", scope: !195, file: !640, line: 39, type: !641, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1557)
!1557 = !{!1554}
!1558 = !DILocation(line: 174, column: 51, scope: !1555, inlinedAt: !1539)
!1559 = !DILocalVariable(name: "self", scope: !1560, file: !1409, line: 177, type: !628, align: 8)
!1560 = !DILexicalBlockFile(scope: !1561, file: !1409, discriminator: 0)
!1561 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h4c609daa585f4c69E", scope: !628, file: !627, line: 82, type: !632, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1562)
!1562 = !{!1559}
!1563 = !DILocation(line: 177, column: 43, scope: !1560, inlinedAt: !1564)
!1564 = !DILocation(line: 131, column: 9, scope: !1565, inlinedAt: !1569)
!1565 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17hcc6c9c31d4ab34e4E", scope: !188, file: !598, line: 130, type: !1541, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1566)
!1566 = !{!1567}
!1567 = !DILocalVariable(name: "self", scope: !1568, file: !1409, line: 177, type: !973, align: 8)
!1568 = !DILexicalBlockFile(scope: !1565, file: !1409, discriminator: 0)
!1569 = !DILocation(line: 166, column: 49, scope: !1454, inlinedAt: !1459)
!1570 = !DILocalVariable(name: "self", scope: !1571, file: !1409, line: 177, type: !195, align: 8)
!1571 = !DILexicalBlockFile(scope: !1572, file: !1409, discriminator: 0)
!1572 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h466a6ecaf9634463E", scope: !195, file: !640, line: 39, type: !641, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1573)
!1573 = !{!1570}
!1574 = !DILocation(line: 177, column: 43, scope: !1571, inlinedAt: !1564)
!1575 = !DILocalVariable(name: "self", scope: !1576, file: !1409, line: 177, type: !628, align: 8)
!1576 = !DILexicalBlockFile(scope: !1577, file: !1409, discriminator: 0)
!1577 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h4c609daa585f4c69E", scope: !628, file: !627, line: 82, type: !632, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1578)
!1578 = !{!1575}
!1579 = !DILocation(line: 177, column: 73, scope: !1576, inlinedAt: !1580)
!1580 = !DILocation(line: 131, column: 9, scope: !1581, inlinedAt: !1585)
!1581 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17hcc6c9c31d4ab34e4E", scope: !188, file: !598, line: 130, type: !1541, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1582)
!1582 = !{!1583}
!1583 = !DILocalVariable(name: "self", scope: !1584, file: !1409, line: 177, type: !973, align: 8)
!1584 = !DILexicalBlockFile(scope: !1581, file: !1409, discriminator: 0)
!1585 = !DILocation(line: 95, column: 42, scope: !1461, inlinedAt: !1464)
!1586 = !DILocalVariable(name: "self", scope: !1587, file: !1409, line: 177, type: !195, align: 8)
!1587 = !DILexicalBlockFile(scope: !1588, file: !1409, discriminator: 0)
!1588 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h466a6ecaf9634463E", scope: !195, file: !640, line: 39, type: !641, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1589)
!1589 = !{!1586}
!1590 = !DILocation(line: 177, column: 73, scope: !1587, inlinedAt: !1580)
!1591 = !DILocation(line: 178, column: 27, scope: !1505, inlinedAt: !1508)
!1592 = !DILocation(line: 178, column: 27, scope: !1528, inlinedAt: !1533)
!1593 = !DILocation(line: 173, column: 15, scope: !1408)
!1594 = !DILocalVariable(name: "self", scope: !1595, file: !1409, line: 173, type: !973, align: 8)
!1595 = !DILexicalBlockFile(scope: !1596, file: !1409, discriminator: 0)
!1596 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hcecf33dca24f5f5bE", scope: !188, file: !598, line: 120, type: !1541, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1597)
!1597 = !{!1594}
!1598 = !DILocation(line: 173, column: 15, scope: !1595, inlinedAt: !1593)
!1599 = !DILocation(line: 173, column: 9, scope: !1408)
!1600 = !DILocation(line: 174, column: 51, scope: !1552, inlinedAt: !1553)
!1601 = !DILocation(line: 174, column: 51, scope: !1545, inlinedAt: !1546)
!1602 = !DILocalVariable(name: "n", scope: !1603, file: !1409, line: 174, type: !193, align: 8)
!1603 = !DILexicalBlockFile(scope: !1604, file: !1409, discriminator: 0)
!1604 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hb7b27ac1e98aa935E", scope: !628, file: !627, line: 56, type: !649, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1605)
!1605 = !{!1602, !1606}
!1606 = !DILocalVariable(name: "runtime", scope: !1607, file: !1409, line: 174, type: !656, align: 8)
!1607 = !DILexicalBlockFile(scope: !1608, file: !1409, discriminator: 0)
!1608 = distinct !DILexicalBlock(scope: !1604, file: !655, line: 2336, column: 13)
!1609 = !DILocation(line: 174, column: 51, scope: !1603, inlinedAt: !1610)
!1610 = !DILocation(line: 41, column: 18, scope: !1556, inlinedAt: !1539)
!1611 = !DILocalVariable(name: "addr", scope: !1612, file: !1409, line: 174, type: !193, align: 8)
!1612 = !DILexicalBlockFile(scope: !1613, file: !1409, discriminator: 0)
!1613 = distinct !DISubprogram(name: "invalid_mut<u8>", linkageName: "_ZN4core3ptr11invalid_mut17ha6a9b9ca2f9829a7E", scope: !124, file: !301, line: 569, type: !1614, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !1616)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!151, !193}
!1616 = !{!1611}
!1617 = !DILocation(line: 174, column: 51, scope: !1612, inlinedAt: !1618)
!1618 = !DILocation(line: 205, column: 41, scope: !1547, inlinedAt: !1553)
!1619 = !DILocalVariable(name: "ptr", scope: !1620, file: !1409, line: 174, type: !151, align: 8)
!1620 = !DILexicalBlockFile(scope: !1621, file: !1409, discriminator: 0)
!1621 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h34d07e24ca4007b4E", scope: !127, file: !121, line: 196, type: !163, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !1622)
!1622 = !{!1619}
!1623 = !DILocation(line: 174, column: 51, scope: !1620, inlinedAt: !1624)
!1624 = !DILocation(line: 205, column: 18, scope: !1547, inlinedAt: !1553)
!1625 = !DILocation(line: 176, column: 13, scope: !1408)
!1626 = !DILocation(line: 176, column: 13, scope: !1418)
!1627 = !DILocation(line: 177, column: 34, scope: !1418)
!1628 = !DILocation(line: 177, column: 79, scope: !1418)
!1629 = !DILocalVariable(name: "self", scope: !1630, file: !1409, line: 177, type: !973, align: 8)
!1630 = !DILexicalBlockFile(scope: !1631, file: !1409, discriminator: 0)
!1631 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hcecf33dca24f5f5bE", scope: !188, file: !598, line: 120, type: !1541, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1632)
!1632 = !{!1629}
!1633 = !DILocation(line: 177, column: 73, scope: !1630, inlinedAt: !1634)
!1634 = !DILocation(line: 95, column: 27, scope: !1461, inlinedAt: !1464)
!1635 = !DILocation(line: 177, column: 73, scope: !1584, inlinedAt: !1585)
!1636 = !DILocalVariable(name: "n", scope: !1637, file: !1409, line: 177, type: !193, align: 8)
!1637 = !DILexicalBlockFile(scope: !1638, file: !1409, discriminator: 0)
!1638 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hb7b27ac1e98aa935E", scope: !628, file: !627, line: 56, type: !649, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1639)
!1639 = !{!1636, !1640}
!1640 = !DILocalVariable(name: "runtime", scope: !1641, file: !1409, line: 177, type: !656, align: 8)
!1641 = !DILexicalBlockFile(scope: !1642, file: !1409, discriminator: 0)
!1642 = distinct !DILexicalBlock(scope: !1638, file: !655, line: 2336, column: 13)
!1643 = !DILocation(line: 177, column: 73, scope: !1637, inlinedAt: !1644)
!1644 = !DILocation(line: 41, column: 18, scope: !1588, inlinedAt: !1580)
!1645 = !DILocation(line: 177, column: 56, scope: !1418)
!1646 = !DILocalVariable(name: "self", scope: !1647, file: !1409, line: 177, type: !973, align: 8)
!1647 = !DILexicalBlockFile(scope: !1648, file: !1409, discriminator: 0)
!1648 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hcecf33dca24f5f5bE", scope: !188, file: !598, line: 120, type: !1541, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1649)
!1649 = !{!1646}
!1650 = !DILocation(line: 177, column: 43, scope: !1647, inlinedAt: !1651)
!1651 = !DILocation(line: 166, column: 34, scope: !1454, inlinedAt: !1459)
!1652 = !DILocation(line: 177, column: 43, scope: !1568, inlinedAt: !1569)
!1653 = !DILocalVariable(name: "n", scope: !1654, file: !1409, line: 177, type: !193, align: 8)
!1654 = !DILexicalBlockFile(scope: !1655, file: !1409, discriminator: 0)
!1655 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hb7b27ac1e98aa935E", scope: !628, file: !627, line: 56, type: !649, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1656)
!1656 = !{!1653, !1657}
!1657 = !DILocalVariable(name: "runtime", scope: !1658, file: !1409, line: 177, type: !656, align: 8)
!1658 = !DILexicalBlockFile(scope: !1659, file: !1409, discriminator: 0)
!1659 = distinct !DILexicalBlock(scope: !1655, file: !655, line: 2336, column: 13)
!1660 = !DILocation(line: 177, column: 43, scope: !1654, inlinedAt: !1661)
!1661 = !DILocation(line: 41, column: 18, scope: !1572, inlinedAt: !1564)
!1662 = !DILocation(line: 177, column: 31, scope: !1418)
!1663 = !DILocation(line: 178, column: 40, scope: !1420)
!1664 = !DILocation(line: 178, column: 27, scope: !1517, inlinedAt: !1508)
!1665 = !DILocation(line: 178, column: 27, scope: !1502, inlinedAt: !1508)
!1666 = !DILocation(line: 178, column: 27, scope: !1439)
!1667 = !DILocation(line: 178, column: 21, scope: !1422)
!1668 = !DILocation(line: 179, column: 50, scope: !1422)
!1669 = !DILocalVariable(name: "data", scope: !1670, file: !1409, line: 179, type: !127, align: 8)
!1670 = !DILexicalBlockFile(scope: !1671, file: !1409, discriminator: 0)
!1671 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h4bdb915c17c5b958E", scope: !936, file: !121, line: 487, type: !1446, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !1672)
!1672 = !{!1669, !1673}
!1673 = !DILocalVariable(name: "len", scope: !1670, file: !1409, line: 179, type: !193, align: 8)
!1674 = !DILocation(line: 179, column: 20, scope: !1670, inlinedAt: !1675)
!1675 = !DILocation(line: 179, column: 20, scope: !1422)
!1676 = !DILocation(line: 179, column: 55, scope: !1422)
!1677 = !DILocalVariable(name: "self", scope: !1678, file: !1409, line: 179, type: !127, align: 8)
!1678 = !DILexicalBlockFile(scope: !1679, file: !1409, discriminator: 0)
!1679 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6e433918dc590b4bE", scope: !127, file: !121, line: 330, type: !156, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !1680)
!1680 = !{!1677}
!1681 = !DILocation(line: 179, column: 20, scope: !1678, inlinedAt: !1682)
!1682 = !DILocation(line: 489, column: 70, scope: !1671, inlinedAt: !1675)
!1683 = !DILocalVariable(name: "data", scope: !1684, file: !1409, line: 179, type: !151, align: 8)
!1684 = !DILexicalBlockFile(scope: !1685, file: !1409, discriminator: 0)
!1685 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h726d87fd1b470fcfE", scope: !124, file: !301, line: 727, type: !1686, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !1692)
!1686 = !DISubroutineType(types: !1687)
!1687 = !{!1688, !151, !193}
!1688 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [u8]", file: !30, size: 128, align: 64, elements: !1689, templateParams: !140, identifier: "2081d302591cc0e6b89f57ab75a79c1e")
!1689 = !{!1690, !1691}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1688, file: !30, baseType: !362, size: 64, align: 64)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1688, file: !30, baseType: !193, size: 64, align: 64, offset: 64)
!1692 = !{!1683, !1693}
!1693 = !DILocalVariable(name: "len", scope: !1684, file: !1409, line: 179, type: !193, align: 8)
!1694 = !DILocation(line: 179, column: 20, scope: !1684, inlinedAt: !1695)
!1695 = !DILocation(line: 489, column: 38, scope: !1671, inlinedAt: !1675)
!1696 = !DILocalVariable(name: "self", scope: !1697, file: !1409, line: 179, type: !151, align: 8)
!1697 = !DILexicalBlockFile(scope: !1698, file: !1409, discriminator: 0)
!1698 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h5d67ba9988c1d55fE", scope: !558, file: !557, line: 45, type: !1699, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1702, retainedNodes: !1701)
!1699 = !DISubroutineType(types: !1700)
!1700 = !{!547, !151}
!1701 = !{!1696}
!1702 = !{!132, !1703}
!1703 = !DITemplateTypeParameter(name: "U", type: !199)
!1704 = !DILocation(line: 179, column: 20, scope: !1697, inlinedAt: !1705)
!1705 = !DILocation(line: 728, column: 24, scope: !1685, inlinedAt: !1695)
!1706 = !DILocalVariable(name: "data_address", scope: !1707, file: !1409, line: 179, type: !547, align: 8)
!1707 = !DILexicalBlockFile(scope: !1708, file: !1409, discriminator: 0)
!1708 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h0ee438d71b607471E", scope: !544, file: !543, line: 127, type: !1709, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !1711)
!1709 = !DISubroutineType(types: !1710)
!1710 = !{!1688, !547, !193}
!1711 = !{!1706, !1712}
!1712 = !DILocalVariable(name: "metadata", scope: !1707, file: !1409, line: 179, type: !193, align: 8)
!1713 = !DILocation(line: 179, column: 20, scope: !1707, inlinedAt: !1714)
!1714 = !DILocation(line: 728, column: 5, scope: !1685, inlinedAt: !1695)
!1715 = !DILocalVariable(name: "ptr", scope: !1716, file: !1409, line: 179, type: !1688, align: 8)
!1716 = !DILexicalBlockFile(scope: !1717, file: !1409, discriminator: 0)
!1717 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9c96f71021f9c899E", scope: !936, file: !121, line: 196, type: !1718, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !1720)
!1718 = !DISubroutineType(types: !1719)
!1719 = !{!936, !1688}
!1720 = !{!1715}
!1721 = !DILocation(line: 179, column: 20, scope: !1716, inlinedAt: !1722)
!1722 = !DILocation(line: 489, column: 18, scope: !1671, inlinedAt: !1675)
!1723 = !DILocation(line: 179, column: 17, scope: !1422)
!1724 = !DILocation(line: 180, column: 13, scope: !1408)
!1725 = !DILocation(line: 182, column: 6, scope: !1408)
!1726 = !DILocalVariable(name: "self", scope: !1727, file: !1409, line: 174, type: !127, align: 8)
!1727 = !DILexicalBlockFile(scope: !1728, file: !1409, discriminator: 0)
!1728 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6e433918dc590b4bE", scope: !127, file: !121, line: 330, type: !156, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !1729)
!1729 = !{!1726}
!1730 = !DILocation(line: 174, column: 21, scope: !1727, inlinedAt: !1731)
!1731 = !DILocation(line: 489, column: 70, scope: !1445, inlinedAt: !1451)
!1732 = !DILocalVariable(name: "data", scope: !1733, file: !1409, line: 174, type: !151, align: 8)
!1733 = !DILexicalBlockFile(scope: !1734, file: !1409, discriminator: 0)
!1734 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h726d87fd1b470fcfE", scope: !124, file: !301, line: 727, type: !1686, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !1735)
!1735 = !{!1732, !1736}
!1736 = !DILocalVariable(name: "len", scope: !1733, file: !1409, line: 174, type: !193, align: 8)
!1737 = !DILocation(line: 174, column: 21, scope: !1733, inlinedAt: !1738)
!1738 = !DILocation(line: 489, column: 38, scope: !1445, inlinedAt: !1451)
!1739 = !DILocalVariable(name: "self", scope: !1740, file: !1409, line: 174, type: !151, align: 8)
!1740 = !DILexicalBlockFile(scope: !1741, file: !1409, discriminator: 0)
!1741 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h5d67ba9988c1d55fE", scope: !558, file: !557, line: 45, type: !1699, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1702, retainedNodes: !1742)
!1742 = !{!1739}
!1743 = !DILocation(line: 174, column: 21, scope: !1740, inlinedAt: !1744)
!1744 = !DILocation(line: 728, column: 24, scope: !1734, inlinedAt: !1738)
!1745 = !DILocalVariable(name: "data_address", scope: !1746, file: !1409, line: 174, type: !547, align: 8)
!1746 = !DILexicalBlockFile(scope: !1747, file: !1409, discriminator: 0)
!1747 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h0ee438d71b607471E", scope: !544, file: !543, line: 127, type: !1709, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !1748)
!1748 = !{!1745, !1749}
!1749 = !DILocalVariable(name: "metadata", scope: !1746, file: !1409, line: 174, type: !193, align: 8)
!1750 = !DILocation(line: 174, column: 21, scope: !1746, inlinedAt: !1751)
!1751 = !DILocation(line: 728, column: 5, scope: !1734, inlinedAt: !1738)
!1752 = !DILocalVariable(name: "ptr", scope: !1753, file: !1409, line: 174, type: !1688, align: 8)
!1753 = !DILexicalBlockFile(scope: !1754, file: !1409, discriminator: 0)
!1754 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9c96f71021f9c899E", scope: !936, file: !121, line: 196, type: !1718, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !1755)
!1755 = !{!1752}
!1756 = !DILocation(line: 174, column: 21, scope: !1753, inlinedAt: !1757)
!1757 = !DILocation(line: 489, column: 18, scope: !1445, inlinedAt: !1451)
!1758 = !DILocation(line: 174, column: 18, scope: !1408)
!1759 = !DILocation(line: 174, column: 72, scope: !1408)
!1760 = distinct !DISubprogram(name: "grow_impl", linkageName: "_ZN5alloc5alloc6Global9grow_impl17h179fb7ce387b3544E", scope: !488, file: !1409, line: 186, type: !1761, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1763)
!1761 = !DISubroutineType(types: !1762)
!1762 = !{!928, !1412, !127, !188, !188, !275}
!1763 = !{!1764, !1765, !1766, !1767, !1768, !1769, !1771, !1772, !1774, !1776, !1778, !1780, !1782, !1784, !1786, !1788}
!1764 = !DILocalVariable(name: "self", arg: 1, scope: !1760, file: !1409, line: 187, type: !1412)
!1765 = !DILocalVariable(name: "ptr", arg: 2, scope: !1760, file: !1409, line: 188, type: !127)
!1766 = !DILocalVariable(name: "old_layout", arg: 3, scope: !1760, file: !1409, line: 189, type: !188)
!1767 = !DILocalVariable(name: "new_layout", arg: 4, scope: !1760, file: !1409, line: 190, type: !188)
!1768 = !DILocalVariable(name: "zeroed", arg: 5, scope: !1760, file: !1409, line: 191, type: !275)
!1769 = !DILocalVariable(name: "old_size", scope: !1770, file: !1409, line: 203, type: !193, align: 8)
!1770 = distinct !DILexicalBlock(scope: !1760, file: !1409, line: 203, column: 13)
!1771 = !DILocalVariable(name: "old_size", scope: !1770, file: !1409, line: 203, type: !255, align: 8)
!1772 = !DILocalVariable(name: "new_size", scope: !1773, file: !1409, line: 204, type: !193, align: 8)
!1773 = distinct !DILexicalBlock(scope: !1770, file: !1409, line: 204, column: 17)
!1774 = !DILocalVariable(name: "raw_ptr", scope: !1775, file: !1409, line: 209, type: !151, align: 8)
!1775 = distinct !DILexicalBlock(scope: !1773, file: !1409, line: 209, column: 17)
!1776 = !DILocalVariable(name: "ptr", scope: !1777, file: !1409, line: 210, type: !127, align: 8)
!1777 = distinct !DILexicalBlock(scope: !1775, file: !1409, line: 210, column: 17)
!1778 = !DILocalVariable(name: "residual", scope: !1779, file: !1409, line: 210, type: !1425, align: 1)
!1779 = distinct !DILexicalBlock(scope: !1775, file: !1409, line: 210, column: 66)
!1780 = !DILocalVariable(name: "val", scope: !1781, file: !1409, line: 210, type: !127, align: 8)
!1781 = distinct !DILexicalBlock(scope: !1775, file: !1409, line: 210, column: 27)
!1782 = !DILocalVariable(name: "old_size", scope: !1783, file: !1409, line: 222, type: !193, align: 8)
!1783 = distinct !DILexicalBlock(scope: !1760, file: !1409, line: 222, column: 13)
!1784 = !DILocalVariable(name: "new_ptr", scope: !1785, file: !1409, line: 223, type: !936, align: 8)
!1785 = distinct !DILexicalBlock(scope: !1783, file: !1409, line: 223, column: 17)
!1786 = !DILocalVariable(name: "residual", scope: !1787, file: !1409, line: 223, type: !1425, align: 1)
!1787 = distinct !DILexicalBlock(scope: !1783, file: !1409, line: 223, column: 66)
!1788 = !DILocalVariable(name: "val", scope: !1789, file: !1409, line: 223, type: !936, align: 8)
!1789 = distinct !DILexicalBlock(scope: !1783, file: !1409, line: 223, column: 31)
!1790 = !DILocation(line: 187, column: 9, scope: !1760)
!1791 = !DILocation(line: 188, column: 9, scope: !1760)
!1792 = !DILocation(line: 189, column: 9, scope: !1760)
!1793 = !DILocation(line: 190, column: 9, scope: !1760)
!1794 = !DILocation(line: 191, column: 9, scope: !1760)
!1795 = !DILocalVariable(name: "layout", scope: !1796, file: !1409, line: 209, type: !188, align: 8)
!1796 = distinct !DISubprogram(name: "realloc", linkageName: "_ZN5alloc5alloc7realloc17h40526e6fa0c18a93E", scope: !489, file: !1409, line: 131, type: !1797, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1799)
!1797 = !DISubroutineType(types: !1798)
!1798 = !{!151, !151, !188, !193}
!1799 = !{!1800, !1795, !1801}
!1800 = !DILocalVariable(name: "ptr", scope: !1796, file: !1409, line: 209, type: !151, align: 8)
!1801 = !DILocalVariable(name: "new_size", scope: !1796, file: !1409, line: 209, type: !193, align: 8)
!1802 = !DILocation(line: 209, column: 31, scope: !1796, inlinedAt: !1803)
!1803 = !DILocation(line: 209, column: 31, scope: !1773)
!1804 = !DILocalVariable(name: "self", scope: !1805, file: !1409, line: 210, type: !1486, align: 8)
!1805 = !DILexicalBlockFile(scope: !1806, file: !1409, discriminator: 0)
!1806 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7c49468d0b340f51E", scope: !704, file: !703, line: 2117, type: !1468, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1494, retainedNodes: !1807)
!1807 = !{!1804, !1808, !1811}
!1808 = !DILocalVariable(name: "v", scope: !1809, file: !1409, line: 210, type: !127, align: 8)
!1809 = !DILexicalBlockFile(scope: !1810, file: !1409, discriminator: 0)
!1810 = distinct !DILexicalBlock(scope: !1806, file: !703, line: 2119, column: 13)
!1811 = !DILocalVariable(name: "e", scope: !1812, file: !1409, line: 210, type: !946, align: 1)
!1812 = !DILexicalBlockFile(scope: !1813, file: !1409, discriminator: 0)
!1813 = distinct !DILexicalBlock(scope: !1806, file: !703, line: 2120, column: 13)
!1814 = !DILocation(line: 210, column: 27, scope: !1805, inlinedAt: !1815)
!1815 = !DILocation(line: 210, column: 27, scope: !1775)
!1816 = !DILocalVariable(name: "self", scope: !1817, file: !1409, line: 210, type: !524, align: 8)
!1817 = !DILexicalBlockFile(scope: !1818, file: !1409, discriminator: 0)
!1818 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h04119dee30092c1eE", scope: !524, file: !751, line: 1051, type: !1512, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1494, retainedNodes: !1819)
!1819 = !{!1816, !1820, !1821}
!1820 = !DILocalVariable(name: "err", scope: !1817, file: !1409, line: 210, type: !946, align: 1)
!1821 = !DILocalVariable(name: "v", scope: !1822, file: !1409, line: 210, type: !127, align: 8)
!1822 = !DILexicalBlockFile(scope: !1823, file: !1409, discriminator: 0)
!1823 = distinct !DILexicalBlock(scope: !1818, file: !751, line: 1056, column: 13)
!1824 = !DILocation(line: 210, column: 27, scope: !1817, inlinedAt: !1815)
!1825 = !DILocation(line: 210, column: 66, scope: !1779)
!1826 = !DILocalVariable(name: "residual", scope: !1827, file: !1409, line: 210, type: !1425, align: 1)
!1827 = !DILexicalBlockFile(scope: !1828, file: !1409, discriminator: 0)
!1828 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd371ba3745d67bacE", scope: !764, file: !703, line: 2132, type: !1524, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1530, retainedNodes: !1829)
!1829 = !{!1826, !1830}
!1830 = !DILocalVariable(name: "e", scope: !1831, file: !1409, line: 210, type: !946, align: 1)
!1831 = !DILexicalBlockFile(scope: !1832, file: !1409, discriminator: 0)
!1832 = distinct !DILexicalBlock(scope: !1828, file: !703, line: 2134, column: 13)
!1833 = !DILocation(line: 210, column: 27, scope: !1827, inlinedAt: !1834)
!1834 = !DILocation(line: 210, column: 27, scope: !1779)
!1835 = !DILocalVariable(name: "self", scope: !1836, file: !1409, line: 223, type: !928, align: 8)
!1836 = !DILexicalBlockFile(scope: !1837, file: !1409, discriminator: 0)
!1837 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h03035d9621fe2b2bE", scope: !704, file: !703, line: 2117, type: !1838, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !943, retainedNodes: !1855)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{!1840, !928}
!1840 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>", scope: !708, file: !30, size: 128, align: 64, elements: !1841, templateParams: !140, identifier: "742106b60153cc66c591376c04358a32")
!1841 = !{!1842}
!1842 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1840, file: !30, size: 128, align: 64, elements: !1843, templateParams: !140, identifier: "51e560db12d8945267902f7758889ab2", discriminator: !1854)
!1843 = !{!1844, !1850}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !1842, file: !30, baseType: !1845, size: 128, align: 64)
!1845 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !1840, file: !30, size: 128, align: 64, elements: !1846, templateParams: !1848, identifier: "7a7db6f08dd8181ffbc0406581832086")
!1846 = !{!1847}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1845, file: !30, baseType: !936, size: 128, align: 64)
!1848 = !{!1479, !1849}
!1849 = !DITemplateTypeParameter(name: "C", type: !936)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !1842, file: !30, baseType: !1851, size: 128, align: 64, extraData: i64 0)
!1851 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !1840, file: !30, size: 128, align: 64, elements: !1852, templateParams: !1848, identifier: "520e4a70aaf12c465e959335c5fb5ede")
!1852 = !{!1853}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1851, file: !30, baseType: !1425, align: 8)
!1854 = !DIDerivedType(tag: DW_TAG_member, scope: !1840, file: !30, baseType: !34, size: 64, align: 64, flags: DIFlagArtificial)
!1855 = !{!1835, !1856, !1859}
!1856 = !DILocalVariable(name: "v", scope: !1857, file: !1409, line: 223, type: !936, align: 8)
!1857 = !DILexicalBlockFile(scope: !1858, file: !1409, discriminator: 0)
!1858 = distinct !DILexicalBlock(scope: !1837, file: !703, line: 2119, column: 13)
!1859 = !DILocalVariable(name: "e", scope: !1860, file: !1409, line: 223, type: !946, align: 1)
!1860 = !DILexicalBlockFile(scope: !1861, file: !1409, discriminator: 0)
!1861 = distinct !DILexicalBlock(scope: !1837, file: !703, line: 2120, column: 13)
!1862 = !DILocation(line: 223, column: 31, scope: !1836, inlinedAt: !1863)
!1863 = !DILocation(line: 223, column: 31, scope: !1783)
!1864 = !DILocation(line: 223, column: 66, scope: !1787)
!1865 = !DILocalVariable(name: "residual", scope: !1866, file: !1409, line: 223, type: !1425, align: 1)
!1866 = !DILexicalBlockFile(scope: !1867, file: !1409, discriminator: 0)
!1867 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd371ba3745d67bacE", scope: !764, file: !703, line: 2132, type: !1524, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1530, retainedNodes: !1868)
!1868 = !{!1865, !1869}
!1869 = !DILocalVariable(name: "e", scope: !1870, file: !1409, line: 223, type: !946, align: 1)
!1870 = !DILexicalBlockFile(scope: !1871, file: !1409, discriminator: 0)
!1871 = distinct !DILexicalBlock(scope: !1867, file: !703, line: 2134, column: 13)
!1872 = !DILocation(line: 223, column: 31, scope: !1866, inlinedAt: !1873)
!1873 = !DILocation(line: 223, column: 31, scope: !1787)
!1874 = !DILocalVariable(name: "self", scope: !1875, file: !1409, line: 203, type: !628, align: 8)
!1875 = !DILexicalBlockFile(scope: !1876, file: !1409, discriminator: 0)
!1876 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h4c609daa585f4c69E", scope: !628, file: !627, line: 82, type: !632, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1877)
!1877 = !{!1874}
!1878 = !DILocation(line: 203, column: 25, scope: !1875, inlinedAt: !1879)
!1879 = !DILocation(line: 131, column: 9, scope: !1880, inlinedAt: !1884)
!1880 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17hcc6c9c31d4ab34e4E", scope: !188, file: !598, line: 130, type: !1541, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1881)
!1881 = !{!1882}
!1882 = !DILocalVariable(name: "self", scope: !1883, file: !1409, line: 203, type: !973, align: 8)
!1883 = !DILexicalBlockFile(scope: !1880, file: !1409, discriminator: 0)
!1884 = !DILocation(line: 203, column: 25, scope: !1760)
!1885 = !DILocalVariable(name: "self", scope: !1886, file: !1409, line: 203, type: !195, align: 8)
!1886 = !DILexicalBlockFile(scope: !1887, file: !1409, discriminator: 0)
!1887 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h466a6ecaf9634463E", scope: !195, file: !640, line: 39, type: !641, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1888)
!1888 = !{!1885}
!1889 = !DILocation(line: 203, column: 25, scope: !1886, inlinedAt: !1879)
!1890 = !DILocalVariable(name: "self", scope: !1891, file: !1409, line: 203, type: !628, align: 8)
!1891 = !DILexicalBlockFile(scope: !1892, file: !1409, discriminator: 0)
!1892 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h4c609daa585f4c69E", scope: !628, file: !627, line: 82, type: !632, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1893)
!1893 = !{!1890}
!1894 = !DILocation(line: 203, column: 47, scope: !1891, inlinedAt: !1895)
!1895 = !DILocation(line: 131, column: 9, scope: !1896, inlinedAt: !1900)
!1896 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17hcc6c9c31d4ab34e4E", scope: !188, file: !598, line: 130, type: !1541, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1897)
!1897 = !{!1898}
!1898 = !DILocalVariable(name: "self", scope: !1899, file: !1409, line: 203, type: !973, align: 8)
!1899 = !DILexicalBlockFile(scope: !1896, file: !1409, discriminator: 0)
!1900 = !DILocation(line: 203, column: 47, scope: !1760)
!1901 = !DILocalVariable(name: "self", scope: !1902, file: !1409, line: 203, type: !195, align: 8)
!1902 = !DILexicalBlockFile(scope: !1903, file: !1409, discriminator: 0)
!1903 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h466a6ecaf9634463E", scope: !195, file: !640, line: 39, type: !641, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1904)
!1904 = !{!1901}
!1905 = !DILocation(line: 203, column: 47, scope: !1902, inlinedAt: !1895)
!1906 = !DILocalVariable(name: "self", scope: !1907, file: !1409, line: 209, type: !628, align: 8)
!1907 = !DILexicalBlockFile(scope: !1908, file: !1409, discriminator: 0)
!1908 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h4c609daa585f4c69E", scope: !628, file: !627, line: 82, type: !632, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1909)
!1909 = !{!1906}
!1910 = !DILocation(line: 209, column: 31, scope: !1907, inlinedAt: !1911)
!1911 = !DILocation(line: 131, column: 9, scope: !1912, inlinedAt: !1916)
!1912 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17hcc6c9c31d4ab34e4E", scope: !188, file: !598, line: 130, type: !1541, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1913)
!1913 = !{!1914}
!1914 = !DILocalVariable(name: "self", scope: !1915, file: !1409, line: 209, type: !973, align: 8)
!1915 = !DILexicalBlockFile(scope: !1912, file: !1409, discriminator: 0)
!1916 = !DILocation(line: 132, column: 49, scope: !1796, inlinedAt: !1803)
!1917 = !DILocalVariable(name: "self", scope: !1918, file: !1409, line: 209, type: !195, align: 8)
!1918 = !DILexicalBlockFile(scope: !1919, file: !1409, discriminator: 0)
!1919 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h466a6ecaf9634463E", scope: !195, file: !640, line: 39, type: !641, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1920)
!1920 = !{!1917}
!1921 = !DILocation(line: 209, column: 31, scope: !1918, inlinedAt: !1911)
!1922 = !DILocation(line: 210, column: 27, scope: !1812, inlinedAt: !1815)
!1923 = !DILocation(line: 210, column: 27, scope: !1831, inlinedAt: !1834)
!1924 = !DILocation(line: 223, column: 31, scope: !1860, inlinedAt: !1863)
!1925 = !DILocation(line: 223, column: 31, scope: !1870, inlinedAt: !1873)
!1926 = !DILocalVariable(name: "self", scope: !1927, file: !1409, line: 224, type: !127, align: 8)
!1927 = !DILexicalBlockFile(scope: !1928, file: !1409, discriminator: 0)
!1928 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6e433918dc590b4bE", scope: !127, file: !121, line: 330, type: !156, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !1929)
!1929 = !{!1926}
!1930 = !DILocation(line: 224, column: 56, scope: !1927, inlinedAt: !1931)
!1931 = !DILocation(line: 553, column: 9, scope: !1932, inlinedAt: !1938)
!1932 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hc7d882e2a67bc005E", scope: !936, file: !121, line: 552, type: !1933, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !1935)
!1933 = !DISubroutineType(types: !1934)
!1934 = !{!151, !936}
!1935 = !{!1936}
!1936 = !DILocalVariable(name: "self", scope: !1937, file: !1409, line: 224, type: !936, align: 8)
!1937 = !DILexicalBlockFile(scope: !1932, file: !1409, discriminator: 0)
!1938 = !DILocation(line: 224, column: 56, scope: !1785)
!1939 = !DILocalVariable(name: "runtime", scope: !1940, file: !1409, line: 224, type: !1951, align: 8)
!1940 = !DILexicalBlockFile(scope: !1941, file: !1409, discriminator: 0)
!1941 = distinct !DILexicalBlock(scope: !1942, file: !655, line: 2336, column: 13)
!1942 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h75c8748e2c4fc75fE", scope: !1943, file: !655, line: 2458, type: !1944, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !1946)
!1943 = !DINamespace(name: "intrinsics", scope: !33)
!1944 = !DISubroutineType(types: !1945)
!1945 = !{null, !130, !151, !193}
!1946 = !{!1947, !1949, !1950, !1939}
!1947 = !DILocalVariable(name: "src", scope: !1948, file: !1409, line: 224, type: !130, align: 8)
!1948 = !DILexicalBlockFile(scope: !1942, file: !1409, discriminator: 0)
!1949 = !DILocalVariable(name: "dst", scope: !1948, file: !1409, line: 224, type: !151, align: 8)
!1950 = !DILocalVariable(name: "count", scope: !1948, file: !1409, line: 224, type: !193, align: 8)
!1951 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !1952, file: !30, size: 192, align: 64, elements: !1953, templateParams: !140, identifier: "fb5d8c4998ddcc045cba0da9a8307400")
!1952 = !DINamespace(name: "copy_nonoverlapping", scope: !1943)
!1953 = !{!1954, !1956, !1958}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__src", scope: !1951, file: !30, baseType: !1955, size: 64, align: 64)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const u8", baseType: !130, size: 64, align: 64, dwarfAddressSpace: 0)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__dst", scope: !1951, file: !30, baseType: !1957, size: 64, align: 64, offset: 64)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut u8", baseType: !151, size: 64, align: 64, dwarfAddressSpace: 0)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__count", scope: !1951, file: !30, baseType: !255, size: 64, align: 64, offset: 128)
!1959 = !DILocation(line: 224, column: 17, scope: !1940, inlinedAt: !1960)
!1960 = !DILocation(line: 224, column: 17, scope: !1785)
!1961 = !DILocation(line: 198, column: 15, scope: !1760)
!1962 = !DILocalVariable(name: "self", scope: !1963, file: !1409, line: 198, type: !973, align: 8)
!1963 = !DILexicalBlockFile(scope: !1964, file: !1409, discriminator: 0)
!1964 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hcecf33dca24f5f5bE", scope: !188, file: !598, line: 120, type: !1541, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1965)
!1965 = !{!1962}
!1966 = !DILocation(line: 198, column: 15, scope: !1963, inlinedAt: !1961)
!1967 = !DILocation(line: 198, column: 9, scope: !1760)
!1968 = !DILocation(line: 199, column: 34, scope: !1760)
!1969 = !DILocation(line: 199, column: 18, scope: !1760)
!1970 = !DILocation(line: 203, column: 25, scope: !1883, inlinedAt: !1884)
!1971 = !DILocalVariable(name: "n", scope: !1972, file: !1409, line: 203, type: !193, align: 8)
!1972 = !DILexicalBlockFile(scope: !1973, file: !1409, discriminator: 0)
!1973 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hb7b27ac1e98aa935E", scope: !628, file: !627, line: 56, type: !649, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1974)
!1974 = !{!1971, !1975}
!1975 = !DILocalVariable(name: "runtime", scope: !1976, file: !1409, line: 203, type: !656, align: 8)
!1976 = !DILexicalBlockFile(scope: !1977, file: !1409, discriminator: 0)
!1977 = distinct !DILexicalBlock(scope: !1973, file: !655, line: 2336, column: 13)
!1978 = !DILocation(line: 203, column: 25, scope: !1972, inlinedAt: !1979)
!1979 = !DILocation(line: 41, column: 18, scope: !1887, inlinedAt: !1879)
!1980 = !DILocation(line: 203, column: 47, scope: !1899, inlinedAt: !1900)
!1981 = !DILocalVariable(name: "n", scope: !1982, file: !1409, line: 203, type: !193, align: 8)
!1982 = !DILexicalBlockFile(scope: !1983, file: !1409, discriminator: 0)
!1983 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hb7b27ac1e98aa935E", scope: !628, file: !627, line: 56, type: !649, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1984)
!1984 = !{!1981, !1985}
!1985 = !DILocalVariable(name: "runtime", scope: !1986, file: !1409, line: 203, type: !656, align: 8)
!1986 = !DILexicalBlockFile(scope: !1987, file: !1409, discriminator: 0)
!1987 = distinct !DILexicalBlock(scope: !1983, file: !655, line: 2336, column: 13)
!1988 = !DILocation(line: 203, column: 47, scope: !1982, inlinedAt: !1989)
!1989 = !DILocation(line: 41, column: 18, scope: !1903, inlinedAt: !1895)
!1990 = !DILocation(line: 222, column: 13, scope: !1760)
!1991 = !DILocation(line: 222, column: 13, scope: !1783)
!1992 = !DILocation(line: 223, column: 47, scope: !1783)
!1993 = !DILocation(line: 203, column: 13, scope: !1760)
!1994 = !DILocation(line: 203, column: 13, scope: !1770)
!1995 = !DILocation(line: 204, column: 32, scope: !1770)
!1996 = !DILocalVariable(name: "self", scope: !1997, file: !1409, line: 204, type: !973, align: 8)
!1997 = !DILexicalBlockFile(scope: !1998, file: !1409, discriminator: 0)
!1998 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hcecf33dca24f5f5bE", scope: !188, file: !598, line: 120, type: !1541, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !1999)
!1999 = !{!1996}
!2000 = !DILocation(line: 204, column: 32, scope: !1997, inlinedAt: !1995)
!2001 = !DILocation(line: 204, column: 21, scope: !1773)
!2002 = !DILocation(line: 207, column: 48, scope: !1773)
!2003 = !DILocalVariable(name: "self", scope: !2004, file: !1409, line: 207, type: !973, align: 8)
!2004 = !DILexicalBlockFile(scope: !2005, file: !1409, discriminator: 0)
!2005 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hcecf33dca24f5f5bE", scope: !188, file: !598, line: 120, type: !1541, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2006)
!2006 = !{!2003}
!2007 = !DILocation(line: 207, column: 48, scope: !2004, inlinedAt: !2002)
!2008 = !DILocation(line: 207, column: 36, scope: !1773)
!2009 = !DILocation(line: 207, column: 17, scope: !1773)
!2010 = !DILocation(line: 209, column: 39, scope: !1773)
!2011 = !DILocalVariable(name: "self", scope: !2012, file: !1409, line: 209, type: !127, align: 8)
!2012 = !DILexicalBlockFile(scope: !2013, file: !1409, discriminator: 0)
!2013 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6e433918dc590b4bE", scope: !127, file: !121, line: 330, type: !156, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !2014)
!2014 = !{!2011}
!2015 = !DILocation(line: 209, column: 39, scope: !2012, inlinedAt: !2010)
!2016 = !DILocation(line: 209, column: 53, scope: !1773)
!2017 = !DILocation(line: 209, column: 65, scope: !1773)
!2018 = !DILocalVariable(name: "self", scope: !2019, file: !1409, line: 209, type: !973, align: 8)
!2019 = !DILexicalBlockFile(scope: !2020, file: !1409, discriminator: 0)
!2020 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hcecf33dca24f5f5bE", scope: !188, file: !598, line: 120, type: !1541, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2021)
!2021 = !{!2018}
!2022 = !DILocation(line: 209, column: 31, scope: !2019, inlinedAt: !2023)
!2023 = !DILocation(line: 132, column: 34, scope: !1796, inlinedAt: !1803)
!2024 = !DILocation(line: 209, column: 31, scope: !1915, inlinedAt: !1916)
!2025 = !DILocalVariable(name: "n", scope: !2026, file: !1409, line: 209, type: !193, align: 8)
!2026 = !DILexicalBlockFile(scope: !2027, file: !1409, discriminator: 0)
!2027 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hb7b27ac1e98aa935E", scope: !628, file: !627, line: 56, type: !649, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2028)
!2028 = !{!2025, !2029}
!2029 = !DILocalVariable(name: "runtime", scope: !2030, file: !1409, line: 209, type: !656, align: 8)
!2030 = !DILexicalBlockFile(scope: !2031, file: !1409, discriminator: 0)
!2031 = distinct !DILexicalBlock(scope: !2027, file: !655, line: 2336, column: 13)
!2032 = !DILocation(line: 209, column: 31, scope: !2026, inlinedAt: !2033)
!2033 = !DILocation(line: 41, column: 18, scope: !1919, inlinedAt: !1911)
!2034 = !DILocation(line: 209, column: 21, scope: !1775)
!2035 = !DILocation(line: 210, column: 27, scope: !1822, inlinedAt: !1815)
!2036 = !DILocation(line: 210, column: 27, scope: !1809, inlinedAt: !1815)
!2037 = !DILocation(line: 210, column: 27, scope: !1781)
!2038 = !DILocation(line: 210, column: 21, scope: !1777)
!2039 = !DILocation(line: 211, column: 20, scope: !1777)
!2040 = !DILocation(line: 1, column: 1, scope: !2041)
!2041 = !DILexicalBlockFile(scope: !1760, file: !2042, discriminator: 0)
!2042 = !DIFile(filename: "src/lib.rs", directory: "/home/calvin/git/c2rust/tests/arrays", checksumkind: CSK_MD5, checksum: "2786dcc40d749a1dcf328eb1c9a43b8b")
!2043 = !DILocation(line: 229, column: 6, scope: !1760)
!2044 = !DILocation(line: 214, column: 50, scope: !1777)
!2045 = !DILocalVariable(name: "data", scope: !2046, file: !1409, line: 214, type: !127, align: 8)
!2046 = !DILexicalBlockFile(scope: !2047, file: !1409, discriminator: 0)
!2047 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h4bdb915c17c5b958E", scope: !936, file: !121, line: 487, type: !1446, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !2048)
!2048 = !{!2045, !2049}
!2049 = !DILocalVariable(name: "len", scope: !2046, file: !1409, line: 214, type: !193, align: 8)
!2050 = !DILocation(line: 214, column: 20, scope: !2046, inlinedAt: !2051)
!2051 = !DILocation(line: 214, column: 20, scope: !1777)
!2052 = !DILocation(line: 214, column: 55, scope: !1777)
!2053 = !DILocalVariable(name: "self", scope: !2054, file: !1409, line: 214, type: !127, align: 8)
!2054 = !DILexicalBlockFile(scope: !2055, file: !1409, discriminator: 0)
!2055 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6e433918dc590b4bE", scope: !127, file: !121, line: 330, type: !156, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !2056)
!2056 = !{!2053}
!2057 = !DILocation(line: 214, column: 20, scope: !2054, inlinedAt: !2058)
!2058 = !DILocation(line: 489, column: 70, scope: !2047, inlinedAt: !2051)
!2059 = !DILocalVariable(name: "data", scope: !2060, file: !1409, line: 214, type: !151, align: 8)
!2060 = !DILexicalBlockFile(scope: !2061, file: !1409, discriminator: 0)
!2061 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h726d87fd1b470fcfE", scope: !124, file: !301, line: 727, type: !1686, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !2062)
!2062 = !{!2059, !2063}
!2063 = !DILocalVariable(name: "len", scope: !2060, file: !1409, line: 214, type: !193, align: 8)
!2064 = !DILocation(line: 214, column: 20, scope: !2060, inlinedAt: !2065)
!2065 = !DILocation(line: 489, column: 38, scope: !2047, inlinedAt: !2051)
!2066 = !DILocalVariable(name: "self", scope: !2067, file: !1409, line: 214, type: !151, align: 8)
!2067 = !DILexicalBlockFile(scope: !2068, file: !1409, discriminator: 0)
!2068 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h5d67ba9988c1d55fE", scope: !558, file: !557, line: 45, type: !1699, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1702, retainedNodes: !2069)
!2069 = !{!2066}
!2070 = !DILocation(line: 214, column: 20, scope: !2067, inlinedAt: !2071)
!2071 = !DILocation(line: 728, column: 24, scope: !2061, inlinedAt: !2065)
!2072 = !DILocalVariable(name: "data_address", scope: !2073, file: !1409, line: 214, type: !547, align: 8)
!2073 = !DILexicalBlockFile(scope: !2074, file: !1409, discriminator: 0)
!2074 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h0ee438d71b607471E", scope: !544, file: !543, line: 127, type: !1709, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !2075)
!2075 = !{!2072, !2076}
!2076 = !DILocalVariable(name: "metadata", scope: !2073, file: !1409, line: 214, type: !193, align: 8)
!2077 = !DILocation(line: 214, column: 20, scope: !2073, inlinedAt: !2078)
!2078 = !DILocation(line: 728, column: 5, scope: !2061, inlinedAt: !2065)
!2079 = !DILocalVariable(name: "ptr", scope: !2080, file: !1409, line: 214, type: !1688, align: 8)
!2080 = !DILexicalBlockFile(scope: !2081, file: !1409, discriminator: 0)
!2081 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9c96f71021f9c899E", scope: !936, file: !121, line: 196, type: !1718, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !2082)
!2082 = !{!2079}
!2083 = !DILocation(line: 214, column: 20, scope: !2080, inlinedAt: !2084)
!2084 = !DILocation(line: 489, column: 18, scope: !2047, inlinedAt: !2051)
!2085 = !DILocation(line: 214, column: 17, scope: !1777)
!2086 = !DILocation(line: 215, column: 13, scope: !1760)
!2087 = !DILocation(line: 212, column: 21, scope: !1777)
!2088 = !DILocalVariable(name: "self", scope: !2089, file: !1409, line: 212, type: !151, align: 8)
!2089 = !DILexicalBlockFile(scope: !2090, file: !1409, discriminator: 0)
!2090 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h908476cd59fdd216E", scope: !558, file: !557, line: 985, type: !2091, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !2093)
!2091 = !DISubroutineType(types: !2092)
!2092 = !{!151, !151, !193}
!2093 = !{!2088, !2094}
!2094 = !DILocalVariable(name: "count", scope: !2089, file: !1409, line: 212, type: !193, align: 8)
!2095 = !DILocation(line: 212, column: 21, scope: !2089, inlinedAt: !2087)
!2096 = !DILocation(line: 212, column: 33, scope: !1777)
!2097 = !DILocalVariable(name: "self", scope: !2098, file: !1409, line: 212, type: !151, align: 8)
!2098 = !DILexicalBlockFile(scope: !2099, file: !1409, discriminator: 0)
!2099 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h6b730d602f2ace47E", scope: !558, file: !557, line: 465, type: !2100, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !2102)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{!151, !151, !1326}
!2102 = !{!2097, !2103}
!2103 = !DILocalVariable(name: "count", scope: !2098, file: !1409, line: 212, type: !1326, align: 8)
!2104 = !DILocation(line: 212, column: 21, scope: !2098, inlinedAt: !2105)
!2105 = !DILocation(line: 990, column: 18, scope: !2090, inlinedAt: !2087)
!2106 = !DILocalVariable(name: "self", scope: !2107, file: !1409, line: 212, type: !151, align: 8)
!2107 = !DILexicalBlockFile(scope: !2108, file: !1409, discriminator: 0)
!2108 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17h143576fc1747f3baE", scope: !558, file: !557, line: 1441, type: !2109, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !2111)
!2109 = !DISubroutineType(types: !2110)
!2110 = !{null, !151, !108, !193}
!2111 = !{!2106, !2112, !2113}
!2112 = !DILocalVariable(name: "val", scope: !2107, file: !1409, line: 212, type: !108, align: 1)
!2113 = !DILocalVariable(name: "count", scope: !2107, file: !1409, line: 212, type: !193, align: 8)
!2114 = !DILocation(line: 212, column: 21, scope: !2107, inlinedAt: !2087)
!2115 = !DILocation(line: 212, column: 58, scope: !1777)
!2116 = !DILocalVariable(name: "dst", scope: !2117, file: !1409, line: 212, type: !151, align: 8)
!2117 = !DILexicalBlockFile(scope: !2118, file: !1409, discriminator: 0)
!2118 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core10intrinsics11write_bytes17hcb7ce9eda22307baE", scope: !1943, file: !655, line: 2613, type: !2109, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !2119)
!2119 = !{!2116, !2120, !2121, !2122}
!2120 = !DILocalVariable(name: "val", scope: !2117, file: !1409, line: 212, type: !108, align: 1)
!2121 = !DILocalVariable(name: "count", scope: !2117, file: !1409, line: 212, type: !193, align: 8)
!2122 = !DILocalVariable(name: "runtime", scope: !2123, file: !1409, line: 212, type: !2125, align: 8)
!2123 = !DILexicalBlockFile(scope: !2124, file: !1409, discriminator: 0)
!2124 = distinct !DILexicalBlock(scope: !2118, file: !655, line: 2336, column: 13)
!2125 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !2126, file: !30, size: 64, align: 64, elements: !2127, templateParams: !140, identifier: "6002da543977e8e7318dc1c6e6a51af")
!2126 = !DINamespace(name: "write_bytes", scope: !1943)
!2127 = !{!2128}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__dst", scope: !2125, file: !30, baseType: !1957, size: 64, align: 64)
!2129 = !DILocation(line: 212, column: 21, scope: !2117, inlinedAt: !2130)
!2130 = !DILocation(line: 1446, column: 18, scope: !2108, inlinedAt: !2087)
!2131 = !DILocation(line: 211, column: 17, scope: !1777)
!2132 = !DILocation(line: 223, column: 31, scope: !1857, inlinedAt: !1863)
!2133 = !DILocation(line: 223, column: 31, scope: !1789)
!2134 = !DILocation(line: 223, column: 21, scope: !1785)
!2135 = !DILocation(line: 224, column: 42, scope: !1785)
!2136 = !DILocalVariable(name: "self", scope: !2137, file: !1409, line: 224, type: !127, align: 8)
!2137 = !DILexicalBlockFile(scope: !2138, file: !1409, discriminator: 0)
!2138 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6e433918dc590b4bE", scope: !127, file: !121, line: 330, type: !156, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !2139)
!2139 = !{!2136}
!2140 = !DILocation(line: 224, column: 42, scope: !2137, inlinedAt: !2135)
!2141 = !DILocation(line: 224, column: 17, scope: !1948, inlinedAt: !1960)
!2142 = !DILocation(line: 224, column: 56, scope: !1937, inlinedAt: !1938)
!2143 = !DILocalVariable(name: "self", scope: !2144, file: !1409, line: 224, type: !936, align: 8)
!2144 = !DILexicalBlockFile(scope: !2145, file: !1409, discriminator: 0)
!2145 = distinct !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17hdba1a59c56ca76ccE", scope: !936, file: !121, line: 532, type: !2146, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !2148)
!2146 = !DISubroutineType(types: !2147)
!2147 = !{!127, !936}
!2148 = !{!2143}
!2149 = !DILocation(line: 224, column: 56, scope: !2144, inlinedAt: !1931)
!2150 = !DILocalVariable(name: "self", scope: !2151, file: !1409, line: 224, type: !936, align: 8)
!2151 = !DILexicalBlockFile(scope: !2152, file: !1409, discriminator: 0)
!2152 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h93d6b130f8e29ea1E", scope: !936, file: !121, line: 330, type: !2153, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !2155)
!2153 = !DISubroutineType(types: !2154)
!2154 = !{!1688, !936}
!2155 = !{!2150}
!2156 = !DILocation(line: 224, column: 56, scope: !2151, inlinedAt: !2157)
!2157 = !DILocation(line: 534, column: 41, scope: !2145, inlinedAt: !1931)
!2158 = !DILocalVariable(name: "self", scope: !2159, file: !1409, line: 224, type: !1688, align: 8)
!2159 = !DILexicalBlockFile(scope: !2160, file: !1409, discriminator: 0)
!2160 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hc17a3eb7d4f5cf0cE", scope: !2161, file: !557, line: 1778, type: !2162, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !2164)
!2161 = !DINamespace(name: "{impl#1}", scope: !559)
!2162 = !DISubroutineType(types: !2163)
!2163 = !{!151, !1688}
!2164 = !{!2158}
!2165 = !DILocation(line: 224, column: 56, scope: !2159, inlinedAt: !2157)
!2166 = !DILocalVariable(name: "ptr", scope: !2167, file: !1409, line: 224, type: !151, align: 8)
!2167 = !DILexicalBlockFile(scope: !2168, file: !1409, discriminator: 0)
!2168 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h34d07e24ca4007b4E", scope: !127, file: !121, line: 196, type: !163, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !2169)
!2169 = !{!2166}
!2170 = !DILocation(line: 224, column: 56, scope: !2167, inlinedAt: !2171)
!2171 = !DILocation(line: 534, column: 18, scope: !2145, inlinedAt: !1931)
!2172 = !DILocation(line: 224, column: 78, scope: !1785)
!2173 = !DILocation(line: 225, column: 38, scope: !1785)
!2174 = !DILocation(line: 225, column: 17, scope: !1785)
!2175 = !DILocation(line: 226, column: 17, scope: !1785)
!2176 = !DILocation(line: 227, column: 13, scope: !1760)
!2177 = !DILocation(line: 199, column: 52, scope: !1760)
!2178 = distinct !DISubprogram(name: "finish_grow<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow17h2bc375db3f95f233E", scope: !114, file: !1201, line: 448, type: !2179, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !2252, retainedNodes: !2199)
!2179 = !DISubroutineType(types: !2180)
!2180 = !{!954, !601, !2181, !2198}
!2181 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", scope: !388, file: !30, size: 192, align: 64, elements: !2182, templateParams: !140, identifier: "2441bf159aec13ad0ba597f59aeb1a1")
!2182 = !{!2183}
!2183 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2181, file: !30, size: 192, align: 64, elements: !2184, templateParams: !140, identifier: "d785942d6e728cf8ed28d4d1a571b7a3", discriminator: !2197)
!2184 = !{!2185, !2193}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2183, file: !30, baseType: !2186, size: 192, align: 64, extraData: i64 0)
!2186 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2181, file: !30, size: 192, align: 64, elements: !140, templateParams: !2187, identifier: "4d71821a6a04b7dadd5f931d25e98cb2")
!2187 = !{!2188}
!2188 = !DITemplateTypeParameter(name: "T", type: !2189)
!2189 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)", file: !30, size: 192, align: 64, elements: !2190, templateParams: !140, identifier: "c358a41279bc49b48121f0f71b1b3c8")
!2190 = !{!2191, !2192}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2189, file: !30, baseType: !127, size: 64, align: 64)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !2189, file: !30, baseType: !188, size: 128, align: 64, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2183, file: !30, baseType: !2194, size: 192, align: 64)
!2194 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2181, file: !30, size: 192, align: 64, elements: !2195, templateParams: !2187, identifier: "3a54c5b1a06a194b358330f440d65fe5")
!2195 = !{!2196}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2194, file: !30, baseType: !2189, size: 192, align: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, scope: !2181, file: !30, baseType: !34, size: 64, align: 64, offset: 128, flags: DIFlagArtificial)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::alloc::Global", baseType: !488, size: 64, align: 64, dwarfAddressSpace: 0)
!2199 = !{!2200, !2201, !2202, !2203, !2205, !2220, !2222, !2237, !2239, !2241, !2243, !2244, !2248, !2249}
!2200 = !DILocalVariable(name: "new_layout", arg: 1, scope: !2178, file: !1201, line: 449, type: !601)
!2201 = !DILocalVariable(name: "current_memory", arg: 2, scope: !2178, file: !1201, line: 450, type: !2181)
!2202 = !DILocalVariable(name: "alloc", arg: 3, scope: !2178, file: !1201, line: 451, type: !2198)
!2203 = !DILocalVariable(name: "new_layout", scope: !2204, file: !1201, line: 457, type: !188, align: 8)
!2204 = distinct !DILexicalBlock(scope: !2178, file: !1201, line: 457, column: 5)
!2205 = !DILocalVariable(name: "residual", scope: !2206, file: !1201, line: 457, type: !2207, align: 8)
!2206 = distinct !DILexicalBlock(scope: !2178, file: !1201, line: 457, column: 62)
!2207 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>", scope: !602, file: !30, size: 128, align: 64, elements: !2208, templateParams: !140, identifier: "5ef5f21a6f46a0206241b0c7f330dfa3")
!2208 = !{!2209}
!2209 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2207, file: !30, size: 128, align: 64, elements: !2210, templateParams: !140, identifier: "cb4858a3f71ae3f451b3ee0e26a669a0")
!2210 = !{!2211, !2216}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2209, file: !30, baseType: !2212, size: 128, align: 64)
!2212 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2207, file: !30, size: 128, align: 64, elements: !2213, templateParams: !2215, identifier: "416344365d509c704ad8ffe5dcfb70fa")
!2213 = !{!2214}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2212, file: !30, baseType: !687, align: 8)
!2215 = !{!692, !1024}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2209, file: !30, baseType: !2217, size: 128, align: 64)
!2217 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2207, file: !30, size: 128, align: 64, elements: !2218, templateParams: !2215, identifier: "554770741a2c8057e7f8529a99308bf0")
!2218 = !{!2219}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2217, file: !30, baseType: !178, size: 128, align: 64)
!2220 = !DILocalVariable(name: "val", scope: !2221, file: !1201, line: 457, type: !188, align: 8)
!2221 = distinct !DILexicalBlock(scope: !2178, file: !1201, line: 457, column: 22)
!2222 = !DILocalVariable(name: "residual", scope: !2223, file: !1201, line: 459, type: !2224, align: 8)
!2223 = distinct !DILexicalBlock(scope: !2204, file: !1201, line: 459, column: 35)
!2224 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveError>", scope: !602, file: !30, size: 128, align: 64, elements: !2225, templateParams: !140, identifier: "c0cf86a3acbcbe62e1045ffe1b8697")
!2225 = !{!2226}
!2226 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2224, file: !30, size: 128, align: 64, elements: !2227, templateParams: !140, identifier: "542941ded386c5d0b8832b89b5bc0159")
!2227 = !{!2228, !2233}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2226, file: !30, baseType: !2229, size: 128, align: 64)
!2229 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2224, file: !30, size: 128, align: 64, elements: !2230, templateParams: !2232, identifier: "172bc5836ee47c35d518a78511939b12")
!2230 = !{!2231}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2229, file: !30, baseType: !687, align: 8)
!2232 = !{!692, !963}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2226, file: !30, baseType: !2234, size: 128, align: 64)
!2234 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2224, file: !30, size: 128, align: 64, elements: !2235, templateParams: !2232, identifier: "adf3f686a95f61b9c3558b4df539adb8")
!2235 = !{!2236}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2234, file: !30, baseType: !175, size: 128, align: 64)
!2237 = !DILocalVariable(name: "val", scope: !2238, file: !1201, line: 459, type: !199, align: 1)
!2238 = distinct !DILexicalBlock(scope: !2204, file: !1201, line: 459, column: 5)
!2239 = !DILocalVariable(name: "memory", scope: !2240, file: !1201, line: 461, type: !928, align: 8)
!2240 = distinct !DILexicalBlock(scope: !2204, file: !1201, line: 461, column: 5)
!2241 = !DILocalVariable(name: "ptr", scope: !2242, file: !1201, line: 461, type: !127, align: 8)
!2242 = distinct !DILexicalBlock(scope: !2204, file: !1201, line: 461, column: 66)
!2243 = !DILocalVariable(name: "old_layout", scope: !2242, file: !1201, line: 461, type: !188, align: 8)
!2244 = !DILocalVariable(name: "left_val", scope: !2245, file: !1201, line: 462, type: !255, align: 8)
!2245 = !DILexicalBlockFile(scope: !2246, file: !1201, discriminator: 0)
!2246 = distinct !DILexicalBlock(scope: !2242, file: !2247, line: 39, column: 13)
!2247 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "92818cc67b0fce20f16574f7676a5426")
!2248 = !DILocalVariable(name: "right_val", scope: !2245, file: !1201, line: 462, type: !255, align: 8)
!2249 = !DILocalVariable(name: "kind", scope: !2250, file: !1201, line: 462, type: !106, align: 1)
!2250 = !DILexicalBlockFile(scope: !2251, file: !1201, discriminator: 0)
!2251 = distinct !DILexicalBlock(scope: !2246, file: !2247, line: 41, column: 21)
!2252 = !{!491}
!2253 = !DILocation(line: 449, column: 5, scope: !2178)
!2254 = !DILocation(line: 450, column: 5, scope: !2178)
!2255 = !DILocation(line: 451, column: 5, scope: !2178)
!2256 = !DILocation(line: 457, column: 9, scope: !2204)
!2257 = !DILocalVariable(name: "self", scope: !2258, file: !1201, line: 457, type: !1060, align: 8)
!2258 = !DILexicalBlockFile(scope: !2259, file: !1201, discriminator: 0)
!2259 = distinct !DISubprogram(name: "branch<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h3bec6573eb594b72E", scope: !704, file: !703, line: 2117, type: !2260, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1068, retainedNodes: !2278)
!2260 = !DISubroutineType(types: !2261)
!2261 = !{!2262, !1060}
!2262 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", scope: !708, file: !30, size: 192, align: 64, elements: !2263, templateParams: !140, identifier: "30c77f8de40d27cc25bb1f117e102368")
!2263 = !{!2264}
!2264 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2262, file: !30, size: 192, align: 64, elements: !2265, templateParams: !140, identifier: "873dd87a14009e5aa4571f77c2255abd", discriminator: !2277)
!2265 = !{!2266, !2273}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !2264, file: !30, baseType: !2267, size: 192, align: 64, extraData: i64 0)
!2267 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !2262, file: !30, size: 192, align: 64, elements: !2268, templateParams: !2270, identifier: "44b658dc6aeebfb637fc0f71177a37ae")
!2268 = !{!2269}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2267, file: !30, baseType: !188, size: 128, align: 64, offset: 64)
!2270 = !{!2271, !2272}
!2271 = !DITemplateTypeParameter(name: "B", type: !2207)
!2272 = !DITemplateTypeParameter(name: "C", type: !188)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !2264, file: !30, baseType: !2274, size: 192, align: 64, extraData: i64 1)
!2274 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !2262, file: !30, size: 192, align: 64, elements: !2275, templateParams: !2270, identifier: "a45e3c8f49f3878b531df9d7bb0c1ddb")
!2275 = !{!2276}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2274, file: !30, baseType: !2207, size: 128, align: 64, offset: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, scope: !2262, file: !30, baseType: !34, size: 64, align: 64, flags: DIFlagArtificial)
!2278 = !{!2257, !2279, !2282}
!2279 = !DILocalVariable(name: "v", scope: !2280, file: !1201, line: 457, type: !188, align: 8)
!2280 = !DILexicalBlockFile(scope: !2281, file: !1201, discriminator: 0)
!2281 = distinct !DILexicalBlock(scope: !2259, file: !703, line: 2119, column: 13)
!2282 = !DILocalVariable(name: "e", scope: !2283, file: !1201, line: 457, type: !178, align: 8)
!2283 = !DILexicalBlockFile(scope: !2284, file: !1201, discriminator: 0)
!2284 = distinct !DILexicalBlock(scope: !2259, file: !703, line: 2120, column: 13)
!2285 = !DILocation(line: 457, column: 22, scope: !2258, inlinedAt: !2286)
!2286 = !DILocation(line: 457, column: 22, scope: !2178)
!2287 = !DILocalVariable(name: "residual", scope: !2288, file: !1201, line: 457, type: !2207, align: 8)
!2288 = !DILexicalBlockFile(scope: !2289, file: !1201, discriminator: 0)
!2289 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h242e811e0892cb8fE", scope: !764, file: !703, line: 2132, type: !2290, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !2296, retainedNodes: !2292)
!2290 = !DISubroutineType(types: !2291)
!2291 = !{!954, !2207, !353}
!2292 = !{!2287, !2293}
!2293 = !DILocalVariable(name: "e", scope: !2294, file: !1201, line: 457, type: !178, align: 8)
!2294 = !DILexicalBlockFile(scope: !2295, file: !1201, discriminator: 0)
!2295 = distinct !DILexicalBlock(scope: !2289, file: !703, line: 2134, column: 13)
!2296 = !{!944, !1024, !982}
!2297 = !DILocation(line: 457, column: 22, scope: !2288, inlinedAt: !2298)
!2298 = !DILocation(line: 457, column: 22, scope: !2206)
!2299 = !DILocalVariable(name: "self", scope: !2300, file: !1201, line: 459, type: !999, align: 8)
!2300 = !DILexicalBlockFile(scope: !2301, file: !1201, discriminator: 0)
!2301 = distinct !DISubprogram(name: "branch<(), alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he1a5802c3ef20b19E", scope: !704, file: !703, line: 2117, type: !2302, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !1007, retainedNodes: !2320)
!2302 = !DISubroutineType(types: !2303)
!2303 = !{!2304, !999}
!2304 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, ()>", scope: !708, file: !30, size: 128, align: 64, elements: !2305, templateParams: !140, identifier: "dd182185d8f5b2b7cb5665cc5c5ccb07")
!2305 = !{!2306}
!2306 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2304, file: !30, size: 128, align: 64, elements: !2307, templateParams: !140, identifier: "57751adeae8e77576883f29d0a97ac09", discriminator: !2319)
!2307 = !{!2308, !2315}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !2306, file: !30, baseType: !2309, size: 128, align: 64, extraData: i64 -9223372036854775807)
!2309 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !2304, file: !30, size: 128, align: 64, elements: !2310, templateParams: !2312, identifier: "35a87d623a367fdaec857f7d914f3ad9")
!2310 = !{!2311}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2309, file: !30, baseType: !199, align: 8)
!2312 = !{!2313, !2314}
!2313 = !DITemplateTypeParameter(name: "B", type: !2224)
!2314 = !DITemplateTypeParameter(name: "C", type: !199)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !2306, file: !30, baseType: !2316, size: 128, align: 64)
!2316 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !2304, file: !30, size: 128, align: 64, elements: !2317, templateParams: !2312, identifier: "f5790c13a1dcecaf1cf858de99ad1734")
!2317 = !{!2318}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2316, file: !30, baseType: !2224, size: 128, align: 64)
!2319 = !DIDerivedType(tag: DW_TAG_member, scope: !2304, file: !30, baseType: !34, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!2320 = !{!2299, !2321, !2324}
!2321 = !DILocalVariable(name: "v", scope: !2322, file: !1201, line: 459, type: !199, align: 1)
!2322 = !DILexicalBlockFile(scope: !2323, file: !1201, discriminator: 0)
!2323 = distinct !DILexicalBlock(scope: !2301, file: !703, line: 2119, column: 13)
!2324 = !DILocalVariable(name: "e", scope: !2325, file: !1201, line: 459, type: !175, align: 8)
!2325 = !DILexicalBlockFile(scope: !2326, file: !1201, discriminator: 0)
!2326 = distinct !DILexicalBlock(scope: !2301, file: !703, line: 2120, column: 13)
!2327 = !DILocation(line: 459, column: 5, scope: !2300, inlinedAt: !2328)
!2328 = !DILocation(line: 459, column: 5, scope: !2204)
!2329 = !DILocalVariable(name: "residual", scope: !2330, file: !1201, line: 459, type: !2224, align: 8)
!2330 = !DILexicalBlockFile(scope: !2331, file: !1201, discriminator: 0)
!2331 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h991551e615141f3dE", scope: !764, file: !703, line: 2132, type: !2332, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !2338, retainedNodes: !2334)
!2332 = !DISubroutineType(types: !2333)
!2333 = !{!954, !2224, !353}
!2334 = !{!2329, !2335}
!2335 = !DILocalVariable(name: "e", scope: !2336, file: !1201, line: 459, type: !175, align: 8)
!2336 = !DILexicalBlockFile(scope: !2337, file: !1201, discriminator: 0)
!2337 = distinct !DILexicalBlock(scope: !2331, file: !703, line: 2134, column: 13)
!2338 = !{!944, !963, !982}
!2339 = !DILocation(line: 459, column: 5, scope: !2330, inlinedAt: !2340)
!2340 = !DILocation(line: 459, column: 5, scope: !2223)
!2341 = !DILocation(line: 459, column: 5, scope: !2238)
!2342 = !DILocation(line: 461, column: 9, scope: !2240)
!2343 = !DILocation(line: 461, column: 36, scope: !2242)
!2344 = !DILocation(line: 459, column: 5, scope: !2322, inlinedAt: !2328)
!2345 = !DILocalVariable(name: "self", scope: !2346, file: !1201, line: 465, type: !628, align: 8)
!2346 = !DILexicalBlockFile(scope: !2347, file: !1201, discriminator: 0)
!2347 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h4c609daa585f4c69E", scope: !628, file: !627, line: 82, type: !632, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2348)
!2348 = !{!2345}
!2349 = !DILocation(line: 465, column: 32, scope: !2346, inlinedAt: !2350)
!2350 = !DILocation(line: 131, column: 9, scope: !2351, inlinedAt: !2355)
!2351 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17hcc6c9c31d4ab34e4E", scope: !188, file: !598, line: 130, type: !1541, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2352)
!2352 = !{!2353}
!2353 = !DILocalVariable(name: "self", scope: !2354, file: !1201, line: 465, type: !973, align: 8)
!2354 = !DILexicalBlockFile(scope: !2351, file: !1201, discriminator: 0)
!2355 = !DILocation(line: 465, column: 32, scope: !2242)
!2356 = !DILocalVariable(name: "self", scope: !2357, file: !1201, line: 465, type: !195, align: 8)
!2357 = !DILexicalBlockFile(scope: !2358, file: !1201, discriminator: 0)
!2358 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h466a6ecaf9634463E", scope: !195, file: !640, line: 39, type: !641, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2359)
!2359 = !{!2356}
!2360 = !DILocation(line: 465, column: 32, scope: !2357, inlinedAt: !2350)
!2361 = !DILocalVariable(name: "self", scope: !2362, file: !1201, line: 465, type: !628, align: 8)
!2362 = !DILexicalBlockFile(scope: !2363, file: !1201, discriminator: 0)
!2363 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h4c609daa585f4c69E", scope: !628, file: !627, line: 82, type: !632, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2364)
!2364 = !{!2361}
!2365 = !DILocation(line: 465, column: 54, scope: !2362, inlinedAt: !2366)
!2366 = !DILocation(line: 131, column: 9, scope: !2367, inlinedAt: !2371)
!2367 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17hcc6c9c31d4ab34e4E", scope: !188, file: !598, line: 130, type: !1541, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2368)
!2368 = !{!2369}
!2369 = !DILocalVariable(name: "self", scope: !2370, file: !1201, line: 465, type: !973, align: 8)
!2370 = !DILexicalBlockFile(scope: !2367, file: !1201, discriminator: 0)
!2371 = !DILocation(line: 465, column: 54, scope: !2242)
!2372 = !DILocalVariable(name: "self", scope: !2373, file: !1201, line: 465, type: !195, align: 8)
!2373 = !DILexicalBlockFile(scope: !2374, file: !1201, discriminator: 0)
!2374 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h466a6ecaf9634463E", scope: !195, file: !640, line: 39, type: !641, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2375)
!2375 = !{!2372}
!2376 = !DILocation(line: 465, column: 54, scope: !2373, inlinedAt: !2366)
!2377 = !DILocation(line: 457, column: 22, scope: !2280, inlinedAt: !2286)
!2378 = !DILocation(line: 457, column: 22, scope: !2283, inlinedAt: !2286)
!2379 = !DILocation(line: 457, column: 22, scope: !2221)
!2380 = !DILocation(line: 459, column: 5, scope: !2381, inlinedAt: !2328)
!2381 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17h18d9d36171cfde48E", scope: !114, file: !1201, line: 505, type: !2382, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2384)
!2382 = !DISubroutineType(types: !2383)
!2383 = !{!999, !193}
!2384 = !{!2385}
!2385 = !DILocalVariable(name: "alloc_size", scope: !2381, file: !1201, line: 459, type: !193, align: 8)
!2386 = !DILocation(line: 457, column: 62, scope: !2178)
!2387 = !DILocation(line: 457, column: 62, scope: !2206)
!2388 = !DILocation(line: 457, column: 22, scope: !2294, inlinedAt: !2298)
!2389 = !DILocalVariable(name: "kind", scope: !2390, file: !1201, line: 457, type: !178, align: 8)
!2390 = !DILexicalBlockFile(scope: !2391, file: !1201, discriminator: 0)
!2391 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h07c1f08a15bfc68eE", scope: !171, file: !170, line: 116, type: !173, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2392)
!2392 = !{!2389}
!2393 = !DILocation(line: 457, column: 22, scope: !2390, inlinedAt: !2394)
!2394 = !DILocation(line: 2134, column: 27, scope: !2295, inlinedAt: !2298)
!2395 = !DILocation(line: 1, column: 1, scope: !2396)
!2396 = !DILexicalBlockFile(scope: !2178, file: !2042, discriminator: 0)
!2397 = !DILocation(line: 473, column: 2, scope: !2178)
!2398 = !DILocation(line: 459, column: 5, scope: !2325, inlinedAt: !2328)
!2399 = !DILocation(line: 461, column: 25, scope: !2242)
!2400 = !DILocation(line: 459, column: 35, scope: !2204)
!2401 = !DILocation(line: 459, column: 35, scope: !2223)
!2402 = !DILocation(line: 459, column: 5, scope: !2336, inlinedAt: !2340)
!2403 = !DILocation(line: 1, column: 1, scope: !2404)
!2404 = !DILexicalBlockFile(scope: !2204, file: !2042, discriminator: 0)
!2405 = !DILocation(line: 461, column: 31, scope: !2242)
!2406 = !DILocation(line: 465, column: 32, scope: !2354, inlinedAt: !2355)
!2407 = !DILocalVariable(name: "n", scope: !2408, file: !1201, line: 465, type: !193, align: 8)
!2408 = !DILexicalBlockFile(scope: !2409, file: !1201, discriminator: 0)
!2409 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hb7b27ac1e98aa935E", scope: !628, file: !627, line: 56, type: !649, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2410)
!2410 = !{!2407, !2411}
!2411 = !DILocalVariable(name: "runtime", scope: !2412, file: !1201, line: 465, type: !656, align: 8)
!2412 = !DILexicalBlockFile(scope: !2413, file: !1201, discriminator: 0)
!2413 = distinct !DILexicalBlock(scope: !2409, file: !655, line: 2336, column: 13)
!2414 = !DILocation(line: 465, column: 32, scope: !2408, inlinedAt: !2415)
!2415 = !DILocation(line: 41, column: 18, scope: !2358, inlinedAt: !2350)
!2416 = !DILocation(line: 465, column: 54, scope: !2370, inlinedAt: !2371)
!2417 = !DILocalVariable(name: "n", scope: !2418, file: !1201, line: 465, type: !193, align: 8)
!2418 = !DILexicalBlockFile(scope: !2419, file: !1201, discriminator: 0)
!2419 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hb7b27ac1e98aa935E", scope: !628, file: !627, line: 56, type: !649, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2420)
!2420 = !{!2417, !2421}
!2421 = !DILocalVariable(name: "runtime", scope: !2422, file: !1201, line: 465, type: !656, align: 8)
!2422 = !DILexicalBlockFile(scope: !2423, file: !1201, discriminator: 0)
!2423 = distinct !DILexicalBlock(scope: !2419, file: !655, line: 2336, column: 13)
!2424 = !DILocation(line: 465, column: 54, scope: !2418, inlinedAt: !2425)
!2425 = !DILocation(line: 41, column: 18, scope: !2374, inlinedAt: !2366)
!2426 = !DILocation(line: 465, column: 13, scope: !2242)
!2427 = !DILocation(line: 469, column: 24, scope: !2204)
!2428 = !DILocation(line: 469, column: 9, scope: !2204)
!2429 = !DILocation(line: 461, column: 18, scope: !2204)
!2430 = !DILocation(line: 472, column: 5, scope: !2240)
!2431 = !DILocation(line: 472, column: 20, scope: !2240)
!2432 = !{i64 8}
!2433 = !DILocation(line: 466, column: 29, scope: !2242)
!2434 = !DILocation(line: 466, column: 41, scope: !2242)
!2435 = !DILocation(line: 466, column: 13, scope: !2242)
!2436 = distinct !DISubprogram(name: "{closure#0}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h279df25bbe7182e6E", scope: !970, file: !1201, line: 457, type: !2437, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !2252, retainedNodes: !2439)
!2437 = !DISubroutineType(types: !2438)
!2438 = !{!178, !1074, !613}
!2439 = !{!2440, !2441}
!2440 = !DILocalVariable(arg: 1, scope: !2436, file: !1201, line: 457, type: !1074)
!2441 = !DILocalVariable(arg: 2, scope: !2436, file: !1201, line: 457, type: !613)
!2442 = !DILocation(line: 457, column: 41, scope: !2436)
!2443 = !DILocation(line: 457, column: 42, scope: !2436)
!2444 = !DILocation(line: 457, column: 45, scope: !2436)
!2445 = !DILocation(line: 457, column: 44, scope: !2436)
!2446 = distinct !DISubprogram(name: "{closure#1}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hf3f1149945585880E", scope: !970, file: !1201, line: 472, type: !2447, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !2252, retainedNodes: !2449)
!2447 = !DISubroutineType(types: !2448)
!2448 = !{!175, !969, !946}
!2449 = !{!2450, !2451}
!2450 = !DILocalVariable(name: "new_layout", scope: !2446, file: !1201, line: 457, type: !188, align: 8)
!2451 = !DILocalVariable(arg: 2, scope: !2446, file: !1201, line: 472, type: !946)
!2452 = !DILocation(line: 457, column: 9, scope: !2446)
!2453 = !DILocation(line: 472, column: 21, scope: !2446)
!2454 = !DILocation(line: 472, column: 45, scope: !2446)
!2455 = !DILocation(line: 472, column: 24, scope: !2446)
!2456 = !DILocation(line: 472, column: 23, scope: !2446)
!2457 = distinct !DISubprogram(name: "handle_reserve", linkageName: "_ZN5alloc7raw_vec14handle_reserve17h1a4fd17d14696974E", scope: !114, file: !1201, line: 487, type: !2458, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2460)
!2458 = !DISubroutineType(types: !2459)
!2459 = !{null, !999}
!2460 = !{!2461, !2462}
!2461 = !DILocalVariable(name: "result", arg: 1, scope: !2457, file: !1201, line: 487, type: !999)
!2462 = !DILocalVariable(name: "layout", scope: !2463, file: !1201, line: 490, type: !188, align: 8)
!2463 = distinct !DILexicalBlock(scope: !2457, file: !1201, line: 490, column: 9)
!2464 = !DILocation(line: 487, column: 19, scope: !2457)
!2465 = !DILocation(line: 488, column: 11, scope: !2457)
!2466 = !DILocation(line: 488, column: 5, scope: !2457)
!2467 = !DILocation(line: 493, column: 2, scope: !2457)
!2468 = !DILocation(line: 489, column: 34, scope: !2457)
!2469 = !DILocation(line: 490, column: 26, scope: !2457)
!2470 = !DILocation(line: 490, column: 26, scope: !2463)
!2471 = !DILocation(line: 490, column: 43, scope: !2463)
!2472 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h4c6e33af5edd4a36E", scope: !1031, file: !1201, line: 488, type: !2473, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2475)
!2473 = !DISubroutineType(types: !2474)
!2474 = !{!178, !1030, !175}
!2475 = !{!2476, !2477}
!2476 = !DILocalVariable(name: "e", arg: 2, scope: !2472, file: !1201, line: 488, type: !175)
!2477 = !DILocalVariable(arg: 1, scope: !2472, file: !1201, line: 488, type: !1030)
!2478 = !DILocation(line: 488, column: 26, scope: !2472)
!2479 = !DILocation(line: 488, column: 27, scope: !2472)
!2480 = !DILocation(line: 488, column: 30, scope: !2472)
!2481 = !DILocalVariable(name: "self", scope: !2482, file: !1201, line: 488, type: !2486, align: 8)
!2482 = !DILexicalBlockFile(scope: !2483, file: !1201, discriminator: 0)
!2483 = distinct !DISubprogram(name: "kind", linkageName: "_ZN5alloc11collections15TryReserveError4kind17h5ba6c0628b24c688E", scope: !175, file: !170, line: 74, type: !2484, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2487)
!2484 = !DISubroutineType(types: !2485)
!2485 = !{!178, !2486}
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveError", baseType: !175, size: 64, align: 64, dwarfAddressSpace: 0)
!2487 = !{!2481}
!2488 = !DILocation(line: 488, column: 30, scope: !2482, inlinedAt: !2480)
!2489 = !DILocalVariable(name: "self", scope: !2490, file: !1201, line: 488, type: !2495, align: 8)
!2490 = !DILexicalBlockFile(scope: !2491, file: !1201, discriminator: 0)
!2491 = distinct !DISubprogram(name: "clone", linkageName: "_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h1eb1a6872c1b2025E", scope: !2492, file: !170, line: 80, type: !2493, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2496)
!2492 = !DINamespace(name: "{impl#10}", scope: !172)
!2493 = !DISubroutineType(types: !2494)
!2494 = !{!178, !2495}
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveErrorKind", baseType: !178, size: 64, align: 64, dwarfAddressSpace: 0)
!2496 = !{!2489, !2497, !2500}
!2497 = !DILocalVariable(name: "__self_0", scope: !2498, file: !1201, line: 488, type: !973, align: 8)
!2498 = !DILexicalBlockFile(scope: !2499, file: !1201, discriminator: 0)
!2499 = distinct !DILexicalBlock(scope: !2491, file: !170, line: 80, column: 10)
!2500 = !DILocalVariable(name: "__self_1", scope: !2498, file: !1201, line: 488, type: !2501, align: 8)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&()", baseType: !199, size: 64, align: 64, dwarfAddressSpace: 0)
!2502 = !DILocation(line: 488, column: 30, scope: !2490, inlinedAt: !2503)
!2503 = !DILocation(line: 75, column: 9, scope: !2483, inlinedAt: !2480)
!2504 = !DILocation(line: 488, column: 30, scope: !2498, inlinedAt: !2503)
!2505 = !DILocalVariable(name: "self", scope: !2506, file: !1201, line: 488, type: !973, align: 8)
!2506 = !DILexicalBlockFile(scope: !2507, file: !1201, discriminator: 0)
!2507 = distinct !DISubprogram(name: "clone", linkageName: "_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h9f8985b4c887ab06E", scope: !2508, file: !598, line: 35, type: !2509, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2511)
!2508 = !DINamespace(name: "{impl#3}", scope: !189)
!2509 = !DISubroutineType(types: !2510)
!2510 = !{!188, !973}
!2511 = !{!2505}
!2512 = !DILocation(line: 488, column: 30, scope: !2506, inlinedAt: !2513)
!2513 = !DILocation(line: 94, column: 9, scope: !2499, inlinedAt: !2503)
!2514 = !DILocation(line: 488, column: 29, scope: !2472)
!2515 = distinct !DISubprogram(name: "allocate_in<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h91f49f7466e9561cE", scope: !471, file: !1201, line: 169, type: !2516, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !490, retainedNodes: !2518)
!2516 = !DISubroutineType(types: !2517)
!2517 = !{!471, !193, !113, !488}
!2518 = !{!2519, !2520, !2521, !2522, !2524, !2526, !2528, !2530}
!2519 = !DILocalVariable(name: "capacity", arg: 1, scope: !2515, file: !1201, line: 169, type: !193)
!2520 = !DILocalVariable(name: "init", arg: 2, scope: !2515, file: !1201, line: 169, type: !113)
!2521 = !DILocalVariable(name: "alloc", arg: 3, scope: !2515, file: !1201, line: 169, type: !488)
!2522 = !DILocalVariable(name: "layout", scope: !2523, file: !1201, line: 176, type: !188, align: 8)
!2523 = distinct !DILexicalBlock(scope: !2515, file: !1201, line: 176, column: 13)
!2524 = !DILocalVariable(name: "layout", scope: !2525, file: !1201, line: 177, type: !188, align: 8)
!2525 = distinct !DILexicalBlock(scope: !2515, file: !1201, line: 177, column: 17)
!2526 = !DILocalVariable(name: "result", scope: !2527, file: !1201, line: 184, type: !928, align: 8)
!2527 = distinct !DILexicalBlock(scope: !2523, file: !1201, line: 184, column: 13)
!2528 = !DILocalVariable(name: "ptr", scope: !2529, file: !1201, line: 188, type: !936, align: 8)
!2529 = distinct !DILexicalBlock(scope: !2527, file: !1201, line: 188, column: 13)
!2530 = !DILocalVariable(name: "ptr", scope: !2531, file: !1201, line: 189, type: !936, align: 8)
!2531 = distinct !DILexicalBlock(scope: !2527, file: !1201, line: 189, column: 17)
!2532 = !DILocation(line: 169, column: 20, scope: !2515)
!2533 = !DILocation(line: 169, column: 37, scope: !2515)
!2534 = !DILocation(line: 169, column: 54, scope: !2515)
!2535 = !DILocation(line: 184, column: 17, scope: !2527)
!2536 = !DILocalVariable(name: "self", scope: !2537, file: !1201, line: 197, type: !477, align: 8)
!2537 = !DILexicalBlockFile(scope: !2538, file: !1201, discriminator: 0)
!2538 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he26f67c1134ddd48E", scope: !477, file: !121, line: 330, type: !1218, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !2539)
!2539 = !{!2536}
!2540 = !DILocation(line: 197, column: 53, scope: !2537, inlinedAt: !2541)
!2541 = !DILocation(line: 197, column: 53, scope: !2529)
!2542 = !DILocation(line: 171, column: 12, scope: !2515)
!2543 = !DILocation(line: 171, column: 40, scope: !2515)
!2544 = !DILocation(line: 176, column: 32, scope: !2515)
!2545 = !DILocation(line: 172, column: 26, scope: !2515)
!2546 = !DILocation(line: 172, column: 13, scope: !2515)
!2547 = !DILocation(line: 202, column: 5, scope: !2515)
!2548 = !DILocation(line: 171, column: 9, scope: !2515)
!2549 = !DILocation(line: 202, column: 6, scope: !2515)
!2550 = !DILocation(line: 176, column: 26, scope: !2515)
!2551 = !DILocation(line: 177, column: 20, scope: !2515)
!2552 = !DILocation(line: 177, column: 20, scope: !2525)
!2553 = !DILocation(line: 177, column: 31, scope: !2525)
!2554 = !DILocation(line: 176, column: 17, scope: !2523)
!2555 = !DILocation(line: 180, column: 19, scope: !2556, inlinedAt: !2559)
!2556 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17h18d9d36171cfde48E", scope: !114, file: !1201, line: 505, type: !2382, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2557)
!2557 = !{!2558}
!2558 = !DILocalVariable(name: "alloc_size", scope: !2556, file: !1201, line: 180, type: !193, align: 8)
!2559 = !DILocation(line: 180, column: 19, scope: !2523)
!2560 = !DILocation(line: 180, column: 13, scope: !2523)
!2561 = !DILocation(line: 178, column: 27, scope: !2515)
!2562 = !DILocation(line: 184, column: 32, scope: !2523)
!2563 = !DILocation(line: 184, column: 26, scope: !2523)
!2564 = !DILocation(line: 182, column: 27, scope: !2523)
!2565 = !DILocation(line: 185, column: 45, scope: !2523)
!2566 = !DILocation(line: 186, column: 38, scope: !2523)
!2567 = !DILocation(line: 186, column: 66, scope: !2523)
!2568 = !DILocation(line: 188, column: 29, scope: !2527)
!2569 = !DILocation(line: 188, column: 23, scope: !2527)
!2570 = !DILocation(line: 185, column: 66, scope: !2523)
!2571 = !DILocation(line: 189, column: 20, scope: !2527)
!2572 = !DILocation(line: 189, column: 20, scope: !2531)
!2573 = !DILocation(line: 189, column: 28, scope: !2531)
!2574 = !DILocation(line: 188, column: 17, scope: !2529)
!2575 = !DILocalVariable(name: "self", scope: !2576, file: !1201, line: 197, type: !936, align: 8)
!2576 = !DILexicalBlockFile(scope: !2577, file: !1201, discriminator: 0)
!2577 = distinct !DISubprogram(name: "cast<[u8], i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hef3c8300535eae05E", scope: !936, file: !121, line: 453, type: !2578, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !2581, retainedNodes: !2580)
!2578 = !DISubroutineType(types: !2579)
!2579 = !{!477, !936}
!2580 = !{!2575}
!2581 = !{!132, !2582}
!2582 = !DITemplateTypeParameter(name: "U", type: !481)
!2583 = !DILocation(line: 197, column: 53, scope: !2576, inlinedAt: !2541)
!2584 = !DILocalVariable(name: "self", scope: !2585, file: !1201, line: 197, type: !936, align: 8)
!2585 = !DILexicalBlockFile(scope: !2586, file: !1201, discriminator: 0)
!2586 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h93d6b130f8e29ea1E", scope: !936, file: !121, line: 330, type: !2153, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !2587)
!2587 = !{!2584}
!2588 = !DILocation(line: 197, column: 53, scope: !2585, inlinedAt: !2589)
!2589 = !DILocation(line: 455, column: 41, scope: !2577, inlinedAt: !2541)
!2590 = !DILocalVariable(name: "ptr", scope: !2591, file: !1201, line: 197, type: !856, align: 8)
!2591 = !DILexicalBlockFile(scope: !2592, file: !1201, discriminator: 0)
!2592 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hbc8e1f1a0c0a9293E", scope: !477, file: !121, line: 196, type: !2593, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !2595)
!2593 = !DISubroutineType(types: !2594)
!2594 = !{!477, !856}
!2595 = !{!2590}
!2596 = !DILocation(line: 197, column: 53, scope: !2591, inlinedAt: !2597)
!2597 = !DILocation(line: 455, column: 18, scope: !2577, inlinedAt: !2541)
!2598 = !DILocalVariable(name: "ptr", scope: !2599, file: !1201, line: 197, type: !856, align: 8)
!2599 = !DILexicalBlockFile(scope: !2600, file: !1201, discriminator: 0)
!2600 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h5bfb607a81103a61E", scope: !474, file: !148, line: 85, type: !2601, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !2603)
!2601 = !DISubroutineType(types: !2602)
!2602 = !{!474, !856}
!2603 = !{!2598}
!2604 = !DILocation(line: 197, column: 31, scope: !2599, inlinedAt: !2605)
!2605 = !DILocation(line: 197, column: 31, scope: !2529)
!2606 = !DILocalVariable(name: "ptr", scope: !2607, file: !1201, line: 197, type: !856, align: 8)
!2607 = !DILexicalBlockFile(scope: !2608, file: !1201, discriminator: 0)
!2608 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hbc8e1f1a0c0a9293E", scope: !477, file: !121, line: 196, type: !2593, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !2609)
!2609 = !{!2606}
!2610 = !DILocation(line: 197, column: 31, scope: !2607, inlinedAt: !2611)
!2611 = !DILocation(line: 87, column: 36, scope: !2600, inlinedAt: !2605)
!2612 = !DILocation(line: 196, column: 13, scope: !2529)
!2613 = !DILocation(line: 190, column: 27, scope: !2527)
!2614 = !DILocation(line: 169, column: 5, scope: !2515)
!2615 = distinct !DISubprogram(name: "needs_to_grow<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hd3a07ce867a517c5E", scope: !471, file: !1201, line: 360, type: !2616, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !490, retainedNodes: !2618)
!2616 = !DISubroutineType(types: !2617)
!2617 = !{!275, !1204, !193, !193}
!2618 = !{!2619, !2620, !2621}
!2619 = !DILocalVariable(name: "self", arg: 1, scope: !2615, file: !1201, line: 360, type: !1204)
!2620 = !DILocalVariable(name: "len", arg: 2, scope: !2615, file: !1201, line: 360, type: !193)
!2621 = !DILocalVariable(name: "additional", arg: 3, scope: !2615, file: !1201, line: 360, type: !193)
!2622 = !DILocation(line: 360, column: 22, scope: !2615)
!2623 = !DILocation(line: 360, column: 29, scope: !2615)
!2624 = !DILocation(line: 360, column: 41, scope: !2615)
!2625 = !DILocalVariable(name: "self", scope: !2626, file: !1201, line: 361, type: !193, align: 8)
!2626 = !DILexicalBlockFile(scope: !2627, file: !1201, discriminator: 0)
!2627 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h5e8f57e42e99a91fE", scope: !224, file: !223, line: 1231, type: !212, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2628)
!2628 = !{!2625, !2629}
!2629 = !DILocalVariable(name: "rhs", scope: !2626, file: !1201, line: 361, type: !193, align: 8)
!2630 = !DILocation(line: 361, column: 22, scope: !2626, inlinedAt: !2631)
!2631 = !DILocation(line: 361, column: 22, scope: !2615)
!2632 = !DILocalVariable(name: "self", scope: !2633, file: !1201, line: 361, type: !1204, align: 8)
!2633 = distinct !DISubprogram(name: "capacity<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17hf5242092242434b6E", scope: !471, file: !1201, line: 231, type: !2634, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !490, retainedNodes: !2636)
!2634 = !DISubroutineType(types: !2635)
!2635 = !{!193, !1204}
!2636 = !{!2632}
!2637 = !DILocation(line: 361, column: 22, scope: !2633, inlinedAt: !2631)
!2638 = !DILocation(line: 361, column: 51, scope: !2615)
!2639 = !DILocation(line: 361, column: 9, scope: !2615)
!2640 = !DILocation(line: 362, column: 6, scope: !2615)
!2641 = distinct !DISubprogram(name: "current_memory<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hf4494b29e24149ddE", scope: !471, file: !1201, line: 240, type: !2642, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !490, retainedNodes: !2644)
!2642 = !DISubroutineType(types: !2643)
!2643 = !{!2181, !1204}
!2644 = !{!2645, !2646}
!2645 = !DILocalVariable(name: "self", arg: 1, scope: !2641, file: !1201, line: 240, type: !1204)
!2646 = !DILocalVariable(name: "layout", scope: !2647, file: !1201, line: 247, type: !188, align: 8)
!2647 = distinct !DILexicalBlock(scope: !2641, file: !1201, line: 247, column: 17)
!2648 = !DILocation(line: 240, column: 23, scope: !2641)
!2649 = !DILocalVariable(name: "self", scope: !2650, file: !1201, line: 247, type: !601, align: 8)
!2650 = !DILexicalBlockFile(scope: !2651, file: !1201, discriminator: 0)
!2651 = distinct !DISubprogram(name: "unwrap_unchecked<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17hcf093f81d3416df8E", scope: !601, file: !703, line: 1520, type: !2652, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !610, retainedNodes: !2654)
!2652 = !DISubroutineType(types: !2653)
!2653 = !{!188, !601, !353}
!2654 = !{!2649, !2655}
!2655 = !DILocalVariable(name: "t", scope: !2656, file: !1201, line: 247, type: !188, align: 8)
!2656 = !DILexicalBlockFile(scope: !2657, file: !1201, discriminator: 0)
!2657 = distinct !DILexicalBlock(scope: !2651, file: !703, line: 1523, column: 13)
!2658 = !DILocation(line: 247, column: 30, scope: !2650, inlinedAt: !2659)
!2659 = !DILocation(line: 247, column: 30, scope: !2641)
!2660 = !DILocalVariable(name: "pointer", scope: !2661, file: !1201, line: 248, type: !127, align: 8)
!2661 = !DILexicalBlockFile(scope: !2662, file: !1201, discriminator: 0)
!2662 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17he8a5d0c7c10d3f91E", scope: !2663, file: !148, line: 190, type: !2664, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !2666)
!2663 = !DINamespace(name: "{impl#11}", scope: !134)
!2664 = !DISubroutineType(types: !2665)
!2665 = !{!133, !127}
!2666 = !{!2660}
!2667 = !DILocation(line: 248, column: 23, scope: !2661, inlinedAt: !2668)
!2668 = !DILocation(line: 137, column: 9, scope: !2669, inlinedAt: !2677)
!2669 = distinct !DISubprogram(name: "cast<i32, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h4bc518c965bc4944E", scope: !474, file: !148, line: 136, type: !2670, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !2675, retainedNodes: !2672)
!2670 = !DISubroutineType(types: !2671)
!2671 = !{!133, !474}
!2672 = !{!2673}
!2673 = !DILocalVariable(name: "self", scope: !2674, file: !1201, line: 248, type: !474, align: 8)
!2674 = !DILexicalBlockFile(scope: !2669, file: !1201, discriminator: 0)
!2675 = !{!483, !2676}
!2676 = !DITemplateTypeParameter(name: "U", type: !108)
!2677 = !DILocation(line: 248, column: 23, scope: !2647)
!2678 = !DILocation(line: 241, column: 12, scope: !2641)
!2679 = !DILocation(line: 241, column: 40, scope: !2641)
!2680 = !DILocation(line: 247, column: 49, scope: !2641)
!2681 = !DILocation(line: 242, column: 13, scope: !2641)
!2682 = !DILocation(line: 241, column: 9, scope: !2641)
!2683 = !DILocation(line: 251, column: 6, scope: !2641)
!2684 = !DILocation(line: 247, column: 30, scope: !2656, inlinedAt: !2659)
!2685 = !DILocation(line: 247, column: 21, scope: !2647)
!2686 = !DILocation(line: 248, column: 23, scope: !2674, inlinedAt: !2677)
!2687 = !DILocalVariable(name: "self", scope: !2688, file: !1201, line: 248, type: !477, align: 8)
!2688 = !DILexicalBlockFile(scope: !2689, file: !1201, discriminator: 0)
!2689 = distinct !DISubprogram(name: "cast<i32, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h73c651c54bafc257E", scope: !477, file: !121, line: 453, type: !2690, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !2675, retainedNodes: !2692)
!2690 = !DISubroutineType(types: !2691)
!2691 = !{!127, !477}
!2692 = !{!2687}
!2693 = !DILocation(line: 248, column: 23, scope: !2688, inlinedAt: !2694)
!2694 = !DILocation(line: 137, column: 22, scope: !2669, inlinedAt: !2677)
!2695 = !DILocalVariable(name: "self", scope: !2696, file: !1201, line: 248, type: !477, align: 8)
!2696 = !DILexicalBlockFile(scope: !2697, file: !1201, discriminator: 0)
!2697 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he26f67c1134ddd48E", scope: !477, file: !121, line: 330, type: !1218, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !2698)
!2698 = !{!2695}
!2699 = !DILocation(line: 248, column: 23, scope: !2696, inlinedAt: !2700)
!2700 = !DILocation(line: 455, column: 41, scope: !2689, inlinedAt: !2694)
!2701 = !DILocalVariable(name: "ptr", scope: !2702, file: !1201, line: 248, type: !151, align: 8)
!2702 = !DILexicalBlockFile(scope: !2703, file: !1201, discriminator: 0)
!2703 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h34d07e24ca4007b4E", scope: !127, file: !121, line: 196, type: !163, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !2704)
!2704 = !{!2701}
!2705 = !DILocation(line: 248, column: 23, scope: !2702, inlinedAt: !2706)
!2706 = !DILocation(line: 455, column: 18, scope: !2689, inlinedAt: !2694)
!2707 = !DILocation(line: 247, column: 30, scope: !2708, inlinedAt: !2714)
!2708 = !DILexicalBlockFile(scope: !2709, file: !1201, discriminator: 0)
!2709 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h7abb05892624996bE", scope: !2711, file: !2710, line: 100, type: !2712, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !140)
!2710 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/hint.rs", directory: "", checksumkind: CSK_MD5, checksum: "b50bd4586a98539d3cdc821cfaa5e2e7")
!2711 = !DINamespace(name: "hint", scope: !33)
!2712 = !DISubroutineType(types: !2713)
!2713 = !{null}
!2714 = !DILocation(line: 1525, column: 32, scope: !2651, inlinedAt: !2659)
!2715 = !DILocation(line: 248, column: 22, scope: !2647)
!2716 = !DILocation(line: 248, column: 17, scope: !2647)
!2717 = distinct !DISubprogram(name: "grow_amortized<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h1f74a417d8ab45c3E", scope: !471, file: !1201, line: 379, type: !2718, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !490, retainedNodes: !2721)
!2718 = !DISubroutineType(types: !2719)
!2719 = !{!999, !2720, !193, !193}
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<i32, alloc::alloc::Global>", baseType: !471, size: 64, align: 64, dwarfAddressSpace: 0)
!2721 = !{!2722, !2723, !2724, !2725, !2727, !2729, !2731, !2733, !2735, !2737, !2739, !2741}
!2722 = !DILocalVariable(name: "self", arg: 1, scope: !2717, file: !1201, line: 379, type: !2720)
!2723 = !DILocalVariable(name: "len", arg: 2, scope: !2717, file: !1201, line: 379, type: !193)
!2724 = !DILocalVariable(name: "additional", arg: 3, scope: !2717, file: !1201, line: 379, type: !193)
!2725 = !DILocalVariable(name: "required_cap", scope: !2726, file: !1201, line: 390, type: !193, align: 8)
!2726 = distinct !DILexicalBlock(scope: !2717, file: !1201, line: 390, column: 9)
!2727 = !DILocalVariable(name: "residual", scope: !2728, file: !1201, line: 390, type: !2207, align: 8)
!2728 = distinct !DILexicalBlock(scope: !2717, file: !1201, line: 390, column: 79)
!2729 = !DILocalVariable(name: "val", scope: !2730, file: !1201, line: 390, type: !193, align: 8)
!2730 = distinct !DILexicalBlock(scope: !2717, file: !1201, line: 390, column: 28)
!2731 = !DILocalVariable(name: "cap", scope: !2732, file: !1201, line: 394, type: !193, align: 8)
!2732 = distinct !DILexicalBlock(scope: !2726, file: !1201, line: 394, column: 9)
!2733 = !DILocalVariable(name: "cap", scope: !2734, file: !1201, line: 395, type: !193, align: 8)
!2734 = distinct !DILexicalBlock(scope: !2732, file: !1201, line: 395, column: 9)
!2735 = !DILocalVariable(name: "new_layout", scope: !2736, file: !1201, line: 397, type: !601, align: 8)
!2736 = distinct !DILexicalBlock(scope: !2734, file: !1201, line: 397, column: 9)
!2737 = !DILocalVariable(name: "ptr", scope: !2738, file: !1201, line: 400, type: !936, align: 8)
!2738 = distinct !DILexicalBlock(scope: !2736, file: !1201, line: 400, column: 9)
!2739 = !DILocalVariable(name: "residual", scope: !2740, file: !1201, line: 400, type: !2224, align: 8)
!2740 = distinct !DILexicalBlock(scope: !2736, file: !1201, line: 400, column: 82)
!2741 = !DILocalVariable(name: "val", scope: !2742, file: !1201, line: 400, type: !936, align: 8)
!2742 = distinct !DILexicalBlock(scope: !2736, file: !1201, line: 400, column: 19)
!2743 = !DILocation(line: 379, column: 23, scope: !2717)
!2744 = !DILocation(line: 379, column: 34, scope: !2717)
!2745 = !DILocation(line: 379, column: 46, scope: !2717)
!2746 = !DILocalVariable(name: "self", scope: !2747, file: !1201, line: 390, type: !2765, align: 8)
!2747 = !DILexicalBlockFile(scope: !2748, file: !1201, discriminator: 0)
!2748 = distinct !DISubprogram(name: "branch<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf4308434fb137befE", scope: !704, file: !703, line: 2117, type: !2749, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !2773, retainedNodes: !2779)
!2749 = !DISubroutineType(types: !2750)
!2750 = !{!2751, !2765}
!2751 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", scope: !708, file: !30, size: 192, align: 64, elements: !2752, templateParams: !140, identifier: "aaa47d4c01b9e814e1128564379fb1ed")
!2752 = !{!2753}
!2753 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2751, file: !30, size: 192, align: 64, elements: !2754, templateParams: !140, identifier: "52bc498f97dcf0aebe4be722096289fa", discriminator: !2764)
!2754 = !{!2755, !2760}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !2753, file: !30, baseType: !2756, size: 192, align: 64, extraData: i64 0)
!2756 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !2751, file: !30, size: 192, align: 64, elements: !2757, templateParams: !2759, identifier: "aa7cd1170a8c6991d015bac63ac068a0")
!2757 = !{!2758}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2756, file: !30, baseType: !193, size: 64, align: 64, offset: 64)
!2759 = !{!2271, !719}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !2753, file: !30, baseType: !2761, size: 192, align: 64, extraData: i64 1)
!2761 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !2751, file: !30, size: 192, align: 64, elements: !2762, templateParams: !2759, identifier: "364459b0de7a7982990d34cdf2f986eb")
!2762 = !{!2763}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2761, file: !30, baseType: !2207, size: 128, align: 64, offset: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, scope: !2751, file: !30, baseType: !34, size: 64, align: 64, flags: DIFlagArtificial)
!2765 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, alloc::collections::TryReserveErrorKind>", scope: !602, file: !30, size: 192, align: 64, elements: !2766, templateParams: !140, identifier: "3631237889770fa7267d5501216770d")
!2766 = !{!2767}
!2767 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2765, file: !30, size: 192, align: 64, elements: !2768, templateParams: !140, identifier: "1d1f45ee59d9f1cfc391058ed79e0cae", discriminator: !2778)
!2768 = !{!2769, !2774}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2767, file: !30, baseType: !2770, size: 192, align: 64, extraData: i64 0)
!2770 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2765, file: !30, size: 192, align: 64, elements: !2771, templateParams: !2773, identifier: "e350c9849d9dffdf1ffb40e48a20f918")
!2771 = !{!2772}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2770, file: !30, baseType: !193, size: 64, align: 64, offset: 64)
!2773 = !{!295, !1024}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2767, file: !30, baseType: !2775, size: 192, align: 64, extraData: i64 1)
!2775 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2765, file: !30, size: 192, align: 64, elements: !2776, templateParams: !2773, identifier: "4805f2b2529d263fd0f1d3d0e43e54f8")
!2776 = !{!2777}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2775, file: !30, baseType: !178, size: 128, align: 64, offset: 64)
!2778 = !DIDerivedType(tag: DW_TAG_member, scope: !2765, file: !30, baseType: !34, size: 64, align: 64, flags: DIFlagArtificial)
!2779 = !{!2746, !2780, !2783}
!2780 = !DILocalVariable(name: "v", scope: !2781, file: !1201, line: 390, type: !193, align: 8)
!2781 = !DILexicalBlockFile(scope: !2782, file: !1201, discriminator: 0)
!2782 = distinct !DILexicalBlock(scope: !2748, file: !703, line: 2119, column: 13)
!2783 = !DILocalVariable(name: "e", scope: !2784, file: !1201, line: 390, type: !178, align: 8)
!2784 = !DILexicalBlockFile(scope: !2785, file: !1201, discriminator: 0)
!2785 = distinct !DILexicalBlock(scope: !2748, file: !703, line: 2120, column: 13)
!2786 = !DILocation(line: 390, column: 28, scope: !2747, inlinedAt: !2787)
!2787 = !DILocation(line: 390, column: 28, scope: !2717)
!2788 = !DILocalVariable(name: "self", scope: !2789, file: !1201, line: 390, type: !387, align: 8)
!2789 = !DILexicalBlockFile(scope: !2790, file: !1201, discriminator: 0)
!2790 = distinct !DISubprogram(name: "ok_or<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hc5378687dc6f5376E", scope: !387, file: !751, line: 1051, type: !2791, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !2773, retainedNodes: !2793)
!2791 = !DISubroutineType(types: !2792)
!2792 = !{!2765, !387, !178}
!2793 = !{!2788, !2794, !2795}
!2794 = !DILocalVariable(name: "err", scope: !2789, file: !1201, line: 390, type: !178, align: 8)
!2795 = !DILocalVariable(name: "v", scope: !2796, file: !1201, line: 390, type: !193, align: 8)
!2796 = !DILexicalBlockFile(scope: !2797, file: !1201, discriminator: 0)
!2797 = distinct !DILexicalBlock(scope: !2790, file: !751, line: 1056, column: 13)
!2798 = !DILocation(line: 390, column: 28, scope: !2789, inlinedAt: !2787)
!2799 = !DILocalVariable(name: "residual", scope: !2800, file: !1201, line: 390, type: !2207, align: 8)
!2800 = !DILexicalBlockFile(scope: !2801, file: !1201, discriminator: 0)
!2801 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h7bd4b28d70ccb6efE", scope: !764, file: !703, line: 2132, type: !2802, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !2808, retainedNodes: !2804)
!2802 = !DISubroutineType(types: !2803)
!2803 = !{!999, !2207, !353}
!2804 = !{!2799, !2805}
!2805 = !DILocalVariable(name: "e", scope: !2806, file: !1201, line: 390, type: !178, align: 8)
!2806 = !DILexicalBlockFile(scope: !2807, file: !1201, discriminator: 0)
!2807 = distinct !DILexicalBlock(scope: !2801, file: !703, line: 2134, column: 13)
!2808 = !{!584, !1024, !982}
!2809 = !DILocation(line: 390, column: 28, scope: !2800, inlinedAt: !2810)
!2810 = !DILocation(line: 390, column: 28, scope: !2728)
!2811 = !DILocalVariable(name: "self", scope: !2812, file: !1201, line: 400, type: !954, align: 8)
!2812 = !DILexicalBlockFile(scope: !2813, file: !1201, discriminator: 0)
!2813 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h3a37523835967bd8E", scope: !704, file: !703, line: 2117, type: !2814, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !962, retainedNodes: !2830)
!2814 = !DISubroutineType(types: !2815)
!2815 = !{!2816, !954}
!2816 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", scope: !708, file: !30, size: 192, align: 64, elements: !2817, templateParams: !140, identifier: "79c6e5125639b127cfa81db755c4cffd")
!2817 = !{!2818}
!2818 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2816, file: !30, size: 192, align: 64, elements: !2819, templateParams: !140, identifier: "bdca6637e968c25e4fe4c2dfef1c199f", discriminator: !2829)
!2819 = !{!2820, !2825}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !2818, file: !30, baseType: !2821, size: 192, align: 64, extraData: i64 0)
!2821 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !2816, file: !30, size: 192, align: 64, elements: !2822, templateParams: !2824, identifier: "15ba5a416f94883524aa415e9e484c18")
!2822 = !{!2823}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2821, file: !30, baseType: !936, size: 128, align: 64, offset: 64)
!2824 = !{!2313, !1849}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !2818, file: !30, baseType: !2826, size: 192, align: 64, extraData: i64 1)
!2826 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !2816, file: !30, size: 192, align: 64, elements: !2827, templateParams: !2824, identifier: "e100a24ff060842f7e06542fb969c57c")
!2827 = !{!2828}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2826, file: !30, baseType: !2224, size: 128, align: 64, offset: 64)
!2829 = !DIDerivedType(tag: DW_TAG_member, scope: !2816, file: !30, baseType: !34, size: 64, align: 64, flags: DIFlagArtificial)
!2830 = !{!2811, !2831, !2834}
!2831 = !DILocalVariable(name: "v", scope: !2832, file: !1201, line: 400, type: !936, align: 8)
!2832 = !DILexicalBlockFile(scope: !2833, file: !1201, discriminator: 0)
!2833 = distinct !DILexicalBlock(scope: !2813, file: !703, line: 2119, column: 13)
!2834 = !DILocalVariable(name: "e", scope: !2835, file: !1201, line: 400, type: !175, align: 8)
!2835 = !DILexicalBlockFile(scope: !2836, file: !1201, discriminator: 0)
!2836 = distinct !DILexicalBlock(scope: !2813, file: !703, line: 2120, column: 13)
!2837 = !DILocation(line: 400, column: 19, scope: !2812, inlinedAt: !2838)
!2838 = !DILocation(line: 400, column: 19, scope: !2736)
!2839 = !DILocalVariable(name: "residual", scope: !2840, file: !1201, line: 400, type: !2224, align: 8)
!2840 = !DILexicalBlockFile(scope: !2841, file: !1201, discriminator: 0)
!2841 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6502090624022d1eE", scope: !764, file: !703, line: 2132, type: !2842, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !2848, retainedNodes: !2844)
!2842 = !DISubroutineType(types: !2843)
!2843 = !{!999, !2224, !353}
!2844 = !{!2839, !2845}
!2845 = !DILocalVariable(name: "e", scope: !2846, file: !1201, line: 400, type: !175, align: 8)
!2846 = !DILexicalBlockFile(scope: !2847, file: !1201, discriminator: 0)
!2847 = distinct !DILexicalBlock(scope: !2841, file: !703, line: 2134, column: 13)
!2848 = !{!584, !963, !982}
!2849 = !DILocation(line: 400, column: 19, scope: !2840, inlinedAt: !2850)
!2850 = !DILocation(line: 400, column: 19, scope: !2740)
!2851 = !DILocation(line: 383, column: 12, scope: !2717)
!2852 = !DILocation(line: 386, column: 24, scope: !2717)
!2853 = !DILocation(line: 390, column: 62, scope: !2717)
!2854 = !DILocation(line: 390, column: 28, scope: !2796, inlinedAt: !2787)
!2855 = !DILocation(line: 390, column: 28, scope: !2781, inlinedAt: !2787)
!2856 = !DILocation(line: 390, column: 28, scope: !2784, inlinedAt: !2787)
!2857 = !DILocation(line: 390, column: 28, scope: !2730)
!2858 = !DILocation(line: 390, column: 13, scope: !2726)
!2859 = !DILocation(line: 394, column: 28, scope: !2726)
!2860 = !DILocalVariable(name: "v1", scope: !2861, file: !1201, line: 394, type: !193, align: 8)
!2861 = !DILexicalBlockFile(scope: !2862, file: !1201, discriminator: 0)
!2862 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17h8076aaaf78f6026eE", scope: !101, file: !232, line: 1278, type: !212, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !294, retainedNodes: !2863)
!2863 = !{!2860, !2864}
!2864 = !DILocalVariable(name: "v2", scope: !2861, file: !1201, line: 394, type: !193, align: 8)
!2865 = !DILocation(line: 394, column: 19, scope: !2861, inlinedAt: !2866)
!2866 = !DILocation(line: 394, column: 19, scope: !2726)
!2867 = !DILocation(line: 394, column: 42, scope: !2726)
!2868 = !DILocation(line: 394, column: 13, scope: !2732)
!2869 = !DILocation(line: 390, column: 79, scope: !2717)
!2870 = !DILocation(line: 390, column: 79, scope: !2728)
!2871 = !DILocation(line: 390, column: 28, scope: !2806, inlinedAt: !2810)
!2872 = !DILocalVariable(name: "kind", scope: !2873, file: !1201, line: 390, type: !178, align: 8)
!2873 = !DILexicalBlockFile(scope: !2874, file: !1201, discriminator: 0)
!2874 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h07c1f08a15bfc68eE", scope: !171, file: !170, line: 116, type: !173, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !2875)
!2875 = !{!2872}
!2876 = !DILocation(line: 390, column: 28, scope: !2873, inlinedAt: !2877)
!2877 = !DILocation(line: 2134, column: 27, scope: !2807, inlinedAt: !2810)
!2878 = !DILocation(line: 1, column: 1, scope: !2879)
!2879 = !DILexicalBlockFile(scope: !2717, file: !2042, discriminator: 0)
!2880 = !DILocation(line: 395, column: 52, scope: !2732)
!2881 = !DILocalVariable(name: "v2", scope: !2882, file: !1201, line: 395, type: !193, align: 8)
!2882 = !DILexicalBlockFile(scope: !2883, file: !1201, discriminator: 0)
!2883 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17h8076aaaf78f6026eE", scope: !101, file: !232, line: 1278, type: !212, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !294, retainedNodes: !2884)
!2884 = !{!2885, !2881}
!2885 = !DILocalVariable(name: "v1", scope: !2882, file: !1201, line: 395, type: !193, align: 8)
!2886 = !DILocation(line: 395, column: 19, scope: !2882, inlinedAt: !2887)
!2887 = !DILocation(line: 395, column: 19, scope: !2732)
!2888 = !DILocation(line: 395, column: 13, scope: !2734)
!2889 = !DILocation(line: 397, column: 26, scope: !2734)
!2890 = !DILocation(line: 397, column: 13, scope: !2736)
!2891 = !DILocation(line: 400, column: 43, scope: !2736)
!2892 = !DILocation(line: 400, column: 66, scope: !2736)
!2893 = !DILocation(line: 400, column: 19, scope: !2832, inlinedAt: !2838)
!2894 = !DILocation(line: 400, column: 19, scope: !2835, inlinedAt: !2838)
!2895 = !DILocation(line: 400, column: 19, scope: !2742)
!2896 = !DILocation(line: 400, column: 13, scope: !2738)
!2897 = !DILocation(line: 401, column: 9, scope: !2738)
!2898 = !DILocation(line: 400, column: 82, scope: !2736)
!2899 = !DILocation(line: 400, column: 82, scope: !2740)
!2900 = !DILocation(line: 400, column: 19, scope: !2846, inlinedAt: !2850)
!2901 = !DILocation(line: 1, column: 1, scope: !2902)
!2902 = !DILexicalBlockFile(scope: !2726, file: !2042, discriminator: 0)
!2903 = !DILocation(line: 403, column: 6, scope: !2717)
!2904 = !DILocation(line: 402, column: 9, scope: !2738)
!2905 = !DILocation(line: 386, column: 20, scope: !2717)
!2906 = distinct !DISubprogram(name: "set_ptr_and_cap<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h004e3e9f052de042E", scope: !471, file: !1201, line: 364, type: !2907, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !490, retainedNodes: !2909)
!2907 = !DISubroutineType(types: !2908)
!2908 = !{null, !2720, !936, !193}
!2909 = !{!2910, !2911, !2912}
!2910 = !DILocalVariable(name: "self", arg: 1, scope: !2906, file: !1201, line: 364, type: !2720)
!2911 = !DILocalVariable(name: "ptr", arg: 2, scope: !2906, file: !1201, line: 364, type: !936)
!2912 = !DILocalVariable(name: "cap", arg: 3, scope: !2906, file: !1201, line: 364, type: !193)
!2913 = !DILocation(line: 364, column: 24, scope: !2906)
!2914 = !DILocation(line: 364, column: 35, scope: !2906)
!2915 = !DILocation(line: 364, column: 55, scope: !2906)
!2916 = !DILocalVariable(name: "self", scope: !2917, file: !1201, line: 368, type: !477, align: 8)
!2917 = !DILexicalBlockFile(scope: !2918, file: !1201, discriminator: 0)
!2918 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he26f67c1134ddd48E", scope: !477, file: !121, line: 330, type: !1218, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !2919)
!2919 = !{!2916}
!2920 = !DILocation(line: 368, column: 51, scope: !2917, inlinedAt: !2921)
!2921 = !DILocation(line: 368, column: 51, scope: !2906)
!2922 = !DILocalVariable(name: "self", scope: !2923, file: !1201, line: 368, type: !936, align: 8)
!2923 = !DILexicalBlockFile(scope: !2924, file: !1201, discriminator: 0)
!2924 = distinct !DISubprogram(name: "cast<[u8], i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hef3c8300535eae05E", scope: !936, file: !121, line: 453, type: !2578, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !2581, retainedNodes: !2925)
!2925 = !{!2922}
!2926 = !DILocation(line: 368, column: 51, scope: !2923, inlinedAt: !2921)
!2927 = !DILocalVariable(name: "self", scope: !2928, file: !1201, line: 368, type: !936, align: 8)
!2928 = !DILexicalBlockFile(scope: !2929, file: !1201, discriminator: 0)
!2929 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h93d6b130f8e29ea1E", scope: !936, file: !121, line: 330, type: !2153, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !2930)
!2930 = !{!2927}
!2931 = !DILocation(line: 368, column: 51, scope: !2928, inlinedAt: !2932)
!2932 = !DILocation(line: 455, column: 41, scope: !2924, inlinedAt: !2921)
!2933 = !DILocalVariable(name: "ptr", scope: !2934, file: !1201, line: 368, type: !856, align: 8)
!2934 = !DILexicalBlockFile(scope: !2935, file: !1201, discriminator: 0)
!2935 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hbc8e1f1a0c0a9293E", scope: !477, file: !121, line: 196, type: !2593, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !2936)
!2936 = !{!2933}
!2937 = !DILocation(line: 368, column: 51, scope: !2934, inlinedAt: !2938)
!2938 = !DILocation(line: 455, column: 18, scope: !2924, inlinedAt: !2921)
!2939 = !DILocalVariable(name: "ptr", scope: !2940, file: !1201, line: 368, type: !856, align: 8)
!2940 = !DILexicalBlockFile(scope: !2941, file: !1201, discriminator: 0)
!2941 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h5bfb607a81103a61E", scope: !474, file: !148, line: 85, type: !2601, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !2942)
!2942 = !{!2939}
!2943 = !DILocation(line: 368, column: 29, scope: !2940, inlinedAt: !2944)
!2944 = !DILocation(line: 368, column: 29, scope: !2906)
!2945 = !DILocalVariable(name: "ptr", scope: !2946, file: !1201, line: 368, type: !856, align: 8)
!2946 = !DILexicalBlockFile(scope: !2947, file: !1201, discriminator: 0)
!2947 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hbc8e1f1a0c0a9293E", scope: !477, file: !121, line: 196, type: !2593, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !2948)
!2948 = !{!2945}
!2949 = !DILocation(line: 368, column: 29, scope: !2946, inlinedAt: !2950)
!2950 = !DILocation(line: 87, column: 36, scope: !2941, inlinedAt: !2944)
!2951 = !DILocation(line: 368, column: 9, scope: !2906)
!2952 = !DILocation(line: 369, column: 9, scope: !2906)
!2953 = !DILocation(line: 370, column: 6, scope: !2906)
!2954 = distinct !DISubprogram(name: "new_in<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h5fddc5eaa03b3122E", scope: !471, file: !1201, line: 121, type: !2955, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !490, retainedNodes: !2957)
!2955 = !DISubroutineType(types: !2956)
!2956 = !{!471, !488}
!2957 = !{!2958}
!2958 = !DILocalVariable(name: "alloc", arg: 1, scope: !2954, file: !1201, line: 121, type: !488)
!2959 = !DILocation(line: 121, column: 25, scope: !2954)
!2960 = !DILocalVariable(name: "pointer", scope: !2961, file: !1201, line: 123, type: !477, align: 8)
!2961 = !DILexicalBlockFile(scope: !2962, file: !1201, discriminator: 0)
!2962 = distinct !DISubprogram(name: "from<i32>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h39e5422cf70a63baE", scope: !2663, file: !148, line: 190, type: !2963, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !2965)
!2963 = !DISubroutineType(types: !2964)
!2964 = !{!474, !477}
!2965 = !{!2960}
!2966 = !DILocation(line: 123, column: 21, scope: !2961, inlinedAt: !2967)
!2967 = !DILocation(line: 73, column: 9, scope: !2968, inlinedAt: !2971)
!2968 = distinct !DISubprogram(name: "dangling<i32>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17ha451f059deb08e69E", scope: !474, file: !148, line: 72, type: !2969, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !140)
!2969 = !DISubroutineType(types: !2970)
!2970 = !{!474}
!2971 = !DILocation(line: 123, column: 21, scope: !2954)
!2972 = !DILocation(line: 123, column: 21, scope: !2973, inlinedAt: !2975)
!2973 = !DILexicalBlockFile(scope: !2974, file: !1201, discriminator: 0)
!2974 = distinct !DISubprogram(name: "align_of<i32>", linkageName: "_ZN4core3mem8align_of17hd5d54591e558afb2E", scope: !32, file: !285, line: 464, type: !784, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !140)
!2975 = !DILocation(line: 95, column: 52, scope: !2976, inlinedAt: !2983)
!2976 = distinct !DISubprogram(name: "dangling<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17h7e3b2bdd81a4bc7bE", scope: !477, file: !121, line: 90, type: !2977, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !2979)
!2977 = !DISubroutineType(types: !2978)
!2978 = !{!477}
!2979 = !{!2980}
!2980 = !DILocalVariable(name: "ptr", scope: !2981, file: !1201, line: 123, type: !856, align: 8)
!2981 = !DILexicalBlockFile(scope: !2982, file: !1201, discriminator: 0)
!2982 = distinct !DILexicalBlock(scope: !2976, file: !121, line: 95, column: 13)
!2983 = !DILocation(line: 73, column: 20, scope: !2968, inlinedAt: !2971)
!2984 = !DILocalVariable(name: "addr", scope: !2985, file: !1201, line: 123, type: !193, align: 8)
!2985 = !DILexicalBlockFile(scope: !2986, file: !1201, discriminator: 0)
!2986 = distinct !DISubprogram(name: "invalid_mut<i32>", linkageName: "_ZN4core3ptr11invalid_mut17hd34b4184e7995aa0E", scope: !124, file: !301, line: 569, type: !2987, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !2989)
!2987 = !DISubroutineType(types: !2988)
!2988 = !{!856, !193}
!2989 = !{!2984}
!2990 = !DILocation(line: 123, column: 21, scope: !2985, inlinedAt: !2991)
!2991 = !DILocation(line: 95, column: 23, scope: !2976, inlinedAt: !2983)
!2992 = !DILocation(line: 123, column: 21, scope: !2981, inlinedAt: !2983)
!2993 = !DILocalVariable(name: "ptr", scope: !2994, file: !1201, line: 123, type: !856, align: 8)
!2994 = !DILexicalBlockFile(scope: !2995, file: !1201, discriminator: 0)
!2995 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hbc8e1f1a0c0a9293E", scope: !477, file: !121, line: 196, type: !2593, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !2996)
!2996 = !{!2993}
!2997 = !DILocation(line: 123, column: 21, scope: !2994, inlinedAt: !2998)
!2998 = !DILocation(line: 96, column: 13, scope: !2982, inlinedAt: !2983)
!2999 = !DILocation(line: 123, column: 9, scope: !2954)
!3000 = !DILocation(line: 124, column: 6, scope: !2954)
!3001 = !DILocation(line: 124, column: 5, scope: !2954)
!3002 = !DILocation(line: 121, column: 5, scope: !2954)
!3003 = distinct !DISubprogram(name: "reserve<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hc4ee03f4f9f62be6E", scope: !471, file: !1201, line: 274, type: !3004, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !490, retainedNodes: !3006)
!3004 = !DISubroutineType(types: !3005)
!3005 = !{null, !2720, !193, !193}
!3006 = !{!3007, !3008, !3009}
!3007 = !DILocalVariable(name: "self", arg: 1, scope: !3003, file: !1201, line: 274, type: !2720)
!3008 = !DILocalVariable(name: "len", arg: 2, scope: !3003, file: !1201, line: 274, type: !193)
!3009 = !DILocalVariable(name: "additional", arg: 3, scope: !3003, file: !1201, line: 274, type: !193)
!3010 = !DILocation(line: 274, column: 20, scope: !3003)
!3011 = !DILocation(line: 274, column: 31, scope: !3003)
!3012 = !DILocation(line: 274, column: 43, scope: !3003)
!3013 = !DILocation(line: 288, column: 12, scope: !3003)
!3014 = !DILocation(line: 291, column: 6, scope: !3003)
!3015 = !DILocation(line: 289, column: 13, scope: !3003)
!3016 = !DILocation(line: 288, column: 9, scope: !3003)
!3017 = distinct !DISubprogram(name: "do_reserve_and_handle<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17ha2776089d27e1a62E", scope: !3018, file: !1201, line: 280, type: !3004, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !490, retainedNodes: !3020)
!3018 = !DINamespace(name: "reserve", scope: !3019)
!3019 = !DINamespace(name: "{impl#1}", scope: !114)
!3020 = !{!3021, !3022, !3023}
!3021 = !DILocalVariable(name: "slf", arg: 1, scope: !3017, file: !1201, line: 281, type: !2720)
!3022 = !DILocalVariable(name: "len", arg: 2, scope: !3017, file: !1201, line: 282, type: !193)
!3023 = !DILocalVariable(name: "additional", arg: 3, scope: !3017, file: !1201, line: 283, type: !193)
!3024 = !DILocation(line: 281, column: 13, scope: !3017)
!3025 = !DILocation(line: 282, column: 13, scope: !3017)
!3026 = !DILocation(line: 283, column: 13, scope: !3017)
!3027 = !DILocation(line: 285, column: 28, scope: !3017)
!3028 = !DILocation(line: 285, column: 13, scope: !3017)
!3029 = !DILocation(line: 286, column: 10, scope: !3017)
!3030 = distinct !DISubprogram(name: "from_elem<i32, alloc::alloc::Global>", linkageName: "_ZN62_$LT$T$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17hb933320d2d611d8fE", scope: !3032, file: !3031, line: 23, type: !3034, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !490, retainedNodes: !3036)
!3031 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/spec_from_elem.rs", directory: "", checksumkind: CSK_MD5, checksum: "0a540c7458367f313cf051b1c5d2f659")
!3032 = !DINamespace(name: "{impl#1}", scope: !3033)
!3033 = !DINamespace(name: "spec_from_elem", scope: !468)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{!467, !481, !193, !488}
!3036 = !{!3037, !3038, !3039, !3040}
!3037 = !DILocalVariable(name: "elem", arg: 1, scope: !3030, file: !3031, line: 23, type: !481)
!3038 = !DILocalVariable(name: "n", arg: 2, scope: !3030, file: !3031, line: 23, type: !193)
!3039 = !DILocalVariable(name: "alloc", arg: 3, scope: !3030, file: !3031, line: 23, type: !488)
!3040 = !DILocalVariable(name: "v", scope: !3041, file: !3031, line: 27, type: !467, align: 8)
!3041 = distinct !DILexicalBlock(scope: !3030, file: !3031, line: 27, column: 9)
!3042 = !DILocation(line: 23, column: 40, scope: !3030)
!3043 = !DILocation(line: 23, column: 49, scope: !3030)
!3044 = !DILocation(line: 23, column: 59, scope: !3030)
!3045 = !DILocalVariable(name: "alloc", scope: !3046, file: !3031, line: 25, type: !488, align: 1)
!3046 = !DILexicalBlockFile(scope: !3047, file: !3031, discriminator: 0)
!3047 = distinct !DISubprogram(name: "with_capacity_zeroed_in<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$23with_capacity_zeroed_in17he6d5afa8d94f5699E", scope: !471, file: !1201, line: 138, type: !3048, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !490, retainedNodes: !3050)
!3048 = !DISubroutineType(types: !3049)
!3049 = !{!471, !193, !488}
!3050 = !{!3051, !3045}
!3051 = !DILocalVariable(name: "capacity", scope: !3046, file: !3031, line: 25, type: !193, align: 8)
!3052 = !DILocation(line: 25, column: 31, scope: !3046, inlinedAt: !3053)
!3053 = !DILocation(line: 25, column: 31, scope: !3030)
!3054 = !DILocation(line: 27, column: 13, scope: !3041)
!3055 = !DILocalVariable(name: "alloc", scope: !3056, file: !3031, line: 27, type: !488, align: 1)
!3056 = !DILexicalBlockFile(scope: !3057, file: !3031, discriminator: 0)
!3057 = distinct !DISubprogram(name: "with_capacity_in<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h9401795b73ac6290E", scope: !467, file: !1172, line: 640, type: !3058, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !490, retainedNodes: !3060)
!3058 = !DISubroutineType(types: !3059)
!3059 = !{!467, !193, !488}
!3060 = !{!3061, !3055}
!3061 = !DILocalVariable(name: "capacity", scope: !3056, file: !3031, line: 27, type: !193, align: 8)
!3062 = !DILocation(line: 27, column: 21, scope: !3056, inlinedAt: !3063)
!3063 = !DILocation(line: 27, column: 21, scope: !3030)
!3064 = !DILocalVariable(name: "alloc", scope: !3065, file: !3031, line: 27, type: !488, align: 1)
!3065 = !DILexicalBlockFile(scope: !3066, file: !3031, discriminator: 0)
!3066 = distinct !DISubprogram(name: "with_capacity_in<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17hcf7feae2825defe1E", scope: !471, file: !1201, line: 130, type: !3048, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !490, retainedNodes: !3067)
!3067 = !{!3068, !3064}
!3068 = !DILocalVariable(name: "capacity", scope: !3065, file: !3031, line: 27, type: !193, align: 8)
!3069 = !DILocation(line: 27, column: 21, scope: !3065, inlinedAt: !3070)
!3070 = !DILocation(line: 641, column: 20, scope: !3057, inlinedAt: !3063)
!3071 = !DILocation(line: 24, column: 9, scope: !3030)
!3072 = !DILocation(line: 24, column: 12, scope: !3030)
!3073 = !DILocation(line: 30, column: 5, scope: !3030)
!3074 = !DILocation(line: 27, column: 43, scope: !3030)
!3075 = !DILocation(line: 27, column: 46, scope: !3030)
!3076 = !DILocation(line: 25, column: 63, scope: !3030)
!3077 = !DILocation(line: 25, column: 66, scope: !3030)
!3078 = !DILocation(line: 25, column: 20, scope: !3030)
!3079 = !DILocation(line: 30, column: 6, scope: !3030)
!3080 = !DILocation(line: 28, column: 40, scope: !3041)
!3081 = !DILocation(line: 28, column: 26, scope: !3041)
!3082 = !DILocation(line: 28, column: 9, scope: !3041)
!3083 = !DILocation(line: 29, column: 9, scope: !3041)
!3084 = !DILocation(line: 23, column: 5, scope: !3030)
!3085 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17ha7516eb11e3641feE", scope: !3086, file: !1409, line: 246, type: !3087, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !3089)
!3086 = !DINamespace(name: "{impl#1}", scope: !489)
!3087 = !DISubroutineType(types: !3088)
!3088 = !{null, !1412, !127, !188}
!3089 = !{!3090, !3091, !3092}
!3090 = !DILocalVariable(name: "self", arg: 1, scope: !3085, file: !1409, line: 246, type: !1412)
!3091 = !DILocalVariable(name: "ptr", arg: 2, scope: !3085, file: !1409, line: 246, type: !127)
!3092 = !DILocalVariable(name: "layout", arg: 3, scope: !3085, file: !1409, line: 246, type: !188)
!3093 = !DILocation(line: 246, column: 26, scope: !3085)
!3094 = !DILocation(line: 246, column: 33, scope: !3085)
!3095 = !DILocation(line: 246, column: 51, scope: !3085)
!3096 = !DILocalVariable(name: "layout", scope: !3097, file: !1409, line: 250, type: !188, align: 8)
!3097 = distinct !DISubprogram(name: "dealloc", linkageName: "_ZN5alloc5alloc7dealloc17h4282f78b48c871e1E", scope: !489, file: !1409, line: 112, type: !3098, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !3100)
!3098 = !DISubroutineType(types: !3099)
!3099 = !{null, !151, !188}
!3100 = !{!3101, !3096}
!3101 = !DILocalVariable(name: "ptr", scope: !3097, file: !1409, line: 250, type: !151, align: 8)
!3102 = !DILocation(line: 250, column: 22, scope: !3097, inlinedAt: !3103)
!3103 = !DILocation(line: 250, column: 22, scope: !3085)
!3104 = !DILocalVariable(name: "self", scope: !3105, file: !1409, line: 250, type: !628, align: 8)
!3105 = !DILexicalBlockFile(scope: !3106, file: !1409, discriminator: 0)
!3106 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h4c609daa585f4c69E", scope: !628, file: !627, line: 82, type: !632, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !3107)
!3107 = !{!3104}
!3108 = !DILocation(line: 250, column: 22, scope: !3105, inlinedAt: !3109)
!3109 = !DILocation(line: 131, column: 9, scope: !3110, inlinedAt: !3114)
!3110 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17hcc6c9c31d4ab34e4E", scope: !188, file: !598, line: 130, type: !1541, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !3111)
!3111 = !{!3112}
!3112 = !DILocalVariable(name: "self", scope: !3113, file: !1409, line: 250, type: !973, align: 8)
!3113 = !DILexicalBlockFile(scope: !3110, file: !1409, discriminator: 0)
!3114 = !DILocation(line: 113, column: 49, scope: !3097, inlinedAt: !3103)
!3115 = !DILocalVariable(name: "self", scope: !3116, file: !1409, line: 250, type: !195, align: 8)
!3116 = !DILexicalBlockFile(scope: !3117, file: !1409, discriminator: 0)
!3117 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h466a6ecaf9634463E", scope: !195, file: !640, line: 39, type: !641, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !3118)
!3118 = !{!3115}
!3119 = !DILocation(line: 250, column: 22, scope: !3116, inlinedAt: !3109)
!3120 = !DILocation(line: 247, column: 12, scope: !3085)
!3121 = !DILocalVariable(name: "self", scope: !3122, file: !1409, line: 247, type: !973, align: 8)
!3122 = !DILexicalBlockFile(scope: !3123, file: !1409, discriminator: 0)
!3123 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hcecf33dca24f5f5bE", scope: !188, file: !598, line: 120, type: !1541, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !3124)
!3124 = !{!3121}
!3125 = !DILocation(line: 247, column: 12, scope: !3122, inlinedAt: !3120)
!3126 = !DILocation(line: 247, column: 9, scope: !3085)
!3127 = !DILocation(line: 250, column: 30, scope: !3085)
!3128 = !DILocalVariable(name: "self", scope: !3129, file: !1409, line: 250, type: !127, align: 8)
!3129 = !DILexicalBlockFile(scope: !3130, file: !1409, discriminator: 0)
!3130 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6e433918dc590b4bE", scope: !127, file: !121, line: 330, type: !156, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !131, retainedNodes: !3131)
!3131 = !{!3128}
!3132 = !DILocation(line: 250, column: 30, scope: !3129, inlinedAt: !3127)
!3133 = !DILocation(line: 250, column: 44, scope: !3085)
!3134 = !DILocalVariable(name: "self", scope: !3135, file: !1409, line: 250, type: !973, align: 8)
!3135 = !DILexicalBlockFile(scope: !3136, file: !1409, discriminator: 0)
!3136 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hcecf33dca24f5f5bE", scope: !188, file: !598, line: 120, type: !1541, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !3137)
!3137 = !{!3134}
!3138 = !DILocation(line: 250, column: 22, scope: !3135, inlinedAt: !3139)
!3139 = !DILocation(line: 113, column: 34, scope: !3097, inlinedAt: !3103)
!3140 = !DILocation(line: 250, column: 22, scope: !3113, inlinedAt: !3114)
!3141 = !DILocalVariable(name: "n", scope: !3142, file: !1409, line: 250, type: !193, align: 8)
!3142 = !DILexicalBlockFile(scope: !3143, file: !1409, discriminator: 0)
!3143 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hb7b27ac1e98aa935E", scope: !628, file: !627, line: 56, type: !649, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !3144)
!3144 = !{!3141, !3145}
!3145 = !DILocalVariable(name: "runtime", scope: !3146, file: !1409, line: 250, type: !656, align: 8)
!3146 = !DILexicalBlockFile(scope: !3147, file: !1409, discriminator: 0)
!3147 = distinct !DILexicalBlock(scope: !3143, file: !655, line: 2336, column: 13)
!3148 = !DILocation(line: 250, column: 22, scope: !3142, inlinedAt: !3149)
!3149 = !DILocation(line: 41, column: 18, scope: !3117, inlinedAt: !3109)
!3150 = !DILocation(line: 252, column: 6, scope: !3085)
!3151 = distinct !DISubprogram(name: "allocate_zeroed", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h1c4b5b40c04fef75E", scope: !3086, file: !1409, line: 241, type: !3152, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !3154)
!3152 = !DISubroutineType(types: !3153)
!3153 = !{!928, !1412, !188}
!3154 = !{!3155, !3156}
!3155 = !DILocalVariable(name: "self", arg: 1, scope: !3151, file: !1409, line: 241, type: !1412)
!3156 = !DILocalVariable(name: "layout", arg: 2, scope: !3151, file: !1409, line: 241, type: !188)
!3157 = !DILocation(line: 241, column: 24, scope: !3151)
!3158 = !DILocation(line: 241, column: 31, scope: !3151)
!3159 = !DILocation(line: 242, column: 9, scope: !3151)
!3160 = !DILocation(line: 243, column: 6, scope: !3151)
!3161 = distinct !DISubprogram(name: "grow", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h9e85290fb7de99d4E", scope: !3086, file: !1409, line: 255, type: !3162, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !3164)
!3162 = !DISubroutineType(types: !3163)
!3163 = !{!928, !1412, !127, !188, !188}
!3164 = !{!3165, !3166, !3167, !3168}
!3165 = !DILocalVariable(name: "self", arg: 1, scope: !3161, file: !1409, line: 256, type: !1412)
!3166 = !DILocalVariable(name: "ptr", arg: 2, scope: !3161, file: !1409, line: 257, type: !127)
!3167 = !DILocalVariable(name: "old_layout", arg: 3, scope: !3161, file: !1409, line: 258, type: !188)
!3168 = !DILocalVariable(name: "new_layout", arg: 4, scope: !3161, file: !1409, line: 259, type: !188)
!3169 = !DILocation(line: 256, column: 9, scope: !3161)
!3170 = !DILocation(line: 257, column: 9, scope: !3161)
!3171 = !DILocation(line: 258, column: 9, scope: !3161)
!3172 = !DILocation(line: 259, column: 9, scope: !3161)
!3173 = !DILocation(line: 262, column: 18, scope: !3161)
!3174 = !DILocation(line: 263, column: 6, scope: !3161)
!3175 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h0fb66dc17ec3f176E", scope: !3086, file: !1409, line: 236, type: !3152, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !3176)
!3176 = !{!3177, !3178}
!3177 = !DILocalVariable(name: "self", arg: 1, scope: !3175, file: !1409, line: 236, type: !1412)
!3178 = !DILocalVariable(name: "layout", arg: 2, scope: !3175, file: !1409, line: 236, type: !188)
!3179 = !DILocation(line: 236, column: 17, scope: !3175)
!3180 = !DILocation(line: 236, column: 24, scope: !3175)
!3181 = !DILocation(line: 237, column: 9, scope: !3175)
!3182 = !DILocation(line: 238, column: 6, scope: !3175)
!3183 = distinct !DISubprogram(name: "drop<i32, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h41f40f774e80318dE", scope: !3184, file: !1172, line: 2915, type: !3185, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !490, retainedNodes: !3187)
!3184 = !DINamespace(name: "{impl#28}", scope: !468)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{null, !1175}
!3187 = !{!3188}
!3188 = !DILocalVariable(name: "self", arg: 1, scope: !3183, file: !1172, line: 2915, type: !1175)
!3189 = !DILocation(line: 2915, column: 13, scope: !3183)
!3190 = !DILocation(line: 2920, column: 62, scope: !3183)
!3191 = !DILocalVariable(name: "data", scope: !3192, file: !1172, line: 2920, type: !856, align: 8)
!3192 = !DILexicalBlockFile(scope: !3193, file: !1172, discriminator: 0)
!3193 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<i32>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17hb5841adfafe75304E", scope: !124, file: !301, line: 727, type: !3194, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !3200)
!3194 = !DISubroutineType(types: !3195)
!3195 = !{!3196, !856, !193}
!3196 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [i32]", file: !30, size: 128, align: 64, elements: !3197, templateParams: !140, identifier: "882e8de4e8ad4bf739e64bffb4a9228")
!3197 = !{!3198, !3199}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3196, file: !30, baseType: !860, size: 64, align: 64)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3196, file: !30, baseType: !193, size: 64, align: 64, offset: 64)
!3200 = !{!3191, !3201}
!3201 = !DILocalVariable(name: "len", scope: !3192, file: !1172, line: 2920, type: !193, align: 8)
!3202 = !DILocation(line: 2920, column: 32, scope: !3192, inlinedAt: !3203)
!3203 = !DILocation(line: 2920, column: 32, scope: !3183)
!3204 = !DILocation(line: 2920, column: 81, scope: !3183)
!3205 = !DILocalVariable(name: "self", scope: !3206, file: !1172, line: 2920, type: !856, align: 8)
!3206 = !DILexicalBlockFile(scope: !3207, file: !1172, discriminator: 0)
!3207 = distinct !DISubprogram(name: "cast<i32, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hd29ea498d946dedeE", scope: !558, file: !557, line: 45, type: !3208, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !3211, retainedNodes: !3210)
!3208 = !DISubroutineType(types: !3209)
!3209 = !{!547, !856}
!3210 = !{!3205}
!3211 = !{!483, !1703}
!3212 = !DILocation(line: 2920, column: 32, scope: !3206, inlinedAt: !3213)
!3213 = !DILocation(line: 728, column: 24, scope: !3193, inlinedAt: !3203)
!3214 = !DILocalVariable(name: "data_address", scope: !3215, file: !1172, line: 2920, type: !547, align: 8)
!3215 = !DILexicalBlockFile(scope: !3216, file: !1172, discriminator: 0)
!3216 = distinct !DISubprogram(name: "from_raw_parts_mut<[i32]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h543613e6f7c5c19aE", scope: !544, file: !543, line: 127, type: !3217, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !3219)
!3217 = !DISubroutineType(types: !3218)
!3218 = !{!3196, !547, !193}
!3219 = !{!3214, !3220}
!3220 = !DILocalVariable(name: "metadata", scope: !3215, file: !1172, line: 2920, type: !193, align: 8)
!3221 = !DILocation(line: 2920, column: 32, scope: !3215, inlinedAt: !3222)
!3222 = !DILocation(line: 728, column: 5, scope: !3193, inlinedAt: !3203)
!3223 = !DILocation(line: 2920, column: 13, scope: !3183)
!3224 = !DILocation(line: 2923, column: 6, scope: !3183)
!3225 = distinct !DISubprogram(name: "drop<i32, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h22055de03b59e758E", scope: !3226, file: !1201, line: 477, type: !3227, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !490, retainedNodes: !3229)
!3226 = !DINamespace(name: "{impl#3}", scope: !114)
!3227 = !DISubroutineType(types: !3228)
!3228 = !{null, !2720}
!3229 = !{!3230, !3231, !3233}
!3230 = !DILocalVariable(name: "self", arg: 1, scope: !3225, file: !1201, line: 477, type: !2720)
!3231 = !DILocalVariable(name: "ptr", scope: !3232, file: !1201, line: 478, type: !127, align: 8)
!3232 = distinct !DILexicalBlock(scope: !3225, file: !1201, line: 478, column: 60)
!3233 = !DILocalVariable(name: "layout", scope: !3232, file: !1201, line: 478, type: !188, align: 8)
!3234 = !DILocation(line: 477, column: 13, scope: !3225)
!3235 = !DILocation(line: 478, column: 38, scope: !3232)
!3236 = !DILocation(line: 478, column: 16, scope: !3232)
!3237 = !DILocation(line: 478, column: 22, scope: !3232)
!3238 = !DILocation(line: 478, column: 27, scope: !3232)
!3239 = !DILocation(line: 479, column: 22, scope: !3232)
!3240 = !DILocation(line: 481, column: 6, scope: !3225)
!3241 = !DILocation(line: 478, column: 9, scope: !3225)
!3242 = distinct !DISubprogram(name: "drop", linkageName: "_ZN83_$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17h519becda5e36f13fE", scope: !3243, file: !1335, line: 25, type: !3244, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !3246)
!3243 = !DINamespace(name: "{impl#1}", scope: !512)
!3244 = !DISubroutineType(types: !3245)
!3245 = !{null, !1371}
!3246 = !{!3247}
!3247 = !DILocalVariable(name: "self", arg: 1, scope: !3242, file: !1335, line: 25, type: !1371)
!3248 = !DILocation(line: 25, column: 13, scope: !3242)
!3249 = !DILocation(line: 26, column: 21, scope: !3242)
!3250 = !DILocation(line: 26, column: 9, scope: !3242)
!3251 = !DILocation(line: 27, column: 6, scope: !3242)
!3252 = distinct !DISubprogram(name: "last<i32>", linkageName: "_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4last17h17905b74ccda79b9E", scope: !3253, file: !1172, line: 2380, type: !3254, scopeLine: 2380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !3256)
!3253 = !DINamespace(name: "{impl#4}", scope: !468)
!3254 = !DISubroutineType(types: !3255)
!3255 = !{!481, !1244}
!3256 = !{!3257}
!3257 = !DILocalVariable(name: "self", arg: 1, scope: !3252, file: !1172, line: 2380, type: !1244)
!3258 = !DILocation(line: 2380, column: 13, scope: !3252)
!3259 = !DILocation(line: 2382, column: 6, scope: !3252)
!3260 = distinct !DISubprogram(name: "next<i32>", linkageName: "_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4next17hb147526a62d0f643E", scope: !3253, file: !1172, line: 2377, type: !3261, scopeLine: 2377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !3264)
!3261 = !DISubroutineType(types: !3262)
!3262 = !{!481, !3263}
!3263 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::ExtendElement<i32>", baseType: !1244, size: 64, align: 64, dwarfAddressSpace: 0)
!3264 = !{!3265}
!3265 = !DILocalVariable(name: "self", arg: 1, scope: !3260, file: !1172, line: 2377, type: !3263)
!3266 = !DILocation(line: 2377, column: 13, scope: !3260)
!3267 = !DILocation(line: 2378, column: 9, scope: !3260)
!3268 = !DILocation(line: 2379, column: 6, scope: !3260)
!3269 = distinct !DISubprogram(name: "spec_next<usize>", linkageName: "_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h663205a6379ad5f3E", scope: !3270, file: !208, line: 620, type: !1346, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !294, retainedNodes: !3271)
!3270 = !DINamespace(name: "{impl#2}", scope: !210)
!3271 = !{!3272, !3273}
!3272 = !DILocalVariable(name: "self", arg: 1, scope: !3269, file: !208, line: 620, type: !1348)
!3273 = !DILocalVariable(name: "n", scope: !3274, file: !208, line: 623, type: !193, align: 8)
!3274 = distinct !DILexicalBlock(scope: !3269, file: !208, line: 623, column: 13)
!3275 = !DILocation(line: 620, column: 18, scope: !3269)
!3276 = !DILocation(line: 621, column: 12, scope: !3269)
!3277 = !DILocation(line: 621, column: 25, scope: !3269)
!3278 = !DILocation(line: 626, column: 13, scope: !3269)
!3279 = !DILocation(line: 621, column: 9, scope: !3269)
!3280 = !DILocation(line: 623, column: 54, scope: !3269)
!3281 = !DILocation(line: 623, column: 30, scope: !3269)
!3282 = !DILocation(line: 623, column: 17, scope: !3274)
!3283 = !DILocation(line: 624, column: 31, scope: !3274)
!3284 = !DILocation(line: 624, column: 18, scope: !3274)
!3285 = !DILocation(line: 624, column: 13, scope: !3274)
!3286 = !DILocation(line: 628, column: 6, scope: !3269)
!3287 = distinct !DISubprogram(name: "rust_event_queues_init", scope: !3289, file: !3288, line: 22, type: !3290, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !3299)
!3288 = !DIFile(filename: "src/packed_arrays.rs", directory: "/home/calvin/git/c2rust/tests/arrays", checksumkind: CSK_MD5, checksum: "9d33ea6f0beeb65c90f5d9e522e00ba6")
!3289 = !DINamespace(name: "packed_arrays", scope: !3)
!3290 = !DISubroutineType(types: !3291)
!3291 = !{null, !3292}
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut array_tests::packed_arrays::event_queue_t", baseType: !3293, size: 64, align: 64, dwarfAddressSpace: 0)
!3293 = !DICompositeType(tag: DW_TAG_structure_type, name: "event_queue_t", scope: !3289, file: !30, size: 32, align: 32, elements: !3294, templateParams: !140, identifier: "5835c7eeeea2ccd0346cde38bced0578")
!3294 = !{!3295}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3293, file: !30, baseType: !3296, size: 32, align: 32)
!3296 = !DICompositeType(tag: DW_TAG_structure_type, name: "event_queue_t_Inner", scope: !3289, file: !30, size: 32, align: 32, elements: !3297, templateParams: !140, identifier: "a050a3357ef81046d1e860935cd5ba05")
!3297 = !{!3298}
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "waiter", scope: !3296, file: !30, baseType: !481, size: 32, align: 32)
!3299 = !{!3300}
!3300 = !DILocalVariable(name: "queues", arg: 1, scope: !3287, file: !3288, line: 22, type: !3292)
!3301 = !DILocation(line: 22, column: 49, scope: !3287)
!3302 = !DILocalVariable(name: "self", arg: 1, scope: !3303, file: !557, line: 465, type: !3292)
!3303 = distinct !DISubprogram(name: "offset<array_tests::packed_arrays::event_queue_t>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h4c259715311b4ab9E", scope: !558, file: !557, line: 465, type: !3304, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !3308, retainedNodes: !3306)
!3304 = !DISubroutineType(types: !3305)
!3305 = !{!3292, !3292, !1326}
!3306 = !{!3302, !3307}
!3307 = !DILocalVariable(name: "count", arg: 2, scope: !3303, file: !557, line: 465, type: !1326)
!3308 = !{!3309}
!3309 = !DITemplateTypeParameter(name: "T", type: !3293)
!3310 = !DILocation(line: 465, column: 32, scope: !3303, inlinedAt: !3311)
!3311 = distinct !DILocation(line: 23, column: 7, scope: !3287)
!3312 = !DILocation(line: 465, column: 38, scope: !3303, inlinedAt: !3311)
!3313 = !DILocation(line: 472, column: 18, scope: !3303, inlinedAt: !3311)
!3314 = !DILocation(line: 23, column: 7, scope: !3287)
!3315 = !DILocation(line: 23, column: 5, scope: !3287)
!3316 = !DILocation(line: 24, column: 2, scope: !3287)
!3317 = distinct !DISubprogram(name: "rust_entry", scope: !13, file: !14, line: 23, type: !3318, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !3320)
!3318 = !DISubroutineType(types: !3319)
!3319 = !{null, !6, !856}
!3320 = !{!3321, !3322, !3323, !3329, !3334, !3341, !3343, !3346, !3348, !3350, !3352, !3354, !3359, !3361, !3363, !3365, !3370, !3372, !3374, !3376, !3378, !3380, !3382, !3384, !3387, !3389, !3391, !3393, !3395, !3397, !3399, !3401, !3403, !3408, !3410, !3412, !3414, !3416, !3418, !3420, !3422, !3425, !3427, !3429, !3432, !3434, !3436, !3438, !3440, !3442, !3444, !3446, !3448, !3450, !3452, !3454, !3456, !3458, !3460, !3462, !3464, !3466, !3468, !3470, !3472, !3474}
!3321 = !DILocalVariable(name: "buffer_size", arg: 1, scope: !3317, file: !14, line: 24, type: !6)
!3322 = !DILocalVariable(name: "buffer", arg: 2, scope: !3317, file: !14, line: 25, type: !856)
!3323 = !DILocalVariable(name: "arr", scope: !3324, file: !14, line: 27, type: !3325, align: 4)
!3324 = distinct !DILexicalBlock(scope: !3317, file: !14, line: 27, column: 5)
!3325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3326, size: 32, align: 32, elements: !3327)
!3326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 32, align: 32, elements: !3327)
!3327 = !{!3328}
!3328 = !DISubrange(count: 1, lowerBound: 0)
!3329 = !DILocalVariable(name: "arr2", scope: !3330, file: !14, line: 30, type: !3331, align: 4)
!3330 = distinct !DILexicalBlock(scope: !3324, file: !14, line: 30, column: 5)
!3331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 512, align: 32, elements: !3332)
!3332 = !{!3333}
!3333 = !DISubrange(count: 16, lowerBound: 0)
!3334 = !DILocalVariable(name: "arr3", scope: !3335, file: !14, line: 32, type: !3336, align: 8)
!3335 = distinct !DILexicalBlock(scope: !3330, file: !14, line: 32, column: 5)
!3336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3337, size: 128, align: 64, elements: !3327)
!3337 = !DICompositeType(tag: DW_TAG_structure_type, name: "C2RustUnnamed", scope: !13, file: !30, size: 128, align: 64, elements: !3338, templateParams: !140, identifier: "1255310648e7347f7202e40b90bf7e16")
!3338 = !{!3339, !3340}
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3337, file: !30, baseType: !21, size: 64, align: 64)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3337, file: !30, baseType: !481, size: 32, align: 32, offset: 64)
!3341 = !DILocalVariable(name: "i", scope: !3342, file: !14, line: 37, type: !481, align: 4)
!3342 = distinct !DILexicalBlock(scope: !3335, file: !14, line: 37, column: 5)
!3343 = !DILocalVariable(name: "abc", scope: !3344, file: !14, line: 38, type: !3345, align: 1)
!3344 = distinct !DILexicalBlock(scope: !3342, file: !14, line: 38, column: 5)
!3345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 32, align: 8, elements: !7)
!3346 = !DILocalVariable(name: "fresh0", scope: !3347, file: !14, line: 42, type: !481, align: 4)
!3347 = distinct !DILexicalBlock(scope: !3344, file: !14, line: 42, column: 5)
!3348 = !DILocalVariable(name: "fresh1", scope: !3349, file: !14, line: 46, type: !481, align: 4)
!3349 = distinct !DILexicalBlock(scope: !3347, file: !14, line: 46, column: 5)
!3350 = !DILocalVariable(name: "fresh2", scope: !3351, file: !14, line: 50, type: !481, align: 4)
!3351 = distinct !DILexicalBlock(scope: !3349, file: !14, line: 50, column: 5)
!3352 = !DILocalVariable(name: "fresh3", scope: !3353, file: !14, line: 54, type: !481, align: 4)
!3353 = distinct !DILexicalBlock(scope: !3351, file: !14, line: 54, column: 5)
!3354 = !DILocalVariable(name: "def", scope: !3355, file: !14, line: 58, type: !3356, align: 1)
!3355 = distinct !DILexicalBlock(scope: !3353, file: !14, line: 58, column: 5)
!3356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 24, align: 8, elements: !3357)
!3357 = !{!3358}
!3358 = !DISubrange(count: 3, lowerBound: 0)
!3359 = !DILocalVariable(name: "fresh4", scope: !3360, file: !14, line: 63, type: !481, align: 4)
!3360 = distinct !DILexicalBlock(scope: !3355, file: !14, line: 63, column: 5)
!3361 = !DILocalVariable(name: "fresh5", scope: !3362, file: !14, line: 67, type: !481, align: 4)
!3362 = distinct !DILexicalBlock(scope: !3360, file: !14, line: 67, column: 5)
!3363 = !DILocalVariable(name: "fresh6", scope: !3364, file: !14, line: 71, type: !481, align: 4)
!3364 = distinct !DILexicalBlock(scope: !3362, file: !14, line: 71, column: 5)
!3365 = !DILocalVariable(name: "part", scope: !3366, file: !14, line: 75, type: !3367, align: 1)
!3366 = distinct !DILexicalBlock(scope: !3364, file: !14, line: 75, column: 5)
!3367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 16, align: 8, elements: !3368)
!3368 = !{!3369}
!3369 = !DISubrange(count: 2, lowerBound: 0)
!3370 = !DILocalVariable(name: "fresh7", scope: !3371, file: !14, line: 76, type: !481, align: 4)
!3371 = distinct !DILexicalBlock(scope: !3366, file: !14, line: 76, column: 5)
!3372 = !DILocalVariable(name: "fresh8", scope: !3373, file: !14, line: 80, type: !481, align: 4)
!3373 = distinct !DILexicalBlock(scope: !3371, file: !14, line: 80, column: 5)
!3374 = !DILocalVariable(name: "abcptr", scope: !3375, file: !14, line: 84, type: !21, align: 8)
!3375 = distinct !DILexicalBlock(scope: !3373, file: !14, line: 84, column: 5)
!3376 = !DILocalVariable(name: "fresh9", scope: !3377, file: !14, line: 86, type: !481, align: 4)
!3377 = distinct !DILexicalBlock(scope: !3375, file: !14, line: 86, column: 5)
!3378 = !DILocalVariable(name: "fresh10", scope: !3379, file: !14, line: 90, type: !481, align: 4)
!3379 = distinct !DILexicalBlock(scope: !3377, file: !14, line: 90, column: 5)
!3380 = !DILocalVariable(name: "fresh11", scope: !3381, file: !14, line: 94, type: !481, align: 4)
!3381 = distinct !DILexicalBlock(scope: !3379, file: !14, line: 94, column: 5)
!3382 = !DILocalVariable(name: "fresh12", scope: !3383, file: !14, line: 98, type: !481, align: 4)
!3383 = distinct !DILexicalBlock(scope: !3381, file: !14, line: 98, column: 5)
!3384 = !DILocalVariable(name: "init", scope: !3385, file: !14, line: 102, type: !3386, align: 1)
!3385 = distinct !DILexicalBlock(scope: !3383, file: !14, line: 102, column: 5)
!3386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 40, align: 8, elements: !839)
!3387 = !DILocalVariable(name: "fresh13", scope: !3388, file: !14, line: 106, type: !481, align: 4)
!3388 = distinct !DILexicalBlock(scope: !3385, file: !14, line: 106, column: 5)
!3389 = !DILocalVariable(name: "fresh14", scope: !3390, file: !14, line: 110, type: !481, align: 4)
!3390 = distinct !DILexicalBlock(scope: !3388, file: !14, line: 110, column: 5)
!3391 = !DILocalVariable(name: "fresh15", scope: !3392, file: !14, line: 114, type: !481, align: 4)
!3392 = distinct !DILexicalBlock(scope: !3390, file: !14, line: 114, column: 5)
!3393 = !DILocalVariable(name: "fresh16", scope: !3394, file: !14, line: 118, type: !481, align: 4)
!3394 = distinct !DILexicalBlock(scope: !3392, file: !14, line: 118, column: 5)
!3395 = !DILocalVariable(name: "too_long", scope: !3396, file: !14, line: 122, type: !3356, align: 1)
!3396 = distinct !DILexicalBlock(scope: !3394, file: !14, line: 122, column: 5)
!3397 = !DILocalVariable(name: "fresh17", scope: !3398, file: !14, line: 126, type: !481, align: 4)
!3398 = distinct !DILexicalBlock(scope: !3396, file: !14, line: 126, column: 5)
!3399 = !DILocalVariable(name: "fresh18", scope: !3400, file: !14, line: 130, type: !481, align: 4)
!3400 = distinct !DILexicalBlock(scope: !3398, file: !14, line: 130, column: 5)
!3401 = !DILocalVariable(name: "fresh19", scope: !3402, file: !14, line: 134, type: !481, align: 4)
!3402 = distinct !DILexicalBlock(scope: !3400, file: !14, line: 134, column: 5)
!3403 = !DILocalVariable(name: "too_short", scope: !3404, file: !14, line: 138, type: !3405, align: 1)
!3404 = distinct !DILexicalBlock(scope: !3402, file: !14, line: 138, column: 5)
!3405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 160, align: 8, elements: !3406)
!3406 = !{!3407}
!3407 = !DISubrange(count: 20, lowerBound: 0)
!3408 = !DILocalVariable(name: "fresh20", scope: !3409, file: !14, line: 142, type: !481, align: 4)
!3409 = distinct !DILexicalBlock(scope: !3404, file: !14, line: 142, column: 5)
!3410 = !DILocalVariable(name: "fresh21", scope: !3411, file: !14, line: 146, type: !481, align: 4)
!3411 = distinct !DILexicalBlock(scope: !3409, file: !14, line: 146, column: 5)
!3412 = !DILocalVariable(name: "fresh22", scope: !3413, file: !14, line: 150, type: !481, align: 4)
!3413 = distinct !DILexicalBlock(scope: !3411, file: !14, line: 150, column: 5)
!3414 = !DILocalVariable(name: "fresh23", scope: !3415, file: !14, line: 154, type: !481, align: 4)
!3415 = distinct !DILexicalBlock(scope: !3413, file: !14, line: 154, column: 5)
!3416 = !DILocalVariable(name: "fresh24", scope: !3417, file: !14, line: 158, type: !481, align: 4)
!3417 = distinct !DILexicalBlock(scope: !3415, file: !14, line: 158, column: 5)
!3418 = !DILocalVariable(name: "fresh25", scope: !3419, file: !14, line: 162, type: !481, align: 4)
!3419 = distinct !DILexicalBlock(scope: !3417, file: !14, line: 162, column: 5)
!3420 = !DILocalVariable(name: "fresh26", scope: !3421, file: !14, line: 166, type: !481, align: 4)
!3421 = distinct !DILexicalBlock(scope: !3419, file: !14, line: 166, column: 5)
!3422 = !DILocalVariable(name: "wide1", scope: !3423, file: !14, line: 170, type: !3424, align: 4)
!3423 = distinct !DILexicalBlock(scope: !3421, file: !14, line: 170, column: 5)
!3424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 64, align: 32, elements: !3368)
!3425 = !DILocalVariable(name: "fresh27", scope: !3426, file: !14, line: 174, type: !481, align: 4)
!3426 = distinct !DILexicalBlock(scope: !3423, file: !14, line: 174, column: 5)
!3427 = !DILocalVariable(name: "fresh28", scope: !3428, file: !14, line: 177, type: !481, align: 4)
!3428 = distinct !DILexicalBlock(scope: !3426, file: !14, line: 177, column: 5)
!3429 = !DILocalVariable(name: "wide2", scope: !3430, file: !14, line: 180, type: !3431, align: 4)
!3430 = distinct !DILexicalBlock(scope: !3428, file: !14, line: 180, column: 5)
!3431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 96, align: 32, elements: !3357)
!3432 = !DILocalVariable(name: "fresh29", scope: !3433, file: !14, line: 184, type: !481, align: 4)
!3433 = distinct !DILexicalBlock(scope: !3430, file: !14, line: 184, column: 5)
!3434 = !DILocalVariable(name: "fresh30", scope: !3435, file: !14, line: 187, type: !481, align: 4)
!3435 = distinct !DILexicalBlock(scope: !3433, file: !14, line: 187, column: 5)
!3436 = !DILocalVariable(name: "fresh31", scope: !3437, file: !14, line: 190, type: !481, align: 4)
!3437 = distinct !DILexicalBlock(scope: !3435, file: !14, line: 190, column: 5)
!3438 = !DILocalVariable(name: "wide3", scope: !3439, file: !14, line: 193, type: !3326, align: 4)
!3439 = distinct !DILexicalBlock(scope: !3437, file: !14, line: 193, column: 5)
!3440 = !DILocalVariable(name: "fresh32", scope: !3441, file: !14, line: 197, type: !481, align: 4)
!3441 = distinct !DILexicalBlock(scope: !3439, file: !14, line: 197, column: 5)
!3442 = !DILocalVariable(name: "fresh33", scope: !3443, file: !14, line: 200, type: !481, align: 4)
!3443 = distinct !DILexicalBlock(scope: !3441, file: !14, line: 200, column: 5)
!3444 = !DILocalVariable(name: "fresh34", scope: !3445, file: !14, line: 204, type: !481, align: 4)
!3445 = distinct !DILexicalBlock(scope: !3443, file: !14, line: 204, column: 5)
!3446 = !DILocalVariable(name: "fresh35", scope: !3447, file: !14, line: 208, type: !481, align: 4)
!3447 = distinct !DILexicalBlock(scope: !3445, file: !14, line: 208, column: 5)
!3448 = !DILocalVariable(name: "fresh36", scope: !3449, file: !14, line: 212, type: !481, align: 4)
!3449 = distinct !DILexicalBlock(scope: !3447, file: !14, line: 212, column: 5)
!3450 = !DILocalVariable(name: "fresh37", scope: !3451, file: !14, line: 216, type: !481, align: 4)
!3451 = distinct !DILexicalBlock(scope: !3449, file: !14, line: 216, column: 5)
!3452 = !DILocalVariable(name: "fresh38", scope: !3453, file: !14, line: 220, type: !481, align: 4)
!3453 = distinct !DILexicalBlock(scope: !3451, file: !14, line: 220, column: 5)
!3454 = !DILocalVariable(name: "fresh39", scope: !3455, file: !14, line: 224, type: !481, align: 4)
!3455 = distinct !DILexicalBlock(scope: !3453, file: !14, line: 224, column: 5)
!3456 = !DILocalVariable(name: "fresh40", scope: !3457, file: !14, line: 228, type: !481, align: 4)
!3457 = distinct !DILexicalBlock(scope: !3455, file: !14, line: 228, column: 5)
!3458 = !DILocalVariable(name: "fresh41", scope: !3459, file: !14, line: 232, type: !481, align: 4)
!3459 = distinct !DILexicalBlock(scope: !3457, file: !14, line: 232, column: 5)
!3460 = !DILocalVariable(name: "fresh42", scope: !3461, file: !14, line: 236, type: !481, align: 4)
!3461 = distinct !DILexicalBlock(scope: !3459, file: !14, line: 236, column: 5)
!3462 = !DILocalVariable(name: "fresh43", scope: !3463, file: !14, line: 240, type: !481, align: 4)
!3463 = distinct !DILexicalBlock(scope: !3461, file: !14, line: 240, column: 5)
!3464 = !DILocalVariable(name: "fresh44", scope: !3465, file: !14, line: 244, type: !481, align: 4)
!3465 = distinct !DILexicalBlock(scope: !3463, file: !14, line: 244, column: 5)
!3466 = !DILocalVariable(name: "fresh45", scope: !3467, file: !14, line: 248, type: !481, align: 4)
!3467 = distinct !DILexicalBlock(scope: !3465, file: !14, line: 248, column: 5)
!3468 = !DILocalVariable(name: "fresh46", scope: !3469, file: !14, line: 252, type: !481, align: 4)
!3469 = distinct !DILexicalBlock(scope: !3467, file: !14, line: 252, column: 5)
!3470 = !DILocalVariable(name: "fresh47", scope: !3471, file: !14, line: 256, type: !481, align: 4)
!3471 = distinct !DILexicalBlock(scope: !3469, file: !14, line: 256, column: 5)
!3472 = !DILocalVariable(name: "fresh48", scope: !3473, file: !14, line: 260, type: !481, align: 4)
!3473 = distinct !DILexicalBlock(scope: !3471, file: !14, line: 260, column: 5)
!3474 = !DILocalVariable(name: "past_end", scope: !3475, file: !14, line: 264, type: !21, align: 8)
!3475 = distinct !DILexicalBlock(scope: !3473, file: !14, line: 264, column: 5)
!3476 = !DILocation(line: 24, column: 5, scope: !3317)
!3477 = !DILocation(line: 25, column: 5, scope: !3317)
!3478 = !DILocation(line: 27, column: 9, scope: !3324)
!3479 = !DILocation(line: 30, column: 9, scope: !3330)
!3480 = !DILocation(line: 32, column: 9, scope: !3335)
!3481 = !DILocation(line: 37, column: 9, scope: !3342)
!3482 = !DILocation(line: 38, column: 9, scope: !3344)
!3483 = !DILocation(line: 58, column: 9, scope: !3355)
!3484 = !DILocation(line: 75, column: 9, scope: !3366)
!3485 = !DILocation(line: 102, column: 9, scope: !3385)
!3486 = !DILocation(line: 122, column: 9, scope: !3396)
!3487 = !DILocation(line: 138, column: 9, scope: !3404)
!3488 = !DILocation(line: 170, column: 9, scope: !3423)
!3489 = !DILocation(line: 180, column: 9, scope: !3430)
!3490 = !DILocation(line: 193, column: 9, scope: !3439)
!3491 = !DILocation(line: 264, column: 9, scope: !3475)
!3492 = !DILocation(line: 27, column: 47, scope: !3317)
!3493 = !DILocation(line: 27, column: 46, scope: !3317)
!3494 = !DILocation(line: 28, column: 5, scope: !3324)
!3495 = !DILocation(line: 30, column: 43, scope: !3324)
!3496 = !DILocation(line: 31, column: 5, scope: !3330)
!3497 = !DILocation(line: 32, column: 41, scope: !3330)
!3498 = !DILocation(line: 32, column: 40, scope: !3330)
!3499 = !DILocation(line: 36, column: 5, scope: !3335)
!3500 = !DILocation(line: 37, column: 34, scope: !3335)
!3501 = !DILocation(line: 38, column: 43, scope: !3342)
!3502 = !{i64 1}
!3503 = !DILocation(line: 38, column: 42, scope: !3342)
!3504 = !DILocation(line: 42, column: 18, scope: !3344)
!3505 = !DILocation(line: 42, column: 9, scope: !3347)
!3506 = !DILocation(line: 43, column: 9, scope: !3347)
!3507 = !DILocation(line: 43, column: 5, scope: !3347)
!3508 = !DILocation(line: 44, column: 39, scope: !3347)
!3509 = !DILocation(line: 44, column: 20, scope: !3347)
!3510 = !DILocalVariable(name: "self", arg: 1, scope: !3511, file: !557, line: 465, type: !856)
!3511 = distinct !DISubprogram(name: "offset<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h86849c257a4818b4E", scope: !558, file: !557, line: 465, type: !1324, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !3512)
!3512 = !{!3510, !3513}
!3513 = !DILocalVariable(name: "count", arg: 2, scope: !3511, file: !557, line: 465, type: !1326)
!3514 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3515)
!3515 = distinct !DILocation(line: 44, column: 6, scope: !3347)
!3516 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3515)
!3517 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3515)
!3518 = !DILocation(line: 44, column: 6, scope: !3347)
!3519 = !DILocation(line: 44, column: 5, scope: !3347)
!3520 = !DILocation(line: 46, column: 18, scope: !3347)
!3521 = !DILocation(line: 46, column: 9, scope: !3349)
!3522 = !DILocation(line: 47, column: 9, scope: !3349)
!3523 = !DILocation(line: 47, column: 5, scope: !3349)
!3524 = !DILocation(line: 48, column: 39, scope: !3349)
!3525 = !DILocation(line: 48, column: 20, scope: !3349)
!3526 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3527)
!3527 = distinct !DILocation(line: 48, column: 6, scope: !3349)
!3528 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3527)
!3529 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3527)
!3530 = !DILocation(line: 48, column: 6, scope: !3349)
!3531 = !DILocation(line: 48, column: 5, scope: !3349)
!3532 = !DILocation(line: 50, column: 18, scope: !3349)
!3533 = !DILocation(line: 50, column: 9, scope: !3351)
!3534 = !DILocation(line: 51, column: 9, scope: !3351)
!3535 = !DILocation(line: 51, column: 5, scope: !3351)
!3536 = !DILocation(line: 52, column: 39, scope: !3351)
!3537 = !DILocation(line: 52, column: 20, scope: !3351)
!3538 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3539)
!3539 = distinct !DILocation(line: 52, column: 6, scope: !3351)
!3540 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3539)
!3541 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3539)
!3542 = !DILocation(line: 52, column: 6, scope: !3351)
!3543 = !DILocation(line: 52, column: 5, scope: !3351)
!3544 = !DILocation(line: 54, column: 18, scope: !3351)
!3545 = !DILocation(line: 54, column: 9, scope: !3353)
!3546 = !DILocation(line: 55, column: 9, scope: !3353)
!3547 = !DILocation(line: 55, column: 5, scope: !3353)
!3548 = !DILocation(line: 56, column: 39, scope: !3353)
!3549 = !DILocation(line: 56, column: 20, scope: !3353)
!3550 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3551)
!3551 = distinct !DILocation(line: 56, column: 6, scope: !3353)
!3552 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3551)
!3553 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3551)
!3554 = !DILocation(line: 56, column: 6, scope: !3353)
!3555 = !DILocation(line: 56, column: 5, scope: !3353)
!3556 = !DILocation(line: 58, column: 42, scope: !3353)
!3557 = !DILocation(line: 63, column: 18, scope: !3355)
!3558 = !DILocation(line: 63, column: 9, scope: !3360)
!3559 = !DILocation(line: 64, column: 9, scope: !3360)
!3560 = !DILocation(line: 64, column: 5, scope: !3360)
!3561 = !DILocation(line: 65, column: 39, scope: !3360)
!3562 = !DILocation(line: 65, column: 20, scope: !3360)
!3563 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3564)
!3564 = distinct !DILocation(line: 65, column: 6, scope: !3360)
!3565 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3564)
!3566 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3564)
!3567 = !DILocation(line: 65, column: 6, scope: !3360)
!3568 = !DILocation(line: 65, column: 5, scope: !3360)
!3569 = !DILocation(line: 67, column: 18, scope: !3360)
!3570 = !DILocation(line: 67, column: 9, scope: !3362)
!3571 = !DILocation(line: 68, column: 9, scope: !3362)
!3572 = !DILocation(line: 68, column: 5, scope: !3362)
!3573 = !DILocation(line: 69, column: 39, scope: !3362)
!3574 = !DILocation(line: 69, column: 20, scope: !3362)
!3575 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3576)
!3576 = distinct !DILocation(line: 69, column: 6, scope: !3362)
!3577 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3576)
!3578 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3576)
!3579 = !DILocation(line: 69, column: 6, scope: !3362)
!3580 = !DILocation(line: 69, column: 5, scope: !3362)
!3581 = !DILocation(line: 71, column: 18, scope: !3362)
!3582 = !DILocation(line: 71, column: 9, scope: !3364)
!3583 = !DILocation(line: 72, column: 9, scope: !3364)
!3584 = !DILocation(line: 72, column: 5, scope: !3364)
!3585 = !DILocation(line: 73, column: 39, scope: !3364)
!3586 = !DILocation(line: 73, column: 20, scope: !3364)
!3587 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3588)
!3588 = distinct !DILocation(line: 73, column: 6, scope: !3364)
!3589 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3588)
!3590 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3588)
!3591 = !DILocation(line: 73, column: 6, scope: !3364)
!3592 = !DILocation(line: 73, column: 5, scope: !3364)
!3593 = !DILocation(line: 75, column: 43, scope: !3364)
!3594 = !DILocation(line: 76, column: 18, scope: !3366)
!3595 = !DILocation(line: 76, column: 9, scope: !3371)
!3596 = !DILocation(line: 77, column: 9, scope: !3371)
!3597 = !DILocation(line: 77, column: 5, scope: !3371)
!3598 = !DILocation(line: 78, column: 39, scope: !3371)
!3599 = !DILocation(line: 78, column: 20, scope: !3371)
!3600 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3601)
!3601 = distinct !DILocation(line: 78, column: 6, scope: !3371)
!3602 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3601)
!3603 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3601)
!3604 = !DILocation(line: 78, column: 6, scope: !3371)
!3605 = !DILocation(line: 78, column: 5, scope: !3371)
!3606 = !DILocation(line: 80, column: 18, scope: !3371)
!3607 = !DILocation(line: 80, column: 9, scope: !3373)
!3608 = !DILocation(line: 81, column: 9, scope: !3373)
!3609 = !DILocation(line: 81, column: 5, scope: !3373)
!3610 = !DILocation(line: 82, column: 39, scope: !3373)
!3611 = !DILocation(line: 82, column: 20, scope: !3373)
!3612 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3613)
!3613 = distinct !DILocation(line: 82, column: 6, scope: !3373)
!3614 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3613)
!3615 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3613)
!3616 = !DILocation(line: 82, column: 6, scope: !3373)
!3617 = !DILocation(line: 82, column: 5, scope: !3373)
!3618 = !DILocation(line: 84, column: 45, scope: !3373)
!3619 = !DILocation(line: 84, column: 9, scope: !3375)
!3620 = !DILocation(line: 86, column: 18, scope: !3375)
!3621 = !DILocation(line: 86, column: 9, scope: !3377)
!3622 = !DILocation(line: 87, column: 9, scope: !3377)
!3623 = !DILocation(line: 87, column: 5, scope: !3377)
!3624 = !DILocalVariable(name: "self", arg: 1, scope: !3625, file: !557, line: 465, type: !21)
!3625 = distinct !DISubprogram(name: "offset<i8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h83327a6374c38381E", scope: !558, file: !557, line: 465, type: !3626, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !894, retainedNodes: !3628)
!3626 = !DISubroutineType(types: !3627)
!3627 = !{!21, !21, !1326}
!3628 = !{!3624, !3629}
!3629 = !DILocalVariable(name: "count", arg: 2, scope: !3625, file: !557, line: 465, type: !1326)
!3630 = !DILocation(line: 465, column: 32, scope: !3625, inlinedAt: !3631)
!3631 = distinct !DILocation(line: 88, column: 40, scope: !3377)
!3632 = !DILocation(line: 465, column: 38, scope: !3625, inlinedAt: !3631)
!3633 = !DILocation(line: 472, column: 18, scope: !3625, inlinedAt: !3631)
!3634 = !DILocation(line: 88, column: 40, scope: !3377)
!3635 = !DILocation(line: 88, column: 39, scope: !3377)
!3636 = !DILocation(line: 88, column: 20, scope: !3377)
!3637 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3638)
!3638 = distinct !DILocation(line: 88, column: 6, scope: !3377)
!3639 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3638)
!3640 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3638)
!3641 = !DILocation(line: 88, column: 6, scope: !3377)
!3642 = !DILocation(line: 88, column: 5, scope: !3377)
!3643 = !DILocation(line: 90, column: 19, scope: !3377)
!3644 = !DILocation(line: 90, column: 9, scope: !3379)
!3645 = !DILocation(line: 91, column: 9, scope: !3379)
!3646 = !DILocation(line: 91, column: 5, scope: !3379)
!3647 = !DILocation(line: 465, column: 32, scope: !3625, inlinedAt: !3648)
!3648 = distinct !DILocation(line: 92, column: 41, scope: !3379)
!3649 = !DILocation(line: 465, column: 38, scope: !3625, inlinedAt: !3648)
!3650 = !DILocation(line: 472, column: 18, scope: !3625, inlinedAt: !3648)
!3651 = !DILocation(line: 92, column: 41, scope: !3379)
!3652 = !DILocation(line: 92, column: 40, scope: !3379)
!3653 = !DILocation(line: 92, column: 20, scope: !3379)
!3654 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3655)
!3655 = distinct !DILocation(line: 92, column: 6, scope: !3379)
!3656 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3655)
!3657 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3655)
!3658 = !DILocation(line: 92, column: 6, scope: !3379)
!3659 = !DILocation(line: 92, column: 5, scope: !3379)
!3660 = !DILocation(line: 94, column: 19, scope: !3379)
!3661 = !DILocation(line: 94, column: 9, scope: !3381)
!3662 = !DILocation(line: 95, column: 9, scope: !3381)
!3663 = !DILocation(line: 95, column: 5, scope: !3381)
!3664 = !DILocation(line: 465, column: 32, scope: !3625, inlinedAt: !3665)
!3665 = distinct !DILocation(line: 96, column: 41, scope: !3381)
!3666 = !DILocation(line: 465, column: 38, scope: !3625, inlinedAt: !3665)
!3667 = !DILocation(line: 472, column: 18, scope: !3625, inlinedAt: !3665)
!3668 = !DILocation(line: 96, column: 41, scope: !3381)
!3669 = !DILocation(line: 96, column: 40, scope: !3381)
!3670 = !DILocation(line: 96, column: 20, scope: !3381)
!3671 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3672)
!3672 = distinct !DILocation(line: 96, column: 6, scope: !3381)
!3673 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3672)
!3674 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3672)
!3675 = !DILocation(line: 96, column: 6, scope: !3381)
!3676 = !DILocation(line: 96, column: 5, scope: !3381)
!3677 = !DILocation(line: 98, column: 19, scope: !3381)
!3678 = !DILocation(line: 98, column: 9, scope: !3383)
!3679 = !DILocation(line: 99, column: 9, scope: !3383)
!3680 = !DILocation(line: 99, column: 5, scope: !3383)
!3681 = !DILocation(line: 465, column: 32, scope: !3625, inlinedAt: !3682)
!3682 = distinct !DILocation(line: 100, column: 41, scope: !3383)
!3683 = !DILocation(line: 465, column: 38, scope: !3625, inlinedAt: !3682)
!3684 = !DILocation(line: 472, column: 18, scope: !3625, inlinedAt: !3682)
!3685 = !DILocation(line: 100, column: 41, scope: !3383)
!3686 = !DILocation(line: 100, column: 40, scope: !3383)
!3687 = !DILocation(line: 100, column: 20, scope: !3383)
!3688 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3689)
!3689 = distinct !DILocation(line: 100, column: 6, scope: !3383)
!3690 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3689)
!3691 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3689)
!3692 = !DILocation(line: 100, column: 6, scope: !3383)
!3693 = !DILocation(line: 100, column: 5, scope: !3383)
!3694 = !DILocation(line: 102, column: 44, scope: !3383)
!3695 = !DILocation(line: 102, column: 43, scope: !3383)
!3696 = !DILocation(line: 106, column: 19, scope: !3385)
!3697 = !DILocation(line: 106, column: 9, scope: !3388)
!3698 = !DILocation(line: 107, column: 9, scope: !3388)
!3699 = !DILocation(line: 107, column: 5, scope: !3388)
!3700 = !DILocation(line: 108, column: 40, scope: !3388)
!3701 = !DILocation(line: 108, column: 20, scope: !3388)
!3702 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3703)
!3703 = distinct !DILocation(line: 108, column: 6, scope: !3388)
!3704 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3703)
!3705 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3703)
!3706 = !DILocation(line: 108, column: 6, scope: !3388)
!3707 = !DILocation(line: 108, column: 5, scope: !3388)
!3708 = !DILocation(line: 110, column: 19, scope: !3388)
!3709 = !DILocation(line: 110, column: 9, scope: !3390)
!3710 = !DILocation(line: 111, column: 9, scope: !3390)
!3711 = !DILocation(line: 111, column: 5, scope: !3390)
!3712 = !DILocation(line: 112, column: 40, scope: !3390)
!3713 = !DILocation(line: 112, column: 20, scope: !3390)
!3714 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3715)
!3715 = distinct !DILocation(line: 112, column: 6, scope: !3390)
!3716 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3715)
!3717 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3715)
!3718 = !DILocation(line: 112, column: 6, scope: !3390)
!3719 = !DILocation(line: 112, column: 5, scope: !3390)
!3720 = !DILocation(line: 114, column: 19, scope: !3390)
!3721 = !DILocation(line: 114, column: 9, scope: !3392)
!3722 = !DILocation(line: 115, column: 9, scope: !3392)
!3723 = !DILocation(line: 115, column: 5, scope: !3392)
!3724 = !DILocation(line: 116, column: 40, scope: !3392)
!3725 = !DILocation(line: 116, column: 20, scope: !3392)
!3726 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3727)
!3727 = distinct !DILocation(line: 116, column: 6, scope: !3392)
!3728 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3727)
!3729 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3727)
!3730 = !DILocation(line: 116, column: 6, scope: !3392)
!3731 = !DILocation(line: 116, column: 5, scope: !3392)
!3732 = !DILocation(line: 118, column: 19, scope: !3392)
!3733 = !DILocation(line: 118, column: 9, scope: !3394)
!3734 = !DILocation(line: 119, column: 9, scope: !3394)
!3735 = !DILocation(line: 119, column: 5, scope: !3394)
!3736 = !DILocation(line: 120, column: 40, scope: !3394)
!3737 = !DILocation(line: 120, column: 20, scope: !3394)
!3738 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3739)
!3739 = distinct !DILocation(line: 120, column: 6, scope: !3394)
!3740 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3739)
!3741 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3739)
!3742 = !DILocation(line: 120, column: 6, scope: !3394)
!3743 = !DILocation(line: 120, column: 5, scope: !3394)
!3744 = !DILocation(line: 122, column: 48, scope: !3394)
!3745 = !DILocation(line: 122, column: 47, scope: !3394)
!3746 = !DILocation(line: 126, column: 19, scope: !3396)
!3747 = !DILocation(line: 126, column: 9, scope: !3398)
!3748 = !DILocation(line: 127, column: 9, scope: !3398)
!3749 = !DILocation(line: 127, column: 5, scope: !3398)
!3750 = !DILocation(line: 128, column: 40, scope: !3398)
!3751 = !DILocation(line: 128, column: 20, scope: !3398)
!3752 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3753)
!3753 = distinct !DILocation(line: 128, column: 6, scope: !3398)
!3754 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3753)
!3755 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3753)
!3756 = !DILocation(line: 128, column: 6, scope: !3398)
!3757 = !DILocation(line: 128, column: 5, scope: !3398)
!3758 = !DILocation(line: 130, column: 19, scope: !3398)
!3759 = !DILocation(line: 130, column: 9, scope: !3400)
!3760 = !DILocation(line: 131, column: 9, scope: !3400)
!3761 = !DILocation(line: 131, column: 5, scope: !3400)
!3762 = !DILocation(line: 132, column: 40, scope: !3400)
!3763 = !DILocation(line: 132, column: 20, scope: !3400)
!3764 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3765)
!3765 = distinct !DILocation(line: 132, column: 6, scope: !3400)
!3766 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3765)
!3767 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3765)
!3768 = !DILocation(line: 132, column: 6, scope: !3400)
!3769 = !DILocation(line: 132, column: 5, scope: !3400)
!3770 = !DILocation(line: 134, column: 19, scope: !3400)
!3771 = !DILocation(line: 134, column: 9, scope: !3402)
!3772 = !DILocation(line: 135, column: 9, scope: !3402)
!3773 = !DILocation(line: 135, column: 5, scope: !3402)
!3774 = !DILocation(line: 136, column: 40, scope: !3402)
!3775 = !DILocation(line: 136, column: 20, scope: !3402)
!3776 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3777)
!3777 = distinct !DILocation(line: 136, column: 6, scope: !3402)
!3778 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3777)
!3779 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3777)
!3780 = !DILocation(line: 136, column: 6, scope: !3402)
!3781 = !DILocation(line: 136, column: 5, scope: !3402)
!3782 = !DILocation(line: 138, column: 50, scope: !3402)
!3783 = !DILocation(line: 138, column: 49, scope: !3402)
!3784 = !DILocation(line: 142, column: 19, scope: !3404)
!3785 = !DILocation(line: 142, column: 9, scope: !3409)
!3786 = !DILocation(line: 143, column: 9, scope: !3409)
!3787 = !DILocation(line: 143, column: 5, scope: !3409)
!3788 = !DILocation(line: 144, column: 40, scope: !3409)
!3789 = !DILocation(line: 144, column: 20, scope: !3409)
!3790 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3791)
!3791 = distinct !DILocation(line: 144, column: 6, scope: !3409)
!3792 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3791)
!3793 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3791)
!3794 = !DILocation(line: 144, column: 6, scope: !3409)
!3795 = !DILocation(line: 144, column: 5, scope: !3409)
!3796 = !DILocation(line: 146, column: 19, scope: !3409)
!3797 = !DILocation(line: 146, column: 9, scope: !3411)
!3798 = !DILocation(line: 147, column: 9, scope: !3411)
!3799 = !DILocation(line: 147, column: 5, scope: !3411)
!3800 = !DILocation(line: 148, column: 40, scope: !3411)
!3801 = !DILocation(line: 148, column: 20, scope: !3411)
!3802 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3803)
!3803 = distinct !DILocation(line: 148, column: 6, scope: !3411)
!3804 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3803)
!3805 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3803)
!3806 = !DILocation(line: 148, column: 6, scope: !3411)
!3807 = !DILocation(line: 148, column: 5, scope: !3411)
!3808 = !DILocation(line: 150, column: 19, scope: !3411)
!3809 = !DILocation(line: 150, column: 9, scope: !3413)
!3810 = !DILocation(line: 151, column: 9, scope: !3413)
!3811 = !DILocation(line: 151, column: 5, scope: !3413)
!3812 = !DILocation(line: 152, column: 40, scope: !3413)
!3813 = !DILocation(line: 152, column: 20, scope: !3413)
!3814 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3815)
!3815 = distinct !DILocation(line: 152, column: 6, scope: !3413)
!3816 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3815)
!3817 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3815)
!3818 = !DILocation(line: 152, column: 6, scope: !3413)
!3819 = !DILocation(line: 152, column: 5, scope: !3413)
!3820 = !DILocation(line: 154, column: 19, scope: !3413)
!3821 = !DILocation(line: 154, column: 9, scope: !3415)
!3822 = !DILocation(line: 155, column: 9, scope: !3415)
!3823 = !DILocation(line: 155, column: 5, scope: !3415)
!3824 = !DILocation(line: 156, column: 40, scope: !3415)
!3825 = !DILocation(line: 156, column: 20, scope: !3415)
!3826 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3827)
!3827 = distinct !DILocation(line: 156, column: 6, scope: !3415)
!3828 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3827)
!3829 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3827)
!3830 = !DILocation(line: 156, column: 6, scope: !3415)
!3831 = !DILocation(line: 156, column: 5, scope: !3415)
!3832 = !DILocation(line: 158, column: 19, scope: !3415)
!3833 = !DILocation(line: 158, column: 9, scope: !3417)
!3834 = !DILocation(line: 159, column: 9, scope: !3417)
!3835 = !DILocation(line: 159, column: 5, scope: !3417)
!3836 = !DILocation(line: 160, column: 40, scope: !3417)
!3837 = !DILocation(line: 160, column: 20, scope: !3417)
!3838 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3839)
!3839 = distinct !DILocation(line: 160, column: 6, scope: !3417)
!3840 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3839)
!3841 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3839)
!3842 = !DILocation(line: 160, column: 6, scope: !3417)
!3843 = !DILocation(line: 160, column: 5, scope: !3417)
!3844 = !DILocation(line: 162, column: 19, scope: !3417)
!3845 = !DILocation(line: 162, column: 9, scope: !3419)
!3846 = !DILocation(line: 163, column: 9, scope: !3419)
!3847 = !DILocation(line: 163, column: 5, scope: !3419)
!3848 = !DILocation(line: 164, column: 40, scope: !3419)
!3849 = !DILocation(line: 164, column: 20, scope: !3419)
!3850 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3851)
!3851 = distinct !DILocation(line: 164, column: 6, scope: !3419)
!3852 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3851)
!3853 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3851)
!3854 = !DILocation(line: 164, column: 6, scope: !3419)
!3855 = !DILocation(line: 164, column: 5, scope: !3419)
!3856 = !DILocation(line: 166, column: 19, scope: !3419)
!3857 = !DILocation(line: 166, column: 9, scope: !3421)
!3858 = !DILocation(line: 167, column: 9, scope: !3421)
!3859 = !DILocation(line: 167, column: 5, scope: !3421)
!3860 = !DILocation(line: 168, column: 40, scope: !3421)
!3861 = !DILocation(line: 168, column: 20, scope: !3421)
!3862 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3863)
!3863 = distinct !DILocation(line: 168, column: 6, scope: !3421)
!3864 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3863)
!3865 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3863)
!3866 = !DILocation(line: 168, column: 6, scope: !3421)
!3867 = !DILocation(line: 168, column: 5, scope: !3421)
!3868 = !DILocation(line: 170, column: 36, scope: !3421)
!3869 = !{i64 4}
!3870 = !DILocation(line: 170, column: 35, scope: !3421)
!3871 = !DILocation(line: 174, column: 19, scope: !3423)
!3872 = !DILocation(line: 174, column: 9, scope: !3426)
!3873 = !DILocation(line: 175, column: 9, scope: !3426)
!3874 = !DILocation(line: 175, column: 5, scope: !3426)
!3875 = !DILocation(line: 176, column: 40, scope: !3426)
!3876 = !DILocation(line: 176, column: 20, scope: !3426)
!3877 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3878)
!3878 = distinct !DILocation(line: 176, column: 6, scope: !3426)
!3879 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3878)
!3880 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3878)
!3881 = !DILocation(line: 176, column: 6, scope: !3426)
!3882 = !DILocation(line: 176, column: 5, scope: !3426)
!3883 = !DILocation(line: 177, column: 19, scope: !3426)
!3884 = !DILocation(line: 177, column: 9, scope: !3428)
!3885 = !DILocation(line: 178, column: 9, scope: !3428)
!3886 = !DILocation(line: 178, column: 5, scope: !3428)
!3887 = !DILocation(line: 179, column: 40, scope: !3428)
!3888 = !DILocation(line: 179, column: 20, scope: !3428)
!3889 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3890)
!3890 = distinct !DILocation(line: 179, column: 6, scope: !3428)
!3891 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3890)
!3892 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3890)
!3893 = !DILocation(line: 179, column: 6, scope: !3428)
!3894 = !DILocation(line: 179, column: 5, scope: !3428)
!3895 = !DILocation(line: 180, column: 36, scope: !3428)
!3896 = !DILocation(line: 180, column: 35, scope: !3428)
!3897 = !DILocation(line: 184, column: 19, scope: !3430)
!3898 = !DILocation(line: 184, column: 9, scope: !3433)
!3899 = !DILocation(line: 185, column: 9, scope: !3433)
!3900 = !DILocation(line: 185, column: 5, scope: !3433)
!3901 = !DILocation(line: 186, column: 40, scope: !3433)
!3902 = !DILocation(line: 186, column: 20, scope: !3433)
!3903 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3904)
!3904 = distinct !DILocation(line: 186, column: 6, scope: !3433)
!3905 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3904)
!3906 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3904)
!3907 = !DILocation(line: 186, column: 6, scope: !3433)
!3908 = !DILocation(line: 186, column: 5, scope: !3433)
!3909 = !DILocation(line: 187, column: 19, scope: !3433)
!3910 = !DILocation(line: 187, column: 9, scope: !3435)
!3911 = !DILocation(line: 188, column: 9, scope: !3435)
!3912 = !DILocation(line: 188, column: 5, scope: !3435)
!3913 = !DILocation(line: 189, column: 40, scope: !3435)
!3914 = !DILocation(line: 189, column: 20, scope: !3435)
!3915 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3916)
!3916 = distinct !DILocation(line: 189, column: 6, scope: !3435)
!3917 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3916)
!3918 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3916)
!3919 = !DILocation(line: 189, column: 6, scope: !3435)
!3920 = !DILocation(line: 189, column: 5, scope: !3435)
!3921 = !DILocation(line: 190, column: 19, scope: !3435)
!3922 = !DILocation(line: 190, column: 9, scope: !3437)
!3923 = !DILocation(line: 191, column: 9, scope: !3437)
!3924 = !DILocation(line: 191, column: 5, scope: !3437)
!3925 = !DILocation(line: 192, column: 40, scope: !3437)
!3926 = !DILocation(line: 192, column: 20, scope: !3437)
!3927 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3928)
!3928 = distinct !DILocation(line: 192, column: 6, scope: !3437)
!3929 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3928)
!3930 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3928)
!3931 = !DILocation(line: 192, column: 6, scope: !3437)
!3932 = !DILocation(line: 192, column: 5, scope: !3437)
!3933 = !DILocation(line: 193, column: 36, scope: !3437)
!3934 = !DILocation(line: 193, column: 35, scope: !3437)
!3935 = !DILocation(line: 197, column: 19, scope: !3439)
!3936 = !DILocation(line: 197, column: 9, scope: !3441)
!3937 = !DILocation(line: 198, column: 9, scope: !3441)
!3938 = !DILocation(line: 198, column: 5, scope: !3441)
!3939 = !DILocation(line: 199, column: 40, scope: !3441)
!3940 = !DILocation(line: 199, column: 20, scope: !3441)
!3941 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3942)
!3942 = distinct !DILocation(line: 199, column: 6, scope: !3441)
!3943 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3942)
!3944 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3942)
!3945 = !DILocation(line: 199, column: 6, scope: !3441)
!3946 = !DILocation(line: 199, column: 5, scope: !3441)
!3947 = !DILocation(line: 200, column: 19, scope: !3441)
!3948 = !DILocation(line: 200, column: 9, scope: !3443)
!3949 = !DILocation(line: 201, column: 9, scope: !3443)
!3950 = !DILocation(line: 201, column: 5, scope: !3443)
!3951 = !DILocation(line: 202, column: 40, scope: !3443)
!3952 = !DILocation(line: 202, column: 20, scope: !3443)
!3953 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3954)
!3954 = distinct !DILocation(line: 202, column: 6, scope: !3443)
!3955 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3954)
!3956 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3954)
!3957 = !DILocation(line: 202, column: 6, scope: !3443)
!3958 = !DILocation(line: 202, column: 5, scope: !3443)
!3959 = !DILocation(line: 204, column: 19, scope: !3443)
!3960 = !DILocation(line: 204, column: 9, scope: !3445)
!3961 = !DILocation(line: 205, column: 9, scope: !3445)
!3962 = !DILocation(line: 205, column: 5, scope: !3445)
!3963 = !DILocation(line: 206, column: 40, scope: !3445)
!3964 = !DILocation(line: 206, column: 20, scope: !3445)
!3965 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3966)
!3966 = distinct !DILocation(line: 206, column: 6, scope: !3445)
!3967 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3966)
!3968 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3966)
!3969 = !DILocation(line: 206, column: 6, scope: !3445)
!3970 = !DILocation(line: 206, column: 5, scope: !3445)
!3971 = !DILocation(line: 208, column: 19, scope: !3445)
!3972 = !DILocation(line: 208, column: 9, scope: !3447)
!3973 = !DILocation(line: 209, column: 9, scope: !3447)
!3974 = !DILocation(line: 209, column: 5, scope: !3447)
!3975 = !DILocation(line: 210, column: 40, scope: !3447)
!3976 = !DILocation(line: 210, column: 20, scope: !3447)
!3977 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3978)
!3978 = distinct !DILocation(line: 210, column: 6, scope: !3447)
!3979 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3978)
!3980 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3978)
!3981 = !DILocation(line: 210, column: 6, scope: !3447)
!3982 = !DILocation(line: 210, column: 5, scope: !3447)
!3983 = !DILocation(line: 212, column: 19, scope: !3447)
!3984 = !DILocation(line: 212, column: 9, scope: !3449)
!3985 = !DILocation(line: 213, column: 9, scope: !3449)
!3986 = !DILocation(line: 213, column: 5, scope: !3449)
!3987 = !DILocation(line: 214, column: 40, scope: !3449)
!3988 = !DILocation(line: 214, column: 20, scope: !3449)
!3989 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !3990)
!3990 = distinct !DILocation(line: 214, column: 6, scope: !3449)
!3991 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !3990)
!3992 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !3990)
!3993 = !DILocation(line: 214, column: 6, scope: !3449)
!3994 = !DILocation(line: 214, column: 5, scope: !3449)
!3995 = !DILocation(line: 216, column: 19, scope: !3449)
!3996 = !DILocation(line: 216, column: 9, scope: !3451)
!3997 = !DILocation(line: 217, column: 9, scope: !3451)
!3998 = !DILocation(line: 217, column: 5, scope: !3451)
!3999 = !DILocation(line: 218, column: 40, scope: !3451)
!4000 = !DILocation(line: 218, column: 20, scope: !3451)
!4001 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4002)
!4002 = distinct !DILocation(line: 218, column: 6, scope: !3451)
!4003 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4002)
!4004 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4002)
!4005 = !DILocation(line: 218, column: 6, scope: !3451)
!4006 = !DILocation(line: 218, column: 5, scope: !3451)
!4007 = !DILocation(line: 220, column: 19, scope: !3451)
!4008 = !DILocation(line: 220, column: 9, scope: !3453)
!4009 = !DILocation(line: 221, column: 9, scope: !3453)
!4010 = !DILocation(line: 221, column: 5, scope: !3453)
!4011 = !DILocation(line: 222, column: 40, scope: !3453)
!4012 = !DILocation(line: 222, column: 20, scope: !3453)
!4013 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4014)
!4014 = distinct !DILocation(line: 222, column: 6, scope: !3453)
!4015 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4014)
!4016 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4014)
!4017 = !DILocation(line: 222, column: 6, scope: !3453)
!4018 = !DILocation(line: 222, column: 5, scope: !3453)
!4019 = !DILocation(line: 224, column: 19, scope: !3453)
!4020 = !DILocation(line: 224, column: 9, scope: !3455)
!4021 = !DILocation(line: 225, column: 9, scope: !3455)
!4022 = !DILocation(line: 225, column: 5, scope: !3455)
!4023 = !DILocation(line: 226, column: 40, scope: !3455)
!4024 = !DILocation(line: 226, column: 20, scope: !3455)
!4025 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4026)
!4026 = distinct !DILocation(line: 226, column: 6, scope: !3455)
!4027 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4026)
!4028 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4026)
!4029 = !DILocation(line: 226, column: 6, scope: !3455)
!4030 = !DILocation(line: 226, column: 5, scope: !3455)
!4031 = !DILocation(line: 228, column: 19, scope: !3455)
!4032 = !DILocation(line: 228, column: 9, scope: !3457)
!4033 = !DILocation(line: 229, column: 9, scope: !3457)
!4034 = !DILocation(line: 229, column: 5, scope: !3457)
!4035 = !DILocation(line: 230, column: 40, scope: !3457)
!4036 = !DILocation(line: 230, column: 20, scope: !3457)
!4037 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4038)
!4038 = distinct !DILocation(line: 230, column: 6, scope: !3457)
!4039 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4038)
!4040 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4038)
!4041 = !DILocation(line: 230, column: 6, scope: !3457)
!4042 = !DILocation(line: 230, column: 5, scope: !3457)
!4043 = !DILocation(line: 232, column: 19, scope: !3457)
!4044 = !DILocation(line: 232, column: 9, scope: !3459)
!4045 = !DILocation(line: 233, column: 9, scope: !3459)
!4046 = !DILocation(line: 233, column: 5, scope: !3459)
!4047 = !DILocation(line: 234, column: 41, scope: !3459)
!4048 = !DILocation(line: 465, column: 32, scope: !3625, inlinedAt: !4049)
!4049 = distinct !DILocation(line: 234, column: 41, scope: !3459)
!4050 = !DILocation(line: 465, column: 38, scope: !3625, inlinedAt: !4049)
!4051 = !DILocation(line: 472, column: 18, scope: !3625, inlinedAt: !4049)
!4052 = !DILocation(line: 234, column: 40, scope: !3459)
!4053 = !DILocation(line: 234, column: 20, scope: !3459)
!4054 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4055)
!4055 = distinct !DILocation(line: 234, column: 6, scope: !3459)
!4056 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4055)
!4057 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4055)
!4058 = !DILocation(line: 234, column: 6, scope: !3459)
!4059 = !DILocation(line: 234, column: 5, scope: !3459)
!4060 = !DILocation(line: 236, column: 19, scope: !3459)
!4061 = !DILocation(line: 236, column: 9, scope: !3461)
!4062 = !DILocation(line: 237, column: 9, scope: !3461)
!4063 = !DILocation(line: 237, column: 5, scope: !3461)
!4064 = !DILocation(line: 238, column: 41, scope: !3461)
!4065 = !DILocation(line: 465, column: 32, scope: !3625, inlinedAt: !4066)
!4066 = distinct !DILocation(line: 238, column: 41, scope: !3461)
!4067 = !DILocation(line: 465, column: 38, scope: !3625, inlinedAt: !4066)
!4068 = !DILocation(line: 472, column: 18, scope: !3625, inlinedAt: !4066)
!4069 = !DILocation(line: 238, column: 40, scope: !3461)
!4070 = !DILocation(line: 238, column: 20, scope: !3461)
!4071 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4072)
!4072 = distinct !DILocation(line: 238, column: 6, scope: !3461)
!4073 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4072)
!4074 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4072)
!4075 = !DILocation(line: 238, column: 6, scope: !3461)
!4076 = !DILocation(line: 238, column: 5, scope: !3461)
!4077 = !DILocation(line: 240, column: 19, scope: !3461)
!4078 = !DILocation(line: 240, column: 9, scope: !3463)
!4079 = !DILocation(line: 241, column: 9, scope: !3463)
!4080 = !DILocation(line: 241, column: 5, scope: !3463)
!4081 = !DILocation(line: 242, column: 41, scope: !3463)
!4082 = !DILocation(line: 465, column: 32, scope: !3625, inlinedAt: !4083)
!4083 = distinct !DILocation(line: 242, column: 41, scope: !3463)
!4084 = !DILocation(line: 465, column: 38, scope: !3625, inlinedAt: !4083)
!4085 = !DILocation(line: 472, column: 18, scope: !3625, inlinedAt: !4083)
!4086 = !DILocation(line: 242, column: 40, scope: !3463)
!4087 = !DILocation(line: 242, column: 20, scope: !3463)
!4088 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4089)
!4089 = distinct !DILocation(line: 242, column: 6, scope: !3463)
!4090 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4089)
!4091 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4089)
!4092 = !DILocation(line: 242, column: 6, scope: !3463)
!4093 = !DILocation(line: 242, column: 5, scope: !3463)
!4094 = !DILocation(line: 244, column: 19, scope: !3463)
!4095 = !DILocation(line: 244, column: 9, scope: !3465)
!4096 = !DILocation(line: 245, column: 9, scope: !3465)
!4097 = !DILocation(line: 245, column: 5, scope: !3465)
!4098 = !DILocation(line: 246, column: 41, scope: !3465)
!4099 = !DILocation(line: 465, column: 32, scope: !3625, inlinedAt: !4100)
!4100 = distinct !DILocation(line: 246, column: 41, scope: !3465)
!4101 = !DILocation(line: 465, column: 38, scope: !3625, inlinedAt: !4100)
!4102 = !DILocation(line: 472, column: 18, scope: !3625, inlinedAt: !4100)
!4103 = !DILocation(line: 246, column: 40, scope: !3465)
!4104 = !DILocation(line: 246, column: 20, scope: !3465)
!4105 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4106)
!4106 = distinct !DILocation(line: 246, column: 6, scope: !3465)
!4107 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4106)
!4108 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4106)
!4109 = !DILocation(line: 246, column: 6, scope: !3465)
!4110 = !DILocation(line: 246, column: 5, scope: !3465)
!4111 = !DILocation(line: 248, column: 19, scope: !3465)
!4112 = !DILocation(line: 248, column: 9, scope: !3467)
!4113 = !DILocation(line: 249, column: 9, scope: !3467)
!4114 = !DILocation(line: 249, column: 5, scope: !3467)
!4115 = !DILocation(line: 250, column: 41, scope: !3467)
!4116 = !DILocation(line: 465, column: 32, scope: !3625, inlinedAt: !4117)
!4117 = distinct !DILocation(line: 250, column: 41, scope: !3467)
!4118 = !DILocation(line: 465, column: 38, scope: !3625, inlinedAt: !4117)
!4119 = !DILocation(line: 472, column: 18, scope: !3625, inlinedAt: !4117)
!4120 = !DILocation(line: 250, column: 40, scope: !3467)
!4121 = !DILocation(line: 250, column: 20, scope: !3467)
!4122 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4123)
!4123 = distinct !DILocation(line: 250, column: 6, scope: !3467)
!4124 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4123)
!4125 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4123)
!4126 = !DILocation(line: 250, column: 6, scope: !3467)
!4127 = !DILocation(line: 250, column: 5, scope: !3467)
!4128 = !DILocation(line: 252, column: 19, scope: !3467)
!4129 = !DILocation(line: 252, column: 9, scope: !3469)
!4130 = !DILocation(line: 253, column: 9, scope: !3469)
!4131 = !DILocation(line: 253, column: 5, scope: !3469)
!4132 = !DILocation(line: 254, column: 41, scope: !3469)
!4133 = !DILocation(line: 465, column: 32, scope: !3625, inlinedAt: !4134)
!4134 = distinct !DILocation(line: 254, column: 41, scope: !3469)
!4135 = !DILocation(line: 465, column: 38, scope: !3625, inlinedAt: !4134)
!4136 = !DILocation(line: 472, column: 18, scope: !3625, inlinedAt: !4134)
!4137 = !DILocation(line: 254, column: 40, scope: !3469)
!4138 = !DILocation(line: 254, column: 20, scope: !3469)
!4139 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4140)
!4140 = distinct !DILocation(line: 254, column: 6, scope: !3469)
!4141 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4140)
!4142 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4140)
!4143 = !DILocation(line: 254, column: 6, scope: !3469)
!4144 = !DILocation(line: 254, column: 5, scope: !3469)
!4145 = !DILocation(line: 256, column: 19, scope: !3469)
!4146 = !DILocation(line: 256, column: 9, scope: !3471)
!4147 = !DILocation(line: 257, column: 9, scope: !3471)
!4148 = !DILocation(line: 257, column: 5, scope: !3471)
!4149 = !DILocation(line: 258, column: 41, scope: !3471)
!4150 = !DILocation(line: 465, column: 32, scope: !3625, inlinedAt: !4151)
!4151 = distinct !DILocation(line: 258, column: 41, scope: !3471)
!4152 = !DILocation(line: 465, column: 38, scope: !3625, inlinedAt: !4151)
!4153 = !DILocation(line: 472, column: 18, scope: !3625, inlinedAt: !4151)
!4154 = !DILocation(line: 258, column: 40, scope: !3471)
!4155 = !DILocation(line: 258, column: 20, scope: !3471)
!4156 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4157)
!4157 = distinct !DILocation(line: 258, column: 6, scope: !3471)
!4158 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4157)
!4159 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4157)
!4160 = !DILocation(line: 258, column: 6, scope: !3471)
!4161 = !DILocation(line: 258, column: 5, scope: !3471)
!4162 = !DILocation(line: 260, column: 19, scope: !3471)
!4163 = !DILocation(line: 260, column: 9, scope: !3473)
!4164 = !DILocation(line: 261, column: 9, scope: !3473)
!4165 = !DILocation(line: 261, column: 5, scope: !3473)
!4166 = !DILocation(line: 262, column: 41, scope: !3473)
!4167 = !DILocation(line: 465, column: 32, scope: !3625, inlinedAt: !4168)
!4168 = distinct !DILocation(line: 262, column: 41, scope: !3473)
!4169 = !DILocation(line: 465, column: 38, scope: !3625, inlinedAt: !4168)
!4170 = !DILocation(line: 472, column: 18, scope: !3625, inlinedAt: !4168)
!4171 = !DILocation(line: 262, column: 40, scope: !3473)
!4172 = !DILocation(line: 262, column: 20, scope: !3473)
!4173 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4174)
!4174 = distinct !DILocation(line: 262, column: 6, scope: !3473)
!4175 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4174)
!4176 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4174)
!4177 = !DILocation(line: 262, column: 6, scope: !3473)
!4178 = !DILocation(line: 262, column: 5, scope: !3473)
!4179 = !DILocation(line: 264, column: 53, scope: !3473)
!4180 = !DILocation(line: 267, column: 13, scope: !3473)
!4181 = !DILocation(line: 465, column: 32, scope: !3625, inlinedAt: !4182)
!4182 = distinct !DILocation(line: 264, column: 53, scope: !3473)
!4183 = !DILocation(line: 465, column: 38, scope: !3625, inlinedAt: !4182)
!4184 = !DILocation(line: 472, column: 18, scope: !3625, inlinedAt: !4182)
!4185 = !DILocation(line: 264, column: 47, scope: !3473)
!4186 = !DILocation(line: 269, column: 22, scope: !3475)
!4187 = !DILocation(line: 465, column: 32, scope: !3625, inlinedAt: !4188)
!4188 = distinct !DILocation(line: 269, column: 22, scope: !3475)
!4189 = !DILocation(line: 465, column: 38, scope: !3625, inlinedAt: !4188)
!4190 = !DILocation(line: 472, column: 18, scope: !3625, inlinedAt: !4188)
!4191 = !DILocation(line: 269, column: 5, scope: !3475)
!4192 = !DILocation(line: 271, column: 2, scope: !3317)
!4193 = distinct !DISubprogram(name: "rust_use_arrays", scope: !4195, file: !4194, line: 11, type: !4196, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !4198)
!4194 = !DIFile(filename: "src/variable_arrays.rs", directory: "/home/calvin/git/c2rust/tests/arrays", checksumkind: CSK_MD5, checksum: "6d30eb5dae4bf17996c200e0a34cd035")
!4195 = !DINamespace(name: "variable_arrays", scope: !3)
!4196 = !DISubroutineType(types: !4197)
!4197 = !{null, !481, !481, !856}
!4198 = !{!4199, !4200, !4201, !4202, !4204, !4206, !4208, !4210, !4212, !4214, !4216}
!4199 = !DILocalVariable(name: "n", arg: 1, scope: !4193, file: !4194, line: 12, type: !481)
!4200 = !DILocalVariable(name: "m", arg: 2, scope: !4193, file: !4194, line: 13, type: !481)
!4201 = !DILocalVariable(name: "a", arg: 3, scope: !4193, file: !4194, line: 14, type: !856)
!4202 = !DILocalVariable(name: "vla", scope: !4203, file: !4194, line: 16, type: !193, align: 8)
!4203 = distinct !DILexicalBlock(scope: !4193, file: !4194, line: 16, column: 5)
!4204 = !DILocalVariable(name: "vla_0", scope: !4205, file: !4194, line: 17, type: !193, align: 8)
!4205 = distinct !DILexicalBlock(scope: !4203, file: !4194, line: 17, column: 5)
!4206 = !DILocalVariable(name: "counter", scope: !4207, file: !4194, line: 18, type: !481, align: 4)
!4207 = distinct !DILexicalBlock(scope: !4205, file: !4194, line: 18, column: 5)
!4208 = !DILocalVariable(name: "i", scope: !4209, file: !4194, line: 19, type: !481, align: 4)
!4209 = distinct !DILexicalBlock(scope: !4207, file: !4194, line: 19, column: 5)
!4210 = !DILocalVariable(name: "j", scope: !4211, file: !4194, line: 21, type: !481, align: 4)
!4211 = distinct !DILexicalBlock(scope: !4209, file: !4194, line: 21, column: 9)
!4212 = !DILocalVariable(name: "k", scope: !4213, file: !4194, line: 23, type: !481, align: 4)
!4213 = distinct !DILexicalBlock(scope: !4211, file: !4194, line: 23, column: 13)
!4214 = !DILocalVariable(name: "fresh0", scope: !4215, file: !4194, line: 25, type: !481, align: 4)
!4215 = distinct !DILexicalBlock(scope: !4213, file: !4194, line: 25, column: 17)
!4216 = !DILocalVariable(name: "past_end", scope: !4217, file: !4194, line: 40, type: !856, align: 8)
!4217 = distinct !DILexicalBlock(scope: !4209, file: !4194, line: 40, column: 5)
!4218 = !DILocation(line: 12, column: 5, scope: !4193)
!4219 = !DILocation(line: 13, column: 5, scope: !4193)
!4220 = !DILocation(line: 14, column: 5, scope: !4193)
!4221 = !DILocation(line: 18, column: 9, scope: !4207)
!4222 = !DILocation(line: 19, column: 9, scope: !4209)
!4223 = !DILocation(line: 21, column: 13, scope: !4211)
!4224 = !DILocation(line: 23, column: 17, scope: !4213)
!4225 = !DILocation(line: 16, column: 15, scope: !4193)
!4226 = !DILocation(line: 16, column: 9, scope: !4203)
!4227 = !DILocation(line: 17, column: 17, scope: !4203)
!4228 = !DILocation(line: 17, column: 9, scope: !4205)
!4229 = !DILocation(line: 18, column: 40, scope: !4205)
!4230 = !DILocation(line: 19, column: 34, scope: !4207)
!4231 = !DILocation(line: 20, column: 5, scope: !4209)
!4232 = !DILocation(line: 20, column: 11, scope: !4209)
!4233 = !DILocation(line: 41, column: 49, scope: !4209)
!4234 = !DILocation(line: 21, column: 38, scope: !4209)
!4235 = !DILocation(line: 22, column: 9, scope: !4211)
!4236 = !DILocation(line: 22, column: 15, scope: !4211)
!4237 = !DILocation(line: 22, column: 19, scope: !4211)
!4238 = !DILocation(line: 37, column: 9, scope: !4211)
!4239 = !DILocation(line: 23, column: 42, scope: !4211)
!4240 = !DILocation(line: 24, column: 13, scope: !4213)
!4241 = !DILocation(line: 24, column: 19, scope: !4213)
!4242 = !DILocation(line: 34, column: 13, scope: !4213)
!4243 = !DILocation(line: 25, column: 30, scope: !4213)
!4244 = !DILocation(line: 25, column: 21, scope: !4215)
!4245 = !DILocation(line: 26, column: 27, scope: !4215)
!4246 = !DILocation(line: 26, column: 17, scope: !4215)
!4247 = !DILocation(line: 28, column: 29, scope: !4215)
!4248 = !DILocation(line: 28, column: 42, scope: !4215)
!4249 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4250)
!4250 = distinct !DILocation(line: 27, column: 18, scope: !4215)
!4251 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4250)
!4252 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4250)
!4253 = !DILocation(line: 27, column: 18, scope: !4215)
!4254 = !DILocation(line: 29, column: 29, scope: !4215)
!4255 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4256)
!4256 = distinct !DILocation(line: 27, column: 18, scope: !4215)
!4257 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4256)
!4258 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4256)
!4259 = !DILocation(line: 30, column: 29, scope: !4215)
!4260 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4261)
!4261 = distinct !DILocation(line: 27, column: 18, scope: !4215)
!4262 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4261)
!4263 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4261)
!4264 = !DILocation(line: 27, column: 17, scope: !4215)
!4265 = !DILocation(line: 31, column: 17, scope: !4215)
!4266 = !DILocation(line: 41, column: 17, scope: !4209)
!4267 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4268)
!4268 = distinct !DILocation(line: 40, column: 52, scope: !4209)
!4269 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4268)
!4270 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4268)
!4271 = !DILocation(line: 40, column: 52, scope: !4209)
!4272 = !DILocation(line: 42, column: 17, scope: !4209)
!4273 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4274)
!4274 = distinct !DILocation(line: 40, column: 52, scope: !4209)
!4275 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4274)
!4276 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4274)
!4277 = !DILocation(line: 43, column: 17, scope: !4209)
!4278 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4279)
!4279 = distinct !DILocation(line: 40, column: 52, scope: !4209)
!4280 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4279)
!4281 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4279)
!4282 = !DILocation(line: 40, column: 46, scope: !4209)
!4283 = !DILocation(line: 40, column: 9, scope: !4217)
!4284 = !DILocation(line: 44, column: 2, scope: !4193)
!4285 = distinct !DISubprogram(name: "rust_use_arrays2", scope: !4195, file: !4194, line: 46, type: !4196, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !4286)
!4286 = !{!4287, !4288, !4289, !4290, !4292, !4294, !4296, !4298, !4300, !4302}
!4287 = !DILocalVariable(name: "n", arg: 1, scope: !4285, file: !4194, line: 47, type: !481)
!4288 = !DILocalVariable(name: "m", arg: 2, scope: !4285, file: !4194, line: 48, type: !481)
!4289 = !DILocalVariable(name: "a", arg: 3, scope: !4285, file: !4194, line: 49, type: !856)
!4290 = !DILocalVariable(name: "vla", scope: !4291, file: !4194, line: 51, type: !193, align: 8)
!4291 = distinct !DILexicalBlock(scope: !4285, file: !4194, line: 51, column: 5)
!4292 = !DILocalVariable(name: "vla_0", scope: !4293, file: !4194, line: 52, type: !193, align: 8)
!4293 = distinct !DILexicalBlock(scope: !4291, file: !4194, line: 52, column: 5)
!4294 = !DILocalVariable(name: "counter", scope: !4295, file: !4194, line: 53, type: !481, align: 4)
!4295 = distinct !DILexicalBlock(scope: !4293, file: !4194, line: 53, column: 5)
!4296 = !DILocalVariable(name: "i", scope: !4297, file: !4194, line: 54, type: !481, align: 4)
!4297 = distinct !DILexicalBlock(scope: !4295, file: !4194, line: 54, column: 5)
!4298 = !DILocalVariable(name: "j", scope: !4299, file: !4194, line: 56, type: !481, align: 4)
!4299 = distinct !DILexicalBlock(scope: !4297, file: !4194, line: 56, column: 9)
!4300 = !DILocalVariable(name: "k", scope: !4301, file: !4194, line: 58, type: !481, align: 4)
!4301 = distinct !DILexicalBlock(scope: !4299, file: !4194, line: 58, column: 13)
!4302 = !DILocalVariable(name: "fresh1", scope: !4303, file: !4194, line: 60, type: !481, align: 4)
!4303 = distinct !DILexicalBlock(scope: !4301, file: !4194, line: 60, column: 17)
!4304 = !DILocation(line: 47, column: 5, scope: !4285)
!4305 = !DILocation(line: 48, column: 5, scope: !4285)
!4306 = !DILocation(line: 49, column: 5, scope: !4285)
!4307 = !DILocation(line: 53, column: 9, scope: !4295)
!4308 = !DILocation(line: 54, column: 9, scope: !4297)
!4309 = !DILocation(line: 56, column: 13, scope: !4299)
!4310 = !DILocation(line: 58, column: 17, scope: !4301)
!4311 = !DILocation(line: 51, column: 15, scope: !4285)
!4312 = !DILocation(line: 51, column: 9, scope: !4291)
!4313 = !DILocation(line: 52, column: 17, scope: !4291)
!4314 = !DILocation(line: 52, column: 9, scope: !4293)
!4315 = !DILocation(line: 53, column: 40, scope: !4293)
!4316 = !DILocation(line: 54, column: 34, scope: !4295)
!4317 = !DILocation(line: 55, column: 5, scope: !4297)
!4318 = !DILocation(line: 55, column: 11, scope: !4297)
!4319 = !DILocation(line: 75, column: 2, scope: !4285)
!4320 = !DILocation(line: 56, column: 38, scope: !4297)
!4321 = !DILocation(line: 57, column: 9, scope: !4299)
!4322 = !DILocation(line: 57, column: 15, scope: !4299)
!4323 = !DILocation(line: 57, column: 19, scope: !4299)
!4324 = !DILocation(line: 72, column: 9, scope: !4299)
!4325 = !DILocation(line: 58, column: 42, scope: !4299)
!4326 = !DILocation(line: 59, column: 13, scope: !4301)
!4327 = !DILocation(line: 59, column: 19, scope: !4301)
!4328 = !DILocation(line: 69, column: 13, scope: !4301)
!4329 = !DILocation(line: 60, column: 30, scope: !4301)
!4330 = !DILocation(line: 60, column: 21, scope: !4303)
!4331 = !DILocation(line: 61, column: 27, scope: !4303)
!4332 = !DILocation(line: 61, column: 17, scope: !4303)
!4333 = !DILocation(line: 63, column: 29, scope: !4303)
!4334 = !DILocation(line: 63, column: 42, scope: !4303)
!4335 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4336)
!4336 = distinct !DILocation(line: 62, column: 18, scope: !4303)
!4337 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4336)
!4338 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4336)
!4339 = !DILocation(line: 62, column: 18, scope: !4303)
!4340 = !DILocation(line: 64, column: 29, scope: !4303)
!4341 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4342)
!4342 = distinct !DILocation(line: 62, column: 18, scope: !4303)
!4343 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4342)
!4344 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4342)
!4345 = !DILocation(line: 65, column: 29, scope: !4303)
!4346 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4347)
!4347 = distinct !DILocation(line: 62, column: 18, scope: !4303)
!4348 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4347)
!4349 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4347)
!4350 = !DILocation(line: 62, column: 17, scope: !4303)
!4351 = !DILocation(line: 66, column: 17, scope: !4303)
!4352 = distinct !DISubprogram(name: "rust_variable_arrays", scope: !4195, file: !4194, line: 77, type: !4353, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !4355)
!4353 = !DISubroutineType(types: !4354)
!4354 = !{null, !856}
!4355 = !{!4356, !4357, !4360, !4362, !4364, !4366, !4368, !4370, !4372, !4374, !4376, !4378, !4380}
!4356 = !DILocalVariable(name: "buf", arg: 1, scope: !4352, file: !4194, line: 77, type: !856)
!4357 = !DILocalVariable(name: "grid", scope: !4358, file: !4194, line: 78, type: !4359, align: 4)
!4358 = distinct !DILexicalBlock(scope: !4352, file: !4194, line: 78, column: 5)
!4359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !871, size: 2560, align: 32, elements: !7)
!4360 = !DILocalVariable(name: "counter", scope: !4361, file: !4194, line: 89, type: !481, align: 4)
!4361 = distinct !DILexicalBlock(scope: !4358, file: !4194, line: 89, column: 5)
!4362 = !DILocalVariable(name: "i", scope: !4363, file: !4194, line: 90, type: !481, align: 4)
!4363 = distinct !DILexicalBlock(scope: !4361, file: !4194, line: 90, column: 5)
!4364 = !DILocalVariable(name: "j", scope: !4365, file: !4194, line: 92, type: !481, align: 4)
!4365 = distinct !DILexicalBlock(scope: !4363, file: !4194, line: 92, column: 9)
!4366 = !DILocalVariable(name: "k", scope: !4367, file: !4194, line: 94, type: !481, align: 4)
!4367 = distinct !DILexicalBlock(scope: !4365, file: !4194, line: 94, column: 13)
!4368 = !DILocalVariable(name: "fresh2", scope: !4369, file: !4194, line: 96, type: !481, align: 4)
!4369 = distinct !DILexicalBlock(scope: !4367, file: !4194, line: 96, column: 17)
!4370 = !DILocalVariable(name: "n", scope: !4371, file: !4194, line: 108, type: !481, align: 4)
!4371 = distinct !DILexicalBlock(scope: !4363, file: !4194, line: 108, column: 5)
!4372 = !DILocalVariable(name: "vla", scope: !4373, file: !4194, line: 109, type: !193, align: 8)
!4373 = distinct !DILexicalBlock(scope: !4371, file: !4194, line: 109, column: 5)
!4374 = !DILocalVariable(name: "var1", scope: !4375, file: !4194, line: 110, type: !467, align: 8)
!4375 = distinct !DILexicalBlock(scope: !4373, file: !4194, line: 110, column: 5)
!4376 = !DILocalVariable(name: "i_0", scope: !4377, file: !4194, line: 111, type: !481, align: 4)
!4377 = distinct !DILexicalBlock(scope: !4375, file: !4194, line: 111, column: 5)
!4378 = !DILocalVariable(name: "fresh3", scope: !4379, file: !4194, line: 114, type: !481, align: 4)
!4379 = distinct !DILexicalBlock(scope: !4377, file: !4194, line: 114, column: 9)
!4380 = !DILocalVariable(name: "past_end", scope: !4381, file: !4194, line: 120, type: !856, align: 8)
!4381 = distinct !DILexicalBlock(scope: !4377, file: !4194, line: 120, column: 5)
!4382 = !DILocation(line: 77, column: 47, scope: !4352)
!4383 = !DILocation(line: 78, column: 9, scope: !4358)
!4384 = !DILocation(line: 89, column: 9, scope: !4361)
!4385 = !DILocation(line: 90, column: 9, scope: !4363)
!4386 = !DILocation(line: 92, column: 13, scope: !4365)
!4387 = !DILocation(line: 94, column: 17, scope: !4367)
!4388 = !DILocation(line: 110, column: 9, scope: !4375)
!4389 = !DILocation(line: 111, column: 9, scope: !4377)
!4390 = !DILocation(line: 120, column: 9, scope: !4381)
!4391 = !DILocation(line: 78, column: 54, scope: !4352)
!4392 = !DILocation(line: 78, column: 53, scope: !4352)
!4393 = !DILocation(line: 78, column: 52, scope: !4352)
!4394 = !DILocation(line: 82, column: 9, scope: !4358)
!4395 = !DILocation(line: 79, column: 5, scope: !4358)
!4396 = !DILocation(line: 87, column: 9, scope: !4358)
!4397 = !DILocalVariable(name: "self", arg: 1, scope: !4398, file: !557, line: 465, type: !870)
!4398 = distinct !DISubprogram(name: "offset<[[i32; 5]; 4]>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h8221e4f7d9040cd4E", scope: !558, file: !557, line: 465, type: !4399, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !879, retainedNodes: !4401)
!4399 = !DISubroutineType(types: !4400)
!4400 = !{!870, !870, !1326}
!4401 = !{!4397, !4402}
!4402 = !DILocalVariable(name: "count", arg: 2, scope: !4398, file: !557, line: 465, type: !1326)
!4403 = !DILocation(line: 465, column: 32, scope: !4398, inlinedAt: !4404)
!4404 = distinct !DILocation(line: 87, column: 9, scope: !4358)
!4405 = !DILocation(line: 465, column: 38, scope: !4398, inlinedAt: !4404)
!4406 = !DILocation(line: 472, column: 18, scope: !4398, inlinedAt: !4404)
!4407 = !DILocation(line: 84, column: 5, scope: !4358)
!4408 = !DILocation(line: 89, column: 40, scope: !4358)
!4409 = !DILocation(line: 90, column: 34, scope: !4361)
!4410 = !DILocation(line: 91, column: 5, scope: !4363)
!4411 = !DILocation(line: 91, column: 11, scope: !4363)
!4412 = !DILocation(line: 108, column: 34, scope: !4363)
!4413 = !DILocation(line: 108, column: 9, scope: !4371)
!4414 = !DILocation(line: 109, column: 15, scope: !4371)
!4415 = !DILocation(line: 109, column: 9, scope: !4373)
!4416 = !DILocation(line: 110, column: 42, scope: !4373)
!4417 = !DILocation(line: 92, column: 38, scope: !4363)
!4418 = !DILocation(line: 93, column: 9, scope: !4365)
!4419 = !DILocation(line: 93, column: 15, scope: !4365)
!4420 = !DILocation(line: 105, column: 9, scope: !4365)
!4421 = !DILocation(line: 94, column: 42, scope: !4365)
!4422 = !DILocation(line: 95, column: 13, scope: !4367)
!4423 = !DILocation(line: 95, column: 19, scope: !4367)
!4424 = !DILocation(line: 102, column: 13, scope: !4367)
!4425 = !DILocation(line: 96, column: 30, scope: !4367)
!4426 = !DILocation(line: 96, column: 21, scope: !4369)
!4427 = !DILocation(line: 97, column: 27, scope: !4369)
!4428 = !DILocation(line: 97, column: 17, scope: !4369)
!4429 = !DILocation(line: 98, column: 53, scope: !4369)
!4430 = !DILocation(line: 98, column: 48, scope: !4369)
!4431 = !DILocation(line: 98, column: 65, scope: !4369)
!4432 = !DILocation(line: 98, column: 77, scope: !4369)
!4433 = !DILocation(line: 98, column: 29, scope: !4369)
!4434 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4435)
!4435 = distinct !DILocation(line: 98, column: 18, scope: !4369)
!4436 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4435)
!4437 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4435)
!4438 = !DILocation(line: 98, column: 18, scope: !4369)
!4439 = !DILocation(line: 98, column: 17, scope: !4369)
!4440 = !DILocation(line: 99, column: 17, scope: !4369)
!4441 = !DILocation(line: 111, column: 36, scope: !4375)
!4442 = !DILocation(line: 112, column: 5, scope: !4377)
!4443 = !DILocation(line: 112, column: 11, scope: !4377)
!4444 = !DILocation(line: 120, column: 56, scope: !4377)
!4445 = !DILocation(line: 113, column: 74, scope: !4377)
!4446 = !DILocation(line: 113, column: 51, scope: !4377)
!4447 = !DILocation(line: 113, column: 10, scope: !4377)
!4448 = !DILocation(line: 128, column: 1, scope: !4373)
!4449 = !DILocation(line: 113, column: 35, scope: !4377)
!4450 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4451)
!4451 = distinct !DILocation(line: 113, column: 10, scope: !4377)
!4452 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4451)
!4453 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4451)
!4454 = !DILocation(line: 473, column: 6, scope: !3511, inlinedAt: !4451)
!4455 = !DILocation(line: 113, column: 9, scope: !4377)
!4456 = !DILocation(line: 114, column: 22, scope: !4377)
!4457 = !DILocation(line: 114, column: 13, scope: !4379)
!4458 = !DILocation(line: 115, column: 19, scope: !4379)
!4459 = !DILocation(line: 115, column: 9, scope: !4379)
!4460 = !DILocation(line: 116, column: 41, scope: !4379)
!4461 = !DILocation(line: 116, column: 66, scope: !4379)
!4462 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4463)
!4463 = distinct !DILocation(line: 116, column: 41, scope: !4379)
!4464 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4463)
!4465 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4463)
!4466 = !DILocation(line: 473, column: 6, scope: !3511, inlinedAt: !4463)
!4467 = !DILocation(line: 116, column: 40, scope: !4379)
!4468 = !DILocation(line: 116, column: 21, scope: !4379)
!4469 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4470)
!4470 = distinct !DILocation(line: 116, column: 10, scope: !4379)
!4471 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4470)
!4472 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4470)
!4473 = !DILocation(line: 473, column: 6, scope: !3511, inlinedAt: !4470)
!4474 = !DILocation(line: 116, column: 9, scope: !4379)
!4475 = !DILocation(line: 117, column: 9, scope: !4379)
!4476 = !DILocation(line: 465, column: 32, scope: !4398, inlinedAt: !4477)
!4477 = distinct !DILocation(line: 120, column: 56, scope: !4377)
!4478 = !DILocation(line: 465, column: 38, scope: !4398, inlinedAt: !4477)
!4479 = !DILocation(line: 472, column: 18, scope: !4398, inlinedAt: !4477)
!4480 = !DILocation(line: 473, column: 6, scope: !4398, inlinedAt: !4477)
!4481 = !DILocation(line: 120, column: 54, scope: !4377)
!4482 = !DILocalVariable(name: "self", arg: 1, scope: !4483, file: !557, line: 465, type: !837)
!4483 = distinct !DISubprogram(name: "offset<[i32; 5]>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hff84ee680bfe671fE", scope: !558, file: !557, line: 465, type: !4484, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !848, retainedNodes: !4486)
!4484 = !DISubroutineType(types: !4485)
!4485 = !{!837, !837, !1326}
!4486 = !{!4482, !4487}
!4487 = !DILocalVariable(name: "count", arg: 2, scope: !4483, file: !557, line: 465, type: !1326)
!4488 = !DILocation(line: 465, column: 32, scope: !4483, inlinedAt: !4489)
!4489 = distinct !DILocation(line: 120, column: 54, scope: !4377)
!4490 = !DILocation(line: 465, column: 38, scope: !4483, inlinedAt: !4489)
!4491 = !DILocation(line: 472, column: 18, scope: !4483, inlinedAt: !4489)
!4492 = !DILocation(line: 473, column: 6, scope: !4483, inlinedAt: !4489)
!4493 = !DILocation(line: 120, column: 52, scope: !4377)
!4494 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4495)
!4495 = distinct !DILocation(line: 120, column: 52, scope: !4377)
!4496 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4495)
!4497 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4495)
!4498 = !DILocation(line: 473, column: 6, scope: !3511, inlinedAt: !4495)
!4499 = !DILocation(line: 120, column: 46, scope: !4377)
!4500 = !DILocation(line: 127, column: 22, scope: !4381)
!4501 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4502)
!4502 = distinct !DILocation(line: 127, column: 22, scope: !4381)
!4503 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4502)
!4504 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4502)
!4505 = !DILocation(line: 473, column: 6, scope: !3511, inlinedAt: !4502)
!4506 = !DILocation(line: 127, column: 5, scope: !4381)
!4507 = !DILocation(line: 77, column: 1, scope: !4352)
!4508 = !DILocation(line: 128, column: 2, scope: !4352)
!4509 = distinct !DISubprogram(name: "rust_alloca_arrays", scope: !4195, file: !4194, line: 130, type: !4353, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !4510)
!4510 = !{!4511, !4512, !4514, !4516, !4518, !4520, !4522, !4524, !4526, !4528, !4530, !4532, !4534}
!4511 = !DILocalVariable(name: "buf", arg: 1, scope: !4509, file: !4194, line: 130, type: !856)
!4512 = !DILocalVariable(name: "grid", scope: !4513, file: !4194, line: 131, type: !4359, align: 4)
!4513 = distinct !DILexicalBlock(scope: !4509, file: !4194, line: 131, column: 5)
!4514 = !DILocalVariable(name: "counter", scope: !4515, file: !4194, line: 142, type: !481, align: 4)
!4515 = distinct !DILexicalBlock(scope: !4513, file: !4194, line: 142, column: 5)
!4516 = !DILocalVariable(name: "i", scope: !4517, file: !4194, line: 143, type: !481, align: 4)
!4517 = distinct !DILexicalBlock(scope: !4515, file: !4194, line: 143, column: 5)
!4518 = !DILocalVariable(name: "j", scope: !4519, file: !4194, line: 145, type: !481, align: 4)
!4519 = distinct !DILexicalBlock(scope: !4517, file: !4194, line: 145, column: 9)
!4520 = !DILocalVariable(name: "k", scope: !4521, file: !4194, line: 147, type: !481, align: 4)
!4521 = distinct !DILexicalBlock(scope: !4519, file: !4194, line: 147, column: 13)
!4522 = !DILocalVariable(name: "fresh4", scope: !4523, file: !4194, line: 149, type: !481, align: 4)
!4523 = distinct !DILexicalBlock(scope: !4521, file: !4194, line: 149, column: 17)
!4524 = !DILocalVariable(name: "n", scope: !4525, file: !4194, line: 161, type: !481, align: 4)
!4525 = distinct !DILexicalBlock(scope: !4517, file: !4194, line: 161, column: 5)
!4526 = !DILocalVariable(name: "fresh5", scope: !4527, file: !4194, line: 162, type: !467, align: 8)
!4527 = distinct !DILexicalBlock(scope: !4525, file: !4194, line: 162, column: 5)
!4528 = !DILocalVariable(name: "var1", scope: !4529, file: !4194, line: 167, type: !856, align: 8)
!4529 = distinct !DILexicalBlock(scope: !4527, file: !4194, line: 167, column: 5)
!4530 = !DILocalVariable(name: "i_0", scope: !4531, file: !4194, line: 168, type: !481, align: 4)
!4531 = distinct !DILexicalBlock(scope: !4529, file: !4194, line: 168, column: 5)
!4532 = !DILocalVariable(name: "fresh6", scope: !4533, file: !4194, line: 171, type: !481, align: 4)
!4533 = distinct !DILexicalBlock(scope: !4531, file: !4194, line: 171, column: 9)
!4534 = !DILocalVariable(name: "past_end", scope: !4535, file: !4194, line: 177, type: !856, align: 8)
!4535 = distinct !DILexicalBlock(scope: !4531, file: !4194, line: 177, column: 5)
!4536 = !DILocation(line: 130, column: 45, scope: !4509)
!4537 = !DILocation(line: 131, column: 9, scope: !4513)
!4538 = !DILocation(line: 142, column: 9, scope: !4515)
!4539 = !DILocation(line: 143, column: 9, scope: !4517)
!4540 = !DILocation(line: 145, column: 13, scope: !4519)
!4541 = !DILocation(line: 147, column: 17, scope: !4521)
!4542 = !DILocation(line: 162, column: 9, scope: !4527)
!4543 = !DILocation(line: 168, column: 9, scope: !4531)
!4544 = !DILocation(line: 177, column: 9, scope: !4535)
!4545 = !DILocation(line: 131, column: 54, scope: !4509)
!4546 = !DILocation(line: 131, column: 53, scope: !4509)
!4547 = !DILocation(line: 131, column: 52, scope: !4509)
!4548 = !DILocation(line: 135, column: 9, scope: !4513)
!4549 = !DILocation(line: 132, column: 5, scope: !4513)
!4550 = !DILocation(line: 140, column: 9, scope: !4513)
!4551 = !DILocation(line: 465, column: 32, scope: !4398, inlinedAt: !4552)
!4552 = distinct !DILocation(line: 140, column: 9, scope: !4513)
!4553 = !DILocation(line: 465, column: 38, scope: !4398, inlinedAt: !4552)
!4554 = !DILocation(line: 472, column: 18, scope: !4398, inlinedAt: !4552)
!4555 = !DILocation(line: 137, column: 5, scope: !4513)
!4556 = !DILocation(line: 142, column: 40, scope: !4513)
!4557 = !DILocation(line: 143, column: 34, scope: !4515)
!4558 = !DILocation(line: 144, column: 5, scope: !4517)
!4559 = !DILocation(line: 144, column: 11, scope: !4517)
!4560 = !DILocation(line: 161, column: 34, scope: !4517)
!4561 = !DILocation(line: 161, column: 9, scope: !4525)
!4562 = !DILocation(line: 164, column: 10, scope: !4525)
!4563 = !DILocation(line: 145, column: 38, scope: !4517)
!4564 = !DILocation(line: 146, column: 9, scope: !4519)
!4565 = !DILocation(line: 146, column: 15, scope: !4519)
!4566 = !DILocation(line: 158, column: 9, scope: !4519)
!4567 = !DILocation(line: 147, column: 42, scope: !4519)
!4568 = !DILocation(line: 148, column: 13, scope: !4521)
!4569 = !DILocation(line: 148, column: 19, scope: !4521)
!4570 = !DILocation(line: 155, column: 13, scope: !4521)
!4571 = !DILocation(line: 149, column: 30, scope: !4521)
!4572 = !DILocation(line: 149, column: 21, scope: !4523)
!4573 = !DILocation(line: 150, column: 27, scope: !4523)
!4574 = !DILocation(line: 150, column: 17, scope: !4523)
!4575 = !DILocation(line: 151, column: 53, scope: !4523)
!4576 = !DILocation(line: 151, column: 48, scope: !4523)
!4577 = !DILocation(line: 151, column: 65, scope: !4523)
!4578 = !DILocation(line: 151, column: 77, scope: !4523)
!4579 = !DILocation(line: 151, column: 29, scope: !4523)
!4580 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4581)
!4581 = distinct !DILocation(line: 151, column: 18, scope: !4523)
!4582 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4581)
!4583 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4581)
!4584 = !DILocation(line: 151, column: 18, scope: !4523)
!4585 = !DILocation(line: 151, column: 17, scope: !4523)
!4586 = !DILocation(line: 152, column: 17, scope: !4523)
!4587 = !DILocalVariable(name: "self", arg: 1, scope: !4588, file: !223, line: 1254, type: !34)
!4588 = distinct !DISubprogram(name: "wrapping_mul", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$12wrapping_mul17hb98dec13d905c3dcE", scope: !4589, file: !223, line: 1254, type: !4590, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !4592)
!4589 = !DINamespace(name: "{impl#9}", scope: !225)
!4590 = !DISubroutineType(types: !4591)
!4591 = !{!34, !34, !34}
!4592 = !{!4587, !4593}
!4593 = !DILocalVariable(name: "rhs", arg: 2, scope: !4588, file: !223, line: 1254, type: !34)
!4594 = !DILocation(line: 1254, column: 35, scope: !4588, inlinedAt: !4595)
!4595 = distinct !DILocation(line: 164, column: 9, scope: !4525)
!4596 = !DILocation(line: 1254, column: 41, scope: !4588, inlinedAt: !4595)
!4597 = !DILocation(line: 164, column: 9, scope: !4525)
!4598 = !DILocation(line: 162, column: 22, scope: !4525)
!4599 = !DILocation(line: 167, column: 42, scope: !4527)
!4600 = !DILocation(line: 185, column: 1, scope: !4525)
!4601 = !DILocation(line: 167, column: 9, scope: !4529)
!4602 = !DILocation(line: 168, column: 36, scope: !4529)
!4603 = !DILocation(line: 169, column: 5, scope: !4531)
!4604 = !DILocation(line: 169, column: 11, scope: !4531)
!4605 = !DILocation(line: 177, column: 56, scope: !4531)
!4606 = !DILocation(line: 170, column: 61, scope: !4531)
!4607 = !DILocation(line: 170, column: 38, scope: !4531)
!4608 = !DILocation(line: 170, column: 22, scope: !4531)
!4609 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4610)
!4610 = distinct !DILocation(line: 170, column: 10, scope: !4531)
!4611 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4610)
!4612 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4610)
!4613 = !DILocation(line: 473, column: 6, scope: !3511, inlinedAt: !4610)
!4614 = !DILocation(line: 170, column: 9, scope: !4531)
!4615 = !DILocation(line: 171, column: 22, scope: !4531)
!4616 = !DILocation(line: 171, column: 13, scope: !4533)
!4617 = !DILocation(line: 172, column: 19, scope: !4533)
!4618 = !DILocation(line: 172, column: 9, scope: !4533)
!4619 = !DILocation(line: 173, column: 53, scope: !4533)
!4620 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4621)
!4621 = distinct !DILocation(line: 173, column: 41, scope: !4533)
!4622 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4621)
!4623 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4621)
!4624 = !DILocation(line: 473, column: 6, scope: !3511, inlinedAt: !4621)
!4625 = !DILocation(line: 173, column: 40, scope: !4533)
!4626 = !DILocation(line: 173, column: 21, scope: !4533)
!4627 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4628)
!4628 = distinct !DILocation(line: 173, column: 10, scope: !4533)
!4629 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4628)
!4630 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4628)
!4631 = !DILocation(line: 473, column: 6, scope: !3511, inlinedAt: !4628)
!4632 = !DILocation(line: 173, column: 9, scope: !4533)
!4633 = !DILocation(line: 174, column: 9, scope: !4533)
!4634 = !DILocation(line: 465, column: 32, scope: !4398, inlinedAt: !4635)
!4635 = distinct !DILocation(line: 177, column: 56, scope: !4531)
!4636 = !DILocation(line: 465, column: 38, scope: !4398, inlinedAt: !4635)
!4637 = !DILocation(line: 472, column: 18, scope: !4398, inlinedAt: !4635)
!4638 = !DILocation(line: 473, column: 6, scope: !4398, inlinedAt: !4635)
!4639 = !DILocation(line: 177, column: 54, scope: !4531)
!4640 = !DILocation(line: 465, column: 32, scope: !4483, inlinedAt: !4641)
!4641 = distinct !DILocation(line: 177, column: 54, scope: !4531)
!4642 = !DILocation(line: 465, column: 38, scope: !4483, inlinedAt: !4641)
!4643 = !DILocation(line: 472, column: 18, scope: !4483, inlinedAt: !4641)
!4644 = !DILocation(line: 473, column: 6, scope: !4483, inlinedAt: !4641)
!4645 = !DILocation(line: 177, column: 52, scope: !4531)
!4646 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4647)
!4647 = distinct !DILocation(line: 177, column: 52, scope: !4531)
!4648 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4647)
!4649 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4647)
!4650 = !DILocation(line: 473, column: 6, scope: !3511, inlinedAt: !4647)
!4651 = !DILocation(line: 177, column: 46, scope: !4531)
!4652 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4653)
!4653 = distinct !DILocation(line: 184, column: 22, scope: !4535)
!4654 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4653)
!4655 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4653)
!4656 = !DILocation(line: 473, column: 6, scope: !3511, inlinedAt: !4653)
!4657 = !DILocation(line: 184, column: 5, scope: !4535)
!4658 = !DILocation(line: 130, column: 1, scope: !4509)
!4659 = !DILocation(line: 185, column: 2, scope: !4509)
!4660 = distinct !DISubprogram(name: "rust_check_some_ints", scope: !4662, file: !4661, line: 25, type: !4663, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !140)
!4661 = !DIFile(filename: "src/incomplete_arrays.rs", directory: "/home/calvin/git/c2rust/tests/arrays", checksumkind: CSK_MD5, checksum: "625178dbe5e451839aa9071df2b9dd44")
!4662 = !DINamespace(name: "incomplete_arrays", scope: !3)
!4663 = !DISubroutineType(types: !4664)
!4664 = !{!275}
!4665 = !DILocation(line: 26, column: 13, scope: !4660)
!4666 = !DILocalVariable(name: "self", arg: 1, scope: !4667, file: !557, line: 465, type: !902)
!4667 = distinct !DISubprogram(name: "offset<u32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h89287c0355a369e2E", scope: !558, file: !557, line: 465, type: !4668, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !910, retainedNodes: !4670)
!4668 = !DISubroutineType(types: !4669)
!4669 = !{!902, !902, !1326}
!4670 = !{!4666, !4671}
!4671 = !DILocalVariable(name: "count", arg: 2, scope: !4667, file: !557, line: 465, type: !1326)
!4672 = !DILocation(line: 465, column: 32, scope: !4667, inlinedAt: !4673)
!4673 = distinct !DILocation(line: 26, column: 13, scope: !4660)
!4674 = !DILocation(line: 465, column: 38, scope: !4667, inlinedAt: !4673)
!4675 = !DILocation(line: 472, column: 18, scope: !4667, inlinedAt: !4673)
!4676 = !DILocation(line: 26, column: 12, scope: !4660)
!4677 = !DILocation(line: 28, column: 13, scope: !4660)
!4678 = !DILocation(line: 465, column: 32, scope: !4667, inlinedAt: !4679)
!4679 = distinct !DILocation(line: 28, column: 13, scope: !4660)
!4680 = !DILocation(line: 465, column: 38, scope: !4667, inlinedAt: !4679)
!4681 = !DILocation(line: 472, column: 18, scope: !4667, inlinedAt: !4679)
!4682 = !DILocation(line: 28, column: 12, scope: !4660)
!4683 = !DILocation(line: 30, column: 13, scope: !4660)
!4684 = !DILocation(line: 465, column: 32, scope: !4667, inlinedAt: !4685)
!4685 = distinct !DILocation(line: 30, column: 13, scope: !4660)
!4686 = !DILocation(line: 465, column: 38, scope: !4667, inlinedAt: !4685)
!4687 = !DILocation(line: 472, column: 18, scope: !4667, inlinedAt: !4685)
!4688 = !DILocation(line: 30, column: 12, scope: !4660)
!4689 = !DILocation(line: 32, column: 13, scope: !4660)
!4690 = !DILocation(line: 465, column: 32, scope: !4667, inlinedAt: !4691)
!4691 = distinct !DILocation(line: 32, column: 13, scope: !4660)
!4692 = !DILocation(line: 465, column: 38, scope: !4667, inlinedAt: !4691)
!4693 = !DILocation(line: 472, column: 18, scope: !4667, inlinedAt: !4691)
!4694 = !DILocation(line: 32, column: 12, scope: !4660)
!4695 = !DILocation(line: 34, column: 2, scope: !4660)
!4696 = distinct !DISubprogram(name: "rust_new_sized_array", scope: !4662, file: !4661, line: 36, type: !4697, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !4707)
!4697 = !DISubroutineType(types: !4698)
!4698 = !{!4699, !34}
!4699 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut array_tests::incomplete_arrays::sized_array", baseType: !4700, size: 64, align: 64, dwarfAddressSpace: 0)
!4700 = !DICompositeType(tag: DW_TAG_structure_type, name: "sized_array", scope: !4662, file: !30, size: 64, align: 64, elements: !4701, templateParams: !140, identifier: "f5c4b94fcec13d24fd26a7a2975bdb04")
!4701 = !{!4702, !4703}
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !4700, file: !30, baseType: !34, size: 64, align: 64)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !4700, file: !30, baseType: !4704, align: 32, offset: 64)
!4704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, align: 32, elements: !4705)
!4705 = !{!4706}
!4706 = !DISubrange(count: 0, lowerBound: 0)
!4707 = !{!4708, !4709, !4711}
!4708 = !DILocalVariable(name: "n", arg: 1, scope: !4696, file: !4661, line: 36, type: !34)
!4709 = !DILocalVariable(name: "sz", scope: !4710, file: !4661, line: 37, type: !34, align: 8)
!4710 = distinct !DILexicalBlock(scope: !4696, file: !4661, line: 37, column: 5)
!4711 = !DILocalVariable(name: "res", scope: !4712, file: !4661, line: 44, type: !4699, align: 8)
!4712 = distinct !DILexicalBlock(scope: !4710, file: !4661, line: 44, column: 5)
!4713 = !DILocation(line: 36, column: 47, scope: !4696)
!4714 = !DILocation(line: 37, column: 23, scope: !4696)
!4715 = !DILocation(line: 41, column: 21, scope: !4696)
!4716 = !DILocation(line: 1254, column: 35, scope: !4588, inlinedAt: !4717)
!4717 = distinct !DILocation(line: 39, column: 13, scope: !4696)
!4718 = !DILocation(line: 1254, column: 41, scope: !4588, inlinedAt: !4717)
!4719 = !DILocation(line: 1255, column: 13, scope: !4588, inlinedAt: !4717)
!4720 = !DILocation(line: 39, column: 13, scope: !4696)
!4721 = !DILocalVariable(name: "self", arg: 1, scope: !4722, file: !223, line: 1189, type: !34)
!4722 = distinct !DISubprogram(name: "wrapping_add", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$12wrapping_add17h90c3da8f79f58448E", scope: !4589, file: !223, line: 1189, type: !4590, scopeLine: 1189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !4723)
!4723 = !{!4721, !4724}
!4724 = !DILocalVariable(name: "rhs", arg: 2, scope: !4722, file: !223, line: 1189, type: !34)
!4725 = !DILocation(line: 1189, column: 35, scope: !4722, inlinedAt: !4726)
!4726 = distinct !DILocation(line: 37, column: 22, scope: !4696)
!4727 = !DILocation(line: 1189, column: 41, scope: !4722, inlinedAt: !4726)
!4728 = !DILocation(line: 1190, column: 13, scope: !4722, inlinedAt: !4726)
!4729 = !DILocation(line: 37, column: 22, scope: !4696)
!4730 = !DILocation(line: 37, column: 9, scope: !4710)
!4731 = !DILocation(line: 44, column: 37, scope: !4710)
!4732 = !DILocation(line: 44, column: 9, scope: !4712)
!4733 = !DILocation(line: 45, column: 5, scope: !4712)
!4734 = !DILocation(line: 47, column: 2, scope: !4696)
!4735 = distinct !DISubprogram(name: "rust_sized_array_sum_last_n", scope: !4662, file: !4661, line: 49, type: !4736, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !4738)
!4736 = !DISubroutineType(types: !4737)
!4737 = !{!6, !4699, !34}
!4738 = !{!4739, !4740, !4741, !4743}
!4739 = !DILocalVariable(name: "a", arg: 1, scope: !4735, file: !4661, line: 50, type: !4699)
!4740 = !DILocalVariable(name: "n", arg: 2, scope: !4735, file: !4661, line: 51, type: !34)
!4741 = !DILocalVariable(name: "acc", scope: !4742, file: !4661, line: 53, type: !6, align: 4)
!4742 = distinct !DILexicalBlock(scope: !4735, file: !4661, line: 53, column: 5)
!4743 = !DILocalVariable(name: "i", scope: !4744, file: !4661, line: 54, type: !34, align: 8)
!4744 = distinct !DILexicalBlock(scope: !4742, file: !4661, line: 54, column: 5)
!4745 = !DILocation(line: 53, column: 9, scope: !4742)
!4746 = !DILocation(line: 50, column: 5, scope: !4735)
!4747 = !DILocation(line: 51, column: 5, scope: !4735)
!4748 = !DILocation(line: 54, column: 9, scope: !4744)
!4749 = !DILocation(line: 53, column: 37, scope: !4735)
!4750 = !DILocation(line: 54, column: 25, scope: !4742)
!4751 = !DILocalVariable(name: "self", arg: 1, scope: !4752, file: !223, line: 1231, type: !34)
!4752 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$12wrapping_sub17h2fcb60c8cae33e6aE", scope: !4589, file: !223, line: 1231, type: !4590, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !4753)
!4753 = !{!4751, !4754}
!4754 = !DILocalVariable(name: "rhs", arg: 2, scope: !4752, file: !223, line: 1231, type: !34)
!4755 = !DILocation(line: 1231, column: 35, scope: !4752, inlinedAt: !4756)
!4756 = distinct !DILocation(line: 54, column: 25, scope: !4742)
!4757 = !DILocation(line: 1231, column: 41, scope: !4752, inlinedAt: !4756)
!4758 = !DILocation(line: 1232, column: 13, scope: !4752, inlinedAt: !4756)
!4759 = !DILocation(line: 55, column: 11, scope: !4744)
!4760 = !DILocation(line: 55, column: 15, scope: !4744)
!4761 = !DILocation(line: 61, column: 2, scope: !4735)
!4762 = !DILocation(line: 56, column: 15, scope: !4744)
!4763 = !DILocation(line: 56, column: 33, scope: !4744)
!4764 = !DILocation(line: 56, column: 65, scope: !4744)
!4765 = !DILocation(line: 465, column: 32, scope: !4667, inlinedAt: !4766)
!4766 = distinct !DILocation(line: 56, column: 33, scope: !4744)
!4767 = !DILocation(line: 465, column: 38, scope: !4667, inlinedAt: !4766)
!4768 = !DILocation(line: 472, column: 18, scope: !4667, inlinedAt: !4766)
!4769 = !DILocation(line: 56, column: 32, scope: !4744)
!4770 = !DILocalVariable(name: "self", arg: 1, scope: !4771, file: !223, line: 1189, type: !6)
!4771 = distinct !DISubprogram(name: "wrapping_add", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$12wrapping_add17h0fbd9558745a3ef4E", scope: !4772, file: !223, line: 1189, type: !4773, scopeLine: 1189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !4775)
!4772 = !DINamespace(name: "{impl#8}", scope: !225)
!4773 = !DISubroutineType(types: !4774)
!4774 = !{!6, !6, !6}
!4775 = !{!4770, !4776}
!4776 = !DILocalVariable(name: "rhs", arg: 2, scope: !4771, file: !223, line: 1189, type: !6)
!4777 = !DILocation(line: 1189, column: 35, scope: !4771, inlinedAt: !4778)
!4778 = distinct !DILocation(line: 56, column: 15, scope: !4744)
!4779 = !DILocation(line: 1189, column: 41, scope: !4771, inlinedAt: !4778)
!4780 = !DILocation(line: 1190, column: 13, scope: !4771, inlinedAt: !4778)
!4781 = !DILocation(line: 56, column: 9, scope: !4744)
!4782 = !DILocation(line: 57, column: 13, scope: !4744)
!4783 = !DILocation(line: 1189, column: 35, scope: !4722, inlinedAt: !4784)
!4784 = distinct !DILocation(line: 57, column: 13, scope: !4744)
!4785 = !DILocation(line: 1189, column: 41, scope: !4722, inlinedAt: !4784)
!4786 = !DILocation(line: 1190, column: 13, scope: !4722, inlinedAt: !4784)
!4787 = !DILocation(line: 57, column: 9, scope: !4744)
!4788 = !DILocation(line: 55, column: 5, scope: !4744)
!4789 = distinct !DISubprogram(name: "rust_test_sized_array", scope: !4662, file: !4661, line: 63, type: !4790, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !4792)
!4790 = !DISubroutineType(types: !4791)
!4791 = !{!6}
!4792 = !{!4793, !4795, !4797}
!4793 = !DILocalVariable(name: "a", scope: !4794, file: !4661, line: 64, type: !4699, align: 8)
!4794 = distinct !DILexicalBlock(scope: !4789, file: !4661, line: 64, column: 5)
!4795 = !DILocalVariable(name: "i", scope: !4796, file: !4661, line: 65, type: !481, align: 4)
!4796 = distinct !DILexicalBlock(scope: !4794, file: !4661, line: 65, column: 5)
!4797 = !DILocalVariable(name: "sum", scope: !4798, file: !4661, line: 71, type: !6, align: 4)
!4798 = distinct !DILexicalBlock(scope: !4796, file: !4661, line: 71, column: 5)
!4799 = !DILocation(line: 65, column: 9, scope: !4796)
!4800 = !DILocation(line: 64, column: 35, scope: !4789)
!4801 = !DILocation(line: 64, column: 9, scope: !4794)
!4802 = !DILocation(line: 65, column: 34, scope: !4794)
!4803 = !DILocation(line: 66, column: 5, scope: !4796)
!4804 = !DILocation(line: 66, column: 11, scope: !4796)
!4805 = !DILocation(line: 71, column: 33, scope: !4796)
!4806 = !DILocation(line: 71, column: 9, scope: !4798)
!4807 = !DILocation(line: 67, column: 56, scope: !4796)
!4808 = !DILocation(line: 67, column: 10, scope: !4796)
!4809 = !DILocation(line: 67, column: 42, scope: !4796)
!4810 = !DILocation(line: 465, column: 32, scope: !4667, inlinedAt: !4811)
!4811 = distinct !DILocation(line: 67, column: 10, scope: !4796)
!4812 = !DILocation(line: 465, column: 38, scope: !4667, inlinedAt: !4811)
!4813 = !DILocation(line: 472, column: 18, scope: !4667, inlinedAt: !4811)
!4814 = !DILocation(line: 67, column: 9, scope: !4796)
!4815 = !DILocation(line: 68, column: 9, scope: !4796)
!4816 = !DILocation(line: 75, column: 10, scope: !4798)
!4817 = !DILocation(line: 75, column: 5, scope: !4798)
!4818 = !DILocation(line: 77, column: 2, scope: !4789)
!4819 = distinct !DISubprogram(name: "rust_entry2", scope: !4662, file: !4661, line: 79, type: !3318, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !26, templateParams: !140, retainedNodes: !4820)
!4820 = !{!4821, !4822, !4823, !4825, !4829, !4831, !4833, !4836}
!4821 = !DILocalVariable(name: "buffer_size", arg: 1, scope: !4819, file: !4661, line: 80, type: !6)
!4822 = !DILocalVariable(name: "buffer", arg: 2, scope: !4819, file: !4661, line: 81, type: !856)
!4823 = !DILocalVariable(name: "arr", scope: !4824, file: !4661, line: 83, type: !3431, align: 4)
!4824 = distinct !DILexicalBlock(scope: !4819, file: !4661, line: 83, column: 5)
!4825 = !DILocalVariable(name: "p_arr", scope: !4826, file: !4661, line: 88, type: !4827, align: 8)
!4826 = distinct !DILexicalBlock(scope: !4824, file: !4661, line: 88, column: 5)
!4827 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut [i32; 0]", baseType: !4828, size: 64, align: 64, dwarfAddressSpace: 0)
!4828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, align: 32, elements: !4705)
!4829 = !DILocalVariable(name: "x", scope: !4830, file: !4661, line: 90, type: !481, align: 4)
!4830 = distinct !DILexicalBlock(scope: !4826, file: !4661, line: 90, column: 5)
!4831 = !DILocalVariable(name: "carr", scope: !4832, file: !4661, line: 94, type: !3431, align: 4)
!4832 = distinct !DILexicalBlock(scope: !4830, file: !4661, line: 94, column: 5)
!4833 = !DILocalVariable(name: "p_carr", scope: !4834, file: !4661, line: 99, type: !4835, align: 8)
!4834 = distinct !DILexicalBlock(scope: !4832, file: !4661, line: 99, column: 5)
!4835 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const [i32; 0]", baseType: !4828, size: 64, align: 64, dwarfAddressSpace: 0)
!4836 = !DILocalVariable(name: "cx", scope: !4837, file: !4661, line: 101, type: !481, align: 4)
!4837 = distinct !DILexicalBlock(scope: !4834, file: !4661, line: 101, column: 5)
!4838 = !DILocation(line: 80, column: 5, scope: !4819)
!4839 = !DILocation(line: 81, column: 5, scope: !4819)
!4840 = !DILocation(line: 83, column: 9, scope: !4824)
!4841 = !DILocation(line: 94, column: 9, scope: !4832)
!4842 = !DILocation(line: 83, column: 41, scope: !4819)
!4843 = !DILocation(line: 88, column: 48, scope: !4824)
!4844 = !DILocation(line: 88, column: 9, scope: !4826)
!4845 = !DILocation(line: 90, column: 35, scope: !4826)
!4846 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4847)
!4847 = distinct !DILocation(line: 90, column: 35, scope: !4826)
!4848 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4847)
!4849 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4847)
!4850 = !DILocation(line: 90, column: 34, scope: !4826)
!4851 = !DILocation(line: 90, column: 9, scope: !4830)
!4852 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4853)
!4853 = distinct !DILocation(line: 93, column: 6, scope: !4830)
!4854 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4853)
!4855 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4853)
!4856 = !DILocation(line: 93, column: 6, scope: !4830)
!4857 = !DILocation(line: 93, column: 5, scope: !4830)
!4858 = !DILocation(line: 94, column: 38, scope: !4830)
!4859 = !DILocation(line: 99, column: 51, scope: !4832)
!4860 = !DILocation(line: 99, column: 9, scope: !4834)
!4861 = !DILocation(line: 101, column: 36, scope: !4834)
!4862 = !DILocalVariable(name: "self", arg: 1, scope: !4863, file: !4864, line: 453, type: !480)
!4863 = distinct !DISubprogram(name: "offset<i32>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h434db0486f8461a3E", scope: !4865, file: !4864, line: 453, type: !4867, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !26, templateParams: !482, retainedNodes: !4869)
!4864 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "1874e43cb83f8af3048974827047cb9c")
!4865 = !DINamespace(name: "{impl#0}", scope: !4866)
!4866 = !DINamespace(name: "const_ptr", scope: !124)
!4867 = !DISubroutineType(types: !4868)
!4868 = !{!480, !480, !1326}
!4869 = !{!4862, !4870}
!4870 = !DILocalVariable(name: "count", arg: 2, scope: !4863, file: !4864, line: 453, type: !1326)
!4871 = !DILocation(line: 453, column: 32, scope: !4863, inlinedAt: !4872)
!4872 = distinct !DILocation(line: 101, column: 36, scope: !4834)
!4873 = !DILocation(line: 453, column: 38, scope: !4863, inlinedAt: !4872)
!4874 = !DILocation(line: 458, column: 18, scope: !4863, inlinedAt: !4872)
!4875 = !DILocation(line: 101, column: 35, scope: !4834)
!4876 = !DILocation(line: 101, column: 9, scope: !4837)
!4877 = !DILocation(line: 465, column: 32, scope: !3511, inlinedAt: !4878)
!4878 = distinct !DILocation(line: 104, column: 6, scope: !4837)
!4879 = !DILocation(line: 465, column: 38, scope: !3511, inlinedAt: !4878)
!4880 = !DILocation(line: 472, column: 18, scope: !3511, inlinedAt: !4878)
!4881 = !DILocation(line: 104, column: 6, scope: !4837)
!4882 = !DILocation(line: 104, column: 5, scope: !4837)
!4883 = !DILocation(line: 105, column: 2, scope: !4819)
