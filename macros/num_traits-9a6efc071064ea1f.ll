; ModuleID = 'num_traits.ecb74699-cgu.0'
source_filename = "num_traits.ecb74699-cgu.0"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>" = type { { i8*, i8* }, { i8*, i8* }, i64, i64, i64 }
%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>" = type { { i8*, i8* }, { i8*, i8* }, i64, i64, i64 }
%"core::option::Option<(u8, u8)>" = type { i8, [2 x i8] }
%"core::ops::control_flow::ControlFlow<(), core::convert::Infallible>::Break" = type { {} }
%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked::{closure#0}]" = type { i64*, i64*, { [0 x i8]*, i64 }* }
%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>" = type { { i8*, i8* }, i64 }
%"core::option::Option<core::convert::Infallible>::None" = type {}
%"core::panic::location::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"core::option::Option<(u8, u8)>::Some" = type { [1 x i8], { i8, i8 } }
%"core::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%"[closure@core::f32::<impl f32>::to_bits::{closure#0}]" = type {}
%"[closure@core::f64::<impl f64>::to_bits::{closure#0}]" = type {}
%"core::fmt::Arguments" = type { { [0 x { [0 x i8]*, i64 }]*, i64 }, { i64*, i64 }, { [0 x { i8*, i64* }]*, i64 } }
%"core::num::dec2flt::decimal::Decimal" = type { i64, i32, i8, [768 x i8], [3 x i8] }
%"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]" = type {}
%"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]" = type {}
%"core::option::Option<(f64, usize)>" = type { i64, [2 x i64] }
%"core::option::Option<(f64, usize)>::Some" = type { [1 x i64], { double, i64 } }
%"core::option::Option<(f32, usize)>" = type { i64, [2 x i64] }
%"core::option::Option<(f32, usize)>::Some" = type { [1 x i64], { float, i64 } }
%"core::result::Result<f32, core::num::dec2flt::ParseFloatError>" = type { i8, [7 x i8] }
%"core::result::Result<f64, core::num::dec2flt::ParseFloatError>" = type { i8, [15 x i8] }
%"[closure@<[u8] as core::num::dec2flt::common::ByteSlice>::starts_with_ignore_case::{closure#0}]" = type {}
%"core::num::dec2flt::number::Number" = type { i64, i64, i8, i8, [6 x i8] }
%"core::option::Option<core::num::dec2flt::number::Number>" = type { [16 x i8], i8, [7 x i8] }
%"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Err" = type { [1 x i8], i8 }
%"core::option::Option<core::num::dec2flt::number::Number>::Some" = type { %"core::num::dec2flt::number::Number" }
%"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Ok" = type { [1 x i64], double }
%"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Ok" = type { [1 x i32], float }
%"core::result::Result<usize, core::num::error::ParseIntError>" = type { i8, [15 x i8] }
%"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]" = type {}
%"[closure@core::iter::traits::iterator::Iterator::all::check<(u8, u8), [closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]>::{closure#0}]" = type { %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]" }
%"core::ptr::metadata::PtrComponents<u8>" = type { {}*, {} }
%"core::ptr::metadata::PtrRepr<u8>" = type { [1 x i64] }
%"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]" = type {}
%"core::result::Result<f32, ParseFloatError>" = type { i8, [7 x i8] }
%"core::result::Result<f32, ParseFloatError>::Ok" = type { [1 x i32], float }
%"core::result::Result<f32, ParseFloatError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<f64, ParseFloatError>" = type { i8, [15 x i8] }
%"core::result::Result<f64, ParseFloatError>::Ok" = type { [1 x i64], double }
%"core::result::Result<f64, ParseFloatError>::Err" = type { [1 x i8], i8 }
%"core::option::Option<(char, &str)>" = type { i32, [5 x i32] }
%"core::option::Option<(char, &str)>::Some" = type { { i32, [1 x i32], { [0 x i8]*, i64 } } }
%"core::result::Result<usize, core::num::error::ParseIntError>::Ok" = type { [1 x i64], i64 }
%"unwind::libunwind::_Unwind_Exception" = type { i64, void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [6 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

@alloc6353 = private unnamed_addr constant <{ [91 x i8] }> <{ [91 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/adapters/enumerate.rs" }>, align 1
@alloc6354 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc6353, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\000\00\00\00\09\00\00\00" }>, align 8
@str.0 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc6184 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc6185 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc6184, i32 0, i32 0, i32 0), [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc6395 = private unnamed_addr constant <{}> zeroinitializer, align 8
@alloc6355 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/mod.rs" }>, align 1
@alloc6356 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc6355, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\88\01\00\00\0D\00\00\00" }>, align 8
@0 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"\00\03\06\09\0D\10\13\17\1A\1D!$'+.158;" }>, align 1
@alloc6359 = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/dec2flt/slow.rs" }>, align 1
@alloc6360 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc6359, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00!\00\00\00\1D\00\00\00" }>, align 8
@alloc6393 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"nan" }>, align 1
@alloc6389 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"inf" }>, align 1
@alloc6361 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/dec2flt/common.rs" }>, align 1
@alloc6362 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc6361, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\000\00\00\00\0A\00\00\00" }>, align 8
@1 = private unnamed_addr constant <{ [128 x i8] }> <{ [128 x i8] c"\01\00\00\00\00\00\00\00\0A\00\00\00\00\00\00\00d\00\00\00\00\00\00\00\E8\03\00\00\00\00\00\00\10'\00\00\00\00\00\00\A0\86\01\00\00\00\00\00@B\0F\00\00\00\00\00\80\96\98\00\00\00\00\00\00\E1\F5\05\00\00\00\00\00\CA\9A;\00\00\00\00\00\E4\0BT\02\00\00\00\00\E8vH\17\00\00\00\00\10\A5\D4\E8\00\00\00\00\A0rN\18\09\00\00\00@z\10\F3Z\00\00\00\80\C6\A4~\8D\03\00" }>, align 8
@alloc6363 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/dec2flt/number.rs" }>, align 1
@alloc6364 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc6363, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00H\00\00\00:\00\00\00" }>, align 8
@alloc6179 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"to_digit: radix is too high (maximum 36)" }>, align 1
@alloc6180 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [40 x i8] }>, <{ [40 x i8] }>* @alloc6179, i32 0, i32 0, i32 0), [8 x i8] c"(\00\00\00\00\00\00\00" }>, align 8
@alloc6365 = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/char/methods.rs" }>, align 1
@alloc6366 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc6365, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00]\01\00\00\0D\00\00\00" }>, align 8
@alloc6166 = private unnamed_addr constant <{ [1 x i8] }> zeroinitializer, align 1
@alloc6369 = private unnamed_addr constant <{ [91 x i8] }> <{ [91 x i8] c"/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/float.rs" }>, align 1
@alloc6368 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc6369, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00\0B\08\00\00\05\00\00\00" }>, align 8
@str.1 = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc6370 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc6369, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00\19\08\00\00\05\00\00\00" }>, align 8
@alloc6371 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"invalid float literal" }>, align 1
@alloc6372 = private unnamed_addr constant <{ [36 x i8] }> <{ [36 x i8] c"cannot parse float from empty string" }>, align 1
@alloc6373 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"Invalid" }>, align 1
@alloc6374 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Empty" }>, align 1
@alloc6375 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"ParseFloatError" }>, align 1
@alloc6376 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"kind" }>, align 1
@vtable.2 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (i8**)* @"_ZN4core3ptr51drop_in_place$LT$$RF$num_traits..FloatErrorKind$GT$17h6269996c26482c3bE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i8**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8581425018b943f1E" to i8*) }>, align 8, !dbg !0
@alloc6390 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"infinity" }>, align 1
@alloc6391 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"-inf" }>, align 1
@alloc6392 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"-infinity" }>, align 1
@alloc6394 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"-nan" }>, align 1
@alloc6387 = private unnamed_addr constant <{ [89 x i8] }> <{ [89 x i8] c"/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs" }>, align 1
@alloc6388 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [89 x i8] }>, <{ [89 x i8] }>* @alloc6387, i32 0, i32 0, i32 0), [16 x i8] c"Y\00\00\00\00\00\00\00\88\01\00\00\01\00\00\00" }>, align 8

; <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4a8492ba729d29abE"(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* align 8 %self) unnamed_addr #0 !dbg !55 {
start:
  %self.dbg.spill = alloca %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"*, align 8
  store %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %self, %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"** %self.dbg.spill, metadata !114, metadata !DIExpression()), !dbg !115
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
  %0 = call { i8*, i8* } @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17h21390a2de8906e8eE"(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* align 8 %self), !dbg !116
  %1 = extractvalue { i8*, i8* } %0, 0, !dbg !116
  %2 = extractvalue { i8*, i8* } %0, 1, !dbg !116
  br label %bb1, !dbg !116

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i8* } undef, i8* %1, 0, !dbg !117
  %4 = insertvalue { i8*, i8* } %3, i8* %2, 1, !dbg !117
  ret { i8*, i8* } %4, !dbg !117
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define i24 @"_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h837551cd9ed82fb3E"(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* align 8 %self) unnamed_addr #0 !dbg !118 {
start:
  %0 = alloca i24, align 4
  %self.dbg.spill = alloca %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"*, align 8
  %1 = alloca %"core::option::Option<(u8, u8)>", align 1
  store %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %self, %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"** %self.dbg.spill, metadata !161, metadata !DIExpression()), !dbg !162
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
  %2 = call i24 @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17h2465c73547f4a034E"(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* align 8 %self), !dbg !163
  store i24 %2, i24* %0, align 4, !dbg !163
  %3 = bitcast %"core::option::Option<(u8, u8)>"* %1 to i8*, !dbg !163
  %4 = bitcast i24* %0 to i8*, !dbg !163
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 4 %4, i64 3, i1 false), !dbg !163
  br label %bb1, !dbg !163

bb1:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<(u8, u8)>"* %1 to i24*, !dbg !164
  %6 = load i24, i24* %5, align 1, !dbg !164
  ret i24 %6, !dbg !164
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
; Function Attrs: nonlazybind uwtable
define i8 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h19dc1639f28d90b1E"({ i8*, i8* }* align 8 %self, i64 %idx) unnamed_addr #1 !dbg !165 {
start:
  %idx.dbg.spill1 = alloca i64, align 8
  %it.dbg.spill = alloca { i8*, i8* }*, align 8
  %idx.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !172, metadata !DIExpression()), !dbg !175
  store i64 %idx, i64* %idx.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %idx.dbg.spill, metadata !173, metadata !DIExpression()), !dbg !176
  store { i8*, i8* }* %self, { i8*, i8* }** %it.dbg.spill, align 8, !dbg !177
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %it.dbg.spill, metadata !178, metadata !DIExpression()), !dbg !186
  store i64 %idx, i64* %idx.dbg.spill1, align 8, !dbg !188
  call void @llvm.dbg.declare(metadata i64* %idx.dbg.spill1, metadata !185, metadata !DIExpression()), !dbg !186
; call <I as core::iter::adapters::zip::SpecTrustedRandomAccess>::try_get_unchecked
  %_3 = call align 1 i8* @"_ZN72_$LT$I$u20$as$u20$core..iter..adapters..zip..SpecTrustedRandomAccess$GT$17try_get_unchecked17h48c4431c05125caeE"({ i8*, i8* }* align 8 %self, i64 %idx), !dbg !186
  br label %bb1, !dbg !186

bb1:                                              ; preds = %start
  %0 = load i8, i8* %_3, align 1, !dbg !189
  ret i8 %0, !dbg !190
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: nonlazybind uwtable
define void @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h9ed59b6c5a0a8a4aE"({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %0, { i8*, i8* }* align 8 %self) unnamed_addr #1 !dbg !191 {
start:
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !213, metadata !DIExpression()), !dbg !214
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h69a171558dec0b6eE"({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %0, { i8*, i8* }* align 8 %self), !dbg !215
  br label %bb1, !dbg !215

bb1:                                              ; preds = %start
  ret void, !dbg !216
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h1e66e656f3c187b8E"() unnamed_addr #0 !dbg !217 {
start:
  %b.dbg.spill = alloca {}, align 1
  %residual.dbg.spill = alloca %"core::ops::control_flow::ControlFlow<(), core::convert::Infallible>::Break", align 1
  %0 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata %"core::ops::control_flow::ControlFlow<(), core::convert::Infallible>::Break"* %residual.dbg.spill, metadata !259, metadata !DIExpression()), !dbg !262
  call void @llvm.dbg.declare(metadata {}* %b.dbg.spill, metadata !260, metadata !DIExpression()), !dbg !263
  %1 = getelementptr i8, i8* %0, i64 1, !dbg !264
  %2 = bitcast i8* %1 to {}*, !dbg !264
  store i8 1, i8* %0, align 1, !dbg !264
  %3 = load i8, i8* %0, align 1, !dbg !265, !range !266, !noundef !19
  %4 = trunc i8 %3 to i1, !dbg !265
  ret i1 %4, !dbg !265
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h027adc00ed696f09E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !267 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill4 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_22 = alloca { i8*, i64 }, align 8
  %_21 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %runtime = alloca %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked::{closure#0}]", align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !286, metadata !DIExpression()), !dbg !300
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !287, metadata !DIExpression()), !dbg !301
  call void @llvm.dbg.declare(metadata %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked::{closure#0}]"* %runtime, metadata !288, metadata !DIExpression()), !dbg !302
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !303
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !303
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !303
  store i64 %slice.1, i64* %6, align 8, !dbg !303
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !304, metadata !DIExpression()), !dbg !313
  %self = bitcast [0 x i8]* %slice.0 to i8*, !dbg !313
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !313
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !314, metadata !DIExpression()), !dbg !322
  store i64 %self.0, i64* %count.dbg.spill, align 8, !dbg !323
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !321, metadata !DIExpression()), !dbg !322
  store i8* %self, i8** %self.dbg.spill3, align 8, !dbg !322
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !324, metadata !DIExpression()), !dbg !332
  store i64 %self.0, i64* %count.dbg.spill4, align 8, !dbg !322
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill4, metadata !331, metadata !DIExpression()), !dbg !332
  %7 = getelementptr inbounds i8, i8* %self, i64 %self.0, !dbg !332
  store i8* %7, i8** %0, align 8, !dbg !332
  %data = load i8*, i8** %0, align 8, !dbg !332
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !332
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !334, metadata !DIExpression()), !dbg !342
  br label %bb1, !dbg !332

bb1:                                              ; preds = %start
  %len = sub i64 %self.1, %self.0, !dbg !344
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !344
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !341, metadata !DIExpression()), !dbg !342
  store i8* %data, i8** %self.dbg.spill5, align 8, !dbg !342
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !345, metadata !DIExpression()), !dbg !353
  %data_address = bitcast i8* %data to {}*, !dbg !353
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !353
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !355, metadata !DIExpression()), !dbg !364
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !342
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !363, metadata !DIExpression()), !dbg !364
  %8 = bitcast { i8*, i64 }* %_22 to {}**, !dbg !364
  store {}* %data_address, {}** %8, align 8, !dbg !364
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_22, i32 0, i32 1, !dbg !364
  store i64 %len, i64* %9, align 8, !dbg !364
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_21 to { i8*, i64 }*, !dbg !364
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_22, i32 0, i32 0, !dbg !364
  %12 = load i8*, i8** %11, align 8, !dbg !364
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_22, i32 0, i32 1, !dbg !364
  %14 = load i64, i64* %13, align 8, !dbg !364
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 0, !dbg !364
  store i8* %12, i8** %15, align 8, !dbg !364
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 1, !dbg !364
  store i64 %14, i64* %16, align 8, !dbg !364
  %17 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_21 to { [0 x i8]*, i64 }*, !dbg !364
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 0, !dbg !364
  %19 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !364
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 1, !dbg !364
  %21 = load i64, i64* %20, align 8, !dbg !364
  %22 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %19, 0, !dbg !366
  %23 = insertvalue { [0 x i8]*, i64 } %22, i64 %21, 1, !dbg !366
  ret { [0 x i8]*, i64 } %23, !dbg !366
}

; <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8661d2a79e81aa4fE"(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !367 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %i.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i32, align 4
  %val.dbg.spill = alloca i32, align 4
  %v.dbg.spill = alloca i32, align 4
  %residual.dbg.spill2 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %self.dbg.spill = alloca %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"*, align 8
  %_12 = alloca { i64, i32 }, align 8
  %self1 = alloca i32, align 4
  %_3 = alloca i32, align 4
  %1 = alloca { i64, i32 }, align 8
  store %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* %self, %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** %self.dbg.spill, metadata !403, metadata !DIExpression()), !dbg !424
  call void @llvm.dbg.declare(metadata i32* %self1, metadata !425, metadata !DIExpression()), !dbg !465
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !406, metadata !DIExpression()), !dbg !467
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill2, metadata !468, metadata !DIExpression()), !dbg !475
  %_5 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* %self to { i8*, i8* }*, !dbg !466
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %2 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc2c8c40ef0f18e21E"({ i8*, i8* }* align 8 %_5), !dbg !466, !range !477
  store i32 %2, i32* %self1, align 4, !dbg !466
  br label %bb1, !dbg !466

bb1:                                              ; preds = %start
  %3 = load i32, i32* %self1, align 4, !dbg !465, !range !477, !noundef !19
  %4 = sub i32 %3, 1114112, !dbg !465
  %5 = icmp eq i32 %4, 0, !dbg !465
  %_15 = select i1 %5, i64 0, i64 1, !dbg !465
  switch i64 %_15, label %bb11 [
    i64 0, label %bb10
    i64 1, label %bb12
  ], !dbg !465

bb11:                                             ; preds = %bb1
  unreachable, !dbg !465

bb10:                                             ; preds = %bb1
  store i32 1114112, i32* %_3, align 4, !dbg !465
  br label %bb2, !dbg !465

bb12:                                             ; preds = %bb1
  %v = load i32, i32* %self1, align 4, !dbg !465, !range !478, !noundef !19
  store i32 %v, i32* %v.dbg.spill, align 4, !dbg !465
  call void @llvm.dbg.declare(metadata i32* %v.dbg.spill, metadata !462, metadata !DIExpression()), !dbg !479
  store i32 %v, i32* %_3, align 4, !dbg !479
  br label %bb2, !dbg !465

bb2:                                              ; preds = %bb10, %bb12
  %6 = load i32, i32* %_3, align 4, !dbg !466, !range !477, !noundef !19
  %7 = sub i32 %6, 1114112, !dbg !466
  %8 = icmp eq i32 %7, 0, !dbg !466
  %_6 = select i1 %8, i64 1, i64 0, !dbg !466
  switch i64 %_6, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !466

bb4:                                              ; preds = %bb2
  unreachable, !dbg !466

bb3:                                              ; preds = %bb2
  %val = load i32, i32* %_3, align 4, !dbg !466, !range !478, !noundef !19
  store i32 %val, i32* %val.dbg.spill, align 4, !dbg !466
  call void @llvm.dbg.declare(metadata i32* %val.dbg.spill, metadata !420, metadata !DIExpression()), !dbg !480
  store i32 %val, i32* %a.dbg.spill, align 4, !dbg !480
  call void @llvm.dbg.declare(metadata i32* %a.dbg.spill, metadata !404, metadata !DIExpression()), !dbg !481
  %9 = getelementptr inbounds %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>", %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* %self, i32 0, i32 1, !dbg !482
  %i = load i64, i64* %9, align 8, !dbg !482
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !482
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !422, metadata !DIExpression()), !dbg !483
  %10 = getelementptr inbounds %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>", %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* %self, i32 0, i32 1, !dbg !484
  %11 = load i64, i64* %10, align 8, !dbg !484
  %12 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %11, i64 1), !dbg !484
  %_11.0 = extractvalue { i64, i1 } %12, 0, !dbg !484
  %_11.1 = extractvalue { i64, i1 } %12, 1, !dbg !484
  %13 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !484
  br i1 %13, label %panic, label %bb6, !dbg !484

bb5:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %1, i32 0, i32 1, !dbg !475
  store i32 1114112, i32* %14, align 8, !dbg !475
  br label %bb7, !dbg !485

bb7:                                              ; preds = %bb6, %bb5
  %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %1, i32 0, i32 0, !dbg !485
  %16 = load i64, i64* %15, align 8, !dbg !485
  %17 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %1, i32 0, i32 1, !dbg !485
  %18 = load i32, i32* %17, align 8, !dbg !485, !range !477, !noundef !19
  %19 = insertvalue { i64, i32 } undef, i64 %16, 0, !dbg !485
  %20 = insertvalue { i64, i32 } %19, i32 %18, 1, !dbg !485
  ret { i64, i32 } %20, !dbg !485

bb6:                                              ; preds = %bb3
  %21 = getelementptr inbounds %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>", %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* %self, i32 0, i32 1, !dbg !484
  store i64 %_11.0, i64* %21, align 8, !dbg !484
  %22 = bitcast { i64, i32 }* %_12 to i64*, !dbg !486
  store i64 %i, i64* %22, align 8, !dbg !486
  %23 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_12, i32 0, i32 1, !dbg !486
  store i32 %val, i32* %23, align 8, !dbg !486
  %24 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_12, i32 0, i32 0, !dbg !487
  %25 = load i64, i64* %24, align 8, !dbg !487
  %26 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_12, i32 0, i32 1, !dbg !487
  %27 = load i32, i32* %26, align 8, !dbg !487, !range !478, !noundef !19
  %28 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %1, i32 0, i32 0, !dbg !487
  store i64 %25, i64* %28, align 8, !dbg !487
  %29 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %1, i32 0, i32 1, !dbg !487
  store i32 %27, i32* %29, align 8, !dbg !487
  br label %bb7, !dbg !485

panic:                                            ; preds = %bb3
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc6354 to %"core::panic::location::Location"*)) #7
          to label %unreachable unwind label %cleanup, !dbg !484

bb8:                                              ; preds = %cleanup
  br label %bb9, !dbg !488

cleanup:                                          ; preds = %panic
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  %32 = extractvalue { i8*, i32 } %30, 1
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %32, i32* %34, align 8
  br label %bb8

unreachable:                                      ; preds = %panic
  unreachable

bb9:                                              ; preds = %bb8
  %35 = bitcast { i8*, i32 }* %0 to i8**, !dbg !489
  %36 = load i8*, i8** %35, align 8, !dbg !489
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !489
  %38 = load i32, i32* %37, align 8, !dbg !489
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0, !dbg !489
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1, !dbg !489
  resume { i8*, i32 } %40, !dbg !489
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hb301fe5216e6dc3bE"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !490 {
start:
  %ptr.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_20 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_14 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !514, metadata !DIExpression()), !dbg !516
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !515, metadata !DIExpression()), !dbg !517
  %_3 = icmp ugt i64 %self, %slice.1, !dbg !518
  br i1 %_3, label %bb1, label %bb2, !dbg !518

bb2:                                              ; preds = %start
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !519
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !520, metadata !DIExpression()), !dbg !526
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill2, i32 0, i32 0, !dbg !527
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8, !dbg !527
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill2, i32 0, i32 1, !dbg !527
  store i64 %slice.1, i64* %4, align 8, !dbg !527
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill2, metadata !525, metadata !DIExpression()), !dbg !526
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !526
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !526
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !526
  store i64 %slice.1, i64* %6, align 8, !dbg !526
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !528, metadata !DIExpression()), !dbg !534
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !534
  store [0 x i8]* %slice.0, [0 x i8]** %7, align 8, !dbg !534
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !534
  store i64 %slice.1, i64* %8, align 8, !dbg !534
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill, metadata !536, metadata !DIExpression()), !dbg !540
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_20 to { [0 x i8]*, i64 }*, !dbg !540
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0, !dbg !540
  store [0 x i8]* %slice.0, [0 x i8]** %10, align 8, !dbg !540
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1, !dbg !540
  store i64 %slice.1, i64* %11, align 8, !dbg !540
  %12 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_20 to { i8*, i64 }*, !dbg !540
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %12, i32 0, i32 1, !dbg !540
  %_16 = load i64, i64* %13, align 8, !dbg !540
  %14 = bitcast { i64, i64 }* %_14 to i64*, !dbg !526
  store i64 %self, i64* %14, align 8, !dbg !526
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 1, !dbg !526
  store i64 %_16, i64* %15, align 8, !dbg !526
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 0, !dbg !526
  %17 = load i64, i64* %16, align 8, !dbg !526
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 1, !dbg !526
  %19 = load i64, i64* %18, align 8, !dbg !526
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %20 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h027adc00ed696f09E"(i64 %17, i64 %19, [0 x i8]* %slice.0, i64 %slice.1), !dbg !526
  %_11.0 = extractvalue { [0 x i8]*, i64 } %20, 0, !dbg !526
  %_11.1 = extractvalue { [0 x i8]*, i64 } %20, 1, !dbg !526
  br label %bb3, !dbg !526

bb1:                                              ; preds = %start
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17hd34676e4711f38b9E(i64 %self, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) #7, !dbg !542
  unreachable, !dbg !542

bb3:                                              ; preds = %bb2
  %21 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_11.0, 0, !dbg !543
  %22 = insertvalue { [0 x i8]*, i64 } %21, i64 %_11.1, 1, !dbg !543
  ret { [0 x i8]*, i64 } %22, !dbg !543
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17h217811916799bea8E"(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* sret(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>") %0, i8* %1, i8* %2, i8* %3, i8* %4) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !544 {
start:
  %len.dbg.spill = alloca i64, align 8
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %a_len.dbg.spill = alloca i64, align 8
  %5 = alloca { i8*, i32 }, align 8
  %b = alloca { i8*, i8* }, align 8
  %a = alloca { i8*, i8* }, align 8
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a, i32 0, i32 0
  store i8* %1, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a, i32 0, i32 1
  store i8* %2, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b, i32 0, i32 0
  store i8* %3, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b, i32 0, i32 1
  store i8* %4, i8** %9, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %a, metadata !549, metadata !DIExpression()), !dbg !555
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %b, metadata !550, metadata !DIExpression()), !dbg !556
; invoke core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
  %a_len = invoke i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hcb4ffd2378459e25E({ i8*, i8* }* align 8 %a)
          to label %bb1 unwind label %cleanup, !dbg !557

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !558

cleanup:                                          ; preds = %bb2, %bb1, %start
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3

bb1:                                              ; preds = %start
  store i64 %a_len, i64* %a_len.dbg.spill, align 8, !dbg !557
  call void @llvm.dbg.declare(metadata i64* %a_len.dbg.spill, metadata !551, metadata !DIExpression()), !dbg !559
  store i64 %a_len, i64* %v1.dbg.spill, align 8, !dbg !560
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !561, metadata !DIExpression()), !dbg !569
; invoke core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
  %v2 = invoke i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hcb4ffd2378459e25E({ i8*, i8* }* align 8 %b)
          to label %bb2 unwind label %cleanup, !dbg !571

bb2:                                              ; preds = %bb1
  store i64 %v2, i64* %v2.dbg.spill, align 8, !dbg !571
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !568, metadata !DIExpression()), !dbg !569
; invoke core::cmp::Ord::min
  %len = invoke i64 @_ZN4core3cmp3Ord3min17hcb69de752336567cE(i64 %a_len, i64 %v2)
          to label %bb6 unwind label %cleanup, !dbg !569

bb6:                                              ; preds = %bb2
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !569
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !553, metadata !DIExpression()), !dbg !572
  %15 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a, i32 0, i32 0, !dbg !573
  %_9.0 = load i8*, i8** %15, align 8, !dbg !573, !nonnull !19, !noundef !19
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a, i32 0, i32 1, !dbg !573
  %_9.1 = load i8*, i8** %16, align 8, !dbg !573
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b, i32 0, i32 0, !dbg !574
  %_10.0 = load i8*, i8** %17, align 8, !dbg !574, !nonnull !19, !noundef !19
  %18 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b, i32 0, i32 1, !dbg !574
  %_10.1 = load i8*, i8** %18, align 8, !dbg !574
  %19 = bitcast %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %0 to { i8*, i8* }*, !dbg !575
  %20 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %19, i32 0, i32 0, !dbg !575
  store i8* %_9.0, i8** %20, align 8, !dbg !575
  %21 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %19, i32 0, i32 1, !dbg !575
  store i8* %_9.1, i8** %21, align 8, !dbg !575
  %22 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>", %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %0, i32 0, i32 1, !dbg !575
  %23 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %22, i32 0, i32 0, !dbg !575
  store i8* %_10.0, i8** %23, align 8, !dbg !575
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %22, i32 0, i32 1, !dbg !575
  store i8* %_10.1, i8** %24, align 8, !dbg !575
  %25 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>", %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %0, i32 0, i32 2, !dbg !575
  store i64 0, i64* %25, align 8, !dbg !575
  %26 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>", %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %0, i32 0, i32 3, !dbg !575
  store i64 %len, i64* %26, align 8, !dbg !575
  %27 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>", %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %0, i32 0, i32 4, !dbg !575
  store i64 %a_len, i64* %27, align 8, !dbg !575
  ret void, !dbg !576

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !558

bb5:                                              ; preds = %bb4
  %28 = bitcast { i8*, i32 }* %5 to i8**, !dbg !577
  %29 = load i8*, i8** %28, align 8, !dbg !577
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1, !dbg !577
  %31 = load i32, i32* %30, align 8, !dbg !577
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0, !dbg !577
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1, !dbg !577
  resume { i8*, i32 } %33, !dbg !577
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17h737ceea019c6f944E"(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* sret(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>") %0, i8* %1, i8* %2, i8* %3, i8* %4) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !578 {
start:
  %len.dbg.spill = alloca i64, align 8
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %a_len.dbg.spill = alloca i64, align 8
  %5 = alloca { i8*, i32 }, align 8
  %b = alloca { i8*, i8* }, align 8
  %a = alloca { i8*, i8* }, align 8
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a, i32 0, i32 0
  store i8* %1, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a, i32 0, i32 1
  store i8* %2, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b, i32 0, i32 0
  store i8* %3, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b, i32 0, i32 1
  store i8* %4, i8** %9, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %a, metadata !582, metadata !DIExpression()), !dbg !588
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %b, metadata !583, metadata !DIExpression()), !dbg !589
; invoke core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
  %a_len = invoke i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hab0864515fa45a0fE({ i8*, i8* }* align 8 %a)
          to label %bb1 unwind label %cleanup, !dbg !590

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !591

cleanup:                                          ; preds = %bb2, %bb1, %start
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3

bb1:                                              ; preds = %start
  store i64 %a_len, i64* %a_len.dbg.spill, align 8, !dbg !590
  call void @llvm.dbg.declare(metadata i64* %a_len.dbg.spill, metadata !584, metadata !DIExpression()), !dbg !592
  store i64 %a_len, i64* %v1.dbg.spill, align 8, !dbg !593
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !594, metadata !DIExpression()), !dbg !599
; invoke core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
  %v2 = invoke i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hab0864515fa45a0fE({ i8*, i8* }* align 8 %b)
          to label %bb2 unwind label %cleanup, !dbg !601

bb2:                                              ; preds = %bb1
  store i64 %v2, i64* %v2.dbg.spill, align 8, !dbg !601
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !598, metadata !DIExpression()), !dbg !599
; invoke core::cmp::Ord::min
  %len = invoke i64 @_ZN4core3cmp3Ord3min17hcb69de752336567cE(i64 %a_len, i64 %v2)
          to label %bb6 unwind label %cleanup, !dbg !599

bb6:                                              ; preds = %bb2
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !599
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !586, metadata !DIExpression()), !dbg !602
  %15 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a, i32 0, i32 0, !dbg !603
  %_9.0 = load i8*, i8** %15, align 8, !dbg !603, !nonnull !19, !noundef !19
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a, i32 0, i32 1, !dbg !603
  %_9.1 = load i8*, i8** %16, align 8, !dbg !603
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b, i32 0, i32 0, !dbg !604
  %_10.0 = load i8*, i8** %17, align 8, !dbg !604, !nonnull !19, !noundef !19
  %18 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b, i32 0, i32 1, !dbg !604
  %_10.1 = load i8*, i8** %18, align 8, !dbg !604
  %19 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %0 to { i8*, i8* }*, !dbg !605
  %20 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %19, i32 0, i32 0, !dbg !605
  store i8* %_9.0, i8** %20, align 8, !dbg !605
  %21 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %19, i32 0, i32 1, !dbg !605
  store i8* %_9.1, i8** %21, align 8, !dbg !605
  %22 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %0, i32 0, i32 1, !dbg !605
  %23 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %22, i32 0, i32 0, !dbg !605
  store i8* %_10.0, i8** %23, align 8, !dbg !605
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %22, i32 0, i32 1, !dbg !605
  store i8* %_10.1, i8** %24, align 8, !dbg !605
  %25 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %0, i32 0, i32 2, !dbg !605
  store i64 0, i64* %25, align 8, !dbg !605
  %26 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %0, i32 0, i32 3, !dbg !605
  store i64 %len, i64* %26, align 8, !dbg !605
  %27 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %0, i32 0, i32 4, !dbg !605
  store i64 %a_len, i64* %27, align 8, !dbg !605
  ret void, !dbg !606

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !591

bb5:                                              ; preds = %bb4
  %28 = bitcast { i8*, i32 }* %5 to i8**, !dbg !607
  %29 = load i8*, i8** %28, align 8, !dbg !607
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1, !dbg !607
  %31 = load i32, i32* %30, align 8, !dbg !607
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0, !dbg !607
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1, !dbg !607
  resume { i8*, i32 } %33, !dbg !607
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17h21390a2de8906e8eE"(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !608 {
start:
  %i.dbg.spill2 = alloca i64, align 8
  %0 = alloca { i8*, i32 }, align 8
  %i.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"*, align 8
  %_13 = alloca i8, align 1
  %_6 = alloca { i8*, i8* }, align 8
  %1 = alloca { i8*, i8* }, align 8
  store %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %self, %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"** %self.dbg.spill, metadata !610, metadata !DIExpression()), !dbg !615
  %2 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %self, i32 0, i32 2, !dbg !616
  %_3 = load i64, i64* %2, align 8, !dbg !616
  %3 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %self, i32 0, i32 3, !dbg !617
  %_4 = load i64, i64* %3, align 8, !dbg !617
  %_2 = icmp ult i64 %_3, %_4, !dbg !616
  br i1 %_2, label %bb1, label %bb4, !dbg !616

bb4:                                              ; preds = %start
  br i1 false, label %bb6, label %bb5, !dbg !618

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %self, i32 0, i32 2, !dbg !619
  %i = load i64, i64* %4, align 8, !dbg !619
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !619
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !611, metadata !DIExpression()), !dbg !620
  %5 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %self, i32 0, i32 2, !dbg !621
  %6 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %self, i32 0, i32 2, !dbg !621
  %7 = load i64, i64* %6, align 8, !dbg !621
  %8 = add i64 %7, 1, !dbg !621
  store i64 %8, i64* %5, align 8, !dbg !621
  %_8 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %self to { i8*, i8* }*, !dbg !622
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_7 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h029f0420f93161dbE"({ i8*, i8* }* align 8 %_8, i64 %i), !dbg !622
  br label %bb2, !dbg !622

bb2:                                              ; preds = %bb1
  %_11 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %self, i32 0, i32 1, !dbg !623
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_10 = invoke align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h029f0420f93161dbE"({ i8*, i8* }* align 8 %_11, i64 %i)
          to label %bb3 unwind label %cleanup, !dbg !623

bb14:                                             ; preds = %cleanup
  br label %bb15, !dbg !624

cleanup:                                          ; preds = %bb2
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb14

bb3:                                              ; preds = %bb2
  %14 = bitcast { i8*, i8* }* %_6 to i8**, !dbg !625
  store i8* %_7, i8** %14, align 8, !dbg !625
  %15 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_6, i32 0, i32 1, !dbg !625
  store i8* %_10, i8** %15, align 8, !dbg !625
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_6, i32 0, i32 0, !dbg !626
  %17 = load i8*, i8** %16, align 8, !dbg !626, !nonnull !19, !align !627, !noundef !19
  %18 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_6, i32 0, i32 1, !dbg !626
  %19 = load i8*, i8** %18, align 8, !dbg !626, !nonnull !19, !align !627, !noundef !19
  %20 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0, !dbg !626
  store i8* %17, i8** %20, align 8, !dbg !626
  %21 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1, !dbg !626
  store i8* %19, i8** %21, align 8, !dbg !626
  br label %bb13, !dbg !628

bb15:                                             ; preds = %bb14
  %22 = bitcast { i8*, i32 }* %0 to i8**, !dbg !629
  %23 = load i8*, i8** %22, align 8, !dbg !629
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !629
  %25 = load i32, i32* %24, align 8, !dbg !629
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0, !dbg !629
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1, !dbg !629
  resume { i8*, i32 } %27, !dbg !629

bb13:                                             ; preds = %bb12, %bb3
  %28 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0, !dbg !630
  %29 = load i8*, i8** %28, align 8, !dbg !630, !align !627
  %30 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1, !dbg !630
  %31 = load i8*, i8** %30, align 8, !dbg !630
  %32 = insertvalue { i8*, i8* } undef, i8* %29, 0, !dbg !630
  %33 = insertvalue { i8*, i8* } %32, i8* %31, 1, !dbg !630
  ret { i8*, i8* } %33, !dbg !630

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_13, align 1, !dbg !618
  br label %bb7, !dbg !618

bb6:                                              ; preds = %bb4
  %34 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %self, i32 0, i32 2, !dbg !631
  %_15 = load i64, i64* %34, align 8, !dbg !631
  %35 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %self, i32 0, i32 4, !dbg !632
  %_16 = load i64, i64* %35, align 8, !dbg !632
  %_14 = icmp ult i64 %_15, %_16, !dbg !631
  %36 = zext i1 %_14 to i8, !dbg !618
  store i8 %36, i8* %_13, align 1, !dbg !618
  br label %bb7, !dbg !618

bb7:                                              ; preds = %bb5, %bb6
  %37 = load i8, i8* %_13, align 1, !dbg !618, !range !266, !noundef !19
  %38 = trunc i8 %37 to i1, !dbg !618
  br i1 %38, label %bb8, label %bb11, !dbg !618

bb11:                                             ; preds = %bb7
  %39 = bitcast { i8*, i8* }* %1 to {}**, !dbg !633
  store {}* null, {}** %39, align 8, !dbg !633
  br label %bb12, !dbg !634

bb8:                                              ; preds = %bb7
  %40 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %self, i32 0, i32 2, !dbg !635
  %i1 = load i64, i64* %40, align 8, !dbg !635
  store i64 %i1, i64* %i.dbg.spill2, align 8, !dbg !635
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill2, metadata !613, metadata !DIExpression()), !dbg !636
  %41 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %self, i32 0, i32 2, !dbg !637
  %42 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %self, i32 0, i32 2, !dbg !637
  %43 = load i64, i64* %42, align 8, !dbg !637
  %44 = add i64 %43, 1, !dbg !637
  store i64 %44, i64* %41, align 8, !dbg !637
  %45 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %self, i32 0, i32 3, !dbg !638
  %46 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %self, i32 0, i32 3, !dbg !638
  %47 = load i64, i64* %46, align 8, !dbg !638
  %48 = add i64 %47, 1, !dbg !638
  store i64 %48, i64* %45, align 8, !dbg !638
  %_19 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %self to { i8*, i8* }*, !dbg !639
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_18 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h029f0420f93161dbE"({ i8*, i8* }* align 8 %_19, i64 %i1), !dbg !639
  br label %bb9, !dbg !639

bb9:                                              ; preds = %bb8
  br label %bb10, !dbg !640

bb10:                                             ; preds = %bb9
  %49 = bitcast { i8*, i8* }* %1 to {}**, !dbg !641
  store {}* null, {}** %49, align 8, !dbg !641
  br label %bb12, !dbg !634

bb12:                                             ; preds = %bb11, %bb10
  br label %bb13, !dbg !628
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define i24 @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17h2465c73547f4a034E"(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !642 {
start:
  %i.dbg.spill2 = alloca i64, align 8
  %0 = alloca { i8*, i32 }, align 8
  %i.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"*, align 8
  %_13 = alloca i8, align 1
  %_6 = alloca { i8, i8 }, align 1
  %1 = alloca %"core::option::Option<(u8, u8)>", align 1
  store %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %self, %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"** %self.dbg.spill, metadata !644, metadata !DIExpression()), !dbg !649
  %2 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>", %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %self, i32 0, i32 2, !dbg !650
  %_3 = load i64, i64* %2, align 8, !dbg !650
  %3 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>", %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %self, i32 0, i32 3, !dbg !651
  %_4 = load i64, i64* %3, align 8, !dbg !651
  %_2 = icmp ult i64 %_3, %_4, !dbg !650
  br i1 %_2, label %bb1, label %bb4, !dbg !650

bb4:                                              ; preds = %start
  br i1 false, label %bb6, label %bb5, !dbg !652

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>", %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %self, i32 0, i32 2, !dbg !653
  %i = load i64, i64* %4, align 8, !dbg !653
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !653
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !645, metadata !DIExpression()), !dbg !654
  %5 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>", %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %self, i32 0, i32 2, !dbg !655
  %6 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>", %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %self, i32 0, i32 2, !dbg !655
  %7 = load i64, i64* %6, align 8, !dbg !655
  %8 = add i64 %7, 1, !dbg !655
  store i64 %8, i64* %5, align 8, !dbg !655
  %_8 = bitcast %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %self to { i8*, i8* }*, !dbg !656
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_7 = call i8 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h3121124e48e5ceddE"({ i8*, i8* }* align 8 %_8, i64 %i), !dbg !656
  br label %bb2, !dbg !656

bb2:                                              ; preds = %bb1
  %_11 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>", %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %self, i32 0, i32 1, !dbg !657
; invoke <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_10 = invoke i8 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h3121124e48e5ceddE"({ i8*, i8* }* align 8 %_11, i64 %i)
          to label %bb3 unwind label %cleanup, !dbg !657

bb14:                                             ; preds = %cleanup
  br label %bb15, !dbg !658

cleanup:                                          ; preds = %bb2
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb14

bb3:                                              ; preds = %bb2
  %14 = bitcast { i8, i8 }* %_6 to i8*, !dbg !659
  store i8 %_7, i8* %14, align 1, !dbg !659
  %15 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_6, i32 0, i32 1, !dbg !659
  store i8 %_10, i8* %15, align 1, !dbg !659
  %16 = bitcast %"core::option::Option<(u8, u8)>"* %1 to %"core::option::Option<(u8, u8)>::Some"*, !dbg !660
  %17 = getelementptr inbounds %"core::option::Option<(u8, u8)>::Some", %"core::option::Option<(u8, u8)>::Some"* %16, i32 0, i32 1, !dbg !660
  %18 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_6, i32 0, i32 0, !dbg !660
  %19 = load i8, i8* %18, align 1, !dbg !660
  %20 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_6, i32 0, i32 1, !dbg !660
  %21 = load i8, i8* %20, align 1, !dbg !660
  %22 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %17, i32 0, i32 0, !dbg !660
  store i8 %19, i8* %22, align 1, !dbg !660
  %23 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %17, i32 0, i32 1, !dbg !660
  store i8 %21, i8* %23, align 1, !dbg !660
  %24 = bitcast %"core::option::Option<(u8, u8)>"* %1 to i8*, !dbg !660
  store i8 1, i8* %24, align 1, !dbg !660
  br label %bb13, !dbg !661

bb15:                                             ; preds = %bb14
  %25 = bitcast { i8*, i32 }* %0 to i8**, !dbg !662
  %26 = load i8*, i8** %25, align 8, !dbg !662
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !662
  %28 = load i32, i32* %27, align 8, !dbg !662
  %29 = insertvalue { i8*, i32 } undef, i8* %26, 0, !dbg !662
  %30 = insertvalue { i8*, i32 } %29, i32 %28, 1, !dbg !662
  resume { i8*, i32 } %30, !dbg !662

bb13:                                             ; preds = %bb12, %bb3
  %31 = bitcast %"core::option::Option<(u8, u8)>"* %1 to i24*, !dbg !663
  %32 = load i24, i24* %31, align 1, !dbg !663
  ret i24 %32, !dbg !663

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_13, align 1, !dbg !652
  br label %bb7, !dbg !652

bb6:                                              ; preds = %bb4
  %33 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>", %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %self, i32 0, i32 2, !dbg !664
  %_15 = load i64, i64* %33, align 8, !dbg !664
  %34 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>", %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %self, i32 0, i32 4, !dbg !665
  %_16 = load i64, i64* %34, align 8, !dbg !665
  %_14 = icmp ult i64 %_15, %_16, !dbg !664
  %35 = zext i1 %_14 to i8, !dbg !652
  store i8 %35, i8* %_13, align 1, !dbg !652
  br label %bb7, !dbg !652

bb7:                                              ; preds = %bb5, %bb6
  %36 = load i8, i8* %_13, align 1, !dbg !652, !range !266, !noundef !19
  %37 = trunc i8 %36 to i1, !dbg !652
  br i1 %37, label %bb8, label %bb11, !dbg !652

bb11:                                             ; preds = %bb7
  %38 = bitcast %"core::option::Option<(u8, u8)>"* %1 to i8*, !dbg !666
  store i8 0, i8* %38, align 1, !dbg !666
  br label %bb12, !dbg !667

bb8:                                              ; preds = %bb7
  %39 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>", %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %self, i32 0, i32 2, !dbg !668
  %i1 = load i64, i64* %39, align 8, !dbg !668
  store i64 %i1, i64* %i.dbg.spill2, align 8, !dbg !668
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill2, metadata !647, metadata !DIExpression()), !dbg !669
  %40 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>", %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %self, i32 0, i32 2, !dbg !670
  %41 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>", %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %self, i32 0, i32 2, !dbg !670
  %42 = load i64, i64* %41, align 8, !dbg !670
  %43 = add i64 %42, 1, !dbg !670
  store i64 %43, i64* %40, align 8, !dbg !670
  %44 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>", %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %self, i32 0, i32 3, !dbg !671
  %45 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>", %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %self, i32 0, i32 3, !dbg !671
  %46 = load i64, i64* %45, align 8, !dbg !671
  %47 = add i64 %46, 1, !dbg !671
  store i64 %47, i64* %44, align 8, !dbg !671
  %_19 = bitcast %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %self to { i8*, i8* }*, !dbg !672
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_18 = call i8 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h3121124e48e5ceddE"({ i8*, i8* }* align 8 %_19, i64 %i1), !dbg !672
  br label %bb9, !dbg !672

bb9:                                              ; preds = %bb8
  br label %bb10, !dbg !673

bb10:                                             ; preds = %bb9
  %48 = bitcast %"core::option::Option<(u8, u8)>"* %1 to i8*, !dbg !674
  store i8 0, i8* %48, align 1, !dbg !674
  br label %bb12, !dbg !667

bb12:                                             ; preds = %bb11, %bb10
  br label %bb13, !dbg !661
}

; std::f32::<impl f32>::powi
; Function Attrs: inlinehint nonlazybind uwtable
define internal float @"_ZN3std3f3221_$LT$impl$u20$f32$GT$4powi17hb7e08f9d89fee4c8E"(float %self, i32 %n) unnamed_addr #0 !dbg !675 {
start:
  %0 = alloca float, align 4
  %n.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca float, align 4
  store float %self, float* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %self.dbg.spill, metadata !685, metadata !DIExpression()), !dbg !687
  store i32 %n, i32* %n.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !686, metadata !DIExpression()), !dbg !688
  %1 = call float @llvm.powi.f32.i32(float %self, i32 %n), !dbg !689
  store float %1, float* %0, align 4, !dbg !689
  %2 = load float, float* %0, align 4, !dbg !689
  br label %bb1, !dbg !689

bb1:                                              ; preds = %start
  ret float %2, !dbg !690
}

; std::f64::<impl f64>::powi
; Function Attrs: inlinehint nonlazybind uwtable
define internal double @"_ZN3std3f6421_$LT$impl$u20$f64$GT$4powi17h7a90dd3638f61957E"(double %self, i32 %n) unnamed_addr #0 !dbg !691 {
start:
  %0 = alloca double, align 8
  %n.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca double, align 8
  store double %self, double* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %self.dbg.spill, metadata !699, metadata !DIExpression()), !dbg !701
  store i32 %n, i32* %n.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !700, metadata !DIExpression()), !dbg !702
  %1 = call double @llvm.powi.f64.i32(double %self, i32 %n), !dbg !703
  store double %1, double* %0, align 8, !dbg !703
  %2 = load double, double* %0, align 8, !dbg !703
  br label %bb1, !dbg !703

bb1:                                              ; preds = %start
  ret double %2, !dbg !704
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8581425018b943f1E"(i8** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !705 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8**, align 8
  store i8** %self, i8*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill, metadata !749, metadata !DIExpression()), !dbg !753
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !750, metadata !DIExpression()), !dbg !754
  %_6 = load i8*, i8** %self, align 8, !dbg !755, !nonnull !19, !align !627, !noundef !19
; call <num_traits::FloatErrorKind as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN63_$LT$num_traits..FloatErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h4a8ab705b67ee6caE"(i8* align 1 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !756
  br label %bb1, !dbg !756

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !757
}

; <f32 as core::ops::arith::Div>::div
; Function Attrs: inlinehint nonlazybind uwtable
define internal float @"_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Div$GT$3div17h486d2693cf3cae96E"(float %self, float %other) unnamed_addr #0 !dbg !758 {
start:
  %other.dbg.spill = alloca float, align 4
  %self.dbg.spill = alloca float, align 4
  store float %self, float* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %self.dbg.spill, metadata !765, metadata !DIExpression()), !dbg !767
  store float %other, float* %other.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %other.dbg.spill, metadata !766, metadata !DIExpression()), !dbg !768
  %0 = fdiv float %self, %other, !dbg !769
  ret float %0, !dbg !770
}

; <f32 as core::ops::arith::Mul>::mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal float @"_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Mul$GT$3mul17h76b1e3c0dcee3a2eE"(float %self, float %other) unnamed_addr #0 !dbg !771 {
start:
  %other.dbg.spill = alloca float, align 4
  %self.dbg.spill = alloca float, align 4
  store float %self, float* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %self.dbg.spill, metadata !774, metadata !DIExpression()), !dbg !776
  store float %other, float* %other.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %other.dbg.spill, metadata !775, metadata !DIExpression()), !dbg !777
  %0 = fmul float %self, %other, !dbg !778
  ret float %0, !dbg !779
}

; <f32 as core::ops::arith::Neg>::neg
; Function Attrs: inlinehint nonlazybind uwtable
define internal float @"_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Neg$GT$3neg17hf2d7af8905ae0e44E"(float %self) unnamed_addr #0 !dbg !780 {
start:
  %self.dbg.spill = alloca float, align 4
  store float %self, float* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %self.dbg.spill, metadata !785, metadata !DIExpression()), !dbg !786
  %0 = fneg float %self, !dbg !787
  ret float %0, !dbg !788
}

; <f64 as core::ops::arith::Div>::div
; Function Attrs: inlinehint nonlazybind uwtable
define internal double @"_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Div$GT$3div17h51eab12971dd6ab7E"(double %self, double %other) unnamed_addr #0 !dbg !789 {
start:
  %other.dbg.spill = alloca double, align 8
  %self.dbg.spill = alloca double, align 8
  store double %self, double* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %self.dbg.spill, metadata !794, metadata !DIExpression()), !dbg !796
  store double %other, double* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %other.dbg.spill, metadata !795, metadata !DIExpression()), !dbg !797
  %0 = fdiv double %self, %other, !dbg !798
  ret double %0, !dbg !799
}

; <f64 as core::ops::arith::Mul>::mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal double @"_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Mul$GT$3mul17h9b80d3a4e27ba66bE"(double %self, double %other) unnamed_addr #0 !dbg !800 {
start:
  %other.dbg.spill = alloca double, align 8
  %self.dbg.spill = alloca double, align 8
  store double %self, double* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %self.dbg.spill, metadata !803, metadata !DIExpression()), !dbg !805
  store double %other, double* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %other.dbg.spill, metadata !804, metadata !DIExpression()), !dbg !806
  %0 = fmul double %self, %other, !dbg !807
  ret double %0, !dbg !808
}

; <f64 as core::ops::arith::Neg>::neg
; Function Attrs: inlinehint nonlazybind uwtable
define internal double @"_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Neg$GT$3neg17h2916e189c8f22844E"(double %self) unnamed_addr #0 !dbg !809 {
start:
  %self.dbg.spill = alloca double, align 8
  store double %self, double* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %self.dbg.spill, metadata !814, metadata !DIExpression()), !dbg !815
  %0 = fneg double %self, !dbg !816
  ret double %0, !dbg !817
}

; core::intrinsics::const_eval_select
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core10intrinsics17const_eval_select17h6441fb96c40482f1E(float %arg) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !818 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %called_at_rt.dbg.spill = alloca %"[closure@core::f32::<impl f32>::to_bits::{closure#0}]", align 1
  %_called_in_const.dbg.spill = alloca {}, align 1
  %arg.dbg.spill = alloca float, align 4
  store float %arg, float* %arg.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %arg.dbg.spill, metadata !833, metadata !DIExpression()), !dbg !841
  call void @llvm.dbg.declare(metadata {}* %_called_in_const.dbg.spill, metadata !834, metadata !DIExpression()), !dbg !842
  call void @llvm.dbg.declare(metadata %"[closure@core::f32::<impl f32>::to_bits::{closure#0}]"* %called_at_rt.dbg.spill, metadata !835, metadata !DIExpression()), !dbg !843
; invoke core::ops::function::FnOnce::call_once
  %1 = invoke i32 @_ZN4core3ops8function6FnOnce9call_once17h212bd856a0daefdeE(float %arg)
          to label %bb1 unwind label %cleanup, !dbg !844

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !845

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !845

bb4:                                              ; preds = %bb3
  %7 = bitcast { i8*, i32 }* %0 to i8**, !dbg !846
  %8 = load i8*, i8** %7, align 8, !dbg !846
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !846
  %10 = load i32, i32* %9, align 8, !dbg !846
  %11 = insertvalue { i8*, i32 } undef, i8* %8, 0, !dbg !846
  %12 = insertvalue { i8*, i32 } %11, i32 %10, 1, !dbg !846
  resume { i8*, i32 } %12, !dbg !846

bb2:                                              ; preds = %bb1
  ret i32 %1, !dbg !847
}

; core::intrinsics::const_eval_select
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core10intrinsics17const_eval_select17ha6458f317d7f2ac2E(double %arg) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !848 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %called_at_rt.dbg.spill = alloca %"[closure@core::f64::<impl f64>::to_bits::{closure#0}]", align 1
  %_called_in_const.dbg.spill = alloca {}, align 1
  %arg.dbg.spill = alloca double, align 8
  store double %arg, double* %arg.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %arg.dbg.spill, metadata !862, metadata !DIExpression()), !dbg !870
  call void @llvm.dbg.declare(metadata {}* %_called_in_const.dbg.spill, metadata !863, metadata !DIExpression()), !dbg !871
  call void @llvm.dbg.declare(metadata %"[closure@core::f64::<impl f64>::to_bits::{closure#0}]"* %called_at_rt.dbg.spill, metadata !864, metadata !DIExpression()), !dbg !872
; invoke core::ops::function::FnOnce::call_once
  %1 = invoke i64 @_ZN4core3ops8function6FnOnce9call_once17h0ed0ba15af3d259dE(double %arg)
          to label %bb1 unwind label %cleanup, !dbg !873

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !874

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !874

bb4:                                              ; preds = %bb3
  %7 = bitcast { i8*, i32 }* %0 to i8**, !dbg !875
  %8 = load i8*, i8** %7, align 8, !dbg !875
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !875
  %10 = load i32, i32* %9, align 8, !dbg !875
  %11 = insertvalue { i8*, i32 } undef, i8* %8, 0, !dbg !875
  %12 = insertvalue { i8*, i32 } %11, i32 %10, 1, !dbg !875
  resume { i8*, i32 } %12, !dbg !875

bb2:                                              ; preds = %bb1
  ret i64 %1, !dbg !876
}

; core::cmp::Ord::min
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3Ord3min17hcb69de752336567cE(i64 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !877 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %_8 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %3 = alloca i64, align 8
  %other = alloca i64, align 8
  %self = alloca i64, align 8
  store i64 %0, i64* %self, align 8
  store i64 %1, i64* %other, align 8
  call void @llvm.dbg.declare(metadata i64* %self, metadata !880, metadata !DIExpression()), !dbg !884
  call void @llvm.dbg.declare(metadata i64* %other, metadata !881, metadata !DIExpression()), !dbg !885
  store i8 1, i8* %_9, align 1, !dbg !886
  store i8 1, i8* %_8, align 1, !dbg !886
; invoke core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %4 = invoke i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17heff2ceaf2d9ed1e3E"(i64* align 8 %self, i64* align 8 %other)
          to label %bb1 unwind label %cleanup, !dbg !886, !range !887

bb8:                                              ; preds = %cleanup
  br label %bb13, !dbg !888

cleanup:                                          ; preds = %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb8

bb1:                                              ; preds = %start
  store i8 %4, i8* %_3, align 1, !dbg !886
  %_7 = load i8, i8* %_3, align 1, !dbg !886, !range !887, !noundef !19
  switch i8 %_7, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ], !dbg !889

bb13:                                             ; preds = %bb8
  %10 = load i8, i8* %_9, align 1, !dbg !888, !range !266, !noundef !19
  %11 = trunc i8 %10 to i1, !dbg !888
  br i1 %11, label %bb12, label %bb9, !dbg !888

bb3:                                              ; preds = %bb1
  unreachable, !dbg !886

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_9, align 1, !dbg !890
  %12 = load i64, i64* %self, align 8, !dbg !890
  store i64 %12, i64* %3, align 8, !dbg !890
  br label %bb5, !dbg !890

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_8, align 1, !dbg !891
  %13 = load i64, i64* %other, align 8, !dbg !891
  store i64 %13, i64* %3, align 8, !dbg !891
  br label %bb5, !dbg !891

bb5:                                              ; preds = %bb4, %bb2
  %14 = load i8, i8* %_8, align 1, !dbg !888, !range !266, !noundef !19
  %15 = trunc i8 %14 to i1, !dbg !888
  br i1 %15, label %bb10, label %bb6, !dbg !888

bb6:                                              ; preds = %bb10, %bb5
  %16 = load i8, i8* %_9, align 1, !dbg !888, !range !266, !noundef !19
  %17 = trunc i8 %16 to i1, !dbg !888
  br i1 %17, label %bb11, label %bb7, !dbg !888

bb10:                                             ; preds = %bb5
  br label %bb6, !dbg !888

bb9:                                              ; preds = %bb12, %bb13
  %18 = bitcast { i8*, i32 }* %2 to i8**, !dbg !892
  %19 = load i8*, i8** %18, align 8, !dbg !892
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !892
  %21 = load i32, i32* %20, align 8, !dbg !892
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0, !dbg !892
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1, !dbg !892
  resume { i8*, i32 } %23, !dbg !892

bb12:                                             ; preds = %bb13
  br label %bb9, !dbg !888

bb7:                                              ; preds = %bb11, %bb6
  %24 = load i64, i64* %3, align 8, !dbg !893
  ret i64 %24, !dbg !893

bb11:                                             ; preds = %bb6
  br label %bb7, !dbg !888
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17heff2ceaf2d9ed1e3E"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #0 !dbg !894 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  %0 = alloca i8, align 1
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !900, metadata !DIExpression()), !dbg !902
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !901, metadata !DIExpression()), !dbg !903
  %_4 = load i64, i64* %self, align 8, !dbg !904
  %_5 = load i64, i64* %other, align 8, !dbg !905
  %_3 = icmp ult i64 %_4, %_5, !dbg !904
  br i1 %_3, label %bb1, label %bb2, !dbg !904

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8, !dbg !906
  %_8 = load i64, i64* %other, align 8, !dbg !907
  %_6 = icmp eq i64 %_7, %_8, !dbg !906
  br i1 %_6, label %bb3, label %bb4, !dbg !906

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1, !dbg !908
  br label %bb6, !dbg !909

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !dbg !910, !range !887, !noundef !19
  ret i8 %1, !dbg !910

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1, !dbg !911
  br label %bb5, !dbg !912

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1, !dbg !913
  br label %bb5, !dbg !912

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6, !dbg !909
}

; core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17hedefb1bc4fc3afaaE"({}* align 1 %self, {}* align 1 %_other) unnamed_addr #0 !dbg !914 {
start:
  %_other.dbg.spill = alloca {}*, align 8
  %self.dbg.spill = alloca {}*, align 8
  store {}* %self, {}** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %self.dbg.spill, metadata !921, metadata !DIExpression()), !dbg !923
  store {}* %_other, {}** %_other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %_other.dbg.spill, metadata !922, metadata !DIExpression()), !dbg !924
  ret i1 true, !dbg !925
}

; core::f32::<impl f32>::to_bits
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17hf9f914d93b7e51c5E"(float %self) unnamed_addr #0 !dbg !926 {
start:
  %rt_f32_to_u32.dbg.spill = alloca %"[closure@core::f32::<impl f32>::to_bits::{closure#0}]", align 1
  %self.dbg.spill = alloca float, align 4
  %_3 = alloca float, align 4
  store float %self, float* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %self.dbg.spill, metadata !929, metadata !DIExpression()), !dbg !932
  call void @llvm.dbg.declare(metadata %"[closure@core::f32::<impl f32>::to_bits::{closure#0}]"* %rt_f32_to_u32.dbg.spill, metadata !930, metadata !DIExpression()), !dbg !933
  store float %self, float* %_3, align 4, !dbg !934
  %0 = load float, float* %_3, align 4, !dbg !935
; call core::intrinsics::const_eval_select
  %1 = call i32 @_ZN4core10intrinsics17const_eval_select17h6441fb96c40482f1E(float %0), !dbg !935
  br label %bb1, !dbg !935

bb1:                                              ; preds = %start
  ret i32 %1, !dbg !936
}

; core::f32::<impl f32>::to_bits::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits28_$u7b$$u7b$closure$u7d$$u7d$17h12ec8e0264003088E"(%"[closure@core::f32::<impl f32>::to_bits::{closure#0}]"* align 1 %_1, float %rt) unnamed_addr #0 !dbg !937 {
start:
  %0 = alloca i32, align 4
  %rt.dbg.spill = alloca float, align 4
  %_1.dbg.spill = alloca %"[closure@core::f32::<impl f32>::to_bits::{closure#0}]"*, align 8
  store %"[closure@core::f32::<impl f32>::to_bits::{closure#0}]"* %_1, %"[closure@core::f32::<impl f32>::to_bits::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@core::f32::<impl f32>::to_bits::{closure#0}]"** %_1.dbg.spill, metadata !943, metadata !DIExpression()), !dbg !944
  store float %rt, float* %rt.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %rt.dbg.spill, metadata !942, metadata !DIExpression()), !dbg !945
  %1 = bitcast float %rt to i32, !dbg !946
  store i32 %1, i32* %0, align 4, !dbg !946
  %2 = load i32, i32* %0, align 4, !dbg !946
  br label %bb1, !dbg !946

bb1:                                              ; preds = %start
  ret i32 %2, !dbg !947
}

; core::f64::<impl f64>::to_bits
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17h62495e472a5a58ecE"(double %self) unnamed_addr #0 !dbg !948 {
start:
  %rt_f64_to_u64.dbg.spill = alloca %"[closure@core::f64::<impl f64>::to_bits::{closure#0}]", align 1
  %self.dbg.spill = alloca double, align 8
  %_3 = alloca double, align 8
  store double %self, double* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %self.dbg.spill, metadata !951, metadata !DIExpression()), !dbg !954
  call void @llvm.dbg.declare(metadata %"[closure@core::f64::<impl f64>::to_bits::{closure#0}]"* %rt_f64_to_u64.dbg.spill, metadata !952, metadata !DIExpression()), !dbg !955
  store double %self, double* %_3, align 8, !dbg !956
  %0 = load double, double* %_3, align 8, !dbg !957
; call core::intrinsics::const_eval_select
  %1 = call i64 @_ZN4core10intrinsics17const_eval_select17ha6458f317d7f2ac2E(double %0), !dbg !957
  br label %bb1, !dbg !957

bb1:                                              ; preds = %start
  ret i64 %1, !dbg !958
}

; core::f64::<impl f64>::to_bits::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits28_$u7b$$u7b$closure$u7d$$u7d$17hce21388d0321e24aE"(%"[closure@core::f64::<impl f64>::to_bits::{closure#0}]"* align 1 %_1, double %rt) unnamed_addr #0 !dbg !959 {
start:
  %0 = alloca i64, align 8
  %rt.dbg.spill = alloca double, align 8
  %_1.dbg.spill = alloca %"[closure@core::f64::<impl f64>::to_bits::{closure#0}]"*, align 8
  store %"[closure@core::f64::<impl f64>::to_bits::{closure#0}]"* %_1, %"[closure@core::f64::<impl f64>::to_bits::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@core::f64::<impl f64>::to_bits::{closure#0}]"** %_1.dbg.spill, metadata !965, metadata !DIExpression()), !dbg !966
  store double %rt, double* %rt.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %rt.dbg.spill, metadata !964, metadata !DIExpression()), !dbg !967
  %1 = bitcast double %rt to i64, !dbg !968
  store i64 %1, i64* %0, align 8, !dbg !968
  %2 = load i64, i64* %0, align 8, !dbg !968
  br label %bb1, !dbg !968

bb1:                                              ; preds = %start
  ret i64 %2, !dbg !969
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments6new_v117h97872f408723ca1bE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %0, [0 x { [0 x i8]*, i64 }]* align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* align 8 %args.0, i64 %args.1) unnamed_addr #0 !dbg !970 {
start:
  %args.dbg.spill = alloca { [0 x { i8*, i64* }]*, i64 }, align 8
  %pieces.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %_24 = alloca { i64*, i64 }, align 8
  %_16 = alloca %"core::fmt::Arguments", align 8
  %_3 = alloca i8, align 1
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %1, align 8
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, metadata !1043, metadata !DIExpression()), !dbg !1045
  %3 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %3, align 8
  %4 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, metadata !1044, metadata !DIExpression()), !dbg !1046
  %_4 = icmp ult i64 %pieces.1, %args.1, !dbg !1047
  br i1 %_4, label %bb1, label %bb2, !dbg !1047

bb2:                                              ; preds = %start
  %_12 = add i64 %args.1, 1, !dbg !1048
  %_9 = icmp ugt i64 %pieces.1, %_12, !dbg !1049
  %5 = zext i1 %_9 to i8, !dbg !1047
  store i8 %5, i8* %_3, align 1, !dbg !1047
  br label %bb3, !dbg !1047

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1, !dbg !1047
  br label %bb3, !dbg !1047

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %_3, align 1, !dbg !1047, !range !266, !noundef !19
  %7 = trunc i8 %6 to i1, !dbg !1047
  br i1 %7, label %bb4, label %bb6, !dbg !1047

bb6:                                              ; preds = %bb3
  %8 = bitcast { i64*, i64 }* %_24 to {}**, !dbg !1050
  store {}* null, {}** %8, align 8, !dbg !1050
  %9 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !1051
  %10 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 0, !dbg !1051
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %10, align 8, !dbg !1051
  %11 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 1, !dbg !1051
  store i64 %pieces.1, i64* %11, align 8, !dbg !1051
  %12 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1, !dbg !1051
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 0, !dbg !1051
  %14 = load i64*, i64** %13, align 8, !dbg !1051, !align !1052
  %15 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 1, !dbg !1051
  %16 = load i64, i64* %15, align 8, !dbg !1051
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 0, !dbg !1051
  store i64* %14, i64** %17, align 8, !dbg !1051
  %18 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 1, !dbg !1051
  store i64 %16, i64* %18, align 8, !dbg !1051
  %19 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2, !dbg !1051
  %20 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 0, !dbg !1051
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %20, align 8, !dbg !1051
  %21 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 1, !dbg !1051
  store i64 %args.1, i64* %21, align 8, !dbg !1051
  ret void, !dbg !1053

bb4:                                              ; preds = %bb3
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h97872f408723ca1bE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_16, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc6185 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc6395 to [0 x { i8*, i64* }]*), i64 0), !dbg !1054
  br label %bb5, !dbg !1054

bb5:                                              ; preds = %bb4
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_16, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc6356 to %"core::panic::location::Location"*)) #7, !dbg !1054
  unreachable, !dbg !1054
}

; core::num::<impl u64>::checked_mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_mul17h0a8d9e77c5cdaf25E"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !1055 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill4 = alloca i8, align 1
  %a.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill2 = alloca i64, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i8 }, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1074, metadata !DIExpression()), !dbg !1079
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !1075, metadata !DIExpression()), !dbg !1080
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !1081
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !1082, metadata !DIExpression()), !dbg !1095
  store i64 %rhs, i64* %rhs.dbg.spill2, align 8, !dbg !1096
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill2, metadata !1091, metadata !DIExpression()), !dbg !1095
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !1095
  %4 = extractvalue { i64, i1 } %3, 0, !dbg !1095
  %5 = extractvalue { i64, i1 } %3, 1, !dbg !1095
  %6 = zext i1 %5 to i8, !dbg !1095
  %7 = bitcast { i64, i8 }* %1 to i64*, !dbg !1095
  store i64 %4, i64* %7, align 8, !dbg !1095
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1095
  store i8 %6, i8* %8, align 8, !dbg !1095
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !1095
  %_13.0 = load i64, i64* %9, align 8, !dbg !1095
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1095
  %11 = load i8, i8* %10, align 8, !dbg !1095, !range !266, !noundef !19
  %_13.1 = trunc i8 %11 to i1, !dbg !1095
  br label %bb5, !dbg !1095

bb5:                                              ; preds = %start
  store i64 %_13.0, i64* %a.dbg.spill, align 8, !dbg !1095
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !1092, metadata !DIExpression()), !dbg !1097
  %12 = zext i1 %_13.1 to i8, !dbg !1095
  store i8 %12, i8* %b.dbg.spill, align 1, !dbg !1095
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !1094, metadata !DIExpression()), !dbg !1097
  %13 = bitcast { i64, i8 }* %_5 to i64*, !dbg !1097
  store i64 %_13.0, i64* %13, align 8, !dbg !1097
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !1097
  %15 = zext i1 %_13.1 to i8, !dbg !1097
  store i8 %15, i8* %14, align 8, !dbg !1097
  %16 = bitcast { i64, i8 }* %_5 to i64*, !dbg !1098
  %a = load i64, i64* %16, align 8, !dbg !1098
  store i64 %a, i64* %a.dbg.spill3, align 8, !dbg !1098
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill3, metadata !1076, metadata !DIExpression()), !dbg !1099
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !1100
  %18 = load i8, i8* %17, align 8, !dbg !1100, !range !266, !noundef !19
  %b = trunc i8 %18 to i1, !dbg !1100
  %19 = zext i1 %b to i8, !dbg !1100
  store i8 %19, i8* %b.dbg.spill4, align 1, !dbg !1100
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill4, metadata !1078, metadata !DIExpression()), !dbg !1101
  %20 = call i1 @llvm.expect.i1(i1 %b, i1 false), !dbg !1102
  %21 = zext i1 %20 to i8, !dbg !1102
  store i8 %21, i8* %0, align 1, !dbg !1102
  %22 = load i8, i8* %0, align 1, !dbg !1102, !range !266, !noundef !19
  %_8 = trunc i8 %22 to i1, !dbg !1102
  br label %bb1, !dbg !1102

bb1:                                              ; preds = %bb5
  br i1 %_8, label %bb2, label %bb3, !dbg !1102

bb3:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !1103
  store i64 %a, i64* %23, align 8, !dbg !1103
  %24 = bitcast { i64, i64 }* %2 to i64*, !dbg !1103
  store i64 1, i64* %24, align 8, !dbg !1103
  br label %bb4, !dbg !1104

bb2:                                              ; preds = %bb1
  %25 = bitcast { i64, i64 }* %2 to i64*, !dbg !1105
  store i64 0, i64* %25, align 8, !dbg !1105
  br label %bb4, !dbg !1104

bb4:                                              ; preds = %bb3, %bb2
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !1106
  %27 = load i64, i64* %26, align 8, !dbg !1106, !range !1107, !noundef !19
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !1106
  %29 = load i64, i64* %28, align 8, !dbg !1106
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !1106
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !1106
  ret { i64, i64 } %31, !dbg !1106
}

; core::num::dec2flt::biased_fp_to_float
; Function Attrs: nonlazybind uwtable
define float @_ZN4core3num7dec2flt18biased_fp_to_float17h8e8c78e060cb1e4eE(i64 %x.0, i32 %x.1) unnamed_addr #1 !dbg !1108 {
start:
  %x.dbg.spill = alloca { i64, i32 }, align 8
  %word = alloca i64, align 8
  %0 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %x.dbg.spill, i32 0, i32 0
  store i64 %x.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %x.dbg.spill, i32 0, i32 1
  store i32 %x.1, i32* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i32 }* %x.dbg.spill, metadata !1118, metadata !DIExpression()), !dbg !1123
  call void @llvm.dbg.declare(metadata i64* %word, metadata !1119, metadata !DIExpression()), !dbg !1124
  store i64 %x.0, i64* %word, align 8, !dbg !1125
  %_4 = sext i32 %x.1 to i64, !dbg !1126
  %_3 = shl i64 %_4, 23, !dbg !1126
  %2 = load i64, i64* %word, align 8, !dbg !1127
  %3 = or i64 %2, %_3, !dbg !1127
  store i64 %3, i64* %word, align 8, !dbg !1127
  %_6 = load i64, i64* %word, align 8, !dbg !1128
; call <f32 as core::num::dec2flt::float::RawFloat>::from_u64_bits
  %4 = call float @"_ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$13from_u64_bits17hd1c32c961a815893E"(i64 %_6), !dbg !1129
  br label %bb1, !dbg !1129

bb1:                                              ; preds = %start
  ret float %4, !dbg !1130
}

; core::num::dec2flt::biased_fp_to_float
; Function Attrs: nonlazybind uwtable
define double @_ZN4core3num7dec2flt18biased_fp_to_float17hc1c4bf2578871969E(i64 %x.0, i32 %x.1) unnamed_addr #1 !dbg !1131 {
start:
  %x.dbg.spill = alloca { i64, i32 }, align 8
  %word = alloca i64, align 8
  %0 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %x.dbg.spill, i32 0, i32 0
  store i64 %x.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %x.dbg.spill, i32 0, i32 1
  store i32 %x.1, i32* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i32 }* %x.dbg.spill, metadata !1135, metadata !DIExpression()), !dbg !1140
  call void @llvm.dbg.declare(metadata i64* %word, metadata !1136, metadata !DIExpression()), !dbg !1141
  store i64 %x.0, i64* %word, align 8, !dbg !1142
  %_4 = sext i32 %x.1 to i64, !dbg !1143
  %_3 = shl i64 %_4, 52, !dbg !1143
  %2 = load i64, i64* %word, align 8, !dbg !1144
  %3 = or i64 %2, %_3, !dbg !1144
  store i64 %3, i64* %word, align 8, !dbg !1144
  %_6 = load i64, i64* %word, align 8, !dbg !1145
; call <f64 as core::num::dec2flt::float::RawFloat>::from_u64_bits
  %4 = call double @"_ZN59_$LT$f64$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$13from_u64_bits17h6bd64b42d686b3b4E"(i64 %_6), !dbg !1146
  br label %bb1, !dbg !1146

bb1:                                              ; preds = %start
  ret double %4, !dbg !1147
}

; core::num::dec2flt::fpu::fpu_precision::set_precision
; Function Attrs: nonlazybind uwtable
define void @_ZN4core3num7dec2flt3fpu13fpu_precision13set_precision17h04310024efb0e55cE() unnamed_addr #1 !dbg !1148 {
start:
  ret void, !dbg !1154
}

; core::num::dec2flt::fpu::fpu_precision::set_precision
; Function Attrs: nonlazybind uwtable
define void @_ZN4core3num7dec2flt3fpu13fpu_precision13set_precision17h3aa663e467ff5488E() unnamed_addr #1 !dbg !1155 {
start:
  ret void, !dbg !1156
}

; core::num::dec2flt::slow::parse_long_mantissa
; Function Attrs: nonlazybind uwtable
define { i64, i32 } @_ZN4core3num7dec2flt4slow19parse_long_mantissa17hda08111204ded613E([0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !1157 {
start:
  %digit.dbg.spill = alloca i8*, align 8
  %shift.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %fp_inf.dbg.spill = alloca { i64, i32 }, align 8
  %fp_zero.dbg.spill = alloca { i64, i32 }, align 8
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %power2 = alloca i32, align 4
  %mantissa = alloca i64, align 8
  %n = alloca i64, align 8
  %_40 = alloca i64, align 8
  %shift = alloca i64, align 8
  %_20 = alloca i64, align 8
  %exp2 = alloca i32, align 4
  %_7 = alloca i8, align 1
  %d = alloca %"core::num::dec2flt::decimal::Decimal", align 8
  %get_shift = alloca %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]", align 1
  %0 = alloca { i64, i32 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !1163, metadata !DIExpression()), !dbg !1203
  call void @llvm.dbg.declare(metadata %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]"* %get_shift, metadata !1164, metadata !DIExpression()), !dbg !1204
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::decimal::Decimal"* %d, metadata !1172, metadata !DIExpression()), !dbg !1205
  call void @llvm.dbg.declare(metadata i32* %exp2, metadata !1184, metadata !DIExpression()), !dbg !1206
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !1190, metadata !DIExpression()), !dbg !1207
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1195, metadata !DIExpression()), !dbg !1208
  call void @llvm.dbg.declare(metadata i64* %mantissa, metadata !1197, metadata !DIExpression()), !dbg !1209
  call void @llvm.dbg.declare(metadata i32* %power2, metadata !1199, metadata !DIExpression()), !dbg !1210
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %3 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217he9d0af27d074a382E(i32 0), !dbg !1211
  %fp_zero.0 = extractvalue { i64, i32 } %3, 0, !dbg !1211
  %fp_zero.1 = extractvalue { i64, i32 } %3, 1, !dbg !1211
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_zero.dbg.spill, i32 0, i32 0, !dbg !1211
  store i64 %fp_zero.0, i64* %4, align 8, !dbg !1211
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_zero.dbg.spill, i32 0, i32 1, !dbg !1211
  store i32 %fp_zero.1, i32* %5, align 8, !dbg !1211
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_zero.dbg.spill, metadata !1168, metadata !DIExpression()), !dbg !1212
  br label %bb1, !dbg !1211

bb1:                                              ; preds = %start
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %6 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217he9d0af27d074a382E(i32 255), !dbg !1213
  %fp_inf.0 = extractvalue { i64, i32 } %6, 0, !dbg !1213
  %fp_inf.1 = extractvalue { i64, i32 } %6, 1, !dbg !1213
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_inf.dbg.spill, i32 0, i32 0, !dbg !1213
  store i64 %fp_inf.0, i64* %7, align 8, !dbg !1213
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_inf.dbg.spill, i32 0, i32 1, !dbg !1213
  store i32 %fp_inf.1, i32* %8, align 8, !dbg !1213
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_inf.dbg.spill, metadata !1170, metadata !DIExpression()), !dbg !1214
  br label %bb2, !dbg !1213

bb2:                                              ; preds = %bb1
; call core::num::dec2flt::decimal::parse_decimal
  call void @_ZN4core3num7dec2flt7decimal13parse_decimal17hf4914cdf3def232bE(%"core::num::dec2flt::decimal::Decimal"* sret(%"core::num::dec2flt::decimal::Decimal") %d, [0 x i8]* align 1 %s.0, i64 %s.1), !dbg !1215
  br label %bb3, !dbg !1215

bb3:                                              ; preds = %bb2
  %9 = bitcast %"core::num::dec2flt::decimal::Decimal"* %d to i64*, !dbg !1216
  %_8 = load i64, i64* %9, align 8, !dbg !1216
  %10 = icmp eq i64 %_8, 0, !dbg !1216
  br i1 %10, label %bb4, label %bb5, !dbg !1216

bb4:                                              ; preds = %bb3
  store i8 1, i8* %_7, align 1, !dbg !1216
  br label %bb6, !dbg !1216

bb5:                                              ; preds = %bb3
  %11 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1217
  %_10 = load i32, i32* %11, align 8, !dbg !1217
  %_9 = icmp slt i32 %_10, -324, !dbg !1217
  %12 = zext i1 %_9 to i8, !dbg !1216
  store i8 %12, i8* %_7, align 1, !dbg !1216
  br label %bb6, !dbg !1216

bb6:                                              ; preds = %bb4, %bb5
  %13 = load i8, i8* %_7, align 1, !dbg !1216, !range !266, !noundef !19
  %14 = trunc i8 %13 to i1, !dbg !1216
  br i1 %14, label %bb7, label %bb8, !dbg !1216

bb8:                                              ; preds = %bb6
  %15 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1218
  %_12 = load i32, i32* %15, align 8, !dbg !1218
  %_11 = icmp sge i32 %_12, 310, !dbg !1218
  br i1 %_11, label %bb9, label %bb10, !dbg !1218

bb7:                                              ; preds = %bb6
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1219
  store i64 %fp_zero.0, i64* %16, align 8, !dbg !1219
  %17 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1219
  store i32 %fp_zero.1, i32* %17, align 8, !dbg !1219
  br label %bb53, !dbg !1220

bb53:                                             ; preds = %bb9, %bb7
  br label %bb54, !dbg !1221

bb10:                                             ; preds = %bb8
  store i32 0, i32* %exp2, align 4, !dbg !1224
  br label %bb11, !dbg !1225

bb9:                                              ; preds = %bb8
  %18 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1226
  store i64 %fp_inf.0, i64* %18, align 8, !dbg !1226
  %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1226
  store i32 %fp_inf.1, i32* %19, align 8, !dbg !1226
  br label %bb53, !dbg !1221

bb54:                                             ; preds = %bb52, %bb53
  br label %bb55, !dbg !1227

bb11:                                             ; preds = %bb16, %bb10
  %20 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1228
  %_15 = load i32, i32* %20, align 8, !dbg !1228
  %_14 = icmp sgt i32 %_15, 0, !dbg !1228
  br i1 %_14, label %bb12, label %bb17, !dbg !1228

bb17:                                             ; preds = %bb11
  br label %bb18, !dbg !1229

bb12:                                             ; preds = %bb11
  %21 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1230
  %_17 = load i32, i32* %21, align 8, !dbg !1230
  %n1 = sext i32 %_17 to i64, !dbg !1230
  store i64 %n1, i64* %n.dbg.spill, align 8, !dbg !1230
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1186, metadata !DIExpression()), !dbg !1231
  store i64 %n1, i64* %_20, align 8, !dbg !1232
  %22 = load i64, i64* %_20, align 8, !dbg !1232
; call core::num::dec2flt::slow::parse_long_mantissa::{{closure}}
  %shift2 = call i64 @"_ZN4core3num7dec2flt4slow19parse_long_mantissa28_$u7b$$u7b$closure$u7d$$u7d$17h75f79c57090ebb62E"(%"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]"* align 1 %get_shift, i64 %22), !dbg !1232
  store i64 %shift2, i64* %shift.dbg.spill, align 8, !dbg !1232
  call void @llvm.dbg.declare(metadata i64* %shift.dbg.spill, metadata !1188, metadata !DIExpression()), !dbg !1233
  br label %bb13, !dbg !1232

bb13:                                             ; preds = %bb12
; call core::num::dec2flt::decimal::Decimal::right_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal11right_shift17ha78a92e3c7a8e301E(%"core::num::dec2flt::decimal::Decimal"* align 8 %d, i64 %shift2), !dbg !1234
  br label %bb14, !dbg !1234

bb14:                                             ; preds = %bb13
  %23 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1235
  %_26 = load i32, i32* %23, align 8, !dbg !1235
  %_25 = icmp slt i32 %_26, -2047, !dbg !1235
  br i1 %_25, label %bb15, label %bb16, !dbg !1235

bb16:                                             ; preds = %bb14
  %_28 = trunc i64 %shift2 to i32, !dbg !1236
  %24 = load i32, i32* %exp2, align 4, !dbg !1237
  %25 = add i32 %24, %_28, !dbg !1237
  store i32 %25, i32* %exp2, align 4, !dbg !1237
  br label %bb11, !dbg !1225

bb15:                                             ; preds = %bb14
  %26 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1238
  store i64 %fp_zero.0, i64* %26, align 8, !dbg !1238
  %27 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1238
  store i32 %fp_zero.1, i32* %27, align 8, !dbg !1238
  br label %bb52, !dbg !1239

bb52:                                             ; preds = %bb47, %bb40, %bb30, %bb15
  br label %bb54, !dbg !1221

bb18:                                             ; preds = %bb31, %bb17
  %28 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1241
  %_31 = load i32, i32* %28, align 8, !dbg !1241
  %_30 = icmp sle i32 %_31, 0, !dbg !1241
  br i1 %_30, label %bb19, label %bb32, !dbg !1241

bb32:                                             ; preds = %bb18
  br label %bb33, !dbg !1239

bb19:                                             ; preds = %bb18
  %29 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1242
  %_33 = load i32, i32* %29, align 8, !dbg !1242
  %30 = icmp eq i32 %_33, 0, !dbg !1242
  br i1 %30, label %bb20, label %bb26, !dbg !1242

bb20:                                             ; preds = %bb19
  %31 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 3, !dbg !1243
  %digit = getelementptr inbounds [768 x i8], [768 x i8]* %31, i64 0, i64 0, !dbg !1243
  store i8* %digit, i8** %digit.dbg.spill, align 8, !dbg !1243
  call void @llvm.dbg.declare(metadata i8** %digit.dbg.spill, metadata !1194, metadata !DIExpression()), !dbg !1244
  %_38 = load i8, i8* %digit, align 1, !dbg !1245
  %_37 = icmp uge i8 %_38, 5, !dbg !1245
  br i1 %_37, label %bb22, label %bb23, !dbg !1245

bb26:                                             ; preds = %bb19
  %32 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1246
  %_44 = load i32, i32* %32, align 8, !dbg !1246
  %_43 = sub i32 0, %_44, !dbg !1247
  %_42 = sext i32 %_43 to i64, !dbg !1247
  store i64 %_42, i64* %_40, align 8, !dbg !1248
  %33 = load i64, i64* %_40, align 8, !dbg !1248
; call core::num::dec2flt::slow::parse_long_mantissa::{{closure}}
  %34 = call i64 @"_ZN4core3num7dec2flt4slow19parse_long_mantissa28_$u7b$$u7b$closure$u7d$$u7d$17h75f79c57090ebb62E"(%"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]"* align 1 %get_shift, i64 %33), !dbg !1248
  store i64 %34, i64* %shift, align 8, !dbg !1248
  br label %bb27, !dbg !1248

bb27:                                             ; preds = %bb26
  br label %bb28, !dbg !1249

bb28:                                             ; preds = %bb25, %bb27
  %_47 = load i64, i64* %shift, align 8, !dbg !1250
; call core::num::dec2flt::decimal::Decimal::left_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal10left_shift17h364ee52e1cf58023E(%"core::num::dec2flt::decimal::Decimal"* align 8 %d, i64 %_47), !dbg !1251
  br label %bb29, !dbg !1251

bb23:                                             ; preds = %bb20
  %35 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 3, !dbg !1252
  %36 = getelementptr inbounds [768 x i8], [768 x i8]* %35, i64 0, i64 0, !dbg !1252
  %37 = load i8, i8* %36, align 1, !dbg !1252
  switch i8 %37, label %bb21 [
    i8 0, label %bb24
    i8 1, label %bb24
  ], !dbg !1252

bb22:                                             ; preds = %bb20
  br label %bb33, !dbg !1239

bb33:                                             ; preds = %bb32, %bb22
  %38 = load i32, i32* %exp2, align 4, !dbg !1253
  %39 = sub i32 %38, 1, !dbg !1253
  store i32 %39, i32* %exp2, align 4, !dbg !1253
  br label %bb34, !dbg !1254

bb21:                                             ; preds = %bb23
  store i64 1, i64* %shift, align 8, !dbg !1255
  br label %bb25, !dbg !1255

bb24:                                             ; preds = %bb23, %bb23
  store i64 2, i64* %shift, align 8, !dbg !1256
  br label %bb25, !dbg !1256

bb25:                                             ; preds = %bb24, %bb21
  br label %bb28, !dbg !1249

bb29:                                             ; preds = %bb28
  %40 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1257
  %_49 = load i32, i32* %40, align 8, !dbg !1257
  %_48 = icmp sgt i32 %_49, 2047, !dbg !1257
  br i1 %_48, label %bb30, label %bb31, !dbg !1257

bb31:                                             ; preds = %bb29
  %_51 = load i64, i64* %shift, align 8, !dbg !1258
  %_50 = trunc i64 %_51 to i32, !dbg !1258
  %41 = load i32, i32* %exp2, align 4, !dbg !1259
  %42 = sub i32 %41, %_50, !dbg !1259
  store i32 %42, i32* %exp2, align 4, !dbg !1259
  br label %bb18, !dbg !1229

bb30:                                             ; preds = %bb29
  %43 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1260
  store i64 %fp_inf.0, i64* %43, align 8, !dbg !1260
  %44 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1260
  store i32 %fp_inf.1, i32* %44, align 8, !dbg !1260
  br label %bb52, !dbg !1239

bb34:                                             ; preds = %bb38, %bb33
  %_54 = load i32, i32* %exp2, align 4, !dbg !1261
  %_52 = icmp sgt i32 -126, %_54, !dbg !1262
  br i1 %_52, label %bb35, label %bb39, !dbg !1262

bb39:                                             ; preds = %bb34
  %_68 = load i32, i32* %exp2, align 4, !dbg !1263
  %_67 = sub i32 %_68, -127, !dbg !1264
  %_66 = icmp sge i32 %_67, 255, !dbg !1264
  br i1 %_66, label %bb40, label %bb41, !dbg !1264

bb35:                                             ; preds = %bb34
  %_58 = load i32, i32* %exp2, align 4, !dbg !1265
  %_56 = sub i32 -126, %_58, !dbg !1266
  %45 = sext i32 %_56 to i64, !dbg !1266
  store i64 %45, i64* %n, align 8, !dbg !1266
  %_60 = load i64, i64* %n, align 8, !dbg !1267
  %_59 = icmp ugt i64 %_60, 60, !dbg !1267
  br i1 %_59, label %bb36, label %bb37, !dbg !1267

bb37:                                             ; preds = %bb36, %bb35
  %_63 = load i64, i64* %n, align 8, !dbg !1268
; call core::num::dec2flt::decimal::Decimal::right_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal11right_shift17ha78a92e3c7a8e301E(%"core::num::dec2flt::decimal::Decimal"* align 8 %d, i64 %_63), !dbg !1269
  br label %bb38, !dbg !1269

bb36:                                             ; preds = %bb35
  store i64 60, i64* %n, align 8, !dbg !1270
  br label %bb37, !dbg !1271

bb38:                                             ; preds = %bb37
  %_65 = load i64, i64* %n, align 8, !dbg !1272
  %_64 = trunc i64 %_65 to i32, !dbg !1272
  %46 = load i32, i32* %exp2, align 4, !dbg !1273
  %47 = add i32 %46, %_64, !dbg !1273
  store i32 %47, i32* %exp2, align 4, !dbg !1273
  br label %bb34, !dbg !1254

bb41:                                             ; preds = %bb39
; call core::num::dec2flt::decimal::Decimal::left_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal10left_shift17h364ee52e1cf58023E(%"core::num::dec2flt::decimal::Decimal"* align 8 %d, i64 24), !dbg !1274
  br label %bb42, !dbg !1274

bb40:                                             ; preds = %bb39
  %48 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1275
  store i64 %fp_inf.0, i64* %48, align 8, !dbg !1275
  %49 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1275
  store i32 %fp_inf.1, i32* %49, align 8, !dbg !1275
  br label %bb52, !dbg !1239

bb42:                                             ; preds = %bb41
; call core::num::dec2flt::decimal::Decimal::round
  %50 = call i64 @_ZN4core3num7dec2flt7decimal7Decimal5round17h8282f629b6a14406E(%"core::num::dec2flt::decimal::Decimal"* align 8 %d), !dbg !1276
  store i64 %50, i64* %mantissa, align 8, !dbg !1276
  br label %bb43, !dbg !1276

bb43:                                             ; preds = %bb42
  %_75 = load i64, i64* %mantissa, align 8, !dbg !1277
  %_74 = icmp uge i64 %_75, 16777216, !dbg !1277
  br i1 %_74, label %bb44, label %bb49, !dbg !1277

bb49:                                             ; preds = %bb48, %bb43
  %_86 = load i32, i32* %exp2, align 4, !dbg !1278
  %51 = sub i32 %_86, -127, !dbg !1278
  store i32 %51, i32* %power2, align 4, !dbg !1278
  %_88 = load i64, i64* %mantissa, align 8, !dbg !1279
  %_87 = icmp ult i64 %_88, 8388608, !dbg !1279
  br i1 %_87, label %bb50, label %bb51, !dbg !1279

bb44:                                             ; preds = %bb43
; call core::num::dec2flt::decimal::Decimal::right_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal11right_shift17ha78a92e3c7a8e301E(%"core::num::dec2flt::decimal::Decimal"* align 8 %d, i64 1), !dbg !1280
  br label %bb45, !dbg !1280

bb45:                                             ; preds = %bb44
  %52 = load i32, i32* %exp2, align 4, !dbg !1281
  %53 = add i32 %52, 1, !dbg !1281
  store i32 %53, i32* %exp2, align 4, !dbg !1281
; call core::num::dec2flt::decimal::Decimal::round
  %_80 = call i64 @_ZN4core3num7dec2flt7decimal7Decimal5round17h8282f629b6a14406E(%"core::num::dec2flt::decimal::Decimal"* align 8 %d), !dbg !1282
  br label %bb46, !dbg !1282

bb46:                                             ; preds = %bb45
  store i64 %_80, i64* %mantissa, align 8, !dbg !1283
  %_84 = load i32, i32* %exp2, align 4, !dbg !1284
  %_83 = sub i32 %_84, -127, !dbg !1285
  %_82 = icmp sge i32 %_83, 255, !dbg !1285
  br i1 %_82, label %bb47, label %bb48, !dbg !1285

bb48:                                             ; preds = %bb46
  br label %bb49, !dbg !1286

bb47:                                             ; preds = %bb46
  %54 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1287
  store i64 %fp_inf.0, i64* %54, align 8, !dbg !1287
  %55 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1287
  store i32 %fp_inf.1, i32* %55, align 8, !dbg !1287
  br label %bb52, !dbg !1239

bb55:                                             ; preds = %bb51, %bb54
  %56 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1227
  %57 = load i64, i64* %56, align 8, !dbg !1227
  %58 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1227
  %59 = load i32, i32* %58, align 8, !dbg !1227
  %60 = insertvalue { i64, i32 } undef, i64 %57, 0, !dbg !1227
  %61 = insertvalue { i64, i32 } %60, i32 %59, 1, !dbg !1227
  ret { i64, i32 } %61, !dbg !1227

bb51:                                             ; preds = %bb50, %bb49
  %62 = load i64, i64* %mantissa, align 8, !dbg !1288
  %63 = and i64 %62, 8388607, !dbg !1288
  store i64 %63, i64* %mantissa, align 8, !dbg !1288
  %_92 = load i64, i64* %mantissa, align 8, !dbg !1289
  %_93 = load i32, i32* %power2, align 4, !dbg !1290
  %64 = bitcast { i64, i32 }* %0 to i64*, !dbg !1291
  store i64 %_92, i64* %64, align 8, !dbg !1291
  %65 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1291
  store i32 %_93, i32* %65, align 8, !dbg !1291
  br label %bb55, !dbg !1227

bb50:                                             ; preds = %bb49
  %66 = load i32, i32* %power2, align 4, !dbg !1292
  %67 = sub i32 %66, 1, !dbg !1292
  store i32 %67, i32* %power2, align 4, !dbg !1292
  br label %bb51, !dbg !1293
}

; core::num::dec2flt::slow::parse_long_mantissa
; Function Attrs: nonlazybind uwtable
define { i64, i32 } @_ZN4core3num7dec2flt4slow19parse_long_mantissa17hf4d7f84352164288E([0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !1294 {
start:
  %digit.dbg.spill = alloca i8*, align 8
  %shift.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %fp_inf.dbg.spill = alloca { i64, i32 }, align 8
  %fp_zero.dbg.spill = alloca { i64, i32 }, align 8
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %power2 = alloca i32, align 4
  %mantissa = alloca i64, align 8
  %n = alloca i64, align 8
  %_40 = alloca i64, align 8
  %shift = alloca i64, align 8
  %_20 = alloca i64, align 8
  %exp2 = alloca i32, align 4
  %_7 = alloca i8, align 1
  %d = alloca %"core::num::dec2flt::decimal::Decimal", align 8
  %get_shift = alloca %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]", align 1
  %0 = alloca { i64, i32 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !1296, metadata !DIExpression()), !dbg !1325
  call void @llvm.dbg.declare(metadata %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]"* %get_shift, metadata !1297, metadata !DIExpression()), !dbg !1326
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::decimal::Decimal"* %d, metadata !1304, metadata !DIExpression()), !dbg !1327
  call void @llvm.dbg.declare(metadata i32* %exp2, metadata !1306, metadata !DIExpression()), !dbg !1328
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !1312, metadata !DIExpression()), !dbg !1329
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1317, metadata !DIExpression()), !dbg !1330
  call void @llvm.dbg.declare(metadata i64* %mantissa, metadata !1319, metadata !DIExpression()), !dbg !1331
  call void @llvm.dbg.declare(metadata i32* %power2, metadata !1321, metadata !DIExpression()), !dbg !1332
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %3 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217he9d0af27d074a382E(i32 0), !dbg !1333
  %fp_zero.0 = extractvalue { i64, i32 } %3, 0, !dbg !1333
  %fp_zero.1 = extractvalue { i64, i32 } %3, 1, !dbg !1333
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_zero.dbg.spill, i32 0, i32 0, !dbg !1333
  store i64 %fp_zero.0, i64* %4, align 8, !dbg !1333
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_zero.dbg.spill, i32 0, i32 1, !dbg !1333
  store i32 %fp_zero.1, i32* %5, align 8, !dbg !1333
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_zero.dbg.spill, metadata !1300, metadata !DIExpression()), !dbg !1334
  br label %bb1, !dbg !1333

bb1:                                              ; preds = %start
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %6 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217he9d0af27d074a382E(i32 2047), !dbg !1335
  %fp_inf.0 = extractvalue { i64, i32 } %6, 0, !dbg !1335
  %fp_inf.1 = extractvalue { i64, i32 } %6, 1, !dbg !1335
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_inf.dbg.spill, i32 0, i32 0, !dbg !1335
  store i64 %fp_inf.0, i64* %7, align 8, !dbg !1335
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_inf.dbg.spill, i32 0, i32 1, !dbg !1335
  store i32 %fp_inf.1, i32* %8, align 8, !dbg !1335
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_inf.dbg.spill, metadata !1302, metadata !DIExpression()), !dbg !1336
  br label %bb2, !dbg !1335

bb2:                                              ; preds = %bb1
; call core::num::dec2flt::decimal::parse_decimal
  call void @_ZN4core3num7dec2flt7decimal13parse_decimal17hf4914cdf3def232bE(%"core::num::dec2flt::decimal::Decimal"* sret(%"core::num::dec2flt::decimal::Decimal") %d, [0 x i8]* align 1 %s.0, i64 %s.1), !dbg !1337
  br label %bb3, !dbg !1337

bb3:                                              ; preds = %bb2
  %9 = bitcast %"core::num::dec2flt::decimal::Decimal"* %d to i64*, !dbg !1338
  %_8 = load i64, i64* %9, align 8, !dbg !1338
  %10 = icmp eq i64 %_8, 0, !dbg !1338
  br i1 %10, label %bb4, label %bb5, !dbg !1338

bb4:                                              ; preds = %bb3
  store i8 1, i8* %_7, align 1, !dbg !1338
  br label %bb6, !dbg !1338

bb5:                                              ; preds = %bb3
  %11 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1339
  %_10 = load i32, i32* %11, align 8, !dbg !1339
  %_9 = icmp slt i32 %_10, -324, !dbg !1339
  %12 = zext i1 %_9 to i8, !dbg !1338
  store i8 %12, i8* %_7, align 1, !dbg !1338
  br label %bb6, !dbg !1338

bb6:                                              ; preds = %bb4, %bb5
  %13 = load i8, i8* %_7, align 1, !dbg !1338, !range !266, !noundef !19
  %14 = trunc i8 %13 to i1, !dbg !1338
  br i1 %14, label %bb7, label %bb8, !dbg !1338

bb8:                                              ; preds = %bb6
  %15 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1340
  %_12 = load i32, i32* %15, align 8, !dbg !1340
  %_11 = icmp sge i32 %_12, 310, !dbg !1340
  br i1 %_11, label %bb9, label %bb10, !dbg !1340

bb7:                                              ; preds = %bb6
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1341
  store i64 %fp_zero.0, i64* %16, align 8, !dbg !1341
  %17 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1341
  store i32 %fp_zero.1, i32* %17, align 8, !dbg !1341
  br label %bb53, !dbg !1342

bb53:                                             ; preds = %bb9, %bb7
  br label %bb54, !dbg !1343

bb10:                                             ; preds = %bb8
  store i32 0, i32* %exp2, align 4, !dbg !1345
  br label %bb11, !dbg !1346

bb9:                                              ; preds = %bb8
  %18 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1347
  store i64 %fp_inf.0, i64* %18, align 8, !dbg !1347
  %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1347
  store i32 %fp_inf.1, i32* %19, align 8, !dbg !1347
  br label %bb53, !dbg !1343

bb54:                                             ; preds = %bb52, %bb53
  br label %bb55, !dbg !1348

bb11:                                             ; preds = %bb16, %bb10
  %20 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1349
  %_15 = load i32, i32* %20, align 8, !dbg !1349
  %_14 = icmp sgt i32 %_15, 0, !dbg !1349
  br i1 %_14, label %bb12, label %bb17, !dbg !1349

bb17:                                             ; preds = %bb11
  br label %bb18, !dbg !1350

bb12:                                             ; preds = %bb11
  %21 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1351
  %_17 = load i32, i32* %21, align 8, !dbg !1351
  %n1 = sext i32 %_17 to i64, !dbg !1351
  store i64 %n1, i64* %n.dbg.spill, align 8, !dbg !1351
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1308, metadata !DIExpression()), !dbg !1352
  store i64 %n1, i64* %_20, align 8, !dbg !1353
  %22 = load i64, i64* %_20, align 8, !dbg !1353
; call core::num::dec2flt::slow::parse_long_mantissa::{{closure}}
  %shift2 = call i64 @"_ZN4core3num7dec2flt4slow19parse_long_mantissa28_$u7b$$u7b$closure$u7d$$u7d$17h428c76813a9a5625E"(%"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]"* align 1 %get_shift, i64 %22), !dbg !1353
  store i64 %shift2, i64* %shift.dbg.spill, align 8, !dbg !1353
  call void @llvm.dbg.declare(metadata i64* %shift.dbg.spill, metadata !1310, metadata !DIExpression()), !dbg !1354
  br label %bb13, !dbg !1353

bb13:                                             ; preds = %bb12
; call core::num::dec2flt::decimal::Decimal::right_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal11right_shift17ha78a92e3c7a8e301E(%"core::num::dec2flt::decimal::Decimal"* align 8 %d, i64 %shift2), !dbg !1355
  br label %bb14, !dbg !1355

bb14:                                             ; preds = %bb13
  %23 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1356
  %_26 = load i32, i32* %23, align 8, !dbg !1356
  %_25 = icmp slt i32 %_26, -2047, !dbg !1356
  br i1 %_25, label %bb15, label %bb16, !dbg !1356

bb16:                                             ; preds = %bb14
  %_28 = trunc i64 %shift2 to i32, !dbg !1357
  %24 = load i32, i32* %exp2, align 4, !dbg !1358
  %25 = add i32 %24, %_28, !dbg !1358
  store i32 %25, i32* %exp2, align 4, !dbg !1358
  br label %bb11, !dbg !1346

bb15:                                             ; preds = %bb14
  %26 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1359
  store i64 %fp_zero.0, i64* %26, align 8, !dbg !1359
  %27 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1359
  store i32 %fp_zero.1, i32* %27, align 8, !dbg !1359
  br label %bb52, !dbg !1360

bb52:                                             ; preds = %bb47, %bb40, %bb30, %bb15
  br label %bb54, !dbg !1343

bb18:                                             ; preds = %bb31, %bb17
  %28 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1362
  %_31 = load i32, i32* %28, align 8, !dbg !1362
  %_30 = icmp sle i32 %_31, 0, !dbg !1362
  br i1 %_30, label %bb19, label %bb32, !dbg !1362

bb32:                                             ; preds = %bb18
  br label %bb33, !dbg !1360

bb19:                                             ; preds = %bb18
  %29 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1363
  %_33 = load i32, i32* %29, align 8, !dbg !1363
  %30 = icmp eq i32 %_33, 0, !dbg !1363
  br i1 %30, label %bb20, label %bb26, !dbg !1363

bb20:                                             ; preds = %bb19
  %31 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 3, !dbg !1364
  %digit = getelementptr inbounds [768 x i8], [768 x i8]* %31, i64 0, i64 0, !dbg !1364
  store i8* %digit, i8** %digit.dbg.spill, align 8, !dbg !1364
  call void @llvm.dbg.declare(metadata i8** %digit.dbg.spill, metadata !1316, metadata !DIExpression()), !dbg !1365
  %_38 = load i8, i8* %digit, align 1, !dbg !1366
  %_37 = icmp uge i8 %_38, 5, !dbg !1366
  br i1 %_37, label %bb22, label %bb23, !dbg !1366

bb26:                                             ; preds = %bb19
  %32 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1367
  %_44 = load i32, i32* %32, align 8, !dbg !1367
  %_43 = sub i32 0, %_44, !dbg !1368
  %_42 = sext i32 %_43 to i64, !dbg !1368
  store i64 %_42, i64* %_40, align 8, !dbg !1369
  %33 = load i64, i64* %_40, align 8, !dbg !1369
; call core::num::dec2flt::slow::parse_long_mantissa::{{closure}}
  %34 = call i64 @"_ZN4core3num7dec2flt4slow19parse_long_mantissa28_$u7b$$u7b$closure$u7d$$u7d$17h428c76813a9a5625E"(%"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]"* align 1 %get_shift, i64 %33), !dbg !1369
  store i64 %34, i64* %shift, align 8, !dbg !1369
  br label %bb27, !dbg !1369

bb27:                                             ; preds = %bb26
  br label %bb28, !dbg !1370

bb28:                                             ; preds = %bb25, %bb27
  %_47 = load i64, i64* %shift, align 8, !dbg !1371
; call core::num::dec2flt::decimal::Decimal::left_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal10left_shift17h364ee52e1cf58023E(%"core::num::dec2flt::decimal::Decimal"* align 8 %d, i64 %_47), !dbg !1372
  br label %bb29, !dbg !1372

bb23:                                             ; preds = %bb20
  %35 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 3, !dbg !1373
  %36 = getelementptr inbounds [768 x i8], [768 x i8]* %35, i64 0, i64 0, !dbg !1373
  %37 = load i8, i8* %36, align 1, !dbg !1373
  switch i8 %37, label %bb21 [
    i8 0, label %bb24
    i8 1, label %bb24
  ], !dbg !1373

bb22:                                             ; preds = %bb20
  br label %bb33, !dbg !1360

bb33:                                             ; preds = %bb32, %bb22
  %38 = load i32, i32* %exp2, align 4, !dbg !1374
  %39 = sub i32 %38, 1, !dbg !1374
  store i32 %39, i32* %exp2, align 4, !dbg !1374
  br label %bb34, !dbg !1375

bb21:                                             ; preds = %bb23
  store i64 1, i64* %shift, align 8, !dbg !1376
  br label %bb25, !dbg !1376

bb24:                                             ; preds = %bb23, %bb23
  store i64 2, i64* %shift, align 8, !dbg !1377
  br label %bb25, !dbg !1377

bb25:                                             ; preds = %bb24, %bb21
  br label %bb28, !dbg !1370

bb29:                                             ; preds = %bb28
  %40 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1378
  %_49 = load i32, i32* %40, align 8, !dbg !1378
  %_48 = icmp sgt i32 %_49, 2047, !dbg !1378
  br i1 %_48, label %bb30, label %bb31, !dbg !1378

bb31:                                             ; preds = %bb29
  %_51 = load i64, i64* %shift, align 8, !dbg !1379
  %_50 = trunc i64 %_51 to i32, !dbg !1379
  %41 = load i32, i32* %exp2, align 4, !dbg !1380
  %42 = sub i32 %41, %_50, !dbg !1380
  store i32 %42, i32* %exp2, align 4, !dbg !1380
  br label %bb18, !dbg !1350

bb30:                                             ; preds = %bb29
  %43 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1381
  store i64 %fp_inf.0, i64* %43, align 8, !dbg !1381
  %44 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1381
  store i32 %fp_inf.1, i32* %44, align 8, !dbg !1381
  br label %bb52, !dbg !1360

bb34:                                             ; preds = %bb38, %bb33
  %_54 = load i32, i32* %exp2, align 4, !dbg !1382
  %_52 = icmp sgt i32 -1022, %_54, !dbg !1383
  br i1 %_52, label %bb35, label %bb39, !dbg !1383

bb39:                                             ; preds = %bb34
  %_68 = load i32, i32* %exp2, align 4, !dbg !1384
  %_67 = sub i32 %_68, -1023, !dbg !1385
  %_66 = icmp sge i32 %_67, 2047, !dbg !1385
  br i1 %_66, label %bb40, label %bb41, !dbg !1385

bb35:                                             ; preds = %bb34
  %_58 = load i32, i32* %exp2, align 4, !dbg !1386
  %_56 = sub i32 -1022, %_58, !dbg !1387
  %45 = sext i32 %_56 to i64, !dbg !1387
  store i64 %45, i64* %n, align 8, !dbg !1387
  %_60 = load i64, i64* %n, align 8, !dbg !1388
  %_59 = icmp ugt i64 %_60, 60, !dbg !1388
  br i1 %_59, label %bb36, label %bb37, !dbg !1388

bb37:                                             ; preds = %bb36, %bb35
  %_63 = load i64, i64* %n, align 8, !dbg !1389
; call core::num::dec2flt::decimal::Decimal::right_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal11right_shift17ha78a92e3c7a8e301E(%"core::num::dec2flt::decimal::Decimal"* align 8 %d, i64 %_63), !dbg !1390
  br label %bb38, !dbg !1390

bb36:                                             ; preds = %bb35
  store i64 60, i64* %n, align 8, !dbg !1391
  br label %bb37, !dbg !1392

bb38:                                             ; preds = %bb37
  %_65 = load i64, i64* %n, align 8, !dbg !1393
  %_64 = trunc i64 %_65 to i32, !dbg !1393
  %46 = load i32, i32* %exp2, align 4, !dbg !1394
  %47 = add i32 %46, %_64, !dbg !1394
  store i32 %47, i32* %exp2, align 4, !dbg !1394
  br label %bb34, !dbg !1375

bb41:                                             ; preds = %bb39
; call core::num::dec2flt::decimal::Decimal::left_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal10left_shift17h364ee52e1cf58023E(%"core::num::dec2flt::decimal::Decimal"* align 8 %d, i64 53), !dbg !1395
  br label %bb42, !dbg !1395

bb40:                                             ; preds = %bb39
  %48 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1396
  store i64 %fp_inf.0, i64* %48, align 8, !dbg !1396
  %49 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1396
  store i32 %fp_inf.1, i32* %49, align 8, !dbg !1396
  br label %bb52, !dbg !1360

bb42:                                             ; preds = %bb41
; call core::num::dec2flt::decimal::Decimal::round
  %50 = call i64 @_ZN4core3num7dec2flt7decimal7Decimal5round17h8282f629b6a14406E(%"core::num::dec2flt::decimal::Decimal"* align 8 %d), !dbg !1397
  store i64 %50, i64* %mantissa, align 8, !dbg !1397
  br label %bb43, !dbg !1397

bb43:                                             ; preds = %bb42
  %_75 = load i64, i64* %mantissa, align 8, !dbg !1398
  %_74 = icmp uge i64 %_75, 9007199254740992, !dbg !1398
  br i1 %_74, label %bb44, label %bb49, !dbg !1398

bb49:                                             ; preds = %bb48, %bb43
  %_86 = load i32, i32* %exp2, align 4, !dbg !1399
  %51 = sub i32 %_86, -1023, !dbg !1399
  store i32 %51, i32* %power2, align 4, !dbg !1399
  %_88 = load i64, i64* %mantissa, align 8, !dbg !1400
  %_87 = icmp ult i64 %_88, 4503599627370496, !dbg !1400
  br i1 %_87, label %bb50, label %bb51, !dbg !1400

bb44:                                             ; preds = %bb43
; call core::num::dec2flt::decimal::Decimal::right_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal11right_shift17ha78a92e3c7a8e301E(%"core::num::dec2flt::decimal::Decimal"* align 8 %d, i64 1), !dbg !1401
  br label %bb45, !dbg !1401

bb45:                                             ; preds = %bb44
  %52 = load i32, i32* %exp2, align 4, !dbg !1402
  %53 = add i32 %52, 1, !dbg !1402
  store i32 %53, i32* %exp2, align 4, !dbg !1402
; call core::num::dec2flt::decimal::Decimal::round
  %_80 = call i64 @_ZN4core3num7dec2flt7decimal7Decimal5round17h8282f629b6a14406E(%"core::num::dec2flt::decimal::Decimal"* align 8 %d), !dbg !1403
  br label %bb46, !dbg !1403

bb46:                                             ; preds = %bb45
  store i64 %_80, i64* %mantissa, align 8, !dbg !1404
  %_84 = load i32, i32* %exp2, align 4, !dbg !1405
  %_83 = sub i32 %_84, -1023, !dbg !1406
  %_82 = icmp sge i32 %_83, 2047, !dbg !1406
  br i1 %_82, label %bb47, label %bb48, !dbg !1406

bb48:                                             ; preds = %bb46
  br label %bb49, !dbg !1407

bb47:                                             ; preds = %bb46
  %54 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1408
  store i64 %fp_inf.0, i64* %54, align 8, !dbg !1408
  %55 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1408
  store i32 %fp_inf.1, i32* %55, align 8, !dbg !1408
  br label %bb52, !dbg !1360

bb55:                                             ; preds = %bb51, %bb54
  %56 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1348
  %57 = load i64, i64* %56, align 8, !dbg !1348
  %58 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1348
  %59 = load i32, i32* %58, align 8, !dbg !1348
  %60 = insertvalue { i64, i32 } undef, i64 %57, 0, !dbg !1348
  %61 = insertvalue { i64, i32 } %60, i32 %59, 1, !dbg !1348
  ret { i64, i32 } %61, !dbg !1348

bb51:                                             ; preds = %bb50, %bb49
  %62 = load i64, i64* %mantissa, align 8, !dbg !1409
  %63 = and i64 %62, 4503599627370495, !dbg !1409
  store i64 %63, i64* %mantissa, align 8, !dbg !1409
  %_92 = load i64, i64* %mantissa, align 8, !dbg !1410
  %_93 = load i32, i32* %power2, align 4, !dbg !1411
  %64 = bitcast { i64, i32 }* %0 to i64*, !dbg !1412
  store i64 %_92, i64* %64, align 8, !dbg !1412
  %65 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1412
  store i32 %_93, i32* %65, align 8, !dbg !1412
  br label %bb55, !dbg !1348

bb50:                                             ; preds = %bb49
  %66 = load i32, i32* %power2, align 4, !dbg !1413
  %67 = sub i32 %66, 1, !dbg !1413
  store i32 %67, i32* %power2, align 4, !dbg !1413
  br label %bb51, !dbg !1414
}

; core::num::dec2flt::slow::parse_long_mantissa::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3num7dec2flt4slow19parse_long_mantissa28_$u7b$$u7b$closure$u7d$$u7d$17h428c76813a9a5625E"(%"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]"* align 1 %_1, i64 %n) unnamed_addr #0 !dbg !1415 {
start:
  %n.dbg.spill = alloca i64, align 8
  %_1.dbg.spill = alloca %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]"*, align 8
  %_6 = alloca [19 x i8], align 1
  %0 = alloca i64, align 8
  store %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]"* %_1, %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]"** %_1.dbg.spill, metadata !1421, metadata !DIExpression()), !dbg !1422
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1420, metadata !DIExpression()), !dbg !1423
  %_3 = icmp ult i64 %n, 19, !dbg !1424
  br i1 %_3, label %bb1, label %bb3, !dbg !1424

bb3:                                              ; preds = %start
  store i64 60, i64* %0, align 8, !dbg !1425
  br label %bb4, !dbg !1426

bb1:                                              ; preds = %start
  %1 = bitcast [19 x i8]* %_6 to i8*, !dbg !1427
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @0, i32 0, i32 0, i32 0), i64 19, i1 false), !dbg !1427
  %_9 = icmp ult i64 %n, 19, !dbg !1427
  %2 = call i1 @llvm.expect.i1(i1 %_9, i1 true), !dbg !1427
  br i1 %2, label %bb2, label %panic, !dbg !1427

bb2:                                              ; preds = %bb1
  %3 = getelementptr inbounds [19 x i8], [19 x i8]* %_6, i64 0, i64 %n, !dbg !1427
  %_5 = load i8, i8* %3, align 1, !dbg !1427
  %4 = zext i8 %_5 to i64, !dbg !1427
  store i64 %4, i64* %0, align 8, !dbg !1427
  br label %bb4, !dbg !1426

panic:                                            ; preds = %bb1
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %n, i64 19, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc6360 to %"core::panic::location::Location"*)) #7, !dbg !1427
  unreachable, !dbg !1427

bb4:                                              ; preds = %bb3, %bb2
  %5 = load i64, i64* %0, align 8, !dbg !1428
  ret i64 %5, !dbg !1428
}

; core::num::dec2flt::slow::parse_long_mantissa::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3num7dec2flt4slow19parse_long_mantissa28_$u7b$$u7b$closure$u7d$$u7d$17h75f79c57090ebb62E"(%"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]"* align 1 %_1, i64 %n) unnamed_addr #0 !dbg !1429 {
start:
  %n.dbg.spill = alloca i64, align 8
  %_1.dbg.spill = alloca %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]"*, align 8
  %_6 = alloca [19 x i8], align 1
  %0 = alloca i64, align 8
  store %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]"* %_1, %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]"** %_1.dbg.spill, metadata !1435, metadata !DIExpression()), !dbg !1436
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1434, metadata !DIExpression()), !dbg !1437
  %_3 = icmp ult i64 %n, 19, !dbg !1438
  br i1 %_3, label %bb1, label %bb3, !dbg !1438

bb3:                                              ; preds = %start
  store i64 60, i64* %0, align 8, !dbg !1439
  br label %bb4, !dbg !1440

bb1:                                              ; preds = %start
  %1 = bitcast [19 x i8]* %_6 to i8*, !dbg !1441
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @0, i32 0, i32 0, i32 0), i64 19, i1 false), !dbg !1441
  %_9 = icmp ult i64 %n, 19, !dbg !1441
  %2 = call i1 @llvm.expect.i1(i1 %_9, i1 true), !dbg !1441
  br i1 %2, label %bb2, label %panic, !dbg !1441

bb2:                                              ; preds = %bb1
  %3 = getelementptr inbounds [19 x i8], [19 x i8]* %_6, i64 0, i64 %n, !dbg !1441
  %_5 = load i8, i8* %3, align 1, !dbg !1441
  %4 = zext i8 %_5 to i64, !dbg !1441
  store i64 %4, i64* %0, align 8, !dbg !1441
  br label %bb4, !dbg !1440

panic:                                            ; preds = %bb1
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %n, i64 19, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc6360 to %"core::panic::location::Location"*)) #7, !dbg !1441
  unreachable, !dbg !1441

bb4:                                              ; preds = %bb3, %bb2
  %5 = load i64, i64* %0, align 8, !dbg !1442
  ret i64 %5, !dbg !1442
}

; core::num::dec2flt::parse::parse_inf_nan
; Function Attrs: nonlazybind uwtable
define { i64, double } @_ZN4core3num7dec2flt5parse13parse_inf_nan17h0def64f125fb9befE([0 x i8]* align 1 %s.0, i64 %s.1, i1 zeroext %negative) unnamed_addr #1 !dbg !1443 {
start:
  %rest.dbg.spill = alloca i64, align 8
  %negative.dbg.spill = alloca i8, align 1
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %float = alloca double, align 8
  %_3 = alloca %"core::option::Option<(f64, usize)>", align 8
  %0 = alloca { i64, double }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !1460, metadata !DIExpression()), !dbg !1465
  %3 = zext i1 %negative to i8
  store i8 %3, i8* %negative.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %negative.dbg.spill, metadata !1461, metadata !DIExpression()), !dbg !1466
  call void @llvm.dbg.declare(metadata double* %float, metadata !1462, metadata !DIExpression()), !dbg !1467
; call core::num::dec2flt::parse::parse_partial_inf_nan
  call void @_ZN4core3num7dec2flt5parse21parse_partial_inf_nan17h00f5be0cf65355e6E(%"core::option::Option<(f64, usize)>"* sret(%"core::option::Option<(f64, usize)>") %_3, [0 x i8]* align 1 %s.0, i64 %s.1), !dbg !1468
  br label %bb1, !dbg !1468

bb1:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<(f64, usize)>"* %_3 to i64*, !dbg !1469
  %_5 = load i64, i64* %4, align 8, !dbg !1469, !range !1107, !noundef !19
  %5 = icmp eq i64 %_5, 1, !dbg !1469
  br i1 %5, label %bb2, label %bb8, !dbg !1469

bb2:                                              ; preds = %bb1
  %6 = bitcast %"core::option::Option<(f64, usize)>"* %_3 to %"core::option::Option<(f64, usize)>::Some"*, !dbg !1467
  %7 = getelementptr inbounds %"core::option::Option<(f64, usize)>::Some", %"core::option::Option<(f64, usize)>::Some"* %6, i32 0, i32 1, !dbg !1467
  %8 = bitcast { double, i64 }* %7 to double*, !dbg !1467
  %9 = load double, double* %8, align 8, !dbg !1467
  store double %9, double* %float, align 8, !dbg !1467
  %10 = bitcast %"core::option::Option<(f64, usize)>"* %_3 to %"core::option::Option<(f64, usize)>::Some"*, !dbg !1470
  %11 = getelementptr inbounds %"core::option::Option<(f64, usize)>::Some", %"core::option::Option<(f64, usize)>::Some"* %10, i32 0, i32 1, !dbg !1470
  %12 = getelementptr inbounds { double, i64 }, { double, i64 }* %11, i32 0, i32 1, !dbg !1470
  %rest = load i64, i64* %12, align 8, !dbg !1470
  store i64 %rest, i64* %rest.dbg.spill, align 8, !dbg !1470
  call void @llvm.dbg.declare(metadata i64* %rest.dbg.spill, metadata !1464, metadata !DIExpression()), !dbg !1470
  %_8 = icmp eq i64 %rest, %s.1, !dbg !1471
  br i1 %_8, label %bb3, label %bb7, !dbg !1471

bb8:                                              ; preds = %bb7, %bb1
  %13 = bitcast { i64, double }* %0 to i64*, !dbg !1472
  store i64 0, i64* %13, align 8, !dbg !1472
  br label %bb9, !dbg !1473

bb7:                                              ; preds = %bb2
  br label %bb8, !dbg !1474

bb3:                                              ; preds = %bb2
  br i1 %negative, label %bb4, label %bb6, !dbg !1475

bb6:                                              ; preds = %bb5, %bb3
  %_15 = load double, double* %float, align 8, !dbg !1476
  %14 = getelementptr inbounds { i64, double }, { i64, double }* %0, i32 0, i32 1, !dbg !1477
  store double %_15, double* %14, align 8, !dbg !1477
  %15 = bitcast { i64, double }* %0 to i64*, !dbg !1477
  store i64 1, i64* %15, align 8, !dbg !1477
  br label %bb9, !dbg !1473

bb4:                                              ; preds = %bb3
  %_14 = load double, double* %float, align 8, !dbg !1478
; call <f64 as core::ops::arith::Neg>::neg
  %_13 = call double @"_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Neg$GT$3neg17h2916e189c8f22844E"(double %_14), !dbg !1479
  br label %bb5, !dbg !1479

bb5:                                              ; preds = %bb4
  store double %_13, double* %float, align 8, !dbg !1480
  br label %bb6, !dbg !1481

bb9:                                              ; preds = %bb8, %bb6
  %16 = getelementptr inbounds { i64, double }, { i64, double }* %0, i32 0, i32 0, !dbg !1473
  %17 = load i64, i64* %16, align 8, !dbg !1473, !range !1107, !noundef !19
  %18 = getelementptr inbounds { i64, double }, { i64, double }* %0, i32 0, i32 1, !dbg !1473
  %19 = load double, double* %18, align 8, !dbg !1473
  %20 = insertvalue { i64, double } undef, i64 %17, 0, !dbg !1473
  %21 = insertvalue { i64, double } %20, double %19, 1, !dbg !1473
  ret { i64, double } %21, !dbg !1473
}

; core::num::dec2flt::parse::parse_inf_nan
; Function Attrs: nonlazybind uwtable
define { i32, float } @_ZN4core3num7dec2flt5parse13parse_inf_nan17he9556e7df42fb6afE([0 x i8]* align 1 %s.0, i64 %s.1, i1 zeroext %negative) unnamed_addr #1 !dbg !1482 {
start:
  %rest.dbg.spill = alloca i64, align 8
  %negative.dbg.spill = alloca i8, align 1
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %float = alloca float, align 4
  %_3 = alloca %"core::option::Option<(f32, usize)>", align 8
  %0 = alloca { i32, float }, align 4
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !1497, metadata !DIExpression()), !dbg !1502
  %3 = zext i1 %negative to i8
  store i8 %3, i8* %negative.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %negative.dbg.spill, metadata !1498, metadata !DIExpression()), !dbg !1503
  call void @llvm.dbg.declare(metadata float* %float, metadata !1499, metadata !DIExpression()), !dbg !1504
; call core::num::dec2flt::parse::parse_partial_inf_nan
  call void @_ZN4core3num7dec2flt5parse21parse_partial_inf_nan17he115698c5f6b9bacE(%"core::option::Option<(f32, usize)>"* sret(%"core::option::Option<(f32, usize)>") %_3, [0 x i8]* align 1 %s.0, i64 %s.1), !dbg !1505
  br label %bb1, !dbg !1505

bb1:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<(f32, usize)>"* %_3 to i64*, !dbg !1506
  %_5 = load i64, i64* %4, align 8, !dbg !1506, !range !1107, !noundef !19
  %5 = icmp eq i64 %_5, 1, !dbg !1506
  br i1 %5, label %bb2, label %bb8, !dbg !1506

bb2:                                              ; preds = %bb1
  %6 = bitcast %"core::option::Option<(f32, usize)>"* %_3 to %"core::option::Option<(f32, usize)>::Some"*, !dbg !1504
  %7 = getelementptr inbounds %"core::option::Option<(f32, usize)>::Some", %"core::option::Option<(f32, usize)>::Some"* %6, i32 0, i32 1, !dbg !1504
  %8 = bitcast { float, i64 }* %7 to float*, !dbg !1504
  %9 = load float, float* %8, align 8, !dbg !1504
  store float %9, float* %float, align 4, !dbg !1504
  %10 = bitcast %"core::option::Option<(f32, usize)>"* %_3 to %"core::option::Option<(f32, usize)>::Some"*, !dbg !1507
  %11 = getelementptr inbounds %"core::option::Option<(f32, usize)>::Some", %"core::option::Option<(f32, usize)>::Some"* %10, i32 0, i32 1, !dbg !1507
  %12 = getelementptr inbounds { float, i64 }, { float, i64 }* %11, i32 0, i32 1, !dbg !1507
  %rest = load i64, i64* %12, align 8, !dbg !1507
  store i64 %rest, i64* %rest.dbg.spill, align 8, !dbg !1507
  call void @llvm.dbg.declare(metadata i64* %rest.dbg.spill, metadata !1501, metadata !DIExpression()), !dbg !1507
  %_8 = icmp eq i64 %rest, %s.1, !dbg !1508
  br i1 %_8, label %bb3, label %bb7, !dbg !1508

bb8:                                              ; preds = %bb7, %bb1
  %13 = bitcast { i32, float }* %0 to i32*, !dbg !1509
  store i32 0, i32* %13, align 4, !dbg !1509
  br label %bb9, !dbg !1510

bb7:                                              ; preds = %bb2
  br label %bb8, !dbg !1511

bb3:                                              ; preds = %bb2
  br i1 %negative, label %bb4, label %bb6, !dbg !1512

bb6:                                              ; preds = %bb5, %bb3
  %_15 = load float, float* %float, align 4, !dbg !1513
  %14 = getelementptr inbounds { i32, float }, { i32, float }* %0, i32 0, i32 1, !dbg !1514
  store float %_15, float* %14, align 4, !dbg !1514
  %15 = bitcast { i32, float }* %0 to i32*, !dbg !1514
  store i32 1, i32* %15, align 4, !dbg !1514
  br label %bb9, !dbg !1510

bb4:                                              ; preds = %bb3
  %_14 = load float, float* %float, align 4, !dbg !1515
; call <f32 as core::ops::arith::Neg>::neg
  %_13 = call float @"_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Neg$GT$3neg17hf2d7af8905ae0e44E"(float %_14), !dbg !1516
  br label %bb5, !dbg !1516

bb5:                                              ; preds = %bb4
  store float %_13, float* %float, align 4, !dbg !1517
  br label %bb6, !dbg !1518

bb9:                                              ; preds = %bb8, %bb6
  %16 = getelementptr inbounds { i32, float }, { i32, float }* %0, i32 0, i32 0, !dbg !1510
  %17 = load i32, i32* %16, align 4, !dbg !1510, !range !1519, !noundef !19
  %18 = getelementptr inbounds { i32, float }, { i32, float }* %0, i32 0, i32 1, !dbg !1510
  %19 = load float, float* %18, align 4, !dbg !1510
  %20 = insertvalue { i32, float } undef, i32 %17, 0, !dbg !1510
  %21 = insertvalue { i32, float } %20, float %19, 1, !dbg !1510
  ret { i32, float } %21, !dbg !1510
}

; core::num::dec2flt::parse::parse_partial_inf_nan
; Function Attrs: nonlazybind uwtable
define void @_ZN4core3num7dec2flt5parse21parse_partial_inf_nan17h00f5be0cf65355e6E(%"core::option::Option<(f64, usize)>"* sret(%"core::option::Option<(f64, usize)>") %0, [0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !1520 {
start:
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_16 = alloca { double, i64 }, align 8
  %_10 = alloca { double, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !1541, metadata !DIExpression()), !dbg !1542
  %_2 = icmp uge i64 %s.1, 3, !dbg !1543
  br i1 %_2, label %bb1, label %bb9, !dbg !1543

bb9:                                              ; preds = %bb8, %start
  %3 = bitcast %"core::option::Option<(f64, usize)>"* %0 to i64*, !dbg !1544
  store i64 0, i64* %3, align 8, !dbg !1544
  br label %bb11, !dbg !1545

bb1:                                              ; preds = %start
; call core::num::dec2flt::common::ByteSlice::starts_with_ignore_case
  %_5 = call zeroext i1 @_ZN4core3num7dec2flt6common9ByteSlice23starts_with_ignore_case17hdbd574e40be63bbdE([0 x i8]* align 1 %s.0, i64 %s.1, [0 x i8]* align 1 bitcast (<{ [3 x i8] }>* @alloc6393 to [0 x i8]*), i64 3), !dbg !1546
  br label %bb2, !dbg !1546

bb2:                                              ; preds = %bb1
  br i1 %_5, label %bb3, label %bb4, !dbg !1546

bb4:                                              ; preds = %bb2
; call core::num::dec2flt::common::ByteSlice::starts_with_ignore_case
  %_11 = call zeroext i1 @_ZN4core3num7dec2flt6common9ByteSlice23starts_with_ignore_case17hdbd574e40be63bbdE([0 x i8]* align 1 %s.0, i64 %s.1, [0 x i8]* align 1 bitcast (<{ [3 x i8] }>* @alloc6389 to [0 x i8]*), i64 3), !dbg !1547
  br label %bb5, !dbg !1547

bb3:                                              ; preds = %bb2
  %4 = bitcast { double, i64 }* %_10 to double*, !dbg !1548
  store double 0x7FF8000000000000, double* %4, align 8, !dbg !1548
  %5 = getelementptr inbounds { double, i64 }, { double, i64 }* %_10, i32 0, i32 1, !dbg !1548
  store i64 3, i64* %5, align 8, !dbg !1548
  %6 = bitcast %"core::option::Option<(f64, usize)>"* %0 to %"core::option::Option<(f64, usize)>::Some"*, !dbg !1549
  %7 = getelementptr inbounds %"core::option::Option<(f64, usize)>::Some", %"core::option::Option<(f64, usize)>::Some"* %6, i32 0, i32 1, !dbg !1549
  %8 = getelementptr inbounds { double, i64 }, { double, i64 }* %_10, i32 0, i32 0, !dbg !1549
  %9 = load double, double* %8, align 8, !dbg !1549
  %10 = getelementptr inbounds { double, i64 }, { double, i64 }* %_10, i32 0, i32 1, !dbg !1549
  %11 = load i64, i64* %10, align 8, !dbg !1549
  %12 = getelementptr inbounds { double, i64 }, { double, i64 }* %7, i32 0, i32 0, !dbg !1549
  store double %9, double* %12, align 8, !dbg !1549
  %13 = getelementptr inbounds { double, i64 }, { double, i64 }* %7, i32 0, i32 1, !dbg !1549
  store i64 %11, i64* %13, align 8, !dbg !1549
  %14 = bitcast %"core::option::Option<(f64, usize)>"* %0 to i64*, !dbg !1549
  store i64 1, i64* %14, align 8, !dbg !1549
  br label %bb10, !dbg !1550

bb10:                                             ; preds = %bb7, %bb3
  br label %bb11, !dbg !1545

bb5:                                              ; preds = %bb4
  br i1 %_11, label %bb6, label %bb8, !dbg !1547

bb8:                                              ; preds = %bb5
  br label %bb9, !dbg !1551

bb6:                                              ; preds = %bb5
; call core::num::dec2flt::parse::parse_partial_inf_nan::parse_inf_rest
  %_17 = call i64 @_ZN4core3num7dec2flt5parse21parse_partial_inf_nan14parse_inf_rest17hfa18041de3254509E([0 x i8]* align 1 %s.0, i64 %s.1), !dbg !1552
  br label %bb7, !dbg !1552

bb7:                                              ; preds = %bb6
  %15 = bitcast { double, i64 }* %_16 to double*, !dbg !1553
  store double 0x7FF0000000000000, double* %15, align 8, !dbg !1553
  %16 = getelementptr inbounds { double, i64 }, { double, i64 }* %_16, i32 0, i32 1, !dbg !1553
  store i64 %_17, i64* %16, align 8, !dbg !1553
  %17 = bitcast %"core::option::Option<(f64, usize)>"* %0 to %"core::option::Option<(f64, usize)>::Some"*, !dbg !1554
  %18 = getelementptr inbounds %"core::option::Option<(f64, usize)>::Some", %"core::option::Option<(f64, usize)>::Some"* %17, i32 0, i32 1, !dbg !1554
  %19 = getelementptr inbounds { double, i64 }, { double, i64 }* %_16, i32 0, i32 0, !dbg !1554
  %20 = load double, double* %19, align 8, !dbg !1554
  %21 = getelementptr inbounds { double, i64 }, { double, i64 }* %_16, i32 0, i32 1, !dbg !1554
  %22 = load i64, i64* %21, align 8, !dbg !1554
  %23 = getelementptr inbounds { double, i64 }, { double, i64 }* %18, i32 0, i32 0, !dbg !1554
  store double %20, double* %23, align 8, !dbg !1554
  %24 = getelementptr inbounds { double, i64 }, { double, i64 }* %18, i32 0, i32 1, !dbg !1554
  store i64 %22, i64* %24, align 8, !dbg !1554
  %25 = bitcast %"core::option::Option<(f64, usize)>"* %0 to i64*, !dbg !1554
  store i64 1, i64* %25, align 8, !dbg !1554
  br label %bb10, !dbg !1555

bb11:                                             ; preds = %bb9, %bb10
  ret void, !dbg !1545
}

; core::num::dec2flt::parse::parse_partial_inf_nan
; Function Attrs: nonlazybind uwtable
define void @_ZN4core3num7dec2flt5parse21parse_partial_inf_nan17he115698c5f6b9bacE(%"core::option::Option<(f32, usize)>"* sret(%"core::option::Option<(f32, usize)>") %0, [0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !1557 {
start:
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_16 = alloca { float, i64 }, align 8
  %_10 = alloca { float, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !1578, metadata !DIExpression()), !dbg !1579
  %_2 = icmp uge i64 %s.1, 3, !dbg !1580
  br i1 %_2, label %bb1, label %bb9, !dbg !1580

bb9:                                              ; preds = %bb8, %start
  %3 = bitcast %"core::option::Option<(f32, usize)>"* %0 to i64*, !dbg !1581
  store i64 0, i64* %3, align 8, !dbg !1581
  br label %bb11, !dbg !1582

bb1:                                              ; preds = %start
; call core::num::dec2flt::common::ByteSlice::starts_with_ignore_case
  %_5 = call zeroext i1 @_ZN4core3num7dec2flt6common9ByteSlice23starts_with_ignore_case17hdbd574e40be63bbdE([0 x i8]* align 1 %s.0, i64 %s.1, [0 x i8]* align 1 bitcast (<{ [3 x i8] }>* @alloc6393 to [0 x i8]*), i64 3), !dbg !1583
  br label %bb2, !dbg !1583

bb2:                                              ; preds = %bb1
  br i1 %_5, label %bb3, label %bb4, !dbg !1583

bb4:                                              ; preds = %bb2
; call core::num::dec2flt::common::ByteSlice::starts_with_ignore_case
  %_11 = call zeroext i1 @_ZN4core3num7dec2flt6common9ByteSlice23starts_with_ignore_case17hdbd574e40be63bbdE([0 x i8]* align 1 %s.0, i64 %s.1, [0 x i8]* align 1 bitcast (<{ [3 x i8] }>* @alloc6389 to [0 x i8]*), i64 3), !dbg !1584
  br label %bb5, !dbg !1584

bb3:                                              ; preds = %bb2
  %4 = bitcast { float, i64 }* %_10 to float*, !dbg !1585
  store float 0x7FF8000000000000, float* %4, align 8, !dbg !1585
  %5 = getelementptr inbounds { float, i64 }, { float, i64 }* %_10, i32 0, i32 1, !dbg !1585
  store i64 3, i64* %5, align 8, !dbg !1585
  %6 = bitcast %"core::option::Option<(f32, usize)>"* %0 to %"core::option::Option<(f32, usize)>::Some"*, !dbg !1586
  %7 = getelementptr inbounds %"core::option::Option<(f32, usize)>::Some", %"core::option::Option<(f32, usize)>::Some"* %6, i32 0, i32 1, !dbg !1586
  %8 = getelementptr inbounds { float, i64 }, { float, i64 }* %_10, i32 0, i32 0, !dbg !1586
  %9 = load float, float* %8, align 8, !dbg !1586
  %10 = getelementptr inbounds { float, i64 }, { float, i64 }* %_10, i32 0, i32 1, !dbg !1586
  %11 = load i64, i64* %10, align 8, !dbg !1586
  %12 = getelementptr inbounds { float, i64 }, { float, i64 }* %7, i32 0, i32 0, !dbg !1586
  store float %9, float* %12, align 8, !dbg !1586
  %13 = getelementptr inbounds { float, i64 }, { float, i64 }* %7, i32 0, i32 1, !dbg !1586
  store i64 %11, i64* %13, align 8, !dbg !1586
  %14 = bitcast %"core::option::Option<(f32, usize)>"* %0 to i64*, !dbg !1586
  store i64 1, i64* %14, align 8, !dbg !1586
  br label %bb10, !dbg !1587

bb10:                                             ; preds = %bb7, %bb3
  br label %bb11, !dbg !1582

bb5:                                              ; preds = %bb4
  br i1 %_11, label %bb6, label %bb8, !dbg !1584

bb8:                                              ; preds = %bb5
  br label %bb9, !dbg !1588

bb6:                                              ; preds = %bb5
; call core::num::dec2flt::parse::parse_partial_inf_nan::parse_inf_rest
  %_17 = call i64 @_ZN4core3num7dec2flt5parse21parse_partial_inf_nan14parse_inf_rest17hfa18041de3254509E([0 x i8]* align 1 %s.0, i64 %s.1), !dbg !1589
  br label %bb7, !dbg !1589

bb7:                                              ; preds = %bb6
  %15 = bitcast { float, i64 }* %_16 to float*, !dbg !1590
  store float 0x7FF0000000000000, float* %15, align 8, !dbg !1590
  %16 = getelementptr inbounds { float, i64 }, { float, i64 }* %_16, i32 0, i32 1, !dbg !1590
  store i64 %_17, i64* %16, align 8, !dbg !1590
  %17 = bitcast %"core::option::Option<(f32, usize)>"* %0 to %"core::option::Option<(f32, usize)>::Some"*, !dbg !1591
  %18 = getelementptr inbounds %"core::option::Option<(f32, usize)>::Some", %"core::option::Option<(f32, usize)>::Some"* %17, i32 0, i32 1, !dbg !1591
  %19 = getelementptr inbounds { float, i64 }, { float, i64 }* %_16, i32 0, i32 0, !dbg !1591
  %20 = load float, float* %19, align 8, !dbg !1591
  %21 = getelementptr inbounds { float, i64 }, { float, i64 }* %_16, i32 0, i32 1, !dbg !1591
  %22 = load i64, i64* %21, align 8, !dbg !1591
  %23 = getelementptr inbounds { float, i64 }, { float, i64 }* %18, i32 0, i32 0, !dbg !1591
  store float %20, float* %23, align 8, !dbg !1591
  %24 = getelementptr inbounds { float, i64 }, { float, i64 }* %18, i32 0, i32 1, !dbg !1591
  store i64 %22, i64* %24, align 8, !dbg !1591
  %25 = bitcast %"core::option::Option<(f32, usize)>"* %0 to i64*, !dbg !1591
  store i64 1, i64* %25, align 8, !dbg !1591
  br label %bb10, !dbg !1592

bb11:                                             ; preds = %bb9, %bb10
  ret void, !dbg !1582
}

; core::num::dec2flt::<impl core::str::traits::FromStr for f32>::from_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3num7dec2flt60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$f32$GT$8from_str17h8a350a0f35c2446dE"([0 x i8]* align 1 %src.0, i64 %src.1) unnamed_addr #0 !dbg !1594 {
start:
  %0 = alloca i64, align 8
  %src.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>", align 4
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 0
  store [0 x i8]* %src.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 1
  store i64 %src.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill, metadata !1617, metadata !DIExpression()), !dbg !1618
; call core::num::dec2flt::dec2flt
  %4 = call i64 @_ZN4core3num7dec2flt7dec2flt17hc410fe3c5ce74da5E([0 x i8]* align 1 %src.0, i64 %src.1), !dbg !1619
  store i64 %4, i64* %0, align 8, !dbg !1619
  %5 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %1 to i8*, !dbg !1619
  %6 = bitcast i64* %0 to i8*, !dbg !1619
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 8, i1 false), !dbg !1619
  br label %bb1, !dbg !1619

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %1 to i64*, !dbg !1620
  %8 = load i64, i64* %7, align 4, !dbg !1620
  ret i64 %8, !dbg !1620
}

; core::num::dec2flt::<impl core::str::traits::FromStr for f64>::from_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3num7dec2flt60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$f64$GT$8from_str17hb386c67320c9d1bbE"(%"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* sret(%"core::result::Result<f64, core::num::dec2flt::ParseFloatError>") %0, [0 x i8]* align 1 %src.0, i64 %src.1) unnamed_addr #0 !dbg !1621 {
start:
  %src.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 0
  store [0 x i8]* %src.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 1
  store i64 %src.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill, metadata !1640, metadata !DIExpression()), !dbg !1641
; call core::num::dec2flt::dec2flt
  call void @_ZN4core3num7dec2flt7dec2flt17h88cc23508211652eE(%"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* sret(%"core::result::Result<f64, core::num::dec2flt::ParseFloatError>") %0, [0 x i8]* align 1 %src.0, i64 %src.1), !dbg !1642
  br label %bb1, !dbg !1642

bb1:                                              ; preds = %start
  ret void, !dbg !1643
}

; core::num::dec2flt::common::ByteSlice::starts_with_ignore_case
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN4core3num7dec2flt6common9ByteSlice23starts_with_ignore_case17hdbd574e40be63bbdE([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %u.0, i64 %u.1) unnamed_addr #1 !dbg !1644 {
start:
  %d.dbg.spill = alloca i8, align 1
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %u.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_11 = alloca %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", align 8
  %iter = alloca %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", align 8
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1650, metadata !DIExpression()), !dbg !1658
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %u.dbg.spill, i32 0, i32 0
  store [0 x i8]* %u.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %u.dbg.spill, i32 0, i32 1
  store i64 %u.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %u.dbg.spill, metadata !1651, metadata !DIExpression()), !dbg !1659
  call void @llvm.dbg.declare(metadata %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %iter, metadata !1652, metadata !DIExpression()), !dbg !1660
; call <[T] as core::convert::AsRef<[T]>>::as_ref
  %5 = call { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17hbc654c52d10227c1E"([0 x i8]* align 1 %self.0, i64 %self.1), !dbg !1661
  %_6.0 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !1661
  %_6.1 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !1661
  br label %bb1, !dbg !1661

bb1:                                              ; preds = %start
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !1661
  store [0 x i8]* %_6.0, [0 x i8]** %6, align 8, !dbg !1661
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !1661
  store i64 %_6.1, i64* %7, align 8, !dbg !1661
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !1662, metadata !DIExpression()), !dbg !1670
; call core::slice::iter::Iter<T>::new
  %8 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17ha977156ac332a7d0E"([0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !1670
  %_4.0 = extractvalue { i8*, i8* } %8, 0, !dbg !1670
  %_4.1 = extractvalue { i8*, i8* } %8, 1, !dbg !1670
  br label %bb7, !dbg !1670

bb7:                                              ; preds = %bb1
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !1671
  store [0 x i8]* %u.0, [0 x i8]** %9, align 8, !dbg !1671
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !1671
  store i64 %u.1, i64* %10, align 8, !dbg !1671
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !1672, metadata !DIExpression()), !dbg !1676
; call core::slice::iter::Iter<T>::new
  %11 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17ha977156ac332a7d0E"([0 x i8]* align 1 %u.0, i64 %u.1), !dbg !1676
  %_8.0 = extractvalue { i8*, i8* } %11, 0, !dbg !1676
  %_8.1 = extractvalue { i8*, i8* } %11, 1, !dbg !1676
  br label %bb8, !dbg !1676

bb8:                                              ; preds = %bb7
; call core::iter::traits::iterator::Iterator::zip
  call void @_ZN4core4iter6traits8iterator8Iterator3zip17h1f0de46e36054093E(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* sret(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>") %iter, i8* %_4.0, i8* %_4.1, i8* %_8.0, i8* %_8.1), !dbg !1661
  br label %bb2, !dbg !1661

bb2:                                              ; preds = %bb8
  %12 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %_11 to i8*, !dbg !1677
  %13 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %iter to i8*, !dbg !1677
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 56, i1 false), !dbg !1677
; call core::iter::traits::iterator::Iterator::fold
  %d = call i8 @_ZN4core4iter6traits8iterator8Iterator4fold17h7a99a4b92c7196bcE(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %_11, i8 0), !dbg !1677
  store i8 %d, i8* %d.dbg.spill, align 1, !dbg !1677
  call void @llvm.dbg.declare(metadata i8* %d.dbg.spill, metadata !1654, metadata !DIExpression()), !dbg !1678
  br label %bb3, !dbg !1677

bb3:                                              ; preds = %bb2
  %14 = icmp eq i8 %d, 0, !dbg !1679
  br i1 %14, label %bb4, label %bb5, !dbg !1679

bb4:                                              ; preds = %bb3
  store i8 1, i8* %0, align 1, !dbg !1679
  br label %bb6, !dbg !1679

bb5:                                              ; preds = %bb3
  %_14 = icmp eq i8 %d, 32, !dbg !1680
  %15 = zext i1 %_14 to i8, !dbg !1679
  store i8 %15, i8* %0, align 1, !dbg !1679
  br label %bb6, !dbg !1679

bb6:                                              ; preds = %bb4, %bb5
  %16 = load i8, i8* %0, align 1, !dbg !1681, !range !266, !noundef !19
  %17 = trunc i8 %16 to i1, !dbg !1681
  ret i1 %17, !dbg !1681
}

; core::num::dec2flt::common::ByteSlice::starts_with_ignore_case::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @"_ZN4core3num7dec2flt6common9ByteSlice23starts_with_ignore_case28_$u7b$$u7b$closure$u7d$$u7d$17h9736513d08d51230E"(%"[closure@<[u8] as core::num::dec2flt::common::ByteSlice>::starts_with_ignore_case::{closure#0}]"* align 1 %_1, i8 %i, i8* align 1 %0, i8* align 1 %1) unnamed_addr #0 !dbg !1682 {
start:
  %y.dbg.spill = alloca i8, align 1
  %x.dbg.spill = alloca i8, align 1
  %i.dbg.spill = alloca i8, align 1
  %_1.dbg.spill = alloca %"[closure@<[u8] as core::num::dec2flt::common::ByteSlice>::starts_with_ignore_case::{closure#0}]"*, align 8
  %_3 = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_3, i32 0, i32 0
  store i8* %0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_3, i32 0, i32 1
  store i8* %1, i8** %3, align 8
  store %"[closure@<[u8] as core::num::dec2flt::common::ByteSlice>::starts_with_ignore_case::{closure#0}]"* %_1, %"[closure@<[u8] as core::num::dec2flt::common::ByteSlice>::starts_with_ignore_case::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@<[u8] as core::num::dec2flt::common::ByteSlice>::starts_with_ignore_case::{closure#0}]"** %_1.dbg.spill, metadata !1693, metadata !DIExpression()), !dbg !1695
  store i8 %i, i8* %i.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %i.dbg.spill, metadata !1689, metadata !DIExpression()), !dbg !1696
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %_3, metadata !1694, metadata !DIExpression()), !dbg !1697
  %4 = bitcast { i8*, i8* }* %_3 to i8**, !dbg !1698
  %_10 = load i8*, i8** %4, align 8, !dbg !1698, !nonnull !19, !align !627, !noundef !19
  %x = load i8, i8* %_10, align 1, !dbg !1698
  store i8 %x, i8* %x.dbg.spill, align 1, !dbg !1698
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !1690, metadata !DIExpression()), !dbg !1699
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_3, i32 0, i32 1, !dbg !1700
  %_11 = load i8*, i8** %5, align 8, !dbg !1700, !nonnull !19, !align !627, !noundef !19
  %y = load i8, i8* %_11, align 1, !dbg !1700
  store i8 %y, i8* %y.dbg.spill, align 1, !dbg !1700
  call void @llvm.dbg.declare(metadata i8* %y.dbg.spill, metadata !1692, metadata !DIExpression()), !dbg !1701
  %_7 = xor i8 %x, %y, !dbg !1702
  %6 = or i8 %i, %_7, !dbg !1703
  ret i8 %6, !dbg !1704
}

; core::num::dec2flt::common::ByteSlice::advance
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3num7dec2flt6common9ByteSlice7advance17h22a15b2890fa2986E([0 x i8]* align 1 %self.0, i64 %self.1, i64 %n) unnamed_addr #1 !dbg !1705 {
start:
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %index = alloca i64, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1709, metadata !DIExpression()), !dbg !1711
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1710, metadata !DIExpression()), !dbg !1712
  call void @llvm.dbg.declare(metadata i64* %index, metadata !1713, metadata !DIExpression()), !dbg !1723
; call <[T] as core::convert::AsRef<[T]>>::as_ref
  %2 = call { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17hbc654c52d10227c1E"([0 x i8]* align 1 %self.0, i64 %self.1), !dbg !1724
  %_5.0 = extractvalue { [0 x i8]*, i64 } %2, 0, !dbg !1724
  %_5.1 = extractvalue { [0 x i8]*, i64 } %2, 1, !dbg !1724
  br label %bb1, !dbg !1724

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !1724
  store [0 x i8]* %_5.0, [0 x i8]** %3, align 8, !dbg !1724
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !1724
  store i64 %_5.1, i64* %4, align 8, !dbg !1724
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !1720, metadata !DIExpression()), !dbg !1723
  store i64 %n, i64* %index, align 8, !dbg !1725
  %_9 = load i64, i64* %index, align 8, !dbg !1723
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
  %5 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hb301fe5216e6dc3bE"(i64 %_9, [0 x i8]* align 1 %_5.0, i64 %_5.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc6362 to %"core::panic::location::Location"*)), !dbg !1723
  %_3.0 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !1723
  %_3.1 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !1723
  br label %bb2, !dbg !1723

bb2:                                              ; preds = %bb1
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0, !dbg !1726
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %_3.1, 1, !dbg !1726
  ret { [0 x i8]*, i64 } %7, !dbg !1726
}

; core::num::dec2flt::lemire::compute_float
; Function Attrs: nonlazybind uwtable
define { i64, i32 } @_ZN4core3num7dec2flt6lemire13compute_float17h2e3e94e8803c6d32E(i64 %q, i64 %0) unnamed_addr #1 !dbg !1727 {
start:
  %upperbit.dbg.spill = alloca i32, align 4
  %hi.dbg.spill = alloca i64, align 8
  %lo.dbg.spill = alloca i64, align 8
  %lz.dbg.spill = alloca i32, align 4
  %1 = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %fp_error.dbg.spill = alloca { i64, i32 }, align 8
  %fp_inf.dbg.spill = alloca { i64, i32 }, align 8
  %fp_zero.dbg.spill = alloca { i64, i32 }, align 8
  %q.dbg.spill = alloca i64, align 8
  %_69 = alloca i8, align 1
  %_68 = alloca i8, align 1
  %_67 = alloca i8, align 1
  %_66 = alloca i8, align 1
  %power2 = alloca i32, align 4
  %mantissa = alloca i64, align 8
  %inside_safe_exponent = alloca i8, align 1
  %_6 = alloca i8, align 1
  %2 = alloca { i64, i32 }, align 8
  %w = alloca i64, align 8
  store i64 %0, i64* %w, align 8
  store i64 %q, i64* %q.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %q.dbg.spill, metadata !1734, metadata !DIExpression()), !dbg !1755
  call void @llvm.dbg.declare(metadata i64* %w, metadata !1735, metadata !DIExpression()), !dbg !1756
  call void @llvm.dbg.declare(metadata i8* %inside_safe_exponent, metadata !1747, metadata !DIExpression()), !dbg !1757
  call void @llvm.dbg.declare(metadata i64* %mantissa, metadata !1751, metadata !DIExpression()), !dbg !1758
  call void @llvm.dbg.declare(metadata i32* %power2, metadata !1753, metadata !DIExpression()), !dbg !1759
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %3 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217he9d0af27d074a382E(i32 0), !dbg !1760
  %fp_zero.0 = extractvalue { i64, i32 } %3, 0, !dbg !1760
  %fp_zero.1 = extractvalue { i64, i32 } %3, 1, !dbg !1760
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_zero.dbg.spill, i32 0, i32 0, !dbg !1760
  store i64 %fp_zero.0, i64* %4, align 8, !dbg !1760
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_zero.dbg.spill, i32 0, i32 1, !dbg !1760
  store i32 %fp_zero.1, i32* %5, align 8, !dbg !1760
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_zero.dbg.spill, metadata !1736, metadata !DIExpression()), !dbg !1761
  br label %bb1, !dbg !1760

bb1:                                              ; preds = %start
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %6 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217he9d0af27d074a382E(i32 2047), !dbg !1762
  %fp_inf.0 = extractvalue { i64, i32 } %6, 0, !dbg !1762
  %fp_inf.1 = extractvalue { i64, i32 } %6, 1, !dbg !1762
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_inf.dbg.spill, i32 0, i32 0, !dbg !1762
  store i64 %fp_inf.0, i64* %7, align 8, !dbg !1762
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_inf.dbg.spill, i32 0, i32 1, !dbg !1762
  store i32 %fp_inf.1, i32* %8, align 8, !dbg !1762
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_inf.dbg.spill, metadata !1738, metadata !DIExpression()), !dbg !1763
  br label %bb2, !dbg !1762

bb2:                                              ; preds = %bb1
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %9 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217he9d0af27d074a382E(i32 -1), !dbg !1764
  %fp_error.0 = extractvalue { i64, i32 } %9, 0, !dbg !1764
  %fp_error.1 = extractvalue { i64, i32 } %9, 1, !dbg !1764
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_error.dbg.spill, i32 0, i32 0, !dbg !1764
  store i64 %fp_error.0, i64* %10, align 8, !dbg !1764
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_error.dbg.spill, i32 0, i32 1, !dbg !1764
  store i32 %fp_error.1, i32* %11, align 8, !dbg !1764
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_error.dbg.spill, metadata !1740, metadata !DIExpression()), !dbg !1765
  br label %bb3, !dbg !1764

bb3:                                              ; preds = %bb2
  %_7 = load i64, i64* %w, align 8, !dbg !1766
  %12 = icmp eq i64 %_7, 0, !dbg !1766
  br i1 %12, label %bb4, label %bb5, !dbg !1766

bb4:                                              ; preds = %bb3
  store i8 1, i8* %_6, align 1, !dbg !1766
  br label %bb6, !dbg !1766

bb5:                                              ; preds = %bb3
  %_8 = icmp slt i64 %q, -342, !dbg !1767
  %13 = zext i1 %_8 to i8, !dbg !1766
  store i8 %13, i8* %_6, align 1, !dbg !1766
  br label %bb6, !dbg !1766

bb6:                                              ; preds = %bb4, %bb5
  %14 = load i8, i8* %_6, align 1, !dbg !1766, !range !266, !noundef !19
  %15 = trunc i8 %14 to i1, !dbg !1766
  br i1 %15, label %bb7, label %bb8, !dbg !1766

bb8:                                              ; preds = %bb6
  %_11 = icmp sgt i64 %q, 308, !dbg !1768
  br i1 %_11, label %bb9, label %bb10, !dbg !1768

bb7:                                              ; preds = %bb6
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1769
  store i64 %fp_zero.0, i64* %16, align 8, !dbg !1769
  %17 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1769
  store i32 %fp_zero.1, i32* %17, align 8, !dbg !1769
  br label %bb46, !dbg !1770

bb46:                                             ; preds = %bb9, %bb7
  br label %bb47, !dbg !1771

bb10:                                             ; preds = %bb8
  %self = load i64, i64* %w, align 8, !dbg !1773
  store i64 %self, i64* %self.dbg.spill, align 8, !dbg !1773
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1774, metadata !DIExpression()), !dbg !1780
  %18 = call i64 @llvm.ctlz.i64(i64 %self, i1 false), !dbg !1780
  store i64 %18, i64* %1, align 8, !dbg !1780
  %_102 = load i64, i64* %1, align 8, !dbg !1780
  br label %bb49, !dbg !1780

bb9:                                              ; preds = %bb8
  %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1781
  store i64 %fp_inf.0, i64* %19, align 8, !dbg !1781
  %20 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1781
  store i32 %fp_inf.1, i32* %20, align 8, !dbg !1781
  br label %bb46, !dbg !1771

bb47:                                             ; preds = %bb45, %bb46
  br label %bb48, !dbg !1782

bb49:                                             ; preds = %bb10
  %lz = trunc i64 %_102 to i32, !dbg !1780
  store i32 %lz, i32* %lz.dbg.spill, align 4, !dbg !1780
  call void @llvm.dbg.declare(metadata i32* %lz.dbg.spill, metadata !1742, metadata !DIExpression()), !dbg !1783
  %21 = load i64, i64* %w, align 8, !dbg !1784
  %22 = zext i32 %lz to i64, !dbg !1784
  %23 = and i64 %22, 63, !dbg !1784
  %24 = shl i64 %21, %23, !dbg !1784
  store i64 %24, i64* %w, align 8, !dbg !1784
  %_21 = load i64, i64* %w, align 8, !dbg !1785
; call core::num::dec2flt::lemire::compute_product_approx
  %25 = call { i64, i64 } @_ZN4core3num7dec2flt6lemire22compute_product_approx17h150e58dc42172e61E(i64 %q, i64 %_21, i64 55), !dbg !1786
  %_19.0 = extractvalue { i64, i64 } %25, 0, !dbg !1786
  %_19.1 = extractvalue { i64, i64 } %25, 1, !dbg !1786
  br label %bb11, !dbg !1786

bb11:                                             ; preds = %bb49
  store i64 %_19.0, i64* %lo.dbg.spill, align 8, !dbg !1787
  call void @llvm.dbg.declare(metadata i64* %lo.dbg.spill, metadata !1744, metadata !DIExpression()), !dbg !1788
  store i64 %_19.1, i64* %hi.dbg.spill, align 8, !dbg !1789
  call void @llvm.dbg.declare(metadata i64* %hi.dbg.spill, metadata !1746, metadata !DIExpression()), !dbg !1790
  %26 = icmp eq i64 %_19.0, -1, !dbg !1791
  br i1 %26, label %bb12, label %bb18, !dbg !1791

bb12:                                             ; preds = %bb11
  %_25 = icmp sge i64 %q, -27, !dbg !1792
  br i1 %_25, label %bb14, label %bb13, !dbg !1792

bb18:                                             ; preds = %bb11
  br label %bb19, !dbg !1793

bb19:                                             ; preds = %bb17, %bb18
  %_32 = lshr i64 %_19.1, 63, !dbg !1794
  %upperbit = trunc i64 %_32 to i32, !dbg !1794
  store i32 %upperbit, i32* %upperbit.dbg.spill, align 4, !dbg !1794
  call void @llvm.dbg.declare(metadata i32* %upperbit.dbg.spill, metadata !1749, metadata !DIExpression()), !dbg !1795
  %_38 = add i32 %upperbit, 64, !dbg !1796
  %_37 = sub i32 %_38, 52, !dbg !1796
  %_36 = sub i32 %_37, 3, !dbg !1797
  %27 = zext i32 %_36 to i64, !dbg !1798
  %28 = and i64 %27, 63, !dbg !1798
  %29 = lshr i64 %_19.1, %28, !dbg !1798
  store i64 %29, i64* %mantissa, align 8, !dbg !1798
  %_45 = trunc i64 %q to i32, !dbg !1799
; call core::num::dec2flt::lemire::power
  %_44 = call i32 @_ZN4core3num7dec2flt6lemire5power17h0a9f8eda2bed0462E(i32 %_45), !dbg !1800
  br label %bb20, !dbg !1800

bb13:                                             ; preds = %bb12
  store i8 0, i8* %inside_safe_exponent, align 1, !dbg !1792
  br label %bb15, !dbg !1792

bb14:                                             ; preds = %bb12
  %_27 = icmp sle i64 %q, 55, !dbg !1801
  %30 = zext i1 %_27 to i8, !dbg !1792
  store i8 %30, i8* %inside_safe_exponent, align 1, !dbg !1792
  br label %bb15, !dbg !1792

bb15:                                             ; preds = %bb13, %bb14
  %31 = load i8, i8* %inside_safe_exponent, align 1, !dbg !1802, !range !266, !noundef !19
  %_30 = trunc i8 %31 to i1, !dbg !1802
  %_29 = xor i1 %_30, true, !dbg !1803
  br i1 %_29, label %bb16, label %bb17, !dbg !1803

bb17:                                             ; preds = %bb15
  br label %bb19, !dbg !1793

bb16:                                             ; preds = %bb15
  %32 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1804
  store i64 %fp_error.0, i64* %32, align 8, !dbg !1804
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1804
  store i32 %fp_error.1, i32* %33, align 8, !dbg !1804
  br label %bb45, !dbg !1805

bb45:                                             ; preds = %bb44, %bb16
  br label %bb47, !dbg !1771

bb20:                                             ; preds = %bb19
  %_43 = add i32 %_44, %upperbit, !dbg !1800
  %_42 = sub i32 %_43, %lz, !dbg !1800
  %34 = sub i32 %_42, -1023, !dbg !1800
  store i32 %34, i32* %power2, align 4, !dbg !1800
  %_51 = load i32, i32* %power2, align 4, !dbg !1807
  %_50 = icmp sle i32 %_51, 0, !dbg !1807
  br i1 %_50, label %bb21, label %bb24, !dbg !1807

bb24:                                             ; preds = %bb20
  %_70 = icmp ule i64 %_19.0, 1, !dbg !1808
  br i1 %_70, label %bb35, label %bb34, !dbg !1808

bb21:                                             ; preds = %bb20
  %_55 = load i32, i32* %power2, align 4, !dbg !1809
  %_54 = sub i32 0, %_55, !dbg !1810
  %_53 = add i32 %_54, 1, !dbg !1810
  %_52 = icmp sge i32 %_53, 64, !dbg !1810
  br i1 %_52, label %bb22, label %bb23, !dbg !1810

bb23:                                             ; preds = %bb21
  %_58 = load i32, i32* %power2, align 4, !dbg !1811
  %_57 = sub i32 0, %_58, !dbg !1812
  %_56 = add i32 %_57, 1, !dbg !1812
  %35 = load i64, i64* %mantissa, align 8, !dbg !1813
  %36 = zext i32 %_56 to i64, !dbg !1813
  %37 = and i64 %36, 63, !dbg !1813
  %38 = lshr i64 %35, %37, !dbg !1813
  store i64 %38, i64* %mantissa, align 8, !dbg !1813
  %_60 = load i64, i64* %mantissa, align 8, !dbg !1814
  %_59 = and i64 %_60, 1, !dbg !1814
  %39 = load i64, i64* %mantissa, align 8, !dbg !1815
  %40 = add i64 %39, %_59, !dbg !1815
  store i64 %40, i64* %mantissa, align 8, !dbg !1815
  %41 = load i64, i64* %mantissa, align 8, !dbg !1816
  %42 = lshr i64 %41, 1, !dbg !1816
  store i64 %42, i64* %mantissa, align 8, !dbg !1816
  %_62 = load i64, i64* %mantissa, align 8, !dbg !1817
  %_61 = icmp uge i64 %_62, 4503599627370496, !dbg !1818
  %43 = zext i1 %_61 to i32, !dbg !1819
  store i32 %43, i32* %power2, align 4, !dbg !1819
  %_64 = load i64, i64* %mantissa, align 8, !dbg !1820
  %_65 = load i32, i32* %power2, align 4, !dbg !1821
  %44 = bitcast { i64, i32 }* %2 to i64*, !dbg !1822
  store i64 %_64, i64* %44, align 8, !dbg !1822
  %45 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1822
  store i32 %_65, i32* %45, align 8, !dbg !1822
  br label %bb43, !dbg !1823

bb22:                                             ; preds = %bb21
  %46 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1824
  store i64 %fp_zero.0, i64* %46, align 8, !dbg !1824
  %47 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1824
  store i32 %fp_zero.1, i32* %47, align 8, !dbg !1824
  br label %bb43, !dbg !1825

bb43:                                             ; preds = %bb23, %bb22
  br label %bb44, !dbg !1825

bb44:                                             ; preds = %bb41, %bb43
  br label %bb45, !dbg !1805

bb34:                                             ; preds = %bb24
  store i8 0, i8* %_69, align 1, !dbg !1808
  br label %bb36, !dbg !1808

bb35:                                             ; preds = %bb24
  %_72 = icmp sge i64 %q, -4, !dbg !1827
  %48 = zext i1 %_72 to i8, !dbg !1808
  store i8 %48, i8* %_69, align 1, !dbg !1808
  br label %bb36, !dbg !1808

bb36:                                             ; preds = %bb34, %bb35
  %49 = load i8, i8* %_69, align 1, !dbg !1808, !range !266, !noundef !19
  %50 = trunc i8 %49 to i1, !dbg !1808
  br i1 %50, label %bb32, label %bb31, !dbg !1808

bb31:                                             ; preds = %bb36
  store i8 0, i8* %_68, align 1, !dbg !1808
  br label %bb33, !dbg !1808

bb32:                                             ; preds = %bb36
  %_75 = icmp sle i64 %q, 23, !dbg !1828
  %51 = zext i1 %_75 to i8, !dbg !1808
  store i8 %51, i8* %_68, align 1, !dbg !1808
  br label %bb33, !dbg !1808

bb33:                                             ; preds = %bb31, %bb32
  %52 = load i8, i8* %_68, align 1, !dbg !1808, !range !266, !noundef !19
  %53 = trunc i8 %52 to i1, !dbg !1808
  br i1 %53, label %bb29, label %bb28, !dbg !1808

bb28:                                             ; preds = %bb33
  store i8 0, i8* %_67, align 1, !dbg !1808
  br label %bb30, !dbg !1808

bb29:                                             ; preds = %bb33
  %_80 = load i64, i64* %mantissa, align 8, !dbg !1829
  %_79 = and i64 %_80, 3, !dbg !1829
  %_78 = icmp eq i64 %_79, 1, !dbg !1829
  %54 = zext i1 %_78 to i8, !dbg !1808
  store i8 %54, i8* %_67, align 1, !dbg !1808
  br label %bb30, !dbg !1808

bb30:                                             ; preds = %bb28, %bb29
  %55 = load i8, i8* %_67, align 1, !dbg !1808, !range !266, !noundef !19
  %56 = trunc i8 %55 to i1, !dbg !1808
  br i1 %56, label %bb26, label %bb25, !dbg !1808

bb25:                                             ; preds = %bb30
  store i8 0, i8* %_66, align 1, !dbg !1808
  br label %bb27, !dbg !1808

bb26:                                             ; preds = %bb30
  %_83 = load i64, i64* %mantissa, align 8, !dbg !1830
  %_86 = add i32 %upperbit, 64, !dbg !1831
  %_85 = sub i32 %_86, 52, !dbg !1831
  %_84 = sub i32 %_85, 3, !dbg !1832
  %57 = zext i32 %_84 to i64, !dbg !1833
  %58 = and i64 %57, 63, !dbg !1833
  %_82 = shl i64 %_83, %58, !dbg !1833
  %_81 = icmp eq i64 %_82, %_19.1, !dbg !1833
  %59 = zext i1 %_81 to i8, !dbg !1808
  store i8 %59, i8* %_66, align 1, !dbg !1808
  br label %bb27, !dbg !1808

bb27:                                             ; preds = %bb25, %bb26
  %60 = load i8, i8* %_66, align 1, !dbg !1808, !range !266, !noundef !19
  %61 = trunc i8 %60 to i1, !dbg !1808
  br i1 %61, label %bb37, label %bb38, !dbg !1808

bb38:                                             ; preds = %bb37, %bb27
  %_92 = load i64, i64* %mantissa, align 8, !dbg !1834
  %_91 = and i64 %_92, 1, !dbg !1834
  %62 = load i64, i64* %mantissa, align 8, !dbg !1835
  %63 = add i64 %62, %_91, !dbg !1835
  store i64 %63, i64* %mantissa, align 8, !dbg !1835
  %64 = load i64, i64* %mantissa, align 8, !dbg !1836
  %65 = lshr i64 %64, 1, !dbg !1836
  store i64 %65, i64* %mantissa, align 8, !dbg !1836
  %_94 = load i64, i64* %mantissa, align 8, !dbg !1837
  %_93 = icmp uge i64 %_94, 9007199254740992, !dbg !1837
  br i1 %_93, label %bb39, label %bb40, !dbg !1837

bb37:                                             ; preds = %bb27
  %66 = load i64, i64* %mantissa, align 8, !dbg !1838
  %67 = and i64 %66, -2, !dbg !1838
  store i64 %67, i64* %mantissa, align 8, !dbg !1838
  br label %bb38, !dbg !1839

bb40:                                             ; preds = %bb39, %bb38
  %68 = load i64, i64* %mantissa, align 8, !dbg !1840
  %69 = and i64 %68, -4503599627370497, !dbg !1840
  store i64 %69, i64* %mantissa, align 8, !dbg !1840
  %_99 = load i32, i32* %power2, align 4, !dbg !1841
  %_98 = icmp sge i32 %_99, 2047, !dbg !1841
  br i1 %_98, label %bb41, label %bb42, !dbg !1841

bb39:                                             ; preds = %bb38
  store i64 4503599627370496, i64* %mantissa, align 8, !dbg !1842
  %70 = load i32, i32* %power2, align 4, !dbg !1843
  %71 = add i32 %70, 1, !dbg !1843
  store i32 %71, i32* %power2, align 4, !dbg !1843
  br label %bb40, !dbg !1844

bb42:                                             ; preds = %bb40
  %_100 = load i64, i64* %mantissa, align 8, !dbg !1845
  %_101 = load i32, i32* %power2, align 4, !dbg !1846
  %72 = bitcast { i64, i32 }* %2 to i64*, !dbg !1847
  store i64 %_100, i64* %72, align 8, !dbg !1847
  %73 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1847
  store i32 %_101, i32* %73, align 8, !dbg !1847
  br label %bb48, !dbg !1782

bb41:                                             ; preds = %bb40
  %74 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1848
  store i64 %fp_inf.0, i64* %74, align 8, !dbg !1848
  %75 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1848
  store i32 %fp_inf.1, i32* %75, align 8, !dbg !1848
  br label %bb44, !dbg !1825

bb48:                                             ; preds = %bb42, %bb47
  %76 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1782
  %77 = load i64, i64* %76, align 8, !dbg !1782
  %78 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1782
  %79 = load i32, i32* %78, align 8, !dbg !1782
  %80 = insertvalue { i64, i32 } undef, i64 %77, 0, !dbg !1782
  %81 = insertvalue { i64, i32 } %80, i32 %79, 1, !dbg !1782
  ret { i64, i32 } %81, !dbg !1782
}

; core::num::dec2flt::lemire::compute_float
; Function Attrs: nonlazybind uwtable
define { i64, i32 } @_ZN4core3num7dec2flt6lemire13compute_float17h7c09984d6cd4e0c3E(i64 %q, i64 %0) unnamed_addr #1 !dbg !1849 {
start:
  %upperbit.dbg.spill = alloca i32, align 4
  %hi.dbg.spill = alloca i64, align 8
  %lo.dbg.spill = alloca i64, align 8
  %lz.dbg.spill = alloca i32, align 4
  %1 = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %fp_error.dbg.spill = alloca { i64, i32 }, align 8
  %fp_inf.dbg.spill = alloca { i64, i32 }, align 8
  %fp_zero.dbg.spill = alloca { i64, i32 }, align 8
  %q.dbg.spill = alloca i64, align 8
  %_69 = alloca i8, align 1
  %_68 = alloca i8, align 1
  %_67 = alloca i8, align 1
  %_66 = alloca i8, align 1
  %power2 = alloca i32, align 4
  %mantissa = alloca i64, align 8
  %inside_safe_exponent = alloca i8, align 1
  %_6 = alloca i8, align 1
  %2 = alloca { i64, i32 }, align 8
  %w = alloca i64, align 8
  store i64 %0, i64* %w, align 8
  store i64 %q, i64* %q.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %q.dbg.spill, metadata !1851, metadata !DIExpression()), !dbg !1872
  call void @llvm.dbg.declare(metadata i64* %w, metadata !1852, metadata !DIExpression()), !dbg !1873
  call void @llvm.dbg.declare(metadata i8* %inside_safe_exponent, metadata !1864, metadata !DIExpression()), !dbg !1874
  call void @llvm.dbg.declare(metadata i64* %mantissa, metadata !1868, metadata !DIExpression()), !dbg !1875
  call void @llvm.dbg.declare(metadata i32* %power2, metadata !1870, metadata !DIExpression()), !dbg !1876
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %3 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217he9d0af27d074a382E(i32 0), !dbg !1877
  %fp_zero.0 = extractvalue { i64, i32 } %3, 0, !dbg !1877
  %fp_zero.1 = extractvalue { i64, i32 } %3, 1, !dbg !1877
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_zero.dbg.spill, i32 0, i32 0, !dbg !1877
  store i64 %fp_zero.0, i64* %4, align 8, !dbg !1877
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_zero.dbg.spill, i32 0, i32 1, !dbg !1877
  store i32 %fp_zero.1, i32* %5, align 8, !dbg !1877
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_zero.dbg.spill, metadata !1853, metadata !DIExpression()), !dbg !1878
  br label %bb1, !dbg !1877

bb1:                                              ; preds = %start
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %6 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217he9d0af27d074a382E(i32 255), !dbg !1879
  %fp_inf.0 = extractvalue { i64, i32 } %6, 0, !dbg !1879
  %fp_inf.1 = extractvalue { i64, i32 } %6, 1, !dbg !1879
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_inf.dbg.spill, i32 0, i32 0, !dbg !1879
  store i64 %fp_inf.0, i64* %7, align 8, !dbg !1879
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_inf.dbg.spill, i32 0, i32 1, !dbg !1879
  store i32 %fp_inf.1, i32* %8, align 8, !dbg !1879
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_inf.dbg.spill, metadata !1855, metadata !DIExpression()), !dbg !1880
  br label %bb2, !dbg !1879

bb2:                                              ; preds = %bb1
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %9 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217he9d0af27d074a382E(i32 -1), !dbg !1881
  %fp_error.0 = extractvalue { i64, i32 } %9, 0, !dbg !1881
  %fp_error.1 = extractvalue { i64, i32 } %9, 1, !dbg !1881
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_error.dbg.spill, i32 0, i32 0, !dbg !1881
  store i64 %fp_error.0, i64* %10, align 8, !dbg !1881
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_error.dbg.spill, i32 0, i32 1, !dbg !1881
  store i32 %fp_error.1, i32* %11, align 8, !dbg !1881
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_error.dbg.spill, metadata !1857, metadata !DIExpression()), !dbg !1882
  br label %bb3, !dbg !1881

bb3:                                              ; preds = %bb2
  %_7 = load i64, i64* %w, align 8, !dbg !1883
  %12 = icmp eq i64 %_7, 0, !dbg !1883
  br i1 %12, label %bb4, label %bb5, !dbg !1883

bb4:                                              ; preds = %bb3
  store i8 1, i8* %_6, align 1, !dbg !1883
  br label %bb6, !dbg !1883

bb5:                                              ; preds = %bb3
  %_8 = icmp slt i64 %q, -65, !dbg !1884
  %13 = zext i1 %_8 to i8, !dbg !1883
  store i8 %13, i8* %_6, align 1, !dbg !1883
  br label %bb6, !dbg !1883

bb6:                                              ; preds = %bb4, %bb5
  %14 = load i8, i8* %_6, align 1, !dbg !1883, !range !266, !noundef !19
  %15 = trunc i8 %14 to i1, !dbg !1883
  br i1 %15, label %bb7, label %bb8, !dbg !1883

bb8:                                              ; preds = %bb6
  %_11 = icmp sgt i64 %q, 38, !dbg !1885
  br i1 %_11, label %bb9, label %bb10, !dbg !1885

bb7:                                              ; preds = %bb6
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1886
  store i64 %fp_zero.0, i64* %16, align 8, !dbg !1886
  %17 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1886
  store i32 %fp_zero.1, i32* %17, align 8, !dbg !1886
  br label %bb46, !dbg !1887

bb46:                                             ; preds = %bb9, %bb7
  br label %bb47, !dbg !1888

bb10:                                             ; preds = %bb8
  %self = load i64, i64* %w, align 8, !dbg !1890
  store i64 %self, i64* %self.dbg.spill, align 8, !dbg !1890
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1891, metadata !DIExpression()), !dbg !1895
  %18 = call i64 @llvm.ctlz.i64(i64 %self, i1 false), !dbg !1895
  store i64 %18, i64* %1, align 8, !dbg !1895
  %_102 = load i64, i64* %1, align 8, !dbg !1895
  br label %bb49, !dbg !1895

bb9:                                              ; preds = %bb8
  %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1896
  store i64 %fp_inf.0, i64* %19, align 8, !dbg !1896
  %20 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1896
  store i32 %fp_inf.1, i32* %20, align 8, !dbg !1896
  br label %bb46, !dbg !1888

bb47:                                             ; preds = %bb45, %bb46
  br label %bb48, !dbg !1897

bb49:                                             ; preds = %bb10
  %lz = trunc i64 %_102 to i32, !dbg !1895
  store i32 %lz, i32* %lz.dbg.spill, align 4, !dbg !1895
  call void @llvm.dbg.declare(metadata i32* %lz.dbg.spill, metadata !1859, metadata !DIExpression()), !dbg !1898
  %21 = load i64, i64* %w, align 8, !dbg !1899
  %22 = zext i32 %lz to i64, !dbg !1899
  %23 = and i64 %22, 63, !dbg !1899
  %24 = shl i64 %21, %23, !dbg !1899
  store i64 %24, i64* %w, align 8, !dbg !1899
  %_21 = load i64, i64* %w, align 8, !dbg !1900
; call core::num::dec2flt::lemire::compute_product_approx
  %25 = call { i64, i64 } @_ZN4core3num7dec2flt6lemire22compute_product_approx17h150e58dc42172e61E(i64 %q, i64 %_21, i64 26), !dbg !1901
  %_19.0 = extractvalue { i64, i64 } %25, 0, !dbg !1901
  %_19.1 = extractvalue { i64, i64 } %25, 1, !dbg !1901
  br label %bb11, !dbg !1901

bb11:                                             ; preds = %bb49
  store i64 %_19.0, i64* %lo.dbg.spill, align 8, !dbg !1902
  call void @llvm.dbg.declare(metadata i64* %lo.dbg.spill, metadata !1861, metadata !DIExpression()), !dbg !1903
  store i64 %_19.1, i64* %hi.dbg.spill, align 8, !dbg !1904
  call void @llvm.dbg.declare(metadata i64* %hi.dbg.spill, metadata !1863, metadata !DIExpression()), !dbg !1905
  %26 = icmp eq i64 %_19.0, -1, !dbg !1906
  br i1 %26, label %bb12, label %bb18, !dbg !1906

bb12:                                             ; preds = %bb11
  %_25 = icmp sge i64 %q, -27, !dbg !1907
  br i1 %_25, label %bb14, label %bb13, !dbg !1907

bb18:                                             ; preds = %bb11
  br label %bb19, !dbg !1908

bb19:                                             ; preds = %bb17, %bb18
  %_32 = lshr i64 %_19.1, 63, !dbg !1909
  %upperbit = trunc i64 %_32 to i32, !dbg !1909
  store i32 %upperbit, i32* %upperbit.dbg.spill, align 4, !dbg !1909
  call void @llvm.dbg.declare(metadata i32* %upperbit.dbg.spill, metadata !1866, metadata !DIExpression()), !dbg !1910
  %_38 = add i32 %upperbit, 64, !dbg !1911
  %_37 = sub i32 %_38, 23, !dbg !1911
  %_36 = sub i32 %_37, 3, !dbg !1912
  %27 = zext i32 %_36 to i64, !dbg !1913
  %28 = and i64 %27, 63, !dbg !1913
  %29 = lshr i64 %_19.1, %28, !dbg !1913
  store i64 %29, i64* %mantissa, align 8, !dbg !1913
  %_45 = trunc i64 %q to i32, !dbg !1914
; call core::num::dec2flt::lemire::power
  %_44 = call i32 @_ZN4core3num7dec2flt6lemire5power17h0a9f8eda2bed0462E(i32 %_45), !dbg !1915
  br label %bb20, !dbg !1915

bb13:                                             ; preds = %bb12
  store i8 0, i8* %inside_safe_exponent, align 1, !dbg !1907
  br label %bb15, !dbg !1907

bb14:                                             ; preds = %bb12
  %_27 = icmp sle i64 %q, 55, !dbg !1916
  %30 = zext i1 %_27 to i8, !dbg !1907
  store i8 %30, i8* %inside_safe_exponent, align 1, !dbg !1907
  br label %bb15, !dbg !1907

bb15:                                             ; preds = %bb13, %bb14
  %31 = load i8, i8* %inside_safe_exponent, align 1, !dbg !1917, !range !266, !noundef !19
  %_30 = trunc i8 %31 to i1, !dbg !1917
  %_29 = xor i1 %_30, true, !dbg !1918
  br i1 %_29, label %bb16, label %bb17, !dbg !1918

bb17:                                             ; preds = %bb15
  br label %bb19, !dbg !1908

bb16:                                             ; preds = %bb15
  %32 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1919
  store i64 %fp_error.0, i64* %32, align 8, !dbg !1919
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1919
  store i32 %fp_error.1, i32* %33, align 8, !dbg !1919
  br label %bb45, !dbg !1920

bb45:                                             ; preds = %bb44, %bb16
  br label %bb47, !dbg !1888

bb20:                                             ; preds = %bb19
  %_43 = add i32 %_44, %upperbit, !dbg !1915
  %_42 = sub i32 %_43, %lz, !dbg !1915
  %34 = sub i32 %_42, -127, !dbg !1915
  store i32 %34, i32* %power2, align 4, !dbg !1915
  %_51 = load i32, i32* %power2, align 4, !dbg !1922
  %_50 = icmp sle i32 %_51, 0, !dbg !1922
  br i1 %_50, label %bb21, label %bb24, !dbg !1922

bb24:                                             ; preds = %bb20
  %_70 = icmp ule i64 %_19.0, 1, !dbg !1923
  br i1 %_70, label %bb35, label %bb34, !dbg !1923

bb21:                                             ; preds = %bb20
  %_55 = load i32, i32* %power2, align 4, !dbg !1924
  %_54 = sub i32 0, %_55, !dbg !1925
  %_53 = add i32 %_54, 1, !dbg !1925
  %_52 = icmp sge i32 %_53, 64, !dbg !1925
  br i1 %_52, label %bb22, label %bb23, !dbg !1925

bb23:                                             ; preds = %bb21
  %_58 = load i32, i32* %power2, align 4, !dbg !1926
  %_57 = sub i32 0, %_58, !dbg !1927
  %_56 = add i32 %_57, 1, !dbg !1927
  %35 = load i64, i64* %mantissa, align 8, !dbg !1928
  %36 = zext i32 %_56 to i64, !dbg !1928
  %37 = and i64 %36, 63, !dbg !1928
  %38 = lshr i64 %35, %37, !dbg !1928
  store i64 %38, i64* %mantissa, align 8, !dbg !1928
  %_60 = load i64, i64* %mantissa, align 8, !dbg !1929
  %_59 = and i64 %_60, 1, !dbg !1929
  %39 = load i64, i64* %mantissa, align 8, !dbg !1930
  %40 = add i64 %39, %_59, !dbg !1930
  store i64 %40, i64* %mantissa, align 8, !dbg !1930
  %41 = load i64, i64* %mantissa, align 8, !dbg !1931
  %42 = lshr i64 %41, 1, !dbg !1931
  store i64 %42, i64* %mantissa, align 8, !dbg !1931
  %_62 = load i64, i64* %mantissa, align 8, !dbg !1932
  %_61 = icmp uge i64 %_62, 8388608, !dbg !1933
  %43 = zext i1 %_61 to i32, !dbg !1934
  store i32 %43, i32* %power2, align 4, !dbg !1934
  %_64 = load i64, i64* %mantissa, align 8, !dbg !1935
  %_65 = load i32, i32* %power2, align 4, !dbg !1936
  %44 = bitcast { i64, i32 }* %2 to i64*, !dbg !1937
  store i64 %_64, i64* %44, align 8, !dbg !1937
  %45 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1937
  store i32 %_65, i32* %45, align 8, !dbg !1937
  br label %bb43, !dbg !1938

bb22:                                             ; preds = %bb21
  %46 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1939
  store i64 %fp_zero.0, i64* %46, align 8, !dbg !1939
  %47 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1939
  store i32 %fp_zero.1, i32* %47, align 8, !dbg !1939
  br label %bb43, !dbg !1940

bb43:                                             ; preds = %bb23, %bb22
  br label %bb44, !dbg !1940

bb44:                                             ; preds = %bb41, %bb43
  br label %bb45, !dbg !1920

bb34:                                             ; preds = %bb24
  store i8 0, i8* %_69, align 1, !dbg !1923
  br label %bb36, !dbg !1923

bb35:                                             ; preds = %bb24
  %_72 = icmp sge i64 %q, -17, !dbg !1942
  %48 = zext i1 %_72 to i8, !dbg !1923
  store i8 %48, i8* %_69, align 1, !dbg !1923
  br label %bb36, !dbg !1923

bb36:                                             ; preds = %bb34, %bb35
  %49 = load i8, i8* %_69, align 1, !dbg !1923, !range !266, !noundef !19
  %50 = trunc i8 %49 to i1, !dbg !1923
  br i1 %50, label %bb32, label %bb31, !dbg !1923

bb31:                                             ; preds = %bb36
  store i8 0, i8* %_68, align 1, !dbg !1923
  br label %bb33, !dbg !1923

bb32:                                             ; preds = %bb36
  %_75 = icmp sle i64 %q, 10, !dbg !1943
  %51 = zext i1 %_75 to i8, !dbg !1923
  store i8 %51, i8* %_68, align 1, !dbg !1923
  br label %bb33, !dbg !1923

bb33:                                             ; preds = %bb31, %bb32
  %52 = load i8, i8* %_68, align 1, !dbg !1923, !range !266, !noundef !19
  %53 = trunc i8 %52 to i1, !dbg !1923
  br i1 %53, label %bb29, label %bb28, !dbg !1923

bb28:                                             ; preds = %bb33
  store i8 0, i8* %_67, align 1, !dbg !1923
  br label %bb30, !dbg !1923

bb29:                                             ; preds = %bb33
  %_80 = load i64, i64* %mantissa, align 8, !dbg !1944
  %_79 = and i64 %_80, 3, !dbg !1944
  %_78 = icmp eq i64 %_79, 1, !dbg !1944
  %54 = zext i1 %_78 to i8, !dbg !1923
  store i8 %54, i8* %_67, align 1, !dbg !1923
  br label %bb30, !dbg !1923

bb30:                                             ; preds = %bb28, %bb29
  %55 = load i8, i8* %_67, align 1, !dbg !1923, !range !266, !noundef !19
  %56 = trunc i8 %55 to i1, !dbg !1923
  br i1 %56, label %bb26, label %bb25, !dbg !1923

bb25:                                             ; preds = %bb30
  store i8 0, i8* %_66, align 1, !dbg !1923
  br label %bb27, !dbg !1923

bb26:                                             ; preds = %bb30
  %_83 = load i64, i64* %mantissa, align 8, !dbg !1945
  %_86 = add i32 %upperbit, 64, !dbg !1946
  %_85 = sub i32 %_86, 23, !dbg !1946
  %_84 = sub i32 %_85, 3, !dbg !1947
  %57 = zext i32 %_84 to i64, !dbg !1948
  %58 = and i64 %57, 63, !dbg !1948
  %_82 = shl i64 %_83, %58, !dbg !1948
  %_81 = icmp eq i64 %_82, %_19.1, !dbg !1948
  %59 = zext i1 %_81 to i8, !dbg !1923
  store i8 %59, i8* %_66, align 1, !dbg !1923
  br label %bb27, !dbg !1923

bb27:                                             ; preds = %bb25, %bb26
  %60 = load i8, i8* %_66, align 1, !dbg !1923, !range !266, !noundef !19
  %61 = trunc i8 %60 to i1, !dbg !1923
  br i1 %61, label %bb37, label %bb38, !dbg !1923

bb38:                                             ; preds = %bb37, %bb27
  %_92 = load i64, i64* %mantissa, align 8, !dbg !1949
  %_91 = and i64 %_92, 1, !dbg !1949
  %62 = load i64, i64* %mantissa, align 8, !dbg !1950
  %63 = add i64 %62, %_91, !dbg !1950
  store i64 %63, i64* %mantissa, align 8, !dbg !1950
  %64 = load i64, i64* %mantissa, align 8, !dbg !1951
  %65 = lshr i64 %64, 1, !dbg !1951
  store i64 %65, i64* %mantissa, align 8, !dbg !1951
  %_94 = load i64, i64* %mantissa, align 8, !dbg !1952
  %_93 = icmp uge i64 %_94, 16777216, !dbg !1952
  br i1 %_93, label %bb39, label %bb40, !dbg !1952

bb37:                                             ; preds = %bb27
  %66 = load i64, i64* %mantissa, align 8, !dbg !1953
  %67 = and i64 %66, -2, !dbg !1953
  store i64 %67, i64* %mantissa, align 8, !dbg !1953
  br label %bb38, !dbg !1954

bb40:                                             ; preds = %bb39, %bb38
  %68 = load i64, i64* %mantissa, align 8, !dbg !1955
  %69 = and i64 %68, -8388609, !dbg !1955
  store i64 %69, i64* %mantissa, align 8, !dbg !1955
  %_99 = load i32, i32* %power2, align 4, !dbg !1956
  %_98 = icmp sge i32 %_99, 255, !dbg !1956
  br i1 %_98, label %bb41, label %bb42, !dbg !1956

bb39:                                             ; preds = %bb38
  store i64 8388608, i64* %mantissa, align 8, !dbg !1957
  %70 = load i32, i32* %power2, align 4, !dbg !1958
  %71 = add i32 %70, 1, !dbg !1958
  store i32 %71, i32* %power2, align 4, !dbg !1958
  br label %bb40, !dbg !1959

bb42:                                             ; preds = %bb40
  %_100 = load i64, i64* %mantissa, align 8, !dbg !1960
  %_101 = load i32, i32* %power2, align 4, !dbg !1961
  %72 = bitcast { i64, i32 }* %2 to i64*, !dbg !1962
  store i64 %_100, i64* %72, align 8, !dbg !1962
  %73 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1962
  store i32 %_101, i32* %73, align 8, !dbg !1962
  br label %bb48, !dbg !1897

bb41:                                             ; preds = %bb40
  %74 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1963
  store i64 %fp_inf.0, i64* %74, align 8, !dbg !1963
  %75 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1963
  store i32 %fp_inf.1, i32* %75, align 8, !dbg !1963
  br label %bb44, !dbg !1940

bb48:                                             ; preds = %bb42, %bb47
  %76 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1897
  %77 = load i64, i64* %76, align 8, !dbg !1897
  %78 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1897
  %79 = load i32, i32* %78, align 8, !dbg !1897
  %80 = insertvalue { i64, i32 } undef, i64 %77, 0, !dbg !1897
  %81 = insertvalue { i64, i32 } %80, i32 %79, 1, !dbg !1897
  ret { i64, i32 } %81, !dbg !1897
}

; core::num::dec2flt::number::Number::is_fast_path
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN4core3num7dec2flt6number6Number12is_fast_path17hc8db93a1472684d6E(%"core::num::dec2flt::number::Number"* align 8 %self) unnamed_addr #1 !dbg !1964 {
start:
  %self.dbg.spill = alloca %"core::num::dec2flt::number::Number"*, align 8
  %_3 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca i8, align 1
  store %"core::num::dec2flt::number::Number"* %self, %"core::num::dec2flt::number::Number"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::number::Number"** %self.dbg.spill, metadata !1977, metadata !DIExpression()), !dbg !1978
  %1 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !1979
  %_5 = load i64, i64* %1, align 8, !dbg !1979
  %_4 = icmp sle i64 -22, %_5, !dbg !1980
  br i1 %_4, label %bb8, label %bb7, !dbg !1980

bb7:                                              ; preds = %start
  store i8 0, i8* %_3, align 1, !dbg !1980
  br label %bb9, !dbg !1980

bb8:                                              ; preds = %start
  %2 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !1981
  %_7 = load i64, i64* %2, align 8, !dbg !1981
  %_6 = icmp sle i64 %_7, 37, !dbg !1981
  %3 = zext i1 %_6 to i8, !dbg !1980
  store i8 %3, i8* %_3, align 1, !dbg !1980
  br label %bb9, !dbg !1980

bb9:                                              ; preds = %bb7, %bb8
  %4 = load i8, i8* %_3, align 1, !dbg !1980, !range !266, !noundef !19
  %5 = trunc i8 %4 to i1, !dbg !1980
  br i1 %5, label %bb5, label %bb4, !dbg !1980

bb4:                                              ; preds = %bb9
  store i8 0, i8* %_2, align 1, !dbg !1980
  br label %bb6, !dbg !1980

bb5:                                              ; preds = %bb9
  %6 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 1, !dbg !1982
  %_9 = load i64, i64* %6, align 8, !dbg !1982
  %_8 = icmp ule i64 %_9, 9007199254740992, !dbg !1982
  %7 = zext i1 %_8 to i8, !dbg !1980
  store i8 %7, i8* %_2, align 1, !dbg !1980
  br label %bb6, !dbg !1980

bb6:                                              ; preds = %bb4, %bb5
  %8 = load i8, i8* %_2, align 1, !dbg !1980, !range !266, !noundef !19
  %9 = trunc i8 %8 to i1, !dbg !1980
  br i1 %9, label %bb2, label %bb1, !dbg !1980

bb1:                                              ; preds = %bb6
  store i8 0, i8* %0, align 1, !dbg !1980
  br label %bb3, !dbg !1980

bb2:                                              ; preds = %bb6
  %10 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 3, !dbg !1983
  %11 = load i8, i8* %10, align 1, !dbg !1983, !range !266, !noundef !19
  %_11 = trunc i8 %11 to i1, !dbg !1983
  %_10 = xor i1 %_11, true, !dbg !1984
  %12 = zext i1 %_10 to i8, !dbg !1980
  store i8 %12, i8* %0, align 1, !dbg !1980
  br label %bb3, !dbg !1980

bb3:                                              ; preds = %bb1, %bb2
  %13 = load i8, i8* %0, align 1, !dbg !1985, !range !266, !noundef !19
  %14 = trunc i8 %13 to i1, !dbg !1985
  ret i1 %14, !dbg !1985
}

; core::num::dec2flt::number::Number::is_fast_path
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN4core3num7dec2flt6number6Number12is_fast_path17hf69284857d3064b3E(%"core::num::dec2flt::number::Number"* align 8 %self) unnamed_addr #1 !dbg !1986 {
start:
  %self.dbg.spill = alloca %"core::num::dec2flt::number::Number"*, align 8
  %_3 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca i8, align 1
  store %"core::num::dec2flt::number::Number"* %self, %"core::num::dec2flt::number::Number"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::number::Number"** %self.dbg.spill, metadata !1988, metadata !DIExpression()), !dbg !1989
  %1 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !1990
  %_5 = load i64, i64* %1, align 8, !dbg !1990
  %_4 = icmp sle i64 -10, %_5, !dbg !1991
  br i1 %_4, label %bb8, label %bb7, !dbg !1991

bb7:                                              ; preds = %start
  store i8 0, i8* %_3, align 1, !dbg !1991
  br label %bb9, !dbg !1991

bb8:                                              ; preds = %start
  %2 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !1992
  %_7 = load i64, i64* %2, align 8, !dbg !1992
  %_6 = icmp sle i64 %_7, 17, !dbg !1992
  %3 = zext i1 %_6 to i8, !dbg !1991
  store i8 %3, i8* %_3, align 1, !dbg !1991
  br label %bb9, !dbg !1991

bb9:                                              ; preds = %bb7, %bb8
  %4 = load i8, i8* %_3, align 1, !dbg !1991, !range !266, !noundef !19
  %5 = trunc i8 %4 to i1, !dbg !1991
  br i1 %5, label %bb5, label %bb4, !dbg !1991

bb4:                                              ; preds = %bb9
  store i8 0, i8* %_2, align 1, !dbg !1991
  br label %bb6, !dbg !1991

bb5:                                              ; preds = %bb9
  %6 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 1, !dbg !1993
  %_9 = load i64, i64* %6, align 8, !dbg !1993
  %_8 = icmp ule i64 %_9, 16777216, !dbg !1993
  %7 = zext i1 %_8 to i8, !dbg !1991
  store i8 %7, i8* %_2, align 1, !dbg !1991
  br label %bb6, !dbg !1991

bb6:                                              ; preds = %bb4, %bb5
  %8 = load i8, i8* %_2, align 1, !dbg !1991, !range !266, !noundef !19
  %9 = trunc i8 %8 to i1, !dbg !1991
  br i1 %9, label %bb2, label %bb1, !dbg !1991

bb1:                                              ; preds = %bb6
  store i8 0, i8* %0, align 1, !dbg !1991
  br label %bb3, !dbg !1991

bb2:                                              ; preds = %bb6
  %10 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 3, !dbg !1994
  %11 = load i8, i8* %10, align 1, !dbg !1994, !range !266, !noundef !19
  %_11 = trunc i8 %11 to i1, !dbg !1994
  %_10 = xor i1 %_11, true, !dbg !1995
  %12 = zext i1 %_10 to i8, !dbg !1991
  store i8 %12, i8* %0, align 1, !dbg !1991
  br label %bb3, !dbg !1991

bb3:                                              ; preds = %bb1, %bb2
  %13 = load i8, i8* %0, align 1, !dbg !1996, !range !266, !noundef !19
  %14 = trunc i8 %13 to i1, !dbg !1996
  ret i1 %14, !dbg !1996
}

; core::num::dec2flt::number::Number::try_fast_path
; Function Attrs: nonlazybind uwtable
define { i64, double } @_ZN4core3num7dec2flt6number6Number13try_fast_path17h2a5d4d0c7acf4bcaE(%"core::num::dec2flt::number::Number"* align 8 %self) unnamed_addr #1 !dbg !1997 {
start:
  %mantissa.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %shift.dbg.spill = alloca i64, align 8
  %value.dbg.spill = alloca double, align 8
  %residual.dbg.spill2 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %_cw.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"core::num::dec2flt::number::Number"*, align 8
  %_30 = alloca [16 x i64], align 8
  %self1 = alloca { i64, i64 }, align 8
  %_26 = alloca { i64, i64 }, align 8
  %value = alloca double, align 8
  %0 = alloca { i64, double }, align 8
  store %"core::num::dec2flt::number::Number"* %self, %"core::num::dec2flt::number::Number"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::number::Number"** %self.dbg.spill, metadata !2001, metadata !DIExpression()), !dbg !2016
  call void @llvm.dbg.declare(metadata {}* %_cw.dbg.spill, metadata !2002, metadata !DIExpression()), !dbg !2017
  call void @llvm.dbg.declare(metadata double* %value, metadata !2004, metadata !DIExpression()), !dbg !2018
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !2019, metadata !DIExpression()), !dbg !2043
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !2012, metadata !DIExpression()), !dbg !2045
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill2, metadata !2046, metadata !DIExpression()), !dbg !2052
; call core::num::dec2flt::fpu::fpu_precision::set_precision
  call void @_ZN4core3num7dec2flt3fpu13fpu_precision13set_precision17h04310024efb0e55cE(), !dbg !2054
  br label %bb1, !dbg !2054

bb1:                                              ; preds = %start
; call core::num::dec2flt::number::Number::is_fast_path
  %_3 = call zeroext i1 @_ZN4core3num7dec2flt6number6Number12is_fast_path17hc8db93a1472684d6E(%"core::num::dec2flt::number::Number"* align 8 %self), !dbg !2055
  br label %bb2, !dbg !2055

bb2:                                              ; preds = %bb1
  br i1 %_3, label %bb3, label %bb29, !dbg !2055

bb29:                                             ; preds = %bb2
  %1 = bitcast { i64, double }* %0 to i64*, !dbg !2056
  store i64 0, i64* %1, align 8, !dbg !2056
  br label %bb30, !dbg !2057

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !2058
  %_7 = load i64, i64* %2, align 8, !dbg !2058
  %_6 = icmp sle i64 %_7, 22, !dbg !2058
  br i1 %_6, label %bb4, label %bb13, !dbg !2058

bb13:                                             ; preds = %bb3
  %3 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !2059
  %_24 = load i64, i64* %3, align 8, !dbg !2059
  %shift = sub i64 %_24, 22, !dbg !2059
  store i64 %shift, i64* %shift.dbg.spill, align 8, !dbg !2059
  call void @llvm.dbg.declare(metadata i64* %shift.dbg.spill, metadata !2008, metadata !DIExpression()), !dbg !2060
  %4 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 1, !dbg !2044
  %_28 = load i64, i64* %4, align 8, !dbg !2044
  %5 = bitcast [16 x i64]* %_30 to i8*, !dbg !2061
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 getelementptr inbounds (<{ [128 x i8] }>, <{ [128 x i8] }>* @1, i32 0, i32 0, i32 0), i64 128, i1 false), !dbg !2061
  %_34 = icmp ult i64 %shift, 16, !dbg !2061
  %6 = call i1 @llvm.expect.i1(i1 %_34, i1 true), !dbg !2061
  br i1 %6, label %bb14, label %panic, !dbg !2061

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 1, !dbg !2062
  %_9 = load i64, i64* %7, align 8, !dbg !2062
; call <f64 as core::num::dec2flt::float::RawFloat>::from_u64
  %value3 = call double @"_ZN59_$LT$f64$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$8from_u6417he2e517674df674dcE"(i64 %_9), !dbg !2063
  store double %value3, double* %value.dbg.spill, align 8, !dbg !2063
  call void @llvm.dbg.declare(metadata double* %value.dbg.spill, metadata !2006, metadata !DIExpression()), !dbg !2064
  br label %bb5, !dbg !2063

bb5:                                              ; preds = %bb4
  %8 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !2065
  %_11 = load i64, i64* %8, align 8, !dbg !2065
  %_10 = icmp slt i64 %_11, 0, !dbg !2065
  br i1 %_10, label %bb6, label %bb9, !dbg !2065

bb9:                                              ; preds = %bb5
  %9 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !2066
  %_22 = load i64, i64* %9, align 8, !dbg !2066
; call <f64 as core::num::dec2flt::float::RawFloat>::pow10_fast_path
  %_19 = call double @"_ZN59_$LT$f64$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$15pow10_fast_path17h753202a27f0438daE"(i64 %_22), !dbg !2067
  br label %bb10, !dbg !2067

bb6:                                              ; preds = %bb5
  %10 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !2068
  %_17 = load i64, i64* %10, align 8, !dbg !2068
  %_16 = sub i64 0, %_17, !dbg !2069
; call <f64 as core::num::dec2flt::float::RawFloat>::pow10_fast_path
  %_13 = call double @"_ZN59_$LT$f64$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$15pow10_fast_path17h753202a27f0438daE"(i64 %_16), !dbg !2070
  br label %bb7, !dbg !2070

bb7:                                              ; preds = %bb6
; call <f64 as core::ops::arith::Div>::div
  %11 = call double @"_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Div$GT$3div17h51eab12971dd6ab7E"(double %value3, double %_13), !dbg !2071
  store double %11, double* %value, align 8, !dbg !2071
  br label %bb8, !dbg !2071

bb8:                                              ; preds = %bb7
  br label %bb12, !dbg !2072

bb12:                                             ; preds = %bb11, %bb8
  br label %bb25, !dbg !2073

bb10:                                             ; preds = %bb9
; call <f64 as core::ops::arith::Mul>::mul
  %12 = call double @"_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Mul$GT$3mul17h9b80d3a4e27ba66bE"(double %value3, double %_19), !dbg !2074
  store double %12, double* %value, align 8, !dbg !2074
  br label %bb11, !dbg !2074

bb11:                                             ; preds = %bb10
  br label %bb12, !dbg !2072

bb25:                                             ; preds = %bb24, %bb12
  %13 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 2, !dbg !2075
  %14 = load i8, i8* %13, align 8, !dbg !2075, !range !266, !noundef !19
  %_46 = trunc i8 %14 to i1, !dbg !2075
  br i1 %_46, label %bb26, label %bb28, !dbg !2075

bb14:                                             ; preds = %bb13
  %15 = getelementptr inbounds [16 x i64], [16 x i64]* %_30, i64 0, i64 %shift, !dbg !2061
  %_29 = load i64, i64* %15, align 8, !dbg !2061
; call core::num::<impl u64>::checked_mul
  %16 = call { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_mul17h0a8d9e77c5cdaf25E"(i64 %_28, i64 %_29), !dbg !2044
  store { i64, i64 } %16, { i64, i64 }* %self1, align 8, !dbg !2044
  br label %bb15, !dbg !2044

panic:                                            ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %shift, i64 16, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc6364 to %"core::panic::location::Location"*)) #7, !dbg !2061
  unreachable, !dbg !2061

bb15:                                             ; preds = %bb14
  %17 = bitcast { i64, i64 }* %self1 to i64*, !dbg !2043
  %_50 = load i64, i64* %17, align 8, !dbg !2043, !range !1107, !noundef !19
  switch i64 %_50, label %bb34 [
    i64 0, label %bb33
    i64 1, label %bb35
  ], !dbg !2043

bb34:                                             ; preds = %bb15
  unreachable, !dbg !2043

bb33:                                             ; preds = %bb15
  %18 = bitcast { i64, i64 }* %_26 to i64*, !dbg !2043
  store i64 1, i64* %18, align 8, !dbg !2043
  br label %bb16, !dbg !2043

bb35:                                             ; preds = %bb15
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !2043
  %v = load i64, i64* %19, align 8, !dbg !2043
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !2043
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !2040, metadata !DIExpression()), !dbg !2076
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_26, i32 0, i32 1, !dbg !2076
  store i64 %v, i64* %20, align 8, !dbg !2076
  %21 = bitcast { i64, i64 }* %_26 to i64*, !dbg !2076
  store i64 0, i64* %21, align 8, !dbg !2076
  br label %bb16, !dbg !2043

bb16:                                             ; preds = %bb33, %bb35
  %22 = bitcast { i64, i64 }* %_26 to i64*, !dbg !2044
  %_35 = load i64, i64* %22, align 8, !dbg !2044, !range !1107, !noundef !19
  switch i64 %_35, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ], !dbg !2044

bb18:                                             ; preds = %bb16
  unreachable, !dbg !2044

bb17:                                             ; preds = %bb16
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_26, i32 0, i32 1, !dbg !2044
  %val = load i64, i64* %23, align 8, !dbg !2044
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !2044
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !2014, metadata !DIExpression()), !dbg !2077
  store i64 %val, i64* %mantissa.dbg.spill, align 8, !dbg !2077
  call void @llvm.dbg.declare(metadata i64* %mantissa.dbg.spill, metadata !2010, metadata !DIExpression()), !dbg !2078
  %_39 = icmp ugt i64 %val, 9007199254740992, !dbg !2079
  br i1 %_39, label %bb20, label %bb21, !dbg !2079

bb19:                                             ; preds = %bb16
  %24 = bitcast { i64, double }* %0 to i64*, !dbg !2052
  store i64 0, i64* %24, align 8, !dbg !2052
  br label %bb31, !dbg !2080

bb31:                                             ; preds = %bb20, %bb19
  br label %bb32, !dbg !2082

bb21:                                             ; preds = %bb17
; call <f64 as core::num::dec2flt::float::RawFloat>::from_u64
  %_41 = call double @"_ZN59_$LT$f64$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$8from_u6417he2e517674df674dcE"(i64 %val), !dbg !2083
  br label %bb22, !dbg !2083

bb20:                                             ; preds = %bb17
  %25 = bitcast { i64, double }* %0 to i64*, !dbg !2084
  store i64 0, i64* %25, align 8, !dbg !2084
  br label %bb31, !dbg !2085

bb32:                                             ; preds = %bb30, %bb31
  %26 = getelementptr inbounds { i64, double }, { i64, double }* %0, i32 0, i32 0, !dbg !2082
  %27 = load i64, i64* %26, align 8, !dbg !2082, !range !1107, !noundef !19
  %28 = getelementptr inbounds { i64, double }, { i64, double }* %0, i32 0, i32 1, !dbg !2082
  %29 = load double, double* %28, align 8, !dbg !2082
  %30 = insertvalue { i64, double } undef, i64 %27, 0, !dbg !2082
  %31 = insertvalue { i64, double } %30, double %29, 1, !dbg !2082
  ret { i64, double } %31, !dbg !2082

bb22:                                             ; preds = %bb21
; call <f64 as core::num::dec2flt::float::RawFloat>::pow10_fast_path
  %_43 = call double @"_ZN59_$LT$f64$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$15pow10_fast_path17h753202a27f0438daE"(i64 22), !dbg !2087
  br label %bb23, !dbg !2087

bb23:                                             ; preds = %bb22
; call <f64 as core::ops::arith::Mul>::mul
  %32 = call double @"_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Mul$GT$3mul17h9b80d3a4e27ba66bE"(double %_41, double %_43), !dbg !2083
  store double %32, double* %value, align 8, !dbg !2083
  br label %bb24, !dbg !2083

bb24:                                             ; preds = %bb23
  br label %bb25, !dbg !2073

bb28:                                             ; preds = %bb27, %bb25
  %_49 = load double, double* %value, align 8, !dbg !2088
  %33 = getelementptr inbounds { i64, double }, { i64, double }* %0, i32 0, i32 1, !dbg !2089
  store double %_49, double* %33, align 8, !dbg !2089
  %34 = bitcast { i64, double }* %0 to i64*, !dbg !2089
  store i64 1, i64* %34, align 8, !dbg !2089
  br label %bb30, !dbg !2057

bb26:                                             ; preds = %bb25
  %_48 = load double, double* %value, align 8, !dbg !2090
; call <f64 as core::ops::arith::Neg>::neg
  %_47 = call double @"_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Neg$GT$3neg17h2916e189c8f22844E"(double %_48), !dbg !2091
  br label %bb27, !dbg !2091

bb27:                                             ; preds = %bb26
  store double %_47, double* %value, align 8, !dbg !2092
  br label %bb28, !dbg !2093

bb30:                                             ; preds = %bb29, %bb28
  br label %bb32, !dbg !2082
}

; core::num::dec2flt::number::Number::try_fast_path
; Function Attrs: nonlazybind uwtable
define { i32, float } @_ZN4core3num7dec2flt6number6Number13try_fast_path17hcb70d053bec2fd2bE(%"core::num::dec2flt::number::Number"* align 8 %self) unnamed_addr #1 !dbg !2094 {
start:
  %mantissa.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %shift.dbg.spill = alloca i64, align 8
  %value.dbg.spill = alloca float, align 4
  %residual.dbg.spill2 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %_cw.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"core::num::dec2flt::number::Number"*, align 8
  %_30 = alloca [16 x i64], align 8
  %self1 = alloca { i64, i64 }, align 8
  %_26 = alloca { i64, i64 }, align 8
  %value = alloca float, align 4
  %0 = alloca { i32, float }, align 4
  store %"core::num::dec2flt::number::Number"* %self, %"core::num::dec2flt::number::Number"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::number::Number"** %self.dbg.spill, metadata !2098, metadata !DIExpression()), !dbg !2113
  call void @llvm.dbg.declare(metadata {}* %_cw.dbg.spill, metadata !2099, metadata !DIExpression()), !dbg !2114
  call void @llvm.dbg.declare(metadata float* %value, metadata !2101, metadata !DIExpression()), !dbg !2115
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !2116, metadata !DIExpression()), !dbg !2123
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !2109, metadata !DIExpression()), !dbg !2125
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill2, metadata !2126, metadata !DIExpression()), !dbg !2132
; call core::num::dec2flt::fpu::fpu_precision::set_precision
  call void @_ZN4core3num7dec2flt3fpu13fpu_precision13set_precision17h3aa663e467ff5488E(), !dbg !2134
  br label %bb1, !dbg !2134

bb1:                                              ; preds = %start
; call core::num::dec2flt::number::Number::is_fast_path
  %_3 = call zeroext i1 @_ZN4core3num7dec2flt6number6Number12is_fast_path17hf69284857d3064b3E(%"core::num::dec2flt::number::Number"* align 8 %self), !dbg !2135
  br label %bb2, !dbg !2135

bb2:                                              ; preds = %bb1
  br i1 %_3, label %bb3, label %bb29, !dbg !2135

bb29:                                             ; preds = %bb2
  %1 = bitcast { i32, float }* %0 to i32*, !dbg !2136
  store i32 0, i32* %1, align 4, !dbg !2136
  br label %bb30, !dbg !2137

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !2138
  %_7 = load i64, i64* %2, align 8, !dbg !2138
  %_6 = icmp sle i64 %_7, 10, !dbg !2138
  br i1 %_6, label %bb4, label %bb13, !dbg !2138

bb13:                                             ; preds = %bb3
  %3 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !2139
  %_24 = load i64, i64* %3, align 8, !dbg !2139
  %shift = sub i64 %_24, 10, !dbg !2139
  store i64 %shift, i64* %shift.dbg.spill, align 8, !dbg !2139
  call void @llvm.dbg.declare(metadata i64* %shift.dbg.spill, metadata !2105, metadata !DIExpression()), !dbg !2140
  %4 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 1, !dbg !2124
  %_28 = load i64, i64* %4, align 8, !dbg !2124
  %5 = bitcast [16 x i64]* %_30 to i8*, !dbg !2141
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 getelementptr inbounds (<{ [128 x i8] }>, <{ [128 x i8] }>* @1, i32 0, i32 0, i32 0), i64 128, i1 false), !dbg !2141
  %_34 = icmp ult i64 %shift, 16, !dbg !2141
  %6 = call i1 @llvm.expect.i1(i1 %_34, i1 true), !dbg !2141
  br i1 %6, label %bb14, label %panic, !dbg !2141

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 1, !dbg !2142
  %_9 = load i64, i64* %7, align 8, !dbg !2142
; call <f32 as core::num::dec2flt::float::RawFloat>::from_u64
  %value3 = call float @"_ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$8from_u6417h4895000fc90a4153E"(i64 %_9), !dbg !2143
  store float %value3, float* %value.dbg.spill, align 4, !dbg !2143
  call void @llvm.dbg.declare(metadata float* %value.dbg.spill, metadata !2103, metadata !DIExpression()), !dbg !2144
  br label %bb5, !dbg !2143

bb5:                                              ; preds = %bb4
  %8 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !2145
  %_11 = load i64, i64* %8, align 8, !dbg !2145
  %_10 = icmp slt i64 %_11, 0, !dbg !2145
  br i1 %_10, label %bb6, label %bb9, !dbg !2145

bb9:                                              ; preds = %bb5
  %9 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !2146
  %_22 = load i64, i64* %9, align 8, !dbg !2146
; call <f32 as core::num::dec2flt::float::RawFloat>::pow10_fast_path
  %_19 = call float @"_ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$15pow10_fast_path17h98effb03d97827a7E"(i64 %_22), !dbg !2147
  br label %bb10, !dbg !2147

bb6:                                              ; preds = %bb5
  %10 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !2148
  %_17 = load i64, i64* %10, align 8, !dbg !2148
  %_16 = sub i64 0, %_17, !dbg !2149
; call <f32 as core::num::dec2flt::float::RawFloat>::pow10_fast_path
  %_13 = call float @"_ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$15pow10_fast_path17h98effb03d97827a7E"(i64 %_16), !dbg !2150
  br label %bb7, !dbg !2150

bb7:                                              ; preds = %bb6
; call <f32 as core::ops::arith::Div>::div
  %11 = call float @"_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Div$GT$3div17h486d2693cf3cae96E"(float %value3, float %_13), !dbg !2151
  store float %11, float* %value, align 4, !dbg !2151
  br label %bb8, !dbg !2151

bb8:                                              ; preds = %bb7
  br label %bb12, !dbg !2152

bb12:                                             ; preds = %bb11, %bb8
  br label %bb25, !dbg !2153

bb10:                                             ; preds = %bb9
; call <f32 as core::ops::arith::Mul>::mul
  %12 = call float @"_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Mul$GT$3mul17h76b1e3c0dcee3a2eE"(float %value3, float %_19), !dbg !2154
  store float %12, float* %value, align 4, !dbg !2154
  br label %bb11, !dbg !2154

bb11:                                             ; preds = %bb10
  br label %bb12, !dbg !2152

bb25:                                             ; preds = %bb24, %bb12
  %13 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 2, !dbg !2155
  %14 = load i8, i8* %13, align 8, !dbg !2155, !range !266, !noundef !19
  %_46 = trunc i8 %14 to i1, !dbg !2155
  br i1 %_46, label %bb26, label %bb28, !dbg !2155

bb14:                                             ; preds = %bb13
  %15 = getelementptr inbounds [16 x i64], [16 x i64]* %_30, i64 0, i64 %shift, !dbg !2141
  %_29 = load i64, i64* %15, align 8, !dbg !2141
; call core::num::<impl u64>::checked_mul
  %16 = call { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_mul17h0a8d9e77c5cdaf25E"(i64 %_28, i64 %_29), !dbg !2124
  store { i64, i64 } %16, { i64, i64 }* %self1, align 8, !dbg !2124
  br label %bb15, !dbg !2124

panic:                                            ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %shift, i64 16, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc6364 to %"core::panic::location::Location"*)) #7, !dbg !2141
  unreachable, !dbg !2141

bb15:                                             ; preds = %bb14
  %17 = bitcast { i64, i64 }* %self1 to i64*, !dbg !2123
  %_50 = load i64, i64* %17, align 8, !dbg !2123, !range !1107, !noundef !19
  switch i64 %_50, label %bb34 [
    i64 0, label %bb33
    i64 1, label %bb35
  ], !dbg !2123

bb34:                                             ; preds = %bb15
  unreachable, !dbg !2123

bb33:                                             ; preds = %bb15
  %18 = bitcast { i64, i64 }* %_26 to i64*, !dbg !2123
  store i64 1, i64* %18, align 8, !dbg !2123
  br label %bb16, !dbg !2123

bb35:                                             ; preds = %bb15
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !2123
  %v = load i64, i64* %19, align 8, !dbg !2123
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !2123
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !2120, metadata !DIExpression()), !dbg !2156
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_26, i32 0, i32 1, !dbg !2156
  store i64 %v, i64* %20, align 8, !dbg !2156
  %21 = bitcast { i64, i64 }* %_26 to i64*, !dbg !2156
  store i64 0, i64* %21, align 8, !dbg !2156
  br label %bb16, !dbg !2123

bb16:                                             ; preds = %bb33, %bb35
  %22 = bitcast { i64, i64 }* %_26 to i64*, !dbg !2124
  %_35 = load i64, i64* %22, align 8, !dbg !2124, !range !1107, !noundef !19
  switch i64 %_35, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ], !dbg !2124

bb18:                                             ; preds = %bb16
  unreachable, !dbg !2124

bb17:                                             ; preds = %bb16
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_26, i32 0, i32 1, !dbg !2124
  %val = load i64, i64* %23, align 8, !dbg !2124
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !2124
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !2111, metadata !DIExpression()), !dbg !2157
  store i64 %val, i64* %mantissa.dbg.spill, align 8, !dbg !2157
  call void @llvm.dbg.declare(metadata i64* %mantissa.dbg.spill, metadata !2107, metadata !DIExpression()), !dbg !2158
  %_39 = icmp ugt i64 %val, 16777216, !dbg !2159
  br i1 %_39, label %bb20, label %bb21, !dbg !2159

bb19:                                             ; preds = %bb16
  %24 = bitcast { i32, float }* %0 to i32*, !dbg !2132
  store i32 0, i32* %24, align 4, !dbg !2132
  br label %bb31, !dbg !2160

bb31:                                             ; preds = %bb20, %bb19
  br label %bb32, !dbg !2162

bb21:                                             ; preds = %bb17
; call <f32 as core::num::dec2flt::float::RawFloat>::from_u64
  %_41 = call float @"_ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$8from_u6417h4895000fc90a4153E"(i64 %val), !dbg !2163
  br label %bb22, !dbg !2163

bb20:                                             ; preds = %bb17
  %25 = bitcast { i32, float }* %0 to i32*, !dbg !2164
  store i32 0, i32* %25, align 4, !dbg !2164
  br label %bb31, !dbg !2165

bb32:                                             ; preds = %bb30, %bb31
  %26 = getelementptr inbounds { i32, float }, { i32, float }* %0, i32 0, i32 0, !dbg !2162
  %27 = load i32, i32* %26, align 4, !dbg !2162, !range !1519, !noundef !19
  %28 = getelementptr inbounds { i32, float }, { i32, float }* %0, i32 0, i32 1, !dbg !2162
  %29 = load float, float* %28, align 4, !dbg !2162
  %30 = insertvalue { i32, float } undef, i32 %27, 0, !dbg !2162
  %31 = insertvalue { i32, float } %30, float %29, 1, !dbg !2162
  ret { i32, float } %31, !dbg !2162

bb22:                                             ; preds = %bb21
; call <f32 as core::num::dec2flt::float::RawFloat>::pow10_fast_path
  %_43 = call float @"_ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$15pow10_fast_path17h98effb03d97827a7E"(i64 10), !dbg !2167
  br label %bb23, !dbg !2167

bb23:                                             ; preds = %bb22
; call <f32 as core::ops::arith::Mul>::mul
  %32 = call float @"_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Mul$GT$3mul17h76b1e3c0dcee3a2eE"(float %_41, float %_43), !dbg !2163
  store float %32, float* %value, align 4, !dbg !2163
  br label %bb24, !dbg !2163

bb24:                                             ; preds = %bb23
  br label %bb25, !dbg !2153

bb28:                                             ; preds = %bb27, %bb25
  %_49 = load float, float* %value, align 4, !dbg !2168
  %33 = getelementptr inbounds { i32, float }, { i32, float }* %0, i32 0, i32 1, !dbg !2169
  store float %_49, float* %33, align 4, !dbg !2169
  %34 = bitcast { i32, float }* %0 to i32*, !dbg !2169
  store i32 1, i32* %34, align 4, !dbg !2169
  br label %bb30, !dbg !2137

bb26:                                             ; preds = %bb25
  %_48 = load float, float* %value, align 4, !dbg !2170
; call <f32 as core::ops::arith::Neg>::neg
  %_47 = call float @"_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Neg$GT$3neg17hf2d7af8905ae0e44E"(float %_48), !dbg !2171
  br label %bb27, !dbg !2171

bb27:                                             ; preds = %bb26
  store float %_47, float* %value, align 4, !dbg !2172
  br label %bb28, !dbg !2173

bb30:                                             ; preds = %bb29, %bb28
  br label %bb32, !dbg !2162
}

; core::num::dec2flt::dec2flt
; Function Attrs: nonlazybind uwtable
define void @_ZN4core3num7dec2flt7dec2flt17h88cc23508211652eE(%"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* sret(%"core::result::Result<f64, core::num::dec2flt::ParseFloatError>") %0, [0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !2174 {
start:
  %value.dbg.spill8 = alloca double, align 8
  %value.dbg.spill = alloca double, align 8
  %other.dbg.spill = alloca { i64, i32 }*, align 8
  %self.dbg.spill6 = alloca { i64, i32 }*, align 8
  %self.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %negative.dbg.spill = alloca i8, align 1
  %c.dbg.spill2 = alloca i8, align 1
  %c.dbg.spill = alloca i8, align 1
  %first.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %float = alloca double, align 8
  %_50 = alloca { i64, i32 }, align 8
  %_47 = alloca i8, align 1
  %_43 = alloca i8, align 1
  %_42 = alloca i8, align 1
  %fp = alloca { i64, i32 }, align 8
  %_34 = alloca { i64, double }, align 8
  %_27 = alloca { i64, double }, align 8
  %r = alloca %"core::num::dec2flt::number::Number", align 8
  %_22 = alloca %"core::option::Option<core::num::dec2flt::number::Number>", align 8
  %num = alloca %"core::num::dec2flt::number::Number", align 8
  %_12 = alloca i8, align 1
  %_5 = alloca i8*, align 8
  %s = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !2176, metadata !DIExpression()), !dbg !2197
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s, metadata !2177, metadata !DIExpression()), !dbg !2198
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::number::Number"* %num, metadata !2185, metadata !DIExpression()), !dbg !2199
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::number::Number"* %r, metadata !2187, metadata !DIExpression()), !dbg !2200
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp, metadata !2193, metadata !DIExpression()), !dbg !2201
  call void @llvm.dbg.declare(metadata double* %float, metadata !2195, metadata !DIExpression()), !dbg !2202
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !2203
  store [0 x i8]* %s.0, [0 x i8]** %3, align 8, !dbg !2203
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !2203
  store i64 %s.1, i64* %4, align 8, !dbg !2203
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2204, metadata !DIExpression()), !dbg !2212
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !2212
  store [0 x i8]* %s.0, [0 x i8]** %5, align 8, !dbg !2212
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !2212
  store i64 %s.1, i64* %6, align 8, !dbg !2212
  br label %bb47, !dbg !2212

bb47:                                             ; preds = %start
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !2213
  %self.0 = load [0 x i8]*, [0 x i8]** %7, align 8, !dbg !2213, !nonnull !19, !align !627, !noundef !19
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !2213
  %self.1 = load i64, i64* %8, align 8, !dbg !2213
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !2213
  store [0 x i8]* %self.0, [0 x i8]** %9, align 8, !dbg !2213
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !2213
  store i64 %self.1, i64* %10, align 8, !dbg !2213
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !2214, metadata !DIExpression()), !dbg !2234
  %_68 = icmp uge i64 %self.1, 1, !dbg !2235
  br i1 %_68, label %bb48, label %bb49, !dbg !2235

bb49:                                             ; preds = %bb47
  %11 = bitcast i8** %_5 to {}**, !dbg !2234
  store {}* null, {}** %11, align 8, !dbg !2234
  br label %bb1, !dbg !2234

bb48:                                             ; preds = %bb47
  %first = getelementptr inbounds [0 x i8], [0 x i8]* %self.0, i64 0, i64 0, !dbg !2235
  store i8* %first, i8** %first.dbg.spill, align 8, !dbg !2235
  call void @llvm.dbg.declare(metadata i8** %first.dbg.spill, metadata !2231, metadata !DIExpression()), !dbg !2235
  store i8* %first, i8** %_5, align 8, !dbg !2235
  br label %bb1, !dbg !2234

bb1:                                              ; preds = %bb49, %bb48
  %12 = bitcast i8** %_5 to {}**, !dbg !2236
  %13 = load {}*, {}** %12, align 8, !dbg !2236
  %14 = icmp eq {}* %13, null, !dbg !2236
  %_7 = select i1 %14, i64 0, i64 1, !dbg !2236
  %15 = icmp eq i64 %_7, 1, !dbg !2236
  br i1 %15, label %bb2, label %bb3, !dbg !2236

bb2:                                              ; preds = %bb1
  %_64 = load i8*, i8** %_5, align 8, !dbg !2237, !nonnull !19, !align !627, !noundef !19
  %c = load i8, i8* %_64, align 1, !dbg !2237
  store i8 %c, i8* %c.dbg.spill, align 1, !dbg !2237
  call void @llvm.dbg.declare(metadata i8* %c.dbg.spill, metadata !2181, metadata !DIExpression()), !dbg !2237
  store i8 %c, i8* %c.dbg.spill2, align 1, !dbg !2238
  call void @llvm.dbg.declare(metadata i8* %c.dbg.spill2, metadata !2179, metadata !DIExpression()), !dbg !2239
  %negative = icmp eq i8 %c, 45, !dbg !2240
  %16 = zext i1 %negative to i8, !dbg !2240
  store i8 %16, i8* %negative.dbg.spill, align 1, !dbg !2240
  call void @llvm.dbg.declare(metadata i8* %negative.dbg.spill, metadata !2183, metadata !DIExpression()), !dbg !2241
  %17 = icmp eq i8 %c, 45, !dbg !2242
  br i1 %17, label %bb5, label %bb6, !dbg !2242

bb3:                                              ; preds = %bb1
; call core::num::dec2flt::pfe_empty
  %_9 = call zeroext i1 @_ZN4core3num7dec2flt9pfe_empty17h6df4326effb09ff2E(), !dbg !2243
  br label %bb4, !dbg !2243

bb4:                                              ; preds = %bb3
  %18 = bitcast %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* %0 to %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Err"*, !dbg !2244
  %19 = getelementptr inbounds %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Err", %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Err"* %18, i32 0, i32 1, !dbg !2244
  %20 = zext i1 %_9 to i8, !dbg !2244
  store i8 %20, i8* %19, align 1, !dbg !2244
  %21 = bitcast %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* %0 to i8*, !dbg !2244
  store i8 1, i8* %21, align 8, !dbg !2244
  br label %bb45, !dbg !2245

bb45:                                             ; preds = %bb44, %bb4
  br label %bb46, !dbg !2247

bb5:                                              ; preds = %bb2
  store i8 1, i8* %_12, align 1, !dbg !2242
  br label %bb7, !dbg !2242

bb6:                                              ; preds = %bb2
  %_14 = icmp eq i8 %c, 43, !dbg !2248
  %22 = zext i1 %_14 to i8, !dbg !2242
  store i8 %22, i8* %_12, align 1, !dbg !2242
  br label %bb7, !dbg !2242

bb7:                                              ; preds = %bb5, %bb6
  %23 = load i8, i8* %_12, align 1, !dbg !2242, !range !266, !noundef !19
  %24 = trunc i8 %23 to i1, !dbg !2242
  br i1 %24, label %bb8, label %bb10, !dbg !2242

bb10:                                             ; preds = %bb9, %bb7
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !2249
  %self.03 = load [0 x i8]*, [0 x i8]** %25, align 8, !dbg !2249, !nonnull !19, !align !627, !noundef !19
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !2249
  %self.14 = load i64, i64* %26, align 8, !dbg !2249
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !2249
  store [0 x i8]* %self.03, [0 x i8]** %27, align 8, !dbg !2249
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !2249
  store i64 %self.14, i64* %28, align 8, !dbg !2249
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill5, metadata !2250, metadata !DIExpression()), !dbg !2256
  %29 = icmp eq i64 %self.14, 0, !dbg !2249
  br i1 %29, label %bb11, label %bb13, !dbg !2249

bb8:                                              ; preds = %bb7
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !2257
  %_18.0 = load [0 x i8]*, [0 x i8]** %30, align 8, !dbg !2257, !nonnull !19, !align !627, !noundef !19
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !2257
  %_18.1 = load i64, i64* %31, align 8, !dbg !2257
; call core::num::dec2flt::common::ByteSlice::advance
  %32 = call { [0 x i8]*, i64 } @_ZN4core3num7dec2flt6common9ByteSlice7advance17h22a15b2890fa2986E([0 x i8]* align 1 %_18.0, i64 %_18.1, i64 1), !dbg !2257
  %_17.0 = extractvalue { [0 x i8]*, i64 } %32, 0, !dbg !2257
  %_17.1 = extractvalue { [0 x i8]*, i64 } %32, 1, !dbg !2257
  br label %bb9, !dbg !2257

bb9:                                              ; preds = %bb8
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !2258
  store [0 x i8]* %_17.0, [0 x i8]** %33, align 8, !dbg !2258
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !2258
  store i64 %_17.1, i64* %34, align 8, !dbg !2258
  br label %bb10, !dbg !2259

bb11:                                             ; preds = %bb10
; call core::num::dec2flt::pfe_invalid
  %_20 = call zeroext i1 @_ZN4core3num7dec2flt11pfe_invalid17h510707166d87dc9bE(), !dbg !2260
  br label %bb12, !dbg !2260

bb13:                                             ; preds = %bb10
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !2261
  %_23.0 = load [0 x i8]*, [0 x i8]** %35, align 8, !dbg !2261, !nonnull !19, !align !627, !noundef !19
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !2261
  %_23.1 = load i64, i64* %36, align 8, !dbg !2261
; call core::num::dec2flt::parse::parse_number
  call void @_ZN4core3num7dec2flt5parse12parse_number17h1c105239f159143dE(%"core::option::Option<core::num::dec2flt::number::Number>"* sret(%"core::option::Option<core::num::dec2flt::number::Number>") %_22, [0 x i8]* align 1 %_23.0, i64 %_23.1, i1 zeroext %negative), !dbg !2262
  br label %bb14, !dbg !2262

bb14:                                             ; preds = %bb13
  %37 = getelementptr inbounds %"core::option::Option<core::num::dec2flt::number::Number>", %"core::option::Option<core::num::dec2flt::number::Number>"* %_22, i32 0, i32 1, !dbg !2262
  %38 = load i8, i8* %37, align 8, !dbg !2262, !range !2263, !noundef !19
  %39 = sub i8 %38, 2, !dbg !2262
  %40 = icmp eq i8 %39, 0, !dbg !2262
  %_25 = select i1 %40, i64 0, i64 1, !dbg !2262
  switch i64 %_25, label %bb16 [
    i64 0, label %bb18
    i64 1, label %bb17
  ], !dbg !2264

bb16:                                             ; preds = %bb14
  unreachable, !dbg !2262

bb18:                                             ; preds = %bb14
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !2265
  %_28.0 = load [0 x i8]*, [0 x i8]** %41, align 8, !dbg !2265, !nonnull !19, !align !627, !noundef !19
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !2265
  %_28.1 = load i64, i64* %42, align 8, !dbg !2265
; call core::num::dec2flt::parse::parse_inf_nan
  %43 = call { i64, double } @_ZN4core3num7dec2flt5parse13parse_inf_nan17h0def64f125fb9befE([0 x i8]* align 1 %_28.0, i64 %_28.1, i1 zeroext %negative), !dbg !2266
  store { i64, double } %43, { i64, double }* %_27, align 8, !dbg !2266
  br label %bb19, !dbg !2266

bb17:                                             ; preds = %bb14
  %44 = bitcast %"core::option::Option<core::num::dec2flt::number::Number>"* %_22 to %"core::option::Option<core::num::dec2flt::number::Number>::Some"*, !dbg !2267
  %45 = bitcast %"core::option::Option<core::num::dec2flt::number::Number>::Some"* %44 to %"core::num::dec2flt::number::Number"*, !dbg !2267
  %46 = bitcast %"core::num::dec2flt::number::Number"* %r to i8*, !dbg !2267
  %47 = bitcast %"core::num::dec2flt::number::Number"* %45 to i8*, !dbg !2267
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false), !dbg !2267
  %48 = bitcast %"core::num::dec2flt::number::Number"* %num to i8*, !dbg !2268
  %49 = bitcast %"core::num::dec2flt::number::Number"* %r to i8*, !dbg !2268
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false), !dbg !2268
; call core::num::dec2flt::number::Number::try_fast_path
  %50 = call { i64, double } @_ZN4core3num7dec2flt6number6Number13try_fast_path17h2a5d4d0c7acf4bcaE(%"core::num::dec2flt::number::Number"* align 8 %num), !dbg !2269
  store { i64, double } %50, { i64, double }* %_34, align 8, !dbg !2269
  br label %bb22, !dbg !2269

bb22:                                             ; preds = %bb17
  %51 = bitcast { i64, double }* %_34 to i64*, !dbg !2270
  %_36 = load i64, i64* %51, align 8, !dbg !2270, !range !1107, !noundef !19
  %52 = icmp eq i64 %_36, 1, !dbg !2270
  br i1 %52, label %bb23, label %bb24, !dbg !2270

bb23:                                             ; preds = %bb22
  %53 = getelementptr inbounds { i64, double }, { i64, double }* %_34, i32 0, i32 1, !dbg !2271
  %value = load double, double* %53, align 8, !dbg !2271
  store double %value, double* %value.dbg.spill, align 8, !dbg !2271
  call void @llvm.dbg.declare(metadata double* %value.dbg.spill, metadata !2191, metadata !DIExpression()), !dbg !2271
  %54 = bitcast %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* %0 to %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Ok"*, !dbg !2272
  %55 = getelementptr inbounds %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Ok", %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Ok"* %54, i32 0, i32 1, !dbg !2272
  store double %value, double* %55, align 8, !dbg !2272
  %56 = bitcast %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* %0 to i8*, !dbg !2272
  store i8 0, i8* %56, align 8, !dbg !2272
  br label %bb43, !dbg !2273

bb24:                                             ; preds = %bb22
  %57 = bitcast %"core::num::dec2flt::number::Number"* %num to i64*, !dbg !2275
  %_40 = load i64, i64* %57, align 8, !dbg !2275
  %58 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %num, i32 0, i32 1, !dbg !2276
  %_41 = load i64, i64* %58, align 8, !dbg !2276
; call core::num::dec2flt::lemire::compute_float
  %59 = call { i64, i32 } @_ZN4core3num7dec2flt6lemire13compute_float17h2e3e94e8803c6d32E(i64 %_40, i64 %_41), !dbg !2277
  store { i64, i32 } %59, { i64, i32 }* %fp, align 8, !dbg !2277
  br label %bb25, !dbg !2277

bb25:                                             ; preds = %bb24
  %60 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %num, i32 0, i32 3, !dbg !2278
  %61 = load i8, i8* %60, align 1, !dbg !2278, !range !266, !noundef !19
  %_44 = trunc i8 %61 to i1, !dbg !2278
  br i1 %_44, label %bb30, label %bb29, !dbg !2278

bb29:                                             ; preds = %bb25
  store i8 0, i8* %_43, align 1, !dbg !2278
  br label %bb31, !dbg !2278

bb30:                                             ; preds = %bb25
  %62 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !2279
  %_46 = load i32, i32* %62, align 8, !dbg !2279
  %_45 = icmp sge i32 %_46, 0, !dbg !2279
  %63 = zext i1 %_45 to i8, !dbg !2278
  store i8 %63, i8* %_43, align 1, !dbg !2278
  br label %bb31, !dbg !2278

bb31:                                             ; preds = %bb29, %bb30
  %64 = load i8, i8* %_43, align 1, !dbg !2278, !range !266, !noundef !19
  %65 = trunc i8 %64 to i1, !dbg !2278
  br i1 %65, label %bb27, label %bb26, !dbg !2278

bb26:                                             ; preds = %bb31
  store i8 0, i8* %_42, align 1, !dbg !2278
  br label %bb28, !dbg !2278

bb27:                                             ; preds = %bb31
  store { i64, i32 }* %fp, { i64, i32 }** %self.dbg.spill6, align 8, !dbg !2280
  call void @llvm.dbg.declare(metadata { i64, i32 }** %self.dbg.spill6, metadata !2281, metadata !DIExpression()), !dbg !2290
  %66 = bitcast %"core::num::dec2flt::number::Number"* %num to i64*, !dbg !2291
  %_51 = load i64, i64* %66, align 8, !dbg !2291
  %67 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %num, i32 0, i32 1, !dbg !2292
  %_53 = load i64, i64* %67, align 8, !dbg !2292
  %_52 = add i64 %_53, 1, !dbg !2292
; call core::num::dec2flt::lemire::compute_float
  %68 = call { i64, i32 } @_ZN4core3num7dec2flt6lemire13compute_float17h2e3e94e8803c6d32E(i64 %_51, i64 %_52), !dbg !2293
  store { i64, i32 } %68, { i64, i32 }* %_50, align 8, !dbg !2293
  br label %bb32, !dbg !2293

bb32:                                             ; preds = %bb27
  store { i64, i32 }* %_50, { i64, i32 }** %other.dbg.spill, align 8, !dbg !2293
  call void @llvm.dbg.declare(metadata { i64, i32 }** %other.dbg.spill, metadata !2289, metadata !DIExpression()), !dbg !2290
  %69 = bitcast { i64, i32 }* %fp to i64*, !dbg !2290
  %_74 = load i64, i64* %69, align 8, !dbg !2290
  %70 = bitcast { i64, i32 }* %_50 to i64*, !dbg !2290
  %_75 = load i64, i64* %70, align 8, !dbg !2290
  %_73 = icmp ne i64 %_74, %_75, !dbg !2290
  br i1 %_73, label %bb50, label %bb51, !dbg !2290

bb51:                                             ; preds = %bb32
  %71 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !2290
  %_77 = load i32, i32* %71, align 8, !dbg !2290
  %72 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_50, i32 0, i32 1, !dbg !2290
  %_78 = load i32, i32* %72, align 8, !dbg !2290
  %_76 = icmp ne i32 %_77, %_78, !dbg !2290
  %73 = zext i1 %_76 to i8, !dbg !2290
  store i8 %73, i8* %_47, align 1, !dbg !2290
  br label %bb52, !dbg !2290

bb50:                                             ; preds = %bb32
  store i8 1, i8* %_47, align 1, !dbg !2290
  br label %bb52, !dbg !2290

bb52:                                             ; preds = %bb51, %bb50
  %74 = load i8, i8* %_47, align 1, !dbg !2278, !range !266, !noundef !19
  %75 = trunc i8 %74 to i1, !dbg !2278
  %76 = zext i1 %75 to i8, !dbg !2278
  store i8 %76, i8* %_42, align 1, !dbg !2278
  br label %bb28, !dbg !2278

bb28:                                             ; preds = %bb26, %bb52
  %77 = load i8, i8* %_42, align 1, !dbg !2278, !range !266, !noundef !19
  %78 = trunc i8 %77 to i1, !dbg !2278
  br i1 %78, label %bb33, label %bb34, !dbg !2278

bb34:                                             ; preds = %bb33, %bb28
  %79 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !2294
  %_55 = load i32, i32* %79, align 8, !dbg !2294
  %_54 = icmp slt i32 %_55, 0, !dbg !2294
  br i1 %_54, label %bb35, label %bb37, !dbg !2294

bb33:                                             ; preds = %bb28
  %80 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !2295
  store i32 -1, i32* %80, align 8, !dbg !2295
  br label %bb34, !dbg !2296

bb37:                                             ; preds = %bb36, %bb34
  %81 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 0, !dbg !2297
  %_59.0 = load i64, i64* %81, align 8, !dbg !2297
  %82 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !2297
  %_59.1 = load i32, i32* %82, align 8, !dbg !2297
; call core::num::dec2flt::biased_fp_to_float
  %83 = call double @_ZN4core3num7dec2flt18biased_fp_to_float17hc1c4bf2578871969E(i64 %_59.0, i32 %_59.1), !dbg !2298
  store double %83, double* %float, align 8, !dbg !2298
  br label %bb38, !dbg !2298

bb35:                                             ; preds = %bb34
  %84 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !2299
  %_57.0 = load [0 x i8]*, [0 x i8]** %84, align 8, !dbg !2299, !nonnull !19, !align !627, !noundef !19
  %85 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !2299
  %_57.1 = load i64, i64* %85, align 8, !dbg !2299
; call core::num::dec2flt::slow::parse_long_mantissa
  %86 = call { i64, i32 } @_ZN4core3num7dec2flt4slow19parse_long_mantissa17hf4d7f84352164288E([0 x i8]* align 1 %_57.0, i64 %_57.1), !dbg !2300
  %_56.0 = extractvalue { i64, i32 } %86, 0, !dbg !2300
  %_56.1 = extractvalue { i64, i32 } %86, 1, !dbg !2300
  br label %bb36, !dbg !2300

bb36:                                             ; preds = %bb35
  %87 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 0, !dbg !2301
  store i64 %_56.0, i64* %87, align 8, !dbg !2301
  %88 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !2301
  store i32 %_56.1, i32* %88, align 8, !dbg !2301
  br label %bb37, !dbg !2302

bb38:                                             ; preds = %bb37
  %89 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %num, i32 0, i32 2, !dbg !2303
  %90 = load i8, i8* %89, align 8, !dbg !2303, !range !266, !noundef !19
  %_60 = trunc i8 %90 to i1, !dbg !2303
  br i1 %_60, label %bb39, label %bb41, !dbg !2303

bb41:                                             ; preds = %bb40, %bb38
  %_63 = load double, double* %float, align 8, !dbg !2304
  %91 = bitcast %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* %0 to %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Ok"*, !dbg !2305
  %92 = getelementptr inbounds %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Ok", %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Ok"* %91, i32 0, i32 1, !dbg !2305
  store double %_63, double* %92, align 8, !dbg !2305
  %93 = bitcast %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* %0 to i8*, !dbg !2305
  store i8 0, i8* %93, align 8, !dbg !2305
  br label %bb46, !dbg !2247

bb39:                                             ; preds = %bb38
  %_62 = load double, double* %float, align 8, !dbg !2306
; call <f64 as core::ops::arith::Neg>::neg
  %_61 = call double @"_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Neg$GT$3neg17h2916e189c8f22844E"(double %_62), !dbg !2307
  br label %bb40, !dbg !2307

bb40:                                             ; preds = %bb39
  store double %_61, double* %float, align 8, !dbg !2308
  br label %bb41, !dbg !2309

bb46:                                             ; preds = %bb45, %bb41
  ret void, !dbg !2247

bb43:                                             ; preds = %bb42, %bb23
  br label %bb44, !dbg !2310

bb19:                                             ; preds = %bb18
  %94 = bitcast { i64, double }* %_27 to i64*, !dbg !2312
  %_30 = load i64, i64* %94, align 8, !dbg !2312, !range !1107, !noundef !19
  %95 = icmp eq i64 %_30, 1, !dbg !2312
  br i1 %95, label %bb20, label %bb15, !dbg !2312

bb20:                                             ; preds = %bb19
  %96 = getelementptr inbounds { i64, double }, { i64, double }* %_27, i32 0, i32 1, !dbg !2313
  %value7 = load double, double* %96, align 8, !dbg !2313
  store double %value7, double* %value.dbg.spill8, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata double* %value.dbg.spill8, metadata !2189, metadata !DIExpression()), !dbg !2314
  %97 = bitcast %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* %0 to %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Ok"*, !dbg !2315
  %98 = getelementptr inbounds %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Ok", %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Ok"* %97, i32 0, i32 1, !dbg !2315
  store double %value7, double* %98, align 8, !dbg !2315
  %99 = bitcast %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* %0 to i8*, !dbg !2315
  store i8 0, i8* %99, align 8, !dbg !2315
  br label %bb42, !dbg !2310

bb15:                                             ; preds = %bb19
; call core::num::dec2flt::pfe_invalid
  %_33 = call zeroext i1 @_ZN4core3num7dec2flt11pfe_invalid17h510707166d87dc9bE(), !dbg !2316
  br label %bb21, !dbg !2316

bb21:                                             ; preds = %bb15
  %100 = bitcast %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* %0 to %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Err"*, !dbg !2317
  %101 = getelementptr inbounds %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Err", %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Err"* %100, i32 0, i32 1, !dbg !2317
  %102 = zext i1 %_33 to i8, !dbg !2317
  store i8 %102, i8* %101, align 1, !dbg !2317
  %103 = bitcast %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* %0 to i8*, !dbg !2317
  store i8 1, i8* %103, align 8, !dbg !2317
  br label %bb42, !dbg !2318

bb42:                                             ; preds = %bb20, %bb21
  br label %bb43, !dbg !2310

bb44:                                             ; preds = %bb12, %bb43
  br label %bb45, !dbg !2319

bb12:                                             ; preds = %bb11
  %104 = bitcast %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* %0 to %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Err"*, !dbg !2321
  %105 = getelementptr inbounds %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Err", %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Err"* %104, i32 0, i32 1, !dbg !2321
  %106 = zext i1 %_20 to i8, !dbg !2321
  store i8 %106, i8* %105, align 1, !dbg !2321
  %107 = bitcast %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* %0 to i8*, !dbg !2321
  store i8 1, i8* %107, align 8, !dbg !2321
  br label %bb44, !dbg !2310
}

; core::num::dec2flt::dec2flt
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4core3num7dec2flt7dec2flt17hc410fe3c5ce74da5E([0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !2322 {
start:
  %value.dbg.spill8 = alloca float, align 4
  %value.dbg.spill = alloca float, align 4
  %other.dbg.spill = alloca { i64, i32 }*, align 8
  %self.dbg.spill6 = alloca { i64, i32 }*, align 8
  %self.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %negative.dbg.spill = alloca i8, align 1
  %c.dbg.spill2 = alloca i8, align 1
  %c.dbg.spill = alloca i8, align 1
  %first.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %float = alloca float, align 4
  %_50 = alloca { i64, i32 }, align 8
  %_47 = alloca i8, align 1
  %_43 = alloca i8, align 1
  %_42 = alloca i8, align 1
  %fp = alloca { i64, i32 }, align 8
  %_34 = alloca { i32, float }, align 4
  %_27 = alloca { i32, float }, align 4
  %r = alloca %"core::num::dec2flt::number::Number", align 8
  %_22 = alloca %"core::option::Option<core::num::dec2flt::number::Number>", align 8
  %num = alloca %"core::num::dec2flt::number::Number", align 8
  %_12 = alloca i8, align 1
  %_5 = alloca i8*, align 8
  %s = alloca { [0 x i8]*, i64 }, align 8
  %0 = alloca %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>", align 4
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !2324, metadata !DIExpression()), !dbg !2345
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s, metadata !2325, metadata !DIExpression()), !dbg !2346
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::number::Number"* %num, metadata !2333, metadata !DIExpression()), !dbg !2347
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::number::Number"* %r, metadata !2335, metadata !DIExpression()), !dbg !2348
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp, metadata !2341, metadata !DIExpression()), !dbg !2349
  call void @llvm.dbg.declare(metadata float* %float, metadata !2343, metadata !DIExpression()), !dbg !2350
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !2351
  store [0 x i8]* %s.0, [0 x i8]** %3, align 8, !dbg !2351
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !2351
  store i64 %s.1, i64* %4, align 8, !dbg !2351
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2352, metadata !DIExpression()), !dbg !2356
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !2356
  store [0 x i8]* %s.0, [0 x i8]** %5, align 8, !dbg !2356
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !2356
  store i64 %s.1, i64* %6, align 8, !dbg !2356
  br label %bb47, !dbg !2356

bb47:                                             ; preds = %start
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !2357
  %self.0 = load [0 x i8]*, [0 x i8]** %7, align 8, !dbg !2357, !nonnull !19, !align !627, !noundef !19
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !2357
  %self.1 = load i64, i64* %8, align 8, !dbg !2357
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !2357
  store [0 x i8]* %self.0, [0 x i8]** %9, align 8, !dbg !2357
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !2357
  store i64 %self.1, i64* %10, align 8, !dbg !2357
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !2358, metadata !DIExpression()), !dbg !2365
  %_68 = icmp uge i64 %self.1, 1, !dbg !2366
  br i1 %_68, label %bb48, label %bb49, !dbg !2366

bb49:                                             ; preds = %bb47
  %11 = bitcast i8** %_5 to {}**, !dbg !2365
  store {}* null, {}** %11, align 8, !dbg !2365
  br label %bb1, !dbg !2365

bb48:                                             ; preds = %bb47
  %first = getelementptr inbounds [0 x i8], [0 x i8]* %self.0, i64 0, i64 0, !dbg !2366
  store i8* %first, i8** %first.dbg.spill, align 8, !dbg !2366
  call void @llvm.dbg.declare(metadata i8** %first.dbg.spill, metadata !2362, metadata !DIExpression()), !dbg !2366
  store i8* %first, i8** %_5, align 8, !dbg !2366
  br label %bb1, !dbg !2365

bb1:                                              ; preds = %bb49, %bb48
  %12 = bitcast i8** %_5 to {}**, !dbg !2367
  %13 = load {}*, {}** %12, align 8, !dbg !2367
  %14 = icmp eq {}* %13, null, !dbg !2367
  %_7 = select i1 %14, i64 0, i64 1, !dbg !2367
  %15 = icmp eq i64 %_7, 1, !dbg !2367
  br i1 %15, label %bb2, label %bb3, !dbg !2367

bb2:                                              ; preds = %bb1
  %_64 = load i8*, i8** %_5, align 8, !dbg !2368, !nonnull !19, !align !627, !noundef !19
  %c = load i8, i8* %_64, align 1, !dbg !2368
  store i8 %c, i8* %c.dbg.spill, align 1, !dbg !2368
  call void @llvm.dbg.declare(metadata i8* %c.dbg.spill, metadata !2329, metadata !DIExpression()), !dbg !2368
  store i8 %c, i8* %c.dbg.spill2, align 1, !dbg !2369
  call void @llvm.dbg.declare(metadata i8* %c.dbg.spill2, metadata !2327, metadata !DIExpression()), !dbg !2370
  %negative = icmp eq i8 %c, 45, !dbg !2371
  %16 = zext i1 %negative to i8, !dbg !2371
  store i8 %16, i8* %negative.dbg.spill, align 1, !dbg !2371
  call void @llvm.dbg.declare(metadata i8* %negative.dbg.spill, metadata !2331, metadata !DIExpression()), !dbg !2372
  %17 = icmp eq i8 %c, 45, !dbg !2373
  br i1 %17, label %bb5, label %bb6, !dbg !2373

bb3:                                              ; preds = %bb1
; call core::num::dec2flt::pfe_empty
  %_9 = call zeroext i1 @_ZN4core3num7dec2flt9pfe_empty17h6df4326effb09ff2E(), !dbg !2374
  br label %bb4, !dbg !2374

bb4:                                              ; preds = %bb3
  %18 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %0 to %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Err"*, !dbg !2375
  %19 = getelementptr inbounds %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Err", %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Err"* %18, i32 0, i32 1, !dbg !2375
  %20 = zext i1 %_9 to i8, !dbg !2375
  store i8 %20, i8* %19, align 1, !dbg !2375
  %21 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %0 to i8*, !dbg !2375
  store i8 1, i8* %21, align 4, !dbg !2375
  br label %bb45, !dbg !2376

bb45:                                             ; preds = %bb44, %bb4
  br label %bb46, !dbg !2378

bb5:                                              ; preds = %bb2
  store i8 1, i8* %_12, align 1, !dbg !2373
  br label %bb7, !dbg !2373

bb6:                                              ; preds = %bb2
  %_14 = icmp eq i8 %c, 43, !dbg !2379
  %22 = zext i1 %_14 to i8, !dbg !2373
  store i8 %22, i8* %_12, align 1, !dbg !2373
  br label %bb7, !dbg !2373

bb7:                                              ; preds = %bb5, %bb6
  %23 = load i8, i8* %_12, align 1, !dbg !2373, !range !266, !noundef !19
  %24 = trunc i8 %23 to i1, !dbg !2373
  br i1 %24, label %bb8, label %bb10, !dbg !2373

bb10:                                             ; preds = %bb9, %bb7
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !2380
  %self.03 = load [0 x i8]*, [0 x i8]** %25, align 8, !dbg !2380, !nonnull !19, !align !627, !noundef !19
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !2380
  %self.14 = load i64, i64* %26, align 8, !dbg !2380
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !2380
  store [0 x i8]* %self.03, [0 x i8]** %27, align 8, !dbg !2380
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !2380
  store i64 %self.14, i64* %28, align 8, !dbg !2380
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill5, metadata !2381, metadata !DIExpression()), !dbg !2385
  %29 = icmp eq i64 %self.14, 0, !dbg !2380
  br i1 %29, label %bb11, label %bb13, !dbg !2380

bb8:                                              ; preds = %bb7
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !2386
  %_18.0 = load [0 x i8]*, [0 x i8]** %30, align 8, !dbg !2386, !nonnull !19, !align !627, !noundef !19
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !2386
  %_18.1 = load i64, i64* %31, align 8, !dbg !2386
; call core::num::dec2flt::common::ByteSlice::advance
  %32 = call { [0 x i8]*, i64 } @_ZN4core3num7dec2flt6common9ByteSlice7advance17h22a15b2890fa2986E([0 x i8]* align 1 %_18.0, i64 %_18.1, i64 1), !dbg !2386
  %_17.0 = extractvalue { [0 x i8]*, i64 } %32, 0, !dbg !2386
  %_17.1 = extractvalue { [0 x i8]*, i64 } %32, 1, !dbg !2386
  br label %bb9, !dbg !2386

bb9:                                              ; preds = %bb8
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !2387
  store [0 x i8]* %_17.0, [0 x i8]** %33, align 8, !dbg !2387
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !2387
  store i64 %_17.1, i64* %34, align 8, !dbg !2387
  br label %bb10, !dbg !2388

bb11:                                             ; preds = %bb10
; call core::num::dec2flt::pfe_invalid
  %_20 = call zeroext i1 @_ZN4core3num7dec2flt11pfe_invalid17h510707166d87dc9bE(), !dbg !2389
  br label %bb12, !dbg !2389

bb13:                                             ; preds = %bb10
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !2390
  %_23.0 = load [0 x i8]*, [0 x i8]** %35, align 8, !dbg !2390, !nonnull !19, !align !627, !noundef !19
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !2390
  %_23.1 = load i64, i64* %36, align 8, !dbg !2390
; call core::num::dec2flt::parse::parse_number
  call void @_ZN4core3num7dec2flt5parse12parse_number17h1c105239f159143dE(%"core::option::Option<core::num::dec2flt::number::Number>"* sret(%"core::option::Option<core::num::dec2flt::number::Number>") %_22, [0 x i8]* align 1 %_23.0, i64 %_23.1, i1 zeroext %negative), !dbg !2391
  br label %bb14, !dbg !2391

bb14:                                             ; preds = %bb13
  %37 = getelementptr inbounds %"core::option::Option<core::num::dec2flt::number::Number>", %"core::option::Option<core::num::dec2flt::number::Number>"* %_22, i32 0, i32 1, !dbg !2391
  %38 = load i8, i8* %37, align 8, !dbg !2391, !range !2263, !noundef !19
  %39 = sub i8 %38, 2, !dbg !2391
  %40 = icmp eq i8 %39, 0, !dbg !2391
  %_25 = select i1 %40, i64 0, i64 1, !dbg !2391
  switch i64 %_25, label %bb16 [
    i64 0, label %bb18
    i64 1, label %bb17
  ], !dbg !2392

bb16:                                             ; preds = %bb14
  unreachable, !dbg !2391

bb18:                                             ; preds = %bb14
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !2393
  %_28.0 = load [0 x i8]*, [0 x i8]** %41, align 8, !dbg !2393, !nonnull !19, !align !627, !noundef !19
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !2393
  %_28.1 = load i64, i64* %42, align 8, !dbg !2393
; call core::num::dec2flt::parse::parse_inf_nan
  %43 = call { i32, float } @_ZN4core3num7dec2flt5parse13parse_inf_nan17he9556e7df42fb6afE([0 x i8]* align 1 %_28.0, i64 %_28.1, i1 zeroext %negative), !dbg !2394
  store { i32, float } %43, { i32, float }* %_27, align 4, !dbg !2394
  br label %bb19, !dbg !2394

bb17:                                             ; preds = %bb14
  %44 = bitcast %"core::option::Option<core::num::dec2flt::number::Number>"* %_22 to %"core::option::Option<core::num::dec2flt::number::Number>::Some"*, !dbg !2395
  %45 = bitcast %"core::option::Option<core::num::dec2flt::number::Number>::Some"* %44 to %"core::num::dec2flt::number::Number"*, !dbg !2395
  %46 = bitcast %"core::num::dec2flt::number::Number"* %r to i8*, !dbg !2395
  %47 = bitcast %"core::num::dec2flt::number::Number"* %45 to i8*, !dbg !2395
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false), !dbg !2395
  %48 = bitcast %"core::num::dec2flt::number::Number"* %num to i8*, !dbg !2396
  %49 = bitcast %"core::num::dec2flt::number::Number"* %r to i8*, !dbg !2396
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false), !dbg !2396
; call core::num::dec2flt::number::Number::try_fast_path
  %50 = call { i32, float } @_ZN4core3num7dec2flt6number6Number13try_fast_path17hcb70d053bec2fd2bE(%"core::num::dec2flt::number::Number"* align 8 %num), !dbg !2397
  store { i32, float } %50, { i32, float }* %_34, align 4, !dbg !2397
  br label %bb22, !dbg !2397

bb22:                                             ; preds = %bb17
  %51 = bitcast { i32, float }* %_34 to i32*, !dbg !2398
  %52 = load i32, i32* %51, align 4, !dbg !2398, !range !1519, !noundef !19
  %_36 = zext i32 %52 to i64, !dbg !2398
  %53 = icmp eq i64 %_36, 1, !dbg !2398
  br i1 %53, label %bb23, label %bb24, !dbg !2398

bb23:                                             ; preds = %bb22
  %54 = getelementptr inbounds { i32, float }, { i32, float }* %_34, i32 0, i32 1, !dbg !2399
  %value = load float, float* %54, align 4, !dbg !2399
  store float %value, float* %value.dbg.spill, align 4, !dbg !2399
  call void @llvm.dbg.declare(metadata float* %value.dbg.spill, metadata !2339, metadata !DIExpression()), !dbg !2399
  %55 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %0 to %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Ok"*, !dbg !2400
  %56 = getelementptr inbounds %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Ok", %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Ok"* %55, i32 0, i32 1, !dbg !2400
  store float %value, float* %56, align 4, !dbg !2400
  %57 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %0 to i8*, !dbg !2400
  store i8 0, i8* %57, align 4, !dbg !2400
  br label %bb43, !dbg !2401

bb24:                                             ; preds = %bb22
  %58 = bitcast %"core::num::dec2flt::number::Number"* %num to i64*, !dbg !2403
  %_40 = load i64, i64* %58, align 8, !dbg !2403
  %59 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %num, i32 0, i32 1, !dbg !2404
  %_41 = load i64, i64* %59, align 8, !dbg !2404
; call core::num::dec2flt::lemire::compute_float
  %60 = call { i64, i32 } @_ZN4core3num7dec2flt6lemire13compute_float17h7c09984d6cd4e0c3E(i64 %_40, i64 %_41), !dbg !2405
  store { i64, i32 } %60, { i64, i32 }* %fp, align 8, !dbg !2405
  br label %bb25, !dbg !2405

bb25:                                             ; preds = %bb24
  %61 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %num, i32 0, i32 3, !dbg !2406
  %62 = load i8, i8* %61, align 1, !dbg !2406, !range !266, !noundef !19
  %_44 = trunc i8 %62 to i1, !dbg !2406
  br i1 %_44, label %bb30, label %bb29, !dbg !2406

bb29:                                             ; preds = %bb25
  store i8 0, i8* %_43, align 1, !dbg !2406
  br label %bb31, !dbg !2406

bb30:                                             ; preds = %bb25
  %63 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !2407
  %_46 = load i32, i32* %63, align 8, !dbg !2407
  %_45 = icmp sge i32 %_46, 0, !dbg !2407
  %64 = zext i1 %_45 to i8, !dbg !2406
  store i8 %64, i8* %_43, align 1, !dbg !2406
  br label %bb31, !dbg !2406

bb31:                                             ; preds = %bb29, %bb30
  %65 = load i8, i8* %_43, align 1, !dbg !2406, !range !266, !noundef !19
  %66 = trunc i8 %65 to i1, !dbg !2406
  br i1 %66, label %bb27, label %bb26, !dbg !2406

bb26:                                             ; preds = %bb31
  store i8 0, i8* %_42, align 1, !dbg !2406
  br label %bb28, !dbg !2406

bb27:                                             ; preds = %bb31
  store { i64, i32 }* %fp, { i64, i32 }** %self.dbg.spill6, align 8, !dbg !2408
  call void @llvm.dbg.declare(metadata { i64, i32 }** %self.dbg.spill6, metadata !2409, metadata !DIExpression()), !dbg !2414
  %67 = bitcast %"core::num::dec2flt::number::Number"* %num to i64*, !dbg !2415
  %_51 = load i64, i64* %67, align 8, !dbg !2415
  %68 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %num, i32 0, i32 1, !dbg !2416
  %_53 = load i64, i64* %68, align 8, !dbg !2416
  %_52 = add i64 %_53, 1, !dbg !2416
; call core::num::dec2flt::lemire::compute_float
  %69 = call { i64, i32 } @_ZN4core3num7dec2flt6lemire13compute_float17h7c09984d6cd4e0c3E(i64 %_51, i64 %_52), !dbg !2417
  store { i64, i32 } %69, { i64, i32 }* %_50, align 8, !dbg !2417
  br label %bb32, !dbg !2417

bb32:                                             ; preds = %bb27
  store { i64, i32 }* %_50, { i64, i32 }** %other.dbg.spill, align 8, !dbg !2417
  call void @llvm.dbg.declare(metadata { i64, i32 }** %other.dbg.spill, metadata !2413, metadata !DIExpression()), !dbg !2414
  %70 = bitcast { i64, i32 }* %fp to i64*, !dbg !2414
  %_74 = load i64, i64* %70, align 8, !dbg !2414
  %71 = bitcast { i64, i32 }* %_50 to i64*, !dbg !2414
  %_75 = load i64, i64* %71, align 8, !dbg !2414
  %_73 = icmp ne i64 %_74, %_75, !dbg !2414
  br i1 %_73, label %bb50, label %bb51, !dbg !2414

bb51:                                             ; preds = %bb32
  %72 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !2414
  %_77 = load i32, i32* %72, align 8, !dbg !2414
  %73 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_50, i32 0, i32 1, !dbg !2414
  %_78 = load i32, i32* %73, align 8, !dbg !2414
  %_76 = icmp ne i32 %_77, %_78, !dbg !2414
  %74 = zext i1 %_76 to i8, !dbg !2414
  store i8 %74, i8* %_47, align 1, !dbg !2414
  br label %bb52, !dbg !2414

bb50:                                             ; preds = %bb32
  store i8 1, i8* %_47, align 1, !dbg !2414
  br label %bb52, !dbg !2414

bb52:                                             ; preds = %bb51, %bb50
  %75 = load i8, i8* %_47, align 1, !dbg !2406, !range !266, !noundef !19
  %76 = trunc i8 %75 to i1, !dbg !2406
  %77 = zext i1 %76 to i8, !dbg !2406
  store i8 %77, i8* %_42, align 1, !dbg !2406
  br label %bb28, !dbg !2406

bb28:                                             ; preds = %bb26, %bb52
  %78 = load i8, i8* %_42, align 1, !dbg !2406, !range !266, !noundef !19
  %79 = trunc i8 %78 to i1, !dbg !2406
  br i1 %79, label %bb33, label %bb34, !dbg !2406

bb34:                                             ; preds = %bb33, %bb28
  %80 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !2418
  %_55 = load i32, i32* %80, align 8, !dbg !2418
  %_54 = icmp slt i32 %_55, 0, !dbg !2418
  br i1 %_54, label %bb35, label %bb37, !dbg !2418

bb33:                                             ; preds = %bb28
  %81 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !2419
  store i32 -1, i32* %81, align 8, !dbg !2419
  br label %bb34, !dbg !2420

bb37:                                             ; preds = %bb36, %bb34
  %82 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 0, !dbg !2421
  %_59.0 = load i64, i64* %82, align 8, !dbg !2421
  %83 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !2421
  %_59.1 = load i32, i32* %83, align 8, !dbg !2421
; call core::num::dec2flt::biased_fp_to_float
  %84 = call float @_ZN4core3num7dec2flt18biased_fp_to_float17h8e8c78e060cb1e4eE(i64 %_59.0, i32 %_59.1), !dbg !2422
  store float %84, float* %float, align 4, !dbg !2422
  br label %bb38, !dbg !2422

bb35:                                             ; preds = %bb34
  %85 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !2423
  %_57.0 = load [0 x i8]*, [0 x i8]** %85, align 8, !dbg !2423, !nonnull !19, !align !627, !noundef !19
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !2423
  %_57.1 = load i64, i64* %86, align 8, !dbg !2423
; call core::num::dec2flt::slow::parse_long_mantissa
  %87 = call { i64, i32 } @_ZN4core3num7dec2flt4slow19parse_long_mantissa17hda08111204ded613E([0 x i8]* align 1 %_57.0, i64 %_57.1), !dbg !2424
  %_56.0 = extractvalue { i64, i32 } %87, 0, !dbg !2424
  %_56.1 = extractvalue { i64, i32 } %87, 1, !dbg !2424
  br label %bb36, !dbg !2424

bb36:                                             ; preds = %bb35
  %88 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 0, !dbg !2425
  store i64 %_56.0, i64* %88, align 8, !dbg !2425
  %89 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !2425
  store i32 %_56.1, i32* %89, align 8, !dbg !2425
  br label %bb37, !dbg !2426

bb38:                                             ; preds = %bb37
  %90 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %num, i32 0, i32 2, !dbg !2427
  %91 = load i8, i8* %90, align 8, !dbg !2427, !range !266, !noundef !19
  %_60 = trunc i8 %91 to i1, !dbg !2427
  br i1 %_60, label %bb39, label %bb41, !dbg !2427

bb41:                                             ; preds = %bb40, %bb38
  %_63 = load float, float* %float, align 4, !dbg !2428
  %92 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %0 to %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Ok"*, !dbg !2429
  %93 = getelementptr inbounds %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Ok", %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Ok"* %92, i32 0, i32 1, !dbg !2429
  store float %_63, float* %93, align 4, !dbg !2429
  %94 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %0 to i8*, !dbg !2429
  store i8 0, i8* %94, align 4, !dbg !2429
  br label %bb46, !dbg !2378

bb39:                                             ; preds = %bb38
  %_62 = load float, float* %float, align 4, !dbg !2430
; call <f32 as core::ops::arith::Neg>::neg
  %_61 = call float @"_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Neg$GT$3neg17hf2d7af8905ae0e44E"(float %_62), !dbg !2431
  br label %bb40, !dbg !2431

bb40:                                             ; preds = %bb39
  store float %_61, float* %float, align 4, !dbg !2432
  br label %bb41, !dbg !2433

bb46:                                             ; preds = %bb45, %bb41
  %95 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %0 to i64*, !dbg !2378
  %96 = load i64, i64* %95, align 4, !dbg !2378
  ret i64 %96, !dbg !2378

bb43:                                             ; preds = %bb42, %bb23
  br label %bb44, !dbg !2434

bb19:                                             ; preds = %bb18
  %97 = bitcast { i32, float }* %_27 to i32*, !dbg !2436
  %98 = load i32, i32* %97, align 4, !dbg !2436, !range !1519, !noundef !19
  %_30 = zext i32 %98 to i64, !dbg !2436
  %99 = icmp eq i64 %_30, 1, !dbg !2436
  br i1 %99, label %bb20, label %bb15, !dbg !2436

bb20:                                             ; preds = %bb19
  %100 = getelementptr inbounds { i32, float }, { i32, float }* %_27, i32 0, i32 1, !dbg !2437
  %value7 = load float, float* %100, align 4, !dbg !2437
  store float %value7, float* %value.dbg.spill8, align 4, !dbg !2437
  call void @llvm.dbg.declare(metadata float* %value.dbg.spill8, metadata !2337, metadata !DIExpression()), !dbg !2438
  %101 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %0 to %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Ok"*, !dbg !2439
  %102 = getelementptr inbounds %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Ok", %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Ok"* %101, i32 0, i32 1, !dbg !2439
  store float %value7, float* %102, align 4, !dbg !2439
  %103 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %0 to i8*, !dbg !2439
  store i8 0, i8* %103, align 4, !dbg !2439
  br label %bb42, !dbg !2434

bb15:                                             ; preds = %bb19
; call core::num::dec2flt::pfe_invalid
  %_33 = call zeroext i1 @_ZN4core3num7dec2flt11pfe_invalid17h510707166d87dc9bE(), !dbg !2440
  br label %bb21, !dbg !2440

bb21:                                             ; preds = %bb15
  %104 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %0 to %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Err"*, !dbg !2441
  %105 = getelementptr inbounds %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Err", %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Err"* %104, i32 0, i32 1, !dbg !2441
  %106 = zext i1 %_33 to i8, !dbg !2441
  store i8 %106, i8* %105, align 1, !dbg !2441
  %107 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %0 to i8*, !dbg !2441
  store i8 1, i8* %107, align 4, !dbg !2441
  br label %bb42, !dbg !2442

bb42:                                             ; preds = %bb20, %bb21
  br label %bb43, !dbg !2434

bb44:                                             ; preds = %bb12, %bb43
  br label %bb45, !dbg !2443

bb12:                                             ; preds = %bb11
  %108 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %0 to %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Err"*, !dbg !2445
  %109 = getelementptr inbounds %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Err", %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Err"* %108, i32 0, i32 1, !dbg !2445
  %110 = zext i1 %_20 to i8, !dbg !2445
  store i8 %110, i8* %109, align 1, !dbg !2445
  %111 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %0 to i8*, !dbg !2445
  store i8 1, i8* %111, align 4, !dbg !2445
  br label %bb44, !dbg !2434
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3ops8function6FnOnce9call_once17h0ed0ba15af3d259dE(double %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2446 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_2 = alloca double, align 8
  %_1 = alloca %"[closure@core::f64::<impl f64>::to_bits::{closure#0}]", align 1
  store double %0, double* %_2, align 8
  call void @llvm.dbg.declare(metadata %"[closure@core::f64::<impl f64>::to_bits::{closure#0}]"* %_1, metadata !2453, metadata !DIExpression()), !dbg !2458
  call void @llvm.dbg.declare(metadata double* %_2, metadata !2454, metadata !DIExpression()), !dbg !2458
  %2 = load double, double* %_2, align 8, !dbg !2458
; invoke core::f64::<impl f64>::to_bits::{{closure}}
  %3 = invoke i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits28_$u7b$$u7b$closure$u7d$$u7d$17hce21388d0321e24aE"(%"[closure@core::f64::<impl f64>::to_bits::{closure#0}]"* align 1 %_1, double %2)
          to label %bb1 unwind label %cleanup, !dbg !2458

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !2458

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !2458

bb4:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %1 to i8**, !dbg !2458
  %10 = load i8*, i8** %9, align 8, !dbg !2458
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !2458
  %12 = load i32, i32* %11, align 8, !dbg !2458
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !2458
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !2458
  resume { i8*, i32 } %14, !dbg !2458

bb2:                                              ; preds = %bb1
  ret i64 %3, !dbg !2458
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3ops8function6FnOnce9call_once17h212bd856a0daefdeE(float %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2459 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_2 = alloca float, align 4
  %_1 = alloca %"[closure@core::f32::<impl f32>::to_bits::{closure#0}]", align 1
  store float %0, float* %_2, align 4
  call void @llvm.dbg.declare(metadata %"[closure@core::f32::<impl f32>::to_bits::{closure#0}]"* %_1, metadata !2463, metadata !DIExpression()), !dbg !2468
  call void @llvm.dbg.declare(metadata float* %_2, metadata !2464, metadata !DIExpression()), !dbg !2468
  %2 = load float, float* %_2, align 4, !dbg !2468
; invoke core::f32::<impl f32>::to_bits::{{closure}}
  %3 = invoke i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits28_$u7b$$u7b$closure$u7d$$u7d$17h12ec8e0264003088E"(%"[closure@core::f32::<impl f32>::to_bits::{closure#0}]"* align 1 %_1, float %2)
          to label %bb1 unwind label %cleanup, !dbg !2468

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !2468

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !2468

bb4:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %1 to i8**, !dbg !2468
  %10 = load i8*, i8** %9, align 8, !dbg !2468
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !2468
  %12 = load i32, i32* %11, align 8, !dbg !2468
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !2468
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !2468
  resume { i8*, i32 } %14, !dbg !2468

bb2:                                              ; preds = %bb1
  ret i32 %3, !dbg !2468
}

; core::ptr::drop_in_place<&num_traits::FloatErrorKind>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr51drop_in_place$LT$$RF$num_traits..FloatErrorKind$GT$17h6269996c26482c3bE"(i8** %_1) unnamed_addr #0 !dbg !2469 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !2474, metadata !DIExpression()), !dbg !2477
  ret void, !dbg !2477
}

; core::str::validations::next_code_point
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @_ZN4core3str11validations15next_code_point17h63a4f6bed0089488E({ i8*, i8* }* align 8 %bytes) unnamed_addr #0 !dbg !2478 {
start:
  %byte.dbg.spill16 = alloca i8, align 1
  %ch.dbg.spill15 = alloca i32, align 4
  %w.dbg.spill = alloca i8, align 1
  %val.dbg.spill14 = alloca i8*, align 8
  %y_z.dbg.spill = alloca i32, align 4
  %byte.dbg.spill12 = alloca i8, align 1
  %ch.dbg.spill11 = alloca i32, align 4
  %z.dbg.spill = alloca i8, align 1
  %val.dbg.spill9 = alloca i8*, align 8
  %byte.dbg.spill7 = alloca i8, align 1
  %ch.dbg.spill = alloca i32, align 4
  %y.dbg.spill = alloca i8, align 1
  %val.dbg.spill6 = alloca i8*, align 8
  %init.dbg.spill = alloca i32, align 4
  %byte.dbg.spill = alloca i8, align 1
  %x.dbg.spill = alloca i8, align 1
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %residual.dbg.spill1 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %bytes.dbg.spill = alloca { i8*, i8* }*, align 8
  %self4 = alloca i8*, align 8
  %self3 = alloca i8*, align 8
  %ch = alloca i32, align 4
  %self2 = alloca i8*, align 8
  %self = alloca i8*, align 8
  %_4 = alloca i8*, align 8
  %0 = alloca { i32, i32 }, align 4
  store { i8*, i8* }* %bytes, { i8*, i8* }** %bytes.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %bytes.dbg.spill, metadata !2497, metadata !DIExpression()), !dbg !2516
  call void @llvm.dbg.declare(metadata i8** %self, metadata !2517, metadata !DIExpression()), !dbg !2541
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !2500, metadata !DIExpression()), !dbg !2543
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill1, metadata !2544, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.declare(metadata i8** %self2, metadata !2552, metadata !DIExpression()), !dbg !2561
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !2508, metadata !DIExpression()), !dbg !2563
  call void @llvm.dbg.declare(metadata i8** %self3, metadata !2564, metadata !DIExpression()), !dbg !2571
  call void @llvm.dbg.declare(metadata i8** %self4, metadata !2573, metadata !DIExpression()), !dbg !2580
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %1 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h49c6b49183a26f7dE"({ i8*, i8* }* align 8 %bytes), !dbg !2542
  store i8* %1, i8** %self, align 8, !dbg !2542
  br label %bb1, !dbg !2542

bb1:                                              ; preds = %start
  %2 = bitcast i8** %self to {}**, !dbg !2541
  %3 = load {}*, {}** %2, align 8, !dbg !2541
  %4 = icmp eq {}* %3, null, !dbg !2541
  %_51 = select i1 %4, i64 0, i64 1, !dbg !2541
  switch i64 %_51, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ], !dbg !2541

bb18:                                             ; preds = %bb1
  unreachable, !dbg !2541

bb17:                                             ; preds = %bb1
  %5 = bitcast i8** %_4 to {}**, !dbg !2541
  store {}* null, {}** %5, align 8, !dbg !2541
  br label %bb2, !dbg !2541

bb19:                                             ; preds = %bb1
  %v = load i8*, i8** %self, align 8, !dbg !2541, !nonnull !19, !align !627, !noundef !19
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !2541
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !2538, metadata !DIExpression()), !dbg !2582
  store i8* %v, i8** %_4, align 8, !dbg !2582
  br label %bb2, !dbg !2541

bb2:                                              ; preds = %bb17, %bb19
  %6 = bitcast i8** %_4 to {}**, !dbg !2542
  %7 = load {}*, {}** %6, align 8, !dbg !2542
  %8 = icmp eq {}* %7, null, !dbg !2542
  %_7 = select i1 %8, i64 1, i64 0, !dbg !2542
  switch i64 %_7, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !2542

bb4:                                              ; preds = %bb2
  unreachable, !dbg !2542

bb3:                                              ; preds = %bb2
  %val = load i8*, i8** %_4, align 8, !dbg !2542, !nonnull !19, !align !627, !noundef !19
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !2542
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !2502, metadata !DIExpression()), !dbg !2583
  %x = load i8, i8* %val, align 1, !dbg !2584
  store i8 %x, i8* %x.dbg.spill, align 1, !dbg !2584
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !2498, metadata !DIExpression()), !dbg !2585
  %_11 = icmp ult i8 %x, -128, !dbg !2586
  br i1 %_11, label %bb6, label %bb7, !dbg !2586

bb5:                                              ; preds = %bb2
  %9 = bitcast { i32, i32 }* %0 to i32*, !dbg !2550
  store i32 0, i32* %9, align 4, !dbg !2550
  br label %bb15, !dbg !2587

bb15:                                             ; preds = %bb6, %bb5
  br label %bb16, !dbg !2589

bb7:                                              ; preds = %bb3
  store i8 %x, i8* %byte.dbg.spill, align 1, !dbg !2590
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill, metadata !2591, metadata !DIExpression()), !dbg !2597
  %_55 = and i8 %x, 31, !dbg !2597
  %init = zext i8 %_55 to i32, !dbg !2597
  store i32 %init, i32* %init.dbg.spill, align 4, !dbg !2597
  call void @llvm.dbg.declare(metadata i32* %init.dbg.spill, metadata !2504, metadata !DIExpression()), !dbg !2599
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %10 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h49c6b49183a26f7dE"({ i8*, i8* }* align 8 %bytes), !dbg !2562
  store i8* %10, i8** %self2, align 8, !dbg !2562
  br label %bb8, !dbg !2562

bb6:                                              ; preds = %bb3
  %_13 = zext i8 %x to i32, !dbg !2600
  %11 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !2601
  store i32 %_13, i32* %11, align 4, !dbg !2601
  %12 = bitcast { i32, i32 }* %0 to i32*, !dbg !2601
  store i32 1, i32* %12, align 4, !dbg !2601
  br label %bb15, !dbg !2602

bb16:                                             ; preds = %bb14, %bb15
  %13 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0, !dbg !2589
  %14 = load i32, i32* %13, align 4, !dbg !2589, !range !1519, !noundef !19
  %15 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !2589
  %16 = load i32, i32* %15, align 4, !dbg !2589
  %17 = insertvalue { i32, i32 } undef, i32 %14, 0, !dbg !2589
  %18 = insertvalue { i32, i32 } %17, i32 %16, 1, !dbg !2589
  ret { i32, i32 } %18, !dbg !2589

bb8:                                              ; preds = %bb7
  %19 = bitcast i8** %self2 to {}**, !dbg !2561
  %20 = load {}*, {}** %19, align 8, !dbg !2561
  %21 = icmp eq {}* %20, null, !dbg !2561
  %_59 = select i1 %21, i64 0, i64 1, !dbg !2561
  switch i64 %_59, label %bb21 [
    i64 0, label %bb20
    i64 1, label %bb22
  ], !dbg !2561

bb21:                                             ; preds = %bb8
  unreachable, !dbg !2561

bb20:                                             ; preds = %bb8
  unreachable, !dbg !2604

bb22:                                             ; preds = %bb8
  %val5 = load i8*, i8** %self2, align 8, !dbg !2561, !nonnull !19, !align !627, !noundef !19
  store i8* %val5, i8** %val.dbg.spill6, align 8, !dbg !2561
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill6, metadata !2558, metadata !DIExpression()), !dbg !2610
  %y = load i8, i8* %val5, align 1, !dbg !2611
  store i8 %y, i8* %y.dbg.spill, align 1, !dbg !2611
  call void @llvm.dbg.declare(metadata i8* %y.dbg.spill, metadata !2506, metadata !DIExpression()), !dbg !2612
  store i32 %init, i32* %ch.dbg.spill, align 4, !dbg !2613
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !2614, metadata !DIExpression()), !dbg !2620
  store i8 %y, i8* %byte.dbg.spill7, align 1, !dbg !2622
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill7, metadata !2619, metadata !DIExpression()), !dbg !2620
  %_60 = shl i32 %init, 6, !dbg !2620
  %_63 = and i8 %y, 63, !dbg !2620
  %_62 = zext i8 %_63 to i32, !dbg !2620
  %22 = or i32 %_60, %_62, !dbg !2620
  store i32 %22, i32* %ch, align 4, !dbg !2620
  %_24 = icmp uge i8 %x, -32, !dbg !2623
  br i1 %_24, label %bb9, label %bb14, !dbg !2623

bb14:                                             ; preds = %bb13, %bb22
  %_50 = load i32, i32* %ch, align 4, !dbg !2624
  %23 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !2625
  store i32 %_50, i32* %23, align 4, !dbg !2625
  %24 = bitcast { i32, i32 }* %0 to i32*, !dbg !2625
  store i32 1, i32* %24, align 4, !dbg !2625
  br label %bb16, !dbg !2589

bb9:                                              ; preds = %bb22
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %25 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h49c6b49183a26f7dE"({ i8*, i8* }* align 8 %bytes), !dbg !2572
  store i8* %25, i8** %self3, align 8, !dbg !2572
  br label %bb10, !dbg !2572

bb10:                                             ; preds = %bb9
  %26 = bitcast i8** %self3 to {}**, !dbg !2571
  %27 = load {}*, {}** %26, align 8, !dbg !2571
  %28 = icmp eq {}* %27, null, !dbg !2571
  %_66 = select i1 %28, i64 0, i64 1, !dbg !2571
  switch i64 %_66, label %bb24 [
    i64 0, label %bb23
    i64 1, label %bb25
  ], !dbg !2571

bb24:                                             ; preds = %bb10
  unreachable, !dbg !2571

bb23:                                             ; preds = %bb10
  unreachable, !dbg !2626

bb25:                                             ; preds = %bb10
  %val8 = load i8*, i8** %self3, align 8, !dbg !2571, !nonnull !19, !align !627, !noundef !19
  store i8* %val8, i8** %val.dbg.spill9, align 8, !dbg !2571
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill9, metadata !2568, metadata !DIExpression()), !dbg !2630
  %z = load i8, i8* %val8, align 1, !dbg !2631
  store i8 %z, i8* %z.dbg.spill, align 1, !dbg !2631
  call void @llvm.dbg.declare(metadata i8* %z.dbg.spill, metadata !2510, metadata !DIExpression()), !dbg !2632
  %_32 = and i8 %y, 63, !dbg !2633
  %ch10 = zext i8 %_32 to i32, !dbg !2633
  store i32 %ch10, i32* %ch.dbg.spill11, align 4, !dbg !2633
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill11, metadata !2634, metadata !DIExpression()), !dbg !2638
  store i8 %z, i8* %byte.dbg.spill12, align 1, !dbg !2640
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill12, metadata !2637, metadata !DIExpression()), !dbg !2638
  %_67 = shl i32 %ch10, 6, !dbg !2638
  %_70 = and i8 %z, 63, !dbg !2638
  %_69 = zext i8 %_70 to i32, !dbg !2638
  %y_z = or i32 %_67, %_69, !dbg !2638
  store i32 %y_z, i32* %y_z.dbg.spill, align 4, !dbg !2638
  call void @llvm.dbg.declare(metadata i32* %y_z.dbg.spill, metadata !2512, metadata !DIExpression()), !dbg !2641
  %_35 = shl i32 %init, 12, !dbg !2642
  %29 = or i32 %_35, %y_z, !dbg !2643
  store i32 %29, i32* %ch, align 4, !dbg !2643
  %_38 = icmp uge i8 %x, -16, !dbg !2644
  br i1 %_38, label %bb11, label %bb13, !dbg !2644

bb13:                                             ; preds = %bb28, %bb25
  br label %bb14, !dbg !2645

bb11:                                             ; preds = %bb25
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %30 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h49c6b49183a26f7dE"({ i8*, i8* }* align 8 %bytes), !dbg !2581
  store i8* %30, i8** %self4, align 8, !dbg !2581
  br label %bb12, !dbg !2581

bb12:                                             ; preds = %bb11
  %31 = bitcast i8** %self4 to {}**, !dbg !2580
  %32 = load {}*, {}** %31, align 8, !dbg !2580
  %33 = icmp eq {}* %32, null, !dbg !2580
  %_73 = select i1 %33, i64 0, i64 1, !dbg !2580
  switch i64 %_73, label %bb27 [
    i64 0, label %bb26
    i64 1, label %bb28
  ], !dbg !2580

bb27:                                             ; preds = %bb12
  unreachable, !dbg !2580

bb26:                                             ; preds = %bb12
  unreachable, !dbg !2646

bb28:                                             ; preds = %bb12
  %val13 = load i8*, i8** %self4, align 8, !dbg !2580, !nonnull !19, !align !627, !noundef !19
  store i8* %val13, i8** %val.dbg.spill14, align 8, !dbg !2580
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill14, metadata !2577, metadata !DIExpression()), !dbg !2650
  %w = load i8, i8* %val13, align 1, !dbg !2651
  store i8 %w, i8* %w.dbg.spill, align 1, !dbg !2651
  call void @llvm.dbg.declare(metadata i8* %w.dbg.spill, metadata !2514, metadata !DIExpression()), !dbg !2652
  %_45 = and i32 %init, 7, !dbg !2653
  %_44 = shl i32 %_45, 18, !dbg !2653
  store i32 %y_z, i32* %ch.dbg.spill15, align 4, !dbg !2654
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill15, metadata !2655, metadata !DIExpression()), !dbg !2659
  store i8 %w, i8* %byte.dbg.spill16, align 1, !dbg !2661
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill16, metadata !2658, metadata !DIExpression()), !dbg !2659
  %_74 = shl i32 %y_z, 6, !dbg !2659
  %_77 = and i8 %w, 63, !dbg !2659
  %_76 = zext i8 %_77 to i32, !dbg !2659
  %_47 = or i32 %_74, %_76, !dbg !2659
  %34 = or i32 %_44, %_47, !dbg !2662
  store i32 %34, i32* %ch, align 4, !dbg !2662
  br label %bb13, !dbg !2663
}

; core::str::<impl str>::is_char_boundary
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h20d36eabd67b8357E"([0 x i8]* align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 !dbg !2664 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill6 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill4 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %index.dbg.spill3 = alloca i64, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca i8*, align 8
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2668, metadata !DIExpression()), !dbg !2672
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !2669, metadata !DIExpression()), !dbg !2673
  %5 = icmp eq i64 %index, 0, !dbg !2674
  br i1 %5, label %bb1, label %bb2, !dbg !2674

bb1:                                              ; preds = %start
  store i8 1, i8* %2, align 1, !dbg !2675
  br label %bb7, !dbg !2676

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !2677
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8, !dbg !2677
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !2677
  store i64 %self.1, i64* %7, align 8, !dbg !2677
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !2678, metadata !DIExpression()), !dbg !2681
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !2681
  store [0 x i8]* %self.0, [0 x i8]** %8, align 8, !dbg !2681
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !2681
  store i64 %self.1, i64* %9, align 8, !dbg !2681
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !2681
  %_6.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !2681, !nonnull !19, !align !627, !noundef !19
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !2681
  %_6.1 = load i64, i64* %11, align 8, !dbg !2681
  br label %bb8, !dbg !2681

bb8:                                              ; preds = %bb2
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !2677
  store [0 x i8]* %_6.0, [0 x i8]** %12, align 8, !dbg !2677
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !2677
  store i64 %_6.1, i64* %13, align 8, !dbg !2677
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !2682, metadata !DIExpression()), !dbg !2691
  store i64 %index, i64* %index.dbg.spill3, align 8, !dbg !2692
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill3, metadata !2688, metadata !DIExpression()), !dbg !2691
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %14 = call align 1 i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h3a9a8b8b453d5703E"(i64 %index, [0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !2691
  store i8* %14, i8** %_4, align 8, !dbg !2691
  br label %bb9, !dbg !2691

bb9:                                              ; preds = %bb8
  %15 = bitcast i8** %_4 to {}**, !dbg !2677
  %16 = load {}*, {}** %15, align 8, !dbg !2677
  %17 = icmp eq {}* %16, null, !dbg !2677
  %_9 = select i1 %17, i64 0, i64 1, !dbg !2677
  switch i64 %_9, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ], !dbg !2693

bb4:                                              ; preds = %bb9
  unreachable, !dbg !2677

bb5:                                              ; preds = %bb9
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !2694
  store [0 x i8]* %self.0, [0 x i8]** %18, align 8, !dbg !2694
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !2694
  store i64 %self.1, i64* %19, align 8, !dbg !2694
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill5, metadata !2695, metadata !DIExpression()), !dbg !2700
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 0, !dbg !2700
  store [0 x i8]* %self.0, [0 x i8]** %20, align 8, !dbg !2700
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 1, !dbg !2700
  store i64 %self.1, i64* %21, align 8, !dbg !2700
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill6, metadata !2701, metadata !DIExpression()), !dbg !2704
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2704
  store [0 x i8]* %self.0, [0 x i8]** %22, align 8, !dbg !2704
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2704
  store i64 %self.1, i64* %23, align 8, !dbg !2704
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2704
  %_22.0 = load [0 x i8]*, [0 x i8]** %24, align 8, !dbg !2704, !nonnull !19, !align !627, !noundef !19
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2704
  %_22.1 = load i64, i64* %25, align 8, !dbg !2704
  br label %bb10, !dbg !2704

bb3:                                              ; preds = %bb9
  %_15 = load i8*, i8** %_4, align 8, !dbg !2706, !nonnull !19, !align !627, !noundef !19
  %b = load i8, i8* %_15, align 1, !dbg !2706
  store i8 %b, i8* %b.dbg.spill, align 1, !dbg !2706
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !2670, metadata !DIExpression()), !dbg !2707
  store i8 %b, i8* %self.dbg.spill4, align 1, !dbg !2708
  call void @llvm.dbg.declare(metadata i8* %self.dbg.spill4, metadata !2709, metadata !DIExpression()), !dbg !2717
  %26 = icmp sge i8 %b, -64, !dbg !2717
  %27 = zext i1 %26 to i8, !dbg !2717
  store i8 %27, i8* %2, align 1, !dbg !2717
  br label %bb6, !dbg !2718

bb6:                                              ; preds = %bb10, %bb3
  br label %bb7, !dbg !2676

bb10:                                             ; preds = %bb5
  %28 = icmp eq i64 %index, %_22.1, !dbg !2719
  %29 = zext i1 %28 to i8, !dbg !2719
  store i8 %29, i8* %2, align 1, !dbg !2719
  br label %bb6, !dbg !2720

bb7:                                              ; preds = %bb1, %bb6
  %30 = load i8, i8* %2, align 1, !dbg !2676, !range !266, !noundef !19
  %31 = trunc i8 %30 to i1, !dbg !2676
  ret i1 %31, !dbg !2676
}

; core::str::<impl str>::len
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h46c72f4bd07ddbd2E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2721 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2723, metadata !DIExpression()), !dbg !2724
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !2725
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8, !dbg !2725
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !2725
  store i64 %self.1, i64* %4, align 8, !dbg !2725
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !2726, metadata !DIExpression()), !dbg !2729
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2729
  store [0 x i8]* %self.0, [0 x i8]** %5, align 8, !dbg !2729
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2729
  store i64 %self.1, i64* %6, align 8, !dbg !2729
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2729
  %_3.0 = load [0 x i8]*, [0 x i8]** %7, align 8, !dbg !2729, !nonnull !19, !align !627, !noundef !19
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2729
  %_3.1 = load i64, i64* %8, align 8, !dbg !2729
  br label %bb1, !dbg !2729

bb1:                                              ; preds = %start
  ret i64 %_3.1, !dbg !2730
}

; core::str::<impl str>::bytes
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h7897e2009ee174b2E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2731 {
start:
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2735, metadata !DIExpression()), !dbg !2736
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !2737
  store [0 x i8]* %self.0, [0 x i8]** %4, align 8, !dbg !2737
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !2737
  store i64 %self.1, i64* %5, align 8, !dbg !2737
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !2738, metadata !DIExpression()), !dbg !2741
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2741
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8, !dbg !2741
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2741
  store i64 %self.1, i64* %7, align 8, !dbg !2741
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2741
  %_5.0 = load [0 x i8]*, [0 x i8]** %8, align 8, !dbg !2741, !nonnull !19, !align !627, !noundef !19
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2741
  %_5.1 = load i64, i64* %9, align 8, !dbg !2741
  br label %bb2, !dbg !2741

bb2:                                              ; preds = %start
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !2737
  store [0 x i8]* %_5.0, [0 x i8]** %10, align 8, !dbg !2737
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !2737
  store i64 %_5.1, i64* %11, align 8, !dbg !2737
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !2742, metadata !DIExpression()), !dbg !2746
; call core::slice::iter::Iter<T>::new
  %12 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17ha977156ac332a7d0E"([0 x i8]* align 1 %_5.0, i64 %_5.1), !dbg !2746
  %_3.0 = extractvalue { i8*, i8* } %12, 0, !dbg !2746
  %_3.1 = extractvalue { i8*, i8* } %12, 1, !dbg !2746
  br label %bb3, !dbg !2746

bb3:                                              ; preds = %bb2
; call core::iter::traits::iterator::Iterator::copied
  %13 = call { i8*, i8* } @_ZN4core4iter6traits8iterator8Iterator6copied17h3bcb896e46176f52E(i8* %_3.0, i8* %_3.1), !dbg !2737
  %_2.0 = extractvalue { i8*, i8* } %13, 0, !dbg !2737
  %_2.1 = extractvalue { i8*, i8* } %13, 1, !dbg !2737
  br label %bb1, !dbg !2737

bb1:                                              ; preds = %bb3
  %14 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0, !dbg !2747
  store i8* %_2.0, i8** %14, align 8, !dbg !2747
  %15 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1, !dbg !2747
  store i8* %_2.1, i8** %15, align 8, !dbg !2747
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0, !dbg !2748
  %17 = load i8*, i8** %16, align 8, !dbg !2748, !nonnull !19, !noundef !19
  %18 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1, !dbg !2748
  %19 = load i8*, i8** %18, align 8, !dbg !2748
  %20 = insertvalue { i8*, i8* } undef, i8* %17, 0, !dbg !2748
  %21 = insertvalue { i8*, i8* } %20, i8* %19, 1, !dbg !2748
  ret { i8*, i8* } %21, !dbg !2748
}

; core::str::<impl str>::chars
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h7bf8534f8214801fE"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2749 {
start:
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2753, metadata !DIExpression()), !dbg !2754
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !2755
  store [0 x i8]* %self.0, [0 x i8]** %4, align 8, !dbg !2755
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !2755
  store i64 %self.1, i64* %5, align 8, !dbg !2755
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !2756, metadata !DIExpression()), !dbg !2759
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2759
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8, !dbg !2759
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2759
  store i64 %self.1, i64* %7, align 8, !dbg !2759
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2759
  %_4.0 = load [0 x i8]*, [0 x i8]** %8, align 8, !dbg !2759, !nonnull !19, !align !627, !noundef !19
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2759
  %_4.1 = load i64, i64* %9, align 8, !dbg !2759
  br label %bb1, !dbg !2759

bb1:                                              ; preds = %start
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !2755
  store [0 x i8]* %_4.0, [0 x i8]** %10, align 8, !dbg !2755
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !2755
  store i64 %_4.1, i64* %11, align 8, !dbg !2755
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !2760, metadata !DIExpression()), !dbg !2764
; call core::slice::iter::Iter<T>::new
  %12 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17ha977156ac332a7d0E"([0 x i8]* align 1 %_4.0, i64 %_4.1), !dbg !2764
  %_2.0 = extractvalue { i8*, i8* } %12, 0, !dbg !2764
  %_2.1 = extractvalue { i8*, i8* } %12, 1, !dbg !2764
  br label %bb2, !dbg !2764

bb2:                                              ; preds = %bb1
  %13 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0, !dbg !2765
  store i8* %_2.0, i8** %13, align 8, !dbg !2765
  %14 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1, !dbg !2765
  store i8* %_2.1, i8** %14, align 8, !dbg !2765
  %15 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0, !dbg !2766
  %16 = load i8*, i8** %15, align 8, !dbg !2766, !nonnull !19, !noundef !19
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1, !dbg !2766
  %18 = load i8*, i8** %17, align 8, !dbg !2766
  %19 = insertvalue { i8*, i8* } undef, i8* %16, 0, !dbg !2766
  %20 = insertvalue { i8*, i8* } %19, i8* %18, 1, !dbg !2766
  ret { i8*, i8* } %20, !dbg !2766
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h31efd52ee692bc52E"(%"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* sret(%"core::result::Result<f64, core::num::dec2flt::ParseFloatError>") %0, [0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2767 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2769, metadata !DIExpression()), !dbg !2770
; call core::num::dec2flt::<impl core::str::traits::FromStr for f64>::from_str
  call void @"_ZN4core3num7dec2flt60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$f64$GT$8from_str17hb386c67320c9d1bbE"(%"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* sret(%"core::result::Result<f64, core::num::dec2flt::ParseFloatError>") %0, [0 x i8]* align 1 %self.0, i64 %self.1), !dbg !2771
  br label %bb1, !dbg !2771

bb1:                                              ; preds = %start
  ret void, !dbg !2772
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h484872e2bf97f4f4E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2773 {
start:
  %0 = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>", align 4
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2775, metadata !DIExpression()), !dbg !2776
; call core::num::dec2flt::<impl core::str::traits::FromStr for f32>::from_str
  %4 = call i64 @"_ZN4core3num7dec2flt60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$f32$GT$8from_str17h8a350a0f35c2446dE"([0 x i8]* align 1 %self.0, i64 %self.1), !dbg !2777
  store i64 %4, i64* %0, align 8, !dbg !2777
  %5 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %1 to i8*, !dbg !2777
  %6 = bitcast i64* %0 to i8*, !dbg !2777
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 8, i1 false), !dbg !2777
  br label %bb1, !dbg !2777

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %1 to i64*, !dbg !2778
  %8 = load i64, i64* %7, align 4, !dbg !2778
  ret i64 %8, !dbg !2778
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h5772aff34b6d4e0bE"(%"core::result::Result<usize, core::num::error::ParseIntError>"* sret(%"core::result::Result<usize, core::num::error::ParseIntError>") %0, [0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2779 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2801, metadata !DIExpression()), !dbg !2804
; call core::num::<impl core::str::traits::FromStr for usize>::from_str
  call void @"_ZN4core3num62_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$usize$GT$8from_str17h23a83747ee6cd04cE"(%"core::result::Result<usize, core::num::error::ParseIntError>"* sret(%"core::result::Result<usize, core::num::error::ParseIntError>") %0, [0 x i8]* align 1 %self.0, i64 %self.1), !dbg !2805
  br label %bb1, !dbg !2805

bb1:                                              ; preds = %start
  ret void, !dbg !2806
}

; core::str::<impl str>::is_empty
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17hbddfdad1e87f60d4E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2807 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2811, metadata !DIExpression()), !dbg !2812
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !2813
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8, !dbg !2813
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !2813
  store i64 %self.1, i64* %4, align 8, !dbg !2813
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !2814, metadata !DIExpression()), !dbg !2817
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !2817
  store [0 x i8]* %self.0, [0 x i8]** %5, align 8, !dbg !2817
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !2817
  store i64 %self.1, i64* %6, align 8, !dbg !2817
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !2818, metadata !DIExpression()), !dbg !2821
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2821
  store [0 x i8]* %self.0, [0 x i8]** %7, align 8, !dbg !2821
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2821
  store i64 %self.1, i64* %8, align 8, !dbg !2821
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2821
  %_5.0 = load [0 x i8]*, [0 x i8]** %9, align 8, !dbg !2821, !nonnull !19, !align !627, !noundef !19
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2821
  %_5.1 = load i64, i64* %10, align 8, !dbg !2821
  br label %bb1, !dbg !2821

bb1:                                              ; preds = %start
  %11 = icmp eq i64 %_5.1, 0, !dbg !2813
  ret i1 %11, !dbg !2823
}

; core::str::iter::Chars::as_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3str4iter5Chars6as_str17h1d84951d6b563a74E({ i8*, i8* }* align 8 %self) unnamed_addr #0 !dbg !2824 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !2830, metadata !DIExpression()), !dbg !2831
; call core::slice::iter::Iter<T>::as_slice
  %1 = call { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17ha674f49ca7c71770E"({ i8*, i8* }* align 8 %self), !dbg !2832
  %_3.0 = extractvalue { [0 x i8]*, i64 } %1, 0, !dbg !2832
  %_3.1 = extractvalue { [0 x i8]*, i64 } %1, 1, !dbg !2832
  br label %bb1, !dbg !2832

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !2832
  store [0 x i8]* %_3.0, [0 x i8]** %2, align 8, !dbg !2832
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !2832
  store i64 %_3.1, i64* %3, align 8, !dbg !2832
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !2833, metadata !DIExpression()), !dbg !2841
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2841
  store [0 x i8]* %_3.0, [0 x i8]** %4, align 8, !dbg !2841
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2841
  store i64 %_3.1, i64* %5, align 8, !dbg !2841
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2841
  %7 = load [0 x i8]*, [0 x i8]** %6, align 8, !dbg !2841, !nonnull !19, !align !627, !noundef !19
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2841
  %9 = load i64, i64* %8, align 8, !dbg !2841
  br label %bb2, !dbg !2841

bb2:                                              ; preds = %bb1
  %10 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %7, 0, !dbg !2843
  %11 = insertvalue { [0 x i8]*, i64 } %10, i64 %9, 1, !dbg !2843
  ret { [0 x i8]*, i64 } %11, !dbg !2843
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17hcc14144be099a16dE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !2844 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %len.dbg.spill9 = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill8 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill7 = alloca { [0 x i8]*, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill6 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_30 = alloca { i8*, i64 }, align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_23 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !2855, metadata !DIExpression()), !dbg !2863
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !2856, metadata !DIExpression()), !dbg !2864
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill1, i32 0, i32 0, !dbg !2865
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8, !dbg !2865
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill1, i32 0, i32 1, !dbg !2865
  store i64 %slice.1, i64* %4, align 8, !dbg !2865
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill1, metadata !2857, metadata !DIExpression()), !dbg !2866
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !2867
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !2867
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !2867
  store i64 %slice.1, i64* %6, align 8, !dbg !2867
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !2868, metadata !DIExpression()), !dbg !2872
  %self3 = bitcast [0 x i8]* %slice.0 to i8*, !dbg !2872
  store i8* %self3, i8** %self.dbg.spill4, align 8, !dbg !2872
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !2873, metadata !DIExpression()), !dbg !2878
  store i64 %self, i64* %count.dbg.spill, align 8, !dbg !2879
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !2877, metadata !DIExpression()), !dbg !2878
  store i8* %self3, i8** %self.dbg.spill5, align 8, !dbg !2878
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !2880, metadata !DIExpression()), !dbg !2885
  store i64 %self, i64* %count.dbg.spill6, align 8, !dbg !2878
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill6, metadata !2884, metadata !DIExpression()), !dbg !2885
  %7 = getelementptr inbounds i8, i8* %self3, i64 %self, !dbg !2885
  store i8* %7, i8** %0, align 8, !dbg !2885
  %ptr = load i8*, i8** %0, align 8, !dbg !2885
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !2885
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2859, metadata !DIExpression()), !dbg !2887
  br label %bb1, !dbg !2885

bb1:                                              ; preds = %start
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !2888
  store [0 x i8]* %slice.0, [0 x i8]** %8, align 8, !dbg !2888
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !2888
  store i64 %slice.1, i64* %9, align 8, !dbg !2888
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill7, metadata !2889, metadata !DIExpression()), !dbg !2893
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill8, i32 0, i32 0, !dbg !2893
  store [0 x i8]* %slice.0, [0 x i8]** %10, align 8, !dbg !2893
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill8, i32 0, i32 1, !dbg !2893
  store i64 %slice.1, i64* %11, align 8, !dbg !2893
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill8, metadata !2894, metadata !DIExpression()), !dbg !2898
  %12 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_23 to { [0 x i8]*, i64 }*, !dbg !2898
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0, !dbg !2898
  store [0 x i8]* %slice.0, [0 x i8]** %13, align 8, !dbg !2898
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1, !dbg !2898
  store i64 %slice.1, i64* %14, align 8, !dbg !2898
  %15 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_23 to { i8*, i64 }*, !dbg !2898
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %15, i32 0, i32 1, !dbg !2898
  %_10 = load i64, i64* %16, align 8, !dbg !2898
  %len = sub i64 %_10, %self, !dbg !2888
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !2888
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2861, metadata !DIExpression()), !dbg !2900
  store i8* %ptr, i8** %data.dbg.spill, align 8, !dbg !2901
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !2902, metadata !DIExpression()), !dbg !2907
  store i64 %len, i64* %len.dbg.spill9, align 8, !dbg !2909
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill9, metadata !2906, metadata !DIExpression()), !dbg !2907
  store i8* %ptr, i8** %self.dbg.spill10, align 8, !dbg !2907
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !2910, metadata !DIExpression()), !dbg !2914
  %data_address = bitcast i8* %ptr to {}*, !dbg !2914
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !2914
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !2916, metadata !DIExpression()), !dbg !2921
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !2907
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !2920, metadata !DIExpression()), !dbg !2921
  %17 = bitcast { i8*, i64 }* %_30 to {}**, !dbg !2921
  store {}* %data_address, {}** %17, align 8, !dbg !2921
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_30, i32 0, i32 1, !dbg !2921
  store i64 %len, i64* %18, align 8, !dbg !2921
  %19 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_29 to { i8*, i64 }*, !dbg !2921
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_30, i32 0, i32 0, !dbg !2921
  %21 = load i8*, i8** %20, align 8, !dbg !2921
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_30, i32 0, i32 1, !dbg !2921
  %23 = load i64, i64* %22, align 8, !dbg !2921
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %19, i32 0, i32 0, !dbg !2921
  store i8* %21, i8** %24, align 8, !dbg !2921
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %19, i32 0, i32 1, !dbg !2921
  store i64 %23, i64* %25, align 8, !dbg !2921
  %26 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_29 to { [0 x i8]*, i64 }*, !dbg !2921
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 0, !dbg !2921
  %_13.0 = load [0 x i8]*, [0 x i8]** %27, align 8, !dbg !2921
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 1, !dbg !2921
  %_13.1 = load i64, i64* %28, align 8, !dbg !2921
  %29 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_13.0, 0, !dbg !2923
  %30 = insertvalue { [0 x i8]*, i64 } %29, i64 %_13.1, 1, !dbg !2923
  ret { [0 x i8]*, i64 } %30, !dbg !2923
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17h01c2dd56425f8876E"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !2924 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %0 = alloca { i8*, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !2941, metadata !DIExpression()), !dbg !2943
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !2942, metadata !DIExpression()), !dbg !2944
; call core::str::<impl str>::is_char_boundary
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h20d36eabd67b8357E"([0 x i8]* align 1 %slice.0, i64 %slice.1, i64 %self), !dbg !2945
  br label %bb1, !dbg !2945

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4, !dbg !2945

bb4:                                              ; preds = %bb1
  %3 = bitcast { i8*, i64 }* %0 to {}**, !dbg !2946
  store {}* null, {}** %3, align 8, !dbg !2946
  br label %bb5, !dbg !2947

bb2:                                              ; preds = %bb1
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get_unchecked
  %4 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17hcc14144be099a16dE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1), !dbg !2948
  %_8.0 = extractvalue { [0 x i8]*, i64 } %4, 0, !dbg !2948
  %_8.1 = extractvalue { [0 x i8]*, i64 } %4, 1, !dbg !2948
  br label %bb3, !dbg !2948

bb3:                                              ; preds = %bb2
  %5 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !2949
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0, !dbg !2949
  store [0 x i8]* %_8.0, [0 x i8]** %6, align 8, !dbg !2949
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1, !dbg !2949
  store i64 %_8.1, i64* %7, align 8, !dbg !2949
  br label %bb5, !dbg !2947

bb5:                                              ; preds = %bb4, %bb3
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !2950
  %9 = load i8*, i8** %8, align 8, !dbg !2950, !align !627
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !2950
  %11 = load i64, i64* %10, align 8, !dbg !2950
  %12 = insertvalue { i8*, i64 } undef, i8* %9, 0, !dbg !2950
  %13 = insertvalue { i8*, i64 } %12, i64 %11, 1, !dbg !2950
  ret { i8*, i64 } %13, !dbg !2950
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17had793a4db3d6695cE"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !2951 {
start:
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %end.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_9 = alloca { i8*, i64 }, align 8
  %_5 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !2955, metadata !DIExpression()), !dbg !2962
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !2956, metadata !DIExpression()), !dbg !2963
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !2964
  store [0 x i8]* %slice.0, [0 x i8]** %4, align 8, !dbg !2964
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !2964
  store i64 %slice.1, i64* %5, align 8, !dbg !2964
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !2965, metadata !DIExpression()), !dbg !2969
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !2969
  store [0 x i8]* %slice.0, [0 x i8]** %6, align 8, !dbg !2969
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !2969
  store i64 %slice.1, i64* %7, align 8, !dbg !2969
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !2970, metadata !DIExpression()), !dbg !2974
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !2974
  store [0 x i8]* %slice.0, [0 x i8]** %8, align 8, !dbg !2974
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !2974
  store i64 %slice.1, i64* %9, align 8, !dbg !2974
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !2974
  %_18.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !2974, !nonnull !19, !align !627, !noundef !19
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !2974
  %_18.1 = load i64, i64* %11, align 8, !dbg !2974
  br label %bb5, !dbg !2974

bb5:                                              ; preds = %start
  %12 = bitcast { i64, i64 }* %_5 to i64*, !dbg !2976
  store i64 %self, i64* %12, align 8, !dbg !2976
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !2976
  store i64 %_18.1, i64* %13, align 8, !dbg !2976
  %14 = bitcast { i64, i64 }* %_5 to i64*, !dbg !2977
  %start3 = load i64, i64* %14, align 8, !dbg !2977
  store i64 %start3, i64* %start.dbg.spill, align 8, !dbg !2977
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !2957, metadata !DIExpression()), !dbg !2978
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !2979
  %end = load i64, i64* %15, align 8, !dbg !2979
  store i64 %end, i64* %end.dbg.spill, align 8, !dbg !2979
  call void @llvm.dbg.declare(metadata i64* %end.dbg.spill, metadata !2959, metadata !DIExpression()), !dbg !2980
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
  %16 = call { i8*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17h01c2dd56425f8876E"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1), !dbg !2981
  store { i8*, i64 } %16, { i8*, i64 }* %_9, align 8, !dbg !2981
  br label %bb1, !dbg !2981

bb1:                                              ; preds = %bb5
  %17 = bitcast { i8*, i64 }* %_9 to {}**, !dbg !2981
  %18 = load {}*, {}** %17, align 8, !dbg !2981
  %19 = icmp eq {}* %18, null, !dbg !2981
  %_12 = select i1 %19, i64 0, i64 1, !dbg !2981
  switch i64 %_12, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ], !dbg !2982

bb3:                                              ; preds = %bb1
  unreachable, !dbg !2981

bb2:                                              ; preds = %bb1
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17h062f63050b85fc0cE([0 x i8]* align 1 %slice.0, i64 %slice.1, i64 %start3, i64 %end, %"core::panic::location::Location"* align 8 %0) #7, !dbg !2983
  unreachable, !dbg !2983

bb4:                                              ; preds = %bb1
  %20 = bitcast { i8*, i64 }* %_9 to { [0 x i8]*, i64 }*, !dbg !2984
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0, !dbg !2984
  %s.0 = load [0 x i8]*, [0 x i8]** %21, align 8, !dbg !2984, !nonnull !19, !align !627, !noundef !19
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1, !dbg !2984
  %s.1 = load i64, i64* %22, align 8, !dbg !2984
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0, !dbg !2984
  store [0 x i8]* %s.0, [0 x i8]** %23, align 8, !dbg !2984
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1, !dbg !2984
  store i64 %s.1, i64* %24, align 8, !dbg !2984
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !2960, metadata !DIExpression()), !dbg !2985
  %25 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %s.0, 0, !dbg !2986
  %26 = insertvalue { [0 x i8]*, i64 } %25, i64 %s.1, 1, !dbg !2986
  ret { [0 x i8]*, i64 } %26, !dbg !2986
}

; core::str::traits::<impl core::cmp::PartialEq for str>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h328ca116de78cfaaE"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #0 !dbg !2987 {
start:
  %other.dbg.spill4 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_7 = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2992, metadata !DIExpression()), !dbg !2994
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !2993, metadata !DIExpression()), !dbg !2995
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !2996
  store [0 x i8]* %self.0, [0 x i8]** %4, align 8, !dbg !2996
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !2996
  store i64 %self.1, i64* %5, align 8, !dbg !2996
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !2997, metadata !DIExpression()), !dbg !3001
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_4, i32 0, i32 0, !dbg !3001
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8, !dbg !3001
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_4, i32 0, i32 1, !dbg !3001
  store i64 %self.1, i64* %7, align 8, !dbg !3001
  br label %bb1, !dbg !3001

bb1:                                              ; preds = %start
  store { [0 x i8]*, i64 }* %_4, { [0 x i8]*, i64 }** %self.dbg.spill2, align 8, !dbg !2996
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill2, metadata !3002, metadata !DIExpression()), !dbg !3014
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !3015
  store [0 x i8]* %other.0, [0 x i8]** %8, align 8, !dbg !3015
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !3015
  store i64 %other.1, i64* %9, align 8, !dbg !3015
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !3016, metadata !DIExpression()), !dbg !3020
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_7, i32 0, i32 0, !dbg !3020
  store [0 x i8]* %other.0, [0 x i8]** %10, align 8, !dbg !3020
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_7, i32 0, i32 1, !dbg !3020
  store i64 %other.1, i64* %11, align 8, !dbg !3020
  br label %bb2, !dbg !3020

bb2:                                              ; preds = %bb1
  store { [0 x i8]*, i64 }* %_7, { [0 x i8]*, i64 }** %other.dbg.spill4, align 8, !dbg !3015
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %other.dbg.spill4, metadata !3010, metadata !DIExpression()), !dbg !3014
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_4, i32 0, i32 0, !dbg !3014
  %_13.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !dbg !3014, !nonnull !19, !align !627, !noundef !19
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_4, i32 0, i32 1, !dbg !3014
  %_13.1 = load i64, i64* %13, align 8, !dbg !3014
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_7, i32 0, i32 0, !dbg !3014
  %_14.0 = load [0 x i8]*, [0 x i8]** %14, align 8, !dbg !3014, !nonnull !19, !align !627, !noundef !19
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_7, i32 0, i32 1, !dbg !3014
  %_14.1 = load i64, i64* %15, align 8, !dbg !3014
; call core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
  %16 = call zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17he344d24537209facE"([0 x i8]* align 1 %_13.0, i64 %_13.1, [0 x i8]* align 1 %_14.0, i64 %_14.1), !dbg !3014
  br label %bb3, !dbg !3014

bb3:                                              ; preds = %bb2
  ret i1 %16, !dbg !3021
}

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hcc6396edc3b4e7b0E"([0 x i8]* align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !3022 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3027, metadata !DIExpression()), !dbg !3030
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !3028, metadata !DIExpression()), !dbg !3031
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
  %3 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17had793a4db3d6695cE"(i64 %index, [0 x i8]* align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0), !dbg !3032
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !3032
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !3032
  br label %bb1, !dbg !3032

bb1:                                              ; preds = %start
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0, !dbg !3033
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1, !dbg !3033
  ret { [0 x i8]*, i64 } %7, !dbg !3033
}

; core::char::methods::<impl char>::to_digit
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17h8cb00c8fb2f77c0bE"(i32 %self, i32 %radix) unnamed_addr #0 !dbg !3034 {
start:
  %0 = alloca i32, align 4
  %self.dbg.spill5 = alloca i32, align 4
  %self.dbg.spill3 = alloca i32, align 4
  %self.dbg.spill1 = alloca i32, align 4
  %radix.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca i32, align 4
  %_13 = alloca %"core::fmt::Arguments", align 8
  %digit = alloca i32, align 4
  %1 = alloca { i32, i32 }, align 4
  store i32 %self, i32* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill, metadata !3042, metadata !DIExpression()), !dbg !3046
  store i32 %radix, i32* %radix.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %radix.dbg.spill, metadata !3043, metadata !DIExpression()), !dbg !3047
  call void @llvm.dbg.declare(metadata i32* %digit, metadata !3044, metadata !DIExpression()), !dbg !3048
  store i32 %self, i32* %self.dbg.spill1, align 4, !dbg !3049
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill1, metadata !3050, metadata !DIExpression()), !dbg !3058
  %2 = sub i32 %self, 48, !dbg !3058
  store i32 %2, i32* %digit, align 4, !dbg !3058
  %_7 = icmp ugt i32 %radix, 10, !dbg !3059
  br i1 %_7, label %bb1, label %bb7, !dbg !3059

bb7:                                              ; preds = %bb12, %start
  %_30 = load i32, i32* %digit, align 4, !dbg !3060
  %_29 = icmp ult i32 %_30, %radix, !dbg !3060
  br i1 %_29, label %bb8, label %bb9, !dbg !3060

bb1:                                              ; preds = %start
  %_10 = icmp ule i32 %radix, 36, !dbg !3061
  %_9 = xor i1 %_10, true, !dbg !3062
  br i1 %_9, label %bb2, label %bb4, !dbg !3062

bb4:                                              ; preds = %bb1
  %_21 = load i32, i32* %digit, align 4, !dbg !3063
  %_20 = icmp ult i32 %_21, 10, !dbg !3063
  br i1 %_20, label %bb5, label %bb6, !dbg !3063

bb2:                                              ; preds = %bb1
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h97872f408723ca1bE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_13, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc6180 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc6395 to [0 x { i8*, i64* }]*), i64 0), !dbg !3062
  br label %bb3, !dbg !3062

bb3:                                              ; preds = %bb2
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_13, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc6366 to %"core::panic::location::Location"*)) #7, !dbg !3062
  unreachable, !dbg !3062

bb6:                                              ; preds = %bb4
  %self2 = or i32 %self, 32, !dbg !3064
  store i32 %self2, i32* %self.dbg.spill3, align 4, !dbg !3064
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill3, metadata !3065, metadata !DIExpression()), !dbg !3070
  %self4 = sub i32 %self2, 97, !dbg !3070
  store i32 %self4, i32* %self.dbg.spill5, align 4, !dbg !3070
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill5, metadata !3071, metadata !DIExpression()), !dbg !3076
  %3 = call i32 @llvm.uadd.sat.i32(i32 %self4, i32 10), !dbg !3076
  store i32 %3, i32* %0, align 4, !dbg !3076
  %_23 = load i32, i32* %0, align 4, !dbg !3076
  br label %bb12, !dbg !3076

bb5:                                              ; preds = %bb4
  %_22 = load i32, i32* %digit, align 4, !dbg !3077
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !3078
  store i32 %_22, i32* %4, align 4, !dbg !3078
  %5 = bitcast { i32, i32 }* %1 to i32*, !dbg !3078
  store i32 1, i32* %5, align 4, !dbg !3078
  br label %bb11, !dbg !3079

bb11:                                             ; preds = %bb10, %bb5
  %6 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 0, !dbg !3079
  %7 = load i32, i32* %6, align 4, !dbg !3079, !range !1519, !noundef !19
  %8 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !3079
  %9 = load i32, i32* %8, align 4, !dbg !3079
  %10 = insertvalue { i32, i32 } undef, i32 %7, 0, !dbg !3079
  %11 = insertvalue { i32, i32 } %10, i32 %9, 1, !dbg !3079
  ret { i32, i32 } %11, !dbg !3079

bb12:                                             ; preds = %bb6
  store i32 %_23, i32* %digit, align 4, !dbg !3080
  br label %bb7, !dbg !3081

bb9:                                              ; preds = %bb7
  %12 = bitcast { i32, i32 }* %1 to i32*, !dbg !3082
  store i32 0, i32* %12, align 4, !dbg !3082
  br label %bb10, !dbg !3083

bb8:                                              ; preds = %bb7
  %_32 = load i32, i32* %digit, align 4, !dbg !3084
  %13 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !3085
  store i32 %_32, i32* %13, align 4, !dbg !3085
  %14 = bitcast { i32, i32 }* %1 to i32*, !dbg !3085
  store i32 1, i32* %14, align 4, !dbg !3085
  br label %bb10, !dbg !3083

bb10:                                             ; preds = %bb9, %bb8
  br label %bb11, !dbg !3079
}

; core::iter::traits::iterator::Iterator::all
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17h55110c1c86203de0E(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* align 8 %self) unnamed_addr #0 !dbg !3086 {
start:
  %f.dbg.spill1 = alloca %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]", align 1
  %f.dbg.spill = alloca %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]", align 1
  %self.dbg.spill = alloca %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"*, align 8
  %_7 = alloca %"[closure@core::iter::traits::iterator::Iterator::all::check<(u8, u8), [closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]>::{closure#0}]", align 1
  %_4 = alloca i8, align 1
  store %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %self, %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"** %self.dbg.spill, metadata !3096, metadata !DIExpression()), !dbg !3101
  call void @llvm.dbg.declare(metadata %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]"* %f.dbg.spill, metadata !3097, metadata !DIExpression()), !dbg !3102
  call void @llvm.dbg.declare(metadata %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]"* %f.dbg.spill1, metadata !3103, metadata !DIExpression()), !dbg !3111
  %0 = bitcast %"[closure@core::iter::traits::iterator::Iterator::all::check<(u8, u8), [closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]>::{closure#0}]"* %_7 to %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]"*, !dbg !3111
; call core::iter::traits::iterator::Iterator::try_fold
  %1 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h2e9b7b6cdab93b27E(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* align 8 %self), !dbg !3113
  %2 = zext i1 %1 to i8, !dbg !3113
  store i8 %2, i8* %_4, align 1, !dbg !3113
  br label %bb1, !dbg !3113

bb1:                                              ; preds = %start
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %3 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9c0c388c38acfc34E"(i8* align 1 %_4, i8* align 1 getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc6166, i32 0, i32 0, i32 0)), !dbg !3113
  br label %bb2, !dbg !3113

bb2:                                              ; preds = %bb1
  ret i1 %3, !dbg !3114
}

; core::iter::traits::iterator::Iterator::all::check::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17h4bdda3824bf03e14E"(%"[closure@core::iter::traits::iterator::Iterator::all::check<(u8, u8), [closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]>::{closure#0}]"* align 1 %_1, i8 %x.0, i8 %x.1) unnamed_addr #0 !dbg !3115 {
start:
  %x.dbg.spill = alloca { i8, i8 }, align 1
  %_2.dbg.spill = alloca {}, align 1
  %_1.dbg.spill = alloca %"[closure@core::iter::traits::iterator::Iterator::all::check<(u8, u8), [closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]>::{closure#0}]"*, align 8
  %_6 = alloca { i8, i8 }, align 1
  %0 = alloca i8, align 1
  store %"[closure@core::iter::traits::iterator::Iterator::all::check<(u8, u8), [closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]>::{closure#0}]"* %_1, %"[closure@core::iter::traits::iterator::Iterator::all::check<(u8, u8), [closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]>::{closure#0}]"** %_1.dbg.spill, align 8
  %1 = load %"[closure@core::iter::traits::iterator::Iterator::all::check<(u8, u8), [closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]>::{closure#0}]"*, %"[closure@core::iter::traits::iterator::Iterator::all::check<(u8, u8), [closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]>::{closure#0}]"** %_1.dbg.spill, align 8, !nonnull !19, !align !627, !noundef !19
  %2 = bitcast %"[closure@core::iter::traits::iterator::Iterator::all::check<(u8, u8), [closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]>::{closure#0}]"* %1 to %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]"*
  call void @llvm.dbg.declare(metadata %"[closure@core::iter::traits::iterator::Iterator::all::check<(u8, u8), [closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]>::{closure#0}]"** %_1.dbg.spill, metadata !3125, metadata !DIExpression(DW_OP_deref)), !dbg !3127
  call void @llvm.dbg.declare(metadata {}* %_2.dbg.spill, metadata !3126, metadata !DIExpression()), !dbg !3128
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %x.dbg.spill, i32 0, i32 0
  store i8 %x.0, i8* %3, align 1
  %4 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %x.dbg.spill, i32 0, i32 1
  store i8 %x.1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata { i8, i8 }* %x.dbg.spill, metadata !3124, metadata !DIExpression()), !dbg !3129
  %_5 = bitcast %"[closure@core::iter::traits::iterator::Iterator::all::check<(u8, u8), [closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]>::{closure#0}]"* %_1 to %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]"*, !dbg !3130
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_6, i32 0, i32 0, !dbg !3130
  store i8 %x.0, i8* %5, align 1, !dbg !3130
  %6 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_6, i32 0, i32 1, !dbg !3130
  store i8 %x.1, i8* %6, align 1, !dbg !3130
  %7 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_6, i32 0, i32 0, !dbg !3130
  %8 = load i8, i8* %7, align 1, !dbg !3130
  %9 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_6, i32 0, i32 1, !dbg !3130
  %10 = load i8, i8* %9, align 1, !dbg !3130
; call num_traits::str_to_ascii_lower_eq_str::{{closure}}
  %_4 = call zeroext i1 @"_ZN10num_traits25str_to_ascii_lower_eq_str28_$u7b$$u7b$closure$u7d$$u7d$17h7005b0a191bc2f89E"(%"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]"* align 1 %_5, i8 %8, i8 %10), !dbg !3130
  br label %bb1, !dbg !3130

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3, !dbg !3130

bb3:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1, !dbg !3131
  br label %bb4, !dbg !3132

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1, !dbg !3133
  br label %bb4, !dbg !3132

bb4:                                              ; preds = %bb3, %bb2
  %11 = load i8, i8* %0, align 1, !dbg !3134, !range !266, !noundef !19
  %12 = trunc i8 %11 to i1, !dbg !3134
  ret i1 %12, !dbg !3134
}

; core::iter::traits::iterator::Iterator::zip
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3zip17h1f0de46e36054093E(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* sret(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>") %0, i8* %self.0, i8* %self.1, i8* %other.0, i8* %other.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3135 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %other.dbg.spill = alloca { i8*, i8* }, align 8
  %self.dbg.spill = alloca { i8*, i8* }, align 8
  %_6 = alloca i8, align 1
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 1
  store i8* %self.1, i8** %3, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %self.dbg.spill, metadata !3137, metadata !DIExpression()), !dbg !3142
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %other.dbg.spill, i32 0, i32 0
  store i8* %other.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %other.dbg.spill, i32 0, i32 1
  store i8* %other.1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %other.dbg.spill, metadata !3138, metadata !DIExpression()), !dbg !3143
  store i8 1, i8* %_6, align 1, !dbg !3144
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %6 = invoke { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h99c7c5edb85f7ec6E"(i8* %other.0, i8* %other.1)
          to label %bb1 unwind label %cleanup, !dbg !3145

bb5:                                              ; preds = %cleanup
  %7 = load i8, i8* %_6, align 1, !dbg !3146, !range !266, !noundef !19
  %8 = trunc i8 %7 to i1, !dbg !3146
  br i1 %8, label %bb4, label %bb3, !dbg !3146

cleanup:                                          ; preds = %bb1, %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb5

bb1:                                              ; preds = %start
  %_4.0 = extractvalue { i8*, i8* } %6, 0, !dbg !3145
  %_4.1 = extractvalue { i8*, i8* } %6, 1, !dbg !3145
  store i8 0, i8* %_6, align 1, !dbg !3147
; invoke core::iter::adapters::zip::Zip<A,B>::new
  invoke void @"_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h69ef29024fdc950cE"(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* sret(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>") %0, i8* %self.0, i8* %self.1, i8* %_4.0, i8* %_4.1)
          to label %bb2 unwind label %cleanup, !dbg !3147

bb2:                                              ; preds = %bb1
  ret void, !dbg !3148

bb3:                                              ; preds = %bb4, %bb5
  %14 = bitcast { i8*, i32 }* %1 to i8**, !dbg !3149
  %15 = load i8*, i8** %14, align 8, !dbg !3149
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !3149
  %17 = load i32, i32* %16, align 8, !dbg !3149
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0, !dbg !3149
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1, !dbg !3149
  resume { i8*, i32 } %19, !dbg !3149

bb4:                                              ; preds = %bb5
  br label %bb3, !dbg !3146
}

; core::iter::traits::iterator::Iterator::zip
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3zip17hfe2ae64a1b412659E(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* sret(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>") %0, i8* %self.0, i8* %self.1, i8* %other.0, i8* %other.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3150 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %other.dbg.spill = alloca { i8*, i8* }, align 8
  %self.dbg.spill = alloca { i8*, i8* }, align 8
  %_6 = alloca i8, align 1
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 1
  store i8* %self.1, i8** %3, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %self.dbg.spill, metadata !3152, metadata !DIExpression()), !dbg !3157
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %other.dbg.spill, i32 0, i32 0
  store i8* %other.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %other.dbg.spill, i32 0, i32 1
  store i8* %other.1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %other.dbg.spill, metadata !3153, metadata !DIExpression()), !dbg !3158
  store i8 1, i8* %_6, align 1, !dbg !3159
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %6 = invoke { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1ac0ac8f0ea4d813E"(i8* %other.0, i8* %other.1)
          to label %bb1 unwind label %cleanup, !dbg !3160

bb5:                                              ; preds = %cleanup
  %7 = load i8, i8* %_6, align 1, !dbg !3161, !range !266, !noundef !19
  %8 = trunc i8 %7 to i1, !dbg !3161
  br i1 %8, label %bb4, label %bb3, !dbg !3161

cleanup:                                          ; preds = %bb1, %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb5

bb1:                                              ; preds = %start
  %_4.0 = extractvalue { i8*, i8* } %6, 0, !dbg !3160
  %_4.1 = extractvalue { i8*, i8* } %6, 1, !dbg !3160
  store i8 0, i8* %_6, align 1, !dbg !3162
; invoke core::iter::adapters::zip::Zip<A,B>::new
  invoke void @"_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h000d4d698fdadbdbE"(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* sret(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>") %0, i8* %self.0, i8* %self.1, i8* %_4.0, i8* %_4.1)
          to label %bb2 unwind label %cleanup, !dbg !3162

bb2:                                              ; preds = %bb1
  ret void, !dbg !3163

bb3:                                              ; preds = %bb4, %bb5
  %14 = bitcast { i8*, i32 }* %1 to i8**, !dbg !3164
  %15 = load i8*, i8** %14, align 8, !dbg !3164
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !3164
  %17 = load i32, i32* %16, align 8, !dbg !3164
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0, !dbg !3164
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1, !dbg !3164
  resume { i8*, i32 } %19, !dbg !3164

bb4:                                              ; preds = %bb5
  br label %bb3, !dbg !3161
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @_ZN4core4iter6traits8iterator8Iterator4fold17h7a99a4b92c7196bcE(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %self, i8 %init) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3165 {
start:
  %x.dbg.spill = alloca { i8*, i8* }, align 8
  %0 = alloca { i8*, i32 }, align 8
  %init.dbg.spill = alloca i8, align 1
  %_13 = alloca i8, align 1
  %_10 = alloca { i8, [7 x i8], { i8*, i8* } }, align 8
  %_4 = alloca { i8*, i8* }, align 8
  %accum = alloca i8, align 1
  %f = alloca %"[closure@<[u8] as core::num::dec2flt::common::ByteSlice>::starts_with_ignore_case::{closure#0}]", align 1
  call void @llvm.dbg.declare(metadata i8* %accum, metadata !3172, metadata !DIExpression()), !dbg !3179
  call void @llvm.dbg.declare(metadata %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* %self, metadata !3169, metadata !DIExpression()), !dbg !3180
  store i8 %init, i8* %init.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %init.dbg.spill, metadata !3170, metadata !DIExpression()), !dbg !3181
  call void @llvm.dbg.declare(metadata %"[closure@<[u8] as core::num::dec2flt::common::ByteSlice>::starts_with_ignore_case::{closure#0}]"* %f, metadata !3171, metadata !DIExpression()), !dbg !3182
  store i8 1, i8* %_13, align 1, !dbg !3183
  store i8 %init, i8* %accum, align 1, !dbg !3183
  br label %bb1, !dbg !3184

bb1:                                              ; preds = %bb4, %start
; invoke <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::next
  %1 = invoke { i8*, i8* } @"_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4a8492ba729d29abE"(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* align 8 %self)
          to label %bb2 unwind label %cleanup, !dbg !3185

bb13:                                             ; preds = %cleanup
  %2 = load i8, i8* %_13, align 1, !dbg !3186, !range !266, !noundef !19
  %3 = trunc i8 %2 to i1, !dbg !3186
  br i1 %3, label %bb12, label %bb9, !dbg !3186

cleanup:                                          ; preds = %bb3, %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb13

bb2:                                              ; preds = %bb1
  store { i8*, i8* } %1, { i8*, i8* }* %_4, align 8, !dbg !3185
  %9 = bitcast { i8*, i8* }* %_4 to {}**, !dbg !3187
  %10 = load {}*, {}** %9, align 8, !dbg !3187
  %11 = icmp eq {}* %10, null, !dbg !3187
  %_6 = select i1 %11, i64 0, i64 1, !dbg !3187
  %12 = icmp eq i64 %_6, 1, !dbg !3187
  br i1 %12, label %bb3, label %bb5, !dbg !3187

bb3:                                              ; preds = %bb2
  %13 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_4, i32 0, i32 0, !dbg !3188
  %x.0 = load i8*, i8** %13, align 8, !dbg !3188, !nonnull !19, !align !627, !noundef !19
  %14 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_4, i32 0, i32 1, !dbg !3188
  %x.1 = load i8*, i8** %14, align 8, !dbg !3188, !nonnull !19, !align !627, !noundef !19
  %15 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %x.dbg.spill, i32 0, i32 0, !dbg !3188
  store i8* %x.0, i8** %15, align 8, !dbg !3188
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %x.dbg.spill, i32 0, i32 1, !dbg !3188
  store i8* %x.1, i8** %16, align 8, !dbg !3188
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %x.dbg.spill, metadata !3174, metadata !DIExpression()), !dbg !3188
  store i8 0, i8* %_13, align 1, !dbg !3189
  %_11 = load i8, i8* %accum, align 1, !dbg !3189
  %17 = bitcast { i8, [7 x i8], { i8*, i8* } }* %_10 to i8*, !dbg !3190
  store i8 %_11, i8* %17, align 8, !dbg !3190
  %18 = getelementptr inbounds { i8, [7 x i8], { i8*, i8* } }, { i8, [7 x i8], { i8*, i8* } }* %_10, i32 0, i32 2, !dbg !3190
  %19 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %18, i32 0, i32 0, !dbg !3190
  store i8* %x.0, i8** %19, align 8, !dbg !3190
  %20 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %18, i32 0, i32 1, !dbg !3190
  store i8* %x.1, i8** %20, align 8, !dbg !3190
  %21 = bitcast { i8, [7 x i8], { i8*, i8* } }* %_10 to i8*, !dbg !3190
  %22 = load i8, i8* %21, align 8, !dbg !3190
  %23 = getelementptr inbounds { i8, [7 x i8], { i8*, i8* } }, { i8, [7 x i8], { i8*, i8* } }* %_10, i32 0, i32 2, !dbg !3190
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %23, i32 0, i32 0, !dbg !3190
  %25 = load i8*, i8** %24, align 8, !dbg !3190, !nonnull !19, !align !627, !noundef !19
  %26 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %23, i32 0, i32 1, !dbg !3190
  %27 = load i8*, i8** %26, align 8, !dbg !3190, !nonnull !19, !align !627, !noundef !19
; invoke core::num::dec2flt::common::ByteSlice::starts_with_ignore_case::{{closure}}
  %_8 = invoke i8 @"_ZN4core3num7dec2flt6common9ByteSlice23starts_with_ignore_case28_$u7b$$u7b$closure$u7d$$u7d$17h9736513d08d51230E"(%"[closure@<[u8] as core::num::dec2flt::common::ByteSlice>::starts_with_ignore_case::{closure#0}]"* align 1 %f, i8 %22, i8* align 1 %25, i8* align 1 %27)
          to label %bb4 unwind label %cleanup, !dbg !3190

bb5:                                              ; preds = %bb2
  br label %bb6, !dbg !3184

bb6:                                              ; preds = %bb5
  br label %bb7, !dbg !3186

bb7:                                              ; preds = %bb6
  br label %bb8, !dbg !3186

bb8:                                              ; preds = %bb7
  %28 = load i8, i8* %accum, align 1, !dbg !3191
  ret i8 %28, !dbg !3191

bb4:                                              ; preds = %bb3
  store i8 1, i8* %_13, align 1, !dbg !3192
  store i8 %_8, i8* %accum, align 1, !dbg !3192
  br label %bb1, !dbg !3184

bb9:                                              ; preds = %bb12, %bb13
  br label %bb10, !dbg !3186

bb12:                                             ; preds = %bb13
  br label %bb9, !dbg !3186

bb10:                                             ; preds = %bb9
  br label %bb11, !dbg !3186

bb11:                                             ; preds = %bb10
  %29 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3193
  %30 = load i8*, i8** %29, align 8, !dbg !3193
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3193
  %32 = load i32, i32* %31, align 8, !dbg !3193
  %33 = insertvalue { i8*, i32 } undef, i8* %30, 0, !dbg !3193
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1, !dbg !3193
  resume { i8*, i32 } %34, !dbg !3193
}

; core::iter::traits::iterator::Iterator::by_ref
; Function Attrs: nonlazybind uwtable
define align 8 %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* @_ZN4core4iter6traits8iterator8Iterator6by_ref17h1c8ab6f8dfb47eefE(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* align 8 %self) unnamed_addr #1 !dbg !3194 {
start:
  %self.dbg.spill = alloca %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"*, align 8
  store %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* %self, %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** %self.dbg.spill, metadata !3198, metadata !DIExpression()), !dbg !3201
  ret %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* %self, !dbg !3202
}

; core::iter::traits::iterator::Iterator::copied
; Function Attrs: nonlazybind uwtable
define { i8*, i8* } @_ZN4core4iter6traits8iterator8Iterator6copied17h3bcb896e46176f52E(i8* %self.0, i8* %self.1) unnamed_addr #1 !dbg !3203 {
start:
  %self.dbg.spill = alloca { i8*, i8* }, align 8
  %0 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 1
  store i8* %self.1, i8** %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %self.dbg.spill, metadata !3207, metadata !DIExpression()), !dbg !3209
; call core::iter::adapters::copied::Copied<I>::new
  %2 = call { i8*, i8* } @"_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17hfcf37a10df90156dE"(i8* %self.0, i8* %self.1), !dbg !3210
  %3 = extractvalue { i8*, i8* } %2, 0, !dbg !3210
  %4 = extractvalue { i8*, i8* } %2, 1, !dbg !3210
  br label %bb1, !dbg !3210

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i8* } undef, i8* %3, 0, !dbg !3211
  %6 = insertvalue { i8*, i8* } %5, i8* %4, 1, !dbg !3211
  ret { i8*, i8* } %6, !dbg !3211
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h2e9b7b6cdab93b27E(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3212 {
start:
  %x.dbg.spill = alloca { i8, i8 }, align 1
  %0 = alloca i24, align 4
  %1 = alloca { i8*, i32 }, align 8
  %val.dbg.spill = alloca {}, align 1
  %residual.dbg.spill = alloca %"core::ops::control_flow::ControlFlow<(), core::convert::Infallible>::Break", align 1
  %accum.dbg.spill = alloca {}, align 1
  %init.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"*, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca { i8, i8 }, align 1
  %_10 = alloca i8, align 1
  %_5 = alloca %"core::option::Option<(u8, u8)>", align 1
  %2 = alloca i8, align 1
  %f = alloca %"[closure@core::iter::traits::iterator::Iterator::all::check<(u8, u8), [closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]>::{closure#0}]", align 1
  store %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* %self, %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"** %self.dbg.spill, metadata !3216, metadata !DIExpression()), !dbg !3230
  call void @llvm.dbg.declare(metadata {}* %init.dbg.spill, metadata !3217, metadata !DIExpression()), !dbg !3231
  call void @llvm.dbg.declare(metadata %"[closure@core::iter::traits::iterator::Iterator::all::check<(u8, u8), [closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]>::{closure#0}]"* %f, metadata !3218, metadata !DIExpression()), !dbg !3232
  call void @llvm.dbg.declare(metadata {}* %accum.dbg.spill, metadata !3219, metadata !DIExpression()), !dbg !3233
  call void @llvm.dbg.declare(metadata %"core::ops::control_flow::ControlFlow<(), core::convert::Infallible>::Break"* %residual.dbg.spill, metadata !3223, metadata !DIExpression()), !dbg !3234
  call void @llvm.dbg.declare(metadata {}* %val.dbg.spill, metadata !3225, metadata !DIExpression()), !dbg !3235
  store i8 1, i8* %_21, align 1, !dbg !3236
  br label %bb1, !dbg !3237

bb1:                                              ; preds = %bb6, %start
; invoke <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::next
  %3 = invoke i24 @"_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h837551cd9ed82fb3E"(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* align 8 %self)
          to label %bb2 unwind label %cleanup, !dbg !3238

bb17:                                             ; preds = %cleanup
  %4 = load i8, i8* %_21, align 1, !dbg !3239, !range !266, !noundef !19
  %5 = trunc i8 %4 to i1, !dbg !3239
  br i1 %5, label %bb16, label %bb14, !dbg !3239

cleanup:                                          ; preds = %bb8, %bb4, %bb3, %bb11, %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb17

bb2:                                              ; preds = %bb1
  store i24 %3, i24* %0, align 4, !dbg !3238
  %11 = bitcast %"core::option::Option<(u8, u8)>"* %_5 to i8*, !dbg !3238
  %12 = bitcast i24* %0 to i8*, !dbg !3238
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 4 %12, i64 3, i1 false), !dbg !3238
  %13 = bitcast %"core::option::Option<(u8, u8)>"* %_5 to i8*, !dbg !3240
  %14 = load i8, i8* %13, align 1, !dbg !3240, !range !266, !noundef !19
  %15 = trunc i8 %14 to i1, !dbg !3240
  %_7 = zext i1 %15 to i64, !dbg !3240
  %16 = icmp eq i64 %_7, 1, !dbg !3240
  br i1 %16, label %bb3, label %bb10, !dbg !3240

bb3:                                              ; preds = %bb2
  %17 = bitcast %"core::option::Option<(u8, u8)>"* %_5 to %"core::option::Option<(u8, u8)>::Some"*, !dbg !3241
  %18 = getelementptr inbounds %"core::option::Option<(u8, u8)>::Some", %"core::option::Option<(u8, u8)>::Some"* %17, i32 0, i32 1, !dbg !3241
  %19 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %18, i32 0, i32 0, !dbg !3241
  %x.0 = load i8, i8* %19, align 1, !dbg !3241
  %20 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %18, i32 0, i32 1, !dbg !3241
  %x.1 = load i8, i8* %20, align 1, !dbg !3241
  %21 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %x.dbg.spill, i32 0, i32 0, !dbg !3241
  store i8 %x.0, i8* %21, align 1, !dbg !3241
  %22 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %x.dbg.spill, i32 0, i32 1, !dbg !3241
  store i8 %x.1, i8* %22, align 1, !dbg !3241
  call void @llvm.dbg.declare(metadata { i8, i8 }* %x.dbg.spill, metadata !3221, metadata !DIExpression()), !dbg !3241
  store i8 0, i8* %_21, align 1, !dbg !3242
  %23 = bitcast { i8, i8 }* %_13 to {}*, !dbg !3243
  %24 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_13, i32 0, i32 0, !dbg !3243
  store i8 %x.0, i8* %24, align 1, !dbg !3243
  %25 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_13, i32 0, i32 1, !dbg !3243
  store i8 %x.1, i8* %25, align 1, !dbg !3243
  %26 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_13, i32 0, i32 0, !dbg !3243
  %27 = load i8, i8* %26, align 1, !dbg !3243
  %28 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_13, i32 0, i32 1, !dbg !3243
  %29 = load i8, i8* %28, align 1, !dbg !3243
; invoke core::iter::traits::iterator::Iterator::all::check::{{closure}}
  %_11 = invoke zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17h4bdda3824bf03e14E"(%"[closure@core::iter::traits::iterator::Iterator::all::check<(u8, u8), [closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]>::{closure#0}]"* align 1 %f, i8 %27, i8 %29)
          to label %bb4 unwind label %cleanup, !dbg !3243

bb10:                                             ; preds = %bb2
  br label %bb11, !dbg !3237

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_21, align 1, !dbg !3244
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %30 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h88b553f8594f52e7E"()
          to label %bb12 unwind label %cleanup, !dbg !3244

bb12:                                             ; preds = %bb11
  %31 = zext i1 %30 to i8, !dbg !3244
  store i8 %31, i8* %2, align 1, !dbg !3244
  br label %bb13, !dbg !3239

bb13:                                             ; preds = %bb9, %bb12
  %32 = load i8, i8* %2, align 1, !dbg !3245, !range !266, !noundef !19
  %33 = trunc i8 %32 to i1, !dbg !3245
  ret i1 %33, !dbg !3245

bb4:                                              ; preds = %bb3
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %34 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hbe9c1b26215460c4E"(i1 zeroext %_11)
          to label %bb5 unwind label %cleanup, !dbg !3243

bb5:                                              ; preds = %bb4
  %35 = zext i1 %34 to i8, !dbg !3243
  store i8 %35, i8* %_10, align 1, !dbg !3243
  %36 = load i8, i8* %_10, align 1, !dbg !3243, !range !266, !noundef !19
  %37 = trunc i8 %36 to i1, !dbg !3243
  %_16 = zext i1 %37 to i64, !dbg !3243
  switch i64 %_16, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !3243

bb7:                                              ; preds = %bb5
  unreachable, !dbg !3243

bb6:                                              ; preds = %bb5
  store i8 1, i8* %_21, align 1, !dbg !3246
  br label %bb1, !dbg !3237

bb8:                                              ; preds = %bb5
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %38 = invoke zeroext i1 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h1e66e656f3c187b8E"()
          to label %bb9 unwind label %cleanup, !dbg !3247

bb9:                                              ; preds = %bb8
  %39 = zext i1 %38 to i8, !dbg !3247
  store i8 %39, i8* %2, align 1, !dbg !3247
  br label %bb13, !dbg !3239

bb14:                                             ; preds = %bb16, %bb17
  br label %bb15, !dbg !3239

bb16:                                             ; preds = %bb17
  br label %bb14, !dbg !3239

bb15:                                             ; preds = %bb14
  %40 = bitcast { i8*, i32 }* %1 to i8**, !dbg !3248
  %41 = load i8*, i8** %40, align 8, !dbg !3248
  %42 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !3248
  %43 = load i32, i32* %42, align 8, !dbg !3248
  %44 = insertvalue { i8*, i32 } undef, i8* %41, 0, !dbg !3248
  %45 = insertvalue { i8*, i32 } %44, i32 %43, 1, !dbg !3248
  resume { i8*, i32 } %45, !dbg !3248
}

; core::iter::traits::iterator::Iterator::enumerate
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator9enumerate17h117ad964b76af218E(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* sret(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>") %0, i8* %self.0, i8* %self.1) unnamed_addr #0 !dbg !3249 {
start:
  %self.dbg.spill = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 1
  store i8* %self.1, i8** %2, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %self.dbg.spill, metadata !3253, metadata !DIExpression()), !dbg !3256
; call core::iter::adapters::enumerate::Enumerate<I>::new
  call void @"_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h1de30b20327c77b3E"(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* sret(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>") %0, i8* %self.0, i8* %self.1), !dbg !3257
  br label %bb1, !dbg !3257

bb1:                                              ; preds = %start
  ret void, !dbg !3258
}

; core::iter::adapters::zip::Zip<A,B>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h000d4d698fdadbdbE"(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* sret(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>") %0, i8* %a.0, i8* %a.1, i8* %b.0, i8* %b.1) unnamed_addr #1 !dbg !3259 {
start:
  %b.dbg.spill = alloca { i8*, i8* }, align 8
  %a.dbg.spill = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a.dbg.spill, i32 0, i32 0
  store i8* %a.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a.dbg.spill, i32 0, i32 1
  store i8* %a.1, i8** %2, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %a.dbg.spill, metadata !3261, metadata !DIExpression()), !dbg !3263
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b.dbg.spill, i32 0, i32 0
  store i8* %b.0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b.dbg.spill, i32 0, i32 1
  store i8* %b.1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %b.dbg.spill, metadata !3262, metadata !DIExpression()), !dbg !3264
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
  call void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17h217811916799bea8E"(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* sret(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>") %0, i8* %a.0, i8* %a.1, i8* %b.0, i8* %b.1), !dbg !3265
  br label %bb1, !dbg !3265

bb1:                                              ; preds = %start
  ret void, !dbg !3266
}

; core::iter::adapters::zip::Zip<A,B>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h69ef29024fdc950cE"(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* sret(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>") %0, i8* %a.0, i8* %a.1, i8* %b.0, i8* %b.1) unnamed_addr #1 !dbg !3267 {
start:
  %b.dbg.spill = alloca { i8*, i8* }, align 8
  %a.dbg.spill = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a.dbg.spill, i32 0, i32 0
  store i8* %a.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a.dbg.spill, i32 0, i32 1
  store i8* %a.1, i8** %2, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %a.dbg.spill, metadata !3269, metadata !DIExpression()), !dbg !3271
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b.dbg.spill, i32 0, i32 0
  store i8* %b.0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b.dbg.spill, i32 0, i32 1
  store i8* %b.1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %b.dbg.spill, metadata !3270, metadata !DIExpression()), !dbg !3272
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
  call void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17h737ceea019c6f944E"(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>"* sret(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>") %0, i8* %a.0, i8* %a.1, i8* %b.0, i8* %b.1), !dbg !3273
  br label %bb1, !dbg !3273

bb1:                                              ; preds = %start
  ret void, !dbg !3274
}

; core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hab0864515fa45a0fE({ i8*, i8* }* align 8 %self) unnamed_addr #1 !dbg !3275 {
start:
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_2 = alloca { i64, { i64, i64 } }, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !3281, metadata !DIExpression()), !dbg !3283
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h69a171558dec0b6eE"({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %_2, { i8*, i8* }* align 8 %self), !dbg !3284
  br label %bb1, !dbg !3284

bb1:                                              ; preds = %start
  %0 = bitcast { i64, { i64, i64 } }* %_2 to i64*, !dbg !3284
  %1 = load i64, i64* %0, align 8, !dbg !3284
  ret i64 %1, !dbg !3285
}

; core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hcb4ffd2378459e25E({ i8*, i8* }* align 8 %self) unnamed_addr #1 !dbg !3286 {
start:
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_2 = alloca { i64, { i64, i64 } }, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !3291, metadata !DIExpression()), !dbg !3293
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h748bcbe8628c60b7E"({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %_2, { i8*, i8* }* align 8 %self), !dbg !3294
  br label %bb1, !dbg !3294

bb1:                                              ; preds = %start
  %0 = bitcast { i64, { i64, i64 } }* %_2 to i64*, !dbg !3294
  %1 = load i64, i64* %0, align 8, !dbg !3294
  ret i64 %1, !dbg !3295
}

; core::iter::adapters::copied::Copied<I>::new
; Function Attrs: nonlazybind uwtable
define { i8*, i8* } @"_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17hfcf37a10df90156dE"(i8* %it.0, i8* %it.1) unnamed_addr #1 !dbg !3296 {
start:
  %it.dbg.spill = alloca { i8*, i8* }, align 8
  %0 = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %it.dbg.spill, i32 0, i32 0
  store i8* %it.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %it.dbg.spill, i32 0, i32 1
  store i8* %it.1, i8** %2, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %it.dbg.spill, metadata !3298, metadata !DIExpression()), !dbg !3299
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 0, !dbg !3300
  store i8* %it.0, i8** %3, align 8, !dbg !3300
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 1, !dbg !3300
  store i8* %it.1, i8** %4, align 8, !dbg !3300
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 0, !dbg !3301
  %6 = load i8*, i8** %5, align 8, !dbg !3301, !nonnull !19, !noundef !19
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 1, !dbg !3301
  %8 = load i8*, i8** %7, align 8, !dbg !3301
  %9 = insertvalue { i8*, i8* } undef, i8* %6, 0, !dbg !3301
  %10 = insertvalue { i8*, i8* } %9, i8* %8, 1, !dbg !3301
  ret { i8*, i8* } %10, !dbg !3301
}

; core::iter::adapters::enumerate::Enumerate<I>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h1de30b20327c77b3E"(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* sret(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>") %0, i8* %iter.0, i8* %iter.1) unnamed_addr #1 !dbg !3302 {
start:
  %iter.dbg.spill = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter.dbg.spill, i32 0, i32 0
  store i8* %iter.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter.dbg.spill, i32 0, i32 1
  store i8* %iter.1, i8** %2, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %iter.dbg.spill, metadata !3304, metadata !DIExpression()), !dbg !3305
  %3 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* %0 to { i8*, i8* }*, !dbg !3306
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 0, !dbg !3306
  store i8* %iter.0, i8** %4, align 8, !dbg !3306
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 1, !dbg !3306
  store i8* %iter.1, i8** %5, align 8, !dbg !3306
  %6 = getelementptr inbounds %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>", %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* %0, i32 0, i32 1, !dbg !3306
  store i64 0, i64* %6, align 8, !dbg !3306
  ret void, !dbg !3307
}

; core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17he344d24537209facE"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #1 !dbg !3308 {
start:
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3313, metadata !DIExpression()), !dbg !3315
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !3314, metadata !DIExpression()), !dbg !3316
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %4 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17h96cf66691151e4e6E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1), !dbg !3317
  br label %bb1, !dbg !3317

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !3318
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17ha977156ac332a7d0E"([0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !3319 {
start:
  %ptr.dbg.spill10 = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill9 = alloca i64, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %count.dbg.spill7 = alloca i64, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %1 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %2 = alloca {}*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_31 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_18 = alloca i8*, align 8
  %end = alloca i8*, align 8
  %3 = alloca { i8*, i8* }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !3322, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.declare(metadata i8** %end, metadata !3325, metadata !DIExpression()), !dbg !3328
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !3329, metadata !DIExpression()), !dbg !3336
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !3349
  store [0 x i8]* %slice.0, [0 x i8]** %6, align 8, !dbg !3349
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !3349
  store i64 %slice.1, i64* %7, align 8, !dbg !3349
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3350, metadata !DIExpression()), !dbg !3356
  %ptr = bitcast [0 x i8]* %slice.0 to i8*, !dbg !3356
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !3356
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3323, metadata !DIExpression()), !dbg !3357
  store i8* %ptr, i8** %self.dbg.spill1, align 8, !dbg !3348
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !3346, metadata !DIExpression()), !dbg !3358
  store i8* %ptr, i8** %self.dbg.spill2, align 8, !dbg !3358
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !3359, metadata !DIExpression()), !dbg !3366
  %8 = bitcast {}** %2 to i64*, !dbg !3368
  store i64 0, i64* %8, align 8, !dbg !3368
  %data_address = load {}*, {}** %2, align 8, !dbg !3368
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !3368
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !3335, metadata !DIExpression()), !dbg !3336
  br label %bb5, !dbg !3368

bb5:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to {}**, !dbg !3336
  store {}* %data_address, {}** %9, align 8, !dbg !3336
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !3336
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !3336
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to i8*, !dbg !3336
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !3336
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to i8**, !dbg !3336
  %other = load i8*, i8** %13, align 8, !dbg !3336
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !3336
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !3365, metadata !DIExpression()), !dbg !3366
  %14 = icmp eq i8* %ptr, %other, !dbg !3366
  %15 = zext i1 %14 to i8, !dbg !3366
  store i8 %15, i8* %1, align 1, !dbg !3366
  %16 = load i8, i8* %1, align 1, !dbg !3366, !range !266, !noundef !19
  %_6 = trunc i8 %16 to i1, !dbg !3366
  br label %bb6, !dbg !3366

bb6:                                              ; preds = %bb5
  %_5 = xor i1 %_6, true, !dbg !3377
  call void @llvm.assume(i1 %_5), !dbg !3378
  br label %bb1, !dbg !3378

bb1:                                              ; preds = %bb6
  br i1 false, label %bb2, label %bb3, !dbg !3379

bb2:                                              ; preds = %bb1
  store i8* %ptr, i8** %self.dbg.spill6, align 8, !dbg !3380
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !3381, metadata !DIExpression()), !dbg !3386
  store i64 %slice.1, i64* %count.dbg.spill7, align 8, !dbg !3387
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill7, metadata !3385, metadata !DIExpression()), !dbg !3386
  store i8* %ptr, i8** %self.dbg.spill8, align 8, !dbg !3386
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !3388, metadata !DIExpression()), !dbg !3393
  store i64 %slice.1, i64* %count.dbg.spill9, align 8, !dbg !3386
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill9, metadata !3392, metadata !DIExpression()), !dbg !3393
  %17 = getelementptr i8, i8* %ptr, i64 %slice.1, !dbg !3393
  store i8* %17, i8** %0, align 8, !dbg !3393
  %_10 = load i8*, i8** %0, align 8, !dbg !3393
  br label %bb7, !dbg !3393

bb3:                                              ; preds = %bb1
  store i8* %ptr, i8** %self.dbg.spill3, align 8, !dbg !3395
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !3396, metadata !DIExpression()), !dbg !3401
  store i64 %slice.1, i64* %count.dbg.spill, align 8, !dbg !3402
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !3400, metadata !DIExpression()), !dbg !3401
  store i8* %ptr, i8** %self.dbg.spill4, align 8, !dbg !3401
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !3403, metadata !DIExpression()), !dbg !3408
  store i64 %slice.1, i64* %count.dbg.spill5, align 8, !dbg !3401
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !3407, metadata !DIExpression()), !dbg !3408
  %18 = getelementptr inbounds i8, i8* %ptr, i64 %slice.1, !dbg !3408
  store i8* %18, i8** %end, align 8, !dbg !3408
  br label %bb8, !dbg !3408

bb8:                                              ; preds = %bb3
  br label %bb4, !dbg !3410

bb4:                                              ; preds = %bb7, %bb8
  store i8* %ptr, i8** %ptr.dbg.spill10, align 8, !dbg !3411
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill10, metadata !3412, metadata !DIExpression()), !dbg !3420
  store i8* %ptr, i8** %_18, align 8, !dbg !3420
  %_21 = load i8*, i8** %end, align 8, !dbg !3422
  %19 = bitcast { i8*, i8* }* %3 to i8**, !dbg !3423
  %20 = load i8*, i8** %_18, align 8, !dbg !3423, !nonnull !19, !noundef !19
  store i8* %20, i8** %19, align 8, !dbg !3423
  %21 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 1, !dbg !3423
  store i8* %_21, i8** %21, align 8, !dbg !3423
  %22 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 0, !dbg !3424
  %23 = load i8*, i8** %22, align 8, !dbg !3424, !nonnull !19, !noundef !19
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 1, !dbg !3424
  %25 = load i8*, i8** %24, align 8, !dbg !3424
  %26 = insertvalue { i8*, i8* } undef, i8* %23, 0, !dbg !3424
  %27 = insertvalue { i8*, i8* } %26, i8* %25, 1, !dbg !3424
  ret { i8*, i8* } %27, !dbg !3424

bb7:                                              ; preds = %bb2
  store i8* %_10, i8** %end, align 8, !dbg !3380
  br label %bb4, !dbg !3410
}

; core::slice::iter::Iter<T>::as_slice
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17ha674f49ca7c71770E"({ i8*, i8* }* align 8 %self) unnamed_addr #1 !dbg !3425 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill15 = alloca i8*, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill14 = alloca i8*, align 8
  %self.dbg.spill13 = alloca i8*, align 8
  %self.dbg.spill12 = alloca i64, align 8
  %1 = alloca i64, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %diff.dbg.spill = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { i8*, i8* }*, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_42 = alloca { i8*, i64 }, align 8
  %_41 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %len = alloca i64, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !3429, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.declare(metadata i64* %len, metadata !3431, metadata !DIExpression()), !dbg !3449
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill1, align 8, !dbg !3465
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill1, metadata !3454, metadata !DIExpression()), !dbg !3466
  %5 = bitcast { i8*, i8* }* %self to i8**, !dbg !3466
  %self2 = load i8*, i8** %5, align 8, !dbg !3466, !nonnull !19, !noundef !19
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !3466
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !3467, metadata !DIExpression()), !dbg !3473
  store i8* %self2, i8** %data.dbg.spill, align 8, !dbg !3466
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !3439, metadata !DIExpression()), !dbg !3449
  %6 = bitcast { i8*, i8* }* %self to i8**, !dbg !3466
  %start4 = load i8*, i8** %6, align 8, !dbg !3466, !nonnull !19, !noundef !19
  store i8* %start4, i8** %start.dbg.spill, align 8, !dbg !3466
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !3456, metadata !DIExpression()), !dbg !3475
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !3476
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !3459, metadata !DIExpression()), !dbg !3488
  br i1 false, label %bb1, label %bb2, !dbg !3488

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !3488
  %self9 = load i8*, i8** %7, align 8, !dbg !3488
  store i8* %self9, i8** %self.dbg.spill10, align 8, !dbg !3488
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !3489, metadata !DIExpression()), !dbg !3493
  %8 = bitcast i64* %1 to i8**, !dbg !3493
  store i8* %self9, i8** %8, align 8, !dbg !3493
  %self11 = load i64, i64* %1, align 8, !dbg !3493
  store i64 %self11, i64* %self.dbg.spill12, align 8, !dbg !3493
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill12, metadata !3495, metadata !DIExpression()), !dbg !3501
  br label %bb6, !dbg !3493

bb2:                                              ; preds = %start
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !3488
  %self5 = load i8*, i8** %9, align 8, !dbg !3488
  store i8* %self5, i8** %self.dbg.spill6, align 8, !dbg !3488
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !3502, metadata !DIExpression()), !dbg !3506
  %10 = bitcast i64* %4 to i8**, !dbg !3506
  store i8* %self5, i8** %10, align 8, !dbg !3506
  %_17 = load i64, i64* %4, align 8, !dbg !3506
  br label %bb8, !dbg !3506

bb8:                                              ; preds = %bb2
  store i8* %start4, i8** %self.dbg.spill7, align 8, !dbg !3488
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !3508, metadata !DIExpression()), !dbg !3512
  store i8* %start4, i8** %self.dbg.spill8, align 8, !dbg !3512
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !3514, metadata !DIExpression()), !dbg !3523
  %11 = bitcast i64* %3 to i8**, !dbg !3523
  store i8* %start4, i8** %11, align 8, !dbg !3523
  %_19 = load i64, i64* %3, align 8, !dbg !3523
  br label %bb9, !dbg !3523

bb9:                                              ; preds = %bb8
  %12 = sub nuw i64 %_17, %_19, !dbg !3488
  store i64 %12, i64* %2, align 8, !dbg !3488
  %diff = load i64, i64* %2, align 8, !dbg !3488
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !3488
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !3462, metadata !DIExpression()), !dbg !3524
  br label %bb3, !dbg !3488

bb3:                                              ; preds = %bb9
  %13 = udiv exact i64 %diff, 1, !dbg !3524
  store i64 %13, i64* %len, align 8, !dbg !3524
  br label %bb4, !dbg !3524

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !3488

bb5:                                              ; preds = %bb7, %bb4
  store i8* %self2, i8** %data.dbg.spill15, align 8, !dbg !3449
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill15, metadata !3525, metadata !DIExpression()), !dbg !3530
  %len16 = load i64, i64* %len, align 8, !dbg !3449
  store i64 %len16, i64* %len.dbg.spill, align 8, !dbg !3449
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3529, metadata !DIExpression()), !dbg !3530
  store i8* %self2, i8** %self.dbg.spill17, align 8, !dbg !3530
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !3532, metadata !DIExpression()), !dbg !3536
  %data_address = bitcast i8* %self2 to {}*, !dbg !3536
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !3536
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !3538, metadata !DIExpression()), !dbg !3543
  store i64 %len16, i64* %metadata.dbg.spill, align 8, !dbg !3530
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !3542, metadata !DIExpression()), !dbg !3543
  %14 = bitcast { i8*, i64 }* %_42 to {}**, !dbg !3543
  store {}* %data_address, {}** %14, align 8, !dbg !3543
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_42, i32 0, i32 1, !dbg !3543
  store i64 %len16, i64* %15, align 8, !dbg !3543
  %16 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_41 to { i8*, i64 }*, !dbg !3543
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_42, i32 0, i32 0, !dbg !3543
  %18 = load i8*, i8** %17, align 8, !dbg !3543
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_42, i32 0, i32 1, !dbg !3543
  %20 = load i64, i64* %19, align 8, !dbg !3543
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %16, i32 0, i32 0, !dbg !3543
  store i8* %18, i8** %21, align 8, !dbg !3543
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %16, i32 0, i32 1, !dbg !3543
  store i64 %20, i64* %22, align 8, !dbg !3543
  %23 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_41 to { [0 x i8]*, i64 }*, !dbg !3543
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 0, !dbg !3543
  %_34.0 = load [0 x i8]*, [0 x i8]** %24, align 8, !dbg !3543
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 1, !dbg !3543
  %_34.1 = load i64, i64* %25, align 8, !dbg !3543
  %26 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_34.0, 0, !dbg !3545
  %27 = insertvalue { [0 x i8]*, i64 } %26, i64 %_34.1, 1, !dbg !3545
  ret { [0 x i8]*, i64 } %27, !dbg !3545

bb6:                                              ; preds = %bb1
  store i8* %start4, i8** %self.dbg.spill13, align 8, !dbg !3488
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill13, metadata !3546, metadata !DIExpression()), !dbg !3550
  store i8* %start4, i8** %self.dbg.spill14, align 8, !dbg !3550
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill14, metadata !3552, metadata !DIExpression()), !dbg !3556
  %28 = bitcast i64* %0 to i8**, !dbg !3556
  store i8* %start4, i8** %28, align 8, !dbg !3556
  %rhs = load i64, i64* %0, align 8, !dbg !3556
  store i64 %rhs, i64* %rhs.dbg.spill, align 8, !dbg !3556
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !3500, metadata !DIExpression()), !dbg !3501
  br label %bb7, !dbg !3556

bb7:                                              ; preds = %bb6
  %29 = sub i64 %self11, %rhs, !dbg !3501
  store i64 %29, i64* %len, align 8, !dbg !3501
  br label %bb5, !dbg !3488
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$3map17h512574eb021baf48E"(i32 %0, i32 %1) unnamed_addr #0 !dbg !3557 {
start:
  %x.dbg.spill = alloca i32, align 4
  %f.dbg.spill = alloca %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]", align 1
  %_9 = alloca i8, align 1
  %_7 = alloca i32, align 4
  %2 = alloca i32, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata { i32, i32 }* %self, metadata !3564, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.declare(metadata %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]"* %f.dbg.spill, metadata !3565, metadata !DIExpression()), !dbg !3572
  store i8 1, i8* %_9, align 1, !dbg !3573
  %5 = bitcast { i32, i32 }* %self to i32*, !dbg !3573
  %6 = load i32, i32* %5, align 4, !dbg !3573, !range !1519, !noundef !19
  %_3 = zext i32 %6 to i64, !dbg !3573
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !3574

bb2:                                              ; preds = %start
  unreachable, !dbg !3573

bb1:                                              ; preds = %start
  store i32 1114112, i32* %2, align 4, !dbg !3575
  br label %bb7, !dbg !3575

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1, !dbg !3576
  %x = load i32, i32* %7, align 4, !dbg !3576
  store i32 %x, i32* %x.dbg.spill, align 4, !dbg !3576
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill, metadata !3566, metadata !DIExpression()), !dbg !3577
  store i8 0, i8* %_9, align 1, !dbg !3578
  store i32 %x, i32* %_7, align 4, !dbg !3578
  %8 = load i32, i32* %_7, align 4, !dbg !3578
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
  %_5 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hcffcd55cd65fd083E"(i32 %8), !dbg !3578, !range !478
  br label %bb4, !dbg !3578

bb4:                                              ; preds = %bb3
  store i32 %_5, i32* %2, align 4, !dbg !3579
  br label %bb7, !dbg !3580

bb7:                                              ; preds = %bb1, %bb4
  %9 = load i8, i8* %_9, align 1, !dbg !3581, !range !266, !noundef !19
  %10 = trunc i8 %9 to i1, !dbg !3581
  br i1 %10, label %bb6, label %bb5, !dbg !3581

bb5:                                              ; preds = %bb6, %bb7
  %11 = load i32, i32* %2, align 4, !dbg !3582, !range !477, !noundef !19
  ret i32 %11, !dbg !3582

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !3581
}

; core::option::Option<T>::is_none
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h842d5359bdf9a9d2E"({ i32, i64 }* align 8 %self) unnamed_addr #0 !dbg !3583 {
start:
  %self.dbg.spill1 = alloca { i32, i64 }*, align 8
  %self.dbg.spill = alloca { i32, i64 }*, align 8
  %_2 = alloca i8, align 1
  store { i32, i64 }* %self, { i32, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32, i64 }** %self.dbg.spill, metadata !3605, metadata !DIExpression()), !dbg !3606
  store { i32, i64 }* %self, { i32, i64 }** %self.dbg.spill1, align 8, !dbg !3607
  call void @llvm.dbg.declare(metadata { i32, i64 }** %self.dbg.spill1, metadata !3608, metadata !DIExpression()), !dbg !3611
  %0 = bitcast { i32, i64 }* %self to i32*, !dbg !3611
  %1 = load i32, i32* %0, align 8, !dbg !3611, !range !477, !noundef !19
  %2 = sub i32 %1, 1114112, !dbg !3611
  %3 = icmp eq i32 %2, 0, !dbg !3611
  %_4 = select i1 %3, i64 0, i64 1, !dbg !3611
  %4 = icmp eq i64 %_4, 1, !dbg !3611
  br i1 %4, label %bb3, label %bb2, !dbg !3611

bb3:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !3611
  br label %bb1, !dbg !3611

bb2:                                              ; preds = %start
  store i8 0, i8* %_2, align 1, !dbg !3611
  br label %bb1, !dbg !3611

bb1:                                              ; preds = %bb3, %bb2
  %5 = load i8, i8* %_2, align 1, !dbg !3612, !range !266, !noundef !19
  %6 = trunc i8 %5 to i1, !dbg !3612
  %7 = xor i1 %6, true, !dbg !3612
  ret i1 %7, !dbg !3613
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha4a48964b3dc122bE"(i64 %0, i8* align 1 %op.0, i64 %op.1) unnamed_addr #0 !dbg !3614 {
start:
  %t.dbg.spill = alloca float, align 4
  %e.dbg.spill = alloca i8, align 1
  %op.dbg.spill = alloca { i8*, i64 }, align 8
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %1 = alloca %"core::result::Result<f32, ParseFloatError>", align 4
  %2 = alloca i64, align 8
  %self = alloca %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>", align 4
  store i64 %0, i64* %2, align 8
  %3 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %self to i8*
  %4 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 8, i1 false)
  call void @llvm.dbg.declare(metadata %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %self, metadata !3642, metadata !DIExpression()), !dbg !3651
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %op.dbg.spill, i32 0, i32 0
  store i8* %op.0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %op.dbg.spill, i32 0, i32 1
  store i64 %op.1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %op.dbg.spill, metadata !3643, metadata !DIExpression()), !dbg !3652
  store i8 1, i8* %_11, align 1, !dbg !3653
  %7 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %self to i8*, !dbg !3653
  %8 = load i8, i8* %7, align 4, !dbg !3653, !range !266, !noundef !19
  %9 = trunc i8 %8 to i1, !dbg !3653
  %_3 = zext i1 %9 to i64, !dbg !3653
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3654

bb2:                                              ; preds = %start
  unreachable, !dbg !3653

bb3:                                              ; preds = %start
  %10 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %self to %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Ok"*, !dbg !3655
  %11 = getelementptr inbounds %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Ok", %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Ok"* %10, i32 0, i32 1, !dbg !3655
  %t = load float, float* %11, align 4, !dbg !3655
  store float %t, float* %t.dbg.spill, align 4, !dbg !3655
  call void @llvm.dbg.declare(metadata float* %t.dbg.spill, metadata !3644, metadata !DIExpression()), !dbg !3656
  %12 = bitcast %"core::result::Result<f32, ParseFloatError>"* %1 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !3657
  %13 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %12, i32 0, i32 1, !dbg !3657
  store float %t, float* %13, align 4, !dbg !3657
  %14 = bitcast %"core::result::Result<f32, ParseFloatError>"* %1 to i8*, !dbg !3657
  store i8 0, i8* %14, align 4, !dbg !3657
  br label %bb7, !dbg !3658

bb1:                                              ; preds = %start
  %15 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %self to %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Err"*, !dbg !3659
  %16 = getelementptr inbounds %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Err", %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>::Err"* %15, i32 0, i32 1, !dbg !3659
  %17 = load i8, i8* %16, align 1, !dbg !3659, !range !266, !noundef !19
  %e = trunc i8 %17 to i1, !dbg !3659
  %18 = zext i1 %e to i8, !dbg !3659
  store i8 %18, i8* %e.dbg.spill, align 1, !dbg !3659
  call void @llvm.dbg.declare(metadata i8* %e.dbg.spill, metadata !3646, metadata !DIExpression()), !dbg !3660
  store i8 0, i8* %_11, align 1, !dbg !3661
  %19 = zext i1 %e to i8, !dbg !3661
  store i8 %19, i8* %_9, align 1, !dbg !3661
  %20 = load i8, i8* %_9, align 1, !dbg !3661, !range !266, !noundef !19
  %21 = trunc i8 %20 to i1, !dbg !3661
; call <f32 as num_traits::Num>::from_str_radix::{{closure}}
  %_7 = call zeroext i1 @"_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix28_$u7b$$u7b$closure$u7d$$u7d$17h38734442aa3cd03bE"(i8* align 1 %op.0, i64 %op.1, i1 zeroext %21), !dbg !3661
  br label %bb4, !dbg !3661

bb4:                                              ; preds = %bb1
  %22 = bitcast %"core::result::Result<f32, ParseFloatError>"* %1 to %"core::result::Result<f32, ParseFloatError>::Err"*, !dbg !3662
  %23 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Err", %"core::result::Result<f32, ParseFloatError>::Err"* %22, i32 0, i32 1, !dbg !3662
  %24 = zext i1 %_7 to i8, !dbg !3662
  store i8 %24, i8* %23, align 1, !dbg !3662
  %25 = bitcast %"core::result::Result<f32, ParseFloatError>"* %1 to i8*, !dbg !3662
  store i8 1, i8* %25, align 4, !dbg !3662
  br label %bb7, !dbg !3663

bb7:                                              ; preds = %bb3, %bb4
  %26 = load i8, i8* %_11, align 1, !dbg !3664, !range !266, !noundef !19
  %27 = trunc i8 %26 to i1, !dbg !3664
  br i1 %27, label %bb6, label %bb5, !dbg !3664

bb5:                                              ; preds = %bb6, %bb7
  %28 = bitcast %"core::result::Result<f32, ParseFloatError>"* %1 to i64*, !dbg !3665
  %29 = load i64, i64* %28, align 4, !dbg !3665
  ret i64 %29, !dbg !3665

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !3664
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hb519e03d703bef08E"(%"core::result::Result<f64, ParseFloatError>"* sret(%"core::result::Result<f64, ParseFloatError>") %0, %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* %self, i8* align 1 %op.0, i64 %op.1) unnamed_addr #0 !dbg !3666 {
start:
  %t.dbg.spill = alloca double, align 8
  %e.dbg.spill = alloca i8, align 1
  %op.dbg.spill = alloca { i8*, i64 }, align 8
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* %self, metadata !3689, metadata !DIExpression()), !dbg !3697
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %op.dbg.spill, i32 0, i32 0
  store i8* %op.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %op.dbg.spill, i32 0, i32 1
  store i64 %op.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %op.dbg.spill, metadata !3690, metadata !DIExpression()), !dbg !3698
  store i8 1, i8* %_11, align 1, !dbg !3699
  %3 = bitcast %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* %self to i8*, !dbg !3699
  %4 = load i8, i8* %3, align 8, !dbg !3699, !range !266, !noundef !19
  %5 = trunc i8 %4 to i1, !dbg !3699
  %_3 = zext i1 %5 to i64, !dbg !3699
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3700

bb2:                                              ; preds = %start
  unreachable, !dbg !3699

bb3:                                              ; preds = %start
  %6 = bitcast %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* %self to %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Ok"*, !dbg !3701
  %7 = getelementptr inbounds %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Ok", %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Ok"* %6, i32 0, i32 1, !dbg !3701
  %t = load double, double* %7, align 8, !dbg !3701
  store double %t, double* %t.dbg.spill, align 8, !dbg !3701
  call void @llvm.dbg.declare(metadata double* %t.dbg.spill, metadata !3691, metadata !DIExpression()), !dbg !3702
  %8 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !3703
  %9 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %8, i32 0, i32 1, !dbg !3703
  store double %t, double* %9, align 8, !dbg !3703
  %10 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !3703
  store i8 0, i8* %10, align 8, !dbg !3703
  br label %bb7, !dbg !3704

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* %self to %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Err"*, !dbg !3705
  %12 = getelementptr inbounds %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Err", %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>::Err"* %11, i32 0, i32 1, !dbg !3705
  %13 = load i8, i8* %12, align 1, !dbg !3705, !range !266, !noundef !19
  %e = trunc i8 %13 to i1, !dbg !3705
  %14 = zext i1 %e to i8, !dbg !3705
  store i8 %14, i8* %e.dbg.spill, align 1, !dbg !3705
  call void @llvm.dbg.declare(metadata i8* %e.dbg.spill, metadata !3693, metadata !DIExpression()), !dbg !3706
  store i8 0, i8* %_11, align 1, !dbg !3707
  %15 = zext i1 %e to i8, !dbg !3707
  store i8 %15, i8* %_9, align 1, !dbg !3707
  %16 = load i8, i8* %_9, align 1, !dbg !3707, !range !266, !noundef !19
  %17 = trunc i8 %16 to i1, !dbg !3707
; call <f64 as num_traits::Num>::from_str_radix::{{closure}}
  %_7 = call zeroext i1 @"_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix28_$u7b$$u7b$closure$u7d$$u7d$17hbd71b197aeed867dE"(i8* align 1 %op.0, i64 %op.1, i1 zeroext %17), !dbg !3707
  br label %bb4, !dbg !3707

bb4:                                              ; preds = %bb1
  %18 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Err"*, !dbg !3708
  %19 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Err", %"core::result::Result<f64, ParseFloatError>::Err"* %18, i32 0, i32 1, !dbg !3708
  %20 = zext i1 %_7 to i8, !dbg !3708
  store i8 %20, i8* %19, align 1, !dbg !3708
  %21 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !3708
  store i8 1, i8* %21, align 8, !dbg !3708
  br label %bb7, !dbg !3709

bb7:                                              ; preds = %bb3, %bb4
  %22 = load i8, i8* %_11, align 1, !dbg !3710, !range !266, !noundef !19
  %23 = trunc i8 %22 to i1, !dbg !3710
  br i1 %23, label %bb6, label %bb5, !dbg !3710

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !3711

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !3710
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1ac0ac8f0ea4d813E"(i8* %self.0, i8* %self.1) unnamed_addr #0 !dbg !3712 {
start:
  %self.dbg.spill = alloca { i8*, i8* }, align 8
  %0 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 1
  store i8* %self.1, i8** %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %self.dbg.spill, metadata !3719, metadata !DIExpression()), !dbg !3722
  %2 = insertvalue { i8*, i8* } undef, i8* %self.0, 0, !dbg !3723
  %3 = insertvalue { i8*, i8* } %2, i8* %self.1, 1, !dbg !3723
  ret { i8*, i8* } %3, !dbg !3723
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h99c7c5edb85f7ec6E"(i8* %self.0, i8* %self.1) unnamed_addr #0 !dbg !3724 {
start:
  %self.dbg.spill = alloca { i8*, i8* }, align 8
  %0 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 1
  store i8* %self.1, i8** %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %self.dbg.spill, metadata !3728, metadata !DIExpression()), !dbg !3729
  %2 = insertvalue { i8*, i8* } undef, i8* %self.0, 0, !dbg !3730
  %3 = insertvalue { i8*, i8* } %2, i8* %self.1, 1, !dbg !3730
  ret { i8*, i8* } %3, !dbg !3730
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfd42fc2a0daf9593E"(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* align 8 %self) unnamed_addr #0 !dbg !3731 {
start:
  %self.dbg.spill = alloca %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"*, align 8
  store %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* %self, %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** %self.dbg.spill, metadata !3733, metadata !DIExpression()), !dbg !3736
  ret %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* %self, !dbg !3737
}

; <[T] as core::convert::AsRef<[T]>>::as_ref
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17hbc654c52d10227c1E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !3738 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3744, metadata !DIExpression()), !dbg !3745
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %self.0, 0, !dbg !3746
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %self.1, 1, !dbg !3746
  ret { [0 x i8]*, i64 } %3, !dbg !3746
}

; <&mut I as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha8f876ab095cc07bE"(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** align 8 %self) unnamed_addr #0 !dbg !3747 {
start:
  %self.dbg.spill = alloca %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"**, align 8
  store %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** %self, %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"*** %self.dbg.spill, metadata !3753, metadata !DIExpression()), !dbg !3756
  %_3 = load %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"*, %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** %self, align 8, !dbg !3757, !nonnull !19, !align !1052, !noundef !19
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  %0 = call { i64, i32 } @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8661d2a79e81aa4fE"(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* align 8 %_3), !dbg !3757
  %1 = extractvalue { i64, i32 } %0, 0, !dbg !3757
  %2 = extractvalue { i64, i32 } %0, 1, !dbg !3757
  br label %bb1, !dbg !3757

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i32 } undef, i64 %1, 0, !dbg !3758
  %4 = insertvalue { i64, i32 } %3, i32 %2, 1, !dbg !3758
  ret { i64, i32 } %4, !dbg !3758
}

; <I as core::iter::adapters::zip::SpecTrustedRandomAccess>::try_get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 i8* @"_ZN72_$LT$I$u20$as$u20$core..iter..adapters..zip..SpecTrustedRandomAccess$GT$17try_get_unchecked17h48c4431c05125caeE"({ i8*, i8* }* align 8 %self, i64 %index) unnamed_addr #0 !dbg !3759 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !3762, metadata !DIExpression()), !dbg !3764
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !3763, metadata !DIExpression()), !dbg !3765
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %0 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h029f0420f93161dbE"({ i8*, i8* }* align 8 %self, i64 %index), !dbg !3766
  br label %bb1, !dbg !3766

bb1:                                              ; preds = %start
  ret i8* %0, !dbg !3767
}

; <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17h96cf66691151e4e6E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #1 !dbg !3768 {
start:
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %size.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %val.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca i8, align 1
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3771, metadata !DIExpression()), !dbg !3775
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !3772, metadata !DIExpression()), !dbg !3776
  %_3 = icmp ne i64 %self.1, %other.1, !dbg !3777
  br i1 %_3, label %bb1, label %bb2, !dbg !3777

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 0, !dbg !3778
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8, !dbg !3778
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 1, !dbg !3778
  store i64 %self.1, i64* %7, align 8, !dbg !3778
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %val.dbg.spill, metadata !3779, metadata !DIExpression()), !dbg !3785
  %8 = mul nsw i64 %self.1, 1, !dbg !3785
  store i64 %8, i64* %0, align 8, !dbg !3785
  %size = load i64, i64* %0, align 8, !dbg !3785
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !3785
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !3773, metadata !DIExpression()), !dbg !3787
  br label %bb5, !dbg !3785

bb1:                                              ; preds = %start
  store i8 0, i8* %1, align 1, !dbg !3788
  br label %bb4, !dbg !3789

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8, i8* %1, align 1, !dbg !3789, !range !266, !noundef !19
  %10 = trunc i8 %9 to i1, !dbg !3789
  ret i1 %10, !dbg !3789

bb5:                                              ; preds = %bb2
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !3790
  store [0 x i8]* %self.0, [0 x i8]** %11, align 8, !dbg !3790
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !3790
  store i64 %self.1, i64* %12, align 8, !dbg !3790
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !3791, metadata !DIExpression()), !dbg !3795
  %_12 = bitcast [0 x i8]* %self.0 to i8*, !dbg !3795
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !3796
  store [0 x i8]* %other.0, [0 x i8]** %13, align 8, !dbg !3796
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !3796
  store i64 %other.1, i64* %14, align 8, !dbg !3796
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !3797, metadata !DIExpression()), !dbg !3801
  %_15 = bitcast [0 x i8]* %other.0 to i8*, !dbg !3801
  %_10 = call i32 @memcmp(i8* %_12, i8* %_15, i64 %size), !dbg !3802
  br label %bb3, !dbg !3802

bb3:                                              ; preds = %bb5
  %15 = icmp eq i32 %_10, 0, !dbg !3802
  %16 = zext i1 %15 to i8, !dbg !3802
  store i8 %16, i8* %1, align 1, !dbg !3802
  br label %bb4, !dbg !3789
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h934df6cd5ceddcc0E"(i32 %0) unnamed_addr #0 !dbg !3803 {
start:
  %v.dbg.spill = alloca i32, align 4
  %1 = alloca i32, align 4
  %self = alloca i32, align 4
  store i32 %0, i32* %self, align 4
  call void @llvm.dbg.declare(metadata i32* %self, metadata !3805, metadata !DIExpression()), !dbg !3808
  %2 = load i32, i32* %self, align 4, !dbg !3809, !range !477, !noundef !19
  %3 = sub i32 %2, 1114112, !dbg !3809
  %4 = icmp eq i32 %3, 0, !dbg !3809
  %_2 = select i1 %4, i64 0, i64 1, !dbg !3809
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !3810

bb2:                                              ; preds = %start
  unreachable, !dbg !3809

bb1:                                              ; preds = %start
  store i32 1114112, i32* %1, align 4, !dbg !3811
  br label %bb4, !dbg !3812

bb3:                                              ; preds = %start
  %v = load i32, i32* %self, align 4, !dbg !3813, !range !478, !noundef !19
  store i32 %v, i32* %v.dbg.spill, align 4, !dbg !3813
  call void @llvm.dbg.declare(metadata i32* %v.dbg.spill, metadata !3806, metadata !DIExpression()), !dbg !3814
  store i32 %v, i32* %1, align 4, !dbg !3815
  br label %bb4, !dbg !3816

bb4:                                              ; preds = %bb1, %bb3
  %5 = load i32, i32* %1, align 4, !dbg !3817, !range !477, !noundef !19
  ret i32 %5, !dbg !3817
}

; <usize as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h3a9a8b8b453d5703E"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !3818 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill7 = alloca i64, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %1 = alloca i8*, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !3823, metadata !DIExpression()), !dbg !3825
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !3824, metadata !DIExpression()), !dbg !3826
  %_3 = icmp ult i64 %self, %slice.1, !dbg !3827
  br i1 %_3, label %bb1, label %bb2, !dbg !3827

bb2:                                              ; preds = %start
  %4 = bitcast i8** %1 to {}**, !dbg !3828
  store {}* null, {}** %4, align 8, !dbg !3828
  br label %bb3, !dbg !3829

bb1:                                              ; preds = %start
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !3830
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !3831, metadata !DIExpression()), !dbg !3845
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill2, i32 0, i32 0, !dbg !3846
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !3846
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill2, i32 0, i32 1, !dbg !3846
  store i64 %slice.1, i64* %6, align 8, !dbg !3846
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill2, metadata !3836, metadata !DIExpression()), !dbg !3845
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !3845
  store [0 x i8]* %slice.0, [0 x i8]** %7, align 8, !dbg !3845
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !3845
  store i64 %slice.1, i64* %8, align 8, !dbg !3845
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !3847, metadata !DIExpression()), !dbg !3851
  %self4 = bitcast [0 x i8]* %slice.0 to i8*, !dbg !3851
  store i8* %self4, i8** %self.dbg.spill5, align 8, !dbg !3851
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !3853, metadata !DIExpression()), !dbg !3858
  store i64 %self, i64* %count.dbg.spill, align 8, !dbg !3845
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !3857, metadata !DIExpression()), !dbg !3858
  store i8* %self4, i8** %self.dbg.spill6, align 8, !dbg !3858
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !3859, metadata !DIExpression()), !dbg !3864
  store i64 %self, i64* %count.dbg.spill7, align 8, !dbg !3858
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill7, metadata !3863, metadata !DIExpression()), !dbg !3864
  %9 = getelementptr inbounds i8, i8* %self4, i64 %self, !dbg !3864
  store i8* %9, i8** %0, align 8, !dbg !3864
  %_9 = load i8*, i8** %0, align 8, !dbg !3864
  br label %bb4, !dbg !3864

bb4:                                              ; preds = %bb1
  store i8* %_9, i8** %1, align 8, !dbg !3866
  br label %bb3, !dbg !3829

bb3:                                              ; preds = %bb2, %bb4
  %10 = load i8*, i8** %1, align 8, !dbg !3867, !align !627
  ret i8* %10, !dbg !3867
}

; <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h3121124e48e5ceddE"({ i8*, i8* }* align 8 %self, i64 %idx) unnamed_addr #0 !dbg !3868 {
start:
  %idx.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !3874, metadata !DIExpression()), !dbg !3876
  store i64 %idx, i64* %idx.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %idx.dbg.spill, metadata !3875, metadata !DIExpression()), !dbg !3877
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %0 = call i8 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h19dc1639f28d90b1E"({ i8*, i8* }* align 8 %self, i64 %idx), !dbg !3878
  br label %bb1, !dbg !3878

bb1:                                              ; preds = %start
  ret i8 %0, !dbg !3879
}

; <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h748bcbe8628c60b7E"({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %0, { i8*, i8* }* align 8 %self) unnamed_addr #0 !dbg !3880 {
start:
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !3884, metadata !DIExpression()), !dbg !3885
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h9ed59b6c5a0a8a4aE"({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %0, { i8*, i8* }* align 8 %self), !dbg !3886
  br label %bb1, !dbg !3886

bb1:                                              ; preds = %start
  ret void, !dbg !3887
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc2c8c40ef0f18e21E"({ i8*, i8* }* align 8 %self) unnamed_addr #0 !dbg !3888 {
start:
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !3893, metadata !DIExpression()), !dbg !3894
; call core::str::validations::next_code_point
  %0 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17h63a4f6bed0089488E({ i8*, i8* }* align 8 %self), !dbg !3895
  %_2.0 = extractvalue { i32, i32 } %0, 0, !dbg !3895
  %_2.1 = extractvalue { i32, i32 } %0, 1, !dbg !3895
  br label %bb1, !dbg !3895

bb1:                                              ; preds = %start
; call core::option::Option<T>::map
  %1 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17h512574eb021baf48E"(i32 %_2.0, i32 %_2.1), !dbg !3895, !range !477
  br label %bb2, !dbg !3895

bb2:                                              ; preds = %bb1
  ret i32 %1, !dbg !3896
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hcffcd55cd65fd083E"(i32 %ch) unnamed_addr #0 !dbg !3897 {
start:
  %0 = alloca i32, align 4
  %i.dbg.spill1 = alloca i32, align 4
  %i.dbg.spill = alloca i32, align 4
  %ch.dbg.spill = alloca i32, align 4
  %_1.dbg.spill = alloca %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]"* %_1.dbg.spill, metadata !3902, metadata !DIExpression()), !dbg !3903
  store i32 %ch, i32* %ch.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !3901, metadata !DIExpression()), !dbg !3904
  store i32 %ch, i32* %i.dbg.spill, align 4, !dbg !3905
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill, metadata !3906, metadata !DIExpression()), !dbg !3913
  store i32 %ch, i32* %i.dbg.spill1, align 4, !dbg !3913
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill1, metadata !3915, metadata !DIExpression()), !dbg !3921
  store i32 %ch, i32* %0, align 4, !dbg !3921
  %1 = load i32, i32* %0, align 4, !dbg !3921, !range !478, !noundef !19
  br label %bb1, !dbg !3921

bb1:                                              ; preds = %start
  ret i32 %1, !dbg !3923
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hba229eeb2623e15bE"(%"core::option::Option<(char, &str)>"* sret(%"core::option::Option<(char, &str)>") %0) unnamed_addr #0 !dbg !3924 {
start:
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !3945, metadata !DIExpression()), !dbg !3946
  %1 = bitcast %"core::option::Option<(char, &str)>"* %0 to i32*, !dbg !3947
  store i32 1114112, i32* %1, align 8, !dbg !3947
  ret void, !dbg !3948
}

; <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9c0c388c38acfc34E"(i8* align 1 %self, i8* align 1 %other) unnamed_addr #0 !dbg !3949 {
start:
  %__arg1_0.dbg.spill4 = alloca {}*, align 8
  %__self_0.dbg.spill2 = alloca {}*, align 8
  %__arg1_0.dbg.spill = alloca {}*, align 8
  %__self_0.dbg.spill = alloca {}*, align 8
  %__arg1_tag.dbg.spill = alloca i64, align 8
  %__self_tag.dbg.spill = alloca i64, align 8
  %other.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %_11 = alloca { i8*, i8* }, align 8
  %_10 = alloca i8, align 1
  %0 = alloca i8, align 1
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !3955, metadata !DIExpression()), !dbg !3967
  store i8* %other, i8** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !3956, metadata !DIExpression()), !dbg !3967
  %1 = load i8, i8* %self, align 1, !dbg !3967, !range !266, !noundef !19
  %2 = trunc i8 %1 to i1, !dbg !3967
  %__self_tag = zext i1 %2 to i64, !dbg !3967
  store i64 %__self_tag, i64* %__self_tag.dbg.spill, align 8, !dbg !3967
  call void @llvm.dbg.declare(metadata i64* %__self_tag.dbg.spill, metadata !3957, metadata !DIExpression()), !dbg !3968
  %3 = load i8, i8* %other, align 1, !dbg !3968, !range !266, !noundef !19
  %4 = trunc i8 %3 to i1, !dbg !3968
  %__arg1_tag = zext i1 %4 to i64, !dbg !3968
  store i64 %__arg1_tag, i64* %__arg1_tag.dbg.spill, align 8, !dbg !3968
  call void @llvm.dbg.declare(metadata i64* %__arg1_tag.dbg.spill, metadata !3959, metadata !DIExpression()), !dbg !3969
  %_7 = icmp eq i64 %__self_tag, %__arg1_tag, !dbg !3969
  br i1 %_7, label %bb2, label %bb1, !dbg !3969

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1, !dbg !3969
  br label %bb3, !dbg !3969

bb2:                                              ; preds = %start
  %5 = bitcast { i8*, i8* }* %_11 to i8**, !dbg !3969
  store i8* %self, i8** %5, align 8, !dbg !3969
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_11, i32 0, i32 1, !dbg !3969
  store i8* %other, i8** %6, align 8, !dbg !3969
  %7 = bitcast { i8*, i8* }* %_11 to i8**, !dbg !3969
  %_25 = load i8*, i8** %7, align 8, !dbg !3969, !nonnull !19, !align !627, !noundef !19
  %8 = load i8, i8* %_25, align 1, !dbg !3969, !range !266, !noundef !19
  %9 = trunc i8 %8 to i1, !dbg !3969
  %_16 = zext i1 %9 to i64, !dbg !3969
  switch i64 %_16, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ], !dbg !3969

bb5:                                              ; preds = %bb4, %bb6, %bb2
  unreachable, !dbg !3969

bb4:                                              ; preds = %bb2
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_11, i32 0, i32 1, !dbg !3969
  %_26 = load i8*, i8** %10, align 8, !dbg !3969, !nonnull !19, !align !627, !noundef !19
  %11 = load i8, i8* %_26, align 1, !dbg !3969, !range !266, !noundef !19
  %12 = trunc i8 %11 to i1, !dbg !3969
  %_14 = zext i1 %12 to i64, !dbg !3969
  %13 = icmp eq i64 %_14, 0, !dbg !3969
  br i1 %13, label %bb7, label %bb5, !dbg !3969

bb6:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_11, i32 0, i32 1, !dbg !3969
  %_27 = load i8*, i8** %14, align 8, !dbg !3969, !nonnull !19, !align !627, !noundef !19
  %15 = load i8, i8* %_27, align 1, !dbg !3969, !range !266, !noundef !19
  %16 = trunc i8 %15 to i1, !dbg !3969
  %_15 = zext i1 %16 to i64, !dbg !3969
  %17 = icmp eq i64 %_15, 1, !dbg !3969
  br i1 %17, label %bb9, label %bb5, !dbg !3969

bb9:                                              ; preds = %bb6
  %18 = bitcast { i8*, i8* }* %_11 to i8**, !dbg !3970
  %_30 = load i8*, i8** %18, align 8, !dbg !3970, !nonnull !19, !align !627, !noundef !19
  %19 = getelementptr i8, i8* %_30, i64 1, !dbg !3970
  %__self_0 = bitcast i8* %19 to {}*, !dbg !3970
  store {}* %__self_0, {}** %__self_0.dbg.spill, align 8, !dbg !3970
  call void @llvm.dbg.declare(metadata {}** %__self_0.dbg.spill, metadata !3964, metadata !DIExpression()), !dbg !3971
  %20 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_11, i32 0, i32 1, !dbg !3970
  %_31 = load i8*, i8** %20, align 8, !dbg !3970, !nonnull !19, !align !627, !noundef !19
  %21 = getelementptr i8, i8* %_31, i64 1, !dbg !3970
  %__arg1_0 = bitcast i8* %21 to {}*, !dbg !3970
  store {}* %__arg1_0, {}** %__arg1_0.dbg.spill, align 8, !dbg !3970
  call void @llvm.dbg.declare(metadata {}** %__arg1_0.dbg.spill, metadata !3966, metadata !DIExpression()), !dbg !3971
; call core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
  %22 = call zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17hedefb1bc4fc3afaaE"({}* align 1 %__self_0, {}* align 1 %__arg1_0), !dbg !3971
  %23 = zext i1 %22 to i8, !dbg !3971
  store i8 %23, i8* %_10, align 1, !dbg !3971
  br label %bb10, !dbg !3971

bb10:                                             ; preds = %bb9
  br label %bb11, !dbg !3972

bb11:                                             ; preds = %bb8, %bb10
  %24 = load i8, i8* %_10, align 1, !dbg !3969, !range !266, !noundef !19
  %25 = trunc i8 %24 to i1, !dbg !3969
  %26 = zext i1 %25 to i8, !dbg !3969
  store i8 %26, i8* %0, align 1, !dbg !3969
  br label %bb3, !dbg !3969

bb7:                                              ; preds = %bb4
  %27 = bitcast { i8*, i8* }* %_11 to i8**, !dbg !3973
  %_28 = load i8*, i8** %27, align 8, !dbg !3973, !nonnull !19, !align !627, !noundef !19
  %28 = getelementptr i8, i8* %_28, i64 1, !dbg !3973
  %__self_01 = bitcast i8* %28 to {}*, !dbg !3973
  store {}* %__self_01, {}** %__self_0.dbg.spill2, align 8, !dbg !3973
  call void @llvm.dbg.declare(metadata {}** %__self_0.dbg.spill2, metadata !3961, metadata !DIExpression()), !dbg !3974
  %29 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_11, i32 0, i32 1, !dbg !3973
  %_29 = load i8*, i8** %29, align 8, !dbg !3973, !nonnull !19, !align !627, !noundef !19
  %30 = getelementptr i8, i8* %_29, i64 1, !dbg !3973
  %__arg1_03 = bitcast i8* %30 to {}*, !dbg !3973
  store {}* %__arg1_03, {}** %__arg1_0.dbg.spill4, align 8, !dbg !3973
  call void @llvm.dbg.declare(metadata {}** %__arg1_0.dbg.spill4, metadata !3963, metadata !DIExpression()), !dbg !3974
; call core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
  %31 = call zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17hedefb1bc4fc3afaaE"({}* align 1 %__self_01, {}* align 1 %__arg1_03), !dbg !3974
  %32 = zext i1 %31 to i8, !dbg !3974
  store i8 %32, i8* %_10, align 1, !dbg !3974
  br label %bb8, !dbg !3974

bb8:                                              ; preds = %bb7
  br label %bb11, !dbg !3972

bb3:                                              ; preds = %bb1, %bb11
  %33 = load i8, i8* %0, align 1, !dbg !3975, !range !266, !noundef !19
  %34 = trunc i8 %33 to i1, !dbg !3975
  ret i1 %34, !dbg !3975
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h029f0420f93161dbE"({ i8*, i8* }* align 8 %self, i64 %idx) unnamed_addr #0 !dbg !3976 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %idx.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !3979, metadata !DIExpression()), !dbg !3981
  store i64 %idx, i64* %idx.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %idx.dbg.spill, metadata !3980, metadata !DIExpression()), !dbg !3982
  %1 = bitcast { i8*, i8* }* %self to i8**, !dbg !3983
  %self1 = load i8*, i8** %1, align 8, !dbg !3983, !nonnull !19, !noundef !19
  store i8* %self1, i8** %self.dbg.spill2, align 8, !dbg !3983
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !3984, metadata !DIExpression()), !dbg !3988
  store i8* %self1, i8** %self.dbg.spill3, align 8, !dbg !3988
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !3989, metadata !DIExpression()), !dbg !3996
  store i64 %idx, i64* %count.dbg.spill, align 8, !dbg !3997
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !3995, metadata !DIExpression()), !dbg !3996
  store i8* %self1, i8** %self.dbg.spill4, align 8, !dbg !3996
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !3998, metadata !DIExpression()), !dbg !4005
  store i64 %idx, i64* %count.dbg.spill5, align 8, !dbg !3996
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !4004, metadata !DIExpression()), !dbg !4005
  %2 = getelementptr inbounds i8, i8* %self1, i64 %idx, !dbg !4005
  store i8* %2, i8** %0, align 8, !dbg !4005
  %_11 = load i8*, i8** %0, align 8, !dbg !4005
  br label %bb1, !dbg !4005

bb1:                                              ; preds = %start
  ret i8* %_11, !dbg !4007
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h49c6b49183a26f7dE"({ i8*, i8* }* align 8 %self) unnamed_addr #0 !dbg !4008 {
start:
  %self.dbg.spill23 = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %self.dbg.spill21 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %self.dbg.spill20 = alloca i8*, align 8
  %self.dbg.spill19 = alloca i8*, align 8
  %old.dbg.spill = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i8* }*, align 8
  %self.dbg.spill14 = alloca i8*, align 8
  %2 = alloca i8, align 1
  %other.dbg.spill12 = alloca i8*, align 8
  %data_address.dbg.spill10 = alloca {}*, align 8
  %3 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %4 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %5 = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %metadata.dbg.spill1 = alloca {}, align 1
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_62 = alloca i8*, align 8
  %_47 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_46 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_19 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !4012, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !4014, metadata !DIExpression()), !dbg !4022
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill1, metadata !4035, metadata !DIExpression()), !dbg !4040
  %7 = bitcast { i8*, i8* }* %self to i8**, !dbg !4034
  %self2 = load i8*, i8** %7, align 8, !dbg !4034, !nonnull !19, !noundef !19
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !4034
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !4049, metadata !DIExpression()), !dbg !4053
  store i8* %self2, i8** %self.dbg.spill4, align 8, !dbg !4053
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !4032, metadata !DIExpression()), !dbg !4054
  store i8* %self2, i8** %self.dbg.spill5, align 8, !dbg !4054
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !4055, metadata !DIExpression()), !dbg !4062
  %8 = bitcast {}** %5 to i64*, !dbg !4064
  store i64 0, i64* %8, align 8, !dbg !4064
  %data_address = load {}*, {}** %5, align 8, !dbg !4064
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !4064
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !4021, metadata !DIExpression()), !dbg !4022
  br label %bb9, !dbg !4064

bb9:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to {}**, !dbg !4022
  store {}* %data_address, {}** %9, align 8, !dbg !4022
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !4022
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !4022
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to i8*, !dbg !4022
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !4022
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to i8**, !dbg !4022
  %other = load i8*, i8** %13, align 8, !dbg !4022
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !4022
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !4061, metadata !DIExpression()), !dbg !4062
  %14 = icmp eq i8* %self2, %other, !dbg !4062
  %15 = zext i1 %14 to i8, !dbg !4062
  store i8 %15, i8* %4, align 1, !dbg !4062
  %16 = load i8, i8* %4, align 1, !dbg !4062, !range !266, !noundef !19
  %_4 = trunc i8 %16 to i1, !dbg !4062
  br label %bb10, !dbg !4062

bb10:                                             ; preds = %bb9
  %_3 = xor i1 %_4, true, !dbg !4072
  call void @llvm.assume(i1 %_3), !dbg !4073
  br label %bb1, !dbg !4073

bb1:                                              ; preds = %bb10
  br i1 false, label %bb4, label %bb2, !dbg !4074

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !4075

bb2:                                              ; preds = %bb1
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !4048
  %self6 = load i8*, i8** %17, align 8, !dbg !4048
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !4048
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !4046, metadata !DIExpression()), !dbg !4076
  store i8* %self6, i8** %self.dbg.spill8, align 8, !dbg !4076
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !4077, metadata !DIExpression()), !dbg !4082
  %18 = bitcast {}** %3 to i64*, !dbg !4084
  store i64 0, i64* %18, align 8, !dbg !4084
  %data_address9 = load {}*, {}** %3, align 8, !dbg !4084
  store {}* %data_address9, {}** %data_address.dbg.spill10, align 8, !dbg !4084
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill10, metadata !4039, metadata !DIExpression()), !dbg !4040
  br label %bb11, !dbg !4084

bb11:                                             ; preds = %bb2
  %19 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to {}**, !dbg !4040
  store {}* %data_address9, {}** %19, align 8, !dbg !4040
  %20 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !4040
  %21 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %20 to i8*, !dbg !4040
  %22 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to i8*, !dbg !4040
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 8, i1 false), !dbg !4040
  %23 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to i8**, !dbg !4040
  %other11 = load i8*, i8** %23, align 8, !dbg !4040
  store i8* %other11, i8** %other.dbg.spill12, align 8, !dbg !4040
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill12, metadata !4081, metadata !DIExpression()), !dbg !4082
  %24 = icmp eq i8* %self6, %other11, !dbg !4082
  %25 = zext i1 %24 to i8, !dbg !4082
  store i8 %25, i8* %2, align 1, !dbg !4082
  %26 = load i8, i8* %2, align 1, !dbg !4082, !range !266, !noundef !19
  %_10 = trunc i8 %26 to i1, !dbg !4082
  br label %bb12, !dbg !4082

bb12:                                             ; preds = %bb11
  %_9 = xor i1 %_10, true, !dbg !4090
  call void @llvm.assume(i1 %_9), !dbg !4091
  br label %bb3, !dbg !4091

bb3:                                              ; preds = %bb12
  br label %bb5, !dbg !4075

bb5:                                              ; preds = %bb4, %bb3
  %27 = bitcast { i8*, i8* }* %self to i8**, !dbg !4092
  %self13 = load i8*, i8** %27, align 8, !dbg !4092, !nonnull !19, !noundef !19
  store i8* %self13, i8** %self.dbg.spill14, align 8, !dbg !4092
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill14, metadata !4093, metadata !DIExpression()), !dbg !4097
  %28 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !4092
  %_16 = load i8*, i8** %28, align 8, !dbg !4092
  %_12 = icmp eq i8* %self13, %_16, !dbg !4092
  br i1 %_12, label %bb6, label %bb7, !dbg !4092

bb7:                                              ; preds = %bb5
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill15, align 8, !dbg !4099
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill15, metadata !4100, metadata !DIExpression()), !dbg !4108
  br i1 false, label %bb13, label %bb14, !dbg !4108

bb6:                                              ; preds = %bb5
  %29 = bitcast i8** %6 to {}**, !dbg !4110
  store {}* null, {}** %29, align 8, !dbg !4110
  br label %bb8, !dbg !4111

bb8:                                              ; preds = %bb15, %bb6
  %30 = load i8*, i8** %6, align 8, !dbg !4112, !align !627
  ret i8* %30, !dbg !4112

bb13:                                             ; preds = %bb7
  %31 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !4108
  %_56 = load i8*, i8** %31, align 8, !dbg !4108
  store i8* %_56, i8** %self.dbg.spill21, align 8, !dbg !4108
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill21, metadata !4113, metadata !DIExpression()), !dbg !4118
  %32 = getelementptr i8, i8* %_56, i64 -1, !dbg !4118
  store i8* %32, i8** %0, align 8, !dbg !4118
  %_54 = load i8*, i8** %0, align 8, !dbg !4118
  br label %bb16, !dbg !4118

bb14:                                             ; preds = %bb7
  %33 = bitcast { i8*, i8* }* %self to i8**, !dbg !4108
  %self16 = load i8*, i8** %33, align 8, !dbg !4108, !nonnull !19, !noundef !19
  store i8* %self16, i8** %self.dbg.spill17, align 8, !dbg !4108
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !4120, metadata !DIExpression()), !dbg !4124
  store i8* %self16, i8** %old.dbg.spill, align 8, !dbg !4124
  call void @llvm.dbg.declare(metadata i8** %old.dbg.spill, metadata !4106, metadata !DIExpression()), !dbg !4126
  %34 = bitcast { i8*, i8* }* %self to i8**, !dbg !4126
  %self18 = load i8*, i8** %34, align 8, !dbg !4126, !nonnull !19, !noundef !19
  store i8* %self18, i8** %self.dbg.spill19, align 8, !dbg !4126
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill19, metadata !4127, metadata !DIExpression()), !dbg !4131
  store i8* %self18, i8** %self.dbg.spill20, align 8, !dbg !4131
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill20, metadata !4133, metadata !DIExpression()), !dbg !4138
  %35 = getelementptr inbounds i8, i8* %self18, i64 1, !dbg !4138
  store i8* %35, i8** %1, align 8, !dbg !4138
  %_73 = load i8*, i8** %1, align 8, !dbg !4138
  br label %bb17, !dbg !4138

bb17:                                             ; preds = %bb14
  store i8* %_73, i8** %ptr.dbg.spill, align 8, !dbg !4138
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !4139, metadata !DIExpression()), !dbg !4143
  store i8* %_73, i8** %_62, align 8, !dbg !4143
  %36 = bitcast { i8*, i8* }* %self to i8**, !dbg !4126
  %37 = load i8*, i8** %_62, align 8, !dbg !4126, !nonnull !19, !noundef !19
  store i8* %37, i8** %36, align 8, !dbg !4126
  store i8* %self16, i8** %_19, align 8, !dbg !4126
  br label %bb15, !dbg !4108

bb15:                                             ; preds = %bb16, %bb17
  %_18 = load i8*, i8** %_19, align 8, !dbg !4099
  store i8* %_18, i8** %6, align 8, !dbg !4145
  br label %bb8, !dbg !4111

bb16:                                             ; preds = %bb13
  %38 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !4108
  store i8* %_54, i8** %38, align 8, !dbg !4108
  %39 = bitcast { i8*, i8* }* %self to i8**, !dbg !4108
  %self22 = load i8*, i8** %39, align 8, !dbg !4108, !nonnull !19, !noundef !19
  store i8* %self22, i8** %self.dbg.spill23, align 8, !dbg !4108
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill23, metadata !4146, metadata !DIExpression()), !dbg !4150
  store i8* %self22, i8** %_19, align 8, !dbg !4108
  br label %bb15, !dbg !4108
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h69a171558dec0b6eE"({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %0, { i8*, i8* }* align 8 %self) unnamed_addr #0 !dbg !4152 {
start:
  %rhs.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  %self.dbg.spill11 = alloca i8*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %self.dbg.spill9 = alloca i64, align 8
  %2 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %diff.dbg.spill = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_21 = alloca { i64, i64 }, align 8
  %exact = alloca i64, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !4156, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.declare(metadata i64* %exact, metadata !4157, metadata !DIExpression()), !dbg !4166
  %6 = bitcast { i8*, i8* }* %self to i8**, !dbg !4167
  %start1 = load i8*, i8** %6, align 8, !dbg !4167, !nonnull !19, !noundef !19
  store i8* %start1, i8** %start.dbg.spill, align 8, !dbg !4167
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !4159, metadata !DIExpression()), !dbg !4168
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !4169
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !4161, metadata !DIExpression()), !dbg !4175
  br i1 false, label %bb1, label %bb2, !dbg !4175

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !4175
  %self6 = load i8*, i8** %7, align 8, !dbg !4175
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !4175
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !4176, metadata !DIExpression()), !dbg !4180
  %8 = bitcast i64* %2 to i8**, !dbg !4180
  store i8* %self6, i8** %8, align 8, !dbg !4180
  %self8 = load i64, i64* %2, align 8, !dbg !4180
  store i64 %self8, i64* %self.dbg.spill9, align 8, !dbg !4180
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill9, metadata !4182, metadata !DIExpression()), !dbg !4187
  br label %bb6, !dbg !4180

bb2:                                              ; preds = %start
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !4175
  %self2 = load i8*, i8** %9, align 8, !dbg !4175
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !4175
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !4188, metadata !DIExpression()), !dbg !4192
  %10 = bitcast i64* %5 to i8**, !dbg !4192
  store i8* %self2, i8** %10, align 8, !dbg !4192
  %_13 = load i64, i64* %5, align 8, !dbg !4192
  br label %bb8, !dbg !4192

bb8:                                              ; preds = %bb2
  store i8* %start1, i8** %self.dbg.spill4, align 8, !dbg !4175
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !4194, metadata !DIExpression()), !dbg !4198
  store i8* %start1, i8** %self.dbg.spill5, align 8, !dbg !4198
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !4200, metadata !DIExpression()), !dbg !4204
  %11 = bitcast i64* %4 to i8**, !dbg !4204
  store i8* %start1, i8** %11, align 8, !dbg !4204
  %_15 = load i64, i64* %4, align 8, !dbg !4204
  br label %bb9, !dbg !4204

bb9:                                              ; preds = %bb8
  %12 = sub nuw i64 %_13, %_15, !dbg !4175
  store i64 %12, i64* %3, align 8, !dbg !4175
  %diff = load i64, i64* %3, align 8, !dbg !4175
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !4175
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !4163, metadata !DIExpression()), !dbg !4205
  br label %bb3, !dbg !4175

bb3:                                              ; preds = %bb9
  %13 = udiv exact i64 %diff, 1, !dbg !4205
  store i64 %13, i64* %exact, align 8, !dbg !4205
  br label %bb4, !dbg !4205

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !4175

bb5:                                              ; preds = %bb7, %bb4
  %_20 = load i64, i64* %exact, align 8, !dbg !4206
  %_22 = load i64, i64* %exact, align 8, !dbg !4207
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_21, i32 0, i32 1, !dbg !4208
  store i64 %_22, i64* %14, align 8, !dbg !4208
  %15 = bitcast { i64, i64 }* %_21 to i64*, !dbg !4208
  store i64 1, i64* %15, align 8, !dbg !4208
  %16 = bitcast { i64, { i64, i64 } }* %0 to i64*, !dbg !4209
  store i64 %_20, i64* %16, align 8, !dbg !4209
  %17 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %0, i32 0, i32 1, !dbg !4209
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_21, i32 0, i32 0, !dbg !4209
  %19 = load i64, i64* %18, align 8, !dbg !4209, !range !1107, !noundef !19
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_21, i32 0, i32 1, !dbg !4209
  %21 = load i64, i64* %20, align 8, !dbg !4209
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0, !dbg !4209
  store i64 %19, i64* %22, align 8, !dbg !4209
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1, !dbg !4209
  store i64 %21, i64* %23, align 8, !dbg !4209
  ret void, !dbg !4210

bb6:                                              ; preds = %bb1
  store i8* %start1, i8** %self.dbg.spill10, align 8, !dbg !4175
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !4211, metadata !DIExpression()), !dbg !4215
  store i8* %start1, i8** %self.dbg.spill11, align 8, !dbg !4215
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill11, metadata !4217, metadata !DIExpression()), !dbg !4221
  %24 = bitcast i64* %1 to i8**, !dbg !4221
  store i8* %start1, i8** %24, align 8, !dbg !4221
  %rhs = load i64, i64* %1, align 8, !dbg !4221
  store i64 %rhs, i64* %rhs.dbg.spill, align 8, !dbg !4221
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !4186, metadata !DIExpression()), !dbg !4187
  br label %bb7, !dbg !4221

bb7:                                              ; preds = %bb6
  %25 = sub i64 %self8, %rhs, !dbg !4187
  store i64 %25, i64* %exact, align 8, !dbg !4187
  br label %bb5, !dbg !4175
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h88b553f8594f52e7E"() unnamed_addr #0 !dbg !4222 {
start:
  %output.dbg.spill = alloca {}, align 1
  %0 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata {}* %output.dbg.spill, metadata !4227, metadata !DIExpression()), !dbg !4228
  %1 = getelementptr i8, i8* %0, i64 1, !dbg !4229
  %2 = bitcast i8* %1 to {}*, !dbg !4229
  store i8 0, i8* %0, align 1, !dbg !4229
  %3 = load i8, i8* %0, align 1, !dbg !4230, !range !266, !noundef !19
  %4 = trunc i8 %3 to i1, !dbg !4230
  ret i1 %4, !dbg !4230
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hbe9c1b26215460c4E"(i1 zeroext %0) unnamed_addr #0 !dbg !4231 {
start:
  %b.dbg.spill = alloca {}, align 1
  %c.dbg.spill = alloca {}, align 1
  %_6 = alloca %"core::ops::control_flow::ControlFlow<(), core::convert::Infallible>::Break", align 1
  %1 = alloca i8, align 1
  %self = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, i8* %self, align 1
  call void @llvm.dbg.declare(metadata i8* %self, metadata !4250, metadata !DIExpression()), !dbg !4255
  call void @llvm.dbg.declare(metadata {}* %c.dbg.spill, metadata !4251, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.declare(metadata {}* %b.dbg.spill, metadata !4253, metadata !DIExpression()), !dbg !4257
  %3 = load i8, i8* %self, align 1, !dbg !4258, !range !266, !noundef !19
  %4 = trunc i8 %3 to i1, !dbg !4258
  %_2 = zext i1 %4 to i64, !dbg !4258
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !4259

bb2:                                              ; preds = %start
  unreachable, !dbg !4258

bb3:                                              ; preds = %start
  %5 = getelementptr i8, i8* %1, i64 1, !dbg !4260
  %6 = bitcast i8* %5 to {}*, !dbg !4260
  store i8 0, i8* %1, align 1, !dbg !4260
  br label %bb4, !dbg !4261

bb1:                                              ; preds = %start
  %7 = bitcast %"core::ops::control_flow::ControlFlow<(), core::convert::Infallible>::Break"* %_6 to {}*, !dbg !4262
  %8 = getelementptr i8, i8* %1, i64 1, !dbg !4263
  %9 = bitcast i8* %8 to %"core::ops::control_flow::ControlFlow<(), core::convert::Infallible>::Break"*, !dbg !4263
  store i8 1, i8* %1, align 1, !dbg !4263
  br label %bb4, !dbg !4264

bb4:                                              ; preds = %bb3, %bb1
  %10 = load i8, i8* %1, align 1, !dbg !4265, !range !266, !noundef !19
  %11 = trunc i8 %10 to i1, !dbg !4265
  ret i1 %11, !dbg !4265
}

; num_traits::float::integer_decode_f32
; Function Attrs: nonlazybind uwtable
define void @_ZN10num_traits5float18integer_decode_f3217hcc569b9c390c9910E({ i64, i16, i8, [5 x i8] }* sret({ i64, i16, i8, [5 x i8] }) %0, float %f) unnamed_addr #1 !dbg !4266 {
start:
  %bits.dbg.spill = alloca i32, align 4
  %f.dbg.spill = alloca float, align 4
  %mantissa = alloca i32, align 4
  %exponent = alloca i16, align 2
  %sign = alloca i8, align 1
  store float %f, float* %f.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %f.dbg.spill, metadata !4278, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.declare(metadata i8* %sign, metadata !4281, metadata !DIExpression()), !dbg !4288
  call void @llvm.dbg.declare(metadata i16* %exponent, metadata !4283, metadata !DIExpression()), !dbg !4289
  call void @llvm.dbg.declare(metadata i32* %mantissa, metadata !4285, metadata !DIExpression()), !dbg !4290
; call core::f32::<impl f32>::to_bits
  %bits = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17hf9f914d93b7e51c5E"(float %f), !dbg !4291
  store i32 %bits, i32* %bits.dbg.spill, align 4, !dbg !4291
  call void @llvm.dbg.declare(metadata i32* %bits.dbg.spill, metadata !4279, metadata !DIExpression()), !dbg !4292
  br label %bb1, !dbg !4291

bb1:                                              ; preds = %start
  %_7.0 = lshr i32 %bits, 31, !dbg !4293
  br label %bb2, !dbg !4293

bb2:                                              ; preds = %bb1
  %1 = icmp eq i32 %_7.0, 0, !dbg !4293
  br i1 %1, label %bb3, label %bb4, !dbg !4293

bb3:                                              ; preds = %bb2
  store i8 1, i8* %sign, align 1, !dbg !4294
  br label %bb5, !dbg !4295

bb4:                                              ; preds = %bb2
  store i8 -1, i8* %sign, align 1, !dbg !4296
  br label %bb5, !dbg !4295

bb5:                                              ; preds = %bb3, %bb4
  %_12.0 = lshr i32 %bits, 23, !dbg !4297
  br label %bb6, !dbg !4297

bb6:                                              ; preds = %bb5
  %_9 = and i32 %_12.0, 255, !dbg !4298
  %2 = trunc i32 %_9 to i16, !dbg !4298
  store i16 %2, i16* %exponent, align 2, !dbg !4298
  %_14 = load i16, i16* %exponent, align 2, !dbg !4299
  %3 = icmp eq i16 %_14, 0, !dbg !4299
  br i1 %3, label %bb7, label %bb9, !dbg !4299

bb7:                                              ; preds = %bb6
  %_15 = and i32 %bits, 8388607, !dbg !4300
  %_17.0 = shl i32 %_15, 1, !dbg !4300
  br label %bb8, !dbg !4300

bb9:                                              ; preds = %bb6
  %_18 = and i32 %bits, 8388607, !dbg !4301
  %4 = or i32 %_18, 8388608, !dbg !4301
  store i32 %4, i32* %mantissa, align 4, !dbg !4301
  br label %bb10, !dbg !4302

bb10:                                             ; preds = %bb8, %bb9
  %5 = load i16, i16* %exponent, align 2, !dbg !4303
  %6 = call { i16, i1 } @llvm.ssub.with.overflow.i16(i16 %5, i16 150), !dbg !4303
  %_21.0 = extractvalue { i16, i1 } %6, 0, !dbg !4303
  %_21.1 = extractvalue { i16, i1 } %6, 1, !dbg !4303
  %7 = call i1 @llvm.expect.i1(i1 %_21.1, i1 false), !dbg !4303
  br i1 %7, label %panic, label %bb11, !dbg !4303

bb8:                                              ; preds = %bb7
  store i32 %_17.0, i32* %mantissa, align 4, !dbg !4300
  br label %bb10, !dbg !4302

bb11:                                             ; preds = %bb10
  store i16 %_21.0, i16* %exponent, align 2, !dbg !4303
  %_23 = load i32, i32* %mantissa, align 4, !dbg !4304
  %_22 = zext i32 %_23 to i64, !dbg !4304
  %_24 = load i16, i16* %exponent, align 2, !dbg !4305
  %_25 = load i8, i8* %sign, align 1, !dbg !4306
  %8 = bitcast { i64, i16, i8, [5 x i8] }* %0 to i64*, !dbg !4307
  store i64 %_22, i64* %8, align 8, !dbg !4307
  %9 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, { i64, i16, i8, [5 x i8] }* %0, i32 0, i32 1, !dbg !4307
  store i16 %_24, i16* %9, align 8, !dbg !4307
  %10 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, { i64, i16, i8, [5 x i8] }* %0, i32 0, i32 2, !dbg !4307
  store i8 %_25, i8* %10, align 2, !dbg !4307
  ret void, !dbg !4308

panic:                                            ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc6368 to %"core::panic::location::Location"*)) #7, !dbg !4303
  unreachable, !dbg !4303
}

; num_traits::float::integer_decode_f64
; Function Attrs: nonlazybind uwtable
define void @_ZN10num_traits5float18integer_decode_f6417h162edbd33bc04f83E({ i64, i16, i8, [5 x i8] }* sret({ i64, i16, i8, [5 x i8] }) %0, double %f) unnamed_addr #1 !dbg !4309 {
start:
  %bits.dbg.spill = alloca i64, align 8
  %f.dbg.spill = alloca double, align 8
  %mantissa = alloca i64, align 8
  %exponent = alloca i16, align 2
  %sign = alloca i8, align 1
  store double %f, double* %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %f.dbg.spill, metadata !4313, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.declare(metadata i8* %sign, metadata !4316, metadata !DIExpression()), !dbg !4323
  call void @llvm.dbg.declare(metadata i16* %exponent, metadata !4318, metadata !DIExpression()), !dbg !4324
  call void @llvm.dbg.declare(metadata i64* %mantissa, metadata !4320, metadata !DIExpression()), !dbg !4325
; call core::f64::<impl f64>::to_bits
  %bits = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17h62495e472a5a58ecE"(double %f), !dbg !4326
  store i64 %bits, i64* %bits.dbg.spill, align 8, !dbg !4326
  call void @llvm.dbg.declare(metadata i64* %bits.dbg.spill, metadata !4314, metadata !DIExpression()), !dbg !4327
  br label %bb1, !dbg !4326

bb1:                                              ; preds = %start
  %_7.0 = lshr i64 %bits, 63, !dbg !4328
  br label %bb2, !dbg !4328

bb2:                                              ; preds = %bb1
  %1 = icmp eq i64 %_7.0, 0, !dbg !4328
  br i1 %1, label %bb3, label %bb4, !dbg !4328

bb3:                                              ; preds = %bb2
  store i8 1, i8* %sign, align 1, !dbg !4329
  br label %bb5, !dbg !4330

bb4:                                              ; preds = %bb2
  store i8 -1, i8* %sign, align 1, !dbg !4331
  br label %bb5, !dbg !4330

bb5:                                              ; preds = %bb3, %bb4
  %_12.0 = lshr i64 %bits, 52, !dbg !4332
  br label %bb6, !dbg !4332

bb6:                                              ; preds = %bb5
  %_9 = and i64 %_12.0, 2047, !dbg !4333
  %2 = trunc i64 %_9 to i16, !dbg !4333
  store i16 %2, i16* %exponent, align 2, !dbg !4333
  %_14 = load i16, i16* %exponent, align 2, !dbg !4334
  %3 = icmp eq i16 %_14, 0, !dbg !4334
  br i1 %3, label %bb7, label %bb9, !dbg !4334

bb7:                                              ; preds = %bb6
  %_15 = and i64 %bits, 4503599627370495, !dbg !4335
  %_17.0 = shl i64 %_15, 1, !dbg !4335
  br label %bb8, !dbg !4335

bb9:                                              ; preds = %bb6
  %_18 = and i64 %bits, 4503599627370495, !dbg !4336
  %4 = or i64 %_18, 4503599627370496, !dbg !4336
  store i64 %4, i64* %mantissa, align 8, !dbg !4336
  br label %bb10, !dbg !4337

bb10:                                             ; preds = %bb8, %bb9
  %5 = load i16, i16* %exponent, align 2, !dbg !4338
  %6 = call { i16, i1 } @llvm.ssub.with.overflow.i16(i16 %5, i16 1075), !dbg !4338
  %_21.0 = extractvalue { i16, i1 } %6, 0, !dbg !4338
  %_21.1 = extractvalue { i16, i1 } %6, 1, !dbg !4338
  %7 = call i1 @llvm.expect.i1(i1 %_21.1, i1 false), !dbg !4338
  br i1 %7, label %panic, label %bb11, !dbg !4338

bb8:                                              ; preds = %bb7
  store i64 %_17.0, i64* %mantissa, align 8, !dbg !4335
  br label %bb10, !dbg !4337

bb11:                                             ; preds = %bb10
  store i16 %_21.0, i16* %exponent, align 2, !dbg !4338
  %_22 = load i64, i64* %mantissa, align 8, !dbg !4339
  %_23 = load i16, i16* %exponent, align 2, !dbg !4340
  %_24 = load i8, i8* %sign, align 1, !dbg !4341
  %8 = bitcast { i64, i16, i8, [5 x i8] }* %0 to i64*, !dbg !4342
  store i64 %_22, i64* %8, align 8, !dbg !4342
  %9 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, { i64, i16, i8, [5 x i8] }* %0, i32 0, i32 1, !dbg !4342
  store i16 %_23, i16* %9, align 8, !dbg !4342
  %10 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, { i64, i16, i8, [5 x i8] }* %0, i32 0, i32 2, !dbg !4342
  store i8 %_24, i8* %10, align 2, !dbg !4342
  ret void, !dbg !4343

panic:                                            ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc6370 to %"core::panic::location::Location"*)) #7, !dbg !4338
  unreachable, !dbg !4338
}

; <num_traits::ParseFloatError as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN66_$LT$num_traits..ParseFloatError$u20$as$u20$core..fmt..Display$GT$3fmt17h59cbe774a3280ba1E"(i8* align 1 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !4344 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %description = alloca { [0 x i8]*, i64 }, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !4350, metadata !DIExpression()), !dbg !4354
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !4351, metadata !DIExpression()), !dbg !4355
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %description, metadata !4352, metadata !DIExpression()), !dbg !4356
  %0 = load i8, i8* %self, align 1, !dbg !4357, !range !266, !noundef !19
  %1 = trunc i8 %0 to i1, !dbg !4357
  %_4 = zext i1 %1 to i64, !dbg !4357
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !4358

bb2:                                              ; preds = %start
  unreachable, !dbg !4357

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %description, i32 0, i32 0, !dbg !4359
  store [0 x i8]* bitcast (<{ [36 x i8] }>* @alloc6372 to [0 x i8]*), [0 x i8]** %2, align 8, !dbg !4359
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %description, i32 0, i32 1, !dbg !4359
  store i64 36, i64* %3, align 8, !dbg !4359
  br label %bb4, !dbg !4359

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %description, i32 0, i32 0, !dbg !4360
  store [0 x i8]* bitcast (<{ [21 x i8] }>* @alloc6371 to [0 x i8]*), [0 x i8]** %4, align 8, !dbg !4360
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %description, i32 0, i32 1, !dbg !4360
  store i64 21, i64* %5, align 8, !dbg !4360
  br label %bb4, !dbg !4361

bb4:                                              ; preds = %bb3, %bb1
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %description, i32 0, i32 0, !dbg !4362
  %_6.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !dbg !4362, !nonnull !19, !align !627, !noundef !19
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %description, i32 0, i32 1, !dbg !4362
  %_6.1 = load i64, i64* %7, align 8, !dbg !4362
; call <str as core::fmt::Display>::fmt
  %8 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17hde81f4d22eef4d42E"([0 x i8]* align 1 %_6.0, i64 %_6.1, %"core::fmt::Formatter"* align 8 %f), !dbg !4362
  br label %bb5, !dbg !4362

bb5:                                              ; preds = %bb4
  ret i1 %8, !dbg !4363
}

; num_traits::str_to_ascii_lower_eq_str
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17he6b1e18fd8245256E([0 x i8]* align 1 %a.0, i64 %a.1, [0 x i8]* align 1 %b.0, i64 %b.1) unnamed_addr #1 !dbg !4364 {
start:
  %b.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %a.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_10 = alloca %"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>", align 8
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %a.dbg.spill, i32 0, i32 0
  store [0 x i8]* %a.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %a.dbg.spill, i32 0, i32 1
  store i64 %a.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %a.dbg.spill, metadata !4366, metadata !DIExpression()), !dbg !4368
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %b.dbg.spill, i32 0, i32 0
  store [0 x i8]* %b.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %b.dbg.spill, metadata !4367, metadata !DIExpression()), !dbg !4369
; call core::str::<impl str>::len
  %_4 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h46c72f4bd07ddbd2E"([0 x i8]* align 1 %a.0, i64 %a.1), !dbg !4370
  br label %bb4, !dbg !4370

bb4:                                              ; preds = %start
; call core::str::<impl str>::len
  %_6 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h46c72f4bd07ddbd2E"([0 x i8]* align 1 %b.0, i64 %b.1), !dbg !4371
  br label %bb5, !dbg !4371

bb5:                                              ; preds = %bb4
  %_3 = icmp eq i64 %_4, %_6, !dbg !4370
  br i1 %_3, label %bb2, label %bb1, !dbg !4370

bb1:                                              ; preds = %bb5
  store i8 0, i8* %0, align 1, !dbg !4370
  br label %bb3, !dbg !4370

bb2:                                              ; preds = %bb5
; call core::str::<impl str>::bytes
  %5 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h7897e2009ee174b2E"([0 x i8]* align 1 %a.0, i64 %a.1), !dbg !4372
  %_11.0 = extractvalue { i8*, i8* } %5, 0, !dbg !4372
  %_11.1 = extractvalue { i8*, i8* } %5, 1, !dbg !4372
  br label %bb6, !dbg !4372

bb6:                                              ; preds = %bb2
; call core::str::<impl str>::bytes
  %6 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h7897e2009ee174b2E"([0 x i8]* align 1 %b.0, i64 %b.1), !dbg !4373
  %_13.0 = extractvalue { i8*, i8* } %6, 0, !dbg !4373
  %_13.1 = extractvalue { i8*, i8* } %6, 1, !dbg !4373
  br label %bb7, !dbg !4373

bb7:                                              ; preds = %bb6
; call core::iter::traits::iterator::Iterator::zip
  call void @_ZN4core4iter6traits8iterator8Iterator3zip17hfe2ae64a1b412659E(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* sret(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>") %_10, i8* %_11.0, i8* %_11.1, i8* %_13.0, i8* %_13.1), !dbg !4372
  br label %bb8, !dbg !4372

bb8:                                              ; preds = %bb7
; call core::iter::traits::iterator::Iterator::all
  %_8 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17h55110c1c86203de0E(%"core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>"* align 8 %_10), !dbg !4372
  br label %bb9, !dbg !4372

bb9:                                              ; preds = %bb8
  %7 = zext i1 %_8 to i8, !dbg !4370
  store i8 %7, i8* %0, align 1, !dbg !4370
  br label %bb3, !dbg !4370

bb3:                                              ; preds = %bb1, %bb9
  %8 = load i8, i8* %0, align 1, !dbg !4374, !range !266, !noundef !19
  %9 = trunc i8 %8 to i1, !dbg !4374
  ret i1 %9, !dbg !4374
}

; num_traits::str_to_ascii_lower_eq_str::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN10num_traits25str_to_ascii_lower_eq_str28_$u7b$$u7b$closure$u7d$$u7d$17h7005b0a191bc2f89E"(%"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]"* align 1 %_1, i8 %_2.0, i8 %_2.1) unnamed_addr #0 !dbg !4375 {
start:
  %a_to_ascii_lower.dbg.spill = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i8, align 1
  %_2.dbg.spill = alloca { i8, i8 }, align 1
  %_1.dbg.spill = alloca %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]"*, align 8
  %_9 = alloca i8, align 1
  store %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]"* %_1, %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs:212:41: 212:49]"** %_1.dbg.spill, metadata !4385, metadata !DIExpression()), !dbg !4387
  %0 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2.dbg.spill, i32 0, i32 0
  store i8 %_2.0, i8* %0, align 1
  %1 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2.dbg.spill, i32 0, i32 1
  store i8 %_2.1, i8* %1, align 1
  call void @llvm.dbg.declare(metadata { i8, i8 }* %_2.dbg.spill, metadata !4386, metadata !DIExpression()), !dbg !4388
  store i8 %_2.0, i8* %a.dbg.spill, align 1, !dbg !4389
  call void @llvm.dbg.declare(metadata i8* %a.dbg.spill, metadata !4380, metadata !DIExpression()), !dbg !4390
  store i8 %_2.1, i8* %b.dbg.spill, align 1, !dbg !4391
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !4382, metadata !DIExpression()), !dbg !4392
  %_10 = icmp ule i8 65, %_2.0, !dbg !4393
  br i1 %_10, label %bb2, label %bb1, !dbg !4394

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1, !dbg !4394
  br label %bb3, !dbg !4394

bb2:                                              ; preds = %start
  %_12 = icmp ule i8 %_2.0, 90, !dbg !4395
  %2 = zext i1 %_12 to i8, !dbg !4394
  store i8 %2, i8* %_9, align 1, !dbg !4394
  br label %bb3, !dbg !4394

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_9, align 1, !dbg !4396, !range !266, !noundef !19
  %4 = trunc i8 %3 to i1, !dbg !4396
  %_8 = zext i1 %4 to i8, !dbg !4396
  %_14.0 = shl i8 %_8, 5, !dbg !4397
  br label %bb4, !dbg !4397

bb4:                                              ; preds = %bb3
  %a_to_ascii_lower = or i8 %_2.0, %_14.0, !dbg !4398
  store i8 %a_to_ascii_lower, i8* %a_to_ascii_lower.dbg.spill, align 1, !dbg !4398
  call void @llvm.dbg.declare(metadata i8* %a_to_ascii_lower.dbg.spill, metadata !4383, metadata !DIExpression()), !dbg !4399
  %5 = icmp eq i8 %a_to_ascii_lower, %_2.1, !dbg !4400
  ret i1 %5, !dbg !4401
}

; <f32 as num_traits::float::Float>::powi
; Function Attrs: inlinehint nonlazybind uwtable
define internal float @"_ZN48_$LT$f32$u20$as$u20$num_traits..float..Float$GT$4powi17h332eaedf2e3a860bE"(float %self, i32 %n) unnamed_addr #0 !dbg !4402 {
start:
  %n.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca float, align 4
  store float %self, float* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %self.dbg.spill, metadata !4406, metadata !DIExpression()), !dbg !4408
  store i32 %n, i32* %n.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !4407, metadata !DIExpression()), !dbg !4409
; call std::f32::<impl f32>::powi
  %0 = call float @"_ZN3std3f3221_$LT$impl$u20$f32$GT$4powi17hb7e08f9d89fee4c8E"(float %self, i32 %n), !dbg !4410
  br label %bb1, !dbg !4410

bb1:                                              ; preds = %start
  ret float %0, !dbg !4411
}

; <f64 as num_traits::float::Float>::powi
; Function Attrs: inlinehint nonlazybind uwtable
define internal double @"_ZN48_$LT$f64$u20$as$u20$num_traits..float..Float$GT$4powi17hc010881944047abcE"(double %self, i32 %n) unnamed_addr #0 !dbg !4412 {
start:
  %n.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca double, align 8
  store double %self, double* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %self.dbg.spill, metadata !4415, metadata !DIExpression()), !dbg !4417
  store i32 %n, i32* %n.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !4416, metadata !DIExpression()), !dbg !4418
; call std::f64::<impl f64>::powi
  %0 = call double @"_ZN3std3f6421_$LT$impl$u20$f64$GT$4powi17h7a90dd3638f61957E"(double %self, i32 %n), !dbg !4419
  br label %bb1, !dbg !4419

bb1:                                              ; preds = %start
  ret double %0, !dbg !4420
}

; <num_traits::FloatErrorKind as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN63_$LT$num_traits..FloatErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h4a8ab705b67ee6caE"(i8* align 1 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !4421 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %0 = alloca i8, align 1
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !4426, metadata !DIExpression()), !dbg !4428
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !4427, metadata !DIExpression()), !dbg !4428
  %1 = load i8, i8* %self, align 1, !dbg !4428, !range !266, !noundef !19
  %2 = trunc i8 %1 to i1, !dbg !4428
  %_3 = zext i1 %2 to i64, !dbg !4428
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !4428

bb2:                                              ; preds = %start
  unreachable, !dbg !4428

bb3:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %3 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17hd86e8e148609ddcbE(%"core::fmt::Formatter"* align 8 %f, [0 x i8]* align 1 bitcast (<{ [5 x i8] }>* @alloc6374 to [0 x i8]*), i64 5), !dbg !4428
  %4 = zext i1 %3 to i8, !dbg !4428
  store i8 %4, i8* %0, align 1, !dbg !4428
  br label %bb4, !dbg !4428

bb1:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %5 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17hd86e8e148609ddcbE(%"core::fmt::Formatter"* align 8 %f, [0 x i8]* align 1 bitcast (<{ [7 x i8] }>* @alloc6373 to [0 x i8]*), i64 7), !dbg !4428
  %6 = zext i1 %5 to i8, !dbg !4428
  store i8 %6, i8* %0, align 1, !dbg !4428
  br label %bb4, !dbg !4428

bb4:                                              ; preds = %bb3, %bb1
  %7 = load i8, i8* %0, align 1, !dbg !4429, !range !266, !noundef !19
  %8 = trunc i8 %7 to i1, !dbg !4429
  ret i1 %8, !dbg !4429
}

; <num_traits::ParseFloatError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN64_$LT$num_traits..ParseFloatError$u20$as$u20$core..fmt..Debug$GT$3fmt17h06f948c51ad705a1E"(i8* align 1 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !4430 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %_11 = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !4433, metadata !DIExpression()), !dbg !4435
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !4434, metadata !DIExpression()), !dbg !4435
  store i8* %self, i8** %_11, align 8, !dbg !4436
  %_8.0 = bitcast i8** %_11 to {}*, !dbg !4436
; call core::fmt::Formatter::debug_struct_field1_finish
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field1_finish17h5ab08f78e2743177E(%"core::fmt::Formatter"* align 8 %f, [0 x i8]* align 1 bitcast (<{ [15 x i8] }>* @alloc6375 to [0 x i8]*), i64 15, [0 x i8]* align 1 bitcast (<{ [4 x i8] }>* @alloc6376 to [0 x i8]*), i64 4, {}* align 1 %_8.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.2 to [3 x i64]*)), !dbg !4435
  br label %bb1, !dbg !4435

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !4437
}

; <f32 as num_traits::Num>::from_str_radix
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix17h6ab493e5b46cb750E"([0 x i8]* align 1 %src.0, i64 %src.1, i32 %radix) unnamed_addr #1 !dbg !4438 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %exp.dbg.spill29 = alloca i64, align 8
  %exp.dbg.spill = alloca i64, align 8
  %is_positive.dbg.spill26 = alloca i8, align 1
  %src.dbg.spill24 = alloca { [0 x i8]*, i64 }, align 8
  %src.dbg.spill21 = alloca { [0 x i8]*, i64 }, align 8
  %src.dbg.spill18 = alloca { [0 x i8]*, i64 }, align 8
  %offset.dbg.spill = alloca i64, align 8
  %c.dbg.spill17 = alloca i32, align 4
  %digit.dbg.spill14 = alloca i32, align 4
  %c.dbg.spill12 = alloca i32, align 4
  %i.dbg.spill10 = alloca i64, align 8
  %digit.dbg.spill = alloca i32, align 4
  %c.dbg.spill = alloca i32, align 4
  %i.dbg.spill = alloca i64, align 8
  %src.dbg.spill8 = alloca { [0 x i8]*, i64 }, align 8
  %is_positive.dbg.spill = alloca i8, align 1
  %src.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %radix.dbg.spill = alloca i32, align 4
  %src.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_198 = alloca %"core::result::Result<usize, core::num::error::ParseIntError>", align 8
  %_196 = alloca { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, align 8
  %_194 = alloca %"core::result::Result<usize, core::num::error::ParseIntError>", align 8
  %_192 = alloca %"core::result::Result<usize, core::num::error::ParseIntError>", align 8
  %_189 = alloca %"core::result::Result<usize, core::num::error::ParseIntError>", align 8
  %_185 = alloca %"core::option::Option<(char, &str)>", align 8
  %_184 = alloca { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, align 8
  %exp2 = alloca %"core::result::Result<usize, core::num::error::ParseIntError>", align 8
  %_180 = alloca i64, align 8
  %base = alloca float, align 4
  %exp = alloca float, align 4
  %_163 = alloca { i32, i64 }, align 8
  %_162 = alloca { i32, i64 }, align 8
  %_155 = alloca i8, align 1
  %_150 = alloca i8, align 1
  %_138 = alloca float, align 4
  %_131 = alloca { i32, i32 }, align 4
  %_125 = alloca { i64, i32 }, align 8
  %iter1 = alloca %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"*, align 8
  %power = alloca float, align 4
  %_113 = alloca { i32, i64 }, align 8
  %_112 = alloca { i32, i64 }, align 8
  %_99 = alloca i8, align 1
  %_88 = alloca i8, align 1
  %_82 = alloca i8, align 1
  %_77 = alloca i8, align 1
  %_61 = alloca { i32, i32 }, align 4
  %_55 = alloca { i64, i32 }, align 8
  %iter = alloca %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"*, align 8
  %exp_info = alloca { i32, i64 }, align 8
  %cs = alloca %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>", align 8
  %prev_sig = alloca float, align 4
  %sig = alloca float, align 4
  %_37 = alloca %"core::option::Option<(char, &str)>", align 8
  %_36 = alloca { i8, [7 x i8], { [0 x i8]*, i64 } }, align 8
  %_17 = alloca i8, align 1
  %_8 = alloca i8, align 1
  %_6 = alloca { i8*, i64 }, align 8
  %_4 = alloca %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>", align 4
  %2 = alloca %"core::result::Result<f32, ParseFloatError>", align 4
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 0
  store [0 x i8]* %src.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 1
  store i64 %src.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill, metadata !4442, metadata !DIExpression()), !dbg !4493
  store i32 %radix, i32* %radix.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %radix.dbg.spill, metadata !4443, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.declare(metadata float* %sig, metadata !4449, metadata !DIExpression()), !dbg !4495
  call void @llvm.dbg.declare(metadata float* %prev_sig, metadata !4451, metadata !DIExpression()), !dbg !4496
  call void @llvm.dbg.declare(metadata %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* %cs, metadata !4453, metadata !DIExpression()), !dbg !4497
  call void @llvm.dbg.declare(metadata { i32, i64 }* %exp_info, metadata !4455, metadata !DIExpression()), !dbg !4498
  call void @llvm.dbg.declare(metadata %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** %iter, metadata !4457, metadata !DIExpression()), !dbg !4499
  call void @llvm.dbg.declare(metadata float* %power, metadata !4464, metadata !DIExpression()), !dbg !4500
  call void @llvm.dbg.declare(metadata %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** %iter1, metadata !4466, metadata !DIExpression()), !dbg !4501
  call void @llvm.dbg.declare(metadata float* %exp, metadata !4473, metadata !DIExpression()), !dbg !4502
  call void @llvm.dbg.declare(metadata float* %base, metadata !4478, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.declare(metadata %"core::result::Result<usize, core::num::error::ParseIntError>"* %exp2, metadata !4484, metadata !DIExpression()), !dbg !4504
  %5 = icmp eq i32 %radix, 10, !dbg !4505
  br i1 %5, label %bb1, label %bb3, !dbg !4505

bb1:                                              ; preds = %start
; call core::str::<impl str>::parse
  %6 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h484872e2bf97f4f4E"([0 x i8]* align 1 %src.0, i64 %src.1), !dbg !4506
  store i64 %6, i64* %1, align 8, !dbg !4506
  %7 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %_4 to i8*, !dbg !4506
  %8 = bitcast i64* %1 to i8*, !dbg !4506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 8, i1 false), !dbg !4506
  br label %bb2, !dbg !4506

bb3:                                              ; preds = %start
; call num_traits::str_to_ascii_lower_eq_str
  %_9 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17he6b1e18fd8245256E([0 x i8]* align 1 %src.0, i64 %src.1, [0 x i8]* align 1 bitcast (<{ [3 x i8] }>* @alloc6389 to [0 x i8]*), i64 3), !dbg !4507
  br label %bb7, !dbg !4507

bb7:                                              ; preds = %bb3
  br i1 %_9, label %bb4, label %bb5, !dbg !4507

bb5:                                              ; preds = %bb7
; call num_traits::str_to_ascii_lower_eq_str
  %_13 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17he6b1e18fd8245256E([0 x i8]* align 1 %src.0, i64 %src.1, [0 x i8]* align 1 bitcast (<{ [8 x i8] }>* @alloc6390 to [0 x i8]*), i64 8), !dbg !4508
  br label %bb8, !dbg !4508

bb4:                                              ; preds = %bb7
  store i8 1, i8* %_8, align 1, !dbg !4507
  br label %bb6, !dbg !4507

bb6:                                              ; preds = %bb8, %bb4
  %9 = load i8, i8* %_8, align 1, !dbg !4507, !range !266, !noundef !19
  %10 = trunc i8 %9 to i1, !dbg !4507
  br i1 %10, label %bb9, label %bb10, !dbg !4507

bb8:                                              ; preds = %bb5
  %11 = zext i1 %_13 to i8, !dbg !4507
  store i8 %11, i8* %_8, align 1, !dbg !4507
  br label %bb6, !dbg !4507

bb10:                                             ; preds = %bb6
; call num_traits::str_to_ascii_lower_eq_str
  %_18 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17he6b1e18fd8245256E([0 x i8]* align 1 %src.0, i64 %src.1, [0 x i8]* align 1 bitcast (<{ [4 x i8] }>* @alloc6391 to [0 x i8]*), i64 4), !dbg !4509
  br label %bb14, !dbg !4509

bb9:                                              ; preds = %bb6
  %12 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !4510
  %13 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %12, i32 0, i32 1, !dbg !4510
  store float 0x7FF0000000000000, float* %13, align 4, !dbg !4510
  %14 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i8*, !dbg !4510
  store i8 0, i8* %14, align 4, !dbg !4510
  br label %bb138, !dbg !4511

bb138:                                            ; preds = %bb2, %bb30, %bb137, %bb119, %bb133, %bb109, %bb102, %bb100, %bb95, %bb73, %bb71, %bb66, %bb61, %bb56, %bb31, %bb22, %bb19, %bb16, %bb9
  %15 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i64*, !dbg !4512
  %16 = load i64, i64* %15, align 4, !dbg !4512
  ret i64 %16, !dbg !4512

bb14:                                             ; preds = %bb10
  br i1 %_18, label %bb11, label %bb12, !dbg !4509

bb12:                                             ; preds = %bb14
; call num_traits::str_to_ascii_lower_eq_str
  %_22 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17he6b1e18fd8245256E([0 x i8]* align 1 %src.0, i64 %src.1, [0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @alloc6392 to [0 x i8]*), i64 9), !dbg !4513
  br label %bb15, !dbg !4513

bb11:                                             ; preds = %bb14
  store i8 1, i8* %_17, align 1, !dbg !4509
  br label %bb13, !dbg !4509

bb13:                                             ; preds = %bb15, %bb11
  %17 = load i8, i8* %_17, align 1, !dbg !4509, !range !266, !noundef !19
  %18 = trunc i8 %17 to i1, !dbg !4509
  br i1 %18, label %bb16, label %bb17, !dbg !4509

bb15:                                             ; preds = %bb12
  %19 = zext i1 %_22 to i8, !dbg !4509
  store i8 %19, i8* %_17, align 1, !dbg !4509
  br label %bb13, !dbg !4509

bb17:                                             ; preds = %bb13
; call num_traits::str_to_ascii_lower_eq_str
  %_26 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17he6b1e18fd8245256E([0 x i8]* align 1 %src.0, i64 %src.1, [0 x i8]* align 1 bitcast (<{ [3 x i8] }>* @alloc6393 to [0 x i8]*), i64 3), !dbg !4514
  br label %bb18, !dbg !4514

bb16:                                             ; preds = %bb13
  %20 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !4515
  %21 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %20, i32 0, i32 1, !dbg !4515
  store float 0xFFF0000000000000, float* %21, align 4, !dbg !4515
  %22 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i8*, !dbg !4515
  store i8 0, i8* %22, align 4, !dbg !4515
  br label %bb138, !dbg !4516

bb18:                                             ; preds = %bb17
  br i1 %_26, label %bb19, label %bb20, !dbg !4514

bb20:                                             ; preds = %bb18
; call num_traits::str_to_ascii_lower_eq_str
  %_30 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17he6b1e18fd8245256E([0 x i8]* align 1 %src.0, i64 %src.1, [0 x i8]* align 1 bitcast (<{ [4 x i8] }>* @alloc6394 to [0 x i8]*), i64 4), !dbg !4517
  br label %bb21, !dbg !4517

bb19:                                             ; preds = %bb18
  %23 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !4518
  %24 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %23, i32 0, i32 1, !dbg !4518
  store float 0x7FF8000000000000, float* %24, align 4, !dbg !4518
  %25 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i8*, !dbg !4518
  store i8 0, i8* %25, align 4, !dbg !4518
  br label %bb138, !dbg !4519

bb21:                                             ; preds = %bb20
  br i1 %_30, label %bb22, label %bb23, !dbg !4517

bb23:                                             ; preds = %bb21
; call <f32 as num_traits::Num>::from_str_radix::slice_shift_char
  call void @"_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix16slice_shift_char17h2a151c24a168fe39E"(%"core::option::Option<(char, &str)>"* sret(%"core::option::Option<(char, &str)>") %_37, [0 x i8]* align 1 %src.0, i64 %src.1), !dbg !4520
  br label %bb24, !dbg !4520

bb22:                                             ; preds = %bb21
  %26 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !4521
  %27 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %26, i32 0, i32 1, !dbg !4521
  store float 0xFFF8000000000000, float* %27, align 4, !dbg !4521
  %28 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i8*, !dbg !4521
  store i8 0, i8* %28, align 4, !dbg !4521
  br label %bb138, !dbg !4522

bb24:                                             ; preds = %bb23
  %29 = bitcast %"core::option::Option<(char, &str)>"* %_37 to i32*, !dbg !4520
  %30 = load i32, i32* %29, align 8, !dbg !4520, !range !477, !noundef !19
  %31 = sub i32 %30, 1114112, !dbg !4520
  %32 = icmp eq i32 %31, 0, !dbg !4520
  %_40 = select i1 %32, i64 0, i64 1, !dbg !4520
  switch i64 %_40, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb25
  ], !dbg !4523

bb29:                                             ; preds = %bb24
  unreachable, !dbg !4520

bb30:                                             ; preds = %bb24
  %33 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to %"core::result::Result<f32, ParseFloatError>::Err"*, !dbg !4524
  %34 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Err", %"core::result::Result<f32, ParseFloatError>::Err"* %33, i32 0, i32 1, !dbg !4524
  store i8 0, i8* %34, align 1, !dbg !4524
  %35 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i8*, !dbg !4524
  store i8 1, i8* %35, align 4, !dbg !4524
  br label %bb138, !dbg !4525

bb25:                                             ; preds = %bb24
  %36 = bitcast %"core::option::Option<(char, &str)>"* %_37 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4523
  %37 = bitcast %"core::option::Option<(char, &str)>::Some"* %36 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4523
  %38 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %37 to i32*, !dbg !4523
  %39 = load i32, i32* %38, align 8, !dbg !4523, !range !478, !noundef !19
  %40 = icmp eq i32 %39, 45, !dbg !4523
  br i1 %40, label %bb26, label %bb28, !dbg !4523

bb26:                                             ; preds = %bb25
  %41 = bitcast %"core::option::Option<(char, &str)>"* %_37 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4526
  %42 = bitcast %"core::option::Option<(char, &str)>::Some"* %41 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4526
  %43 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %42, i32 0, i32 2, !dbg !4526
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %43, i32 0, i32 0, !dbg !4526
  %45 = load [0 x i8]*, [0 x i8]** %44, align 8, !dbg !4526, !nonnull !19, !align !627, !noundef !19
  %46 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %43, i32 0, i32 1, !dbg !4526
  %47 = load i64, i64* %46, align 8, !dbg !4526
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_39 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h328ca116de78cfaaE"([0 x i8]* align 1 %45, i64 %47, [0 x i8]* align 1 bitcast (<{}>* @alloc6395 to [0 x i8]*), i64 0), !dbg !4526
  br label %bb27, !dbg !4526

bb28:                                             ; preds = %bb25
  %48 = bitcast { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36 to i8*, !dbg !4527
  store i8 1, i8* %48, align 8, !dbg !4527
  %49 = getelementptr inbounds { i8, [7 x i8], { [0 x i8]*, i64 } }, { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36, i32 0, i32 2, !dbg !4527
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %49, i32 0, i32 0, !dbg !4527
  store [0 x i8]* %src.0, [0 x i8]** %50, align 8, !dbg !4527
  %51 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %49, i32 0, i32 1, !dbg !4527
  store i64 %src.1, i64* %51, align 8, !dbg !4527
  br label %bb33, !dbg !4528

bb33:                                             ; preds = %bb32, %bb28
  %52 = bitcast { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36 to i8*, !dbg !4529
  %53 = load i8, i8* %52, align 8, !dbg !4529, !range !266, !noundef !19
  %is_positive = trunc i8 %53 to i1, !dbg !4529
  %54 = zext i1 %is_positive to i8, !dbg !4529
  store i8 %54, i8* %is_positive.dbg.spill, align 1, !dbg !4529
  call void @llvm.dbg.declare(metadata i8* %is_positive.dbg.spill, metadata !4444, metadata !DIExpression()), !dbg !4530
  %55 = getelementptr inbounds { i8, [7 x i8], { [0 x i8]*, i64 } }, { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36, i32 0, i32 2, !dbg !4531
  %56 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %55, i32 0, i32 0, !dbg !4531
  %src.06 = load [0 x i8]*, [0 x i8]** %56, align 8, !dbg !4531, !nonnull !19, !align !627, !noundef !19
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %55, i32 0, i32 1, !dbg !4531
  %src.17 = load i64, i64* %57, align 8, !dbg !4531
  %58 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill8, i32 0, i32 0, !dbg !4531
  store [0 x i8]* %src.06, [0 x i8]** %58, align 8, !dbg !4531
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill8, i32 0, i32 1, !dbg !4531
  store i64 %src.17, i64* %59, align 8, !dbg !4531
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill8, metadata !4446, metadata !DIExpression()), !dbg !4532
  br i1 %is_positive, label %bb34, label %bb35, !dbg !4533

bb27:                                             ; preds = %bb26
  br i1 %_39, label %bb31, label %bb32, !dbg !4526

bb32:                                             ; preds = %bb27
  %60 = bitcast %"core::option::Option<(char, &str)>"* %_37 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4534
  %61 = bitcast %"core::option::Option<(char, &str)>::Some"* %60 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4534
  %62 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %61, i32 0, i32 2, !dbg !4534
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %62, i32 0, i32 0, !dbg !4534
  %src.03 = load [0 x i8]*, [0 x i8]** %63, align 8, !dbg !4534, !nonnull !19, !align !627, !noundef !19
  %64 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %62, i32 0, i32 1, !dbg !4534
  %src.14 = load i64, i64* %64, align 8, !dbg !4534
  %65 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill5, i32 0, i32 0, !dbg !4534
  store [0 x i8]* %src.03, [0 x i8]** %65, align 8, !dbg !4534
  %66 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill5, i32 0, i32 1, !dbg !4534
  store i64 %src.14, i64* %66, align 8, !dbg !4534
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill5, metadata !4447, metadata !DIExpression()), !dbg !4535
  %67 = bitcast { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36 to i8*, !dbg !4536
  store i8 0, i8* %67, align 8, !dbg !4536
  %68 = getelementptr inbounds { i8, [7 x i8], { [0 x i8]*, i64 } }, { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36, i32 0, i32 2, !dbg !4536
  %69 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 0, !dbg !4536
  store [0 x i8]* %src.03, [0 x i8]** %69, align 8, !dbg !4536
  %70 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 1, !dbg !4536
  store i64 %src.14, i64* %70, align 8, !dbg !4536
  br label %bb33, !dbg !4537

bb31:                                             ; preds = %bb27
  %71 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to %"core::result::Result<f32, ParseFloatError>::Err"*, !dbg !4538
  %72 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Err", %"core::result::Result<f32, ParseFloatError>::Err"* %71, i32 0, i32 1, !dbg !4538
  store i8 0, i8* %72, align 1, !dbg !4538
  %73 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i8*, !dbg !4538
  store i8 1, i8* %73, align 4, !dbg !4538
  br label %bb138, !dbg !4539

bb35:                                             ; preds = %bb33
  store float -0.000000e+00, float* %sig, align 4, !dbg !4540
  br label %bb36, !dbg !4541

bb34:                                             ; preds = %bb33
  store float 0.000000e+00, float* %sig, align 4, !dbg !4542
  br label %bb36, !dbg !4541

bb36:                                             ; preds = %bb35, %bb34
  %74 = load float, float* %sig, align 4, !dbg !4543
  store float %74, float* %prev_sig, align 4, !dbg !4543
; call core::str::<impl str>::chars
  %75 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h7bf8534f8214801fE"([0 x i8]* align 1 %src.06, i64 %src.17), !dbg !4544
  %_48.0 = extractvalue { i8*, i8* } %75, 0, !dbg !4544
  %_48.1 = extractvalue { i8*, i8* } %75, 1, !dbg !4544
  br label %bb37, !dbg !4544

bb37:                                             ; preds = %bb36
; call core::iter::traits::iterator::Iterator::enumerate
  call void @_ZN4core4iter6traits8iterator8Iterator9enumerate17h117ad964b76af218E(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* sret(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>") %cs, i8* %_48.0, i8* %_48.1), !dbg !4544
  br label %bb38, !dbg !4544

bb38:                                             ; preds = %bb37
  %76 = bitcast { i32, i64 }* %exp_info to i32*, !dbg !4545
  store i32 1114112, i32* %76, align 8, !dbg !4545
; call core::iter::traits::iterator::Iterator::by_ref
  %_52 = call align 8 %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* @_ZN4core4iter6traits8iterator8Iterator6by_ref17h1c8ab6f8dfb47eefE(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* align 8 %cs), !dbg !4546
  br label %bb39, !dbg !4546

bb39:                                             ; preds = %bb38
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_51 = call align 8 %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfd42fc2a0daf9593E"(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* align 8 %_52), !dbg !4546
  br label %bb40, !dbg !4546

bb40:                                             ; preds = %bb39
  store %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* %_51, %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** %iter, align 8, !dbg !4546
  br label %bb41, !dbg !4547

bb41:                                             ; preds = %bb72, %bb40
; call <&mut I as core::iter::traits::iterator::Iterator>::next
  %77 = call { i64, i32 } @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha8f876ab095cc07bE"(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** align 8 %iter), !dbg !4499
  store { i64, i32 } %77, { i64, i32 }* %_55, align 8, !dbg !4499
  br label %bb42, !dbg !4499

bb42:                                             ; preds = %bb41
  %78 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_55, i32 0, i32 1, !dbg !4499
  %79 = load i32, i32* %78, align 8, !dbg !4499, !range !477, !noundef !19
  %80 = sub i32 %79, 1114112, !dbg !4499
  %81 = icmp eq i32 %80, 0, !dbg !4499
  %_58 = select i1 %81, i64 0, i64 1, !dbg !4499
  switch i64 %_58, label %bb44 [
    i64 0, label %bb76
    i64 1, label %bb43
  ], !dbg !4499

bb44:                                             ; preds = %bb42
  unreachable, !dbg !4499

bb76:                                             ; preds = %bb75, %bb46, %bb42
; call core::option::Option<T>::is_none
  %_118 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h842d5359bdf9a9d2E"({ i32, i64 }* align 8 %exp_info), !dbg !4548
  br label %bb77, !dbg !4548

bb43:                                             ; preds = %bb42
  %82 = bitcast { i64, i32 }* %_55 to i64*, !dbg !4549
  %i = load i64, i64* %82, align 8, !dbg !4549
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !4549
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !4459, metadata !DIExpression()), !dbg !4550
  %83 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_55, i32 0, i32 1, !dbg !4551
  %c = load i32, i32* %83, align 8, !dbg !4551, !range !478, !noundef !19
  store i32 %c, i32* %c.dbg.spill, align 4, !dbg !4551
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !4461, metadata !DIExpression()), !dbg !4552
; call core::char::methods::<impl char>::to_digit
  %84 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17h8cb00c8fb2f77c0bE"(i32 %c, i32 %radix), !dbg !4553
  store { i32, i32 } %84, { i32, i32 }* %_61, align 4, !dbg !4553
  br label %bb45, !dbg !4553

bb45:                                             ; preds = %bb43
  %85 = bitcast { i32, i32 }* %_61 to i32*, !dbg !4553
  %86 = load i32, i32* %85, align 4, !dbg !4553, !range !1519, !noundef !19
  %_64 = zext i32 %86 to i64, !dbg !4553
  switch i64 %_64, label %bb47 [
    i64 0, label %bb46
    i64 1, label %bb48
  ], !dbg !4554

bb47:                                             ; preds = %bb45
  unreachable, !dbg !4553

bb46:                                             ; preds = %bb45
  switch i32 %c, label %bb73 [
    i32 101, label %bb74
    i32 69, label %bb74
    i32 112, label %bb74
    i32 80, label %bb74
    i32 46, label %bb76
  ], !dbg !4555

bb48:                                             ; preds = %bb45
  %87 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_61, i32 0, i32 1, !dbg !4556
  %digit = load i32, i32* %87, align 4, !dbg !4556
  store i32 %digit, i32* %digit.dbg.spill, align 4, !dbg !4556
  call void @llvm.dbg.declare(metadata i32* %digit.dbg.spill, metadata !4462, metadata !DIExpression()), !dbg !4557
  %_66 = uitofp i32 %radix to float, !dbg !4558
  %88 = load float, float* %sig, align 4, !dbg !4559
  %89 = fmul float %88, %_66, !dbg !4559
  store float %89, float* %sig, align 4, !dbg !4559
  br i1 %is_positive, label %bb49, label %bb50, !dbg !4560

bb50:                                             ; preds = %bb48
  %_73 = zext i32 %digit to i64, !dbg !4561
  %_72 = sitofp i64 %_73 to float, !dbg !4561
  %90 = load float, float* %sig, align 4, !dbg !4562
  %91 = fsub float %90, %_72, !dbg !4562
  store float %91, float* %sig, align 4, !dbg !4562
  br label %bb51, !dbg !4563

bb49:                                             ; preds = %bb48
  %_70 = zext i32 %digit to i64, !dbg !4564
  %_69 = sitofp i64 %_70 to float, !dbg !4564
  %92 = load float, float* %sig, align 4, !dbg !4565
  %93 = fadd float %92, %_69, !dbg !4565
  store float %93, float* %sig, align 4, !dbg !4565
  br label %bb51, !dbg !4563

bb51:                                             ; preds = %bb50, %bb49
  %_76 = load float, float* %prev_sig, align 4, !dbg !4566
  %_75 = fcmp une float %_76, 0.000000e+00, !dbg !4566
  br i1 %_75, label %bb52, label %bb72, !dbg !4566

bb72:                                             ; preds = %bb70, %bb51
  %_111 = load float, float* %sig, align 4, !dbg !4567
  store float %_111, float* %prev_sig, align 4, !dbg !4568
  br label %bb41, !dbg !4547

bb52:                                             ; preds = %bb51
  br i1 %is_positive, label %bb54, label %bb53, !dbg !4569

bb53:                                             ; preds = %bb52
  store i8 0, i8* %_77, align 1, !dbg !4569
  br label %bb55, !dbg !4569

bb54:                                             ; preds = %bb52
  %_80 = load float, float* %sig, align 4, !dbg !4570
  %_81 = load float, float* %prev_sig, align 4, !dbg !4571
  %_79 = fcmp ole float %_80, %_81, !dbg !4570
  %94 = zext i1 %_79 to i8, !dbg !4569
  store i8 %94, i8* %_77, align 1, !dbg !4569
  br label %bb55, !dbg !4569

bb55:                                             ; preds = %bb53, %bb54
  %95 = load i8, i8* %_77, align 1, !dbg !4569, !range !266, !noundef !19
  %96 = trunc i8 %95 to i1, !dbg !4569
  br i1 %96, label %bb56, label %bb57, !dbg !4569

bb57:                                             ; preds = %bb55
  %_83 = xor i1 %is_positive, true, !dbg !4572
  br i1 %_83, label %bb59, label %bb58, !dbg !4572

bb56:                                             ; preds = %bb55
  %97 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !4573
  %98 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %97, i32 0, i32 1, !dbg !4573
  store float 0x7FF0000000000000, float* %98, align 4, !dbg !4573
  %99 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i8*, !dbg !4573
  store i8 0, i8* %99, align 4, !dbg !4573
  br label %bb138, !dbg !4574

bb58:                                             ; preds = %bb57
  store i8 0, i8* %_82, align 1, !dbg !4572
  br label %bb60, !dbg !4572

bb59:                                             ; preds = %bb57
  %_86 = load float, float* %sig, align 4, !dbg !4575
  %_87 = load float, float* %prev_sig, align 4, !dbg !4576
  %_85 = fcmp oge float %_86, %_87, !dbg !4575
  %100 = zext i1 %_85 to i8, !dbg !4572
  store i8 %100, i8* %_82, align 1, !dbg !4572
  br label %bb60, !dbg !4572

bb60:                                             ; preds = %bb58, %bb59
  %101 = load i8, i8* %_82, align 1, !dbg !4572, !range !266, !noundef !19
  %102 = trunc i8 %101 to i1, !dbg !4572
  br i1 %102, label %bb61, label %bb62, !dbg !4572

bb62:                                             ; preds = %bb60
  br i1 %is_positive, label %bb64, label %bb63, !dbg !4577

bb61:                                             ; preds = %bb60
  %103 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !4578
  %104 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %103, i32 0, i32 1, !dbg !4578
  store float 0xFFF0000000000000, float* %104, align 4, !dbg !4578
  %105 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i8*, !dbg !4578
  store i8 0, i8* %105, align 4, !dbg !4578
  br label %bb138, !dbg !4574

bb63:                                             ; preds = %bb62
  store i8 0, i8* %_88, align 1, !dbg !4577
  br label %bb65, !dbg !4577

bb64:                                             ; preds = %bb62
  %_91 = load float, float* %prev_sig, align 4, !dbg !4579
  %_94 = load float, float* %sig, align 4, !dbg !4580
  %_95 = uitofp i32 %digit to float, !dbg !4581
  %_93 = fsub float %_94, %_95, !dbg !4582
  %_97 = uitofp i32 %radix to float, !dbg !4583
  %_92 = fdiv float %_93, %_97, !dbg !4582
  %_90 = fcmp une float %_91, %_92, !dbg !4584
  %106 = zext i1 %_90 to i8, !dbg !4577
  store i8 %106, i8* %_88, align 1, !dbg !4577
  br label %bb65, !dbg !4577

bb65:                                             ; preds = %bb63, %bb64
  %107 = load i8, i8* %_88, align 1, !dbg !4577, !range !266, !noundef !19
  %108 = trunc i8 %107 to i1, !dbg !4577
  br i1 %108, label %bb66, label %bb67, !dbg !4577

bb67:                                             ; preds = %bb65
  %_100 = xor i1 %is_positive, true, !dbg !4585
  br i1 %_100, label %bb69, label %bb68, !dbg !4585

bb66:                                             ; preds = %bb65
  %109 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !4586
  %110 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %109, i32 0, i32 1, !dbg !4586
  store float 0x7FF0000000000000, float* %110, align 4, !dbg !4586
  %111 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i8*, !dbg !4586
  store i8 0, i8* %111, align 4, !dbg !4586
  br label %bb138, !dbg !4574

bb68:                                             ; preds = %bb67
  store i8 0, i8* %_99, align 1, !dbg !4585
  br label %bb70, !dbg !4585

bb69:                                             ; preds = %bb67
  %_103 = load float, float* %prev_sig, align 4, !dbg !4587
  %_106 = load float, float* %sig, align 4, !dbg !4588
  %_107 = uitofp i32 %digit to float, !dbg !4589
  %_105 = fadd float %_106, %_107, !dbg !4590
  %_109 = uitofp i32 %radix to float, !dbg !4591
  %_104 = fdiv float %_105, %_109, !dbg !4590
  %_102 = fcmp une float %_103, %_104, !dbg !4592
  %112 = zext i1 %_102 to i8, !dbg !4585
  store i8 %112, i8* %_99, align 1, !dbg !4585
  br label %bb70, !dbg !4585

bb70:                                             ; preds = %bb68, %bb69
  %113 = load i8, i8* %_99, align 1, !dbg !4585, !range !266, !noundef !19
  %114 = trunc i8 %113 to i1, !dbg !4585
  br i1 %114, label %bb71, label %bb72, !dbg !4585

bb71:                                             ; preds = %bb70
  %115 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !4593
  %116 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %115, i32 0, i32 1, !dbg !4593
  store float 0xFFF0000000000000, float* %116, align 4, !dbg !4593
  %117 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i8*, !dbg !4593
  store i8 0, i8* %117, align 4, !dbg !4593
  br label %bb138, !dbg !4574

bb73:                                             ; preds = %bb46
  %118 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to %"core::result::Result<f32, ParseFloatError>::Err"*, !dbg !4594
  %119 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Err", %"core::result::Result<f32, ParseFloatError>::Err"* %118, i32 0, i32 1, !dbg !4594
  store i8 1, i8* %119, align 1, !dbg !4594
  %120 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i8*, !dbg !4594
  store i8 1, i8* %120, align 4, !dbg !4594
  br label %bb138, !dbg !4595

bb74:                                             ; preds = %bb46, %bb46, %bb46, %bb46
  %121 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 1), !dbg !4596
  %_117.0 = extractvalue { i64, i1 } %121, 0, !dbg !4596
  %_117.1 = extractvalue { i64, i1 } %121, 1, !dbg !4596
  %122 = call i1 @llvm.expect.i1(i1 %_117.1, i1 false), !dbg !4596
  br i1 %122, label %panic, label %bb75, !dbg !4596

bb75:                                             ; preds = %bb74
  %123 = bitcast { i32, i64 }* %_113 to i32*, !dbg !4597
  store i32 %c, i32* %123, align 8, !dbg !4597
  %124 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_113, i32 0, i32 1, !dbg !4597
  store i64 %_117.0, i64* %124, align 8, !dbg !4597
  %125 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_113, i32 0, i32 0, !dbg !4598
  %126 = load i32, i32* %125, align 8, !dbg !4598, !range !478, !noundef !19
  %127 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_113, i32 0, i32 1, !dbg !4598
  %128 = load i64, i64* %127, align 8, !dbg !4598
  %129 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_112, i32 0, i32 0, !dbg !4598
  store i32 %126, i32* %129, align 8, !dbg !4598
  %130 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_112, i32 0, i32 1, !dbg !4598
  store i64 %128, i64* %130, align 8, !dbg !4598
  %131 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_112, i32 0, i32 0, !dbg !4599
  %132 = load i32, i32* %131, align 8, !dbg !4599, !range !477, !noundef !19
  %133 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_112, i32 0, i32 1, !dbg !4599
  %134 = load i64, i64* %133, align 8, !dbg !4599
  %135 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 0, !dbg !4599
  store i32 %132, i32* %135, align 8, !dbg !4599
  %136 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 1, !dbg !4599
  store i64 %134, i64* %136, align 8, !dbg !4599
  br label %bb76, !dbg !4600

panic:                                            ; preds = %bb74
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc6388 to %"core::panic::location::Location"*)) #7, !dbg !4596
  unreachable, !dbg !4596

bb77:                                             ; preds = %bb76
  br i1 %_118, label %bb78, label %bb105, !dbg !4548

bb105:                                            ; preds = %bb104, %bb82, %bb77
  %137 = bitcast { i32, i64 }* %exp_info to i32*, !dbg !4601
  %138 = load i32, i32* %137, align 8, !dbg !4601, !range !477, !noundef !19
  %139 = sub i32 %138, 1114112, !dbg !4601
  %140 = icmp eq i32 %139, 0, !dbg !4601
  %_169 = select i1 %140, i64 0, i64 1, !dbg !4601
  switch i64 %_169, label %bb107 [
    i64 0, label %bb106
    i64 1, label %bb108
  ], !dbg !4602

bb78:                                             ; preds = %bb77
  store float 1.000000e+00, float* %power, align 4, !dbg !4603
; call core::iter::traits::iterator::Iterator::by_ref
  %_122 = call align 8 %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* @_ZN4core4iter6traits8iterator8Iterator6by_ref17h1c8ab6f8dfb47eefE(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* align 8 %cs), !dbg !4604
  br label %bb79, !dbg !4604

bb79:                                             ; preds = %bb78
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_121 = call align 8 %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfd42fc2a0daf9593E"(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* align 8 %_122), !dbg !4604
  br label %bb80, !dbg !4604

bb80:                                             ; preds = %bb79
  store %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* %_121, %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** %iter1, align 8, !dbg !4604
  br label %bb81, !dbg !4605

bb81:                                             ; preds = %bb101, %bb80
; call <&mut I as core::iter::traits::iterator::Iterator>::next
  %141 = call { i64, i32 } @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha8f876ab095cc07bE"(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** align 8 %iter1), !dbg !4501
  store { i64, i32 } %141, { i64, i32 }* %_125, align 8, !dbg !4501
  br label %bb82, !dbg !4501

bb82:                                             ; preds = %bb81
  %142 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_125, i32 0, i32 1, !dbg !4501
  %143 = load i32, i32* %142, align 8, !dbg !4501, !range !477, !noundef !19
  %144 = sub i32 %143, 1114112, !dbg !4501
  %145 = icmp eq i32 %144, 0, !dbg !4501
  %_128 = select i1 %145, i64 0, i64 1, !dbg !4501
  switch i64 %_128, label %bb84 [
    i64 0, label %bb105
    i64 1, label %bb83
  ], !dbg !4501

bb84:                                             ; preds = %bb82
  unreachable, !dbg !4501

bb83:                                             ; preds = %bb82
  %146 = bitcast { i64, i32 }* %_125 to i64*, !dbg !4606
  %i9 = load i64, i64* %146, align 8, !dbg !4606
  store i64 %i9, i64* %i.dbg.spill10, align 8, !dbg !4606
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill10, metadata !4468, metadata !DIExpression()), !dbg !4607
  %147 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_125, i32 0, i32 1, !dbg !4608
  %c11 = load i32, i32* %147, align 8, !dbg !4608, !range !478, !noundef !19
  store i32 %c11, i32* %c.dbg.spill12, align 4, !dbg !4608
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill12, metadata !4470, metadata !DIExpression()), !dbg !4609
; call core::char::methods::<impl char>::to_digit
  %148 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17h8cb00c8fb2f77c0bE"(i32 %c11, i32 %radix), !dbg !4610
  store { i32, i32 } %148, { i32, i32 }* %_131, align 4, !dbg !4610
  br label %bb85, !dbg !4610

bb85:                                             ; preds = %bb83
  %149 = bitcast { i32, i32 }* %_131 to i32*, !dbg !4610
  %150 = load i32, i32* %149, align 4, !dbg !4610, !range !1519, !noundef !19
  %_134 = zext i32 %150 to i64, !dbg !4610
  switch i64 %_134, label %bb87 [
    i64 0, label %bb86
    i64 1, label %bb88
  ], !dbg !4611

bb87:                                             ; preds = %bb85
  unreachable, !dbg !4610

bb86:                                             ; preds = %bb85
  switch i32 %c11, label %bb102 [
    i32 101, label %bb103
    i32 69, label %bb103
    i32 112, label %bb103
    i32 80, label %bb103
  ], !dbg !4612

bb88:                                             ; preds = %bb85
  %151 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_131, i32 0, i32 1, !dbg !4613
  %digit13 = load i32, i32* %151, align 4, !dbg !4613
  store i32 %digit13, i32* %digit.dbg.spill14, align 4, !dbg !4613
  call void @llvm.dbg.declare(metadata i32* %digit.dbg.spill14, metadata !4471, metadata !DIExpression()), !dbg !4614
  %_136 = uitofp i32 %radix to float, !dbg !4615
  %152 = load float, float* %power, align 4, !dbg !4616
  %153 = fdiv float %152, %_136, !dbg !4616
  store float %153, float* %power, align 4, !dbg !4616
  br i1 %is_positive, label %bb89, label %bb90, !dbg !4617

bb90:                                             ; preds = %bb88
  %_145 = load float, float* %sig, align 4, !dbg !4618
  %_147 = uitofp i32 %digit13 to float, !dbg !4619
  %_149 = load float, float* %power, align 4, !dbg !4620
  %_146 = fmul float %_147, %_149, !dbg !4619
  %154 = fsub float %_145, %_146, !dbg !4618
  store float %154, float* %_138, align 4, !dbg !4618
  br label %bb91, !dbg !4621

bb89:                                             ; preds = %bb88
  %_140 = load float, float* %sig, align 4, !dbg !4622
  %_142 = uitofp i32 %digit13 to float, !dbg !4623
  %_144 = load float, float* %power, align 4, !dbg !4624
  %_141 = fmul float %_142, %_144, !dbg !4623
  %155 = fadd float %_140, %_141, !dbg !4622
  store float %155, float* %_138, align 4, !dbg !4622
  br label %bb91, !dbg !4621

bb91:                                             ; preds = %bb90, %bb89
  %156 = load float, float* %_138, align 4, !dbg !4625
  store float %156, float* %sig, align 4, !dbg !4625
  br i1 %is_positive, label %bb93, label %bb92, !dbg !4626

bb92:                                             ; preds = %bb91
  store i8 0, i8* %_150, align 1, !dbg !4626
  br label %bb94, !dbg !4626

bb93:                                             ; preds = %bb91
  %_153 = load float, float* %sig, align 4, !dbg !4627
  %_154 = load float, float* %prev_sig, align 4, !dbg !4628
  %_152 = fcmp olt float %_153, %_154, !dbg !4627
  %157 = zext i1 %_152 to i8, !dbg !4626
  store i8 %157, i8* %_150, align 1, !dbg !4626
  br label %bb94, !dbg !4626

bb94:                                             ; preds = %bb92, %bb93
  %158 = load i8, i8* %_150, align 1, !dbg !4626, !range !266, !noundef !19
  %159 = trunc i8 %158 to i1, !dbg !4626
  br i1 %159, label %bb95, label %bb96, !dbg !4626

bb96:                                             ; preds = %bb94
  %_156 = xor i1 %is_positive, true, !dbg !4629
  br i1 %_156, label %bb98, label %bb97, !dbg !4629

bb95:                                             ; preds = %bb94
  %160 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !4630
  %161 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %160, i32 0, i32 1, !dbg !4630
  store float 0x7FF0000000000000, float* %161, align 4, !dbg !4630
  %162 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i8*, !dbg !4630
  store i8 0, i8* %162, align 4, !dbg !4630
  br label %bb138, !dbg !4631

bb97:                                             ; preds = %bb96
  store i8 0, i8* %_155, align 1, !dbg !4629
  br label %bb99, !dbg !4629

bb98:                                             ; preds = %bb96
  %_159 = load float, float* %sig, align 4, !dbg !4632
  %_160 = load float, float* %prev_sig, align 4, !dbg !4633
  %_158 = fcmp ogt float %_159, %_160, !dbg !4632
  %163 = zext i1 %_158 to i8, !dbg !4629
  store i8 %163, i8* %_155, align 1, !dbg !4629
  br label %bb99, !dbg !4629

bb99:                                             ; preds = %bb97, %bb98
  %164 = load i8, i8* %_155, align 1, !dbg !4629, !range !266, !noundef !19
  %165 = trunc i8 %164 to i1, !dbg !4629
  br i1 %165, label %bb100, label %bb101, !dbg !4629

bb101:                                            ; preds = %bb99
  %_161 = load float, float* %sig, align 4, !dbg !4634
  store float %_161, float* %prev_sig, align 4, !dbg !4635
  br label %bb81, !dbg !4605

bb100:                                            ; preds = %bb99
  %166 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !4636
  %167 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %166, i32 0, i32 1, !dbg !4636
  store float 0xFFF0000000000000, float* %167, align 4, !dbg !4636
  %168 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i8*, !dbg !4636
  store i8 0, i8* %168, align 4, !dbg !4636
  br label %bb138, !dbg !4631

bb102:                                            ; preds = %bb86
  %169 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to %"core::result::Result<f32, ParseFloatError>::Err"*, !dbg !4637
  %170 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Err", %"core::result::Result<f32, ParseFloatError>::Err"* %169, i32 0, i32 1, !dbg !4637
  store i8 1, i8* %170, align 1, !dbg !4637
  %171 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i8*, !dbg !4637
  store i8 1, i8* %171, align 4, !dbg !4637
  br label %bb138, !dbg !4638

bb103:                                            ; preds = %bb86, %bb86, %bb86, %bb86
  %172 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i9, i64 1), !dbg !4639
  %_167.0 = extractvalue { i64, i1 } %172, 0, !dbg !4639
  %_167.1 = extractvalue { i64, i1 } %172, 1, !dbg !4639
  %173 = call i1 @llvm.expect.i1(i1 %_167.1, i1 false), !dbg !4639
  br i1 %173, label %panic15, label %bb104, !dbg !4639

bb104:                                            ; preds = %bb103
  %174 = bitcast { i32, i64 }* %_163 to i32*, !dbg !4640
  store i32 %c11, i32* %174, align 8, !dbg !4640
  %175 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_163, i32 0, i32 1, !dbg !4640
  store i64 %_167.0, i64* %175, align 8, !dbg !4640
  %176 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_163, i32 0, i32 0, !dbg !4641
  %177 = load i32, i32* %176, align 8, !dbg !4641, !range !478, !noundef !19
  %178 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_163, i32 0, i32 1, !dbg !4641
  %179 = load i64, i64* %178, align 8, !dbg !4641
  %180 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_162, i32 0, i32 0, !dbg !4641
  store i32 %177, i32* %180, align 8, !dbg !4641
  %181 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_162, i32 0, i32 1, !dbg !4641
  store i64 %179, i64* %181, align 8, !dbg !4641
  %182 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_162, i32 0, i32 0, !dbg !4642
  %183 = load i32, i32* %182, align 8, !dbg !4642, !range !477, !noundef !19
  %184 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_162, i32 0, i32 1, !dbg !4642
  %185 = load i64, i64* %184, align 8, !dbg !4642
  %186 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 0, !dbg !4642
  store i32 %183, i32* %186, align 8, !dbg !4642
  %187 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 1, !dbg !4642
  store i64 %185, i64* %187, align 8, !dbg !4642
  br label %bb105, !dbg !4643

panic15:                                          ; preds = %bb103
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc6388 to %"core::panic::location::Location"*)) #7, !dbg !4639
  unreachable, !dbg !4639

bb107:                                            ; preds = %bb105
  unreachable, !dbg !4601

bb106:                                            ; preds = %bb105
  store float 1.000000e+00, float* %exp, align 4, !dbg !4644
  br label %bb137, !dbg !4644

bb108:                                            ; preds = %bb105
  %188 = bitcast { i32, i64 }* %exp_info to i32*, !dbg !4645
  %c16 = load i32, i32* %188, align 8, !dbg !4645, !range !478, !noundef !19
  store i32 %c16, i32* %c.dbg.spill17, align 4, !dbg !4645
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill17, metadata !4475, metadata !DIExpression()), !dbg !4646
  %189 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 1, !dbg !4647
  %offset = load i64, i64* %189, align 8, !dbg !4647
  store i64 %offset, i64* %offset.dbg.spill, align 8, !dbg !4647
  call void @llvm.dbg.declare(metadata i64* %offset.dbg.spill, metadata !4477, metadata !DIExpression()), !dbg !4648
  switch i32 %c16, label %bb109 [
    i32 69, label %bb111
    i32 101, label %bb112
    i32 80, label %bb114
    i32 112, label %bb115
  ], !dbg !4649

bb109:                                            ; preds = %bb111, %bb112, %bb114, %bb115, %bb108
  %190 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to %"core::result::Result<f32, ParseFloatError>::Err"*, !dbg !4650
  %191 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Err", %"core::result::Result<f32, ParseFloatError>::Err"* %190, i32 0, i32 1, !dbg !4650
  store i8 1, i8* %191, align 1, !dbg !4650
  %192 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i8*, !dbg !4650
  store i8 1, i8* %192, align 4, !dbg !4650
  br label %bb138, !dbg !4651

bb111:                                            ; preds = %bb108
  %193 = icmp eq i32 %radix, 10, !dbg !4652
  br i1 %193, label %bb110, label %bb109, !dbg !4652

bb112:                                            ; preds = %bb108
  %194 = icmp eq i32 %radix, 10, !dbg !4652
  br i1 %194, label %bb110, label %bb109, !dbg !4652

bb114:                                            ; preds = %bb108
  %195 = icmp eq i32 %radix, 16, !dbg !4653
  br i1 %195, label %bb113, label %bb109, !dbg !4653

bb115:                                            ; preds = %bb108
  %196 = icmp eq i32 %radix, 16, !dbg !4653
  br i1 %196, label %bb113, label %bb109, !dbg !4653

bb113:                                            ; preds = %bb114, %bb115
  store float 2.000000e+00, float* %base, align 4, !dbg !4654
  br label %bb116, !dbg !4654

bb116:                                            ; preds = %bb110, %bb113
  store i64 %offset, i64* %_180, align 8, !dbg !4655
  %197 = load i64, i64* %_180, align 8, !dbg !4656
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %198 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hcc6396edc3b4e7b0E"([0 x i8]* align 1 %src.06, i64 %src.17, i64 %197, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc6388 to %"core::panic::location::Location"*)), !dbg !4656
  %_178.0 = extractvalue { [0 x i8]*, i64 } %198, 0, !dbg !4656
  %_178.1 = extractvalue { [0 x i8]*, i64 } %198, 1, !dbg !4656
  br label %bb117, !dbg !4656

bb110:                                            ; preds = %bb111, %bb112
  store float 1.000000e+01, float* %base, align 4, !dbg !4657
  br label %bb116, !dbg !4657

bb117:                                            ; preds = %bb116
  %199 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill18, i32 0, i32 0, !dbg !4658
  store [0 x i8]* %_178.0, [0 x i8]** %199, align 8, !dbg !4658
  %200 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill18, i32 0, i32 1, !dbg !4658
  store i64 %_178.1, i64* %200, align 8, !dbg !4658
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill18, metadata !4480, metadata !DIExpression()), !dbg !4659
; call <f32 as num_traits::Num>::from_str_radix::slice_shift_char
  call void @"_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix16slice_shift_char17h2a151c24a168fe39E"(%"core::option::Option<(char, &str)>"* sret(%"core::option::Option<(char, &str)>") %_185, [0 x i8]* align 1 %_178.0, i64 %_178.1), !dbg !4660
  br label %bb118, !dbg !4660

bb118:                                            ; preds = %bb117
  %201 = bitcast %"core::option::Option<(char, &str)>"* %_185 to i32*, !dbg !4660
  %202 = load i32, i32* %201, align 8, !dbg !4660, !range !477, !noundef !19
  %203 = sub i32 %202, 1114112, !dbg !4660
  %204 = icmp eq i32 %203, 0, !dbg !4660
  %_187 = select i1 %204, i64 0, i64 1, !dbg !4660
  switch i64 %_187, label %bb121 [
    i64 0, label %bb119
    i64 1, label %bb120
  ], !dbg !4661

bb121:                                            ; preds = %bb118
  unreachable, !dbg !4660

bb119:                                            ; preds = %bb118
  %205 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to %"core::result::Result<f32, ParseFloatError>::Err"*, !dbg !4662
  %206 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Err", %"core::result::Result<f32, ParseFloatError>::Err"* %205, i32 0, i32 1, !dbg !4662
  store i8 1, i8* %206, align 1, !dbg !4662
  %207 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i8*, !dbg !4662
  store i8 1, i8* %207, align 4, !dbg !4662
  br label %bb138, !dbg !4663

bb120:                                            ; preds = %bb118
  %208 = bitcast %"core::option::Option<(char, &str)>"* %_185 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4661
  %209 = bitcast %"core::option::Option<(char, &str)>::Some"* %208 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4661
  %210 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %209 to i32*, !dbg !4661
  %211 = load i32, i32* %210, align 8, !dbg !4661, !range !478, !noundef !19
  switch i32 %211, label %bb126 [
    i32 45, label %bb122
    i32 43, label %bb124
  ], !dbg !4661

bb126:                                            ; preds = %bb120
; call core::str::<impl str>::parse
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h5772aff34b6d4e0bE"(%"core::result::Result<usize, core::num::error::ParseIntError>"* sret(%"core::result::Result<usize, core::num::error::ParseIntError>") %_194, [0 x i8]* align 1 %_178.0, i64 %_178.1), !dbg !4664
  br label %bb127, !dbg !4664

bb122:                                            ; preds = %bb120
  %212 = bitcast %"core::option::Option<(char, &str)>"* %_185 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4665
  %213 = bitcast %"core::option::Option<(char, &str)>::Some"* %212 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4665
  %214 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %213, i32 0, i32 2, !dbg !4665
  %215 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %214, i32 0, i32 0, !dbg !4665
  %src.022 = load [0 x i8]*, [0 x i8]** %215, align 8, !dbg !4665, !nonnull !19, !align !627, !noundef !19
  %216 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %214, i32 0, i32 1, !dbg !4665
  %src.123 = load i64, i64* %216, align 8, !dbg !4665
  %217 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill24, i32 0, i32 0, !dbg !4665
  store [0 x i8]* %src.022, [0 x i8]** %217, align 8, !dbg !4665
  %218 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill24, i32 0, i32 1, !dbg !4665
  store i64 %src.123, i64* %218, align 8, !dbg !4665
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill24, metadata !4485, metadata !DIExpression()), !dbg !4666
; call core::str::<impl str>::parse
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h5772aff34b6d4e0bE"(%"core::result::Result<usize, core::num::error::ParseIntError>"* sret(%"core::result::Result<usize, core::num::error::ParseIntError>") %_189, [0 x i8]* align 1 %src.022, i64 %src.123), !dbg !4667
  br label %bb123, !dbg !4667

bb124:                                            ; preds = %bb120
  %219 = bitcast %"core::option::Option<(char, &str)>"* %_185 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4668
  %220 = bitcast %"core::option::Option<(char, &str)>::Some"* %219 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4668
  %221 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %220, i32 0, i32 2, !dbg !4668
  %222 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %221, i32 0, i32 0, !dbg !4668
  %src.019 = load [0 x i8]*, [0 x i8]** %222, align 8, !dbg !4668, !nonnull !19, !align !627, !noundef !19
  %223 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %221, i32 0, i32 1, !dbg !4668
  %src.120 = load i64, i64* %223, align 8, !dbg !4668
  %224 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill21, i32 0, i32 0, !dbg !4668
  store [0 x i8]* %src.019, [0 x i8]** %224, align 8, !dbg !4668
  %225 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill21, i32 0, i32 1, !dbg !4668
  store i64 %src.120, i64* %225, align 8, !dbg !4668
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill21, metadata !4487, metadata !DIExpression()), !dbg !4669
; call core::str::<impl str>::parse
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h5772aff34b6d4e0bE"(%"core::result::Result<usize, core::num::error::ParseIntError>"* sret(%"core::result::Result<usize, core::num::error::ParseIntError>") %_192, [0 x i8]* align 1 %src.019, i64 %src.120), !dbg !4670
  br label %bb125, !dbg !4670

bb127:                                            ; preds = %bb126
  %226 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_184 to i8*, !dbg !4671
  store i8 1, i8* %226, align 8, !dbg !4671
  %227 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_184, i32 0, i32 2, !dbg !4671
  %228 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %227 to i8*, !dbg !4671
  %229 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %_194 to i8*, !dbg !4671
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %228, i8* align 8 %229, i64 16, i1 false), !dbg !4671
  br label %bb128, !dbg !4672

bb128:                                            ; preds = %bb123, %bb125, %bb127
  %230 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_184 to i8*, !dbg !4673
  %231 = load i8, i8* %230, align 8, !dbg !4673, !range !266, !noundef !19
  %is_positive25 = trunc i8 %231 to i1, !dbg !4673
  %232 = zext i1 %is_positive25 to i8, !dbg !4673
  store i8 %232, i8* %is_positive.dbg.spill26, align 1, !dbg !4673
  call void @llvm.dbg.declare(metadata i8* %is_positive.dbg.spill26, metadata !4482, metadata !DIExpression()), !dbg !4674
  %233 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_184, i32 0, i32 2, !dbg !4675
  %234 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %exp2 to i8*, !dbg !4675
  %235 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %233 to i8*, !dbg !4675
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %234, i8* align 8 %235, i64 16, i1 false), !dbg !4675
  %236 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %_198 to i8*, !dbg !4676
  %237 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %exp2 to i8*, !dbg !4676
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %236, i8* align 8 %237, i64 16, i1 false), !dbg !4676
  %238 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_196 to i8*, !dbg !4677
  %239 = zext i1 %is_positive25 to i8, !dbg !4677
  store i8 %239, i8* %238, align 8, !dbg !4677
  %240 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_196, i32 0, i32 2, !dbg !4677
  %241 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %240 to i8*, !dbg !4677
  %242 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %_198 to i8*, !dbg !4677
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* align 8 %242, i64 16, i1 false), !dbg !4677
  %243 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_196 to i8*, !dbg !4678
  %244 = load i8, i8* %243, align 8, !dbg !4678, !range !266, !noundef !19
  %245 = trunc i8 %244 to i1, !dbg !4678
  br i1 %245, label %bb129, label %bb131, !dbg !4678

bb125:                                            ; preds = %bb124
  %246 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_184 to i8*, !dbg !4679
  store i8 1, i8* %246, align 8, !dbg !4679
  %247 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_184, i32 0, i32 2, !dbg !4679
  %248 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %247 to i8*, !dbg !4679
  %249 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %_192 to i8*, !dbg !4679
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %248, i8* align 8 %249, i64 16, i1 false), !dbg !4679
  br label %bb128, !dbg !4680

bb123:                                            ; preds = %bb122
  %250 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_184 to i8*, !dbg !4681
  store i8 0, i8* %250, align 8, !dbg !4681
  %251 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_184, i32 0, i32 2, !dbg !4681
  %252 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %251 to i8*, !dbg !4681
  %253 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %_189 to i8*, !dbg !4681
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %252, i8* align 8 %253, i64 16, i1 false), !dbg !4681
  br label %bb128, !dbg !4682

bb131:                                            ; preds = %bb128
  %254 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_196, i32 0, i32 2, !dbg !4677
  %255 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %254 to i8*, !dbg !4677
  %256 = load i8, i8* %255, align 8, !dbg !4677, !range !266, !noundef !19
  %257 = trunc i8 %256 to i1, !dbg !4677
  %_200 = zext i1 %257 to i64, !dbg !4677
  %258 = icmp eq i64 %_200, 0, !dbg !4678
  br i1 %258, label %bb135, label %bb130, !dbg !4678

bb129:                                            ; preds = %bb128
  %259 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_196, i32 0, i32 2, !dbg !4677
  %260 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %259 to i8*, !dbg !4677
  %261 = load i8, i8* %260, align 8, !dbg !4677, !range !266, !noundef !19
  %262 = trunc i8 %261 to i1, !dbg !4677
  %_199 = zext i1 %262 to i64, !dbg !4677
  %263 = icmp eq i64 %_199, 0, !dbg !4678
  br i1 %263, label %bb134, label %bb130, !dbg !4678

bb134:                                            ; preds = %bb129
  %264 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_196, i32 0, i32 2, !dbg !4683
  %265 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %264 to %"core::result::Result<usize, core::num::error::ParseIntError>::Ok"*, !dbg !4683
  %266 = getelementptr inbounds %"core::result::Result<usize, core::num::error::ParseIntError>::Ok", %"core::result::Result<usize, core::num::error::ParseIntError>::Ok"* %265, i32 0, i32 1, !dbg !4683
  %exp27 = load i64, i64* %266, align 8, !dbg !4683
  store i64 %exp27, i64* %exp.dbg.spill, align 8, !dbg !4683
  call void @llvm.dbg.declare(metadata i64* %exp.dbg.spill, metadata !4489, metadata !DIExpression()), !dbg !4684
  %_203 = load float, float* %base, align 4, !dbg !4685
; call <f32 as num_traits::Num>::from_str_radix::pow
  %267 = call float @"_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix3pow17hdd4cfebcf626832eE"(float %_203, i64 %exp27), !dbg !4686
  store float %267, float* %exp, align 4, !dbg !4686
  br label %bb137, !dbg !4686

bb130:                                            ; preds = %bb131, %bb129
  %268 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_196, i32 0, i32 2, !dbg !4677
  %269 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %268 to i8*, !dbg !4677
  %270 = load i8, i8* %269, align 8, !dbg !4677, !range !266, !noundef !19
  %271 = trunc i8 %270 to i1, !dbg !4677
  %_201 = zext i1 %271 to i64, !dbg !4677
  %272 = icmp eq i64 %_201, 1, !dbg !4678
  br i1 %272, label %bb133, label %bb132, !dbg !4678

bb137:                                            ; preds = %bb106, %bb136, %bb134
  %_210 = load float, float* %sig, align 4, !dbg !4687
  %_211 = load float, float* %exp, align 4, !dbg !4688
  %_209 = fmul float %_210, %_211, !dbg !4687
  %273 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !4689
  %274 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %273, i32 0, i32 1, !dbg !4689
  store float %_209, float* %274, align 4, !dbg !4689
  %275 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i8*, !dbg !4689
  store i8 0, i8* %275, align 4, !dbg !4689
  br label %bb138, !dbg !4512

bb135:                                            ; preds = %bb131
  %276 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_196, i32 0, i32 2, !dbg !4690
  %277 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %276 to %"core::result::Result<usize, core::num::error::ParseIntError>::Ok"*, !dbg !4690
  %278 = getelementptr inbounds %"core::result::Result<usize, core::num::error::ParseIntError>::Ok", %"core::result::Result<usize, core::num::error::ParseIntError>::Ok"* %277, i32 0, i32 1, !dbg !4690
  %exp28 = load i64, i64* %278, align 8, !dbg !4690
  store i64 %exp28, i64* %exp.dbg.spill29, align 8, !dbg !4690
  call void @llvm.dbg.declare(metadata i64* %exp.dbg.spill29, metadata !4491, metadata !DIExpression()), !dbg !4691
  %_207 = load float, float* %base, align 4, !dbg !4692
; call <f32 as num_traits::Num>::from_str_radix::pow
  %_206 = call float @"_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix3pow17hdd4cfebcf626832eE"(float %_207, i64 %exp28), !dbg !4693
  br label %bb136, !dbg !4693

bb133:                                            ; preds = %bb130
  %279 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to %"core::result::Result<f32, ParseFloatError>::Err"*, !dbg !4694
  %280 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Err", %"core::result::Result<f32, ParseFloatError>::Err"* %279, i32 0, i32 1, !dbg !4694
  store i8 1, i8* %280, align 1, !dbg !4694
  %281 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i8*, !dbg !4694
  store i8 1, i8* %281, align 4, !dbg !4694
  br label %bb138, !dbg !4695

bb132:                                            ; preds = %bb130
  unreachable, !dbg !4677

bb136:                                            ; preds = %bb135
  %282 = fdiv float 1.000000e+00, %_206, !dbg !4696
  store float %282, float* %exp, align 4, !dbg !4696
  br label %bb137, !dbg !4697

bb2:                                              ; preds = %bb1
  %283 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*, !dbg !4698
  %284 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %283, i32 0, i32 0, !dbg !4698
  store [0 x i8]* %src.0, [0 x i8]** %284, align 8, !dbg !4698
  %285 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %283, i32 0, i32 1, !dbg !4698
  store i64 %src.1, i64* %285, align 8, !dbg !4698
  %286 = bitcast %"core::result::Result<f32, core::num::dec2flt::ParseFloatError>"* %_4 to i64*, !dbg !4506
  %287 = load i64, i64* %286, align 4, !dbg !4506
  %288 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !4506
  %289 = load i8*, i8** %288, align 8, !dbg !4506, !nonnull !19, !align !627, !noundef !19
  %290 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !4506
  %291 = load i64, i64* %290, align 8, !dbg !4506
; call core::result::Result<T,E>::map_err
  %292 = call i64 @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha4a48964b3dc122bE"(i64 %287, i8* align 1 %289, i64 %291), !dbg !4506
  store i64 %292, i64* %0, align 8, !dbg !4506
  %293 = bitcast %"core::result::Result<f32, ParseFloatError>"* %2 to i8*, !dbg !4506
  %294 = bitcast i64* %0 to i8*, !dbg !4506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %293, i8* align 8 %294, i64 8, i1 false), !dbg !4506
  br label %bb138, !dbg !4506
}

; <f32 as num_traits::Num>::from_str_radix::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix28_$u7b$$u7b$closure$u7d$$u7d$17h38734442aa3cd03bE"(i8* align 1 %0, i64 %1, i1 zeroext %_2) unnamed_addr #0 !dbg !4699 {
start:
  %_2.dbg.spill = alloca i8, align 1
  %_3 = alloca i8, align 1
  %2 = alloca i8, align 1
  %_1 = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_1, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_1, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %_1 to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  %7 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !19, !align !627, !noundef !19
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %_1, metadata !4703, metadata !DIExpression(DW_OP_deref)), !dbg !4705
  %10 = zext i1 %_2 to i8
  store i8 %10, i8* %_2.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %_2.dbg.spill, metadata !4704, metadata !DIExpression()), !dbg !4706
  %11 = bitcast { i8*, i64 }* %_1 to { [0 x i8]*, i64 }*, !dbg !4707
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0, !dbg !4707
  %_6.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !dbg !4707, !nonnull !19, !align !627, !noundef !19
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1, !dbg !4707
  %_6.1 = load i64, i64* %13, align 8, !dbg !4707
; call core::str::<impl str>::is_empty
  %_4 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17hbddfdad1e87f60d4E"([0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !4707
  br label %bb1, !dbg !4707

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3, !dbg !4707

bb3:                                              ; preds = %bb1
  store i8 1, i8* %_3, align 1, !dbg !4708
  br label %bb4, !dbg !4709

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_3, align 1, !dbg !4710
  br label %bb4, !dbg !4709

bb4:                                              ; preds = %bb3, %bb2
  %14 = load i8, i8* %_3, align 1, !dbg !4711, !range !266, !noundef !19
  %15 = trunc i8 %14 to i1, !dbg !4711
  %16 = zext i1 %15 to i8, !dbg !4711
  store i8 %16, i8* %2, align 1, !dbg !4711
  %17 = load i8, i8* %2, align 1, !dbg !4712, !range !266, !noundef !19
  %18 = trunc i8 %17 to i1, !dbg !4712
  ret i1 %18, !dbg !4712
}

; <f32 as num_traits::Num>::from_str_radix::slice_shift_char
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix16slice_shift_char17h2a151c24a168fe39E"(%"core::option::Option<(char, &str)>"* sret(%"core::option::Option<(char, &str)>") %0, [0 x i8]* align 1 %src.0, i64 %src.1) unnamed_addr #1 !dbg !4713 {
start:
  %val.dbg.spill = alloca i32, align 4
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %src.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_6 = alloca i32, align 4
  %_4 = alloca { i32, [1 x i32], { [0 x i8]*, i64 } }, align 8
  %chars = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 0
  store [0 x i8]* %src.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 1
  store i64 %src.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill, metadata !4717, metadata !DIExpression()), !dbg !4724
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %chars, metadata !4718, metadata !DIExpression()), !dbg !4725
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !4720, metadata !DIExpression()), !dbg !4726
; call core::str::<impl str>::chars
  %3 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h7bf8534f8214801fE"([0 x i8]* align 1 %src.0, i64 %src.1), !dbg !4727
  store { i8*, i8* } %3, { i8*, i8* }* %chars, align 8, !dbg !4727
  br label %bb1, !dbg !4727

bb1:                                              ; preds = %start
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_7 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc2c8c40ef0f18e21E"({ i8*, i8* }* align 8 %chars), !dbg !4728, !range !477
  br label %bb2, !dbg !4728

bb2:                                              ; preds = %bb1
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %4 = call i32 @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h934df6cd5ceddcc0E"(i32 %_7), !dbg !4728, !range !477
  store i32 %4, i32* %_6, align 4, !dbg !4728
  br label %bb3, !dbg !4728

bb3:                                              ; preds = %bb2
  %5 = load i32, i32* %_6, align 4, !dbg !4728, !range !477, !noundef !19
  %6 = sub i32 %5, 1114112, !dbg !4728
  %7 = icmp eq i32 %6, 0, !dbg !4728
  %_9 = select i1 %7, i64 1, i64 0, !dbg !4728
  switch i64 %_9, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ], !dbg !4728

bb5:                                              ; preds = %bb3
  unreachable, !dbg !4728

bb4:                                              ; preds = %bb3
  %val = load i32, i32* %_6, align 4, !dbg !4728, !range !478, !noundef !19
  store i32 %val, i32* %val.dbg.spill, align 4, !dbg !4728
  call void @llvm.dbg.declare(metadata i32* %val.dbg.spill, metadata !4722, metadata !DIExpression()), !dbg !4729
; call core::str::iter::Chars::as_str
  %8 = call { [0 x i8]*, i64 } @_ZN4core3str4iter5Chars6as_str17h1d84951d6b563a74E({ i8*, i8* }* align 8 %chars), !dbg !4730
  %_14.0 = extractvalue { [0 x i8]*, i64 } %8, 0, !dbg !4730
  %_14.1 = extractvalue { [0 x i8]*, i64 } %8, 1, !dbg !4730
  br label %bb7, !dbg !4730

bb6:                                              ; preds = %bb3
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  call void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hba229eeb2623e15bE"(%"core::option::Option<(char, &str)>"* sret(%"core::option::Option<(char, &str)>") %0), !dbg !4731
  br label %bb8, !dbg !4731

bb8:                                              ; preds = %bb7, %bb6
  ret void, !dbg !4732

bb7:                                              ; preds = %bb4
  %9 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %_4 to i32*, !dbg !4733
  store i32 %val, i32* %9, align 8, !dbg !4733
  %10 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %_4, i32 0, i32 2, !dbg !4733
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0, !dbg !4733
  store [0 x i8]* %_14.0, [0 x i8]** %11, align 8, !dbg !4733
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1, !dbg !4733
  store i64 %_14.1, i64* %12, align 8, !dbg !4733
  %13 = bitcast %"core::option::Option<(char, &str)>"* %0 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4734
  %14 = bitcast %"core::option::Option<(char, &str)>::Some"* %13 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4734
  %15 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %14 to i8*, !dbg !4734
  %16 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %_4 to i8*, !dbg !4734
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false), !dbg !4734
  br label %bb8, !dbg !4732
}

; <f32 as num_traits::Num>::from_str_radix::pow
; Function Attrs: nonlazybind uwtable
define internal float @"_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix3pow17hdd4cfebcf626832eE"(float %base, i64 %exp) unnamed_addr #1 !dbg !4735 {
start:
  %exp.dbg.spill = alloca i64, align 8
  %base.dbg.spill = alloca float, align 4
  store float %base, float* %base.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %base.dbg.spill, metadata !4739, metadata !DIExpression()), !dbg !4741
  store i64 %exp, i64* %exp.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %exp.dbg.spill, metadata !4740, metadata !DIExpression()), !dbg !4742
  %_4 = trunc i64 %exp to i32, !dbg !4743
; call <f32 as num_traits::float::Float>::powi
  %0 = call float @"_ZN48_$LT$f32$u20$as$u20$num_traits..float..Float$GT$4powi17h332eaedf2e3a860bE"(float %base, i32 %_4), !dbg !4744
  br label %bb1, !dbg !4744

bb1:                                              ; preds = %start
  ret float %0, !dbg !4745
}

; <f64 as num_traits::Num>::from_str_radix
; Function Attrs: nonlazybind uwtable
define void @"_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix17h409d5ce935d7d020E"(%"core::result::Result<f64, ParseFloatError>"* sret(%"core::result::Result<f64, ParseFloatError>") %0, [0 x i8]* align 1 %src.0, i64 %src.1, i32 %radix) unnamed_addr #1 !dbg !4746 {
start:
  %exp.dbg.spill29 = alloca i64, align 8
  %exp.dbg.spill = alloca i64, align 8
  %is_positive.dbg.spill26 = alloca i8, align 1
  %src.dbg.spill24 = alloca { [0 x i8]*, i64 }, align 8
  %src.dbg.spill21 = alloca { [0 x i8]*, i64 }, align 8
  %src.dbg.spill18 = alloca { [0 x i8]*, i64 }, align 8
  %offset.dbg.spill = alloca i64, align 8
  %c.dbg.spill17 = alloca i32, align 4
  %digit.dbg.spill14 = alloca i32, align 4
  %c.dbg.spill12 = alloca i32, align 4
  %i.dbg.spill10 = alloca i64, align 8
  %digit.dbg.spill = alloca i32, align 4
  %c.dbg.spill = alloca i32, align 4
  %i.dbg.spill = alloca i64, align 8
  %src.dbg.spill8 = alloca { [0 x i8]*, i64 }, align 8
  %is_positive.dbg.spill = alloca i8, align 1
  %src.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %radix.dbg.spill = alloca i32, align 4
  %src.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_198 = alloca %"core::result::Result<usize, core::num::error::ParseIntError>", align 8
  %_196 = alloca { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, align 8
  %_194 = alloca %"core::result::Result<usize, core::num::error::ParseIntError>", align 8
  %_192 = alloca %"core::result::Result<usize, core::num::error::ParseIntError>", align 8
  %_189 = alloca %"core::result::Result<usize, core::num::error::ParseIntError>", align 8
  %_185 = alloca %"core::option::Option<(char, &str)>", align 8
  %_184 = alloca { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, align 8
  %exp2 = alloca %"core::result::Result<usize, core::num::error::ParseIntError>", align 8
  %_180 = alloca i64, align 8
  %base = alloca double, align 8
  %exp = alloca double, align 8
  %_163 = alloca { i32, i64 }, align 8
  %_162 = alloca { i32, i64 }, align 8
  %_155 = alloca i8, align 1
  %_150 = alloca i8, align 1
  %_138 = alloca double, align 8
  %_131 = alloca { i32, i32 }, align 4
  %_125 = alloca { i64, i32 }, align 8
  %iter1 = alloca %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"*, align 8
  %power = alloca double, align 8
  %_113 = alloca { i32, i64 }, align 8
  %_112 = alloca { i32, i64 }, align 8
  %_99 = alloca i8, align 1
  %_88 = alloca i8, align 1
  %_82 = alloca i8, align 1
  %_77 = alloca i8, align 1
  %_61 = alloca { i32, i32 }, align 4
  %_55 = alloca { i64, i32 }, align 8
  %iter = alloca %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"*, align 8
  %exp_info = alloca { i32, i64 }, align 8
  %cs = alloca %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>", align 8
  %prev_sig = alloca double, align 8
  %sig = alloca double, align 8
  %_37 = alloca %"core::option::Option<(char, &str)>", align 8
  %_36 = alloca { i8, [7 x i8], { [0 x i8]*, i64 } }, align 8
  %_17 = alloca i8, align 1
  %_8 = alloca i8, align 1
  %_6 = alloca { i8*, i64 }, align 8
  %_4 = alloca %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>", align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 0
  store [0 x i8]* %src.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 1
  store i64 %src.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill, metadata !4750, metadata !DIExpression()), !dbg !4801
  store i32 %radix, i32* %radix.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %radix.dbg.spill, metadata !4751, metadata !DIExpression()), !dbg !4802
  call void @llvm.dbg.declare(metadata double* %sig, metadata !4757, metadata !DIExpression()), !dbg !4803
  call void @llvm.dbg.declare(metadata double* %prev_sig, metadata !4759, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.declare(metadata %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* %cs, metadata !4761, metadata !DIExpression()), !dbg !4805
  call void @llvm.dbg.declare(metadata { i32, i64 }* %exp_info, metadata !4763, metadata !DIExpression()), !dbg !4806
  call void @llvm.dbg.declare(metadata %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** %iter, metadata !4765, metadata !DIExpression()), !dbg !4807
  call void @llvm.dbg.declare(metadata double* %power, metadata !4772, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.declare(metadata %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** %iter1, metadata !4774, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.declare(metadata double* %exp, metadata !4781, metadata !DIExpression()), !dbg !4810
  call void @llvm.dbg.declare(metadata double* %base, metadata !4786, metadata !DIExpression()), !dbg !4811
  call void @llvm.dbg.declare(metadata %"core::result::Result<usize, core::num::error::ParseIntError>"* %exp2, metadata !4792, metadata !DIExpression()), !dbg !4812
  %3 = icmp eq i32 %radix, 10, !dbg !4813
  br i1 %3, label %bb1, label %bb3, !dbg !4813

bb1:                                              ; preds = %start
; call core::str::<impl str>::parse
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h31efd52ee692bc52E"(%"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* sret(%"core::result::Result<f64, core::num::dec2flt::ParseFloatError>") %_4, [0 x i8]* align 1 %src.0, i64 %src.1), !dbg !4814
  br label %bb2, !dbg !4814

bb3:                                              ; preds = %start
; call num_traits::str_to_ascii_lower_eq_str
  %_9 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17he6b1e18fd8245256E([0 x i8]* align 1 %src.0, i64 %src.1, [0 x i8]* align 1 bitcast (<{ [3 x i8] }>* @alloc6389 to [0 x i8]*), i64 3), !dbg !4815
  br label %bb7, !dbg !4815

bb7:                                              ; preds = %bb3
  br i1 %_9, label %bb4, label %bb5, !dbg !4815

bb5:                                              ; preds = %bb7
; call num_traits::str_to_ascii_lower_eq_str
  %_13 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17he6b1e18fd8245256E([0 x i8]* align 1 %src.0, i64 %src.1, [0 x i8]* align 1 bitcast (<{ [8 x i8] }>* @alloc6390 to [0 x i8]*), i64 8), !dbg !4816
  br label %bb8, !dbg !4816

bb4:                                              ; preds = %bb7
  store i8 1, i8* %_8, align 1, !dbg !4815
  br label %bb6, !dbg !4815

bb6:                                              ; preds = %bb8, %bb4
  %4 = load i8, i8* %_8, align 1, !dbg !4815, !range !266, !noundef !19
  %5 = trunc i8 %4 to i1, !dbg !4815
  br i1 %5, label %bb9, label %bb10, !dbg !4815

bb8:                                              ; preds = %bb5
  %6 = zext i1 %_13 to i8, !dbg !4815
  store i8 %6, i8* %_8, align 1, !dbg !4815
  br label %bb6, !dbg !4815

bb10:                                             ; preds = %bb6
; call num_traits::str_to_ascii_lower_eq_str
  %_18 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17he6b1e18fd8245256E([0 x i8]* align 1 %src.0, i64 %src.1, [0 x i8]* align 1 bitcast (<{ [4 x i8] }>* @alloc6391 to [0 x i8]*), i64 4), !dbg !4817
  br label %bb14, !dbg !4817

bb9:                                              ; preds = %bb6
  %7 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4818
  %8 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %7, i32 0, i32 1, !dbg !4818
  store double 0x7FF0000000000000, double* %8, align 8, !dbg !4818
  %9 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !4818
  store i8 0, i8* %9, align 8, !dbg !4818
  br label %bb138, !dbg !4819

bb138:                                            ; preds = %bb2, %bb30, %bb137, %bb119, %bb133, %bb109, %bb102, %bb100, %bb95, %bb73, %bb71, %bb66, %bb61, %bb56, %bb31, %bb22, %bb19, %bb16, %bb9
  ret void, !dbg !4820

bb14:                                             ; preds = %bb10
  br i1 %_18, label %bb11, label %bb12, !dbg !4817

bb12:                                             ; preds = %bb14
; call num_traits::str_to_ascii_lower_eq_str
  %_22 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17he6b1e18fd8245256E([0 x i8]* align 1 %src.0, i64 %src.1, [0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @alloc6392 to [0 x i8]*), i64 9), !dbg !4821
  br label %bb15, !dbg !4821

bb11:                                             ; preds = %bb14
  store i8 1, i8* %_17, align 1, !dbg !4817
  br label %bb13, !dbg !4817

bb13:                                             ; preds = %bb15, %bb11
  %10 = load i8, i8* %_17, align 1, !dbg !4817, !range !266, !noundef !19
  %11 = trunc i8 %10 to i1, !dbg !4817
  br i1 %11, label %bb16, label %bb17, !dbg !4817

bb15:                                             ; preds = %bb12
  %12 = zext i1 %_22 to i8, !dbg !4817
  store i8 %12, i8* %_17, align 1, !dbg !4817
  br label %bb13, !dbg !4817

bb17:                                             ; preds = %bb13
; call num_traits::str_to_ascii_lower_eq_str
  %_26 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17he6b1e18fd8245256E([0 x i8]* align 1 %src.0, i64 %src.1, [0 x i8]* align 1 bitcast (<{ [3 x i8] }>* @alloc6393 to [0 x i8]*), i64 3), !dbg !4822
  br label %bb18, !dbg !4822

bb16:                                             ; preds = %bb13
  %13 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4823
  %14 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %13, i32 0, i32 1, !dbg !4823
  store double 0xFFF0000000000000, double* %14, align 8, !dbg !4823
  %15 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !4823
  store i8 0, i8* %15, align 8, !dbg !4823
  br label %bb138, !dbg !4824

bb18:                                             ; preds = %bb17
  br i1 %_26, label %bb19, label %bb20, !dbg !4822

bb20:                                             ; preds = %bb18
; call num_traits::str_to_ascii_lower_eq_str
  %_30 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17he6b1e18fd8245256E([0 x i8]* align 1 %src.0, i64 %src.1, [0 x i8]* align 1 bitcast (<{ [4 x i8] }>* @alloc6394 to [0 x i8]*), i64 4), !dbg !4825
  br label %bb21, !dbg !4825

bb19:                                             ; preds = %bb18
  %16 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4826
  %17 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %16, i32 0, i32 1, !dbg !4826
  store double 0x7FF8000000000000, double* %17, align 8, !dbg !4826
  %18 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !4826
  store i8 0, i8* %18, align 8, !dbg !4826
  br label %bb138, !dbg !4827

bb21:                                             ; preds = %bb20
  br i1 %_30, label %bb22, label %bb23, !dbg !4825

bb23:                                             ; preds = %bb21
; call <f64 as num_traits::Num>::from_str_radix::slice_shift_char
  call void @"_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix16slice_shift_char17hb8d8a487f4573dbbE"(%"core::option::Option<(char, &str)>"* sret(%"core::option::Option<(char, &str)>") %_37, [0 x i8]* align 1 %src.0, i64 %src.1), !dbg !4828
  br label %bb24, !dbg !4828

bb22:                                             ; preds = %bb21
  %19 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4829
  %20 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %19, i32 0, i32 1, !dbg !4829
  store double 0xFFF8000000000000, double* %20, align 8, !dbg !4829
  %21 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !4829
  store i8 0, i8* %21, align 8, !dbg !4829
  br label %bb138, !dbg !4830

bb24:                                             ; preds = %bb23
  %22 = bitcast %"core::option::Option<(char, &str)>"* %_37 to i32*, !dbg !4828
  %23 = load i32, i32* %22, align 8, !dbg !4828, !range !477, !noundef !19
  %24 = sub i32 %23, 1114112, !dbg !4828
  %25 = icmp eq i32 %24, 0, !dbg !4828
  %_40 = select i1 %25, i64 0, i64 1, !dbg !4828
  switch i64 %_40, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb25
  ], !dbg !4831

bb29:                                             ; preds = %bb24
  unreachable, !dbg !4828

bb30:                                             ; preds = %bb24
  %26 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Err"*, !dbg !4832
  %27 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Err", %"core::result::Result<f64, ParseFloatError>::Err"* %26, i32 0, i32 1, !dbg !4832
  store i8 0, i8* %27, align 1, !dbg !4832
  %28 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !4832
  store i8 1, i8* %28, align 8, !dbg !4832
  br label %bb138, !dbg !4833

bb25:                                             ; preds = %bb24
  %29 = bitcast %"core::option::Option<(char, &str)>"* %_37 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4831
  %30 = bitcast %"core::option::Option<(char, &str)>::Some"* %29 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4831
  %31 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %30 to i32*, !dbg !4831
  %32 = load i32, i32* %31, align 8, !dbg !4831, !range !478, !noundef !19
  %33 = icmp eq i32 %32, 45, !dbg !4831
  br i1 %33, label %bb26, label %bb28, !dbg !4831

bb26:                                             ; preds = %bb25
  %34 = bitcast %"core::option::Option<(char, &str)>"* %_37 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4834
  %35 = bitcast %"core::option::Option<(char, &str)>::Some"* %34 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4834
  %36 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %35, i32 0, i32 2, !dbg !4834
  %37 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %36, i32 0, i32 0, !dbg !4834
  %38 = load [0 x i8]*, [0 x i8]** %37, align 8, !dbg !4834, !nonnull !19, !align !627, !noundef !19
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %36, i32 0, i32 1, !dbg !4834
  %40 = load i64, i64* %39, align 8, !dbg !4834
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_39 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h328ca116de78cfaaE"([0 x i8]* align 1 %38, i64 %40, [0 x i8]* align 1 bitcast (<{}>* @alloc6395 to [0 x i8]*), i64 0), !dbg !4834
  br label %bb27, !dbg !4834

bb28:                                             ; preds = %bb25
  %41 = bitcast { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36 to i8*, !dbg !4835
  store i8 1, i8* %41, align 8, !dbg !4835
  %42 = getelementptr inbounds { i8, [7 x i8], { [0 x i8]*, i64 } }, { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36, i32 0, i32 2, !dbg !4835
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %42, i32 0, i32 0, !dbg !4835
  store [0 x i8]* %src.0, [0 x i8]** %43, align 8, !dbg !4835
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %42, i32 0, i32 1, !dbg !4835
  store i64 %src.1, i64* %44, align 8, !dbg !4835
  br label %bb33, !dbg !4836

bb33:                                             ; preds = %bb32, %bb28
  %45 = bitcast { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36 to i8*, !dbg !4837
  %46 = load i8, i8* %45, align 8, !dbg !4837, !range !266, !noundef !19
  %is_positive = trunc i8 %46 to i1, !dbg !4837
  %47 = zext i1 %is_positive to i8, !dbg !4837
  store i8 %47, i8* %is_positive.dbg.spill, align 1, !dbg !4837
  call void @llvm.dbg.declare(metadata i8* %is_positive.dbg.spill, metadata !4752, metadata !DIExpression()), !dbg !4838
  %48 = getelementptr inbounds { i8, [7 x i8], { [0 x i8]*, i64 } }, { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36, i32 0, i32 2, !dbg !4839
  %49 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %48, i32 0, i32 0, !dbg !4839
  %src.06 = load [0 x i8]*, [0 x i8]** %49, align 8, !dbg !4839, !nonnull !19, !align !627, !noundef !19
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %48, i32 0, i32 1, !dbg !4839
  %src.17 = load i64, i64* %50, align 8, !dbg !4839
  %51 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill8, i32 0, i32 0, !dbg !4839
  store [0 x i8]* %src.06, [0 x i8]** %51, align 8, !dbg !4839
  %52 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill8, i32 0, i32 1, !dbg !4839
  store i64 %src.17, i64* %52, align 8, !dbg !4839
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill8, metadata !4754, metadata !DIExpression()), !dbg !4840
  br i1 %is_positive, label %bb34, label %bb35, !dbg !4841

bb27:                                             ; preds = %bb26
  br i1 %_39, label %bb31, label %bb32, !dbg !4834

bb32:                                             ; preds = %bb27
  %53 = bitcast %"core::option::Option<(char, &str)>"* %_37 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4842
  %54 = bitcast %"core::option::Option<(char, &str)>::Some"* %53 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4842
  %55 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %54, i32 0, i32 2, !dbg !4842
  %56 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %55, i32 0, i32 0, !dbg !4842
  %src.03 = load [0 x i8]*, [0 x i8]** %56, align 8, !dbg !4842, !nonnull !19, !align !627, !noundef !19
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %55, i32 0, i32 1, !dbg !4842
  %src.14 = load i64, i64* %57, align 8, !dbg !4842
  %58 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill5, i32 0, i32 0, !dbg !4842
  store [0 x i8]* %src.03, [0 x i8]** %58, align 8, !dbg !4842
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill5, i32 0, i32 1, !dbg !4842
  store i64 %src.14, i64* %59, align 8, !dbg !4842
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill5, metadata !4755, metadata !DIExpression()), !dbg !4843
  %60 = bitcast { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36 to i8*, !dbg !4844
  store i8 0, i8* %60, align 8, !dbg !4844
  %61 = getelementptr inbounds { i8, [7 x i8], { [0 x i8]*, i64 } }, { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36, i32 0, i32 2, !dbg !4844
  %62 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 0, !dbg !4844
  store [0 x i8]* %src.03, [0 x i8]** %62, align 8, !dbg !4844
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 1, !dbg !4844
  store i64 %src.14, i64* %63, align 8, !dbg !4844
  br label %bb33, !dbg !4845

bb31:                                             ; preds = %bb27
  %64 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Err"*, !dbg !4846
  %65 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Err", %"core::result::Result<f64, ParseFloatError>::Err"* %64, i32 0, i32 1, !dbg !4846
  store i8 0, i8* %65, align 1, !dbg !4846
  %66 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !4846
  store i8 1, i8* %66, align 8, !dbg !4846
  br label %bb138, !dbg !4847

bb35:                                             ; preds = %bb33
  store double -0.000000e+00, double* %sig, align 8, !dbg !4848
  br label %bb36, !dbg !4849

bb34:                                             ; preds = %bb33
  store double 0.000000e+00, double* %sig, align 8, !dbg !4850
  br label %bb36, !dbg !4849

bb36:                                             ; preds = %bb35, %bb34
  %67 = load double, double* %sig, align 8, !dbg !4851
  store double %67, double* %prev_sig, align 8, !dbg !4851
; call core::str::<impl str>::chars
  %68 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h7bf8534f8214801fE"([0 x i8]* align 1 %src.06, i64 %src.17), !dbg !4852
  %_48.0 = extractvalue { i8*, i8* } %68, 0, !dbg !4852
  %_48.1 = extractvalue { i8*, i8* } %68, 1, !dbg !4852
  br label %bb37, !dbg !4852

bb37:                                             ; preds = %bb36
; call core::iter::traits::iterator::Iterator::enumerate
  call void @_ZN4core4iter6traits8iterator8Iterator9enumerate17h117ad964b76af218E(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* sret(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>") %cs, i8* %_48.0, i8* %_48.1), !dbg !4852
  br label %bb38, !dbg !4852

bb38:                                             ; preds = %bb37
  %69 = bitcast { i32, i64 }* %exp_info to i32*, !dbg !4853
  store i32 1114112, i32* %69, align 8, !dbg !4853
; call core::iter::traits::iterator::Iterator::by_ref
  %_52 = call align 8 %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* @_ZN4core4iter6traits8iterator8Iterator6by_ref17h1c8ab6f8dfb47eefE(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* align 8 %cs), !dbg !4854
  br label %bb39, !dbg !4854

bb39:                                             ; preds = %bb38
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_51 = call align 8 %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfd42fc2a0daf9593E"(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* align 8 %_52), !dbg !4854
  br label %bb40, !dbg !4854

bb40:                                             ; preds = %bb39
  store %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* %_51, %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** %iter, align 8, !dbg !4854
  br label %bb41, !dbg !4855

bb41:                                             ; preds = %bb72, %bb40
; call <&mut I as core::iter::traits::iterator::Iterator>::next
  %70 = call { i64, i32 } @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha8f876ab095cc07bE"(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** align 8 %iter), !dbg !4807
  store { i64, i32 } %70, { i64, i32 }* %_55, align 8, !dbg !4807
  br label %bb42, !dbg !4807

bb42:                                             ; preds = %bb41
  %71 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_55, i32 0, i32 1, !dbg !4807
  %72 = load i32, i32* %71, align 8, !dbg !4807, !range !477, !noundef !19
  %73 = sub i32 %72, 1114112, !dbg !4807
  %74 = icmp eq i32 %73, 0, !dbg !4807
  %_58 = select i1 %74, i64 0, i64 1, !dbg !4807
  switch i64 %_58, label %bb44 [
    i64 0, label %bb76
    i64 1, label %bb43
  ], !dbg !4807

bb44:                                             ; preds = %bb42
  unreachable, !dbg !4807

bb76:                                             ; preds = %bb75, %bb46, %bb42
; call core::option::Option<T>::is_none
  %_118 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h842d5359bdf9a9d2E"({ i32, i64 }* align 8 %exp_info), !dbg !4856
  br label %bb77, !dbg !4856

bb43:                                             ; preds = %bb42
  %75 = bitcast { i64, i32 }* %_55 to i64*, !dbg !4857
  %i = load i64, i64* %75, align 8, !dbg !4857
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !4857
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !4767, metadata !DIExpression()), !dbg !4858
  %76 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_55, i32 0, i32 1, !dbg !4859
  %c = load i32, i32* %76, align 8, !dbg !4859, !range !478, !noundef !19
  store i32 %c, i32* %c.dbg.spill, align 4, !dbg !4859
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !4769, metadata !DIExpression()), !dbg !4860
; call core::char::methods::<impl char>::to_digit
  %77 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17h8cb00c8fb2f77c0bE"(i32 %c, i32 %radix), !dbg !4861
  store { i32, i32 } %77, { i32, i32 }* %_61, align 4, !dbg !4861
  br label %bb45, !dbg !4861

bb45:                                             ; preds = %bb43
  %78 = bitcast { i32, i32 }* %_61 to i32*, !dbg !4861
  %79 = load i32, i32* %78, align 4, !dbg !4861, !range !1519, !noundef !19
  %_64 = zext i32 %79 to i64, !dbg !4861
  switch i64 %_64, label %bb47 [
    i64 0, label %bb46
    i64 1, label %bb48
  ], !dbg !4862

bb47:                                             ; preds = %bb45
  unreachable, !dbg !4861

bb46:                                             ; preds = %bb45
  switch i32 %c, label %bb73 [
    i32 101, label %bb74
    i32 69, label %bb74
    i32 112, label %bb74
    i32 80, label %bb74
    i32 46, label %bb76
  ], !dbg !4863

bb48:                                             ; preds = %bb45
  %80 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_61, i32 0, i32 1, !dbg !4864
  %digit = load i32, i32* %80, align 4, !dbg !4864
  store i32 %digit, i32* %digit.dbg.spill, align 4, !dbg !4864
  call void @llvm.dbg.declare(metadata i32* %digit.dbg.spill, metadata !4770, metadata !DIExpression()), !dbg !4865
  %_66 = uitofp i32 %radix to double, !dbg !4866
  %81 = load double, double* %sig, align 8, !dbg !4867
  %82 = fmul double %81, %_66, !dbg !4867
  store double %82, double* %sig, align 8, !dbg !4867
  br i1 %is_positive, label %bb49, label %bb50, !dbg !4868

bb50:                                             ; preds = %bb48
  %_73 = zext i32 %digit to i64, !dbg !4869
  %_72 = sitofp i64 %_73 to double, !dbg !4869
  %83 = load double, double* %sig, align 8, !dbg !4870
  %84 = fsub double %83, %_72, !dbg !4870
  store double %84, double* %sig, align 8, !dbg !4870
  br label %bb51, !dbg !4871

bb49:                                             ; preds = %bb48
  %_70 = zext i32 %digit to i64, !dbg !4872
  %_69 = sitofp i64 %_70 to double, !dbg !4872
  %85 = load double, double* %sig, align 8, !dbg !4873
  %86 = fadd double %85, %_69, !dbg !4873
  store double %86, double* %sig, align 8, !dbg !4873
  br label %bb51, !dbg !4871

bb51:                                             ; preds = %bb50, %bb49
  %_76 = load double, double* %prev_sig, align 8, !dbg !4874
  %_75 = fcmp une double %_76, 0.000000e+00, !dbg !4874
  br i1 %_75, label %bb52, label %bb72, !dbg !4874

bb72:                                             ; preds = %bb70, %bb51
  %_111 = load double, double* %sig, align 8, !dbg !4875
  store double %_111, double* %prev_sig, align 8, !dbg !4876
  br label %bb41, !dbg !4855

bb52:                                             ; preds = %bb51
  br i1 %is_positive, label %bb54, label %bb53, !dbg !4877

bb53:                                             ; preds = %bb52
  store i8 0, i8* %_77, align 1, !dbg !4877
  br label %bb55, !dbg !4877

bb54:                                             ; preds = %bb52
  %_80 = load double, double* %sig, align 8, !dbg !4878
  %_81 = load double, double* %prev_sig, align 8, !dbg !4879
  %_79 = fcmp ole double %_80, %_81, !dbg !4878
  %87 = zext i1 %_79 to i8, !dbg !4877
  store i8 %87, i8* %_77, align 1, !dbg !4877
  br label %bb55, !dbg !4877

bb55:                                             ; preds = %bb53, %bb54
  %88 = load i8, i8* %_77, align 1, !dbg !4877, !range !266, !noundef !19
  %89 = trunc i8 %88 to i1, !dbg !4877
  br i1 %89, label %bb56, label %bb57, !dbg !4877

bb57:                                             ; preds = %bb55
  %_83 = xor i1 %is_positive, true, !dbg !4880
  br i1 %_83, label %bb59, label %bb58, !dbg !4880

bb56:                                             ; preds = %bb55
  %90 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4881
  %91 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %90, i32 0, i32 1, !dbg !4881
  store double 0x7FF0000000000000, double* %91, align 8, !dbg !4881
  %92 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !4881
  store i8 0, i8* %92, align 8, !dbg !4881
  br label %bb138, !dbg !4882

bb58:                                             ; preds = %bb57
  store i8 0, i8* %_82, align 1, !dbg !4880
  br label %bb60, !dbg !4880

bb59:                                             ; preds = %bb57
  %_86 = load double, double* %sig, align 8, !dbg !4883
  %_87 = load double, double* %prev_sig, align 8, !dbg !4884
  %_85 = fcmp oge double %_86, %_87, !dbg !4883
  %93 = zext i1 %_85 to i8, !dbg !4880
  store i8 %93, i8* %_82, align 1, !dbg !4880
  br label %bb60, !dbg !4880

bb60:                                             ; preds = %bb58, %bb59
  %94 = load i8, i8* %_82, align 1, !dbg !4880, !range !266, !noundef !19
  %95 = trunc i8 %94 to i1, !dbg !4880
  br i1 %95, label %bb61, label %bb62, !dbg !4880

bb62:                                             ; preds = %bb60
  br i1 %is_positive, label %bb64, label %bb63, !dbg !4885

bb61:                                             ; preds = %bb60
  %96 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4886
  %97 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %96, i32 0, i32 1, !dbg !4886
  store double 0xFFF0000000000000, double* %97, align 8, !dbg !4886
  %98 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !4886
  store i8 0, i8* %98, align 8, !dbg !4886
  br label %bb138, !dbg !4882

bb63:                                             ; preds = %bb62
  store i8 0, i8* %_88, align 1, !dbg !4885
  br label %bb65, !dbg !4885

bb64:                                             ; preds = %bb62
  %_91 = load double, double* %prev_sig, align 8, !dbg !4887
  %_94 = load double, double* %sig, align 8, !dbg !4888
  %_95 = uitofp i32 %digit to double, !dbg !4889
  %_93 = fsub double %_94, %_95, !dbg !4890
  %_97 = uitofp i32 %radix to double, !dbg !4891
  %_92 = fdiv double %_93, %_97, !dbg !4890
  %_90 = fcmp une double %_91, %_92, !dbg !4892
  %99 = zext i1 %_90 to i8, !dbg !4885
  store i8 %99, i8* %_88, align 1, !dbg !4885
  br label %bb65, !dbg !4885

bb65:                                             ; preds = %bb63, %bb64
  %100 = load i8, i8* %_88, align 1, !dbg !4885, !range !266, !noundef !19
  %101 = trunc i8 %100 to i1, !dbg !4885
  br i1 %101, label %bb66, label %bb67, !dbg !4885

bb67:                                             ; preds = %bb65
  %_100 = xor i1 %is_positive, true, !dbg !4893
  br i1 %_100, label %bb69, label %bb68, !dbg !4893

bb66:                                             ; preds = %bb65
  %102 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4894
  %103 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %102, i32 0, i32 1, !dbg !4894
  store double 0x7FF0000000000000, double* %103, align 8, !dbg !4894
  %104 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !4894
  store i8 0, i8* %104, align 8, !dbg !4894
  br label %bb138, !dbg !4882

bb68:                                             ; preds = %bb67
  store i8 0, i8* %_99, align 1, !dbg !4893
  br label %bb70, !dbg !4893

bb69:                                             ; preds = %bb67
  %_103 = load double, double* %prev_sig, align 8, !dbg !4895
  %_106 = load double, double* %sig, align 8, !dbg !4896
  %_107 = uitofp i32 %digit to double, !dbg !4897
  %_105 = fadd double %_106, %_107, !dbg !4898
  %_109 = uitofp i32 %radix to double, !dbg !4899
  %_104 = fdiv double %_105, %_109, !dbg !4898
  %_102 = fcmp une double %_103, %_104, !dbg !4900
  %105 = zext i1 %_102 to i8, !dbg !4893
  store i8 %105, i8* %_99, align 1, !dbg !4893
  br label %bb70, !dbg !4893

bb70:                                             ; preds = %bb68, %bb69
  %106 = load i8, i8* %_99, align 1, !dbg !4893, !range !266, !noundef !19
  %107 = trunc i8 %106 to i1, !dbg !4893
  br i1 %107, label %bb71, label %bb72, !dbg !4893

bb71:                                             ; preds = %bb70
  %108 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4901
  %109 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %108, i32 0, i32 1, !dbg !4901
  store double 0xFFF0000000000000, double* %109, align 8, !dbg !4901
  %110 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !4901
  store i8 0, i8* %110, align 8, !dbg !4901
  br label %bb138, !dbg !4882

bb73:                                             ; preds = %bb46
  %111 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Err"*, !dbg !4902
  %112 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Err", %"core::result::Result<f64, ParseFloatError>::Err"* %111, i32 0, i32 1, !dbg !4902
  store i8 1, i8* %112, align 1, !dbg !4902
  %113 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !4902
  store i8 1, i8* %113, align 8, !dbg !4902
  br label %bb138, !dbg !4903

bb74:                                             ; preds = %bb46, %bb46, %bb46, %bb46
  %114 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 1), !dbg !4904
  %_117.0 = extractvalue { i64, i1 } %114, 0, !dbg !4904
  %_117.1 = extractvalue { i64, i1 } %114, 1, !dbg !4904
  %115 = call i1 @llvm.expect.i1(i1 %_117.1, i1 false), !dbg !4904
  br i1 %115, label %panic, label %bb75, !dbg !4904

bb75:                                             ; preds = %bb74
  %116 = bitcast { i32, i64 }* %_113 to i32*, !dbg !4905
  store i32 %c, i32* %116, align 8, !dbg !4905
  %117 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_113, i32 0, i32 1, !dbg !4905
  store i64 %_117.0, i64* %117, align 8, !dbg !4905
  %118 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_113, i32 0, i32 0, !dbg !4906
  %119 = load i32, i32* %118, align 8, !dbg !4906, !range !478, !noundef !19
  %120 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_113, i32 0, i32 1, !dbg !4906
  %121 = load i64, i64* %120, align 8, !dbg !4906
  %122 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_112, i32 0, i32 0, !dbg !4906
  store i32 %119, i32* %122, align 8, !dbg !4906
  %123 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_112, i32 0, i32 1, !dbg !4906
  store i64 %121, i64* %123, align 8, !dbg !4906
  %124 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_112, i32 0, i32 0, !dbg !4907
  %125 = load i32, i32* %124, align 8, !dbg !4907, !range !477, !noundef !19
  %126 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_112, i32 0, i32 1, !dbg !4907
  %127 = load i64, i64* %126, align 8, !dbg !4907
  %128 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 0, !dbg !4907
  store i32 %125, i32* %128, align 8, !dbg !4907
  %129 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 1, !dbg !4907
  store i64 %127, i64* %129, align 8, !dbg !4907
  br label %bb76, !dbg !4908

panic:                                            ; preds = %bb74
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc6388 to %"core::panic::location::Location"*)) #7, !dbg !4904
  unreachable, !dbg !4904

bb77:                                             ; preds = %bb76
  br i1 %_118, label %bb78, label %bb105, !dbg !4856

bb105:                                            ; preds = %bb104, %bb82, %bb77
  %130 = bitcast { i32, i64 }* %exp_info to i32*, !dbg !4909
  %131 = load i32, i32* %130, align 8, !dbg !4909, !range !477, !noundef !19
  %132 = sub i32 %131, 1114112, !dbg !4909
  %133 = icmp eq i32 %132, 0, !dbg !4909
  %_169 = select i1 %133, i64 0, i64 1, !dbg !4909
  switch i64 %_169, label %bb107 [
    i64 0, label %bb106
    i64 1, label %bb108
  ], !dbg !4910

bb78:                                             ; preds = %bb77
  store double 1.000000e+00, double* %power, align 8, !dbg !4911
; call core::iter::traits::iterator::Iterator::by_ref
  %_122 = call align 8 %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* @_ZN4core4iter6traits8iterator8Iterator6by_ref17h1c8ab6f8dfb47eefE(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* align 8 %cs), !dbg !4912
  br label %bb79, !dbg !4912

bb79:                                             ; preds = %bb78
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_121 = call align 8 %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfd42fc2a0daf9593E"(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* align 8 %_122), !dbg !4912
  br label %bb80, !dbg !4912

bb80:                                             ; preds = %bb79
  store %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"* %_121, %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** %iter1, align 8, !dbg !4912
  br label %bb81, !dbg !4913

bb81:                                             ; preds = %bb101, %bb80
; call <&mut I as core::iter::traits::iterator::Iterator>::next
  %134 = call { i64, i32 } @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha8f876ab095cc07bE"(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>"** align 8 %iter1), !dbg !4809
  store { i64, i32 } %134, { i64, i32 }* %_125, align 8, !dbg !4809
  br label %bb82, !dbg !4809

bb82:                                             ; preds = %bb81
  %135 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_125, i32 0, i32 1, !dbg !4809
  %136 = load i32, i32* %135, align 8, !dbg !4809, !range !477, !noundef !19
  %137 = sub i32 %136, 1114112, !dbg !4809
  %138 = icmp eq i32 %137, 0, !dbg !4809
  %_128 = select i1 %138, i64 0, i64 1, !dbg !4809
  switch i64 %_128, label %bb84 [
    i64 0, label %bb105
    i64 1, label %bb83
  ], !dbg !4809

bb84:                                             ; preds = %bb82
  unreachable, !dbg !4809

bb83:                                             ; preds = %bb82
  %139 = bitcast { i64, i32 }* %_125 to i64*, !dbg !4914
  %i9 = load i64, i64* %139, align 8, !dbg !4914
  store i64 %i9, i64* %i.dbg.spill10, align 8, !dbg !4914
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill10, metadata !4776, metadata !DIExpression()), !dbg !4915
  %140 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_125, i32 0, i32 1, !dbg !4916
  %c11 = load i32, i32* %140, align 8, !dbg !4916, !range !478, !noundef !19
  store i32 %c11, i32* %c.dbg.spill12, align 4, !dbg !4916
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill12, metadata !4778, metadata !DIExpression()), !dbg !4917
; call core::char::methods::<impl char>::to_digit
  %141 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17h8cb00c8fb2f77c0bE"(i32 %c11, i32 %radix), !dbg !4918
  store { i32, i32 } %141, { i32, i32 }* %_131, align 4, !dbg !4918
  br label %bb85, !dbg !4918

bb85:                                             ; preds = %bb83
  %142 = bitcast { i32, i32 }* %_131 to i32*, !dbg !4918
  %143 = load i32, i32* %142, align 4, !dbg !4918, !range !1519, !noundef !19
  %_134 = zext i32 %143 to i64, !dbg !4918
  switch i64 %_134, label %bb87 [
    i64 0, label %bb86
    i64 1, label %bb88
  ], !dbg !4919

bb87:                                             ; preds = %bb85
  unreachable, !dbg !4918

bb86:                                             ; preds = %bb85
  switch i32 %c11, label %bb102 [
    i32 101, label %bb103
    i32 69, label %bb103
    i32 112, label %bb103
    i32 80, label %bb103
  ], !dbg !4920

bb88:                                             ; preds = %bb85
  %144 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_131, i32 0, i32 1, !dbg !4921
  %digit13 = load i32, i32* %144, align 4, !dbg !4921
  store i32 %digit13, i32* %digit.dbg.spill14, align 4, !dbg !4921
  call void @llvm.dbg.declare(metadata i32* %digit.dbg.spill14, metadata !4779, metadata !DIExpression()), !dbg !4922
  %_136 = uitofp i32 %radix to double, !dbg !4923
  %145 = load double, double* %power, align 8, !dbg !4924
  %146 = fdiv double %145, %_136, !dbg !4924
  store double %146, double* %power, align 8, !dbg !4924
  br i1 %is_positive, label %bb89, label %bb90, !dbg !4925

bb90:                                             ; preds = %bb88
  %_145 = load double, double* %sig, align 8, !dbg !4926
  %_147 = uitofp i32 %digit13 to double, !dbg !4927
  %_149 = load double, double* %power, align 8, !dbg !4928
  %_146 = fmul double %_147, %_149, !dbg !4927
  %147 = fsub double %_145, %_146, !dbg !4926
  store double %147, double* %_138, align 8, !dbg !4926
  br label %bb91, !dbg !4929

bb89:                                             ; preds = %bb88
  %_140 = load double, double* %sig, align 8, !dbg !4930
  %_142 = uitofp i32 %digit13 to double, !dbg !4931
  %_144 = load double, double* %power, align 8, !dbg !4932
  %_141 = fmul double %_142, %_144, !dbg !4931
  %148 = fadd double %_140, %_141, !dbg !4930
  store double %148, double* %_138, align 8, !dbg !4930
  br label %bb91, !dbg !4929

bb91:                                             ; preds = %bb90, %bb89
  %149 = load double, double* %_138, align 8, !dbg !4933
  store double %149, double* %sig, align 8, !dbg !4933
  br i1 %is_positive, label %bb93, label %bb92, !dbg !4934

bb92:                                             ; preds = %bb91
  store i8 0, i8* %_150, align 1, !dbg !4934
  br label %bb94, !dbg !4934

bb93:                                             ; preds = %bb91
  %_153 = load double, double* %sig, align 8, !dbg !4935
  %_154 = load double, double* %prev_sig, align 8, !dbg !4936
  %_152 = fcmp olt double %_153, %_154, !dbg !4935
  %150 = zext i1 %_152 to i8, !dbg !4934
  store i8 %150, i8* %_150, align 1, !dbg !4934
  br label %bb94, !dbg !4934

bb94:                                             ; preds = %bb92, %bb93
  %151 = load i8, i8* %_150, align 1, !dbg !4934, !range !266, !noundef !19
  %152 = trunc i8 %151 to i1, !dbg !4934
  br i1 %152, label %bb95, label %bb96, !dbg !4934

bb96:                                             ; preds = %bb94
  %_156 = xor i1 %is_positive, true, !dbg !4937
  br i1 %_156, label %bb98, label %bb97, !dbg !4937

bb95:                                             ; preds = %bb94
  %153 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4938
  %154 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %153, i32 0, i32 1, !dbg !4938
  store double 0x7FF0000000000000, double* %154, align 8, !dbg !4938
  %155 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !4938
  store i8 0, i8* %155, align 8, !dbg !4938
  br label %bb138, !dbg !4939

bb97:                                             ; preds = %bb96
  store i8 0, i8* %_155, align 1, !dbg !4937
  br label %bb99, !dbg !4937

bb98:                                             ; preds = %bb96
  %_159 = load double, double* %sig, align 8, !dbg !4940
  %_160 = load double, double* %prev_sig, align 8, !dbg !4941
  %_158 = fcmp ogt double %_159, %_160, !dbg !4940
  %156 = zext i1 %_158 to i8, !dbg !4937
  store i8 %156, i8* %_155, align 1, !dbg !4937
  br label %bb99, !dbg !4937

bb99:                                             ; preds = %bb97, %bb98
  %157 = load i8, i8* %_155, align 1, !dbg !4937, !range !266, !noundef !19
  %158 = trunc i8 %157 to i1, !dbg !4937
  br i1 %158, label %bb100, label %bb101, !dbg !4937

bb101:                                            ; preds = %bb99
  %_161 = load double, double* %sig, align 8, !dbg !4942
  store double %_161, double* %prev_sig, align 8, !dbg !4943
  br label %bb81, !dbg !4913

bb100:                                            ; preds = %bb99
  %159 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4944
  %160 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %159, i32 0, i32 1, !dbg !4944
  store double 0xFFF0000000000000, double* %160, align 8, !dbg !4944
  %161 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !4944
  store i8 0, i8* %161, align 8, !dbg !4944
  br label %bb138, !dbg !4939

bb102:                                            ; preds = %bb86
  %162 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Err"*, !dbg !4945
  %163 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Err", %"core::result::Result<f64, ParseFloatError>::Err"* %162, i32 0, i32 1, !dbg !4945
  store i8 1, i8* %163, align 1, !dbg !4945
  %164 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !4945
  store i8 1, i8* %164, align 8, !dbg !4945
  br label %bb138, !dbg !4946

bb103:                                            ; preds = %bb86, %bb86, %bb86, %bb86
  %165 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i9, i64 1), !dbg !4947
  %_167.0 = extractvalue { i64, i1 } %165, 0, !dbg !4947
  %_167.1 = extractvalue { i64, i1 } %165, 1, !dbg !4947
  %166 = call i1 @llvm.expect.i1(i1 %_167.1, i1 false), !dbg !4947
  br i1 %166, label %panic15, label %bb104, !dbg !4947

bb104:                                            ; preds = %bb103
  %167 = bitcast { i32, i64 }* %_163 to i32*, !dbg !4948
  store i32 %c11, i32* %167, align 8, !dbg !4948
  %168 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_163, i32 0, i32 1, !dbg !4948
  store i64 %_167.0, i64* %168, align 8, !dbg !4948
  %169 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_163, i32 0, i32 0, !dbg !4949
  %170 = load i32, i32* %169, align 8, !dbg !4949, !range !478, !noundef !19
  %171 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_163, i32 0, i32 1, !dbg !4949
  %172 = load i64, i64* %171, align 8, !dbg !4949
  %173 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_162, i32 0, i32 0, !dbg !4949
  store i32 %170, i32* %173, align 8, !dbg !4949
  %174 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_162, i32 0, i32 1, !dbg !4949
  store i64 %172, i64* %174, align 8, !dbg !4949
  %175 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_162, i32 0, i32 0, !dbg !4950
  %176 = load i32, i32* %175, align 8, !dbg !4950, !range !477, !noundef !19
  %177 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_162, i32 0, i32 1, !dbg !4950
  %178 = load i64, i64* %177, align 8, !dbg !4950
  %179 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 0, !dbg !4950
  store i32 %176, i32* %179, align 8, !dbg !4950
  %180 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 1, !dbg !4950
  store i64 %178, i64* %180, align 8, !dbg !4950
  br label %bb105, !dbg !4951

panic15:                                          ; preds = %bb103
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc6388 to %"core::panic::location::Location"*)) #7, !dbg !4947
  unreachable, !dbg !4947

bb107:                                            ; preds = %bb105
  unreachable, !dbg !4909

bb106:                                            ; preds = %bb105
  store double 1.000000e+00, double* %exp, align 8, !dbg !4952
  br label %bb137, !dbg !4952

bb108:                                            ; preds = %bb105
  %181 = bitcast { i32, i64 }* %exp_info to i32*, !dbg !4953
  %c16 = load i32, i32* %181, align 8, !dbg !4953, !range !478, !noundef !19
  store i32 %c16, i32* %c.dbg.spill17, align 4, !dbg !4953
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill17, metadata !4783, metadata !DIExpression()), !dbg !4954
  %182 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 1, !dbg !4955
  %offset = load i64, i64* %182, align 8, !dbg !4955
  store i64 %offset, i64* %offset.dbg.spill, align 8, !dbg !4955
  call void @llvm.dbg.declare(metadata i64* %offset.dbg.spill, metadata !4785, metadata !DIExpression()), !dbg !4956
  switch i32 %c16, label %bb109 [
    i32 69, label %bb111
    i32 101, label %bb112
    i32 80, label %bb114
    i32 112, label %bb115
  ], !dbg !4957

bb109:                                            ; preds = %bb111, %bb112, %bb114, %bb115, %bb108
  %183 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Err"*, !dbg !4958
  %184 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Err", %"core::result::Result<f64, ParseFloatError>::Err"* %183, i32 0, i32 1, !dbg !4958
  store i8 1, i8* %184, align 1, !dbg !4958
  %185 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !4958
  store i8 1, i8* %185, align 8, !dbg !4958
  br label %bb138, !dbg !4959

bb111:                                            ; preds = %bb108
  %186 = icmp eq i32 %radix, 10, !dbg !4960
  br i1 %186, label %bb110, label %bb109, !dbg !4960

bb112:                                            ; preds = %bb108
  %187 = icmp eq i32 %radix, 10, !dbg !4960
  br i1 %187, label %bb110, label %bb109, !dbg !4960

bb114:                                            ; preds = %bb108
  %188 = icmp eq i32 %radix, 16, !dbg !4961
  br i1 %188, label %bb113, label %bb109, !dbg !4961

bb115:                                            ; preds = %bb108
  %189 = icmp eq i32 %radix, 16, !dbg !4961
  br i1 %189, label %bb113, label %bb109, !dbg !4961

bb113:                                            ; preds = %bb114, %bb115
  store double 2.000000e+00, double* %base, align 8, !dbg !4962
  br label %bb116, !dbg !4962

bb116:                                            ; preds = %bb110, %bb113
  store i64 %offset, i64* %_180, align 8, !dbg !4963
  %190 = load i64, i64* %_180, align 8, !dbg !4964
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %191 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hcc6396edc3b4e7b0E"([0 x i8]* align 1 %src.06, i64 %src.17, i64 %190, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc6388 to %"core::panic::location::Location"*)), !dbg !4964
  %_178.0 = extractvalue { [0 x i8]*, i64 } %191, 0, !dbg !4964
  %_178.1 = extractvalue { [0 x i8]*, i64 } %191, 1, !dbg !4964
  br label %bb117, !dbg !4964

bb110:                                            ; preds = %bb111, %bb112
  store double 1.000000e+01, double* %base, align 8, !dbg !4965
  br label %bb116, !dbg !4965

bb117:                                            ; preds = %bb116
  %192 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill18, i32 0, i32 0, !dbg !4966
  store [0 x i8]* %_178.0, [0 x i8]** %192, align 8, !dbg !4966
  %193 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill18, i32 0, i32 1, !dbg !4966
  store i64 %_178.1, i64* %193, align 8, !dbg !4966
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill18, metadata !4788, metadata !DIExpression()), !dbg !4967
; call <f64 as num_traits::Num>::from_str_radix::slice_shift_char
  call void @"_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix16slice_shift_char17hb8d8a487f4573dbbE"(%"core::option::Option<(char, &str)>"* sret(%"core::option::Option<(char, &str)>") %_185, [0 x i8]* align 1 %_178.0, i64 %_178.1), !dbg !4968
  br label %bb118, !dbg !4968

bb118:                                            ; preds = %bb117
  %194 = bitcast %"core::option::Option<(char, &str)>"* %_185 to i32*, !dbg !4968
  %195 = load i32, i32* %194, align 8, !dbg !4968, !range !477, !noundef !19
  %196 = sub i32 %195, 1114112, !dbg !4968
  %197 = icmp eq i32 %196, 0, !dbg !4968
  %_187 = select i1 %197, i64 0, i64 1, !dbg !4968
  switch i64 %_187, label %bb121 [
    i64 0, label %bb119
    i64 1, label %bb120
  ], !dbg !4969

bb121:                                            ; preds = %bb118
  unreachable, !dbg !4968

bb119:                                            ; preds = %bb118
  %198 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Err"*, !dbg !4970
  %199 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Err", %"core::result::Result<f64, ParseFloatError>::Err"* %198, i32 0, i32 1, !dbg !4970
  store i8 1, i8* %199, align 1, !dbg !4970
  %200 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !4970
  store i8 1, i8* %200, align 8, !dbg !4970
  br label %bb138, !dbg !4971

bb120:                                            ; preds = %bb118
  %201 = bitcast %"core::option::Option<(char, &str)>"* %_185 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4969
  %202 = bitcast %"core::option::Option<(char, &str)>::Some"* %201 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4969
  %203 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %202 to i32*, !dbg !4969
  %204 = load i32, i32* %203, align 8, !dbg !4969, !range !478, !noundef !19
  switch i32 %204, label %bb126 [
    i32 45, label %bb122
    i32 43, label %bb124
  ], !dbg !4969

bb126:                                            ; preds = %bb120
; call core::str::<impl str>::parse
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h5772aff34b6d4e0bE"(%"core::result::Result<usize, core::num::error::ParseIntError>"* sret(%"core::result::Result<usize, core::num::error::ParseIntError>") %_194, [0 x i8]* align 1 %_178.0, i64 %_178.1), !dbg !4972
  br label %bb127, !dbg !4972

bb122:                                            ; preds = %bb120
  %205 = bitcast %"core::option::Option<(char, &str)>"* %_185 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4973
  %206 = bitcast %"core::option::Option<(char, &str)>::Some"* %205 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4973
  %207 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %206, i32 0, i32 2, !dbg !4973
  %208 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %207, i32 0, i32 0, !dbg !4973
  %src.022 = load [0 x i8]*, [0 x i8]** %208, align 8, !dbg !4973, !nonnull !19, !align !627, !noundef !19
  %209 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %207, i32 0, i32 1, !dbg !4973
  %src.123 = load i64, i64* %209, align 8, !dbg !4973
  %210 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill24, i32 0, i32 0, !dbg !4973
  store [0 x i8]* %src.022, [0 x i8]** %210, align 8, !dbg !4973
  %211 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill24, i32 0, i32 1, !dbg !4973
  store i64 %src.123, i64* %211, align 8, !dbg !4973
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill24, metadata !4793, metadata !DIExpression()), !dbg !4974
; call core::str::<impl str>::parse
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h5772aff34b6d4e0bE"(%"core::result::Result<usize, core::num::error::ParseIntError>"* sret(%"core::result::Result<usize, core::num::error::ParseIntError>") %_189, [0 x i8]* align 1 %src.022, i64 %src.123), !dbg !4975
  br label %bb123, !dbg !4975

bb124:                                            ; preds = %bb120
  %212 = bitcast %"core::option::Option<(char, &str)>"* %_185 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4976
  %213 = bitcast %"core::option::Option<(char, &str)>::Some"* %212 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4976
  %214 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %213, i32 0, i32 2, !dbg !4976
  %215 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %214, i32 0, i32 0, !dbg !4976
  %src.019 = load [0 x i8]*, [0 x i8]** %215, align 8, !dbg !4976, !nonnull !19, !align !627, !noundef !19
  %216 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %214, i32 0, i32 1, !dbg !4976
  %src.120 = load i64, i64* %216, align 8, !dbg !4976
  %217 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill21, i32 0, i32 0, !dbg !4976
  store [0 x i8]* %src.019, [0 x i8]** %217, align 8, !dbg !4976
  %218 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill21, i32 0, i32 1, !dbg !4976
  store i64 %src.120, i64* %218, align 8, !dbg !4976
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill21, metadata !4795, metadata !DIExpression()), !dbg !4977
; call core::str::<impl str>::parse
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h5772aff34b6d4e0bE"(%"core::result::Result<usize, core::num::error::ParseIntError>"* sret(%"core::result::Result<usize, core::num::error::ParseIntError>") %_192, [0 x i8]* align 1 %src.019, i64 %src.120), !dbg !4978
  br label %bb125, !dbg !4978

bb127:                                            ; preds = %bb126
  %219 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_184 to i8*, !dbg !4979
  store i8 1, i8* %219, align 8, !dbg !4979
  %220 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_184, i32 0, i32 2, !dbg !4979
  %221 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %220 to i8*, !dbg !4979
  %222 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %_194 to i8*, !dbg !4979
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %221, i8* align 8 %222, i64 16, i1 false), !dbg !4979
  br label %bb128, !dbg !4980

bb128:                                            ; preds = %bb123, %bb125, %bb127
  %223 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_184 to i8*, !dbg !4981
  %224 = load i8, i8* %223, align 8, !dbg !4981, !range !266, !noundef !19
  %is_positive25 = trunc i8 %224 to i1, !dbg !4981
  %225 = zext i1 %is_positive25 to i8, !dbg !4981
  store i8 %225, i8* %is_positive.dbg.spill26, align 1, !dbg !4981
  call void @llvm.dbg.declare(metadata i8* %is_positive.dbg.spill26, metadata !4790, metadata !DIExpression()), !dbg !4982
  %226 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_184, i32 0, i32 2, !dbg !4983
  %227 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %exp2 to i8*, !dbg !4983
  %228 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %226 to i8*, !dbg !4983
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %227, i8* align 8 %228, i64 16, i1 false), !dbg !4983
  %229 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %_198 to i8*, !dbg !4984
  %230 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %exp2 to i8*, !dbg !4984
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %229, i8* align 8 %230, i64 16, i1 false), !dbg !4984
  %231 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_196 to i8*, !dbg !4985
  %232 = zext i1 %is_positive25 to i8, !dbg !4985
  store i8 %232, i8* %231, align 8, !dbg !4985
  %233 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_196, i32 0, i32 2, !dbg !4985
  %234 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %233 to i8*, !dbg !4985
  %235 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %_198 to i8*, !dbg !4985
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %234, i8* align 8 %235, i64 16, i1 false), !dbg !4985
  %236 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_196 to i8*, !dbg !4986
  %237 = load i8, i8* %236, align 8, !dbg !4986, !range !266, !noundef !19
  %238 = trunc i8 %237 to i1, !dbg !4986
  br i1 %238, label %bb129, label %bb131, !dbg !4986

bb125:                                            ; preds = %bb124
  %239 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_184 to i8*, !dbg !4987
  store i8 1, i8* %239, align 8, !dbg !4987
  %240 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_184, i32 0, i32 2, !dbg !4987
  %241 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %240 to i8*, !dbg !4987
  %242 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %_192 to i8*, !dbg !4987
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* align 8 %242, i64 16, i1 false), !dbg !4987
  br label %bb128, !dbg !4988

bb123:                                            ; preds = %bb122
  %243 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_184 to i8*, !dbg !4989
  store i8 0, i8* %243, align 8, !dbg !4989
  %244 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_184, i32 0, i32 2, !dbg !4989
  %245 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %244 to i8*, !dbg !4989
  %246 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %_189 to i8*, !dbg !4989
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %245, i8* align 8 %246, i64 16, i1 false), !dbg !4989
  br label %bb128, !dbg !4990

bb131:                                            ; preds = %bb128
  %247 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_196, i32 0, i32 2, !dbg !4985
  %248 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %247 to i8*, !dbg !4985
  %249 = load i8, i8* %248, align 8, !dbg !4985, !range !266, !noundef !19
  %250 = trunc i8 %249 to i1, !dbg !4985
  %_200 = zext i1 %250 to i64, !dbg !4985
  %251 = icmp eq i64 %_200, 0, !dbg !4986
  br i1 %251, label %bb135, label %bb130, !dbg !4986

bb129:                                            ; preds = %bb128
  %252 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_196, i32 0, i32 2, !dbg !4985
  %253 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %252 to i8*, !dbg !4985
  %254 = load i8, i8* %253, align 8, !dbg !4985, !range !266, !noundef !19
  %255 = trunc i8 %254 to i1, !dbg !4985
  %_199 = zext i1 %255 to i64, !dbg !4985
  %256 = icmp eq i64 %_199, 0, !dbg !4986
  br i1 %256, label %bb134, label %bb130, !dbg !4986

bb134:                                            ; preds = %bb129
  %257 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_196, i32 0, i32 2, !dbg !4991
  %258 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %257 to %"core::result::Result<usize, core::num::error::ParseIntError>::Ok"*, !dbg !4991
  %259 = getelementptr inbounds %"core::result::Result<usize, core::num::error::ParseIntError>::Ok", %"core::result::Result<usize, core::num::error::ParseIntError>::Ok"* %258, i32 0, i32 1, !dbg !4991
  %exp27 = load i64, i64* %259, align 8, !dbg !4991
  store i64 %exp27, i64* %exp.dbg.spill, align 8, !dbg !4991
  call void @llvm.dbg.declare(metadata i64* %exp.dbg.spill, metadata !4797, metadata !DIExpression()), !dbg !4992
  %_203 = load double, double* %base, align 8, !dbg !4993
; call <f64 as num_traits::Num>::from_str_radix::pow
  %260 = call double @"_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix3pow17h717bf06b4f432d24E"(double %_203, i64 %exp27), !dbg !4994
  store double %260, double* %exp, align 8, !dbg !4994
  br label %bb137, !dbg !4994

bb130:                                            ; preds = %bb131, %bb129
  %261 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_196, i32 0, i32 2, !dbg !4985
  %262 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %261 to i8*, !dbg !4985
  %263 = load i8, i8* %262, align 8, !dbg !4985, !range !266, !noundef !19
  %264 = trunc i8 %263 to i1, !dbg !4985
  %_201 = zext i1 %264 to i64, !dbg !4985
  %265 = icmp eq i64 %_201, 1, !dbg !4986
  br i1 %265, label %bb133, label %bb132, !dbg !4986

bb137:                                            ; preds = %bb106, %bb136, %bb134
  %_210 = load double, double* %sig, align 8, !dbg !4995
  %_211 = load double, double* %exp, align 8, !dbg !4996
  %_209 = fmul double %_210, %_211, !dbg !4995
  %266 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4997
  %267 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %266, i32 0, i32 1, !dbg !4997
  store double %_209, double* %267, align 8, !dbg !4997
  %268 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !4997
  store i8 0, i8* %268, align 8, !dbg !4997
  br label %bb138, !dbg !4820

bb135:                                            ; preds = %bb131
  %269 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::error::ParseIntError>" }* %_196, i32 0, i32 2, !dbg !4998
  %270 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %269 to %"core::result::Result<usize, core::num::error::ParseIntError>::Ok"*, !dbg !4998
  %271 = getelementptr inbounds %"core::result::Result<usize, core::num::error::ParseIntError>::Ok", %"core::result::Result<usize, core::num::error::ParseIntError>::Ok"* %270, i32 0, i32 1, !dbg !4998
  %exp28 = load i64, i64* %271, align 8, !dbg !4998
  store i64 %exp28, i64* %exp.dbg.spill29, align 8, !dbg !4998
  call void @llvm.dbg.declare(metadata i64* %exp.dbg.spill29, metadata !4799, metadata !DIExpression()), !dbg !4999
  %_207 = load double, double* %base, align 8, !dbg !5000
; call <f64 as num_traits::Num>::from_str_radix::pow
  %_206 = call double @"_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix3pow17h717bf06b4f432d24E"(double %_207, i64 %exp28), !dbg !5001
  br label %bb136, !dbg !5001

bb133:                                            ; preds = %bb130
  %272 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to %"core::result::Result<f64, ParseFloatError>::Err"*, !dbg !5002
  %273 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Err", %"core::result::Result<f64, ParseFloatError>::Err"* %272, i32 0, i32 1, !dbg !5002
  store i8 1, i8* %273, align 1, !dbg !5002
  %274 = bitcast %"core::result::Result<f64, ParseFloatError>"* %0 to i8*, !dbg !5002
  store i8 1, i8* %274, align 8, !dbg !5002
  br label %bb138, !dbg !5003

bb132:                                            ; preds = %bb130
  unreachable, !dbg !4985

bb136:                                            ; preds = %bb135
  %275 = fdiv double 1.000000e+00, %_206, !dbg !5004
  store double %275, double* %exp, align 8, !dbg !5004
  br label %bb137, !dbg !5005

bb2:                                              ; preds = %bb1
  %276 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*, !dbg !5006
  %277 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %276, i32 0, i32 0, !dbg !5006
  store [0 x i8]* %src.0, [0 x i8]** %277, align 8, !dbg !5006
  %278 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %276, i32 0, i32 1, !dbg !5006
  store i64 %src.1, i64* %278, align 8, !dbg !5006
  %279 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !4814
  %280 = load i8*, i8** %279, align 8, !dbg !4814, !nonnull !19, !align !627, !noundef !19
  %281 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !4814
  %282 = load i64, i64* %281, align 8, !dbg !4814
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hb519e03d703bef08E"(%"core::result::Result<f64, ParseFloatError>"* sret(%"core::result::Result<f64, ParseFloatError>") %0, %"core::result::Result<f64, core::num::dec2flt::ParseFloatError>"* %_4, i8* align 1 %280, i64 %282), !dbg !4814
  br label %bb138, !dbg !4814
}

; <f64 as num_traits::Num>::from_str_radix::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix28_$u7b$$u7b$closure$u7d$$u7d$17hbd71b197aeed867dE"(i8* align 1 %0, i64 %1, i1 zeroext %_2) unnamed_addr #0 !dbg !5007 {
start:
  %_2.dbg.spill = alloca i8, align 1
  %_3 = alloca i8, align 1
  %2 = alloca i8, align 1
  %_1 = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_1, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_1, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %_1 to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  %7 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !19, !align !627, !noundef !19
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %_1, metadata !5011, metadata !DIExpression(DW_OP_deref)), !dbg !5013
  %10 = zext i1 %_2 to i8
  store i8 %10, i8* %_2.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %_2.dbg.spill, metadata !5012, metadata !DIExpression()), !dbg !5014
  %11 = bitcast { i8*, i64 }* %_1 to { [0 x i8]*, i64 }*, !dbg !5015
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0, !dbg !5015
  %_6.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !dbg !5015, !nonnull !19, !align !627, !noundef !19
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1, !dbg !5015
  %_6.1 = load i64, i64* %13, align 8, !dbg !5015
; call core::str::<impl str>::is_empty
  %_4 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17hbddfdad1e87f60d4E"([0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !5015
  br label %bb1, !dbg !5015

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3, !dbg !5015

bb3:                                              ; preds = %bb1
  store i8 1, i8* %_3, align 1, !dbg !5016
  br label %bb4, !dbg !5017

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_3, align 1, !dbg !5018
  br label %bb4, !dbg !5017

bb4:                                              ; preds = %bb3, %bb2
  %14 = load i8, i8* %_3, align 1, !dbg !5019, !range !266, !noundef !19
  %15 = trunc i8 %14 to i1, !dbg !5019
  %16 = zext i1 %15 to i8, !dbg !5019
  store i8 %16, i8* %2, align 1, !dbg !5019
  %17 = load i8, i8* %2, align 1, !dbg !5020, !range !266, !noundef !19
  %18 = trunc i8 %17 to i1, !dbg !5020
  ret i1 %18, !dbg !5020
}

; <f64 as num_traits::Num>::from_str_radix::slice_shift_char
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix16slice_shift_char17hb8d8a487f4573dbbE"(%"core::option::Option<(char, &str)>"* sret(%"core::option::Option<(char, &str)>") %0, [0 x i8]* align 1 %src.0, i64 %src.1) unnamed_addr #1 !dbg !5021 {
start:
  %val.dbg.spill = alloca i32, align 4
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %src.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_6 = alloca i32, align 4
  %_4 = alloca { i32, [1 x i32], { [0 x i8]*, i64 } }, align 8
  %chars = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 0
  store [0 x i8]* %src.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 1
  store i64 %src.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill, metadata !5023, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %chars, metadata !5024, metadata !DIExpression()), !dbg !5031
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !5026, metadata !DIExpression()), !dbg !5032
; call core::str::<impl str>::chars
  %3 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h7bf8534f8214801fE"([0 x i8]* align 1 %src.0, i64 %src.1), !dbg !5033
  store { i8*, i8* } %3, { i8*, i8* }* %chars, align 8, !dbg !5033
  br label %bb1, !dbg !5033

bb1:                                              ; preds = %start
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_7 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc2c8c40ef0f18e21E"({ i8*, i8* }* align 8 %chars), !dbg !5034, !range !477
  br label %bb2, !dbg !5034

bb2:                                              ; preds = %bb1
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %4 = call i32 @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h934df6cd5ceddcc0E"(i32 %_7), !dbg !5034, !range !477
  store i32 %4, i32* %_6, align 4, !dbg !5034
  br label %bb3, !dbg !5034

bb3:                                              ; preds = %bb2
  %5 = load i32, i32* %_6, align 4, !dbg !5034, !range !477, !noundef !19
  %6 = sub i32 %5, 1114112, !dbg !5034
  %7 = icmp eq i32 %6, 0, !dbg !5034
  %_9 = select i1 %7, i64 1, i64 0, !dbg !5034
  switch i64 %_9, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ], !dbg !5034

bb5:                                              ; preds = %bb3
  unreachable, !dbg !5034

bb4:                                              ; preds = %bb3
  %val = load i32, i32* %_6, align 4, !dbg !5034, !range !478, !noundef !19
  store i32 %val, i32* %val.dbg.spill, align 4, !dbg !5034
  call void @llvm.dbg.declare(metadata i32* %val.dbg.spill, metadata !5028, metadata !DIExpression()), !dbg !5035
; call core::str::iter::Chars::as_str
  %8 = call { [0 x i8]*, i64 } @_ZN4core3str4iter5Chars6as_str17h1d84951d6b563a74E({ i8*, i8* }* align 8 %chars), !dbg !5036
  %_14.0 = extractvalue { [0 x i8]*, i64 } %8, 0, !dbg !5036
  %_14.1 = extractvalue { [0 x i8]*, i64 } %8, 1, !dbg !5036
  br label %bb7, !dbg !5036

bb6:                                              ; preds = %bb3
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  call void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hba229eeb2623e15bE"(%"core::option::Option<(char, &str)>"* sret(%"core::option::Option<(char, &str)>") %0), !dbg !5037
  br label %bb8, !dbg !5037

bb8:                                              ; preds = %bb7, %bb6
  ret void, !dbg !5038

bb7:                                              ; preds = %bb4
  %9 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %_4 to i32*, !dbg !5039
  store i32 %val, i32* %9, align 8, !dbg !5039
  %10 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %_4, i32 0, i32 2, !dbg !5039
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0, !dbg !5039
  store [0 x i8]* %_14.0, [0 x i8]** %11, align 8, !dbg !5039
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1, !dbg !5039
  store i64 %_14.1, i64* %12, align 8, !dbg !5039
  %13 = bitcast %"core::option::Option<(char, &str)>"* %0 to %"core::option::Option<(char, &str)>::Some"*, !dbg !5040
  %14 = bitcast %"core::option::Option<(char, &str)>::Some"* %13 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !5040
  %15 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %14 to i8*, !dbg !5040
  %16 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %_4 to i8*, !dbg !5040
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false), !dbg !5040
  br label %bb8, !dbg !5038
}

; <f64 as num_traits::Num>::from_str_radix::pow
; Function Attrs: nonlazybind uwtable
define internal double @"_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix3pow17h717bf06b4f432d24E"(double %base, i64 %exp) unnamed_addr #1 !dbg !5041 {
start:
  %exp.dbg.spill = alloca i64, align 8
  %base.dbg.spill = alloca double, align 8
  store double %base, double* %base.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %base.dbg.spill, metadata !5045, metadata !DIExpression()), !dbg !5047
  store i64 %exp, i64* %exp.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %exp.dbg.spill, metadata !5046, metadata !DIExpression()), !dbg !5048
  %_4 = trunc i64 %exp to i32, !dbg !5049
; call <f64 as num_traits::float::Float>::powi
  %0 = call double @"_ZN48_$LT$f64$u20$as$u20$num_traits..float..Float$GT$4powi17hc010881944047abcE"(double %base, i32 %_4), !dbg !5050
  br label %bb1, !dbg !5050

bb1:                                              ; preds = %start
  ret double %0, !dbg !5051
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #2

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #4

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1, i64, %"core::panic::location::Location"* align 8) unnamed_addr #5

; core::slice::index::slice_start_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index26slice_start_index_len_fail17hd34676e4711f38b9E(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #5

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"*, %"core::panic::location::Location"* align 8) unnamed_addr #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #2

; <f32 as core::num::dec2flt::float::RawFloat>::from_u64_bits
; Function Attrs: nonlazybind uwtable
declare float @"_ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$13from_u64_bits17hd1c32c961a815893E"(i64) unnamed_addr #1

; <f64 as core::num::dec2flt::float::RawFloat>::from_u64_bits
; Function Attrs: nonlazybind uwtable
declare double @"_ZN59_$LT$f64$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$13from_u64_bits17h6bd64b42d686b3b4E"(i64) unnamed_addr #1

; core::num::dec2flt::common::BiasedFp::zero_pow2
; Function Attrs: nonlazybind uwtable
declare { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217he9d0af27d074a382E(i32) unnamed_addr #1

; core::num::dec2flt::decimal::parse_decimal
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3num7dec2flt7decimal13parse_decimal17hf4914cdf3def232bE(%"core::num::dec2flt::decimal::Decimal"* sret(%"core::num::dec2flt::decimal::Decimal"), [0 x i8]* align 1, i64) unnamed_addr #1

; core::num::dec2flt::decimal::Decimal::right_shift
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3num7dec2flt7decimal7Decimal11right_shift17ha78a92e3c7a8e301E(%"core::num::dec2flt::decimal::Decimal"* align 8, i64) unnamed_addr #1

; core::num::dec2flt::decimal::Decimal::left_shift
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3num7dec2flt7decimal7Decimal10left_shift17h364ee52e1cf58023E(%"core::num::dec2flt::decimal::Decimal"* align 8, i64) unnamed_addr #1

; core::num::dec2flt::decimal::Decimal::round
; Function Attrs: nonlazybind uwtable
declare i64 @_ZN4core3num7dec2flt7decimal7Decimal5round17h8282f629b6a14406E(%"core::num::dec2flt::decimal::Decimal"* align 8) unnamed_addr #1

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #5

; core::num::dec2flt::parse::parse_partial_inf_nan::parse_inf_rest
; Function Attrs: nonlazybind uwtable
declare i64 @_ZN4core3num7dec2flt5parse21parse_partial_inf_nan14parse_inf_rest17hfa18041de3254509E([0 x i8]* align 1, i64) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #2

; core::num::dec2flt::lemire::compute_product_approx
; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @_ZN4core3num7dec2flt6lemire22compute_product_approx17h150e58dc42172e61E(i64, i64, i64) unnamed_addr #1

; core::num::dec2flt::lemire::power
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN4core3num7dec2flt6lemire5power17h0a9f8eda2bed0462E(i32) unnamed_addr #1

; <f64 as core::num::dec2flt::float::RawFloat>::from_u64
; Function Attrs: nonlazybind uwtable
declare double @"_ZN59_$LT$f64$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$8from_u6417he2e517674df674dcE"(i64) unnamed_addr #1

; <f64 as core::num::dec2flt::float::RawFloat>::pow10_fast_path
; Function Attrs: nonlazybind uwtable
declare double @"_ZN59_$LT$f64$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$15pow10_fast_path17h753202a27f0438daE"(i64) unnamed_addr #1

; <f32 as core::num::dec2flt::float::RawFloat>::from_u64
; Function Attrs: nonlazybind uwtable
declare float @"_ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$8from_u6417h4895000fc90a4153E"(i64) unnamed_addr #1

; <f32 as core::num::dec2flt::float::RawFloat>::pow10_fast_path
; Function Attrs: nonlazybind uwtable
declare float @"_ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$15pow10_fast_path17h98effb03d97827a7E"(i64) unnamed_addr #1

; core::num::dec2flt::pfe_empty
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3num7dec2flt9pfe_empty17h6df4326effb09ff2E() unnamed_addr #1

; core::num::dec2flt::parse::parse_number
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3num7dec2flt5parse12parse_number17h1c105239f159143dE(%"core::option::Option<core::num::dec2flt::number::Number>"* sret(%"core::option::Option<core::num::dec2flt::number::Number>"), [0 x i8]* align 1, i64, i1 zeroext) unnamed_addr #1

; core::num::dec2flt::pfe_invalid
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3num7dec2flt11pfe_invalid17h510707166d87dc9bE() unnamed_addr #1

; core::num::<impl core::str::traits::FromStr for usize>::from_str
; Function Attrs: nonlazybind uwtable
declare void @"_ZN4core3num62_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$usize$GT$8from_str17h23a83747ee6cd04cE"(%"core::result::Result<usize, core::num::error::ParseIntError>"* sret(%"core::result::Result<usize, core::num::error::ParseIntError>"), [0 x i8]* align 1, i64) unnamed_addr #1

; core::str::slice_error_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core3str16slice_error_fail17h062f63050b85fc0cE([0 x i8]* align 1, i64, i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.uadd.sat.i32(i32, i32) #2

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #6

; Function Attrs: nonlazybind uwtable
declare i32 @memcmp(i8*, i8*, i64) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i16, i1 } @llvm.ssub.with.overflow.i16(i16, i16) #2

; <str as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17hde81f4d22eef4d42E"([0 x i8]* align 1, i64, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::Formatter::write_str
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17hd86e8e148609ddcbE(%"core::fmt::Formatter"* align 8, [0 x i8]* align 1, i64) unnamed_addr #1

; core::fmt::Formatter::debug_struct_field1_finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field1_finish17h5ab08f78e2743177E(%"core::fmt::Formatter"* align 8, [0 x i8]* align 1, i64, [0 x i8]* align 1, i64, {}* align 1, [3 x i64]* align 8) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.powi.f32.i32(float, i32) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.powi.f64.i32(double, i32) #2

attributes #0 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nounwind willreturn }
attributes #4 = { nofree nosync nounwind readnone willreturn }
attributes #5 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #6 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #7 = { noreturn }

!llvm.module.flags = !{!20, !21, !22, !23}
!llvm.dbg.cu = !{!24}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<&num_traits::FloatErrorKind as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&num_traits::FloatErrorKind as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !12, templateParams: !19, identifier: "70bf8d883a1c138322c9704540a4c102")
!4 = !{!5, !8, !10, !11}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&num_traits::FloatErrorKind", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FloatErrorKind", scope: !14, file: !2, baseType: !15, size: 8, align: 8, flags: DIFlagEnumClass, elements: !16)
!14 = !DINamespace(name: "num_traits", scope: null)
!15 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!16 = !{!17, !18}
!17 = !DIEnumerator(name: "Empty", value: 0, isUnsigned: true)
!18 = !DIEnumerator(name: "Invalid", value: 1, isUnsigned: true)
!19 = !{}
!20 = !{i32 7, !"PIC Level", i32 2}
!21 = !{i32 2, !"RtLibUseGOT", i32 1}
!22 = !{i32 2, !"Dwarf Version", i32 4}
!23 = !{i32 2, !"Debug Info Version", i32 3}
!24 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !25, producer: "clang LLVM (rustc version 1.65.0-nightly (d394408fb 2022-08-07))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !26, globals: !54)
!25 = !DIFile(filename: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19/src/lib.rs/@/num_traits.ecb74699-cgu.0", directory: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19")
!26 = !{!13, !27, !37, !44, !47}
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !28, file: !2, baseType: !15, size: 8, align: 8, flags: DIFlagEnumClass, elements: !32)
!28 = !DINamespace(name: "v1", scope: !29)
!29 = !DINamespace(name: "rt", scope: !30)
!30 = !DINamespace(name: "fmt", scope: !31)
!31 = !DINamespace(name: "core", scope: null)
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!36 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !38, file: !2, baseType: !39, size: 8, align: 8, flags: DIFlagEnumClass, elements: !40)
!38 = !DINamespace(name: "cmp", scope: !31)
!39 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!40 = !{!41, !42, !43}
!41 = !DIEnumerator(name: "Less", value: 255)
!42 = !DIEnumerator(name: "Equal", value: 0)
!43 = !DIEnumerator(name: "Greater", value: 1)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FloatErrorKind", scope: !45, file: !2, baseType: !15, size: 8, align: 8, flags: DIFlagEnumClass, elements: !16)
!45 = !DINamespace(name: "dec2flt", scope: !46)
!46 = !DINamespace(name: "num", scope: !31)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IntErrorKind", scope: !48, file: !2, baseType: !15, size: 8, align: 8, flags: DIFlagEnumClass, elements: !49)
!48 = !DINamespace(name: "error", scope: !46)
!49 = !{!17, !50, !51, !52, !53}
!50 = !DIEnumerator(name: "InvalidDigit", value: 1, isUnsigned: true)
!51 = !DIEnumerator(name: "PosOverflow", value: 2, isUnsigned: true)
!52 = !DIEnumerator(name: "NegOverflow", value: 3, isUnsigned: true)
!53 = !DIEnumerator(name: "Zero", value: 4, isUnsigned: true)
!54 = !{!0}
!55 = distinct !DISubprogram(name: "next<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", linkageName: "_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4a8492ba729d29abE", scope: !57, file: !56, line: 83, type: !61, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !110, retainedNodes: !113)
!56 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/adapters/zip.rs", directory: "", checksumkind: CSK_MD5, checksum: "278264c097e5b80e82aa3f4661da37c1")
!57 = !DINamespace(name: "{impl#1}", scope: !58)
!58 = !DINamespace(name: "zip", scope: !59)
!59 = !DINamespace(name: "adapters", scope: !60)
!60 = !DINamespace(name: "iter", scope: !31)
!61 = !DISubroutineType(types: !62)
!62 = !{!63, !83}
!63 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(&u8, &u8)>", scope: !64, file: !2, size: 128, align: 64, elements: !65, templateParams: !19, identifier: "ad6e84816eb6fff539ae576791e8c520")
!64 = !DINamespace(name: "option", scope: !31)
!65 = !{!66}
!66 = !DICompositeType(tag: DW_TAG_variant_part, scope: !63, file: !2, size: 128, align: 64, elements: !67, templateParams: !19, identifier: "3ce87df09173c0bd44049ae286d855ad", discriminator: !81)
!67 = !{!68, !77}
!68 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !66, file: !2, baseType: !69, size: 128, align: 64, extraData: i64 0)
!69 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !63, file: !2, size: 128, align: 64, elements: !19, templateParams: !70, identifier: "a5f1e68fe5b599317f1407451d36afd")
!70 = !{!71}
!71 = !DITemplateTypeParameter(name: "T", type: !72)
!72 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&u8, &u8)", file: !2, size: 128, align: 64, elements: !73, templateParams: !19, identifier: "d9d0d3562494710435cdc4083134674")
!73 = !{!74, !76}
!74 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !72, file: !2, baseType: !75, size: 64, align: 64)
!75 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !15, size: 64, align: 64, dwarfAddressSpace: 0)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !72, file: !2, baseType: !75, size: 64, align: 64, offset: 64)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !66, file: !2, baseType: !78, size: 128, align: 64)
!78 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !63, file: !2, size: 128, align: 64, elements: !79, templateParams: !70, identifier: "b943f1678c0b87ae88f2542a67061e35")
!79 = !{!80}
!80 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !78, file: !2, baseType: !72, size: 128, align: 64)
!81 = !DIDerivedType(tag: DW_TAG_member, scope: !63, file: !2, baseType: !82, size: 64, align: 64, flags: DIFlagArtificial)
!82 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", baseType: !84, size: 64, align: 64, dwarfAddressSpace: 0)
!84 = !DICompositeType(tag: DW_TAG_structure_type, name: "Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", scope: !58, file: !2, size: 448, align: 64, elements: !85, templateParams: !110, identifier: "c6a83170d2c7100a90ce5fe072606414")
!85 = !{!86, !106, !107, !108, !109}
!86 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !84, file: !2, baseType: !87, size: 128, align: 64)
!87 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<u8>", scope: !88, file: !2, size: 128, align: 64, elements: !90, templateParams: !98, identifier: "604c1441eac6ad793aa852936f7a8030")
!88 = !DINamespace(name: "iter", scope: !89)
!89 = !DINamespace(name: "slice", scope: !31)
!90 = !{!91, !100, !101}
!91 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !87, file: !2, baseType: !92, size: 64, align: 64)
!92 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !93, file: !2, size: 64, align: 64, elements: !95, templateParams: !98, identifier: "3160283ea80cecf6149fff38a2e996de")
!93 = !DINamespace(name: "non_null", scope: !94)
!94 = !DINamespace(name: "ptr", scope: !31)
!95 = !{!96}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !92, file: !2, baseType: !97, size: 64, align: 64)
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !15, size: 64, align: 64, dwarfAddressSpace: 0)
!98 = !{!99}
!99 = !DITemplateTypeParameter(name: "T", type: !15)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !87, file: !2, baseType: !97, size: 64, align: 64, offset: 64)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !87, file: !2, baseType: !102, align: 8)
!102 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&u8>", scope: !103, file: !2, align: 8, elements: !19, templateParams: !104, identifier: "4e2102ee614de7ec94ba265c486b9c89")
!103 = !DINamespace(name: "marker", scope: !31)
!104 = !{!105}
!105 = !DITemplateTypeParameter(name: "T", type: !75)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !84, file: !2, baseType: !87, size: 128, align: 64, offset: 128)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !84, file: !2, baseType: !9, size: 64, align: 64, offset: 256)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !84, file: !2, baseType: !9, size: 64, align: 64, offset: 320)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "a_len", scope: !84, file: !2, baseType: !9, size: 64, align: 64, offset: 384)
!110 = !{!111, !112}
!111 = !DITemplateTypeParameter(name: "A", type: !87)
!112 = !DITemplateTypeParameter(name: "B", type: !87)
!113 = !{!114}
!114 = !DILocalVariable(name: "self", arg: 1, scope: !55, file: !56, line: 83, type: !83)
!115 = !DILocation(line: 83, column: 13, scope: !55)
!116 = !DILocation(line: 84, column: 9, scope: !55)
!117 = !DILocation(line: 85, column: 6, scope: !55)
!118 = distinct !DISubprogram(name: "next<core::str::iter::Bytes, core::str::iter::Bytes>", linkageName: "_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h837551cd9ed82fb3E", scope: !57, file: !56, line: 83, type: !119, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !157, retainedNodes: !160)
!119 = !DISubroutineType(types: !120)
!120 = !{!121, !138}
!121 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(u8, u8)>", scope: !64, file: !2, size: 24, align: 8, elements: !122, templateParams: !19, identifier: "318b7a1925676221cdd49d977d23b6be")
!122 = !{!123}
!123 = !DICompositeType(tag: DW_TAG_variant_part, scope: !121, file: !2, size: 24, align: 8, elements: !124, templateParams: !19, identifier: "e14fa2aa2bc86d29effb2ccb28dd92d", discriminator: !137)
!124 = !{!125, !133}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !123, file: !2, baseType: !126, size: 24, align: 8, extraData: i64 0)
!126 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !121, file: !2, size: 24, align: 8, elements: !19, templateParams: !127, identifier: "56a529f1539b92dbbe58357a6b73981")
!127 = !{!128}
!128 = !DITemplateTypeParameter(name: "T", type: !129)
!129 = !DICompositeType(tag: DW_TAG_structure_type, name: "(u8, u8)", file: !2, size: 16, align: 8, elements: !130, templateParams: !19, identifier: "37f9e0df58fae0ef3ba6ea240aab1e26")
!130 = !{!131, !132}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !129, file: !2, baseType: !15, size: 8, align: 8)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !129, file: !2, baseType: !15, size: 8, align: 8, offset: 8)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !123, file: !2, baseType: !134, size: 24, align: 8, extraData: i64 1)
!134 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !121, file: !2, size: 24, align: 8, elements: !135, templateParams: !127, identifier: "9919a39cec15d683c0dd4d85bda8467e")
!135 = !{!136}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !134, file: !2, baseType: !129, size: 16, align: 8, offset: 8)
!137 = !DIDerivedType(tag: DW_TAG_member, scope: !121, file: !2, baseType: !15, size: 8, align: 8, flags: DIFlagArtificial)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>", baseType: !139, size: 64, align: 64, dwarfAddressSpace: 0)
!139 = !DICompositeType(tag: DW_TAG_structure_type, name: "Zip<core::str::iter::Bytes, core::str::iter::Bytes>", scope: !58, file: !2, size: 448, align: 64, elements: !140, templateParams: !157, identifier: "baf7333330248bb344d5f890700d153b")
!140 = !{!141, !153, !154, !155, !156}
!141 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !139, file: !2, baseType: !142, size: 128, align: 64)
!142 = !DICompositeType(tag: DW_TAG_structure_type, name: "Bytes", scope: !143, file: !2, size: 128, align: 64, elements: !145, templateParams: !19, identifier: "a924c030ad6941c5216fab9688f9c1c9")
!143 = !DINamespace(name: "iter", scope: !144)
!144 = !DINamespace(name: "str", scope: !31)
!145 = !{!146}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !142, file: !2, baseType: !147, size: 128, align: 64)
!147 = !DICompositeType(tag: DW_TAG_structure_type, name: "Copied<core::slice::iter::Iter<u8>>", scope: !148, file: !2, size: 128, align: 64, elements: !149, templateParams: !151, identifier: "f783fc9831e032da2a1b411094ea669f")
!148 = !DINamespace(name: "copied", scope: !59)
!149 = !{!150}
!150 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !147, file: !2, baseType: !87, size: 128, align: 64)
!151 = !{!152}
!152 = !DITemplateTypeParameter(name: "I", type: !87)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !139, file: !2, baseType: !142, size: 128, align: 64, offset: 128)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !139, file: !2, baseType: !9, size: 64, align: 64, offset: 256)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !139, file: !2, baseType: !9, size: 64, align: 64, offset: 320)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "a_len", scope: !139, file: !2, baseType: !9, size: 64, align: 64, offset: 384)
!157 = !{!158, !159}
!158 = !DITemplateTypeParameter(name: "A", type: !142)
!159 = !DITemplateTypeParameter(name: "B", type: !142)
!160 = !{!161}
!161 = !DILocalVariable(name: "self", arg: 1, scope: !118, file: !56, line: 83, type: !138)
!162 = !DILocation(line: 83, column: 13, scope: !118)
!163 = !DILocation(line: 84, column: 9, scope: !118)
!164 = !DILocation(line: 85, column: 6, scope: !118)
!165 = distinct !DISubprogram(name: "__iterator_get_unchecked<core::slice::iter::Iter<u8>, u8>", linkageName: "_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h19dc1639f28d90b1E", scope: !167, file: !166, line: 84, type: !168, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !174, retainedNodes: !171)
!166 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/adapters/copied.rs", directory: "", checksumkind: CSK_MD5, checksum: "efac9608a3239d124e33fc1a46be8bca")
!167 = !DINamespace(name: "{impl#1}", scope: !148)
!168 = !DISubroutineType(types: !169)
!169 = !{!15, !170, !9}
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>", baseType: !147, size: 64, align: 64, dwarfAddressSpace: 0)
!171 = !{!172, !173}
!172 = !DILocalVariable(name: "self", arg: 1, scope: !165, file: !166, line: 84, type: !170)
!173 = !DILocalVariable(name: "idx", arg: 2, scope: !165, file: !166, line: 84, type: !9)
!174 = !{!152, !99}
!175 = !DILocation(line: 84, column: 40, scope: !165)
!176 = !DILocation(line: 84, column: 51, scope: !165)
!177 = !DILocation(line: 90, column: 37, scope: !165)
!178 = !DILocalVariable(name: "it", scope: !179, file: !166, line: 90, type: !183, align: 8)
!179 = !DILexicalBlockFile(scope: !180, file: !166, discriminator: 0)
!180 = distinct !DISubprogram(name: "try_get_unchecked<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core4iter8adapters3zip17try_get_unchecked17h325bd43f6a82ee73E", scope: !58, file: !56, line: 557, type: !181, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !151, retainedNodes: !184)
!181 = !DISubroutineType(types: !182)
!182 = !{!75, !183, !9}
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<u8>", baseType: !87, size: 64, align: 64, dwarfAddressSpace: 0)
!184 = !{!178, !185}
!185 = !DILocalVariable(name: "idx", scope: !179, file: !166, line: 90, type: !9, align: 8)
!186 = !DILocation(line: 90, column: 19, scope: !179, inlinedAt: !187)
!187 = !DILocation(line: 90, column: 19, scope: !165)
!188 = !DILocation(line: 90, column: 51, scope: !165)
!189 = !DILocation(line: 90, column: 9, scope: !165)
!190 = !DILocation(line: 91, column: 6, scope: !165)
!191 = distinct !DISubprogram(name: "size_hint<core::slice::iter::Iter<u8>, u8>", linkageName: "_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h9ed59b6c5a0a8a4aE", scope: !167, file: !166, line: 47, type: !192, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !174, retainedNodes: !212)
!192 = !DISubroutineType(types: !193)
!193 = !{!194, !211}
!194 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, core::option::Option<usize>)", file: !2, size: 192, align: 64, elements: !195, templateParams: !19, identifier: "f906b68f221a6503b6525b65c4ce4669")
!195 = !{!196, !197}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !194, file: !2, baseType: !9, size: 64, align: 64)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !194, file: !2, baseType: !198, size: 128, align: 64, offset: 64)
!198 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !64, file: !2, size: 128, align: 64, elements: !199, templateParams: !19, identifier: "5190463b0687da274ab794ccaf9d1fd8")
!199 = !{!200}
!200 = !DICompositeType(tag: DW_TAG_variant_part, scope: !198, file: !2, size: 128, align: 64, elements: !201, templateParams: !19, identifier: "db59d501e5f76645f4edce4cdbfeb328", discriminator: !210)
!201 = !{!202, !206}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !200, file: !2, baseType: !203, size: 128, align: 64, extraData: i64 0)
!203 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !198, file: !2, size: 128, align: 64, elements: !19, templateParams: !204, identifier: "a1c5f3dead8f24ccdada7bc2feedd145")
!204 = !{!205}
!205 = !DITemplateTypeParameter(name: "T", type: !9)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !200, file: !2, baseType: !207, size: 128, align: 64, extraData: i64 1)
!207 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !198, file: !2, size: 128, align: 64, elements: !208, templateParams: !204, identifier: "3ad875242c049b8143d7577f4eb10d1a")
!208 = !{!209}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !207, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!210 = !DIDerivedType(tag: DW_TAG_member, scope: !198, file: !2, baseType: !82, size: 64, align: 64, flags: DIFlagArtificial)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>", baseType: !147, size: 64, align: 64, dwarfAddressSpace: 0)
!212 = !{!213}
!213 = !DILocalVariable(name: "self", arg: 1, scope: !191, file: !166, line: 47, type: !211)
!214 = !DILocation(line: 47, column: 18, scope: !191)
!215 = !DILocation(line: 48, column: 9, scope: !191)
!216 = !DILocation(line: 49, column: 6, scope: !191)
!217 = distinct !DISubprogram(name: "from_residual<(), ()>", linkageName: "_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h1e66e656f3c187b8E", scope: !219, file: !218, line: 119, type: !222, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !232, retainedNodes: !258)
!218 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ops/control_flow.rs", directory: "", checksumkind: CSK_MD5, checksum: "f9597a58930c0b329415d1c88aa0ccc8")
!219 = !DINamespace(name: "{impl#1}", scope: !220)
!220 = !DINamespace(name: "control_flow", scope: !221)
!221 = !DINamespace(name: "ops", scope: !31)
!222 = !DISubroutineType(types: !223)
!223 = !{!224, !240}
!224 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<(), ()>", scope: !220, file: !2, size: 8, align: 8, elements: !225, templateParams: !19, identifier: "b9608799534fb3d94cea67b203699726")
!225 = !{!226}
!226 = !DICompositeType(tag: DW_TAG_variant_part, scope: !224, file: !2, size: 8, align: 8, elements: !227, templateParams: !19, identifier: "3455bc8ad70bf6d2c815cb3b82c5013b", discriminator: !239)
!227 = !{!228, !235}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !226, file: !2, baseType: !229, size: 8, align: 8, extraData: i64 0)
!229 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !224, file: !2, size: 8, align: 8, elements: !230, templateParams: !232, identifier: "4d3a420f61bfb95bb55203c048a32d")
!230 = !{!231}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !229, file: !2, baseType: !7, align: 8, offset: 8)
!232 = !{!233, !234}
!233 = !DITemplateTypeParameter(name: "B", type: !7)
!234 = !DITemplateTypeParameter(name: "C", type: !7)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !226, file: !2, baseType: !236, size: 8, align: 8, extraData: i64 1)
!236 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !224, file: !2, size: 8, align: 8, elements: !237, templateParams: !232, identifier: "29daff6f123047962c84cd150d55e04e")
!237 = !{!238}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !236, file: !2, baseType: !7, align: 8, offset: 8)
!239 = !DIDerivedType(tag: DW_TAG_member, scope: !224, file: !2, baseType: !15, size: 8, align: 8, flags: DIFlagArtificial)
!240 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<(), core::convert::Infallible>", scope: !220, file: !2, align: 8, elements: !241, templateParams: !19, identifier: "c2e041f84497b19af2c87d65889ac16")
!241 = !{!242}
!242 = !DICompositeType(tag: DW_TAG_variant_part, scope: !240, file: !2, align: 8, elements: !243, templateParams: !19, identifier: "44a3ea7c44d1f6f3e67df79579007fe3")
!243 = !{!244, !254}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !242, file: !2, baseType: !245, align: 8)
!245 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !240, file: !2, align: 8, elements: !246, templateParams: !252, identifier: "2a9917875522c49dd10de08cb32038db")
!246 = !{!247}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !245, file: !2, baseType: !248, align: 8)
!248 = !DICompositeType(tag: DW_TAG_structure_type, name: "Infallible", scope: !249, file: !2, align: 8, elements: !250, templateParams: !19, identifier: "54da939063c7c2baf203c9f582cd0995")
!249 = !DINamespace(name: "convert", scope: !31)
!250 = !{!251}
!251 = !DICompositeType(tag: DW_TAG_variant_part, scope: !248, file: !2, align: 8, elements: !19, identifier: "8a046f69014feadb4a5e941e4277afe9")
!252 = !{!233, !253}
!253 = !DITemplateTypeParameter(name: "C", type: !248)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !242, file: !2, baseType: !255, align: 8)
!255 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !240, file: !2, align: 8, elements: !256, templateParams: !252, identifier: "98b9597d4b5da3066bbf2dacc27c74bd")
!256 = !{!257}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !255, file: !2, baseType: !7, align: 8)
!258 = !{!259, !260}
!259 = !DILocalVariable(name: "residual", arg: 1, scope: !217, file: !218, line: 119, type: !240)
!260 = !DILocalVariable(name: "b", scope: !261, file: !218, line: 121, type: !7, align: 1)
!261 = distinct !DILexicalBlock(scope: !217, file: !218, line: 121, column: 13)
!262 = !DILocation(line: 119, column: 22, scope: !217)
!263 = !DILocation(line: 121, column: 32, scope: !261)
!264 = !DILocation(line: 121, column: 38, scope: !261)
!265 = !DILocation(line: 123, column: 6, scope: !217)
!266 = !{i8 0, i8 2}
!267 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h027adc00ed696f09E", scope: !269, file: !268, line: 278, type: !271, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !285)
!268 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "22a04328eca3d78fd2bf5357f9150928")
!269 = !DINamespace(name: "{impl#3}", scope: !270)
!270 = !DINamespace(name: "index", scope: !89)
!271 = !DISubroutineType(types: !272)
!272 = !{!273, !278, !273}
!273 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !2, size: 128, align: 64, elements: !274, templateParams: !19, identifier: "7b54d414f2f329e57c9aa3e4ca07f4")
!274 = !{!275, !277}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !273, file: !2, baseType: !276, size: 64, align: 64)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64, align: 64, dwarfAddressSpace: 0)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !273, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!278 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !279, file: !2, size: 128, align: 64, elements: !280, templateParams: !283, identifier: "855eb37746b15049ea4556b174e97dd7")
!279 = !DINamespace(name: "range", scope: !221)
!280 = !{!281, !282}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !278, file: !2, baseType: !9, size: 64, align: 64)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !278, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!283 = !{!284}
!284 = !DITemplateTypeParameter(name: "Idx", type: !9)
!285 = !{!286, !287, !288}
!286 = !DILocalVariable(name: "self", arg: 1, scope: !267, file: !268, line: 278, type: !278)
!287 = !DILocalVariable(name: "slice", arg: 2, scope: !267, file: !268, line: 278, type: !273)
!288 = !DILocalVariable(name: "runtime", scope: !289, file: !268, line: 285, type: !292, align: 8)
!289 = !DILexicalBlockFile(scope: !290, file: !268, discriminator: 0)
!290 = distinct !DILexicalBlock(scope: !267, file: !291, line: 2336, column: 13)
!291 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "f96ba730d7cf23ae45fdc72e7caf5f1b")
!292 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !293, file: !2, size: 192, align: 64, elements: !294, templateParams: !19, identifier: "3899877b232b8d576af2a125fa395e55")
!293 = !DINamespace(name: "get_unchecked", scope: !269)
!294 = !{!295, !297, !298}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__start", scope: !292, file: !2, baseType: !296, size: 64, align: 64)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__end", scope: !292, file: !2, baseType: !296, size: 64, align: 64, offset: 64)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !292, file: !2, baseType: !299, size: 64, align: 64, offset: 128)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const [u8]", baseType: !273, size: 64, align: 64, dwarfAddressSpace: 0)
!300 = !DILocation(line: 278, column: 29, scope: !267)
!301 = !DILocation(line: 278, column: 35, scope: !267)
!302 = !DILocation(line: 285, column: 13, scope: !289)
!303 = !DILocation(line: 286, column: 39, scope: !267)
!304 = !DILocalVariable(name: "self", scope: !305, file: !268, line: 286, type: !273, align: 8)
!305 = !DILexicalBlockFile(scope: !306, file: !268, discriminator: 0)
!306 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hf8efb5a105c8a645E", scope: !308, file: !307, line: 1385, type: !310, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !312)
!307 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "1874e43cb83f8af3048974827047cb9c")
!308 = !DINamespace(name: "{impl#1}", scope: !309)
!309 = !DINamespace(name: "const_ptr", scope: !94)
!310 = !DISubroutineType(types: !311)
!311 = !{!97, !273}
!312 = !{!304}
!313 = !DILocation(line: 286, column: 39, scope: !305, inlinedAt: !303)
!314 = !DILocalVariable(name: "self", scope: !315, file: !268, line: 286, type: !97, align: 8)
!315 = !DILexicalBlockFile(scope: !316, file: !268, discriminator: 0)
!316 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hdeb7c1729690ff7fE", scope: !317, file: !307, line: 871, type: !318, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !320)
!317 = !DINamespace(name: "{impl#0}", scope: !309)
!318 = !DISubroutineType(types: !319)
!319 = !{!97, !97, !9}
!320 = !{!314, !321}
!321 = !DILocalVariable(name: "count", scope: !315, file: !268, line: 286, type: !9, align: 8)
!322 = !DILocation(line: 286, column: 39, scope: !315, inlinedAt: !303)
!323 = !DILocation(line: 286, column: 58, scope: !267)
!324 = !DILocalVariable(name: "self", scope: !325, file: !268, line: 286, type: !97, align: 8)
!325 = !DILexicalBlockFile(scope: !326, file: !268, discriminator: 0)
!326 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h8b35729b9a3365e8E", scope: !317, file: !307, line: 453, type: !327, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !330)
!327 = !DISubroutineType(types: !328)
!328 = !{!97, !97, !329}
!329 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!330 = !{!324, !331}
!331 = !DILocalVariable(name: "count", scope: !325, file: !268, line: 286, type: !329, align: 8)
!332 = !DILocation(line: 286, column: 39, scope: !325, inlinedAt: !333)
!333 = !DILocation(line: 876, column: 18, scope: !316, inlinedAt: !303)
!334 = !DILocalVariable(name: "data", scope: !335, file: !268, line: 286, type: !97, align: 8)
!335 = !DILexicalBlockFile(scope: !336, file: !268, discriminator: 0)
!336 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h4e0dd63690dcfc18E", scope: !94, file: !337, line: 695, type: !338, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !340)
!337 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "13c32d970b0b4dd38131a1908223a155")
!338 = !DISubroutineType(types: !339)
!339 = !{!273, !97, !9}
!340 = !{!334, !341}
!341 = !DILocalVariable(name: "len", scope: !335, file: !268, line: 286, type: !9, align: 8)
!342 = !DILocation(line: 286, column: 13, scope: !335, inlinedAt: !343)
!343 = !DILocation(line: 286, column: 13, scope: !267)
!344 = !DILocation(line: 286, column: 71, scope: !267)
!345 = !DILocalVariable(name: "self", scope: !346, file: !268, line: 286, type: !97, align: 8)
!346 = !DILexicalBlockFile(scope: !347, file: !268, discriminator: 0)
!347 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h46b8598cf8ede31bE", scope: !317, file: !307, line: 46, type: !348, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !351, retainedNodes: !350)
!348 = !DISubroutineType(types: !349)
!349 = !{!6, !97}
!350 = !{!345}
!351 = !{!99, !352}
!352 = !DITemplateTypeParameter(name: "U", type: !7)
!353 = !DILocation(line: 286, column: 13, scope: !346, inlinedAt: !354)
!354 = !DILocation(line: 696, column: 20, scope: !336, inlinedAt: !343)
!355 = !DILocalVariable(name: "data_address", scope: !356, file: !268, line: 286, type: !6, align: 8)
!356 = !DILexicalBlockFile(scope: !357, file: !268, discriminator: 0)
!357 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h5216e18adf09ab15E", scope: !359, file: !358, line: 110, type: !360, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !362)
!358 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "59565ed3c34dee3e8f8928c29f8f7ce4")
!359 = !DINamespace(name: "metadata", scope: !94)
!360 = !DISubroutineType(types: !361)
!361 = !{!273, !6, !9}
!362 = !{!355, !363}
!363 = !DILocalVariable(name: "metadata", scope: !356, file: !268, line: 286, type: !9, align: 8)
!364 = !DILocation(line: 286, column: 13, scope: !356, inlinedAt: !365)
!365 = !DILocation(line: 696, column: 5, scope: !336, inlinedAt: !343)
!366 = !DILocation(line: 288, column: 6, scope: !267)
!367 = distinct !DISubprogram(name: "next<core::str::iter::Chars>", linkageName: "_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8661d2a79e81aa4fE", scope: !369, file: !368, line: 45, type: !371, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !400, retainedNodes: !402)
!368 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/adapters/enumerate.rs", directory: "", checksumkind: CSK_MD5, checksum: "f31ca9b0d4951eac7d9a8089e3599b62")
!369 = !DINamespace(name: "{impl#1}", scope: !370)
!370 = !DINamespace(name: "enumerate", scope: !59)
!371 = !DISubroutineType(types: !372)
!372 = !{!373, !392}
!373 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(usize, char)>", scope: !64, file: !2, size: 128, align: 64, elements: !374, templateParams: !19, identifier: "28521b5aedd26fdf1e261cada33bc9ce")
!374 = !{!375}
!375 = !DICompositeType(tag: DW_TAG_variant_part, scope: !373, file: !2, size: 128, align: 64, elements: !376, templateParams: !19, identifier: "6a1e62ea70f4d529357407ee7335d2b", discriminator: !390)
!376 = !{!377, !386}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !375, file: !2, baseType: !378, size: 128, align: 64, extraData: i64 1114112)
!378 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !373, file: !2, size: 128, align: 64, elements: !19, templateParams: !379, identifier: "e1903e1b3a7e8f4f17c5e2e6c7f94d8b")
!379 = !{!380}
!380 = !DITemplateTypeParameter(name: "T", type: !381)
!381 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, char)", file: !2, size: 128, align: 64, elements: !382, templateParams: !19, identifier: "89785b0a14c18bab4f06ff5760e2591e")
!382 = !{!383, !384}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !381, file: !2, baseType: !9, size: 64, align: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !381, file: !2, baseType: !385, size: 32, align: 32, offset: 64)
!385 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !375, file: !2, baseType: !387, size: 128, align: 64)
!387 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !373, file: !2, size: 128, align: 64, elements: !388, templateParams: !379, identifier: "925825e8f4185badbee317033905d3e7")
!388 = !{!389}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !387, file: !2, baseType: !381, size: 128, align: 64)
!390 = !DIDerivedType(tag: DW_TAG_member, scope: !373, file: !2, baseType: !391, size: 32, align: 32, offset: 64, flags: DIFlagArtificial)
!391 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>", baseType: !393, size: 64, align: 64, dwarfAddressSpace: 0)
!393 = !DICompositeType(tag: DW_TAG_structure_type, name: "Enumerate<core::str::iter::Chars>", scope: !370, file: !2, size: 192, align: 64, elements: !394, templateParams: !400, identifier: "92c254cb3c0cfd318f40d41654f06ade")
!394 = !{!395, !399}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !393, file: !2, baseType: !396, size: 128, align: 64)
!396 = !DICompositeType(tag: DW_TAG_structure_type, name: "Chars", scope: !143, file: !2, size: 128, align: 64, elements: !397, templateParams: !19, identifier: "bf4266910c22c2e7c5f8afbf04b94119")
!397 = !{!398}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !396, file: !2, baseType: !87, size: 128, align: 64)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !393, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!400 = !{!401}
!401 = !DITemplateTypeParameter(name: "I", type: !396)
!402 = !{!403, !404, !406, !420, !422}
!403 = !DILocalVariable(name: "self", arg: 1, scope: !367, file: !368, line: 45, type: !392)
!404 = !DILocalVariable(name: "a", scope: !405, file: !368, line: 46, type: !385, align: 4)
!405 = distinct !DILexicalBlock(scope: !367, file: !368, line: 46, column: 9)
!406 = !DILocalVariable(name: "residual", scope: !407, file: !368, line: 46, type: !408, align: 1)
!407 = distinct !DILexicalBlock(scope: !367, file: !368, line: 46, column: 33)
!408 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::convert::Infallible>", scope: !64, file: !2, align: 8, elements: !409, templateParams: !19, identifier: "d8a1490c995f47139381e35a5e6e5cdb")
!409 = !{!410}
!410 = !DICompositeType(tag: DW_TAG_variant_part, scope: !408, file: !2, align: 8, elements: !411, templateParams: !19, identifier: "9b62236bada376e41df23b6f70477fcc")
!411 = !{!412, !416}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !410, file: !2, baseType: !413, align: 8)
!413 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !408, file: !2, align: 8, elements: !19, templateParams: !414, identifier: "6887a830e9518178209fc3c61f1ca37d")
!414 = !{!415}
!415 = !DITemplateTypeParameter(name: "T", type: !248)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !410, file: !2, baseType: !417, align: 8)
!417 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !408, file: !2, align: 8, elements: !418, templateParams: !414, identifier: "57c813c1928930715dbbb4312e4c0fa4")
!418 = !{!419}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !417, file: !2, baseType: !248, align: 8)
!420 = !DILocalVariable(name: "val", scope: !421, file: !368, line: 46, type: !385, align: 4)
!421 = distinct !DILexicalBlock(scope: !367, file: !368, line: 46, column: 17)
!422 = !DILocalVariable(name: "i", scope: !423, file: !368, line: 47, type: !9, align: 8)
!423 = distinct !DILexicalBlock(scope: !405, file: !368, line: 47, column: 9)
!424 = !DILocation(line: 45, column: 13, scope: !367)
!425 = !DILocalVariable(name: "self", scope: !426, file: !368, line: 46, type: !448, align: 4)
!426 = !DILexicalBlockFile(scope: !427, file: !368, discriminator: 0)
!427 = distinct !DISubprogram(name: "branch<char>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h934df6cd5ceddcc0E", scope: !429, file: !428, line: 2290, type: !430, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !454, retainedNodes: !461)
!428 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "86a5483c3993f03690545387e943de77")
!429 = !DINamespace(name: "{impl#35}", scope: !64)
!430 = !DISubroutineType(types: !431)
!431 = !{!432, !448}
!432 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, char>", scope: !220, file: !2, size: 32, align: 32, elements: !433, templateParams: !19, identifier: "a213f93449b85c85af57ecb62f4ec3b8")
!433 = !{!434}
!434 = !DICompositeType(tag: DW_TAG_variant_part, scope: !432, file: !2, size: 32, align: 32, elements: !435, templateParams: !19, identifier: "edc8532839635b8ae344033bbd9b7765", discriminator: !447)
!435 = !{!436, !443}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !434, file: !2, baseType: !437, size: 32, align: 32)
!437 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !432, file: !2, size: 32, align: 32, elements: !438, templateParams: !440, identifier: "936171a15d71a2bf3685d825e60b0b32")
!438 = !{!439}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !437, file: !2, baseType: !385, size: 32, align: 32)
!440 = !{!441, !442}
!441 = !DITemplateTypeParameter(name: "B", type: !408)
!442 = !DITemplateTypeParameter(name: "C", type: !385)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !434, file: !2, baseType: !444, size: 32, align: 32, extraData: i64 1114112)
!444 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !432, file: !2, size: 32, align: 32, elements: !445, templateParams: !440, identifier: "9b221873f630a9338d87752792fc5d34")
!445 = !{!446}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !444, file: !2, baseType: !408, align: 8)
!447 = !DIDerivedType(tag: DW_TAG_member, scope: !432, file: !2, baseType: !391, size: 32, align: 32, flags: DIFlagArtificial)
!448 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<char>", scope: !64, file: !2, size: 32, align: 32, elements: !449, templateParams: !19, identifier: "182842703d13227530d78ce56a0c403e")
!449 = !{!450}
!450 = !DICompositeType(tag: DW_TAG_variant_part, scope: !448, file: !2, size: 32, align: 32, elements: !451, templateParams: !19, identifier: "a003d793d4429b686ac87860dc5c04de", discriminator: !460)
!451 = !{!452, !456}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !450, file: !2, baseType: !453, size: 32, align: 32, extraData: i64 1114112)
!453 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !448, file: !2, size: 32, align: 32, elements: !19, templateParams: !454, identifier: "3f6dc1f1907f9d5961a7508f51084ff9")
!454 = !{!455}
!455 = !DITemplateTypeParameter(name: "T", type: !385)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !450, file: !2, baseType: !457, size: 32, align: 32)
!457 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !448, file: !2, size: 32, align: 32, elements: !458, templateParams: !454, identifier: "8e96e38967905576ed8699e66885c8c4")
!458 = !{!459}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !457, file: !2, baseType: !385, size: 32, align: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, scope: !448, file: !2, baseType: !391, size: 32, align: 32, flags: DIFlagArtificial)
!461 = !{!425, !462}
!462 = !DILocalVariable(name: "v", scope: !463, file: !368, line: 46, type: !385, align: 4)
!463 = !DILexicalBlockFile(scope: !464, file: !368, discriminator: 0)
!464 = distinct !DILexicalBlock(scope: !427, file: !428, line: 2292, column: 13)
!465 = !DILocation(line: 46, column: 17, scope: !426, inlinedAt: !466)
!466 = !DILocation(line: 46, column: 17, scope: !367)
!467 = !DILocation(line: 46, column: 33, scope: !407)
!468 = !DILocalVariable(name: "residual", scope: !469, file: !368, line: 46, type: !408, align: 1)
!469 = !DILexicalBlockFile(scope: !470, file: !368, discriminator: 0)
!470 = distinct !DISubprogram(name: "from_residual<(usize, char)>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h8a45e523bf4b438aE", scope: !471, file: !428, line: 2302, type: !472, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !379, retainedNodes: !474)
!471 = !DINamespace(name: "{impl#36}", scope: !64)
!472 = !DISubroutineType(types: !473)
!473 = !{!373, !408}
!474 = !{!468}
!475 = !DILocation(line: 46, column: 17, scope: !469, inlinedAt: !476)
!476 = !DILocation(line: 46, column: 17, scope: !407)
!477 = !{i32 0, i32 1114113}
!478 = !{i32 0, i32 1114112}
!479 = !DILocation(line: 46, column: 17, scope: !463, inlinedAt: !466)
!480 = !DILocation(line: 46, column: 17, scope: !421)
!481 = !DILocation(line: 46, column: 13, scope: !405)
!482 = !DILocation(line: 47, column: 17, scope: !405)
!483 = !DILocation(line: 47, column: 13, scope: !423)
!484 = !DILocation(line: 48, column: 9, scope: !423)
!485 = !DILocation(line: 50, column: 6, scope: !367)
!486 = !DILocation(line: 49, column: 14, scope: !423)
!487 = !DILocation(line: 49, column: 9, scope: !423)
!488 = !DILocation(line: 50, column: 5, scope: !367)
!489 = !DILocation(line: 45, column: 5, scope: !367)
!490 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hb301fe5216e6dc3bE", scope: !491, file: !268, line: 388, type: !492, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !513)
!491 = !DINamespace(name: "{impl#5}", scope: !270)
!492 = !DISubroutineType(types: !493)
!493 = !{!494, !498, !494, !501}
!494 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u8]", file: !2, size: 128, align: 64, elements: !495, templateParams: !19, identifier: "7d49e60d2ca720f66806f7375f860e2")
!495 = !{!496, !497}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !494, file: !2, baseType: !276, size: 64, align: 64)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !494, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!498 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<usize>", scope: !279, file: !2, size: 64, align: 64, elements: !499, templateParams: !283, identifier: "a58758f4d6a6e1468075e24121943e64")
!499 = !{!500}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !498, file: !2, baseType: !9, size: 64, align: 64)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !502, size: 64, align: 64, dwarfAddressSpace: 0)
!502 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !503, file: !2, size: 192, align: 64, elements: !505, templateParams: !19, identifier: "ef576a844c237f54e9e75bf7bba044c0")
!503 = !DINamespace(name: "location", scope: !504)
!504 = !DINamespace(name: "panic", scope: !31)
!505 = !{!506, !511, !512}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !502, file: !2, baseType: !507, size: 128, align: 64)
!507 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !508, templateParams: !19, identifier: "c603ebb2af364502ef89131a86c6ad9b")
!508 = !{!509, !510}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !507, file: !2, baseType: !276, size: 64, align: 64)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !507, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !502, file: !2, baseType: !391, size: 32, align: 32, offset: 128)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !502, file: !2, baseType: !391, size: 32, align: 32, offset: 160)
!513 = !{!514, !515}
!514 = !DILocalVariable(name: "self", arg: 1, scope: !490, file: !268, line: 388, type: !498)
!515 = !DILocalVariable(name: "slice", arg: 2, scope: !490, file: !268, line: 388, type: !494)
!516 = !DILocation(line: 388, column: 14, scope: !490)
!517 = !DILocation(line: 388, column: 20, scope: !490)
!518 = !DILocation(line: 389, column: 12, scope: !490)
!519 = !DILocation(line: 393, column: 20, scope: !490)
!520 = !DILocalVariable(name: "self", scope: !521, file: !268, line: 393, type: !498, align: 8)
!521 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hf8498f96276a5500E", scope: !491, file: !268, line: 376, type: !522, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !524)
!522 = !DISubroutineType(types: !523)
!523 = !{!273, !498, !273}
!524 = !{!520, !525}
!525 = !DILocalVariable(name: "slice", scope: !521, file: !268, line: 393, type: !273, align: 8)
!526 = !DILocation(line: 393, column: 20, scope: !521, inlinedAt: !519)
!527 = !DILocation(line: 393, column: 39, scope: !490)
!528 = !DILocalVariable(name: "self", scope: !529, file: !268, line: 393, type: !273, align: 8)
!529 = !DILexicalBlockFile(scope: !530, file: !268, discriminator: 0)
!530 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h41b6b1eb103e841eE", scope: !308, file: !307, line: 1365, type: !531, scopeLine: 1365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !533)
!531 = !DISubroutineType(types: !532)
!532 = !{!9, !273}
!533 = !{!528}
!534 = !DILocation(line: 393, column: 20, scope: !529, inlinedAt: !535)
!535 = !DILocation(line: 378, column: 31, scope: !521, inlinedAt: !519)
!536 = !DILocalVariable(name: "ptr", scope: !537, file: !268, line: 393, type: !273, align: 8)
!537 = !DILexicalBlockFile(scope: !538, file: !268, discriminator: 0)
!538 = distinct !DISubprogram(name: "metadata<[u8]>", linkageName: "_ZN4core3ptr8metadata8metadata17hd0191cae52bdc169E", scope: !359, file: !358, line: 93, type: !531, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !539)
!539 = !{!536}
!540 = !DILocation(line: 393, column: 20, scope: !537, inlinedAt: !541)
!541 = !DILocation(line: 1366, column: 9, scope: !530, inlinedAt: !535)
!542 = !DILocation(line: 390, column: 13, scope: !490)
!543 = !DILocation(line: 394, column: 6, scope: !490)
!544 = distinct !DISubprogram(name: "new<core::str::iter::Bytes, core::str::iter::Bytes>", linkageName: "_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17h217811916799bea8E", scope: !545, file: !56, line: 262, type: !546, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !157, retainedNodes: !548)
!545 = !DINamespace(name: "{impl#5}", scope: !58)
!546 = !DISubroutineType(types: !547)
!547 = !{!139, !142, !142}
!548 = !{!549, !550, !551, !553}
!549 = !DILocalVariable(name: "a", arg: 1, scope: !544, file: !56, line: 262, type: !142)
!550 = !DILocalVariable(name: "b", arg: 2, scope: !544, file: !56, line: 262, type: !142)
!551 = !DILocalVariable(name: "a_len", scope: !552, file: !56, line: 263, type: !9, align: 8)
!552 = distinct !DILexicalBlock(scope: !544, file: !56, line: 263, column: 9)
!553 = !DILocalVariable(name: "len", scope: !554, file: !56, line: 264, type: !9, align: 8)
!554 = distinct !DILexicalBlock(scope: !552, file: !56, line: 264, column: 9)
!555 = !DILocation(line: 262, column: 12, scope: !544)
!556 = !DILocation(line: 262, column: 18, scope: !544)
!557 = !DILocation(line: 263, column: 21, scope: !544)
!558 = !DILocation(line: 266, column: 5, scope: !544)
!559 = !DILocation(line: 263, column: 13, scope: !552)
!560 = !DILocation(line: 264, column: 28, scope: !552)
!561 = !DILocalVariable(name: "v1", scope: !562, file: !56, line: 264, type: !9, align: 8)
!562 = !DILexicalBlockFile(scope: !563, file: !56, discriminator: 0)
!563 = distinct !DISubprogram(name: "min<usize>", linkageName: "_ZN4core3cmp3min17h502a406208017ef1E", scope: !38, file: !564, line: 1214, type: !565, scopeLine: 1214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !204, retainedNodes: !567)
!564 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "381f61764ec5ac4111e955260ff27c96")
!565 = !DISubroutineType(types: !566)
!566 = !{!9, !9, !9}
!567 = !{!561, !568}
!568 = !DILocalVariable(name: "v2", scope: !562, file: !56, line: 264, type: !9, align: 8)
!569 = !DILocation(line: 264, column: 19, scope: !562, inlinedAt: !570)
!570 = !DILocation(line: 264, column: 19, scope: !552)
!571 = !DILocation(line: 264, column: 35, scope: !552)
!572 = !DILocation(line: 264, column: 13, scope: !554)
!573 = !DILocation(line: 265, column: 15, scope: !554)
!574 = !DILocation(line: 265, column: 18, scope: !554)
!575 = !DILocation(line: 265, column: 9, scope: !554)
!576 = !DILocation(line: 266, column: 6, scope: !544)
!577 = !DILocation(line: 262, column: 5, scope: !544)
!578 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", linkageName: "_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17h737ceea019c6f944E", scope: !545, file: !56, line: 262, type: !579, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !110, retainedNodes: !581)
!579 = !DISubroutineType(types: !580)
!580 = !{!84, !87, !87}
!581 = !{!582, !583, !584, !586}
!582 = !DILocalVariable(name: "a", arg: 1, scope: !578, file: !56, line: 262, type: !87)
!583 = !DILocalVariable(name: "b", arg: 2, scope: !578, file: !56, line: 262, type: !87)
!584 = !DILocalVariable(name: "a_len", scope: !585, file: !56, line: 263, type: !9, align: 8)
!585 = distinct !DILexicalBlock(scope: !578, file: !56, line: 263, column: 9)
!586 = !DILocalVariable(name: "len", scope: !587, file: !56, line: 264, type: !9, align: 8)
!587 = distinct !DILexicalBlock(scope: !585, file: !56, line: 264, column: 9)
!588 = !DILocation(line: 262, column: 12, scope: !578)
!589 = !DILocation(line: 262, column: 18, scope: !578)
!590 = !DILocation(line: 263, column: 21, scope: !578)
!591 = !DILocation(line: 266, column: 5, scope: !578)
!592 = !DILocation(line: 263, column: 13, scope: !585)
!593 = !DILocation(line: 264, column: 28, scope: !585)
!594 = !DILocalVariable(name: "v1", scope: !595, file: !56, line: 264, type: !9, align: 8)
!595 = !DILexicalBlockFile(scope: !596, file: !56, discriminator: 0)
!596 = distinct !DISubprogram(name: "min<usize>", linkageName: "_ZN4core3cmp3min17h502a406208017ef1E", scope: !38, file: !564, line: 1214, type: !565, scopeLine: 1214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !204, retainedNodes: !597)
!597 = !{!594, !598}
!598 = !DILocalVariable(name: "v2", scope: !595, file: !56, line: 264, type: !9, align: 8)
!599 = !DILocation(line: 264, column: 19, scope: !595, inlinedAt: !600)
!600 = !DILocation(line: 264, column: 19, scope: !585)
!601 = !DILocation(line: 264, column: 35, scope: !585)
!602 = !DILocation(line: 264, column: 13, scope: !587)
!603 = !DILocation(line: 265, column: 15, scope: !587)
!604 = !DILocation(line: 265, column: 18, scope: !587)
!605 = !DILocation(line: 265, column: 9, scope: !587)
!606 = !DILocation(line: 266, column: 6, scope: !578)
!607 = !DILocation(line: 262, column: 5, scope: !578)
!608 = distinct !DISubprogram(name: "next<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", linkageName: "_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17h21390a2de8906e8eE", scope: !545, file: !56, line: 269, type: !61, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !110, retainedNodes: !609)
!609 = !{!610, !611, !613}
!610 = !DILocalVariable(name: "self", arg: 1, scope: !608, file: !56, line: 269, type: !83)
!611 = !DILocalVariable(name: "i", scope: !612, file: !56, line: 271, type: !9, align: 8)
!612 = distinct !DILexicalBlock(scope: !608, file: !56, line: 271, column: 13)
!613 = !DILocalVariable(name: "i", scope: !614, file: !56, line: 280, type: !9, align: 8)
!614 = distinct !DILexicalBlock(scope: !608, file: !56, line: 280, column: 13)
!615 = !DILocation(line: 269, column: 13, scope: !608)
!616 = !DILocation(line: 270, column: 12, scope: !608)
!617 = !DILocation(line: 270, column: 25, scope: !608)
!618 = !DILocation(line: 279, column: 19, scope: !608)
!619 = !DILocation(line: 271, column: 21, scope: !608)
!620 = !DILocation(line: 271, column: 17, scope: !612)
!621 = !DILocation(line: 274, column: 13, scope: !612)
!622 = !DILocation(line: 277, column: 23, scope: !612)
!623 = !DILocation(line: 277, column: 59, scope: !612)
!624 = !DILocation(line: 277, column: 93, scope: !612)
!625 = !DILocation(line: 277, column: 22, scope: !612)
!626 = !DILocation(line: 277, column: 17, scope: !612)
!627 = !{i64 1}
!628 = !DILocation(line: 270, column: 9, scope: !608)
!629 = !DILocation(line: 269, column: 5, scope: !608)
!630 = !DILocation(line: 293, column: 6, scope: !608)
!631 = !DILocation(line: 279, column: 46, scope: !608)
!632 = !DILocation(line: 279, column: 59, scope: !608)
!633 = !DILocation(line: 291, column: 13, scope: !608)
!634 = !DILocation(line: 279, column: 16, scope: !608)
!635 = !DILocation(line: 280, column: 21, scope: !608)
!636 = !DILocation(line: 280, column: 17, scope: !614)
!637 = !DILocation(line: 282, column: 13, scope: !614)
!638 = !DILocation(line: 283, column: 13, scope: !614)
!639 = !DILocation(line: 287, column: 17, scope: !614)
!640 = !DILocation(line: 287, column: 51, scope: !614)
!641 = !DILocation(line: 289, column: 13, scope: !614)
!642 = distinct !DISubprogram(name: "next<core::str::iter::Bytes, core::str::iter::Bytes>", linkageName: "_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17h2465c73547f4a034E", scope: !545, file: !56, line: 269, type: !119, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !157, retainedNodes: !643)
!643 = !{!644, !645, !647}
!644 = !DILocalVariable(name: "self", arg: 1, scope: !642, file: !56, line: 269, type: !138)
!645 = !DILocalVariable(name: "i", scope: !646, file: !56, line: 271, type: !9, align: 8)
!646 = distinct !DILexicalBlock(scope: !642, file: !56, line: 271, column: 13)
!647 = !DILocalVariable(name: "i", scope: !648, file: !56, line: 280, type: !9, align: 8)
!648 = distinct !DILexicalBlock(scope: !642, file: !56, line: 280, column: 13)
!649 = !DILocation(line: 269, column: 13, scope: !642)
!650 = !DILocation(line: 270, column: 12, scope: !642)
!651 = !DILocation(line: 270, column: 25, scope: !642)
!652 = !DILocation(line: 279, column: 19, scope: !642)
!653 = !DILocation(line: 271, column: 21, scope: !642)
!654 = !DILocation(line: 271, column: 17, scope: !646)
!655 = !DILocation(line: 274, column: 13, scope: !646)
!656 = !DILocation(line: 277, column: 23, scope: !646)
!657 = !DILocation(line: 277, column: 59, scope: !646)
!658 = !DILocation(line: 277, column: 93, scope: !646)
!659 = !DILocation(line: 277, column: 22, scope: !646)
!660 = !DILocation(line: 277, column: 17, scope: !646)
!661 = !DILocation(line: 270, column: 9, scope: !642)
!662 = !DILocation(line: 269, column: 5, scope: !642)
!663 = !DILocation(line: 293, column: 6, scope: !642)
!664 = !DILocation(line: 279, column: 46, scope: !642)
!665 = !DILocation(line: 279, column: 59, scope: !642)
!666 = !DILocation(line: 291, column: 13, scope: !642)
!667 = !DILocation(line: 279, column: 16, scope: !642)
!668 = !DILocation(line: 280, column: 21, scope: !642)
!669 = !DILocation(line: 280, column: 17, scope: !648)
!670 = !DILocation(line: 282, column: 13, scope: !648)
!671 = !DILocation(line: 283, column: 13, scope: !648)
!672 = !DILocation(line: 287, column: 17, scope: !648)
!673 = !DILocation(line: 287, column: 51, scope: !648)
!674 = !DILocation(line: 289, column: 13, scope: !648)
!675 = distinct !DISubprogram(name: "powi", linkageName: "_ZN3std3f3221_$LT$impl$u20$f32$GT$4powi17hb7e08f9d89fee4c8E", scope: !677, file: !676, line: 319, type: !680, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !684)
!676 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/f32.rs", directory: "", checksumkind: CSK_MD5, checksum: "8354f9c2d3aede3197eba7e9a5600f72")
!677 = !DINamespace(name: "{impl#0}", scope: !678)
!678 = !DINamespace(name: "f32", scope: !679)
!679 = !DINamespace(name: "std", scope: null)
!680 = !DISubroutineType(types: !681)
!681 = !{!682, !682, !683}
!682 = !DIBasicType(name: "f32", size: 32, encoding: DW_ATE_float)
!683 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!684 = !{!685, !686}
!685 = !DILocalVariable(name: "self", arg: 1, scope: !675, file: !676, line: 319, type: !682)
!686 = !DILocalVariable(name: "n", arg: 2, scope: !675, file: !676, line: 319, type: !683)
!687 = !DILocation(line: 319, column: 17, scope: !675)
!688 = !DILocation(line: 319, column: 23, scope: !675)
!689 = !DILocation(line: 320, column: 18, scope: !675)
!690 = !DILocation(line: 321, column: 6, scope: !675)
!691 = distinct !DISubprogram(name: "powi", linkageName: "_ZN3std3f6421_$LT$impl$u20$f64$GT$4powi17h7a90dd3638f61957E", scope: !693, file: !692, line: 319, type: !695, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !698)
!692 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/f64.rs", directory: "", checksumkind: CSK_MD5, checksum: "1ebe4a0e4797d7073808ccec50216f91")
!693 = !DINamespace(name: "{impl#0}", scope: !694)
!694 = !DINamespace(name: "f64", scope: !679)
!695 = !DISubroutineType(types: !696)
!696 = !{!697, !697, !683}
!697 = !DIBasicType(name: "f64", size: 64, encoding: DW_ATE_float)
!698 = !{!699, !700}
!699 = !DILocalVariable(name: "self", arg: 1, scope: !691, file: !692, line: 319, type: !697)
!700 = !DILocalVariable(name: "n", arg: 2, scope: !691, file: !692, line: 319, type: !683)
!701 = !DILocation(line: 319, column: 17, scope: !691)
!702 = !DILocation(line: 319, column: 23, scope: !691)
!703 = !DILocation(line: 320, column: 18, scope: !691)
!704 = !DILocation(line: 321, column: 6, scope: !691)
!705 = distinct !DISubprogram(name: "fmt<num_traits::FloatErrorKind>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8581425018b943f1E", scope: !707, file: !706, line: 2361, type: !708, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !751, retainedNodes: !748)
!706 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "18dcc19de419985ae78d2bd8ed07e5dc")
!707 = !DINamespace(name: "{impl#59}", scope: !30)
!708 = !DISubroutineType(types: !709)
!709 = !{!710, !728, !729}
!710 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !711, file: !2, size: 8, align: 8, elements: !712, templateParams: !19, identifier: "d239d58a8e95223cd52e3ad2c36d40d7")
!711 = !DINamespace(name: "result", scope: !31)
!712 = !{!713}
!713 = !DICompositeType(tag: DW_TAG_variant_part, scope: !710, file: !2, size: 8, align: 8, elements: !714, templateParams: !19, identifier: "1fa2591b965a13cd50e38802b1727ca", discriminator: !727)
!714 = !{!715, !723}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !713, file: !2, baseType: !716, size: 8, align: 8, extraData: i64 0)
!716 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !710, file: !2, size: 8, align: 8, elements: !717, templateParams: !719, identifier: "cea751326735c343faf647063a65ad14")
!717 = !{!718}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !716, file: !2, baseType: !7, align: 8, offset: 8)
!719 = !{!720, !721}
!720 = !DITemplateTypeParameter(name: "T", type: !7)
!721 = !DITemplateTypeParameter(name: "E", type: !722)
!722 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !30, file: !2, align: 8, elements: !19, identifier: "87e319c059f1d372f32b0a49f33ec3cc")
!723 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !713, file: !2, baseType: !724, size: 8, align: 8, extraData: i64 1)
!724 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !710, file: !2, size: 8, align: 8, elements: !725, templateParams: !719, identifier: "6c6eb84ed910506586b60ba90dbaa2c")
!725 = !{!726}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !724, file: !2, baseType: !722, align: 8, offset: 8)
!727 = !DIDerivedType(tag: DW_TAG_member, scope: !710, file: !2, baseType: !15, size: 8, align: 8, flags: DIFlagArtificial)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&num_traits::FloatErrorKind", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !730, size: 64, align: 64, dwarfAddressSpace: 0)
!730 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !30, file: !2, size: 512, align: 64, elements: !731, templateParams: !19, identifier: "6e9ffaec9b89ebb810272bb66e7b2042")
!731 = !{!732, !733, !734, !735, !736, !737}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !730, file: !2, baseType: !391, size: 32, align: 32, offset: 384)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !730, file: !2, baseType: !385, size: 32, align: 32, offset: 416)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !730, file: !2, baseType: !27, size: 8, align: 8, offset: 448)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !730, file: !2, baseType: !198, size: 128, align: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !730, file: !2, baseType: !198, size: 128, align: 64, offset: 128)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !730, file: !2, baseType: !738, size: 128, align: 64, offset: 256)
!738 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !739, templateParams: !19, identifier: "3d4f80cd5361aaff4f795dd09efb8db1")
!739 = !{!740, !743}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !738, file: !2, baseType: !741, size: 64, align: 64)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64, align: 64, dwarfAddressSpace: 0)
!742 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !19, identifier: "abb712b259efc5e79bb67900edf24920")
!743 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !738, file: !2, baseType: !744, size: 64, align: 64, offset: 64)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !745, size: 64, align: 64, dwarfAddressSpace: 0)
!745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 64, elements: !746)
!746 = !{!747}
!747 = !DISubrange(count: 3, lowerBound: 0)
!748 = !{!749, !750}
!749 = !DILocalVariable(name: "self", arg: 1, scope: !705, file: !706, line: 2361, type: !728)
!750 = !DILocalVariable(name: "f", arg: 2, scope: !705, file: !706, line: 2361, type: !729)
!751 = !{!752}
!752 = !DITemplateTypeParameter(name: "T", type: !13)
!753 = !DILocation(line: 2361, column: 20, scope: !705)
!754 = !DILocation(line: 2361, column: 27, scope: !705)
!755 = !DILocation(line: 2361, column: 71, scope: !705)
!756 = !DILocation(line: 2361, column: 62, scope: !705)
!757 = !DILocation(line: 2361, column: 84, scope: !705)
!758 = distinct !DISubprogram(name: "div", linkageName: "_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Div$GT$3div17h486d2693cf3cae96E", scope: !760, file: !759, line: 520, type: !762, scopeLine: 520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !764)
!759 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ops/arith.rs", directory: "", checksumkind: CSK_MD5, checksum: "57699c352beef63103a9f45527b1cedb")
!760 = !DINamespace(name: "{impl#216}", scope: !761)
!761 = !DINamespace(name: "arith", scope: !221)
!762 = !DISubroutineType(types: !763)
!763 = !{!682, !682, !682}
!764 = !{!765, !766}
!765 = !DILocalVariable(name: "self", arg: 1, scope: !758, file: !759, line: 520, type: !682)
!766 = !DILocalVariable(name: "other", arg: 2, scope: !758, file: !759, line: 520, type: !682)
!767 = !DILocation(line: 520, column: 20, scope: !758)
!768 = !DILocation(line: 520, column: 26, scope: !758)
!769 = !DILocation(line: 520, column: 45, scope: !758)
!770 = !DILocation(line: 520, column: 59, scope: !758)
!771 = distinct !DISubprogram(name: "mul", linkageName: "_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Mul$GT$3mul17h76b1e3c0dcee3a2eE", scope: !772, file: !759, line: 362, type: !762, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !773)
!772 = !DINamespace(name: "{impl#124}", scope: !761)
!773 = !{!774, !775}
!774 = !DILocalVariable(name: "self", arg: 1, scope: !771, file: !759, line: 362, type: !682)
!775 = !DILocalVariable(name: "other", arg: 2, scope: !771, file: !759, line: 362, type: !682)
!776 = !DILocation(line: 362, column: 20, scope: !771)
!777 = !DILocation(line: 362, column: 26, scope: !771)
!778 = !DILocation(line: 362, column: 45, scope: !771)
!779 = !DILocation(line: 362, column: 59, scope: !771)
!780 = distinct !DISubprogram(name: "neg", linkageName: "_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Neg$GT$3neg17hf2d7af8905ae0e44E", scope: !781, file: !759, line: 712, type: !782, scopeLine: 712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !784)
!781 = !DINamespace(name: "{impl#286}", scope: !761)
!782 = !DISubroutineType(types: !783)
!783 = !{!682, !682}
!784 = !{!785}
!785 = !DILocalVariable(name: "self", arg: 1, scope: !780, file: !759, line: 712, type: !682)
!786 = !DILocation(line: 712, column: 20, scope: !780)
!787 = !DILocation(line: 712, column: 34, scope: !780)
!788 = !DILocation(line: 712, column: 41, scope: !780)
!789 = distinct !DISubprogram(name: "div", linkageName: "_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Div$GT$3div17h51eab12971dd6ab7E", scope: !790, file: !759, line: 520, type: !791, scopeLine: 520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !793)
!790 = !DINamespace(name: "{impl#217}", scope: !761)
!791 = !DISubroutineType(types: !792)
!792 = !{!697, !697, !697}
!793 = !{!794, !795}
!794 = !DILocalVariable(name: "self", arg: 1, scope: !789, file: !759, line: 520, type: !697)
!795 = !DILocalVariable(name: "other", arg: 2, scope: !789, file: !759, line: 520, type: !697)
!796 = !DILocation(line: 520, column: 20, scope: !789)
!797 = !DILocation(line: 520, column: 26, scope: !789)
!798 = !DILocation(line: 520, column: 45, scope: !789)
!799 = !DILocation(line: 520, column: 59, scope: !789)
!800 = distinct !DISubprogram(name: "mul", linkageName: "_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Mul$GT$3mul17h9b80d3a4e27ba66bE", scope: !801, file: !759, line: 362, type: !791, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !802)
!801 = !DINamespace(name: "{impl#125}", scope: !761)
!802 = !{!803, !804}
!803 = !DILocalVariable(name: "self", arg: 1, scope: !800, file: !759, line: 362, type: !697)
!804 = !DILocalVariable(name: "other", arg: 2, scope: !800, file: !759, line: 362, type: !697)
!805 = !DILocation(line: 362, column: 20, scope: !800)
!806 = !DILocation(line: 362, column: 26, scope: !800)
!807 = !DILocation(line: 362, column: 45, scope: !800)
!808 = !DILocation(line: 362, column: 59, scope: !800)
!809 = distinct !DISubprogram(name: "neg", linkageName: "_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Neg$GT$3neg17h2916e189c8f22844E", scope: !810, file: !759, line: 712, type: !811, scopeLine: 712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !813)
!810 = !DINamespace(name: "{impl#287}", scope: !761)
!811 = !DISubroutineType(types: !812)
!812 = !{!697, !697}
!813 = !{!814}
!814 = !DILocalVariable(name: "self", arg: 1, scope: !809, file: !759, line: 712, type: !697)
!815 = !DILocation(line: 712, column: 20, scope: !809)
!816 = !DILocation(line: 712, column: 34, scope: !809)
!817 = !DILocation(line: 712, column: 41, scope: !809)
!818 = distinct !DISubprogram(name: "const_eval_select<(f32), fn(f32) -> u32, core::f32::{impl#0}::to_bits::{closure_env#0}, u32>", linkageName: "_ZN4core10intrinsics17const_eval_select17h6441fb96c40482f1E", scope: !819, file: !291, line: 2687, type: !820, scopeLine: 2687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !836, retainedNodes: !832)
!819 = !DINamespace(name: "intrinsics", scope: !31)
!820 = !DISubroutineType(types: !821)
!821 = !{!391, !822, !825, !828}
!822 = !DICompositeType(tag: DW_TAG_structure_type, name: "(f32)", file: !2, size: 32, align: 32, elements: !823, templateParams: !19, identifier: "27758afe5dfa6afca4fb3c739674865e")
!823 = !{!824}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !822, file: !2, baseType: !682, size: 32, align: 32)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(f32) -> u32", baseType: !826, size: 64, align: 64, dwarfAddressSpace: 0)
!826 = !DISubroutineType(types: !827)
!827 = !{!391, !682}
!828 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !829, file: !2, align: 8, elements: !19, identifier: "5d36ead150316cec42ce8337b8bbbd48")
!829 = !DINamespace(name: "to_bits", scope: !830)
!830 = !DINamespace(name: "{impl#0}", scope: !831)
!831 = !DINamespace(name: "f32", scope: !31)
!832 = !{!833, !834, !835}
!833 = !DILocalVariable(name: "arg", arg: 1, scope: !818, file: !291, line: 2688, type: !822)
!834 = !DILocalVariable(name: "_called_in_const", arg: 2, scope: !818, file: !291, line: 2689, type: !825)
!835 = !DILocalVariable(name: "called_at_rt", arg: 3, scope: !818, file: !291, line: 2690, type: !828)
!836 = !{!837, !838, !839, !840}
!837 = !DITemplateTypeParameter(name: "ARG", type: !822)
!838 = !DITemplateTypeParameter(name: "F", type: !825)
!839 = !DITemplateTypeParameter(name: "G", type: !828)
!840 = !DITemplateTypeParameter(name: "RET", type: !391)
!841 = !DILocation(line: 2688, column: 5, scope: !818)
!842 = !DILocation(line: 2689, column: 5, scope: !818)
!843 = !DILocation(line: 2690, column: 5, scope: !818)
!844 = !DILocation(line: 2696, column: 5, scope: !818)
!845 = !DILocation(line: 2697, column: 1, scope: !818)
!846 = !DILocation(line: 2687, column: 1, scope: !818)
!847 = !DILocation(line: 2697, column: 2, scope: !818)
!848 = distinct !DISubprogram(name: "const_eval_select<(f64), fn(f64) -> u64, core::f64::{impl#0}::to_bits::{closure_env#0}, u64>", linkageName: "_ZN4core10intrinsics17const_eval_select17ha6458f317d7f2ac2E", scope: !819, file: !291, line: 2687, type: !849, scopeLine: 2687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !865, retainedNodes: !861)
!849 = !DISubroutineType(types: !850)
!850 = !{!82, !851, !854, !857}
!851 = !DICompositeType(tag: DW_TAG_structure_type, name: "(f64)", file: !2, size: 64, align: 64, elements: !852, templateParams: !19, identifier: "22e473b8b7f40d391a5b33657257437a")
!852 = !{!853}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !851, file: !2, baseType: !697, size: 64, align: 64)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(f64) -> u64", baseType: !855, size: 64, align: 64, dwarfAddressSpace: 0)
!855 = !DISubroutineType(types: !856)
!856 = !{!82, !697}
!857 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !858, file: !2, align: 8, elements: !19, identifier: "cd36e4a6cd755e48e5a81afd72b773d")
!858 = !DINamespace(name: "to_bits", scope: !859)
!859 = !DINamespace(name: "{impl#0}", scope: !860)
!860 = !DINamespace(name: "f64", scope: !31)
!861 = !{!862, !863, !864}
!862 = !DILocalVariable(name: "arg", arg: 1, scope: !848, file: !291, line: 2688, type: !851)
!863 = !DILocalVariable(name: "_called_in_const", arg: 2, scope: !848, file: !291, line: 2689, type: !854)
!864 = !DILocalVariable(name: "called_at_rt", arg: 3, scope: !848, file: !291, line: 2690, type: !857)
!865 = !{!866, !867, !868, !869}
!866 = !DITemplateTypeParameter(name: "ARG", type: !851)
!867 = !DITemplateTypeParameter(name: "F", type: !854)
!868 = !DITemplateTypeParameter(name: "G", type: !857)
!869 = !DITemplateTypeParameter(name: "RET", type: !82)
!870 = !DILocation(line: 2688, column: 5, scope: !848)
!871 = !DILocation(line: 2689, column: 5, scope: !848)
!872 = !DILocation(line: 2690, column: 5, scope: !848)
!873 = !DILocation(line: 2696, column: 5, scope: !848)
!874 = !DILocation(line: 2697, column: 1, scope: !848)
!875 = !DILocation(line: 2687, column: 1, scope: !848)
!876 = !DILocation(line: 2697, column: 2, scope: !848)
!877 = distinct !DISubprogram(name: "min<usize>", linkageName: "_ZN4core3cmp3Ord3min17hcb69de752336567cE", scope: !878, file: !564, line: 827, type: !565, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !882, retainedNodes: !879)
!878 = !DINamespace(name: "Ord", scope: !38)
!879 = !{!880, !881}
!880 = !DILocalVariable(name: "self", arg: 1, scope: !877, file: !564, line: 827, type: !9)
!881 = !DILocalVariable(name: "other", arg: 2, scope: !877, file: !564, line: 827, type: !9)
!882 = !{!883}
!883 = !DITemplateTypeParameter(name: "Self", type: !9)
!884 = !DILocation(line: 827, column: 12, scope: !877)
!885 = !DILocation(line: 827, column: 18, scope: !877)
!886 = !DILocation(line: 835, column: 15, scope: !877)
!887 = !{i8 -1, i8 2}
!888 = !DILocation(line: 839, column: 5, scope: !877)
!889 = !DILocation(line: 835, column: 9, scope: !877)
!890 = !DILocation(line: 836, column: 49, scope: !877)
!891 = !DILocation(line: 837, column: 34, scope: !877)
!892 = !DILocation(line: 827, column: 5, scope: !877)
!893 = !DILocation(line: 839, column: 6, scope: !877)
!894 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17heff2ceaf2d9ed1e3E", scope: !895, file: !564, line: 1436, type: !897, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !899)
!895 = !DINamespace(name: "{impl#55}", scope: !896)
!896 = !DINamespace(name: "impls", scope: !38)
!897 = !DISubroutineType(types: !898)
!898 = !{!37, !296, !296}
!899 = !{!900, !901}
!900 = !DILocalVariable(name: "self", arg: 1, scope: !894, file: !564, line: 1436, type: !296)
!901 = !DILocalVariable(name: "other", arg: 2, scope: !894, file: !564, line: 1436, type: !296)
!902 = !DILocation(line: 1436, column: 24, scope: !894)
!903 = !DILocation(line: 1436, column: 31, scope: !894)
!904 = !DILocation(line: 1439, column: 24, scope: !894)
!905 = !DILocation(line: 1439, column: 32, scope: !894)
!906 = !DILocation(line: 1440, column: 29, scope: !894)
!907 = !DILocation(line: 1440, column: 38, scope: !894)
!908 = !DILocation(line: 1439, column: 41, scope: !894)
!909 = !DILocation(line: 1439, column: 21, scope: !894)
!910 = !DILocation(line: 1442, column: 18, scope: !894)
!911 = !DILocation(line: 1441, column: 28, scope: !894)
!912 = !DILocation(line: 1440, column: 26, scope: !894)
!913 = !DILocation(line: 1440, column: 47, scope: !894)
!914 = distinct !DISubprogram(name: "eq", linkageName: "_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17hedefb1bc4fc3afaaE", scope: !915, file: !564, line: 1345, type: !916, scopeLine: 1345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !920)
!915 = !DINamespace(name: "{impl#0}", scope: !896)
!916 = !DISubroutineType(types: !917)
!917 = !{!918, !919, !919}
!918 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!920 = !{!921, !922}
!921 = !DILocalVariable(name: "self", arg: 1, scope: !914, file: !564, line: 1345, type: !919)
!922 = !DILocalVariable(name: "_other", arg: 2, scope: !914, file: !564, line: 1345, type: !919)
!923 = !DILocation(line: 1345, column: 15, scope: !914)
!924 = !DILocation(line: 1345, column: 22, scope: !914)
!925 = !DILocation(line: 1347, column: 10, scope: !914)
!926 = distinct !DISubprogram(name: "to_bits", linkageName: "_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17hf9f914d93b7e51c5E", scope: !830, file: !927, line: 898, type: !826, scopeLine: 898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !928)
!927 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/f32.rs", directory: "", checksumkind: CSK_MD5, checksum: "ccf44360ac9c21a495b8807c65ce68a7")
!928 = !{!929, !930}
!929 = !DILocalVariable(name: "self", arg: 1, scope: !926, file: !927, line: 898, type: !682)
!930 = !DILocalVariable(name: "rt_f32_to_u32", scope: !931, file: !927, line: 939, type: !828, align: 1)
!931 = distinct !DILexicalBlock(scope: !926, file: !927, line: 939, column: 9)
!932 = !DILocation(line: 898, column: 26, scope: !926)
!933 = !DILocation(line: 939, column: 13, scope: !931)
!934 = !DILocation(line: 941, column: 48, scope: !931)
!935 = !DILocation(line: 941, column: 18, scope: !931)
!936 = !DILocation(line: 942, column: 6, scope: !926)
!937 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits28_$u7b$$u7b$closure$u7d$$u7d$17h12ec8e0264003088E", scope: !829, file: !927, line: 939, type: !938, scopeLine: 939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !941)
!938 = !DISubroutineType(types: !939)
!939 = !{!391, !940, !682}
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::f32::{impl#0}::to_bits::{closure_env#0}", baseType: !828, size: 64, align: 64, dwarfAddressSpace: 0)
!941 = !{!942, !943}
!942 = !DILocalVariable(name: "rt", arg: 2, scope: !937, file: !927, line: 939, type: !682)
!943 = !DILocalVariable(arg: 1, scope: !937, file: !927, line: 939, type: !940)
!944 = !DILocation(line: 939, column: 29, scope: !937)
!945 = !DILocation(line: 939, column: 30, scope: !937)
!946 = !DILocation(line: 939, column: 43, scope: !937)
!947 = !DILocation(line: 939, column: 33, scope: !937)
!948 = distinct !DISubprogram(name: "to_bits", linkageName: "_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17h62495e472a5a58ecE", scope: !859, file: !949, line: 909, type: !855, scopeLine: 909, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !950)
!949 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/f64.rs", directory: "", checksumkind: CSK_MD5, checksum: "e2b52eb31f8d459cd2ccd4148f4457c9")
!950 = !{!951, !952}
!951 = !DILocalVariable(name: "self", arg: 1, scope: !948, file: !949, line: 909, type: !697)
!952 = !DILocalVariable(name: "rt_f64_to_u64", scope: !953, file: !949, line: 932, type: !857, align: 1)
!953 = distinct !DILexicalBlock(scope: !948, file: !949, line: 932, column: 9)
!954 = !DILocation(line: 909, column: 26, scope: !948)
!955 = !DILocation(line: 932, column: 13, scope: !953)
!956 = !DILocation(line: 934, column: 48, scope: !953)
!957 = !DILocation(line: 934, column: 18, scope: !953)
!958 = !DILocation(line: 935, column: 6, scope: !948)
!959 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits28_$u7b$$u7b$closure$u7d$$u7d$17hce21388d0321e24aE", scope: !858, file: !949, line: 932, type: !960, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !963)
!960 = !DISubroutineType(types: !961)
!961 = !{!82, !962, !697}
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::f64::{impl#0}::to_bits::{closure_env#0}", baseType: !857, size: 64, align: 64, dwarfAddressSpace: 0)
!963 = !{!964, !965}
!964 = !DILocalVariable(name: "rt", arg: 2, scope: !959, file: !949, line: 932, type: !697)
!965 = !DILocalVariable(arg: 1, scope: !959, file: !949, line: 932, type: !962)
!966 = !DILocation(line: 932, column: 29, scope: !959)
!967 = !DILocation(line: 932, column: 30, scope: !959)
!968 = !DILocation(line: 932, column: 43, scope: !959)
!969 = !DILocation(line: 932, column: 33, scope: !959)
!970 = distinct !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117h97872f408723ca1bE", scope: !971, file: !706, line: 390, type: !1040, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !1042)
!971 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !30, file: !2, size: 384, align: 64, elements: !972, templateParams: !19, identifier: "7e7034295abae01651800c8eb0e9b712")
!972 = !{!973, !979, !1024}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !971, file: !2, baseType: !974, size: 128, align: 64)
!974 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !975, templateParams: !19, identifier: "120d786d314e2730a5f45c5e7e56f7d")
!975 = !{!976, !978}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !974, file: !2, baseType: !977, size: 64, align: 64)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64, align: 64, dwarfAddressSpace: 0)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !974, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !971, file: !2, baseType: !980, size: 128, align: 64, offset: 128)
!980 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::v1::Argument]>", scope: !64, file: !2, size: 128, align: 64, elements: !981, templateParams: !19, identifier: "bb69cbb99024f47dbb54317ba8130317")
!981 = !{!982}
!982 = !DICompositeType(tag: DW_TAG_variant_part, scope: !980, file: !2, size: 128, align: 64, elements: !983, templateParams: !19, identifier: "ce02297fe7dbf35f547cc88f131a39b4", discriminator: !1023)
!983 = !{!984, !1019}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !982, file: !2, baseType: !985, size: 128, align: 64, extraData: i64 0)
!985 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !980, file: !2, size: 128, align: 64, elements: !19, templateParams: !986, identifier: "742dbe7e160661d8ca36fcfff2574850")
!986 = !{!987}
!987 = !DITemplateTypeParameter(name: "T", type: !988)
!988 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::v1::Argument]", file: !2, size: 128, align: 64, elements: !989, templateParams: !19, identifier: "5ac19a4b2fedc0a38075c82d3d698a2e")
!989 = !{!990, !1018}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !988, file: !2, baseType: !991, size: 64, align: 64)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64, align: 64, dwarfAddressSpace: 0)
!992 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !28, file: !2, size: 448, align: 64, elements: !993, templateParams: !19, identifier: "fbba22b504f631aebebe5f9a731b4661")
!993 = !{!994, !995}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !992, file: !2, baseType: !9, size: 64, align: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !992, file: !2, baseType: !996, size: 384, align: 64, offset: 64)
!996 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormatSpec", scope: !28, file: !2, size: 384, align: 64, elements: !997, templateParams: !19, identifier: "a89ae7a13a1def66296bab98052f520a")
!997 = !{!998, !999, !1000, !1001, !1017}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !996, file: !2, baseType: !385, size: 32, align: 32, offset: 256)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !996, file: !2, baseType: !27, size: 8, align: 8, offset: 320)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !996, file: !2, baseType: !391, size: 32, align: 32, offset: 288)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !996, file: !2, baseType: !1002, size: 128, align: 64)
!1002 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !28, file: !2, size: 128, align: 64, elements: !1003, templateParams: !19, identifier: "41c6e2a1db95b605a371a090678c1fd8")
!1003 = !{!1004}
!1004 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1002, file: !2, size: 128, align: 64, elements: !1005, templateParams: !19, identifier: "eff7cdccebc4ba23639a28669cbce86", discriminator: !1016)
!1005 = !{!1006, !1010, !1014}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !1004, file: !2, baseType: !1007, size: 128, align: 64, extraData: i64 0)
!1007 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !1002, file: !2, size: 128, align: 64, elements: !1008, templateParams: !19, identifier: "927d86c22d9994b767e51a58b20493")
!1008 = !{!1009}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1007, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !1004, file: !2, baseType: !1011, size: 128, align: 64, extraData: i64 1)
!1011 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !1002, file: !2, size: 128, align: 64, elements: !1012, templateParams: !19, identifier: "ce4b8bb3a4200a86c4c06a7570d8ee71")
!1012 = !{!1013}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1011, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !1004, file: !2, baseType: !1015, size: 128, align: 64, extraData: i64 2)
!1015 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !1002, file: !2, size: 128, align: 64, elements: !19, identifier: "b155566b9bd0239ef48aa3b8bcdef75b")
!1016 = !DIDerivedType(tag: DW_TAG_member, scope: !1002, file: !2, baseType: !82, size: 64, align: 64, flags: DIFlagArtificial)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !996, file: !2, baseType: !1002, size: 128, align: 64, offset: 128)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !988, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !982, file: !2, baseType: !1020, size: 128, align: 64)
!1020 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !980, file: !2, size: 128, align: 64, elements: !1021, templateParams: !986, identifier: "17f2fc106094349c7673abca4839c97a")
!1021 = !{!1022}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1020, file: !2, baseType: !988, size: 128, align: 64)
!1023 = !DIDerivedType(tag: DW_TAG_member, scope: !980, file: !2, baseType: !82, size: 64, align: 64, flags: DIFlagArtificial)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !971, file: !2, baseType: !1025, size: 128, align: 64, offset: 256)
!1025 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::ArgumentV1]", file: !2, size: 128, align: 64, elements: !1026, templateParams: !19, identifier: "c78588d5439c4eaa18fbaab99f079cbf")
!1026 = !{!1027, !1039}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1025, file: !2, baseType: !1028, size: 64, align: 64)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64, align: 64, dwarfAddressSpace: 0)
!1029 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArgumentV1", scope: !30, file: !2, size: 128, align: 64, elements: !1030, templateParams: !19, identifier: "753c369e46bf484710f4d769a3fba395")
!1030 = !{!1031, !1035}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1029, file: !2, baseType: !1032, size: 64, align: 64)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::{extern#0}::Opaque", baseType: !1033, size: 64, align: 64, dwarfAddressSpace: 0)
!1033 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", scope: !1034, file: !2, align: 8, elements: !19, identifier: "83e8d27b51d2e55ae9422e57e00c6cd7")
!1034 = !DINamespace(name: "{extern#0}", scope: !30)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !1029, file: !2, baseType: !1036, size: 64, align: 64, offset: 64)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::{extern#0}::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !1037, size: 64, align: 64, dwarfAddressSpace: 0)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!710, !1032, !729}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1025, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{!971, !974, !1025}
!1042 = !{!1043, !1044}
!1043 = !DILocalVariable(name: "pieces", arg: 1, scope: !970, file: !706, line: 390, type: !974)
!1044 = !DILocalVariable(name: "args", arg: 2, scope: !970, file: !706, line: 390, type: !1025)
!1045 = !DILocation(line: 390, column: 25, scope: !970)
!1046 = !DILocation(line: 390, column: 53, scope: !970)
!1047 = !DILocation(line: 391, column: 12, scope: !970)
!1048 = !DILocation(line: 391, column: 56, scope: !970)
!1049 = !DILocation(line: 391, column: 41, scope: !970)
!1050 = !DILocation(line: 394, column: 34, scope: !970)
!1051 = !DILocation(line: 394, column: 9, scope: !970)
!1052 = !{i64 8}
!1053 = !DILocation(line: 395, column: 6, scope: !970)
!1054 = !DILocation(line: 392, column: 13, scope: !970)
!1055 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_mul17h0a8d9e77c5cdaf25E", scope: !1057, file: !1056, line: 555, type: !1058, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !1073)
!1056 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "510cfe98475d713af9de72a29146058c")
!1057 = !DINamespace(name: "{impl#9}", scope: !46)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!1060, !82, !82}
!1060 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u64>", scope: !64, file: !2, size: 128, align: 64, elements: !1061, templateParams: !19, identifier: "16e153c2fe52db6a1dfc345930bd0217")
!1061 = !{!1062}
!1062 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1060, file: !2, size: 128, align: 64, elements: !1063, templateParams: !19, identifier: "b3956402942b10598bd4a19f6c646804", discriminator: !1072)
!1063 = !{!1064, !1068}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1062, file: !2, baseType: !1065, size: 128, align: 64, extraData: i64 0)
!1065 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1060, file: !2, size: 128, align: 64, elements: !19, templateParams: !1066, identifier: "e1b9c0ac5f4b9eb1b4dff91b1fcb2bb3")
!1066 = !{!1067}
!1067 = !DITemplateTypeParameter(name: "T", type: !82)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1062, file: !2, baseType: !1069, size: 128, align: 64, extraData: i64 1)
!1069 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1060, file: !2, size: 128, align: 64, elements: !1070, templateParams: !1066, identifier: "aa0e85c23318717771faa5f022ef9a7a")
!1070 = !{!1071}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1069, file: !2, baseType: !82, size: 64, align: 64, offset: 64)
!1072 = !DIDerivedType(tag: DW_TAG_member, scope: !1060, file: !2, baseType: !82, size: 64, align: 64, flags: DIFlagArtificial)
!1073 = !{!1074, !1075, !1076, !1078}
!1074 = !DILocalVariable(name: "self", arg: 1, scope: !1055, file: !1056, line: 555, type: !82)
!1075 = !DILocalVariable(name: "rhs", arg: 2, scope: !1055, file: !1056, line: 555, type: !82)
!1076 = !DILocalVariable(name: "a", scope: !1077, file: !1056, line: 556, type: !82, align: 8)
!1077 = distinct !DILexicalBlock(scope: !1055, file: !1056, line: 556, column: 13)
!1078 = !DILocalVariable(name: "b", scope: !1077, file: !1056, line: 556, type: !918, align: 1)
!1079 = !DILocation(line: 555, column: 34, scope: !1055)
!1080 = !DILocation(line: 555, column: 40, scope: !1055)
!1081 = !DILocation(line: 556, column: 26, scope: !1055)
!1082 = !DILocalVariable(name: "self", scope: !1083, file: !1056, line: 556, type: !82, align: 8)
!1083 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$15overflowing_mul17hb4eaab77c9b14f9cE", scope: !1057, file: !1056, line: 1688, type: !1084, scopeLine: 1688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !1090)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!1086, !82, !82}
!1086 = !DICompositeType(tag: DW_TAG_structure_type, name: "(u64, bool)", file: !2, size: 128, align: 64, elements: !1087, templateParams: !19, identifier: "41569ce39efaaec25cba2044cb83cdd2")
!1087 = !{!1088, !1089}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1086, file: !2, baseType: !82, size: 64, align: 64)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1086, file: !2, baseType: !918, size: 8, align: 8, offset: 64)
!1090 = !{!1082, !1091, !1092, !1094}
!1091 = !DILocalVariable(name: "rhs", scope: !1083, file: !1056, line: 556, type: !82, align: 8)
!1092 = !DILocalVariable(name: "a", scope: !1093, file: !1056, line: 556, type: !82, align: 8)
!1093 = distinct !DILexicalBlock(scope: !1083, file: !1056, line: 1689, column: 13)
!1094 = !DILocalVariable(name: "b", scope: !1093, file: !1056, line: 556, type: !918, align: 1)
!1095 = !DILocation(line: 556, column: 26, scope: !1083, inlinedAt: !1081)
!1096 = !DILocation(line: 556, column: 47, scope: !1055)
!1097 = !DILocation(line: 556, column: 26, scope: !1093, inlinedAt: !1081)
!1098 = !DILocation(line: 556, column: 18, scope: !1055)
!1099 = !DILocation(line: 556, column: 18, scope: !1077)
!1100 = !DILocation(line: 556, column: 21, scope: !1055)
!1101 = !DILocation(line: 556, column: 21, scope: !1077)
!1102 = !DILocation(line: 557, column: 16, scope: !1077)
!1103 = !DILocation(line: 557, column: 42, scope: !1077)
!1104 = !DILocation(line: 557, column: 13, scope: !1077)
!1105 = !DILocation(line: 557, column: 30, scope: !1077)
!1106 = !DILocation(line: 558, column: 10, scope: !1055)
!1107 = !{i64 0, i64 2}
!1108 = distinct !DISubprogram(name: "biased_fp_to_float<f32>", linkageName: "_ZN4core3num7dec2flt18biased_fp_to_float17h8e8c78e060cb1e4eE", scope: !45, file: !1109, line: 219, type: !1110, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1121, retainedNodes: !1117)
!1109 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/dec2flt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "3de7b89edb270988af3d25a15e0b4ff6")
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!682, !1112}
!1112 = !DICompositeType(tag: DW_TAG_structure_type, name: "BiasedFp", scope: !1113, file: !2, size: 128, align: 64, elements: !1114, templateParams: !19, identifier: "7d508192c3a103ebfc1c80c331fe68de")
!1113 = !DINamespace(name: "common", scope: !45)
!1114 = !{!1115, !1116}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1112, file: !2, baseType: !82, size: 64, align: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1112, file: !2, baseType: !683, size: 32, align: 32, offset: 64)
!1117 = !{!1118, !1119}
!1118 = !DILocalVariable(name: "x", arg: 1, scope: !1108, file: !1109, line: 219, type: !1112)
!1119 = !DILocalVariable(name: "word", scope: !1120, file: !1109, line: 220, type: !82, align: 8)
!1120 = distinct !DILexicalBlock(scope: !1108, file: !1109, line: 220, column: 5)
!1121 = !{!1122}
!1122 = !DITemplateTypeParameter(name: "T", type: !682)
!1123 = !DILocation(line: 219, column: 36, scope: !1108)
!1124 = !DILocation(line: 220, column: 9, scope: !1120)
!1125 = !DILocation(line: 220, column: 20, scope: !1108)
!1126 = !DILocation(line: 221, column: 13, scope: !1120)
!1127 = !DILocation(line: 221, column: 5, scope: !1120)
!1128 = !DILocation(line: 222, column: 22, scope: !1120)
!1129 = !DILocation(line: 222, column: 5, scope: !1120)
!1130 = !DILocation(line: 223, column: 2, scope: !1108)
!1131 = distinct !DISubprogram(name: "biased_fp_to_float<f64>", linkageName: "_ZN4core3num7dec2flt18biased_fp_to_float17hc1c4bf2578871969E", scope: !45, file: !1109, line: 219, type: !1132, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1138, retainedNodes: !1134)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!697, !1112}
!1134 = !{!1135, !1136}
!1135 = !DILocalVariable(name: "x", arg: 1, scope: !1131, file: !1109, line: 219, type: !1112)
!1136 = !DILocalVariable(name: "word", scope: !1137, file: !1109, line: 220, type: !82, align: 8)
!1137 = distinct !DILexicalBlock(scope: !1131, file: !1109, line: 220, column: 5)
!1138 = !{!1139}
!1139 = !DITemplateTypeParameter(name: "T", type: !697)
!1140 = !DILocation(line: 219, column: 36, scope: !1131)
!1141 = !DILocation(line: 220, column: 9, scope: !1137)
!1142 = !DILocation(line: 220, column: 20, scope: !1131)
!1143 = !DILocation(line: 221, column: 13, scope: !1137)
!1144 = !DILocation(line: 221, column: 5, scope: !1137)
!1145 = !DILocation(line: 222, column: 22, scope: !1137)
!1146 = !DILocation(line: 222, column: 5, scope: !1137)
!1147 = !DILocation(line: 223, column: 2, scope: !1131)
!1148 = distinct !DISubprogram(name: "set_precision<f64>", linkageName: "_ZN4core3num7dec2flt3fpu13fpu_precision13set_precision17h04310024efb0e55cE", scope: !1150, file: !1149, line: 89, type: !1152, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1138, retainedNodes: !19)
!1149 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/dec2flt/fpu.rs", directory: "", checksumkind: CSK_MD5, checksum: "0f952e9ef15106a15d01f6f7d1521f47")
!1150 = !DINamespace(name: "fpu_precision", scope: !1151)
!1151 = !DINamespace(name: "fpu", scope: !45)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{null}
!1154 = !DILocation(line: 89, column: 33, scope: !1148)
!1155 = distinct !DISubprogram(name: "set_precision<f32>", linkageName: "_ZN4core3num7dec2flt3fpu13fpu_precision13set_precision17h3aa663e467ff5488E", scope: !1150, file: !1149, line: 89, type: !1152, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1121, retainedNodes: !19)
!1156 = !DILocation(line: 89, column: 33, scope: !1155)
!1157 = distinct !DISubprogram(name: "parse_long_mantissa<f32>", linkageName: "_ZN4core3num7dec2flt4slow19parse_long_mantissa17hda08111204ded613E", scope: !1159, file: !1158, line: 26, type: !1160, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1201, retainedNodes: !1162)
!1158 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/dec2flt/slow.rs", directory: "", checksumkind: CSK_MD5, checksum: "0467e0fa7351525f6187cb7910447288")
!1159 = !DINamespace(name: "slow", scope: !45)
!1160 = !DISubroutineType(types: !1161)
!1161 = !{!1112, !494}
!1162 = !{!1163, !1164, !1168, !1170, !1172, !1184, !1186, !1188, !1190, !1192, !1194, !1195, !1197, !1199}
!1163 = !DILocalVariable(name: "s", arg: 1, scope: !1157, file: !1158, line: 26, type: !494)
!1164 = !DILocalVariable(name: "get_shift", scope: !1165, file: !1158, line: 32, type: !1166, align: 1)
!1165 = distinct !DILexicalBlock(scope: !1157, file: !1158, line: 32, column: 5)
!1166 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<f32>", scope: !1167, file: !2, align: 8, elements: !19, identifier: "eb04d57a574bb2263949d33aa2e7b10c")
!1167 = !DINamespace(name: "parse_long_mantissa", scope: !1159)
!1168 = !DILocalVariable(name: "fp_zero", scope: !1169, file: !1158, line: 36, type: !1112, align: 8)
!1169 = distinct !DILexicalBlock(scope: !1165, file: !1158, line: 36, column: 5)
!1170 = !DILocalVariable(name: "fp_inf", scope: !1171, file: !1158, line: 37, type: !1112, align: 8)
!1171 = distinct !DILexicalBlock(scope: !1169, file: !1158, line: 37, column: 5)
!1172 = !DILocalVariable(name: "d", scope: !1173, file: !1158, line: 39, type: !1174, align: 8)
!1173 = distinct !DILexicalBlock(scope: !1171, file: !1158, line: 39, column: 5)
!1174 = !DICompositeType(tag: DW_TAG_structure_type, name: "Decimal", scope: !1175, file: !2, size: 6272, align: 64, elements: !1176, templateParams: !19, identifier: "6045e344d7782db5a4c043027bda82")
!1175 = !DINamespace(name: "decimal", scope: !45)
!1176 = !{!1177, !1178, !1179, !1180}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "num_digits", scope: !1174, file: !2, baseType: !9, size: 64, align: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "decimal_point", scope: !1174, file: !2, baseType: !683, size: 32, align: 32, offset: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "truncated", scope: !1174, file: !2, baseType: !918, size: 8, align: 8, offset: 96)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "digits", scope: !1174, file: !2, baseType: !1181, size: 6144, align: 8, offset: 104)
!1181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 6144, align: 8, elements: !1182)
!1182 = !{!1183}
!1183 = !DISubrange(count: 768, lowerBound: 0)
!1184 = !DILocalVariable(name: "exp2", scope: !1185, file: !1158, line: 47, type: !683, align: 4)
!1185 = distinct !DILexicalBlock(scope: !1173, file: !1158, line: 47, column: 5)
!1186 = !DILocalVariable(name: "n", scope: !1187, file: !1158, line: 50, type: !9, align: 8)
!1187 = distinct !DILexicalBlock(scope: !1185, file: !1158, line: 50, column: 9)
!1188 = !DILocalVariable(name: "shift", scope: !1189, file: !1158, line: 51, type: !9, align: 8)
!1189 = distinct !DILexicalBlock(scope: !1187, file: !1158, line: 51, column: 9)
!1190 = !DILocalVariable(name: "shift", scope: !1191, file: !1158, line: 60, type: !9, align: 8)
!1191 = distinct !DILexicalBlock(scope: !1185, file: !1158, line: 60, column: 9)
!1192 = !DILocalVariable(name: "digit", scope: !1193, file: !1158, line: 62, type: !15, align: 1)
!1193 = distinct !DILexicalBlock(scope: !1185, file: !1158, line: 62, column: 17)
!1194 = !DILocalVariable(name: "digit", scope: !1193, file: !1158, line: 62, type: !75, align: 8)
!1195 = !DILocalVariable(name: "n", scope: !1196, file: !1158, line: 78, type: !9, align: 8)
!1196 = distinct !DILexicalBlock(scope: !1185, file: !1158, line: 78, column: 9)
!1197 = !DILocalVariable(name: "mantissa", scope: !1198, file: !1158, line: 91, type: !82, align: 8)
!1198 = distinct !DILexicalBlock(scope: !1185, file: !1158, line: 91, column: 5)
!1199 = !DILocalVariable(name: "power2", scope: !1200, file: !1158, line: 102, type: !683, align: 4)
!1200 = distinct !DILexicalBlock(scope: !1198, file: !1158, line: 102, column: 5)
!1201 = !{!1202}
!1202 = !DITemplateTypeParameter(name: "F", type: !682)
!1203 = !DILocation(line: 26, column: 48, scope: !1157)
!1204 = !DILocation(line: 32, column: 9, scope: !1165)
!1205 = !DILocation(line: 39, column: 9, scope: !1173)
!1206 = !DILocation(line: 47, column: 9, scope: !1185)
!1207 = !DILocation(line: 60, column: 13, scope: !1191)
!1208 = !DILocation(line: 78, column: 13, scope: !1196)
!1209 = !DILocation(line: 91, column: 9, scope: !1198)
!1210 = !DILocation(line: 102, column: 9, scope: !1200)
!1211 = !DILocation(line: 36, column: 19, scope: !1165)
!1212 = !DILocation(line: 36, column: 9, scope: !1169)
!1213 = !DILocation(line: 37, column: 18, scope: !1169)
!1214 = !DILocation(line: 37, column: 9, scope: !1171)
!1215 = !DILocation(line: 39, column: 17, scope: !1171)
!1216 = !DILocation(line: 42, column: 8, scope: !1173)
!1217 = !DILocation(line: 42, column: 29, scope: !1173)
!1218 = !DILocation(line: 44, column: 15, scope: !1173)
!1219 = !DILocation(line: 43, column: 16, scope: !1173)
!1220 = !DILocation(line: 43, column: 9, scope: !1173)
!1221 = !DILocation(line: 1, column: 1, scope: !1222)
!1222 = !DILexicalBlockFile(scope: !1173, file: !1223, discriminator: 0)
!1223 = !DIFile(filename: "src/lib.rs", directory: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19", checksumkind: CSK_MD5, checksum: "f861f34e3ad6621d2595c64d2e954006")
!1224 = !DILocation(line: 47, column: 20, scope: !1173)
!1225 = !DILocation(line: 49, column: 5, scope: !1185)
!1226 = !DILocation(line: 45, column: 16, scope: !1173)
!1227 = !DILocation(line: 109, column: 2, scope: !1157)
!1228 = !DILocation(line: 49, column: 11, scope: !1185)
!1229 = !DILocation(line: 59, column: 5, scope: !1185)
!1230 = !DILocation(line: 50, column: 17, scope: !1185)
!1231 = !DILocation(line: 50, column: 13, scope: !1187)
!1232 = !DILocation(line: 51, column: 21, scope: !1187)
!1233 = !DILocation(line: 51, column: 13, scope: !1189)
!1234 = !DILocation(line: 52, column: 9, scope: !1189)
!1235 = !DILocation(line: 53, column: 12, scope: !1189)
!1236 = !DILocation(line: 56, column: 17, scope: !1189)
!1237 = !DILocation(line: 56, column: 9, scope: !1189)
!1238 = !DILocation(line: 54, column: 20, scope: !1189)
!1239 = !DILocation(line: 1, column: 1, scope: !1240)
!1240 = !DILexicalBlockFile(scope: !1185, file: !1223, discriminator: 0)
!1241 = !DILocation(line: 59, column: 11, scope: !1185)
!1242 = !DILocation(line: 60, column: 24, scope: !1185)
!1243 = !DILocation(line: 62, column: 17, scope: !1185)
!1244 = !DILocation(line: 62, column: 17, scope: !1193)
!1245 = !DILocation(line: 62, column: 26, scope: !1185)
!1246 = !DILocation(line: 67, column: 25, scope: !1185)
!1247 = !DILocation(line: 67, column: 23, scope: !1185)
!1248 = !DILocation(line: 67, column: 13, scope: !1185)
!1249 = !DILocation(line: 60, column: 21, scope: !1185)
!1250 = !DILocation(line: 69, column: 22, scope: !1191)
!1251 = !DILocation(line: 69, column: 9, scope: !1191)
!1252 = !DILocation(line: 61, column: 13, scope: !1185)
!1253 = !DILocation(line: 76, column: 5, scope: !1185)
!1254 = !DILocation(line: 77, column: 5, scope: !1185)
!1255 = !DILocation(line: 64, column: 22, scope: !1185)
!1256 = !DILocation(line: 63, column: 26, scope: !1185)
!1257 = !DILocation(line: 70, column: 12, scope: !1191)
!1258 = !DILocation(line: 73, column: 17, scope: !1191)
!1259 = !DILocation(line: 73, column: 9, scope: !1191)
!1260 = !DILocation(line: 71, column: 20, scope: !1191)
!1261 = !DILocation(line: 77, column: 39, scope: !1185)
!1262 = !DILocation(line: 77, column: 11, scope: !1185)
!1263 = !DILocation(line: 85, column: 9, scope: !1185)
!1264 = !DILocation(line: 85, column: 8, scope: !1185)
!1265 = !DILocation(line: 78, column: 50, scope: !1185)
!1266 = !DILocation(line: 78, column: 21, scope: !1185)
!1267 = !DILocation(line: 79, column: 12, scope: !1196)
!1268 = !DILocation(line: 82, column: 23, scope: !1196)
!1269 = !DILocation(line: 82, column: 9, scope: !1196)
!1270 = !DILocation(line: 80, column: 13, scope: !1196)
!1271 = !DILocation(line: 79, column: 9, scope: !1196)
!1272 = !DILocation(line: 83, column: 17, scope: !1196)
!1273 = !DILocation(line: 83, column: 9, scope: !1196)
!1274 = !DILocation(line: 90, column: 5, scope: !1185)
!1275 = !DILocation(line: 86, column: 16, scope: !1185)
!1276 = !DILocation(line: 91, column: 24, scope: !1185)
!1277 = !DILocation(line: 92, column: 8, scope: !1198)
!1278 = !DILocation(line: 102, column: 22, scope: !1198)
!1279 = !DILocation(line: 103, column: 8, scope: !1200)
!1280 = !DILocation(line: 95, column: 9, scope: !1198)
!1281 = !DILocation(line: 96, column: 9, scope: !1198)
!1282 = !DILocation(line: 97, column: 20, scope: !1198)
!1283 = !DILocation(line: 97, column: 9, scope: !1198)
!1284 = !DILocation(line: 98, column: 13, scope: !1198)
!1285 = !DILocation(line: 98, column: 12, scope: !1198)
!1286 = !DILocation(line: 92, column: 5, scope: !1198)
!1287 = !DILocation(line: 99, column: 20, scope: !1198)
!1288 = !DILocation(line: 107, column: 5, scope: !1200)
!1289 = !DILocation(line: 108, column: 19, scope: !1200)
!1290 = !DILocation(line: 108, column: 32, scope: !1200)
!1291 = !DILocation(line: 108, column: 5, scope: !1200)
!1292 = !DILocation(line: 104, column: 9, scope: !1200)
!1293 = !DILocation(line: 103, column: 5, scope: !1200)
!1294 = distinct !DISubprogram(name: "parse_long_mantissa<f64>", linkageName: "_ZN4core3num7dec2flt4slow19parse_long_mantissa17hf4d7f84352164288E", scope: !1159, file: !1158, line: 26, type: !1160, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1323, retainedNodes: !1295)
!1295 = !{!1296, !1297, !1300, !1302, !1304, !1306, !1308, !1310, !1312, !1314, !1316, !1317, !1319, !1321}
!1296 = !DILocalVariable(name: "s", arg: 1, scope: !1294, file: !1158, line: 26, type: !494)
!1297 = !DILocalVariable(name: "get_shift", scope: !1298, file: !1158, line: 32, type: !1299, align: 1)
!1298 = distinct !DILexicalBlock(scope: !1294, file: !1158, line: 32, column: 5)
!1299 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<f64>", scope: !1167, file: !2, align: 8, elements: !19, identifier: "d2ad1c46422d9aa2bb09f45b94f287c9")
!1300 = !DILocalVariable(name: "fp_zero", scope: !1301, file: !1158, line: 36, type: !1112, align: 8)
!1301 = distinct !DILexicalBlock(scope: !1298, file: !1158, line: 36, column: 5)
!1302 = !DILocalVariable(name: "fp_inf", scope: !1303, file: !1158, line: 37, type: !1112, align: 8)
!1303 = distinct !DILexicalBlock(scope: !1301, file: !1158, line: 37, column: 5)
!1304 = !DILocalVariable(name: "d", scope: !1305, file: !1158, line: 39, type: !1174, align: 8)
!1305 = distinct !DILexicalBlock(scope: !1303, file: !1158, line: 39, column: 5)
!1306 = !DILocalVariable(name: "exp2", scope: !1307, file: !1158, line: 47, type: !683, align: 4)
!1307 = distinct !DILexicalBlock(scope: !1305, file: !1158, line: 47, column: 5)
!1308 = !DILocalVariable(name: "n", scope: !1309, file: !1158, line: 50, type: !9, align: 8)
!1309 = distinct !DILexicalBlock(scope: !1307, file: !1158, line: 50, column: 9)
!1310 = !DILocalVariable(name: "shift", scope: !1311, file: !1158, line: 51, type: !9, align: 8)
!1311 = distinct !DILexicalBlock(scope: !1309, file: !1158, line: 51, column: 9)
!1312 = !DILocalVariable(name: "shift", scope: !1313, file: !1158, line: 60, type: !9, align: 8)
!1313 = distinct !DILexicalBlock(scope: !1307, file: !1158, line: 60, column: 9)
!1314 = !DILocalVariable(name: "digit", scope: !1315, file: !1158, line: 62, type: !15, align: 1)
!1315 = distinct !DILexicalBlock(scope: !1307, file: !1158, line: 62, column: 17)
!1316 = !DILocalVariable(name: "digit", scope: !1315, file: !1158, line: 62, type: !75, align: 8)
!1317 = !DILocalVariable(name: "n", scope: !1318, file: !1158, line: 78, type: !9, align: 8)
!1318 = distinct !DILexicalBlock(scope: !1307, file: !1158, line: 78, column: 9)
!1319 = !DILocalVariable(name: "mantissa", scope: !1320, file: !1158, line: 91, type: !82, align: 8)
!1320 = distinct !DILexicalBlock(scope: !1307, file: !1158, line: 91, column: 5)
!1321 = !DILocalVariable(name: "power2", scope: !1322, file: !1158, line: 102, type: !683, align: 4)
!1322 = distinct !DILexicalBlock(scope: !1320, file: !1158, line: 102, column: 5)
!1323 = !{!1324}
!1324 = !DITemplateTypeParameter(name: "F", type: !697)
!1325 = !DILocation(line: 26, column: 48, scope: !1294)
!1326 = !DILocation(line: 32, column: 9, scope: !1298)
!1327 = !DILocation(line: 39, column: 9, scope: !1305)
!1328 = !DILocation(line: 47, column: 9, scope: !1307)
!1329 = !DILocation(line: 60, column: 13, scope: !1313)
!1330 = !DILocation(line: 78, column: 13, scope: !1318)
!1331 = !DILocation(line: 91, column: 9, scope: !1320)
!1332 = !DILocation(line: 102, column: 9, scope: !1322)
!1333 = !DILocation(line: 36, column: 19, scope: !1298)
!1334 = !DILocation(line: 36, column: 9, scope: !1301)
!1335 = !DILocation(line: 37, column: 18, scope: !1301)
!1336 = !DILocation(line: 37, column: 9, scope: !1303)
!1337 = !DILocation(line: 39, column: 17, scope: !1303)
!1338 = !DILocation(line: 42, column: 8, scope: !1305)
!1339 = !DILocation(line: 42, column: 29, scope: !1305)
!1340 = !DILocation(line: 44, column: 15, scope: !1305)
!1341 = !DILocation(line: 43, column: 16, scope: !1305)
!1342 = !DILocation(line: 43, column: 9, scope: !1305)
!1343 = !DILocation(line: 1, column: 1, scope: !1344)
!1344 = !DILexicalBlockFile(scope: !1305, file: !1223, discriminator: 0)
!1345 = !DILocation(line: 47, column: 20, scope: !1305)
!1346 = !DILocation(line: 49, column: 5, scope: !1307)
!1347 = !DILocation(line: 45, column: 16, scope: !1305)
!1348 = !DILocation(line: 109, column: 2, scope: !1294)
!1349 = !DILocation(line: 49, column: 11, scope: !1307)
!1350 = !DILocation(line: 59, column: 5, scope: !1307)
!1351 = !DILocation(line: 50, column: 17, scope: !1307)
!1352 = !DILocation(line: 50, column: 13, scope: !1309)
!1353 = !DILocation(line: 51, column: 21, scope: !1309)
!1354 = !DILocation(line: 51, column: 13, scope: !1311)
!1355 = !DILocation(line: 52, column: 9, scope: !1311)
!1356 = !DILocation(line: 53, column: 12, scope: !1311)
!1357 = !DILocation(line: 56, column: 17, scope: !1311)
!1358 = !DILocation(line: 56, column: 9, scope: !1311)
!1359 = !DILocation(line: 54, column: 20, scope: !1311)
!1360 = !DILocation(line: 1, column: 1, scope: !1361)
!1361 = !DILexicalBlockFile(scope: !1307, file: !1223, discriminator: 0)
!1362 = !DILocation(line: 59, column: 11, scope: !1307)
!1363 = !DILocation(line: 60, column: 24, scope: !1307)
!1364 = !DILocation(line: 62, column: 17, scope: !1307)
!1365 = !DILocation(line: 62, column: 17, scope: !1315)
!1366 = !DILocation(line: 62, column: 26, scope: !1307)
!1367 = !DILocation(line: 67, column: 25, scope: !1307)
!1368 = !DILocation(line: 67, column: 23, scope: !1307)
!1369 = !DILocation(line: 67, column: 13, scope: !1307)
!1370 = !DILocation(line: 60, column: 21, scope: !1307)
!1371 = !DILocation(line: 69, column: 22, scope: !1313)
!1372 = !DILocation(line: 69, column: 9, scope: !1313)
!1373 = !DILocation(line: 61, column: 13, scope: !1307)
!1374 = !DILocation(line: 76, column: 5, scope: !1307)
!1375 = !DILocation(line: 77, column: 5, scope: !1307)
!1376 = !DILocation(line: 64, column: 22, scope: !1307)
!1377 = !DILocation(line: 63, column: 26, scope: !1307)
!1378 = !DILocation(line: 70, column: 12, scope: !1313)
!1379 = !DILocation(line: 73, column: 17, scope: !1313)
!1380 = !DILocation(line: 73, column: 9, scope: !1313)
!1381 = !DILocation(line: 71, column: 20, scope: !1313)
!1382 = !DILocation(line: 77, column: 39, scope: !1307)
!1383 = !DILocation(line: 77, column: 11, scope: !1307)
!1384 = !DILocation(line: 85, column: 9, scope: !1307)
!1385 = !DILocation(line: 85, column: 8, scope: !1307)
!1386 = !DILocation(line: 78, column: 50, scope: !1307)
!1387 = !DILocation(line: 78, column: 21, scope: !1307)
!1388 = !DILocation(line: 79, column: 12, scope: !1318)
!1389 = !DILocation(line: 82, column: 23, scope: !1318)
!1390 = !DILocation(line: 82, column: 9, scope: !1318)
!1391 = !DILocation(line: 80, column: 13, scope: !1318)
!1392 = !DILocation(line: 79, column: 9, scope: !1318)
!1393 = !DILocation(line: 83, column: 17, scope: !1318)
!1394 = !DILocation(line: 83, column: 9, scope: !1318)
!1395 = !DILocation(line: 90, column: 5, scope: !1307)
!1396 = !DILocation(line: 86, column: 16, scope: !1307)
!1397 = !DILocation(line: 91, column: 24, scope: !1307)
!1398 = !DILocation(line: 92, column: 8, scope: !1320)
!1399 = !DILocation(line: 102, column: 22, scope: !1320)
!1400 = !DILocation(line: 103, column: 8, scope: !1322)
!1401 = !DILocation(line: 95, column: 9, scope: !1320)
!1402 = !DILocation(line: 96, column: 9, scope: !1320)
!1403 = !DILocation(line: 97, column: 20, scope: !1320)
!1404 = !DILocation(line: 97, column: 9, scope: !1320)
!1405 = !DILocation(line: 98, column: 13, scope: !1320)
!1406 = !DILocation(line: 98, column: 12, scope: !1320)
!1407 = !DILocation(line: 92, column: 5, scope: !1320)
!1408 = !DILocation(line: 99, column: 20, scope: !1320)
!1409 = !DILocation(line: 107, column: 5, scope: !1322)
!1410 = !DILocation(line: 108, column: 19, scope: !1322)
!1411 = !DILocation(line: 108, column: 32, scope: !1322)
!1412 = !DILocation(line: 108, column: 5, scope: !1322)
!1413 = !DILocation(line: 104, column: 9, scope: !1322)
!1414 = !DILocation(line: 103, column: 5, scope: !1322)
!1415 = distinct !DISubprogram(name: "{closure#0}<f64>", linkageName: "_ZN4core3num7dec2flt4slow19parse_long_mantissa28_$u7b$$u7b$closure$u7d$$u7d$17h428c76813a9a5625E", scope: !1167, file: !1158, line: 32, type: !1416, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1323, retainedNodes: !1419)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{!9, !1418, !9}
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::num::dec2flt::slow::parse_long_mantissa::{closure_env#0}<f64>", baseType: !1299, size: 64, align: 64, dwarfAddressSpace: 0)
!1419 = !{!1420, !1421}
!1420 = !DILocalVariable(name: "n", arg: 2, scope: !1415, file: !1158, line: 32, type: !9)
!1421 = !DILocalVariable(arg: 1, scope: !1415, file: !1158, line: 32, type: !1418)
!1422 = !DILocation(line: 32, column: 21, scope: !1415)
!1423 = !DILocation(line: 32, column: 22, scope: !1415)
!1424 = !DILocation(line: 33, column: 12, scope: !1415)
!1425 = !DILocation(line: 33, column: 57, scope: !1415)
!1426 = !DILocation(line: 33, column: 9, scope: !1415)
!1427 = !DILocation(line: 33, column: 29, scope: !1415)
!1428 = !DILocation(line: 32, column: 24, scope: !1415)
!1429 = distinct !DISubprogram(name: "{closure#0}<f32>", linkageName: "_ZN4core3num7dec2flt4slow19parse_long_mantissa28_$u7b$$u7b$closure$u7d$$u7d$17h75f79c57090ebb62E", scope: !1167, file: !1158, line: 32, type: !1430, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1201, retainedNodes: !1433)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{!9, !1432, !9}
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::num::dec2flt::slow::parse_long_mantissa::{closure_env#0}<f32>", baseType: !1166, size: 64, align: 64, dwarfAddressSpace: 0)
!1433 = !{!1434, !1435}
!1434 = !DILocalVariable(name: "n", arg: 2, scope: !1429, file: !1158, line: 32, type: !9)
!1435 = !DILocalVariable(arg: 1, scope: !1429, file: !1158, line: 32, type: !1432)
!1436 = !DILocation(line: 32, column: 21, scope: !1429)
!1437 = !DILocation(line: 32, column: 22, scope: !1429)
!1438 = !DILocation(line: 33, column: 12, scope: !1429)
!1439 = !DILocation(line: 33, column: 57, scope: !1429)
!1440 = !DILocation(line: 33, column: 9, scope: !1429)
!1441 = !DILocation(line: 33, column: 29, scope: !1429)
!1442 = !DILocation(line: 32, column: 24, scope: !1429)
!1443 = distinct !DISubprogram(name: "parse_inf_nan<f64>", linkageName: "_ZN4core3num7dec2flt5parse13parse_inf_nan17h0def64f125fb9befE", scope: !1445, file: !1444, line: 223, type: !1446, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1323, retainedNodes: !1459)
!1444 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/dec2flt/parse.rs", directory: "", checksumkind: CSK_MD5, checksum: "6bf6175a6543d360e7bb1538ea2c7b15")
!1445 = !DINamespace(name: "parse", scope: !45)
!1446 = !DISubroutineType(types: !1447)
!1447 = !{!1448, !494, !918}
!1448 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<f64>", scope: !64, file: !2, size: 128, align: 64, elements: !1449, templateParams: !19, identifier: "7cf3ecb3e95297685509d54ac59b1c6d")
!1449 = !{!1450}
!1450 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1448, file: !2, size: 128, align: 64, elements: !1451, templateParams: !19, identifier: "8974dbcdaa9bf243e5e01a5e27bb1720", discriminator: !1458)
!1451 = !{!1452, !1454}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1450, file: !2, baseType: !1453, size: 128, align: 64, extraData: i64 0)
!1453 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1448, file: !2, size: 128, align: 64, elements: !19, templateParams: !1138, identifier: "cda08badc52341cf50d1337ffc59d1fa")
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1450, file: !2, baseType: !1455, size: 128, align: 64, extraData: i64 1)
!1455 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1448, file: !2, size: 128, align: 64, elements: !1456, templateParams: !1138, identifier: "f2bfa15d90d1d0b8f5dcc98dc5fa7b19")
!1456 = !{!1457}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1455, file: !2, baseType: !697, size: 64, align: 64, offset: 64)
!1458 = !DIDerivedType(tag: DW_TAG_member, scope: !1448, file: !2, baseType: !82, size: 64, align: 64, flags: DIFlagArtificial)
!1459 = !{!1460, !1461, !1462, !1464}
!1460 = !DILocalVariable(name: "s", arg: 1, scope: !1443, file: !1444, line: 223, type: !494)
!1461 = !DILocalVariable(name: "negative", arg: 2, scope: !1443, file: !1444, line: 223, type: !918)
!1462 = !DILocalVariable(name: "float", scope: !1463, file: !1444, line: 224, type: !697, align: 8)
!1463 = distinct !DILexicalBlock(scope: !1443, file: !1444, line: 224, column: 68)
!1464 = !DILocalVariable(name: "rest", scope: !1463, file: !1444, line: 224, type: !9, align: 8)
!1465 = !DILocation(line: 223, column: 35, scope: !1443)
!1466 = !DILocation(line: 223, column: 45, scope: !1443)
!1467 = !DILocation(line: 224, column: 18, scope: !1463)
!1468 = !DILocation(line: 224, column: 38, scope: !1463)
!1469 = !DILocation(line: 224, column: 12, scope: !1463)
!1470 = !DILocation(line: 224, column: 29, scope: !1463)
!1471 = !DILocation(line: 225, column: 12, scope: !1463)
!1472 = !DILocation(line: 232, column: 5, scope: !1443)
!1473 = !DILocation(line: 233, column: 2, scope: !1443)
!1474 = !DILocation(line: 224, column: 5, scope: !1443)
!1475 = !DILocation(line: 226, column: 16, scope: !1463)
!1476 = !DILocation(line: 229, column: 25, scope: !1463)
!1477 = !DILocation(line: 229, column: 20, scope: !1463)
!1478 = !DILocation(line: 227, column: 26, scope: !1463)
!1479 = !DILocation(line: 227, column: 25, scope: !1463)
!1480 = !DILocation(line: 227, column: 17, scope: !1463)
!1481 = !DILocation(line: 226, column: 13, scope: !1463)
!1482 = distinct !DISubprogram(name: "parse_inf_nan<f32>", linkageName: "_ZN4core3num7dec2flt5parse13parse_inf_nan17he9556e7df42fb6afE", scope: !1445, file: !1444, line: 223, type: !1483, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1201, retainedNodes: !1496)
!1483 = !DISubroutineType(types: !1484)
!1484 = !{!1485, !494, !918}
!1485 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<f32>", scope: !64, file: !2, size: 64, align: 32, elements: !1486, templateParams: !19, identifier: "6f8430e8115d3b4ff389f567af163f")
!1486 = !{!1487}
!1487 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1485, file: !2, size: 64, align: 32, elements: !1488, templateParams: !19, identifier: "cd207624308c3e385c2e67fb4241ffc", discriminator: !1495)
!1488 = !{!1489, !1491}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1487, file: !2, baseType: !1490, size: 64, align: 32, extraData: i64 0)
!1490 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1485, file: !2, size: 64, align: 32, elements: !19, templateParams: !1121, identifier: "adc8a8c4836991b3bb7e6ba67a494fe1")
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1487, file: !2, baseType: !1492, size: 64, align: 32, extraData: i64 1)
!1492 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1485, file: !2, size: 64, align: 32, elements: !1493, templateParams: !1121, identifier: "4e574d0c19de39f4ab87b007d377c1fa")
!1493 = !{!1494}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1492, file: !2, baseType: !682, size: 32, align: 32, offset: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, scope: !1485, file: !2, baseType: !391, size: 32, align: 32, flags: DIFlagArtificial)
!1496 = !{!1497, !1498, !1499, !1501}
!1497 = !DILocalVariable(name: "s", arg: 1, scope: !1482, file: !1444, line: 223, type: !494)
!1498 = !DILocalVariable(name: "negative", arg: 2, scope: !1482, file: !1444, line: 223, type: !918)
!1499 = !DILocalVariable(name: "float", scope: !1500, file: !1444, line: 224, type: !682, align: 4)
!1500 = distinct !DILexicalBlock(scope: !1482, file: !1444, line: 224, column: 68)
!1501 = !DILocalVariable(name: "rest", scope: !1500, file: !1444, line: 224, type: !9, align: 8)
!1502 = !DILocation(line: 223, column: 35, scope: !1482)
!1503 = !DILocation(line: 223, column: 45, scope: !1482)
!1504 = !DILocation(line: 224, column: 18, scope: !1500)
!1505 = !DILocation(line: 224, column: 38, scope: !1500)
!1506 = !DILocation(line: 224, column: 12, scope: !1500)
!1507 = !DILocation(line: 224, column: 29, scope: !1500)
!1508 = !DILocation(line: 225, column: 12, scope: !1500)
!1509 = !DILocation(line: 232, column: 5, scope: !1482)
!1510 = !DILocation(line: 233, column: 2, scope: !1482)
!1511 = !DILocation(line: 224, column: 5, scope: !1482)
!1512 = !DILocation(line: 226, column: 16, scope: !1500)
!1513 = !DILocation(line: 229, column: 25, scope: !1500)
!1514 = !DILocation(line: 229, column: 20, scope: !1500)
!1515 = !DILocation(line: 227, column: 26, scope: !1500)
!1516 = !DILocation(line: 227, column: 25, scope: !1500)
!1517 = !DILocation(line: 227, column: 17, scope: !1500)
!1518 = !DILocation(line: 226, column: 13, scope: !1500)
!1519 = !{i32 0, i32 2}
!1520 = distinct !DISubprogram(name: "parse_partial_inf_nan<f64>", linkageName: "_ZN4core3num7dec2flt5parse21parse_partial_inf_nan17h00f5be0cf65355e6E", scope: !1445, file: !1444, line: 208, type: !1521, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1323, retainedNodes: !1540)
!1521 = !DISubroutineType(types: !1522)
!1522 = !{!1523, !494}
!1523 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(f64, usize)>", scope: !64, file: !2, size: 192, align: 64, elements: !1524, templateParams: !19, identifier: "c10bc6dd07ea8214b63df8601ff51256")
!1524 = !{!1525}
!1525 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1523, file: !2, size: 192, align: 64, elements: !1526, templateParams: !19, identifier: "779234154e258fee3999ead5cd8001db", discriminator: !1539)
!1526 = !{!1527, !1535}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1525, file: !2, baseType: !1528, size: 192, align: 64, extraData: i64 0)
!1528 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1523, file: !2, size: 192, align: 64, elements: !19, templateParams: !1529, identifier: "738d882030f597a91656045465c9e5a")
!1529 = !{!1530}
!1530 = !DITemplateTypeParameter(name: "T", type: !1531)
!1531 = !DICompositeType(tag: DW_TAG_structure_type, name: "(f64, usize)", file: !2, size: 128, align: 64, elements: !1532, templateParams: !19, identifier: "45a9b945cae65fbab4b67e993ce8a52c")
!1532 = !{!1533, !1534}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1531, file: !2, baseType: !697, size: 64, align: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1531, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1525, file: !2, baseType: !1536, size: 192, align: 64, extraData: i64 1)
!1536 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1523, file: !2, size: 192, align: 64, elements: !1537, templateParams: !1529, identifier: "89892a00fe83df5a422ab4b95813174f")
!1537 = !{!1538}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1536, file: !2, baseType: !1531, size: 128, align: 64, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, scope: !1523, file: !2, baseType: !82, size: 64, align: 64, flags: DIFlagArtificial)
!1540 = !{!1541}
!1541 = !DILocalVariable(name: "s", arg: 1, scope: !1520, file: !1444, line: 208, type: !494)
!1542 = !DILocation(line: 208, column: 39, scope: !1520)
!1543 = !DILocation(line: 212, column: 8, scope: !1520)
!1544 = !DILocation(line: 219, column: 5, scope: !1520)
!1545 = !DILocation(line: 220, column: 2, scope: !1520)
!1546 = !DILocation(line: 213, column: 12, scope: !1520)
!1547 = !DILocation(line: 215, column: 19, scope: !1520)
!1548 = !DILocation(line: 214, column: 25, scope: !1520)
!1549 = !DILocation(line: 214, column: 20, scope: !1520)
!1550 = !DILocation(line: 214, column: 13, scope: !1520)
!1551 = !DILocation(line: 212, column: 5, scope: !1520)
!1552 = !DILocation(line: 216, column: 39, scope: !1520)
!1553 = !DILocation(line: 216, column: 25, scope: !1520)
!1554 = !DILocation(line: 216, column: 20, scope: !1520)
!1555 = !DILocation(line: 1, column: 1, scope: !1556)
!1556 = !DILexicalBlockFile(scope: !1520, file: !1223, discriminator: 0)
!1557 = distinct !DISubprogram(name: "parse_partial_inf_nan<f32>", linkageName: "_ZN4core3num7dec2flt5parse21parse_partial_inf_nan17he115698c5f6b9bacE", scope: !1445, file: !1444, line: 208, type: !1558, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1201, retainedNodes: !1577)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!1560, !494}
!1560 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(f32, usize)>", scope: !64, file: !2, size: 192, align: 64, elements: !1561, templateParams: !19, identifier: "e957b7d54359274aea21156708d5aef8")
!1561 = !{!1562}
!1562 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1560, file: !2, size: 192, align: 64, elements: !1563, templateParams: !19, identifier: "1a62c25241913d45e0f5ba4bf1e8adee", discriminator: !1576)
!1563 = !{!1564, !1572}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1562, file: !2, baseType: !1565, size: 192, align: 64, extraData: i64 0)
!1565 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1560, file: !2, size: 192, align: 64, elements: !19, templateParams: !1566, identifier: "c4dcefe19634799921fbba0bf24e082")
!1566 = !{!1567}
!1567 = !DITemplateTypeParameter(name: "T", type: !1568)
!1568 = !DICompositeType(tag: DW_TAG_structure_type, name: "(f32, usize)", file: !2, size: 128, align: 64, elements: !1569, templateParams: !19, identifier: "69ced5777a34786c6a5e05c2ddeecfca")
!1569 = !{!1570, !1571}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1568, file: !2, baseType: !682, size: 32, align: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1568, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1562, file: !2, baseType: !1573, size: 192, align: 64, extraData: i64 1)
!1573 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1560, file: !2, size: 192, align: 64, elements: !1574, templateParams: !1566, identifier: "7667a0a1bac6a24e2e2c0a73e8f94551")
!1574 = !{!1575}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1573, file: !2, baseType: !1568, size: 128, align: 64, offset: 64)
!1576 = !DIDerivedType(tag: DW_TAG_member, scope: !1560, file: !2, baseType: !82, size: 64, align: 64, flags: DIFlagArtificial)
!1577 = !{!1578}
!1578 = !DILocalVariable(name: "s", arg: 1, scope: !1557, file: !1444, line: 208, type: !494)
!1579 = !DILocation(line: 208, column: 39, scope: !1557)
!1580 = !DILocation(line: 212, column: 8, scope: !1557)
!1581 = !DILocation(line: 219, column: 5, scope: !1557)
!1582 = !DILocation(line: 220, column: 2, scope: !1557)
!1583 = !DILocation(line: 213, column: 12, scope: !1557)
!1584 = !DILocation(line: 215, column: 19, scope: !1557)
!1585 = !DILocation(line: 214, column: 25, scope: !1557)
!1586 = !DILocation(line: 214, column: 20, scope: !1557)
!1587 = !DILocation(line: 214, column: 13, scope: !1557)
!1588 = !DILocation(line: 212, column: 5, scope: !1557)
!1589 = !DILocation(line: 216, column: 39, scope: !1557)
!1590 = !DILocation(line: 216, column: 25, scope: !1557)
!1591 = !DILocation(line: 216, column: 20, scope: !1557)
!1592 = !DILocation(line: 1, column: 1, scope: !1593)
!1593 = !DILexicalBlockFile(scope: !1557, file: !1223, discriminator: 0)
!1594 = distinct !DISubprogram(name: "from_str", linkageName: "_ZN4core3num7dec2flt60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$f32$GT$8from_str17h8a350a0f35c2446dE", scope: !1595, file: !1109, line: 150, type: !1596, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !1616)
!1595 = !DINamespace(name: "{impl#2}", scope: !45)
!1596 = !DISubroutineType(types: !1597)
!1597 = !{!1598, !507}
!1598 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<f32, core::num::dec2flt::ParseFloatError>", scope: !711, file: !2, size: 64, align: 32, elements: !1599, templateParams: !19, identifier: "7a8a507eadc4fffa3d67eb2865770199")
!1599 = !{!1600}
!1600 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1598, file: !2, size: 64, align: 32, elements: !1601, templateParams: !19, identifier: "ad2faa3c8bbfb49e2ebfe9e3a913e369", discriminator: !1615)
!1601 = !{!1602, !1611}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1600, file: !2, baseType: !1603, size: 64, align: 32, extraData: i64 0)
!1603 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1598, file: !2, size: 64, align: 32, elements: !1604, templateParams: !1606, identifier: "ca104c1d1728d65c94d270b2d2bde69f")
!1604 = !{!1605}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1603, file: !2, baseType: !682, size: 32, align: 32, offset: 32)
!1606 = !{!1122, !1607}
!1607 = !DITemplateTypeParameter(name: "E", type: !1608)
!1608 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParseFloatError", scope: !45, file: !2, size: 8, align: 8, elements: !1609, templateParams: !19, identifier: "8e3e14862db32dc27343b423cfc23078")
!1609 = !{!1610}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !1608, file: !2, baseType: !44, size: 8, align: 8)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1600, file: !2, baseType: !1612, size: 64, align: 32, extraData: i64 1)
!1612 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1598, file: !2, size: 64, align: 32, elements: !1613, templateParams: !1606, identifier: "ca167553572429a285b7c29834902832")
!1613 = !{!1614}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1612, file: !2, baseType: !1608, size: 8, align: 8, offset: 8)
!1615 = !DIDerivedType(tag: DW_TAG_member, scope: !1598, file: !2, baseType: !15, size: 8, align: 8, flags: DIFlagArtificial)
!1616 = !{!1617}
!1617 = !DILocalVariable(name: "src", arg: 1, scope: !1594, file: !1109, line: 150, type: !507)
!1618 = !DILocation(line: 150, column: 25, scope: !1594)
!1619 = !DILocation(line: 151, column: 17, scope: !1594)
!1620 = !DILocation(line: 152, column: 14, scope: !1594)
!1621 = distinct !DISubprogram(name: "from_str", linkageName: "_ZN4core3num7dec2flt60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$f64$GT$8from_str17hb386c67320c9d1bbE", scope: !1622, file: !1109, line: 150, type: !1623, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !1639)
!1622 = !DINamespace(name: "{impl#3}", scope: !45)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{!1625, !507}
!1625 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<f64, core::num::dec2flt::ParseFloatError>", scope: !711, file: !2, size: 128, align: 64, elements: !1626, templateParams: !19, identifier: "e032d9f77ef86edc4795c3eb84261f53")
!1626 = !{!1627}
!1627 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1625, file: !2, size: 128, align: 64, elements: !1628, templateParams: !19, identifier: "b412d72ab34793c6d059b0f1f1cb4716", discriminator: !1638)
!1628 = !{!1629, !1634}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1627, file: !2, baseType: !1630, size: 128, align: 64, extraData: i64 0)
!1630 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1625, file: !2, size: 128, align: 64, elements: !1631, templateParams: !1633, identifier: "c47bb4de4007eadee48519d0b04f2656")
!1631 = !{!1632}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1630, file: !2, baseType: !697, size: 64, align: 64, offset: 64)
!1633 = !{!1139, !1607}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1627, file: !2, baseType: !1635, size: 128, align: 64, extraData: i64 1)
!1635 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1625, file: !2, size: 128, align: 64, elements: !1636, templateParams: !1633, identifier: "7001153853e1c0c6fd34ad8cc6ef6fc1")
!1636 = !{!1637}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1635, file: !2, baseType: !1608, size: 8, align: 8, offset: 8)
!1638 = !DIDerivedType(tag: DW_TAG_member, scope: !1625, file: !2, baseType: !15, size: 8, align: 8, flags: DIFlagArtificial)
!1639 = !{!1640}
!1640 = !DILocalVariable(name: "src", arg: 1, scope: !1621, file: !1109, line: 150, type: !507)
!1641 = !DILocation(line: 150, column: 25, scope: !1621)
!1642 = !DILocation(line: 151, column: 17, scope: !1621)
!1643 = !DILocation(line: 152, column: 14, scope: !1621)
!1644 = distinct !DISubprogram(name: "starts_with_ignore_case<[u8]>", linkageName: "_ZN4core3num7dec2flt6common9ByteSlice23starts_with_ignore_case17hdbd574e40be63bbdE", scope: !1646, file: !1645, line: 39, type: !1647, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1656, retainedNodes: !1649)
!1645 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/dec2flt/common.rs", directory: "", checksumkind: CSK_MD5, checksum: "446b554c946bee9eaa8521c11f2d808b")
!1646 = !DINamespace(name: "ByteSlice", scope: !1113)
!1647 = !DISubroutineType(types: !1648)
!1648 = !{!918, !494, !494}
!1649 = !{!1650, !1651, !1652, !1654}
!1650 = !DILocalVariable(name: "self", arg: 1, scope: !1644, file: !1645, line: 39, type: !494)
!1651 = !DILocalVariable(name: "u", arg: 2, scope: !1644, file: !1645, line: 39, type: !494)
!1652 = !DILocalVariable(name: "iter", scope: !1653, file: !1645, line: 41, type: !84, align: 8)
!1653 = distinct !DILexicalBlock(scope: !1644, file: !1645, line: 41, column: 9)
!1654 = !DILocalVariable(name: "d", scope: !1655, file: !1645, line: 42, type: !15, align: 1)
!1655 = distinct !DILexicalBlock(scope: !1653, file: !1645, line: 42, column: 9)
!1656 = !{!1657}
!1657 = !DITemplateTypeParameter(name: "Self", type: !15)
!1658 = !DILocation(line: 39, column: 32, scope: !1644)
!1659 = !DILocation(line: 39, column: 39, scope: !1644)
!1660 = !DILocation(line: 41, column: 13, scope: !1653)
!1661 = !DILocation(line: 41, column: 20, scope: !1644)
!1662 = !DILocalVariable(name: "self", scope: !1663, file: !1645, line: 41, type: !494, align: 8)
!1663 = !DILexicalBlockFile(scope: !1664, file: !1645, discriminator: 0)
!1664 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h4a4a89787a2145f0E", scope: !1666, file: !1665, line: 734, type: !1667, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !1669)
!1665 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "7e4712ab5341970456c5be6b0829b712")
!1666 = !DINamespace(name: "{impl#0}", scope: !89)
!1667 = !DISubroutineType(types: !1668)
!1668 = !{!87, !494}
!1669 = !{!1662}
!1670 = !DILocation(line: 41, column: 20, scope: !1663, inlinedAt: !1661)
!1671 = !DILocation(line: 41, column: 45, scope: !1644)
!1672 = !DILocalVariable(name: "self", scope: !1673, file: !1645, line: 41, type: !494, align: 8)
!1673 = !DILexicalBlockFile(scope: !1674, file: !1645, discriminator: 0)
!1674 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h4a4a89787a2145f0E", scope: !1666, file: !1665, line: 734, type: !1667, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !1675)
!1675 = !{!1672}
!1676 = !DILocation(line: 41, column: 45, scope: !1673, inlinedAt: !1671)
!1677 = !DILocation(line: 42, column: 17, scope: !1653)
!1678 = !DILocation(line: 42, column: 13, scope: !1655)
!1679 = !DILocation(line: 43, column: 9, scope: !1655)
!1680 = !DILocation(line: 43, column: 19, scope: !1655)
!1681 = !DILocation(line: 44, column: 6, scope: !1644)
!1682 = distinct !DISubprogram(name: "{closure#0}<[u8]>", linkageName: "_ZN4core3num7dec2flt6common9ByteSlice23starts_with_ignore_case28_$u7b$$u7b$closure$u7d$$u7d$17h9736513d08d51230E", scope: !1683, file: !1645, line: 42, type: !1684, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1656, retainedNodes: !1688)
!1683 = !DINamespace(name: "starts_with_ignore_case", scope: !1646)
!1684 = !DISubroutineType(types: !1685)
!1685 = !{!15, !1686, !15, !72}
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::num::dec2flt::common::ByteSlice::starts_with_ignore_case::{closure_env#0}<[u8]>", baseType: !1687, size: 64, align: 64, dwarfAddressSpace: 0)
!1687 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<[u8]>", scope: !1683, file: !2, align: 8, elements: !19, identifier: "fbe5f2035c027fd753619a42e1a023e1")
!1688 = !{!1689, !1690, !1692, !1693, !1694}
!1689 = !DILocalVariable(name: "i", arg: 2, scope: !1682, file: !1645, line: 42, type: !15)
!1690 = !DILocalVariable(name: "x", scope: !1691, file: !1645, line: 42, type: !15, align: 1)
!1691 = distinct !DILexicalBlock(scope: !1682, file: !1645, line: 42, column: 44)
!1692 = !DILocalVariable(name: "y", scope: !1691, file: !1645, line: 42, type: !15, align: 1)
!1693 = !DILocalVariable(arg: 1, scope: !1682, file: !1645, line: 42, type: !1686)
!1694 = !DILocalVariable(arg: 3, scope: !1682, file: !1645, line: 42, type: !72)
!1695 = !DILocation(line: 42, column: 30, scope: !1682)
!1696 = !DILocation(line: 42, column: 31, scope: !1682)
!1697 = !DILocation(line: 42, column: 34, scope: !1682)
!1698 = !DILocation(line: 42, column: 36, scope: !1682)
!1699 = !DILocation(line: 42, column: 36, scope: !1691)
!1700 = !DILocation(line: 42, column: 40, scope: !1682)
!1701 = !DILocation(line: 42, column: 40, scope: !1691)
!1702 = !DILocation(line: 42, column: 48, scope: !1691)
!1703 = !DILocation(line: 42, column: 44, scope: !1691)
!1704 = !DILocation(line: 42, column: 43, scope: !1682)
!1705 = distinct !DISubprogram(name: "advance<[u8]>", linkageName: "_ZN4core3num7dec2flt6common9ByteSlice7advance17h22a15b2890fa2986E", scope: !1646, file: !1645, line: 47, type: !1706, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1656, retainedNodes: !1708)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{!494, !494, !9}
!1708 = !{!1709, !1710}
!1709 = !DILocalVariable(name: "self", arg: 1, scope: !1705, file: !1645, line: 47, type: !494)
!1710 = !DILocalVariable(name: "n", arg: 2, scope: !1705, file: !1645, line: 47, type: !9)
!1711 = !DILocation(line: 47, column: 16, scope: !1705)
!1712 = !DILocation(line: 47, column: 23, scope: !1705)
!1713 = !DILocalVariable(name: "index", scope: !1714, file: !1645, line: 48, type: !498, align: 8)
!1714 = !DILexicalBlockFile(scope: !1715, file: !1645, discriminator: 0)
!1715 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hb24eeb5137b4031cE", scope: !1716, file: !268, line: 17, type: !1717, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1721, retainedNodes: !1719)
!1716 = !DINamespace(name: "{impl#0}", scope: !270)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{!494, !494, !498, !501}
!1719 = !{!1720, !1713}
!1720 = !DILocalVariable(name: "self", scope: !1714, file: !1645, line: 48, type: !494, align: 8)
!1721 = !{!99, !1722}
!1722 = !DITemplateTypeParameter(name: "I", type: !498)
!1723 = !DILocation(line: 48, column: 10, scope: !1714, inlinedAt: !1724)
!1724 = !DILocation(line: 48, column: 10, scope: !1705)
!1725 = !DILocation(line: 48, column: 24, scope: !1705)
!1726 = !DILocation(line: 49, column: 6, scope: !1705)
!1727 = distinct !DISubprogram(name: "compute_float<f64>", linkageName: "_ZN4core3num7dec2flt6lemire13compute_float17h2e3e94e8803c6d32E", scope: !1729, file: !1728, line: 27, type: !1730, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1323, retainedNodes: !1733)
!1728 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/dec2flt/lemire.rs", directory: "", checksumkind: CSK_MD5, checksum: "2d4d6a51b9fdd5faa8317181eb388c28")
!1729 = !DINamespace(name: "lemire", scope: !45)
!1730 = !DISubroutineType(types: !1731)
!1731 = !{!1112, !1732, !82}
!1732 = !DIBasicType(name: "i64", size: 64, encoding: DW_ATE_signed)
!1733 = !{!1734, !1735, !1736, !1738, !1740, !1742, !1744, !1746, !1747, !1749, !1751, !1753}
!1734 = !DILocalVariable(name: "q", arg: 1, scope: !1727, file: !1728, line: 27, type: !1732)
!1735 = !DILocalVariable(name: "w", arg: 2, scope: !1727, file: !1728, line: 27, type: !82)
!1736 = !DILocalVariable(name: "fp_zero", scope: !1737, file: !1728, line: 28, type: !1112, align: 8)
!1737 = distinct !DILexicalBlock(scope: !1727, file: !1728, line: 28, column: 5)
!1738 = !DILocalVariable(name: "fp_inf", scope: !1739, file: !1728, line: 29, type: !1112, align: 8)
!1739 = distinct !DILexicalBlock(scope: !1737, file: !1728, line: 29, column: 5)
!1740 = !DILocalVariable(name: "fp_error", scope: !1741, file: !1728, line: 30, type: !1112, align: 8)
!1741 = distinct !DILexicalBlock(scope: !1739, file: !1728, line: 30, column: 5)
!1742 = !DILocalVariable(name: "lz", scope: !1743, file: !1728, line: 39, type: !391, align: 4)
!1743 = distinct !DILexicalBlock(scope: !1741, file: !1728, line: 39, column: 5)
!1744 = !DILocalVariable(name: "lo", scope: !1745, file: !1728, line: 41, type: !82, align: 8)
!1745 = distinct !DILexicalBlock(scope: !1743, file: !1728, line: 41, column: 5)
!1746 = !DILocalVariable(name: "hi", scope: !1745, file: !1728, line: 41, type: !82, align: 8)
!1747 = !DILocalVariable(name: "inside_safe_exponent", scope: !1748, file: !1728, line: 58, type: !918, align: 1)
!1748 = distinct !DILexicalBlock(scope: !1745, file: !1728, line: 58, column: 9)
!1749 = !DILocalVariable(name: "upperbit", scope: !1750, file: !1728, line: 63, type: !683, align: 4)
!1750 = distinct !DILexicalBlock(scope: !1745, file: !1728, line: 63, column: 5)
!1751 = !DILocalVariable(name: "mantissa", scope: !1752, file: !1728, line: 64, type: !82, align: 8)
!1752 = distinct !DILexicalBlock(scope: !1750, file: !1728, line: 64, column: 5)
!1753 = !DILocalVariable(name: "power2", scope: !1754, file: !1728, line: 65, type: !683, align: 4)
!1754 = distinct !DILexicalBlock(scope: !1752, file: !1728, line: 65, column: 5)
!1755 = !DILocation(line: 27, column: 35, scope: !1727)
!1756 = !DILocation(line: 27, column: 43, scope: !1727)
!1757 = !DILocation(line: 58, column: 13, scope: !1748)
!1758 = !DILocation(line: 64, column: 9, scope: !1752)
!1759 = !DILocation(line: 65, column: 9, scope: !1754)
!1760 = !DILocation(line: 28, column: 19, scope: !1727)
!1761 = !DILocation(line: 28, column: 9, scope: !1737)
!1762 = !DILocation(line: 29, column: 18, scope: !1737)
!1763 = !DILocation(line: 29, column: 9, scope: !1739)
!1764 = !DILocation(line: 30, column: 20, scope: !1739)
!1765 = !DILocation(line: 30, column: 9, scope: !1741)
!1766 = !DILocation(line: 33, column: 8, scope: !1741)
!1767 = !DILocation(line: 33, column: 18, scope: !1741)
!1768 = !DILocation(line: 35, column: 15, scope: !1741)
!1769 = !DILocation(line: 34, column: 16, scope: !1741)
!1770 = !DILocation(line: 34, column: 9, scope: !1741)
!1771 = !DILocation(line: 1, column: 1, scope: !1772)
!1772 = !DILexicalBlockFile(scope: !1741, file: !1223, discriminator: 0)
!1773 = !DILocation(line: 39, column: 14, scope: !1741)
!1774 = !DILocalVariable(name: "self", scope: !1775, file: !1728, line: 39, type: !82, align: 8)
!1775 = !DILexicalBlockFile(scope: !1776, file: !1728, discriminator: 0)
!1776 = distinct !DISubprogram(name: "leading_zeros", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$13leading_zeros17h1df984c15be5a014E", scope: !1057, file: !1056, line: 126, type: !1777, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !1779)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{!391, !82}
!1779 = !{!1774}
!1780 = !DILocation(line: 39, column: 14, scope: !1775, inlinedAt: !1773)
!1781 = !DILocation(line: 36, column: 16, scope: !1741)
!1782 = !DILocation(line: 115, column: 2, scope: !1727)
!1783 = !DILocation(line: 39, column: 9, scope: !1743)
!1784 = !DILocation(line: 40, column: 5, scope: !1743)
!1785 = !DILocation(line: 41, column: 46, scope: !1743)
!1786 = !DILocation(line: 41, column: 20, scope: !1743)
!1787 = !DILocation(line: 41, column: 10, scope: !1743)
!1788 = !DILocation(line: 41, column: 10, scope: !1745)
!1789 = !DILocation(line: 41, column: 14, scope: !1743)
!1790 = !DILocation(line: 41, column: 14, scope: !1745)
!1791 = !DILocation(line: 42, column: 8, scope: !1745)
!1792 = !DILocation(line: 58, column: 36, scope: !1745)
!1793 = !DILocation(line: 42, column: 5, scope: !1745)
!1794 = !DILocation(line: 63, column: 20, scope: !1745)
!1795 = !DILocation(line: 63, column: 9, scope: !1750)
!1796 = !DILocation(line: 64, column: 31, scope: !1750)
!1797 = !DILocation(line: 64, column: 30, scope: !1750)
!1798 = !DILocation(line: 64, column: 24, scope: !1750)
!1799 = !DILocation(line: 65, column: 28, scope: !1752)
!1800 = !DILocation(line: 65, column: 22, scope: !1752)
!1801 = !DILocation(line: 58, column: 50, scope: !1745)
!1802 = !DILocation(line: 59, column: 13, scope: !1748)
!1803 = !DILocation(line: 59, column: 12, scope: !1748)
!1804 = !DILocation(line: 60, column: 20, scope: !1748)
!1805 = !DILocation(line: 1, column: 1, scope: !1806)
!1806 = !DILexicalBlockFile(scope: !1745, file: !1223, discriminator: 0)
!1807 = !DILocation(line: 66, column: 8, scope: !1754)
!1808 = !DILocation(line: 89, column: 8, scope: !1754)
!1809 = !DILocation(line: 67, column: 13, scope: !1754)
!1810 = !DILocation(line: 67, column: 12, scope: !1754)
!1811 = !DILocation(line: 72, column: 23, scope: !1754)
!1812 = !DILocation(line: 72, column: 22, scope: !1754)
!1813 = !DILocation(line: 72, column: 9, scope: !1754)
!1814 = !DILocation(line: 73, column: 21, scope: !1754)
!1815 = !DILocation(line: 73, column: 9, scope: !1754)
!1816 = !DILocation(line: 74, column: 9, scope: !1754)
!1817 = !DILocation(line: 75, column: 19, scope: !1754)
!1818 = !DILocation(line: 75, column: 18, scope: !1754)
!1819 = !DILocation(line: 75, column: 9, scope: !1754)
!1820 = !DILocation(line: 76, column: 30, scope: !1754)
!1821 = !DILocation(line: 76, column: 43, scope: !1754)
!1822 = !DILocation(line: 76, column: 16, scope: !1754)
!1823 = !DILocation(line: 76, column: 9, scope: !1754)
!1824 = !DILocation(line: 69, column: 20, scope: !1754)
!1825 = !DILocation(line: 1, column: 1, scope: !1826)
!1826 = !DILexicalBlockFile(scope: !1754, file: !1223, discriminator: 0)
!1827 = !DILocation(line: 90, column: 12, scope: !1754)
!1828 = !DILocation(line: 91, column: 12, scope: !1754)
!1829 = !DILocation(line: 92, column: 12, scope: !1754)
!1830 = !DILocation(line: 93, column: 13, scope: !1754)
!1831 = !DILocation(line: 93, column: 26, scope: !1754)
!1832 = !DILocation(line: 93, column: 25, scope: !1754)
!1833 = !DILocation(line: 93, column: 12, scope: !1754)
!1834 = !DILocation(line: 99, column: 17, scope: !1754)
!1835 = !DILocation(line: 99, column: 5, scope: !1754)
!1836 = !DILocation(line: 100, column: 5, scope: !1754)
!1837 = !DILocation(line: 101, column: 8, scope: !1754)
!1838 = !DILocation(line: 96, column: 9, scope: !1754)
!1839 = !DILocation(line: 89, column: 5, scope: !1754)
!1840 = !DILocation(line: 109, column: 5, scope: !1754)
!1841 = !DILocation(line: 110, column: 8, scope: !1754)
!1842 = !DILocation(line: 105, column: 9, scope: !1754)
!1843 = !DILocation(line: 106, column: 9, scope: !1754)
!1844 = !DILocation(line: 101, column: 5, scope: !1754)
!1845 = !DILocation(line: 114, column: 19, scope: !1754)
!1846 = !DILocation(line: 114, column: 32, scope: !1754)
!1847 = !DILocation(line: 114, column: 5, scope: !1754)
!1848 = !DILocation(line: 112, column: 16, scope: !1754)
!1849 = distinct !DISubprogram(name: "compute_float<f32>", linkageName: "_ZN4core3num7dec2flt6lemire13compute_float17h7c09984d6cd4e0c3E", scope: !1729, file: !1728, line: 27, type: !1730, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1201, retainedNodes: !1850)
!1850 = !{!1851, !1852, !1853, !1855, !1857, !1859, !1861, !1863, !1864, !1866, !1868, !1870}
!1851 = !DILocalVariable(name: "q", arg: 1, scope: !1849, file: !1728, line: 27, type: !1732)
!1852 = !DILocalVariable(name: "w", arg: 2, scope: !1849, file: !1728, line: 27, type: !82)
!1853 = !DILocalVariable(name: "fp_zero", scope: !1854, file: !1728, line: 28, type: !1112, align: 8)
!1854 = distinct !DILexicalBlock(scope: !1849, file: !1728, line: 28, column: 5)
!1855 = !DILocalVariable(name: "fp_inf", scope: !1856, file: !1728, line: 29, type: !1112, align: 8)
!1856 = distinct !DILexicalBlock(scope: !1854, file: !1728, line: 29, column: 5)
!1857 = !DILocalVariable(name: "fp_error", scope: !1858, file: !1728, line: 30, type: !1112, align: 8)
!1858 = distinct !DILexicalBlock(scope: !1856, file: !1728, line: 30, column: 5)
!1859 = !DILocalVariable(name: "lz", scope: !1860, file: !1728, line: 39, type: !391, align: 4)
!1860 = distinct !DILexicalBlock(scope: !1858, file: !1728, line: 39, column: 5)
!1861 = !DILocalVariable(name: "lo", scope: !1862, file: !1728, line: 41, type: !82, align: 8)
!1862 = distinct !DILexicalBlock(scope: !1860, file: !1728, line: 41, column: 5)
!1863 = !DILocalVariable(name: "hi", scope: !1862, file: !1728, line: 41, type: !82, align: 8)
!1864 = !DILocalVariable(name: "inside_safe_exponent", scope: !1865, file: !1728, line: 58, type: !918, align: 1)
!1865 = distinct !DILexicalBlock(scope: !1862, file: !1728, line: 58, column: 9)
!1866 = !DILocalVariable(name: "upperbit", scope: !1867, file: !1728, line: 63, type: !683, align: 4)
!1867 = distinct !DILexicalBlock(scope: !1862, file: !1728, line: 63, column: 5)
!1868 = !DILocalVariable(name: "mantissa", scope: !1869, file: !1728, line: 64, type: !82, align: 8)
!1869 = distinct !DILexicalBlock(scope: !1867, file: !1728, line: 64, column: 5)
!1870 = !DILocalVariable(name: "power2", scope: !1871, file: !1728, line: 65, type: !683, align: 4)
!1871 = distinct !DILexicalBlock(scope: !1869, file: !1728, line: 65, column: 5)
!1872 = !DILocation(line: 27, column: 35, scope: !1849)
!1873 = !DILocation(line: 27, column: 43, scope: !1849)
!1874 = !DILocation(line: 58, column: 13, scope: !1865)
!1875 = !DILocation(line: 64, column: 9, scope: !1869)
!1876 = !DILocation(line: 65, column: 9, scope: !1871)
!1877 = !DILocation(line: 28, column: 19, scope: !1849)
!1878 = !DILocation(line: 28, column: 9, scope: !1854)
!1879 = !DILocation(line: 29, column: 18, scope: !1854)
!1880 = !DILocation(line: 29, column: 9, scope: !1856)
!1881 = !DILocation(line: 30, column: 20, scope: !1856)
!1882 = !DILocation(line: 30, column: 9, scope: !1858)
!1883 = !DILocation(line: 33, column: 8, scope: !1858)
!1884 = !DILocation(line: 33, column: 18, scope: !1858)
!1885 = !DILocation(line: 35, column: 15, scope: !1858)
!1886 = !DILocation(line: 34, column: 16, scope: !1858)
!1887 = !DILocation(line: 34, column: 9, scope: !1858)
!1888 = !DILocation(line: 1, column: 1, scope: !1889)
!1889 = !DILexicalBlockFile(scope: !1858, file: !1223, discriminator: 0)
!1890 = !DILocation(line: 39, column: 14, scope: !1858)
!1891 = !DILocalVariable(name: "self", scope: !1892, file: !1728, line: 39, type: !82, align: 8)
!1892 = !DILexicalBlockFile(scope: !1893, file: !1728, discriminator: 0)
!1893 = distinct !DISubprogram(name: "leading_zeros", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$13leading_zeros17h1df984c15be5a014E", scope: !1057, file: !1056, line: 126, type: !1777, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !1894)
!1894 = !{!1891}
!1895 = !DILocation(line: 39, column: 14, scope: !1892, inlinedAt: !1890)
!1896 = !DILocation(line: 36, column: 16, scope: !1858)
!1897 = !DILocation(line: 115, column: 2, scope: !1849)
!1898 = !DILocation(line: 39, column: 9, scope: !1860)
!1899 = !DILocation(line: 40, column: 5, scope: !1860)
!1900 = !DILocation(line: 41, column: 46, scope: !1860)
!1901 = !DILocation(line: 41, column: 20, scope: !1860)
!1902 = !DILocation(line: 41, column: 10, scope: !1860)
!1903 = !DILocation(line: 41, column: 10, scope: !1862)
!1904 = !DILocation(line: 41, column: 14, scope: !1860)
!1905 = !DILocation(line: 41, column: 14, scope: !1862)
!1906 = !DILocation(line: 42, column: 8, scope: !1862)
!1907 = !DILocation(line: 58, column: 36, scope: !1862)
!1908 = !DILocation(line: 42, column: 5, scope: !1862)
!1909 = !DILocation(line: 63, column: 20, scope: !1862)
!1910 = !DILocation(line: 63, column: 9, scope: !1867)
!1911 = !DILocation(line: 64, column: 31, scope: !1867)
!1912 = !DILocation(line: 64, column: 30, scope: !1867)
!1913 = !DILocation(line: 64, column: 24, scope: !1867)
!1914 = !DILocation(line: 65, column: 28, scope: !1869)
!1915 = !DILocation(line: 65, column: 22, scope: !1869)
!1916 = !DILocation(line: 58, column: 50, scope: !1862)
!1917 = !DILocation(line: 59, column: 13, scope: !1865)
!1918 = !DILocation(line: 59, column: 12, scope: !1865)
!1919 = !DILocation(line: 60, column: 20, scope: !1865)
!1920 = !DILocation(line: 1, column: 1, scope: !1921)
!1921 = !DILexicalBlockFile(scope: !1862, file: !1223, discriminator: 0)
!1922 = !DILocation(line: 66, column: 8, scope: !1871)
!1923 = !DILocation(line: 89, column: 8, scope: !1871)
!1924 = !DILocation(line: 67, column: 13, scope: !1871)
!1925 = !DILocation(line: 67, column: 12, scope: !1871)
!1926 = !DILocation(line: 72, column: 23, scope: !1871)
!1927 = !DILocation(line: 72, column: 22, scope: !1871)
!1928 = !DILocation(line: 72, column: 9, scope: !1871)
!1929 = !DILocation(line: 73, column: 21, scope: !1871)
!1930 = !DILocation(line: 73, column: 9, scope: !1871)
!1931 = !DILocation(line: 74, column: 9, scope: !1871)
!1932 = !DILocation(line: 75, column: 19, scope: !1871)
!1933 = !DILocation(line: 75, column: 18, scope: !1871)
!1934 = !DILocation(line: 75, column: 9, scope: !1871)
!1935 = !DILocation(line: 76, column: 30, scope: !1871)
!1936 = !DILocation(line: 76, column: 43, scope: !1871)
!1937 = !DILocation(line: 76, column: 16, scope: !1871)
!1938 = !DILocation(line: 76, column: 9, scope: !1871)
!1939 = !DILocation(line: 69, column: 20, scope: !1871)
!1940 = !DILocation(line: 1, column: 1, scope: !1941)
!1941 = !DILexicalBlockFile(scope: !1871, file: !1223, discriminator: 0)
!1942 = !DILocation(line: 90, column: 12, scope: !1871)
!1943 = !DILocation(line: 91, column: 12, scope: !1871)
!1944 = !DILocation(line: 92, column: 12, scope: !1871)
!1945 = !DILocation(line: 93, column: 13, scope: !1871)
!1946 = !DILocation(line: 93, column: 26, scope: !1871)
!1947 = !DILocation(line: 93, column: 25, scope: !1871)
!1948 = !DILocation(line: 93, column: 12, scope: !1871)
!1949 = !DILocation(line: 99, column: 17, scope: !1871)
!1950 = !DILocation(line: 99, column: 5, scope: !1871)
!1951 = !DILocation(line: 100, column: 5, scope: !1871)
!1952 = !DILocation(line: 101, column: 8, scope: !1871)
!1953 = !DILocation(line: 96, column: 9, scope: !1871)
!1954 = !DILocation(line: 89, column: 5, scope: !1871)
!1955 = !DILocation(line: 109, column: 5, scope: !1871)
!1956 = !DILocation(line: 110, column: 8, scope: !1871)
!1957 = !DILocation(line: 105, column: 9, scope: !1871)
!1958 = !DILocation(line: 106, column: 9, scope: !1871)
!1959 = !DILocation(line: 101, column: 5, scope: !1871)
!1960 = !DILocation(line: 114, column: 19, scope: !1871)
!1961 = !DILocation(line: 114, column: 32, scope: !1871)
!1962 = !DILocation(line: 114, column: 5, scope: !1871)
!1963 = !DILocation(line: 112, column: 16, scope: !1871)
!1964 = distinct !DISubprogram(name: "is_fast_path<f64>", linkageName: "_ZN4core3num7dec2flt6number6Number12is_fast_path17hc8db93a1472684d6E", scope: !1966, file: !1965, line: 36, type: !1973, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1323, retainedNodes: !1976)
!1965 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/dec2flt/number.rs", directory: "", checksumkind: CSK_MD5, checksum: "928caa1ed1347c650a099a1295d0fcd9")
!1966 = !DICompositeType(tag: DW_TAG_structure_type, name: "Number", scope: !1967, file: !2, size: 192, align: 64, elements: !1968, templateParams: !19, identifier: "54388208defee89ffda07b0b95b1413f")
!1967 = !DINamespace(name: "number", scope: !45)
!1968 = !{!1969, !1970, !1971, !1972}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "exponent", scope: !1966, file: !2, baseType: !1732, size: 64, align: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "mantissa", scope: !1966, file: !2, baseType: !82, size: 64, align: 64, offset: 64)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "negative", scope: !1966, file: !2, baseType: !918, size: 8, align: 8, offset: 128)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "many_digits", scope: !1966, file: !2, baseType: !918, size: 8, align: 8, offset: 136)
!1973 = !DISubroutineType(types: !1974)
!1974 = !{!918, !1975}
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::num::dec2flt::number::Number", baseType: !1966, size: 64, align: 64, dwarfAddressSpace: 0)
!1976 = !{!1977}
!1977 = !DILocalVariable(name: "self", arg: 1, scope: !1964, file: !1965, line: 36, type: !1975)
!1978 = !DILocation(line: 36, column: 34, scope: !1964)
!1979 = !DILocation(line: 37, column: 38, scope: !1964)
!1980 = !DILocation(line: 37, column: 9, scope: !1964)
!1981 = !DILocation(line: 38, column: 16, scope: !1964)
!1982 = !DILocation(line: 39, column: 16, scope: !1964)
!1983 = !DILocation(line: 40, column: 17, scope: !1964)
!1984 = !DILocation(line: 40, column: 16, scope: !1964)
!1985 = !DILocation(line: 41, column: 6, scope: !1964)
!1986 = distinct !DISubprogram(name: "is_fast_path<f32>", linkageName: "_ZN4core3num7dec2flt6number6Number12is_fast_path17hf69284857d3064b3E", scope: !1966, file: !1965, line: 36, type: !1973, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1201, retainedNodes: !1987)
!1987 = !{!1988}
!1988 = !DILocalVariable(name: "self", arg: 1, scope: !1986, file: !1965, line: 36, type: !1975)
!1989 = !DILocation(line: 36, column: 34, scope: !1986)
!1990 = !DILocation(line: 37, column: 38, scope: !1986)
!1991 = !DILocation(line: 37, column: 9, scope: !1986)
!1992 = !DILocation(line: 38, column: 16, scope: !1986)
!1993 = !DILocation(line: 39, column: 16, scope: !1986)
!1994 = !DILocation(line: 40, column: 17, scope: !1986)
!1995 = !DILocation(line: 40, column: 16, scope: !1986)
!1996 = !DILocation(line: 41, column: 6, scope: !1986)
!1997 = distinct !DISubprogram(name: "try_fast_path<f64>", linkageName: "_ZN4core3num7dec2flt6number6Number13try_fast_path17h2a5d4d0c7acf4bcaE", scope: !1966, file: !1965, line: 52, type: !1998, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1323, retainedNodes: !2000)
!1998 = !DISubroutineType(types: !1999)
!1999 = !{!1448, !1975}
!2000 = !{!2001, !2002, !2004, !2006, !2008, !2010, !2012, !2014}
!2001 = !DILocalVariable(name: "self", arg: 1, scope: !1997, file: !1965, line: 52, type: !1975)
!2002 = !DILocalVariable(name: "_cw", scope: !2003, file: !1965, line: 58, type: !7, align: 1)
!2003 = distinct !DILexicalBlock(scope: !1997, file: !1965, line: 58, column: 9)
!2004 = !DILocalVariable(name: "value", scope: !2005, file: !1965, line: 61, type: !697, align: 8)
!2005 = distinct !DILexicalBlock(scope: !2003, file: !1965, line: 61, column: 13)
!2006 = !DILocalVariable(name: "value", scope: !2007, file: !1965, line: 63, type: !697, align: 8)
!2007 = distinct !DILexicalBlock(scope: !2003, file: !1965, line: 63, column: 17)
!2008 = !DILocalVariable(name: "shift", scope: !2009, file: !1965, line: 71, type: !1732, align: 8)
!2009 = distinct !DILexicalBlock(scope: !2003, file: !1965, line: 71, column: 17)
!2010 = !DILocalVariable(name: "mantissa", scope: !2011, file: !1965, line: 72, type: !82, align: 8)
!2011 = distinct !DILexicalBlock(scope: !2009, file: !1965, line: 72, column: 17)
!2012 = !DILocalVariable(name: "residual", scope: !2013, file: !1965, line: 72, type: !408, align: 1)
!2013 = distinct !DILexicalBlock(scope: !2009, file: !1965, line: 72, column: 84)
!2014 = !DILocalVariable(name: "val", scope: !2015, file: !1965, line: 72, type: !82, align: 8)
!2015 = distinct !DILexicalBlock(scope: !2009, file: !1965, line: 72, column: 32)
!2016 = !DILocation(line: 52, column: 39, scope: !1997)
!2017 = !DILocation(line: 58, column: 13, scope: !2003)
!2018 = !DILocation(line: 61, column: 17, scope: !2005)
!2019 = !DILocalVariable(name: "self", scope: !2020, file: !1965, line: 72, type: !1060, align: 8)
!2020 = !DILexicalBlockFile(scope: !2021, file: !1965, discriminator: 0)
!2021 = distinct !DISubprogram(name: "branch<u64>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h0528fcda87503ea9E", scope: !429, file: !428, line: 2290, type: !2022, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1066, retainedNodes: !2039)
!2022 = !DISubroutineType(types: !2023)
!2023 = !{!2024, !1060}
!2024 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, u64>", scope: !220, file: !2, size: 128, align: 64, elements: !2025, templateParams: !19, identifier: "49076c015d78119f1619083fd67eb356")
!2025 = !{!2026}
!2026 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2024, file: !2, size: 128, align: 64, elements: !2027, templateParams: !19, identifier: "f9804a8a79fdb4524e0cad667f588842", discriminator: !2038)
!2027 = !{!2028, !2034}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !2026, file: !2, baseType: !2029, size: 128, align: 64, extraData: i64 0)
!2029 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !2024, file: !2, size: 128, align: 64, elements: !2030, templateParams: !2032, identifier: "33531c3587022bbf30871aabe3bb49d5")
!2030 = !{!2031}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2029, file: !2, baseType: !82, size: 64, align: 64, offset: 64)
!2032 = !{!441, !2033}
!2033 = !DITemplateTypeParameter(name: "C", type: !82)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !2026, file: !2, baseType: !2035, size: 128, align: 64, extraData: i64 1)
!2035 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !2024, file: !2, size: 128, align: 64, elements: !2036, templateParams: !2032, identifier: "5089234f2c43cbc28ed1c0928dc314aa")
!2036 = !{!2037}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2035, file: !2, baseType: !408, align: 8, offset: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, scope: !2024, file: !2, baseType: !82, size: 64, align: 64, flags: DIFlagArtificial)
!2039 = !{!2019, !2040}
!2040 = !DILocalVariable(name: "v", scope: !2041, file: !1965, line: 72, type: !82, align: 8)
!2041 = !DILexicalBlockFile(scope: !2042, file: !1965, discriminator: 0)
!2042 = distinct !DILexicalBlock(scope: !2021, file: !428, line: 2292, column: 13)
!2043 = !DILocation(line: 72, column: 32, scope: !2020, inlinedAt: !2044)
!2044 = !DILocation(line: 72, column: 32, scope: !2009)
!2045 = !DILocation(line: 72, column: 84, scope: !2013)
!2046 = !DILocalVariable(name: "residual", scope: !2047, file: !1965, line: 72, type: !408, align: 1)
!2047 = !DILexicalBlockFile(scope: !2048, file: !1965, discriminator: 0)
!2048 = distinct !DISubprogram(name: "from_residual<f64>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h84710dc799fc4f59E", scope: !471, file: !428, line: 2302, type: !2049, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1138, retainedNodes: !2051)
!2049 = !DISubroutineType(types: !2050)
!2050 = !{!1448, !408}
!2051 = !{!2046}
!2052 = !DILocation(line: 72, column: 32, scope: !2047, inlinedAt: !2053)
!2053 = !DILocation(line: 72, column: 32, scope: !2013)
!2054 = !DILocation(line: 58, column: 19, scope: !1997)
!2055 = !DILocation(line: 60, column: 12, scope: !2003)
!2056 = !DILocation(line: 83, column: 13, scope: !2003)
!2057 = !DILocation(line: 60, column: 9, scope: !2003)
!2058 = !DILocation(line: 61, column: 32, scope: !2003)
!2059 = !DILocation(line: 71, column: 29, scope: !2003)
!2060 = !DILocation(line: 71, column: 21, scope: !2009)
!2061 = !DILocation(line: 72, column: 58, scope: !2009)
!2062 = !DILocation(line: 63, column: 41, scope: !2003)
!2063 = !DILocation(line: 63, column: 29, scope: !2003)
!2064 = !DILocation(line: 63, column: 21, scope: !2007)
!2065 = !DILocation(line: 64, column: 20, scope: !2007)
!2066 = !DILocation(line: 67, column: 48, scope: !2007)
!2067 = !DILocation(line: 67, column: 29, scope: !2007)
!2068 = !DILocation(line: 65, column: 50, scope: !2007)
!2069 = !DILocation(line: 65, column: 48, scope: !2007)
!2070 = !DILocation(line: 65, column: 29, scope: !2007)
!2071 = !DILocation(line: 65, column: 21, scope: !2007)
!2072 = !DILocation(line: 64, column: 17, scope: !2007)
!2073 = !DILocation(line: 61, column: 29, scope: !2003)
!2074 = !DILocation(line: 67, column: 21, scope: !2007)
!2075 = !DILocation(line: 78, column: 16, scope: !2005)
!2076 = !DILocation(line: 72, column: 32, scope: !2041, inlinedAt: !2044)
!2077 = !DILocation(line: 72, column: 32, scope: !2015)
!2078 = !DILocation(line: 72, column: 21, scope: !2011)
!2079 = !DILocation(line: 73, column: 20, scope: !2011)
!2080 = !DILocation(line: 1, column: 1, scope: !2081)
!2081 = !DILexicalBlockFile(scope: !2009, file: !1223, discriminator: 0)
!2082 = !DILocation(line: 85, column: 6, scope: !1997)
!2083 = !DILocation(line: 76, column: 17, scope: !2011)
!2084 = !DILocation(line: 74, column: 28, scope: !2011)
!2085 = !DILocation(line: 1, column: 1, scope: !2086)
!2086 = !DILexicalBlockFile(scope: !2011, file: !1223, discriminator: 0)
!2087 = !DILocation(line: 76, column: 41, scope: !2011)
!2088 = !DILocation(line: 81, column: 18, scope: !2005)
!2089 = !DILocation(line: 81, column: 13, scope: !2005)
!2090 = !DILocation(line: 79, column: 26, scope: !2005)
!2091 = !DILocation(line: 79, column: 25, scope: !2005)
!2092 = !DILocation(line: 79, column: 17, scope: !2005)
!2093 = !DILocation(line: 78, column: 13, scope: !2005)
!2094 = distinct !DISubprogram(name: "try_fast_path<f32>", linkageName: "_ZN4core3num7dec2flt6number6Number13try_fast_path17hcb70d053bec2fd2bE", scope: !1966, file: !1965, line: 52, type: !2095, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1201, retainedNodes: !2097)
!2095 = !DISubroutineType(types: !2096)
!2096 = !{!1485, !1975}
!2097 = !{!2098, !2099, !2101, !2103, !2105, !2107, !2109, !2111}
!2098 = !DILocalVariable(name: "self", arg: 1, scope: !2094, file: !1965, line: 52, type: !1975)
!2099 = !DILocalVariable(name: "_cw", scope: !2100, file: !1965, line: 58, type: !7, align: 1)
!2100 = distinct !DILexicalBlock(scope: !2094, file: !1965, line: 58, column: 9)
!2101 = !DILocalVariable(name: "value", scope: !2102, file: !1965, line: 61, type: !682, align: 4)
!2102 = distinct !DILexicalBlock(scope: !2100, file: !1965, line: 61, column: 13)
!2103 = !DILocalVariable(name: "value", scope: !2104, file: !1965, line: 63, type: !682, align: 4)
!2104 = distinct !DILexicalBlock(scope: !2100, file: !1965, line: 63, column: 17)
!2105 = !DILocalVariable(name: "shift", scope: !2106, file: !1965, line: 71, type: !1732, align: 8)
!2106 = distinct !DILexicalBlock(scope: !2100, file: !1965, line: 71, column: 17)
!2107 = !DILocalVariable(name: "mantissa", scope: !2108, file: !1965, line: 72, type: !82, align: 8)
!2108 = distinct !DILexicalBlock(scope: !2106, file: !1965, line: 72, column: 17)
!2109 = !DILocalVariable(name: "residual", scope: !2110, file: !1965, line: 72, type: !408, align: 1)
!2110 = distinct !DILexicalBlock(scope: !2106, file: !1965, line: 72, column: 84)
!2111 = !DILocalVariable(name: "val", scope: !2112, file: !1965, line: 72, type: !82, align: 8)
!2112 = distinct !DILexicalBlock(scope: !2106, file: !1965, line: 72, column: 32)
!2113 = !DILocation(line: 52, column: 39, scope: !2094)
!2114 = !DILocation(line: 58, column: 13, scope: !2100)
!2115 = !DILocation(line: 61, column: 17, scope: !2102)
!2116 = !DILocalVariable(name: "self", scope: !2117, file: !1965, line: 72, type: !1060, align: 8)
!2117 = !DILexicalBlockFile(scope: !2118, file: !1965, discriminator: 0)
!2118 = distinct !DISubprogram(name: "branch<u64>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h0528fcda87503ea9E", scope: !429, file: !428, line: 2290, type: !2022, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1066, retainedNodes: !2119)
!2119 = !{!2116, !2120}
!2120 = !DILocalVariable(name: "v", scope: !2121, file: !1965, line: 72, type: !82, align: 8)
!2121 = !DILexicalBlockFile(scope: !2122, file: !1965, discriminator: 0)
!2122 = distinct !DILexicalBlock(scope: !2118, file: !428, line: 2292, column: 13)
!2123 = !DILocation(line: 72, column: 32, scope: !2117, inlinedAt: !2124)
!2124 = !DILocation(line: 72, column: 32, scope: !2106)
!2125 = !DILocation(line: 72, column: 84, scope: !2110)
!2126 = !DILocalVariable(name: "residual", scope: !2127, file: !1965, line: 72, type: !408, align: 1)
!2127 = !DILexicalBlockFile(scope: !2128, file: !1965, discriminator: 0)
!2128 = distinct !DISubprogram(name: "from_residual<f32>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h90b4cf2ceb5a7e31E", scope: !471, file: !428, line: 2302, type: !2129, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1121, retainedNodes: !2131)
!2129 = !DISubroutineType(types: !2130)
!2130 = !{!1485, !408}
!2131 = !{!2126}
!2132 = !DILocation(line: 72, column: 32, scope: !2127, inlinedAt: !2133)
!2133 = !DILocation(line: 72, column: 32, scope: !2110)
!2134 = !DILocation(line: 58, column: 19, scope: !2094)
!2135 = !DILocation(line: 60, column: 12, scope: !2100)
!2136 = !DILocation(line: 83, column: 13, scope: !2100)
!2137 = !DILocation(line: 60, column: 9, scope: !2100)
!2138 = !DILocation(line: 61, column: 32, scope: !2100)
!2139 = !DILocation(line: 71, column: 29, scope: !2100)
!2140 = !DILocation(line: 71, column: 21, scope: !2106)
!2141 = !DILocation(line: 72, column: 58, scope: !2106)
!2142 = !DILocation(line: 63, column: 41, scope: !2100)
!2143 = !DILocation(line: 63, column: 29, scope: !2100)
!2144 = !DILocation(line: 63, column: 21, scope: !2104)
!2145 = !DILocation(line: 64, column: 20, scope: !2104)
!2146 = !DILocation(line: 67, column: 48, scope: !2104)
!2147 = !DILocation(line: 67, column: 29, scope: !2104)
!2148 = !DILocation(line: 65, column: 50, scope: !2104)
!2149 = !DILocation(line: 65, column: 48, scope: !2104)
!2150 = !DILocation(line: 65, column: 29, scope: !2104)
!2151 = !DILocation(line: 65, column: 21, scope: !2104)
!2152 = !DILocation(line: 64, column: 17, scope: !2104)
!2153 = !DILocation(line: 61, column: 29, scope: !2100)
!2154 = !DILocation(line: 67, column: 21, scope: !2104)
!2155 = !DILocation(line: 78, column: 16, scope: !2102)
!2156 = !DILocation(line: 72, column: 32, scope: !2121, inlinedAt: !2124)
!2157 = !DILocation(line: 72, column: 32, scope: !2112)
!2158 = !DILocation(line: 72, column: 21, scope: !2108)
!2159 = !DILocation(line: 73, column: 20, scope: !2108)
!2160 = !DILocation(line: 1, column: 1, scope: !2161)
!2161 = !DILexicalBlockFile(scope: !2106, file: !1223, discriminator: 0)
!2162 = !DILocation(line: 85, column: 6, scope: !2094)
!2163 = !DILocation(line: 76, column: 17, scope: !2108)
!2164 = !DILocation(line: 74, column: 28, scope: !2108)
!2165 = !DILocation(line: 1, column: 1, scope: !2166)
!2166 = !DILexicalBlockFile(scope: !2108, file: !1223, discriminator: 0)
!2167 = !DILocation(line: 76, column: 41, scope: !2108)
!2168 = !DILocation(line: 81, column: 18, scope: !2102)
!2169 = !DILocation(line: 81, column: 13, scope: !2102)
!2170 = !DILocation(line: 79, column: 26, scope: !2102)
!2171 = !DILocation(line: 79, column: 25, scope: !2102)
!2172 = !DILocation(line: 79, column: 17, scope: !2102)
!2173 = !DILocation(line: 78, column: 13, scope: !2102)
!2174 = distinct !DISubprogram(name: "dec2flt<f64>", linkageName: "_ZN4core3num7dec2flt7dec2flt17h88cc23508211652eE", scope: !45, file: !1109, line: 226, type: !1623, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1323, retainedNodes: !2175)
!2175 = !{!2176, !2177, !2179, !2181, !2183, !2185, !2187, !2189, !2191, !2193, !2195}
!2176 = !DILocalVariable(name: "s", arg: 1, scope: !2174, file: !1109, line: 226, type: !507)
!2177 = !DILocalVariable(name: "s", scope: !2178, file: !1109, line: 227, type: !494, align: 8)
!2178 = distinct !DILexicalBlock(scope: !2174, file: !1109, line: 227, column: 5)
!2179 = !DILocalVariable(name: "c", scope: !2180, file: !1109, line: 228, type: !15, align: 1)
!2180 = distinct !DILexicalBlock(scope: !2178, file: !1109, line: 228, column: 5)
!2181 = !DILocalVariable(name: "c", scope: !2182, file: !1109, line: 228, type: !15, align: 1)
!2182 = distinct !DILexicalBlock(scope: !2178, file: !1109, line: 228, column: 41)
!2183 = !DILocalVariable(name: "negative", scope: !2184, file: !1109, line: 233, type: !918, align: 1)
!2184 = distinct !DILexicalBlock(scope: !2180, file: !1109, line: 233, column: 5)
!2185 = !DILocalVariable(name: "num", scope: !2186, file: !1109, line: 241, type: !1966, align: 8)
!2186 = distinct !DILexicalBlock(scope: !2184, file: !1109, line: 241, column: 5)
!2187 = !DILocalVariable(name: "r", scope: !2188, file: !1109, line: 242, type: !1966, align: 8)
!2188 = distinct !DILexicalBlock(scope: !2184, file: !1109, line: 242, column: 9)
!2189 = !DILocalVariable(name: "value", scope: !2190, file: !1109, line: 243, type: !697, align: 8)
!2190 = distinct !DILexicalBlock(scope: !2184, file: !1109, line: 243, column: 9)
!2191 = !DILocalVariable(name: "value", scope: !2192, file: !1109, line: 246, type: !697, align: 8)
!2192 = distinct !DILexicalBlock(scope: !2186, file: !1109, line: 246, column: 51)
!2193 = !DILocalVariable(name: "fp", scope: !2194, file: !1109, line: 254, type: !1112, align: 8)
!2194 = distinct !DILexicalBlock(scope: !2186, file: !1109, line: 254, column: 5)
!2195 = !DILocalVariable(name: "float", scope: !2196, file: !1109, line: 264, type: !697, align: 8)
!2196 = distinct !DILexicalBlock(scope: !2194, file: !1109, line: 264, column: 5)
!2197 = !DILocation(line: 226, column: 29, scope: !2174)
!2198 = !DILocation(line: 227, column: 9, scope: !2178)
!2199 = !DILocation(line: 241, column: 9, scope: !2186)
!2200 = !DILocation(line: 242, column: 14, scope: !2188)
!2201 = !DILocation(line: 254, column: 9, scope: !2194)
!2202 = !DILocation(line: 264, column: 9, scope: !2196)
!2203 = !DILocation(line: 227, column: 17, scope: !2174)
!2204 = !DILocalVariable(name: "self", scope: !2205, file: !1109, line: 227, type: !507, align: 8)
!2205 = !DILexicalBlockFile(scope: !2206, file: !1109, discriminator: 0)
!2206 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !2208, file: !2207, line: 323, type: !2209, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2211)
!2207 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "dd49fcee40af5f348df1f9868b20cc92")
!2208 = !DINamespace(name: "{impl#0}", scope: !144)
!2209 = !DISubroutineType(types: !2210)
!2210 = !{!494, !507}
!2211 = !{!2204}
!2212 = !DILocation(line: 227, column: 17, scope: !2205, inlinedAt: !2203)
!2213 = !DILocation(line: 228, column: 31, scope: !2182)
!2214 = !DILocalVariable(name: "self", scope: !2215, file: !1109, line: 228, type: !494, align: 8)
!2215 = !DILexicalBlockFile(scope: !2216, file: !1109, discriminator: 0)
!2216 = distinct !DISubprogram(name: "first<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$5first17hc069721ea3b244a3E", scope: !1666, file: !1665, line: 171, type: !2217, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !2230)
!2217 = !DISubroutineType(types: !2218)
!2218 = !{!2219, !494}
!2219 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&u8>", scope: !64, file: !2, size: 64, align: 64, elements: !2220, templateParams: !19, identifier: "bbf278434900ebc767cf4d1ba91a7023")
!2220 = !{!2221}
!2221 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2219, file: !2, size: 64, align: 64, elements: !2222, templateParams: !19, identifier: "101fb69dcd65b49303b4d10b55dcffb", discriminator: !2229)
!2222 = !{!2223, !2225}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2221, file: !2, baseType: !2224, size: 64, align: 64, extraData: i64 0)
!2224 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2219, file: !2, size: 64, align: 64, elements: !19, templateParams: !104, identifier: "bd32561e41222bd8701ecbec194b1aa7")
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2221, file: !2, baseType: !2226, size: 64, align: 64)
!2226 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2219, file: !2, size: 64, align: 64, elements: !2227, templateParams: !104, identifier: "728806a049c182f2a5c33d7fd0303de1")
!2227 = !{!2228}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2226, file: !2, baseType: !75, size: 64, align: 64)
!2229 = !DIDerivedType(tag: DW_TAG_member, scope: !2219, file: !2, baseType: !82, size: 64, align: 64, flags: DIFlagArtificial)
!2230 = !{!2214, !2231}
!2231 = !DILocalVariable(name: "first", scope: !2232, file: !1109, line: 228, type: !75, align: 8)
!2232 = !DILexicalBlockFile(scope: !2233, file: !1109, discriminator: 0)
!2233 = distinct !DILexicalBlock(scope: !2216, file: !1665, line: 172, column: 35)
!2234 = !DILocation(line: 228, column: 31, scope: !2215, inlinedAt: !2213)
!2235 = !DILocation(line: 228, column: 31, scope: !2232, inlinedAt: !2213)
!2236 = !DILocation(line: 228, column: 20, scope: !2182)
!2237 = !DILocation(line: 228, column: 26, scope: !2182)
!2238 = !DILocation(line: 229, column: 9, scope: !2182)
!2239 = !DILocation(line: 228, column: 9, scope: !2180)
!2240 = !DILocation(line: 233, column: 20, scope: !2180)
!2241 = !DILocation(line: 233, column: 9, scope: !2184)
!2242 = !DILocation(line: 234, column: 8, scope: !2184)
!2243 = !DILocation(line: 231, column: 20, scope: !2178)
!2244 = !DILocation(line: 231, column: 16, scope: !2178)
!2245 = !DILocation(line: 1, column: 1, scope: !2246)
!2246 = !DILexicalBlockFile(scope: !2178, file: !1223, discriminator: 0)
!2247 = !DILocation(line: 269, column: 2, scope: !2174)
!2248 = !DILocation(line: 234, column: 21, scope: !2184)
!2249 = !DILocation(line: 237, column: 8, scope: !2184)
!2250 = !DILocalVariable(name: "self", scope: !2251, file: !1109, line: 237, type: !494, align: 8)
!2251 = !DILexicalBlockFile(scope: !2252, file: !1109, discriminator: 0)
!2252 = distinct !DISubprogram(name: "is_empty<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h8824a1258cf66c68E", scope: !1666, file: !1665, line: 152, type: !2253, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !2255)
!2253 = !DISubroutineType(types: !2254)
!2254 = !{!918, !494}
!2255 = !{!2250}
!2256 = !DILocation(line: 237, column: 8, scope: !2251, inlinedAt: !2249)
!2257 = !DILocation(line: 235, column: 13, scope: !2184)
!2258 = !DILocation(line: 235, column: 9, scope: !2184)
!2259 = !DILocation(line: 234, column: 5, scope: !2184)
!2260 = !DILocation(line: 238, column: 20, scope: !2184)
!2261 = !DILocation(line: 241, column: 34, scope: !2184)
!2262 = !DILocation(line: 241, column: 21, scope: !2184)
!2263 = !{i8 0, i8 3}
!2264 = !DILocation(line: 241, column: 15, scope: !2184)
!2265 = !DILocation(line: 243, column: 49, scope: !2184)
!2266 = !DILocation(line: 243, column: 35, scope: !2184)
!2267 = !DILocation(line: 242, column: 14, scope: !2184)
!2268 = !DILocation(line: 242, column: 20, scope: !2188)
!2269 = !DILocation(line: 246, column: 26, scope: !2192)
!2270 = !DILocation(line: 246, column: 12, scope: !2192)
!2271 = !DILocation(line: 246, column: 17, scope: !2192)
!2272 = !DILocation(line: 247, column: 16, scope: !2192)
!2273 = !DILocation(line: 1, column: 1, scope: !2274)
!2274 = !DILexicalBlockFile(scope: !2186, file: !1223, discriminator: 0)
!2275 = !DILocation(line: 254, column: 37, scope: !2186)
!2276 = !DILocation(line: 254, column: 51, scope: !2186)
!2277 = !DILocation(line: 254, column: 18, scope: !2186)
!2278 = !DILocation(line: 255, column: 8, scope: !2194)
!2279 = !DILocation(line: 255, column: 27, scope: !2194)
!2280 = !DILocation(line: 255, column: 40, scope: !2194)
!2281 = !DILocalVariable(name: "self", scope: !2282, file: !1109, line: 255, type: !2287, align: 8)
!2282 = !DILexicalBlockFile(scope: !2283, file: !1109, discriminator: 0)
!2283 = distinct !DISubprogram(name: "ne", linkageName: "_ZN77_$LT$core..num..dec2flt..common..BiasedFp$u20$as$u20$core..cmp..PartialEq$GT$2ne17h13c40f5d4be07ae3E", scope: !2284, file: !1645, line: 186, type: !2285, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2288)
!2284 = !DINamespace(name: "{impl#17}", scope: !1113)
!2285 = !DISubroutineType(types: !2286)
!2286 = !{!918, !2287, !2287}
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::num::dec2flt::common::BiasedFp", baseType: !1112, size: 64, align: 64, dwarfAddressSpace: 0)
!2288 = !{!2281, !2289}
!2289 = !DILocalVariable(name: "other", scope: !2282, file: !1109, line: 255, type: !2287, align: 8)
!2290 = !DILocation(line: 255, column: 40, scope: !2282, inlinedAt: !2280)
!2291 = !DILocation(line: 255, column: 65, scope: !2194)
!2292 = !DILocation(line: 255, column: 79, scope: !2194)
!2293 = !DILocation(line: 255, column: 46, scope: !2194)
!2294 = !DILocation(line: 260, column: 8, scope: !2194)
!2295 = !DILocation(line: 256, column: 9, scope: !2194)
!2296 = !DILocation(line: 255, column: 5, scope: !2194)
!2297 = !DILocation(line: 264, column: 45, scope: !2194)
!2298 = !DILocation(line: 264, column: 21, scope: !2194)
!2299 = !DILocation(line: 261, column: 39, scope: !2194)
!2300 = !DILocation(line: 261, column: 14, scope: !2194)
!2301 = !DILocation(line: 261, column: 9, scope: !2194)
!2302 = !DILocation(line: 260, column: 5, scope: !2194)
!2303 = !DILocation(line: 265, column: 8, scope: !2196)
!2304 = !DILocation(line: 268, column: 8, scope: !2196)
!2305 = !DILocation(line: 268, column: 5, scope: !2196)
!2306 = !DILocation(line: 266, column: 18, scope: !2196)
!2307 = !DILocation(line: 266, column: 17, scope: !2196)
!2308 = !DILocation(line: 266, column: 9, scope: !2196)
!2309 = !DILocation(line: 265, column: 5, scope: !2196)
!2310 = !DILocation(line: 1, column: 1, scope: !2311)
!2311 = !DILexicalBlockFile(scope: !2184, file: !1223, discriminator: 0)
!2312 = !DILocation(line: 243, column: 21, scope: !2184)
!2313 = !DILocation(line: 243, column: 26, scope: !2184)
!2314 = !DILocation(line: 243, column: 26, scope: !2190)
!2315 = !DILocation(line: 243, column: 72, scope: !2184)
!2316 = !DILocation(line: 244, column: 28, scope: !2184)
!2317 = !DILocation(line: 244, column: 24, scope: !2184)
!2318 = !DILocation(line: 244, column: 17, scope: !2184)
!2319 = !DILocation(line: 1, column: 1, scope: !2320)
!2320 = !DILexicalBlockFile(scope: !2180, file: !1223, discriminator: 0)
!2321 = !DILocation(line: 238, column: 16, scope: !2184)
!2322 = distinct !DISubprogram(name: "dec2flt<f32>", linkageName: "_ZN4core3num7dec2flt7dec2flt17hc410fe3c5ce74da5E", scope: !45, file: !1109, line: 226, type: !1596, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1201, retainedNodes: !2323)
!2323 = !{!2324, !2325, !2327, !2329, !2331, !2333, !2335, !2337, !2339, !2341, !2343}
!2324 = !DILocalVariable(name: "s", arg: 1, scope: !2322, file: !1109, line: 226, type: !507)
!2325 = !DILocalVariable(name: "s", scope: !2326, file: !1109, line: 227, type: !494, align: 8)
!2326 = distinct !DILexicalBlock(scope: !2322, file: !1109, line: 227, column: 5)
!2327 = !DILocalVariable(name: "c", scope: !2328, file: !1109, line: 228, type: !15, align: 1)
!2328 = distinct !DILexicalBlock(scope: !2326, file: !1109, line: 228, column: 5)
!2329 = !DILocalVariable(name: "c", scope: !2330, file: !1109, line: 228, type: !15, align: 1)
!2330 = distinct !DILexicalBlock(scope: !2326, file: !1109, line: 228, column: 41)
!2331 = !DILocalVariable(name: "negative", scope: !2332, file: !1109, line: 233, type: !918, align: 1)
!2332 = distinct !DILexicalBlock(scope: !2328, file: !1109, line: 233, column: 5)
!2333 = !DILocalVariable(name: "num", scope: !2334, file: !1109, line: 241, type: !1966, align: 8)
!2334 = distinct !DILexicalBlock(scope: !2332, file: !1109, line: 241, column: 5)
!2335 = !DILocalVariable(name: "r", scope: !2336, file: !1109, line: 242, type: !1966, align: 8)
!2336 = distinct !DILexicalBlock(scope: !2332, file: !1109, line: 242, column: 9)
!2337 = !DILocalVariable(name: "value", scope: !2338, file: !1109, line: 243, type: !682, align: 4)
!2338 = distinct !DILexicalBlock(scope: !2332, file: !1109, line: 243, column: 9)
!2339 = !DILocalVariable(name: "value", scope: !2340, file: !1109, line: 246, type: !682, align: 4)
!2340 = distinct !DILexicalBlock(scope: !2334, file: !1109, line: 246, column: 51)
!2341 = !DILocalVariable(name: "fp", scope: !2342, file: !1109, line: 254, type: !1112, align: 8)
!2342 = distinct !DILexicalBlock(scope: !2334, file: !1109, line: 254, column: 5)
!2343 = !DILocalVariable(name: "float", scope: !2344, file: !1109, line: 264, type: !682, align: 4)
!2344 = distinct !DILexicalBlock(scope: !2342, file: !1109, line: 264, column: 5)
!2345 = !DILocation(line: 226, column: 29, scope: !2322)
!2346 = !DILocation(line: 227, column: 9, scope: !2326)
!2347 = !DILocation(line: 241, column: 9, scope: !2334)
!2348 = !DILocation(line: 242, column: 14, scope: !2336)
!2349 = !DILocation(line: 254, column: 9, scope: !2342)
!2350 = !DILocation(line: 264, column: 9, scope: !2344)
!2351 = !DILocation(line: 227, column: 17, scope: !2322)
!2352 = !DILocalVariable(name: "self", scope: !2353, file: !1109, line: 227, type: !507, align: 8)
!2353 = !DILexicalBlockFile(scope: !2354, file: !1109, discriminator: 0)
!2354 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !2208, file: !2207, line: 323, type: !2209, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2355)
!2355 = !{!2352}
!2356 = !DILocation(line: 227, column: 17, scope: !2353, inlinedAt: !2351)
!2357 = !DILocation(line: 228, column: 31, scope: !2330)
!2358 = !DILocalVariable(name: "self", scope: !2359, file: !1109, line: 228, type: !494, align: 8)
!2359 = !DILexicalBlockFile(scope: !2360, file: !1109, discriminator: 0)
!2360 = distinct !DISubprogram(name: "first<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$5first17hc069721ea3b244a3E", scope: !1666, file: !1665, line: 171, type: !2217, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !2361)
!2361 = !{!2358, !2362}
!2362 = !DILocalVariable(name: "first", scope: !2363, file: !1109, line: 228, type: !75, align: 8)
!2363 = !DILexicalBlockFile(scope: !2364, file: !1109, discriminator: 0)
!2364 = distinct !DILexicalBlock(scope: !2360, file: !1665, line: 172, column: 35)
!2365 = !DILocation(line: 228, column: 31, scope: !2359, inlinedAt: !2357)
!2366 = !DILocation(line: 228, column: 31, scope: !2363, inlinedAt: !2357)
!2367 = !DILocation(line: 228, column: 20, scope: !2330)
!2368 = !DILocation(line: 228, column: 26, scope: !2330)
!2369 = !DILocation(line: 229, column: 9, scope: !2330)
!2370 = !DILocation(line: 228, column: 9, scope: !2328)
!2371 = !DILocation(line: 233, column: 20, scope: !2328)
!2372 = !DILocation(line: 233, column: 9, scope: !2332)
!2373 = !DILocation(line: 234, column: 8, scope: !2332)
!2374 = !DILocation(line: 231, column: 20, scope: !2326)
!2375 = !DILocation(line: 231, column: 16, scope: !2326)
!2376 = !DILocation(line: 1, column: 1, scope: !2377)
!2377 = !DILexicalBlockFile(scope: !2326, file: !1223, discriminator: 0)
!2378 = !DILocation(line: 269, column: 2, scope: !2322)
!2379 = !DILocation(line: 234, column: 21, scope: !2332)
!2380 = !DILocation(line: 237, column: 8, scope: !2332)
!2381 = !DILocalVariable(name: "self", scope: !2382, file: !1109, line: 237, type: !494, align: 8)
!2382 = !DILexicalBlockFile(scope: !2383, file: !1109, discriminator: 0)
!2383 = distinct !DISubprogram(name: "is_empty<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h8824a1258cf66c68E", scope: !1666, file: !1665, line: 152, type: !2253, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !2384)
!2384 = !{!2381}
!2385 = !DILocation(line: 237, column: 8, scope: !2382, inlinedAt: !2380)
!2386 = !DILocation(line: 235, column: 13, scope: !2332)
!2387 = !DILocation(line: 235, column: 9, scope: !2332)
!2388 = !DILocation(line: 234, column: 5, scope: !2332)
!2389 = !DILocation(line: 238, column: 20, scope: !2332)
!2390 = !DILocation(line: 241, column: 34, scope: !2332)
!2391 = !DILocation(line: 241, column: 21, scope: !2332)
!2392 = !DILocation(line: 241, column: 15, scope: !2332)
!2393 = !DILocation(line: 243, column: 49, scope: !2332)
!2394 = !DILocation(line: 243, column: 35, scope: !2332)
!2395 = !DILocation(line: 242, column: 14, scope: !2332)
!2396 = !DILocation(line: 242, column: 20, scope: !2336)
!2397 = !DILocation(line: 246, column: 26, scope: !2340)
!2398 = !DILocation(line: 246, column: 12, scope: !2340)
!2399 = !DILocation(line: 246, column: 17, scope: !2340)
!2400 = !DILocation(line: 247, column: 16, scope: !2340)
!2401 = !DILocation(line: 1, column: 1, scope: !2402)
!2402 = !DILexicalBlockFile(scope: !2334, file: !1223, discriminator: 0)
!2403 = !DILocation(line: 254, column: 37, scope: !2334)
!2404 = !DILocation(line: 254, column: 51, scope: !2334)
!2405 = !DILocation(line: 254, column: 18, scope: !2334)
!2406 = !DILocation(line: 255, column: 8, scope: !2342)
!2407 = !DILocation(line: 255, column: 27, scope: !2342)
!2408 = !DILocation(line: 255, column: 40, scope: !2342)
!2409 = !DILocalVariable(name: "self", scope: !2410, file: !1109, line: 255, type: !2287, align: 8)
!2410 = !DILexicalBlockFile(scope: !2411, file: !1109, discriminator: 0)
!2411 = distinct !DISubprogram(name: "ne", linkageName: "_ZN77_$LT$core..num..dec2flt..common..BiasedFp$u20$as$u20$core..cmp..PartialEq$GT$2ne17h13c40f5d4be07ae3E", scope: !2284, file: !1645, line: 186, type: !2285, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2412)
!2412 = !{!2409, !2413}
!2413 = !DILocalVariable(name: "other", scope: !2410, file: !1109, line: 255, type: !2287, align: 8)
!2414 = !DILocation(line: 255, column: 40, scope: !2410, inlinedAt: !2408)
!2415 = !DILocation(line: 255, column: 65, scope: !2342)
!2416 = !DILocation(line: 255, column: 79, scope: !2342)
!2417 = !DILocation(line: 255, column: 46, scope: !2342)
!2418 = !DILocation(line: 260, column: 8, scope: !2342)
!2419 = !DILocation(line: 256, column: 9, scope: !2342)
!2420 = !DILocation(line: 255, column: 5, scope: !2342)
!2421 = !DILocation(line: 264, column: 45, scope: !2342)
!2422 = !DILocation(line: 264, column: 21, scope: !2342)
!2423 = !DILocation(line: 261, column: 39, scope: !2342)
!2424 = !DILocation(line: 261, column: 14, scope: !2342)
!2425 = !DILocation(line: 261, column: 9, scope: !2342)
!2426 = !DILocation(line: 260, column: 5, scope: !2342)
!2427 = !DILocation(line: 265, column: 8, scope: !2344)
!2428 = !DILocation(line: 268, column: 8, scope: !2344)
!2429 = !DILocation(line: 268, column: 5, scope: !2344)
!2430 = !DILocation(line: 266, column: 18, scope: !2344)
!2431 = !DILocation(line: 266, column: 17, scope: !2344)
!2432 = !DILocation(line: 266, column: 9, scope: !2344)
!2433 = !DILocation(line: 265, column: 5, scope: !2344)
!2434 = !DILocation(line: 1, column: 1, scope: !2435)
!2435 = !DILexicalBlockFile(scope: !2332, file: !1223, discriminator: 0)
!2436 = !DILocation(line: 243, column: 21, scope: !2332)
!2437 = !DILocation(line: 243, column: 26, scope: !2332)
!2438 = !DILocation(line: 243, column: 26, scope: !2338)
!2439 = !DILocation(line: 243, column: 72, scope: !2332)
!2440 = !DILocation(line: 244, column: 28, scope: !2332)
!2441 = !DILocation(line: 244, column: 24, scope: !2332)
!2442 = !DILocation(line: 244, column: 17, scope: !2332)
!2443 = !DILocation(line: 1, column: 1, scope: !2444)
!2444 = !DILexicalBlockFile(scope: !2328, file: !1223, discriminator: 0)
!2445 = !DILocation(line: 238, column: 16, scope: !2332)
!2446 = distinct !DISubprogram(name: "call_once<core::f64::{impl#0}::to_bits::{closure_env#0}, (f64)>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h0ed0ba15af3d259dE", scope: !2448, file: !2447, line: 248, type: !2450, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !2455, retainedNodes: !2452)
!2447 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "3100065230267ed2a3b8753c70d752a6")
!2448 = !DINamespace(name: "FnOnce", scope: !2449)
!2449 = !DINamespace(name: "function", scope: !221)
!2450 = !DISubroutineType(types: !2451)
!2451 = !{!82, !857, !697}
!2452 = !{!2453, !2454}
!2453 = !DILocalVariable(arg: 1, scope: !2446, file: !2447, line: 248, type: !857)
!2454 = !DILocalVariable(arg: 2, scope: !2446, file: !2447, line: 248, type: !851)
!2455 = !{!2456, !2457}
!2456 = !DITemplateTypeParameter(name: "Self", type: !857)
!2457 = !DITemplateTypeParameter(name: "Args", type: !851)
!2458 = !DILocation(line: 248, column: 5, scope: !2446)
!2459 = distinct !DISubprogram(name: "call_once<core::f32::{impl#0}::to_bits::{closure_env#0}, (f32)>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h212bd856a0daefdeE", scope: !2448, file: !2447, line: 248, type: !2460, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !2465, retainedNodes: !2462)
!2460 = !DISubroutineType(types: !2461)
!2461 = !{!391, !828, !682}
!2462 = !{!2463, !2464}
!2463 = !DILocalVariable(arg: 1, scope: !2459, file: !2447, line: 248, type: !828)
!2464 = !DILocalVariable(arg: 2, scope: !2459, file: !2447, line: 248, type: !822)
!2465 = !{!2466, !2467}
!2466 = !DITemplateTypeParameter(name: "Self", type: !828)
!2467 = !DITemplateTypeParameter(name: "Args", type: !822)
!2468 = !DILocation(line: 248, column: 5, scope: !2459)
!2469 = distinct !DISubprogram(name: "drop_in_place<&num_traits::FloatErrorKind>", linkageName: "_ZN4core3ptr51drop_in_place$LT$$RF$num_traits..FloatErrorKind$GT$17h6269996c26482c3bE", scope: !94, file: !337, line: 487, type: !2470, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !2475, retainedNodes: !2473)
!2470 = !DISubroutineType(types: !2471)
!2471 = !{null, !2472}
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &num_traits::FloatErrorKind", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!2473 = !{!2474}
!2474 = !DILocalVariable(arg: 1, scope: !2469, file: !337, line: 487, type: !2472)
!2475 = !{!2476}
!2476 = !DITemplateTypeParameter(name: "T", type: !12)
!2477 = !DILocation(line: 487, column: 1, scope: !2469)
!2478 = distinct !DISubprogram(name: "next_code_point<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3str11validations15next_code_point17h63a4f6bed0089488E", scope: !2480, file: !2479, line: 36, type: !2481, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !151, retainedNodes: !2496)
!2479 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/validations.rs", directory: "", checksumkind: CSK_MD5, checksum: "013ffea566228bd192f2b387ca5fa2c0")
!2480 = !DINamespace(name: "validations", scope: !144)
!2481 = !DISubroutineType(types: !2482)
!2482 = !{!2483, !183}
!2483 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u32>", scope: !64, file: !2, size: 64, align: 32, elements: !2484, templateParams: !19, identifier: "433c36b652ea33482ffe8be57ab7893")
!2484 = !{!2485}
!2485 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2483, file: !2, size: 64, align: 32, elements: !2486, templateParams: !19, identifier: "e01b299968261779c422a7e1febecddf", discriminator: !2495)
!2486 = !{!2487, !2491}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2485, file: !2, baseType: !2488, size: 64, align: 32, extraData: i64 0)
!2488 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2483, file: !2, size: 64, align: 32, elements: !19, templateParams: !2489, identifier: "8b9fb7e5d8df9aebeeccf870281c03a8")
!2489 = !{!2490}
!2490 = !DITemplateTypeParameter(name: "T", type: !391)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2485, file: !2, baseType: !2492, size: 64, align: 32, extraData: i64 1)
!2492 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2483, file: !2, size: 64, align: 32, elements: !2493, templateParams: !2489, identifier: "4b24779e750ae7c21f70b77320a16b9")
!2493 = !{!2494}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2492, file: !2, baseType: !391, size: 32, align: 32, offset: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, scope: !2483, file: !2, baseType: !391, size: 32, align: 32, flags: DIFlagArtificial)
!2496 = !{!2497, !2498, !2500, !2502, !2504, !2506, !2508, !2510, !2512, !2514}
!2497 = !DILocalVariable(name: "bytes", arg: 1, scope: !2478, file: !2479, line: 36, type: !183)
!2498 = !DILocalVariable(name: "x", scope: !2499, file: !2479, line: 38, type: !15, align: 1)
!2499 = distinct !DILexicalBlock(scope: !2478, file: !2479, line: 38, column: 5)
!2500 = !DILocalVariable(name: "residual", scope: !2501, file: !2479, line: 38, type: !408, align: 1)
!2501 = distinct !DILexicalBlock(scope: !2478, file: !2479, line: 38, column: 26)
!2502 = !DILocalVariable(name: "val", scope: !2503, file: !2479, line: 38, type: !75, align: 8)
!2503 = distinct !DILexicalBlock(scope: !2478, file: !2479, line: 38, column: 14)
!2504 = !DILocalVariable(name: "init", scope: !2505, file: !2479, line: 46, type: !391, align: 4)
!2505 = distinct !DILexicalBlock(scope: !2499, file: !2479, line: 46, column: 5)
!2506 = !DILocalVariable(name: "y", scope: !2507, file: !2479, line: 49, type: !15, align: 1)
!2507 = distinct !DILexicalBlock(scope: !2505, file: !2479, line: 49, column: 5)
!2508 = !DILocalVariable(name: "ch", scope: !2509, file: !2479, line: 50, type: !391, align: 4)
!2509 = distinct !DILexicalBlock(scope: !2507, file: !2479, line: 50, column: 5)
!2510 = !DILocalVariable(name: "z", scope: !2511, file: !2479, line: 56, type: !15, align: 1)
!2511 = distinct !DILexicalBlock(scope: !2509, file: !2479, line: 56, column: 9)
!2512 = !DILocalVariable(name: "y_z", scope: !2513, file: !2479, line: 57, type: !391, align: 4)
!2513 = distinct !DILexicalBlock(scope: !2511, file: !2479, line: 57, column: 9)
!2514 = !DILocalVariable(name: "w", scope: !2515, file: !2479, line: 64, type: !15, align: 1)
!2515 = distinct !DILexicalBlock(scope: !2513, file: !2479, line: 64, column: 13)
!2516 = !DILocation(line: 36, column: 63, scope: !2478)
!2517 = !DILocalVariable(name: "self", scope: !2518, file: !2479, line: 38, type: !2219, align: 8)
!2518 = !DILexicalBlockFile(scope: !2519, file: !2479, discriminator: 0)
!2519 = distinct !DISubprogram(name: "branch<&u8>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h513d1690825b74f3E", scope: !429, file: !428, line: 2290, type: !2520, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !104, retainedNodes: !2537)
!2520 = !DISubroutineType(types: !2521)
!2521 = !{!2522, !2219}
!2522 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, &u8>", scope: !220, file: !2, size: 64, align: 64, elements: !2523, templateParams: !19, identifier: "513888bfaba291a24cedecefd1c8f3cf")
!2523 = !{!2524}
!2524 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2522, file: !2, size: 64, align: 64, elements: !2525, templateParams: !19, identifier: "19071d1d694b54b173e59457b654fa28", discriminator: !2536)
!2525 = !{!2526, !2532}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !2524, file: !2, baseType: !2527, size: 64, align: 64)
!2527 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !2522, file: !2, size: 64, align: 64, elements: !2528, templateParams: !2530, identifier: "ce047414cf5b82ac3c74a44d9cbde4e7")
!2528 = !{!2529}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2527, file: !2, baseType: !75, size: 64, align: 64)
!2530 = !{!441, !2531}
!2531 = !DITemplateTypeParameter(name: "C", type: !75)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !2524, file: !2, baseType: !2533, size: 64, align: 64, extraData: i64 0)
!2533 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !2522, file: !2, size: 64, align: 64, elements: !2534, templateParams: !2530, identifier: "4460a790e4a683cf8d29a30157ff54e5")
!2534 = !{!2535}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2533, file: !2, baseType: !408, align: 8)
!2536 = !DIDerivedType(tag: DW_TAG_member, scope: !2522, file: !2, baseType: !82, size: 64, align: 64, flags: DIFlagArtificial)
!2537 = !{!2517, !2538}
!2538 = !DILocalVariable(name: "v", scope: !2539, file: !2479, line: 38, type: !75, align: 8)
!2539 = !DILexicalBlockFile(scope: !2540, file: !2479, discriminator: 0)
!2540 = distinct !DILexicalBlock(scope: !2519, file: !428, line: 2292, column: 13)
!2541 = !DILocation(line: 38, column: 14, scope: !2518, inlinedAt: !2542)
!2542 = !DILocation(line: 38, column: 14, scope: !2478)
!2543 = !DILocation(line: 38, column: 26, scope: !2501)
!2544 = !DILocalVariable(name: "residual", scope: !2545, file: !2479, line: 38, type: !408, align: 1)
!2545 = !DILexicalBlockFile(scope: !2546, file: !2479, discriminator: 0)
!2546 = distinct !DISubprogram(name: "from_residual<u32>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hbb3f62e988f01b7cE", scope: !471, file: !428, line: 2302, type: !2547, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !2489, retainedNodes: !2549)
!2547 = !DISubroutineType(types: !2548)
!2548 = !{!2483, !408}
!2549 = !{!2544}
!2550 = !DILocation(line: 38, column: 14, scope: !2545, inlinedAt: !2551)
!2551 = !DILocation(line: 38, column: 14, scope: !2501)
!2552 = !DILocalVariable(name: "self", scope: !2553, file: !2479, line: 49, type: !2219, align: 8)
!2553 = !DILexicalBlockFile(scope: !2554, file: !2479, discriminator: 0)
!2554 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h3ab0f2bcc6732f72E", scope: !2219, file: !428, line: 892, type: !2555, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !104, retainedNodes: !2557)
!2555 = !DISubroutineType(types: !2556)
!2556 = !{!75, !2219, !501}
!2557 = !{!2552, !2558}
!2558 = !DILocalVariable(name: "val", scope: !2559, file: !2479, line: 49, type: !75, align: 8)
!2559 = !DILexicalBlockFile(scope: !2560, file: !2479, discriminator: 0)
!2560 = distinct !DILexicalBlock(scope: !2554, file: !428, line: 895, column: 13)
!2561 = !DILocation(line: 49, column: 23, scope: !2553, inlinedAt: !2562)
!2562 = !DILocation(line: 49, column: 23, scope: !2505)
!2563 = !DILocation(line: 50, column: 9, scope: !2509)
!2564 = !DILocalVariable(name: "self", scope: !2565, file: !2479, line: 56, type: !2219, align: 8)
!2565 = !DILexicalBlockFile(scope: !2566, file: !2479, discriminator: 0)
!2566 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h3ab0f2bcc6732f72E", scope: !2219, file: !428, line: 892, type: !2555, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !104, retainedNodes: !2567)
!2567 = !{!2564, !2568}
!2568 = !DILocalVariable(name: "val", scope: !2569, file: !2479, line: 56, type: !75, align: 8)
!2569 = !DILexicalBlockFile(scope: !2570, file: !2479, discriminator: 0)
!2570 = distinct !DILexicalBlock(scope: !2566, file: !428, line: 895, column: 13)
!2571 = !DILocation(line: 56, column: 27, scope: !2565, inlinedAt: !2572)
!2572 = !DILocation(line: 56, column: 27, scope: !2509)
!2573 = !DILocalVariable(name: "self", scope: !2574, file: !2479, line: 64, type: !2219, align: 8)
!2574 = !DILexicalBlockFile(scope: !2575, file: !2479, discriminator: 0)
!2575 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h3ab0f2bcc6732f72E", scope: !2219, file: !428, line: 892, type: !2555, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !104, retainedNodes: !2576)
!2576 = !{!2573, !2577}
!2577 = !DILocalVariable(name: "val", scope: !2578, file: !2479, line: 64, type: !75, align: 8)
!2578 = !DILexicalBlockFile(scope: !2579, file: !2479, discriminator: 0)
!2579 = distinct !DILexicalBlock(scope: !2575, file: !428, line: 895, column: 13)
!2580 = !DILocation(line: 64, column: 31, scope: !2574, inlinedAt: !2581)
!2581 = !DILocation(line: 64, column: 31, scope: !2513)
!2582 = !DILocation(line: 38, column: 14, scope: !2539, inlinedAt: !2542)
!2583 = !DILocation(line: 38, column: 14, scope: !2503)
!2584 = !DILocation(line: 38, column: 13, scope: !2478)
!2585 = !DILocation(line: 38, column: 9, scope: !2499)
!2586 = !DILocation(line: 39, column: 8, scope: !2499)
!2587 = !DILocation(line: 1, column: 1, scope: !2588)
!2588 = !DILexicalBlockFile(scope: !2478, file: !1223, discriminator: 0)
!2589 = !DILocation(line: 70, column: 2, scope: !2478)
!2590 = !DILocation(line: 46, column: 32, scope: !2499)
!2591 = !DILocalVariable(name: "byte", scope: !2592, file: !2479, line: 46, type: !15, align: 1)
!2592 = distinct !DISubprogram(name: "utf8_first_byte", linkageName: "_ZN4core3str11validations15utf8_first_byte17h4f6bdf1e12045d2fE", scope: !2480, file: !2479, line: 11, type: !2593, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2595)
!2593 = !DISubroutineType(types: !2594)
!2594 = !{!391, !15, !391}
!2595 = !{!2591, !2596}
!2596 = !DILocalVariable(name: "width", scope: !2592, file: !2479, line: 46, type: !391, align: 4)
!2597 = !DILocation(line: 46, column: 16, scope: !2592, inlinedAt: !2598)
!2598 = !DILocation(line: 46, column: 16, scope: !2499)
!2599 = !DILocation(line: 46, column: 9, scope: !2505)
!2600 = !DILocation(line: 40, column: 21, scope: !2499)
!2601 = !DILocation(line: 40, column: 16, scope: !2499)
!2602 = !DILocation(line: 1, column: 1, scope: !2603)
!2603 = !DILexicalBlockFile(scope: !2499, file: !1223, discriminator: 0)
!2604 = !DILocation(line: 49, column: 23, scope: !2605, inlinedAt: !2609)
!2605 = !DILexicalBlockFile(scope: !2606, file: !2479, discriminator: 0)
!2606 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17hc147847221cd0cacE", scope: !2608, file: !2607, line: 100, type: !1152, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !19)
!2607 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/hint.rs", directory: "", checksumkind: CSK_MD5, checksum: "b50bd4586a98539d3cdc821cfaa5e2e7")
!2608 = !DINamespace(name: "hint", scope: !31)
!2609 = !DILocation(line: 897, column: 30, scope: !2554, inlinedAt: !2562)
!2610 = !DILocation(line: 49, column: 23, scope: !2559, inlinedAt: !2562)
!2611 = !DILocation(line: 49, column: 22, scope: !2505)
!2612 = !DILocation(line: 49, column: 9, scope: !2507)
!2613 = !DILocation(line: 50, column: 37, scope: !2507)
!2614 = !DILocalVariable(name: "ch", scope: !2615, file: !2479, line: 50, type: !391, align: 4)
!2615 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h50c232b1f1a5d6b3E", scope: !2480, file: !2479, line: 17, type: !2616, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2618)
!2616 = !DISubroutineType(types: !2617)
!2617 = !{!391, !391, !15}
!2618 = !{!2614, !2619}
!2619 = !DILocalVariable(name: "byte", scope: !2615, file: !2479, line: 50, type: !15, align: 1)
!2620 = !DILocation(line: 50, column: 18, scope: !2615, inlinedAt: !2621)
!2621 = !DILocation(line: 50, column: 18, scope: !2507)
!2622 = !DILocation(line: 50, column: 43, scope: !2507)
!2623 = !DILocation(line: 51, column: 8, scope: !2509)
!2624 = !DILocation(line: 69, column: 10, scope: !2509)
!2625 = !DILocation(line: 69, column: 5, scope: !2509)
!2626 = !DILocation(line: 56, column: 27, scope: !2627, inlinedAt: !2629)
!2627 = !DILexicalBlockFile(scope: !2628, file: !2479, discriminator: 0)
!2628 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17hc147847221cd0cacE", scope: !2608, file: !2607, line: 100, type: !1152, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !19)
!2629 = !DILocation(line: 897, column: 30, scope: !2566, inlinedAt: !2572)
!2630 = !DILocation(line: 56, column: 27, scope: !2569, inlinedAt: !2572)
!2631 = !DILocation(line: 56, column: 26, scope: !2509)
!2632 = !DILocation(line: 56, column: 13, scope: !2511)
!2633 = !DILocation(line: 57, column: 38, scope: !2511)
!2634 = !DILocalVariable(name: "ch", scope: !2635, file: !2479, line: 57, type: !391, align: 4)
!2635 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h50c232b1f1a5d6b3E", scope: !2480, file: !2479, line: 17, type: !2616, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2636)
!2636 = !{!2634, !2637}
!2637 = !DILocalVariable(name: "byte", scope: !2635, file: !2479, line: 57, type: !15, align: 1)
!2638 = !DILocation(line: 57, column: 19, scope: !2635, inlinedAt: !2639)
!2639 = !DILocation(line: 57, column: 19, scope: !2511)
!2640 = !DILocation(line: 57, column: 62, scope: !2511)
!2641 = !DILocation(line: 57, column: 13, scope: !2513)
!2642 = !DILocation(line: 58, column: 14, scope: !2513)
!2643 = !DILocation(line: 58, column: 9, scope: !2513)
!2644 = !DILocation(line: 59, column: 12, scope: !2513)
!2645 = !DILocation(line: 51, column: 5, scope: !2509)
!2646 = !DILocation(line: 64, column: 31, scope: !2647, inlinedAt: !2649)
!2647 = !DILexicalBlockFile(scope: !2648, file: !2479, discriminator: 0)
!2648 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17hc147847221cd0cacE", scope: !2608, file: !2607, line: 100, type: !1152, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !19)
!2649 = !DILocation(line: 897, column: 30, scope: !2575, inlinedAt: !2581)
!2650 = !DILocation(line: 64, column: 31, scope: !2578, inlinedAt: !2581)
!2651 = !DILocation(line: 64, column: 30, scope: !2513)
!2652 = !DILocation(line: 64, column: 17, scope: !2515)
!2653 = !DILocation(line: 65, column: 18, scope: !2515)
!2654 = !DILocation(line: 65, column: 56, scope: !2515)
!2655 = !DILocalVariable(name: "ch", scope: !2656, file: !2479, line: 65, type: !391, align: 4)
!2656 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h50c232b1f1a5d6b3E", scope: !2480, file: !2479, line: 17, type: !2616, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2657)
!2657 = !{!2655, !2658}
!2658 = !DILocalVariable(name: "byte", scope: !2656, file: !2479, line: 65, type: !15, align: 1)
!2659 = !DILocation(line: 65, column: 37, scope: !2656, inlinedAt: !2660)
!2660 = !DILocation(line: 65, column: 37, scope: !2515)
!2661 = !DILocation(line: 65, column: 61, scope: !2515)
!2662 = !DILocation(line: 65, column: 13, scope: !2515)
!2663 = !DILocation(line: 59, column: 9, scope: !2513)
!2664 = distinct !DISubprogram(name: "is_char_boundary", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h20d36eabd67b8357E", scope: !2208, file: !2207, line: 209, type: !2665, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2667)
!2665 = !DISubroutineType(types: !2666)
!2666 = !{!918, !507, !9}
!2667 = !{!2668, !2669, !2670}
!2668 = !DILocalVariable(name: "self", arg: 1, scope: !2664, file: !2207, line: 209, type: !507)
!2669 = !DILocalVariable(name: "index", arg: 2, scope: !2664, file: !2207, line: 209, type: !9)
!2670 = !DILocalVariable(name: "b", scope: !2671, file: !2207, line: 230, type: !15, align: 1)
!2671 = distinct !DILexicalBlock(scope: !2664, file: !2207, line: 230, column: 13)
!2672 = !DILocation(line: 209, column: 35, scope: !2664)
!2673 = !DILocation(line: 209, column: 42, scope: !2664)
!2674 = !DILocation(line: 214, column: 12, scope: !2664)
!2675 = !DILocation(line: 215, column: 20, scope: !2664)
!2676 = !DILocation(line: 232, column: 6, scope: !2664)
!2677 = !DILocation(line: 218, column: 15, scope: !2664)
!2678 = !DILocalVariable(name: "self", scope: !2679, file: !2207, line: 218, type: !507, align: 8)
!2679 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !2208, file: !2207, line: 323, type: !2209, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2680)
!2680 = !{!2678}
!2681 = !DILocation(line: 218, column: 15, scope: !2679, inlinedAt: !2677)
!2682 = !DILocalVariable(name: "self", scope: !2683, file: !2207, line: 218, type: !494, align: 8)
!2683 = !DILexicalBlockFile(scope: !2684, file: !2207, discriminator: 0)
!2684 = distinct !DISubprogram(name: "get<u8, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hdc3e05aebbfe1cd3E", scope: !1666, file: !1665, line: 339, type: !2685, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !2689, retainedNodes: !2687)
!2685 = !DISubroutineType(types: !2686)
!2686 = !{!2219, !494, !9}
!2687 = !{!2682, !2688}
!2688 = !DILocalVariable(name: "index", scope: !2683, file: !2207, line: 218, type: !9, align: 8)
!2689 = !{!99, !2690}
!2690 = !DITemplateTypeParameter(name: "I", type: !9)
!2691 = !DILocation(line: 218, column: 15, scope: !2683, inlinedAt: !2677)
!2692 = !DILocation(line: 218, column: 35, scope: !2664)
!2693 = !DILocation(line: 218, column: 9, scope: !2664)
!2694 = !DILocation(line: 228, column: 30, scope: !2664)
!2695 = !DILocalVariable(name: "self", scope: !2696, file: !2207, line: 228, type: !507, align: 8)
!2696 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17h46c72f4bd07ddbd2E", scope: !2208, file: !2207, line: 157, type: !2697, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2699)
!2697 = !DISubroutineType(types: !2698)
!2698 = !{!9, !507}
!2699 = !{!2695}
!2700 = !DILocation(line: 228, column: 30, scope: !2696, inlinedAt: !2694)
!2701 = !DILocalVariable(name: "self", scope: !2702, file: !2207, line: 228, type: !507, align: 8)
!2702 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !2208, file: !2207, line: 323, type: !2209, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2703)
!2703 = !{!2701}
!2704 = !DILocation(line: 228, column: 30, scope: !2702, inlinedAt: !2705)
!2705 = !DILocation(line: 158, column: 9, scope: !2696, inlinedAt: !2694)
!2706 = !DILocation(line: 230, column: 19, scope: !2664)
!2707 = !DILocation(line: 230, column: 19, scope: !2671)
!2708 = !DILocation(line: 230, column: 25, scope: !2671)
!2709 = !DILocalVariable(name: "self", scope: !2710, file: !2207, line: 230, type: !15, align: 1)
!2710 = !DILexicalBlockFile(scope: !2711, file: !2207, discriminator: 0)
!2711 = distinct !DISubprogram(name: "is_utf8_char_boundary", linkageName: "_ZN4core3num20_$LT$impl$u20$u8$GT$21is_utf8_char_boundary17h70e32099b6faee84E", scope: !2713, file: !2712, line: 808, type: !2714, scopeLine: 808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2716)
!2712 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "47905c39e2d032306951817cfe39b065")
!2713 = !DINamespace(name: "{impl#6}", scope: !46)
!2714 = !DISubroutineType(types: !2715)
!2715 = !{!918, !15}
!2716 = !{!2709}
!2717 = !DILocation(line: 230, column: 25, scope: !2710, inlinedAt: !2708)
!2718 = !DILocation(line: 230, column: 49, scope: !2664)
!2719 = !DILocation(line: 228, column: 21, scope: !2664)
!2720 = !DILocation(line: 228, column: 39, scope: !2664)
!2721 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17h46c72f4bd07ddbd2E", scope: !2208, file: !2207, line: 157, type: !2697, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2722)
!2722 = !{!2723}
!2723 = !DILocalVariable(name: "self", arg: 1, scope: !2721, file: !2207, line: 157, type: !507)
!2724 = !DILocation(line: 157, column: 22, scope: !2721)
!2725 = !DILocation(line: 158, column: 9, scope: !2721)
!2726 = !DILocalVariable(name: "self", scope: !2727, file: !2207, line: 158, type: !507, align: 8)
!2727 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !2208, file: !2207, line: 323, type: !2209, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2728)
!2728 = !{!2726}
!2729 = !DILocation(line: 158, column: 9, scope: !2727, inlinedAt: !2725)
!2730 = !DILocation(line: 159, column: 6, scope: !2721)
!2731 = distinct !DISubprogram(name: "bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h7897e2009ee174b2E", scope: !2208, file: !2207, line: 862, type: !2732, scopeLine: 862, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2734)
!2732 = !DISubroutineType(types: !2733)
!2733 = !{!142, !507}
!2734 = !{!2735}
!2735 = !DILocalVariable(name: "self", arg: 1, scope: !2731, file: !2207, line: 862, type: !507)
!2736 = !DILocation(line: 862, column: 18, scope: !2731)
!2737 = !DILocation(line: 863, column: 15, scope: !2731)
!2738 = !DILocalVariable(name: "self", scope: !2739, file: !2207, line: 863, type: !507, align: 8)
!2739 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !2208, file: !2207, line: 323, type: !2209, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2740)
!2740 = !{!2738}
!2741 = !DILocation(line: 863, column: 15, scope: !2739, inlinedAt: !2737)
!2742 = !DILocalVariable(name: "self", scope: !2743, file: !2207, line: 863, type: !494, align: 8)
!2743 = !DILexicalBlockFile(scope: !2744, file: !2207, discriminator: 0)
!2744 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h4a4a89787a2145f0E", scope: !1666, file: !1665, line: 734, type: !1667, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !2745)
!2745 = !{!2742}
!2746 = !DILocation(line: 863, column: 15, scope: !2743, inlinedAt: !2737)
!2747 = !DILocation(line: 863, column: 9, scope: !2731)
!2748 = !DILocation(line: 864, column: 6, scope: !2731)
!2749 = distinct !DISubprogram(name: "chars", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h7bf8534f8214801fE", scope: !2208, file: !2207, line: 780, type: !2750, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2752)
!2750 = !DISubroutineType(types: !2751)
!2751 = !{!396, !507}
!2752 = !{!2753}
!2753 = !DILocalVariable(name: "self", arg: 1, scope: !2749, file: !2207, line: 780, type: !507)
!2754 = !DILocation(line: 780, column: 18, scope: !2749)
!2755 = !DILocation(line: 781, column: 23, scope: !2749)
!2756 = !DILocalVariable(name: "self", scope: !2757, file: !2207, line: 781, type: !507, align: 8)
!2757 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !2208, file: !2207, line: 323, type: !2209, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2758)
!2758 = !{!2756}
!2759 = !DILocation(line: 781, column: 23, scope: !2757, inlinedAt: !2755)
!2760 = !DILocalVariable(name: "self", scope: !2761, file: !2207, line: 781, type: !494, align: 8)
!2761 = !DILexicalBlockFile(scope: !2762, file: !2207, discriminator: 0)
!2762 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h4a4a89787a2145f0E", scope: !1666, file: !1665, line: 734, type: !1667, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !2763)
!2763 = !{!2760}
!2764 = !DILocation(line: 781, column: 23, scope: !2761, inlinedAt: !2755)
!2765 = !DILocation(line: 781, column: 9, scope: !2749)
!2766 = !DILocation(line: 782, column: 6, scope: !2749)
!2767 = distinct !DISubprogram(name: "parse<f64>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h31efd52ee692bc52E", scope: !2208, file: !2207, line: 2336, type: !1623, scopeLine: 2336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1323, retainedNodes: !2768)
!2768 = !{!2769}
!2769 = !DILocalVariable(name: "self", arg: 1, scope: !2767, file: !2207, line: 2336, type: !507)
!2770 = !DILocation(line: 2336, column: 30, scope: !2767)
!2771 = !DILocation(line: 2337, column: 9, scope: !2767)
!2772 = !DILocation(line: 2338, column: 6, scope: !2767)
!2773 = distinct !DISubprogram(name: "parse<f32>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h484872e2bf97f4f4E", scope: !2208, file: !2207, line: 2336, type: !1596, scopeLine: 2336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !1201, retainedNodes: !2774)
!2774 = !{!2775}
!2775 = !DILocalVariable(name: "self", arg: 1, scope: !2773, file: !2207, line: 2336, type: !507)
!2776 = !DILocation(line: 2336, column: 30, scope: !2773)
!2777 = !DILocation(line: 2337, column: 9, scope: !2773)
!2778 = !DILocation(line: 2338, column: 6, scope: !2773)
!2779 = distinct !DISubprogram(name: "parse<usize>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h5772aff34b6d4e0bE", scope: !2208, file: !2207, line: 2336, type: !2780, scopeLine: 2336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !2802, retainedNodes: !2800)
!2780 = !DISubroutineType(types: !2781)
!2781 = !{!2782, !507}
!2782 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, core::num::error::ParseIntError>", scope: !711, file: !2, size: 128, align: 64, elements: !2783, templateParams: !19, identifier: "bb8d79acd7bcb20f7b53560921699abc")
!2783 = !{!2784}
!2784 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2782, file: !2, size: 128, align: 64, elements: !2785, templateParams: !19, identifier: "2efbfe3df6d60288cb1f3043273a5c1c", discriminator: !2799)
!2785 = !{!2786, !2795}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2784, file: !2, baseType: !2787, size: 128, align: 64, extraData: i64 0)
!2787 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2782, file: !2, size: 128, align: 64, elements: !2788, templateParams: !2790, identifier: "eb7ea145316644dbd3dfb94a04476516")
!2788 = !{!2789}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2787, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2790 = !{!205, !2791}
!2791 = !DITemplateTypeParameter(name: "E", type: !2792)
!2792 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParseIntError", scope: !48, file: !2, size: 8, align: 8, elements: !2793, templateParams: !19, identifier: "836b5e07bd86ff8ece3e72996df642")
!2793 = !{!2794}
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !2792, file: !2, baseType: !47, size: 8, align: 8)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2784, file: !2, baseType: !2796, size: 128, align: 64, extraData: i64 1)
!2796 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2782, file: !2, size: 128, align: 64, elements: !2797, templateParams: !2790, identifier: "b2459b7861ce7cec8957243544c06980")
!2797 = !{!2798}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2796, file: !2, baseType: !2792, size: 8, align: 8, offset: 8)
!2799 = !DIDerivedType(tag: DW_TAG_member, scope: !2782, file: !2, baseType: !15, size: 8, align: 8, flags: DIFlagArtificial)
!2800 = !{!2801}
!2801 = !DILocalVariable(name: "self", arg: 1, scope: !2779, file: !2207, line: 2336, type: !507)
!2802 = !{!2803}
!2803 = !DITemplateTypeParameter(name: "F", type: !9)
!2804 = !DILocation(line: 2336, column: 30, scope: !2779)
!2805 = !DILocation(line: 2337, column: 9, scope: !2779)
!2806 = !DILocation(line: 2338, column: 6, scope: !2779)
!2807 = distinct !DISubprogram(name: "is_empty", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17hbddfdad1e87f60d4E", scope: !2208, file: !2207, line: 178, type: !2808, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2810)
!2808 = !DISubroutineType(types: !2809)
!2809 = !{!918, !507}
!2810 = !{!2811}
!2811 = !DILocalVariable(name: "self", arg: 1, scope: !2807, file: !2207, line: 178, type: !507)
!2812 = !DILocation(line: 178, column: 27, scope: !2807)
!2813 = !DILocation(line: 179, column: 9, scope: !2807)
!2814 = !DILocalVariable(name: "self", scope: !2815, file: !2207, line: 179, type: !507, align: 8)
!2815 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17h46c72f4bd07ddbd2E", scope: !2208, file: !2207, line: 157, type: !2697, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2816)
!2816 = !{!2814}
!2817 = !DILocation(line: 179, column: 9, scope: !2815, inlinedAt: !2813)
!2818 = !DILocalVariable(name: "self", scope: !2819, file: !2207, line: 179, type: !507, align: 8)
!2819 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !2208, file: !2207, line: 323, type: !2209, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2820)
!2820 = !{!2818}
!2821 = !DILocation(line: 179, column: 9, scope: !2819, inlinedAt: !2822)
!2822 = !DILocation(line: 158, column: 9, scope: !2815, inlinedAt: !2813)
!2823 = !DILocation(line: 180, column: 6, scope: !2807)
!2824 = distinct !DISubprogram(name: "as_str", linkageName: "_ZN4core3str4iter5Chars6as_str17h1d84951d6b563a74E", scope: !396, file: !2825, line: 112, type: !2826, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2829)
!2825 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "94cf8b13d76879430c291e9ed66f42eb")
!2826 = !DISubroutineType(types: !2827)
!2827 = !{!507, !2828}
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::iter::Chars", baseType: !396, size: 64, align: 64, dwarfAddressSpace: 0)
!2829 = !{!2830}
!2830 = !DILocalVariable(name: "self", arg: 1, scope: !2824, file: !2825, line: 112, type: !2828)
!2831 = !DILocation(line: 112, column: 19, scope: !2824)
!2832 = !DILocation(line: 114, column: 38, scope: !2824)
!2833 = !DILocalVariable(name: "v", scope: !2834, file: !2825, line: 114, type: !494, align: 8)
!2834 = !DILexicalBlockFile(scope: !2835, file: !2825, discriminator: 0)
!2835 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN4core3str8converts19from_utf8_unchecked17h0b57194cc03df108E", scope: !2837, file: !2836, line: 170, type: !2838, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2840)
!2836 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/converts.rs", directory: "", checksumkind: CSK_MD5, checksum: "459d256946ab11c35b95264d728167a0")
!2837 = !DINamespace(name: "converts", scope: !144)
!2838 = !DISubroutineType(types: !2839)
!2839 = !{!507, !494}
!2840 = !{!2833}
!2841 = !DILocation(line: 114, column: 18, scope: !2834, inlinedAt: !2842)
!2842 = !DILocation(line: 114, column: 18, scope: !2824)
!2843 = !DILocation(line: 115, column: 6, scope: !2824)
!2844 = distinct !DISubprogram(name: "get_unchecked", linkageName: "_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17hcc14144be099a16dE", scope: !2846, file: !2845, line: 349, type: !2848, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2854)
!2845 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/traits.rs", directory: "", checksumkind: CSK_MD5, checksum: "fe011983167a64afa5cd9b7538fc9cef")
!2846 = !DINamespace(name: "{impl#9}", scope: !2847)
!2847 = !DINamespace(name: "traits", scope: !144)
!2848 = !DISubroutineType(types: !2849)
!2849 = !{!2850, !498, !2850}
!2850 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const str", file: !2, size: 128, align: 64, elements: !2851, templateParams: !19, identifier: "c0e5994a8e99afccd68a87827900070")
!2851 = !{!2852, !2853}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2850, file: !2, baseType: !276, size: 64, align: 64)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2850, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2854 = !{!2855, !2856, !2857, !2859, !2861}
!2855 = !DILocalVariable(name: "self", arg: 1, scope: !2844, file: !2845, line: 349, type: !498)
!2856 = !DILocalVariable(name: "slice", arg: 2, scope: !2844, file: !2845, line: 349, type: !2850)
!2857 = !DILocalVariable(name: "slice", scope: !2858, file: !2845, line: 350, type: !273, align: 8)
!2858 = distinct !DILexicalBlock(scope: !2844, file: !2845, line: 350, column: 9)
!2859 = !DILocalVariable(name: "ptr", scope: !2860, file: !2845, line: 353, type: !97, align: 8)
!2860 = distinct !DILexicalBlock(scope: !2858, file: !2845, line: 353, column: 9)
!2861 = !DILocalVariable(name: "len", scope: !2862, file: !2845, line: 354, type: !9, align: 8)
!2862 = distinct !DILexicalBlock(scope: !2860, file: !2845, line: 354, column: 9)
!2863 = !DILocation(line: 349, column: 29, scope: !2844)
!2864 = !DILocation(line: 349, column: 35, scope: !2844)
!2865 = !DILocation(line: 350, column: 21, scope: !2844)
!2866 = !DILocation(line: 350, column: 13, scope: !2858)
!2867 = !DILocation(line: 353, column: 28, scope: !2858)
!2868 = !DILocalVariable(name: "self", scope: !2869, file: !2845, line: 353, type: !273, align: 8)
!2869 = !DILexicalBlockFile(scope: !2870, file: !2845, discriminator: 0)
!2870 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hf8efb5a105c8a645E", scope: !308, file: !307, line: 1385, type: !310, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !2871)
!2871 = !{!2868}
!2872 = !DILocation(line: 353, column: 28, scope: !2869, inlinedAt: !2867)
!2873 = !DILocalVariable(name: "self", scope: !2874, file: !2845, line: 353, type: !97, align: 8)
!2874 = !DILexicalBlockFile(scope: !2875, file: !2845, discriminator: 0)
!2875 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hdeb7c1729690ff7fE", scope: !317, file: !307, line: 871, type: !318, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !2876)
!2876 = !{!2873, !2877}
!2877 = !DILocalVariable(name: "count", scope: !2874, file: !2845, line: 353, type: !9, align: 8)
!2878 = !DILocation(line: 353, column: 28, scope: !2874, inlinedAt: !2867)
!2879 = !DILocation(line: 353, column: 47, scope: !2858)
!2880 = !DILocalVariable(name: "self", scope: !2881, file: !2845, line: 353, type: !97, align: 8)
!2881 = !DILexicalBlockFile(scope: !2882, file: !2845, discriminator: 0)
!2882 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h8b35729b9a3365e8E", scope: !317, file: !307, line: 453, type: !327, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !2883)
!2883 = !{!2880, !2884}
!2884 = !DILocalVariable(name: "count", scope: !2881, file: !2845, line: 353, type: !329, align: 8)
!2885 = !DILocation(line: 353, column: 28, scope: !2881, inlinedAt: !2886)
!2886 = !DILocation(line: 876, column: 18, scope: !2875, inlinedAt: !2867)
!2887 = !DILocation(line: 353, column: 13, scope: !2860)
!2888 = !DILocation(line: 354, column: 19, scope: !2860)
!2889 = !DILocalVariable(name: "self", scope: !2890, file: !2845, line: 354, type: !273, align: 8)
!2890 = !DILexicalBlockFile(scope: !2891, file: !2845, discriminator: 0)
!2891 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h41b6b1eb103e841eE", scope: !308, file: !307, line: 1365, type: !531, scopeLine: 1365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !2892)
!2892 = !{!2889}
!2893 = !DILocation(line: 354, column: 19, scope: !2890, inlinedAt: !2888)
!2894 = !DILocalVariable(name: "ptr", scope: !2895, file: !2845, line: 354, type: !273, align: 8)
!2895 = !DILexicalBlockFile(scope: !2896, file: !2845, discriminator: 0)
!2896 = distinct !DISubprogram(name: "metadata<[u8]>", linkageName: "_ZN4core3ptr8metadata8metadata17hd0191cae52bdc169E", scope: !359, file: !358, line: 93, type: !531, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !2897)
!2897 = !{!2894}
!2898 = !DILocation(line: 354, column: 19, scope: !2895, inlinedAt: !2899)
!2899 = !DILocation(line: 1366, column: 9, scope: !2891, inlinedAt: !2888)
!2900 = !DILocation(line: 354, column: 13, scope: !2862)
!2901 = !DILocation(line: 355, column: 35, scope: !2862)
!2902 = !DILocalVariable(name: "data", scope: !2903, file: !2845, line: 355, type: !97, align: 8)
!2903 = !DILexicalBlockFile(scope: !2904, file: !2845, discriminator: 0)
!2904 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h4e0dd63690dcfc18E", scope: !94, file: !337, line: 695, type: !338, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !2905)
!2905 = !{!2902, !2906}
!2906 = !DILocalVariable(name: "len", scope: !2903, file: !2845, line: 355, type: !9, align: 8)
!2907 = !DILocation(line: 355, column: 9, scope: !2903, inlinedAt: !2908)
!2908 = !DILocation(line: 355, column: 9, scope: !2862)
!2909 = !DILocation(line: 355, column: 40, scope: !2862)
!2910 = !DILocalVariable(name: "self", scope: !2911, file: !2845, line: 355, type: !97, align: 8)
!2911 = !DILexicalBlockFile(scope: !2912, file: !2845, discriminator: 0)
!2912 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h46b8598cf8ede31bE", scope: !317, file: !307, line: 46, type: !348, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !351, retainedNodes: !2913)
!2913 = !{!2910}
!2914 = !DILocation(line: 355, column: 9, scope: !2911, inlinedAt: !2915)
!2915 = !DILocation(line: 696, column: 20, scope: !2904, inlinedAt: !2908)
!2916 = !DILocalVariable(name: "data_address", scope: !2917, file: !2845, line: 355, type: !6, align: 8)
!2917 = !DILexicalBlockFile(scope: !2918, file: !2845, discriminator: 0)
!2918 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h5216e18adf09ab15E", scope: !359, file: !358, line: 110, type: !360, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !2919)
!2919 = !{!2916, !2920}
!2920 = !DILocalVariable(name: "metadata", scope: !2917, file: !2845, line: 355, type: !9, align: 8)
!2921 = !DILocation(line: 355, column: 9, scope: !2917, inlinedAt: !2922)
!2922 = !DILocation(line: 696, column: 5, scope: !2904, inlinedAt: !2908)
!2923 = !DILocation(line: 356, column: 6, scope: !2844)
!2924 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17h01c2dd56425f8876E", scope: !2846, file: !2845, line: 329, type: !2925, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2940)
!2925 = !DISubroutineType(types: !2926)
!2926 = !{!2927, !498, !507}
!2927 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&str>", scope: !64, file: !2, size: 128, align: 64, elements: !2928, templateParams: !19, identifier: "f0dceda904e27e7388d0262de24b6976")
!2928 = !{!2929}
!2929 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2927, file: !2, size: 128, align: 64, elements: !2930, templateParams: !19, identifier: "d9a20f3bc7236076b658193a0ee41dce", discriminator: !2939)
!2930 = !{!2931, !2935}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2929, file: !2, baseType: !2932, size: 128, align: 64, extraData: i64 0)
!2932 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2927, file: !2, size: 128, align: 64, elements: !19, templateParams: !2933, identifier: "8b8f8f73f03135e6d73de6ca26c771a5")
!2933 = !{!2934}
!2934 = !DITemplateTypeParameter(name: "T", type: !507)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2929, file: !2, baseType: !2936, size: 128, align: 64)
!2936 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2927, file: !2, size: 128, align: 64, elements: !2937, templateParams: !2933, identifier: "5f24cd570c5cc19be11f0051a0b188da")
!2937 = !{!2938}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2936, file: !2, baseType: !507, size: 128, align: 64)
!2939 = !DIDerivedType(tag: DW_TAG_member, scope: !2927, file: !2, baseType: !82, size: 64, align: 64, flags: DIFlagArtificial)
!2940 = !{!2941, !2942}
!2941 = !DILocalVariable(name: "self", arg: 1, scope: !2924, file: !2845, line: 329, type: !498)
!2942 = !DILocalVariable(name: "slice", arg: 2, scope: !2924, file: !2845, line: 329, type: !507)
!2943 = !DILocation(line: 329, column: 12, scope: !2924)
!2944 = !DILocation(line: 329, column: 18, scope: !2924)
!2945 = !DILocation(line: 330, column: 12, scope: !2924)
!2946 = !DILocation(line: 335, column: 13, scope: !2924)
!2947 = !DILocation(line: 330, column: 9, scope: !2924)
!2948 = !DILocation(line: 333, column: 29, scope: !2924)
!2949 = !DILocation(line: 333, column: 13, scope: !2924)
!2950 = !DILocation(line: 337, column: 6, scope: !2924)
!2951 = distinct !DISubprogram(name: "index", linkageName: "_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17had793a4db3d6695cE", scope: !2846, file: !2845, line: 366, type: !2952, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2954)
!2952 = !DISubroutineType(types: !2953)
!2953 = !{!507, !498, !507, !501}
!2954 = !{!2955, !2956, !2957, !2959, !2960}
!2955 = !DILocalVariable(name: "self", arg: 1, scope: !2951, file: !2845, line: 366, type: !498)
!2956 = !DILocalVariable(name: "slice", arg: 2, scope: !2951, file: !2845, line: 366, type: !507)
!2957 = !DILocalVariable(name: "start", scope: !2958, file: !2845, line: 367, type: !9, align: 8)
!2958 = distinct !DILexicalBlock(scope: !2951, file: !2845, line: 367, column: 9)
!2959 = !DILocalVariable(name: "end", scope: !2958, file: !2845, line: 367, type: !9, align: 8)
!2960 = !DILocalVariable(name: "s", scope: !2961, file: !2845, line: 369, type: !507, align: 8)
!2961 = distinct !DILexicalBlock(scope: !2958, file: !2845, line: 369, column: 13)
!2962 = !DILocation(line: 366, column: 14, scope: !2951)
!2963 = !DILocation(line: 366, column: 20, scope: !2951)
!2964 = !DILocation(line: 367, column: 41, scope: !2951)
!2965 = !DILocalVariable(name: "self", scope: !2966, file: !2845, line: 367, type: !507, align: 8)
!2966 = !DILexicalBlockFile(scope: !2967, file: !2845, discriminator: 0)
!2967 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17h46c72f4bd07ddbd2E", scope: !2208, file: !2207, line: 157, type: !2697, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2968)
!2968 = !{!2965}
!2969 = !DILocation(line: 367, column: 41, scope: !2966, inlinedAt: !2964)
!2970 = !DILocalVariable(name: "self", scope: !2971, file: !2845, line: 367, type: !507, align: 8)
!2971 = !DILexicalBlockFile(scope: !2972, file: !2845, discriminator: 0)
!2972 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !2208, file: !2207, line: 323, type: !2209, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2973)
!2973 = !{!2970}
!2974 = !DILocation(line: 367, column: 41, scope: !2971, inlinedAt: !2975)
!2975 = !DILocation(line: 158, column: 9, scope: !2967, inlinedAt: !2964)
!2976 = !DILocation(line: 367, column: 28, scope: !2951)
!2977 = !DILocation(line: 367, column: 14, scope: !2951)
!2978 = !DILocation(line: 367, column: 14, scope: !2958)
!2979 = !DILocation(line: 367, column: 21, scope: !2951)
!2980 = !DILocation(line: 367, column: 21, scope: !2958)
!2981 = !DILocation(line: 368, column: 15, scope: !2958)
!2982 = !DILocation(line: 368, column: 9, scope: !2958)
!2983 = !DILocation(line: 370, column: 21, scope: !2958)
!2984 = !DILocation(line: 369, column: 18, scope: !2958)
!2985 = !DILocation(line: 369, column: 18, scope: !2961)
!2986 = !DILocation(line: 372, column: 6, scope: !2951)
!2987 = distinct !DISubprogram(name: "eq", linkageName: "_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h328ca116de78cfaaE", scope: !2988, file: !2845, line: 28, type: !2989, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !2991)
!2988 = !DINamespace(name: "{impl#1}", scope: !2847)
!2989 = !DISubroutineType(types: !2990)
!2990 = !{!918, !507, !507}
!2991 = !{!2992, !2993}
!2992 = !DILocalVariable(name: "self", arg: 1, scope: !2987, file: !2845, line: 28, type: !507)
!2993 = !DILocalVariable(name: "other", arg: 2, scope: !2987, file: !2845, line: 28, type: !507)
!2994 = !DILocation(line: 28, column: 11, scope: !2987)
!2995 = !DILocation(line: 28, column: 18, scope: !2987)
!2996 = !DILocation(line: 29, column: 9, scope: !2987)
!2997 = !DILocalVariable(name: "self", scope: !2998, file: !2845, line: 29, type: !507, align: 8)
!2998 = !DILexicalBlockFile(scope: !2999, file: !2845, discriminator: 0)
!2999 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !2208, file: !2207, line: 323, type: !2209, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !3000)
!3000 = !{!2997}
!3001 = !DILocation(line: 29, column: 9, scope: !2998, inlinedAt: !2996)
!3002 = !DILocalVariable(name: "self", scope: !3003, file: !2845, line: 29, type: !3008, align: 8)
!3003 = !DILexicalBlockFile(scope: !3004, file: !2845, discriminator: 0)
!3004 = distinct !DISubprogram(name: "eq<[u8], [u8]>", linkageName: "_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h3746e5531da9e0d8E", scope: !3005, file: !564, line: 1512, type: !3006, scopeLine: 1512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3011, retainedNodes: !3009)
!3005 = !DINamespace(name: "{impl#9}", scope: !896)
!3006 = !DISubroutineType(types: !3007)
!3007 = !{!918, !3008, !3008}
!3008 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&[u8]", baseType: !494, size: 64, align: 64, dwarfAddressSpace: 0)
!3009 = !{!3002, !3010}
!3010 = !DILocalVariable(name: "other", scope: !3003, file: !2845, line: 29, type: !3008, align: 8)
!3011 = !{!3012, !3013}
!3012 = !DITemplateTypeParameter(name: "A", type: !15)
!3013 = !DITemplateTypeParameter(name: "B", type: !15)
!3014 = !DILocation(line: 29, column: 9, scope: !3003, inlinedAt: !2996)
!3015 = !DILocation(line: 29, column: 28, scope: !2987)
!3016 = !DILocalVariable(name: "self", scope: !3017, file: !2845, line: 29, type: !507, align: 8)
!3017 = !DILexicalBlockFile(scope: !3018, file: !2845, discriminator: 0)
!3018 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !2208, file: !2207, line: 323, type: !2209, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !3019)
!3019 = !{!3016}
!3020 = !DILocation(line: 29, column: 28, scope: !3017, inlinedAt: !3015)
!3021 = !DILocation(line: 30, column: 6, scope: !2987)
!3022 = distinct !DISubprogram(name: "index<core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hcc6396edc3b4e7b0E", scope: !3023, file: !2845, line: 64, type: !3024, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3029, retainedNodes: !3026)
!3023 = !DINamespace(name: "{impl#4}", scope: !2847)
!3024 = !DISubroutineType(types: !3025)
!3025 = !{!507, !507, !498, !501}
!3026 = !{!3027, !3028}
!3027 = !DILocalVariable(name: "self", arg: 1, scope: !3022, file: !2845, line: 64, type: !507)
!3028 = !DILocalVariable(name: "index", arg: 2, scope: !3022, file: !2845, line: 64, type: !498)
!3029 = !{!1722}
!3030 = !DILocation(line: 64, column: 14, scope: !3022)
!3031 = !DILocation(line: 64, column: 21, scope: !3022)
!3032 = !DILocation(line: 65, column: 9, scope: !3022)
!3033 = !DILocation(line: 66, column: 6, scope: !3022)
!3034 = distinct !DISubprogram(name: "to_digit", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17h8cb00c8fb2f77c0bE", scope: !3036, file: !3035, line: 345, type: !3039, scopeLine: 345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !3041)
!3035 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/char/methods.rs", directory: "", checksumkind: CSK_MD5, checksum: "f022f296c6d29fd4ac1963268a3eecbc")
!3036 = !DINamespace(name: "{impl#0}", scope: !3037)
!3037 = !DINamespace(name: "methods", scope: !3038)
!3038 = !DINamespace(name: "char", scope: !31)
!3039 = !DISubroutineType(types: !3040)
!3040 = !{!2483, !385, !391}
!3041 = !{!3042, !3043, !3044}
!3042 = !DILocalVariable(name: "self", arg: 1, scope: !3034, file: !3035, line: 345, type: !385)
!3043 = !DILocalVariable(name: "radix", arg: 2, scope: !3034, file: !3035, line: 345, type: !391)
!3044 = !DILocalVariable(name: "digit", scope: !3045, file: !3035, line: 347, type: !391, align: 4)
!3045 = distinct !DILexicalBlock(scope: !3034, file: !3035, line: 347, column: 9)
!3046 = !DILocation(line: 345, column: 27, scope: !3034)
!3047 = !DILocation(line: 345, column: 33, scope: !3034)
!3048 = !DILocation(line: 347, column: 13, scope: !3045)
!3049 = !DILocation(line: 347, column: 25, scope: !3034)
!3050 = !DILocalVariable(name: "self", scope: !3051, file: !3035, line: 347, type: !391, align: 4)
!3051 = !DILexicalBlockFile(scope: !3052, file: !3035, discriminator: 0)
!3052 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$12wrapping_sub17h9cc37bd9c29f6d20E", scope: !3053, file: !1056, line: 1231, type: !3054, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !3056)
!3053 = !DINamespace(name: "{impl#8}", scope: !46)
!3054 = !DISubroutineType(types: !3055)
!3055 = !{!391, !391, !391}
!3056 = !{!3050, !3057}
!3057 = !DILocalVariable(name: "rhs", scope: !3051, file: !3035, line: 347, type: !391, align: 4)
!3058 = !DILocation(line: 347, column: 25, scope: !3051, inlinedAt: !3049)
!3059 = !DILocation(line: 348, column: 12, scope: !3045)
!3060 = !DILocation(line: 357, column: 12, scope: !3045)
!3061 = !DILocation(line: 349, column: 21, scope: !3045)
!3062 = !DILocation(line: 349, column: 13, scope: !3045)
!3063 = !DILocation(line: 350, column: 16, scope: !3045)
!3064 = !DILocation(line: 354, column: 21, scope: !3045)
!3065 = !DILocalVariable(name: "self", scope: !3066, file: !3035, line: 354, type: !391, align: 4)
!3066 = !DILexicalBlockFile(scope: !3067, file: !3035, discriminator: 0)
!3067 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$12wrapping_sub17h9cc37bd9c29f6d20E", scope: !3053, file: !1056, line: 1231, type: !3054, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !3068)
!3068 = !{!3065, !3069}
!3069 = !DILocalVariable(name: "rhs", scope: !3066, file: !3035, line: 354, type: !391, align: 4)
!3070 = !DILocation(line: 354, column: 21, scope: !3066, inlinedAt: !3064)
!3071 = !DILocalVariable(name: "self", scope: !3072, file: !3035, line: 354, type: !391, align: 4)
!3072 = !DILexicalBlockFile(scope: !3073, file: !3035, discriminator: 0)
!3073 = distinct !DISubprogram(name: "saturating_add", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$14saturating_add17hebd5a3eab211d331E", scope: !3053, file: !1056, line: 1048, type: !3054, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !3074)
!3074 = !{!3071, !3075}
!3075 = !DILocalVariable(name: "rhs", scope: !3072, file: !3035, line: 354, type: !391, align: 4)
!3076 = !DILocation(line: 354, column: 21, scope: !3072, inlinedAt: !3064)
!3077 = !DILocation(line: 351, column: 29, scope: !3045)
!3078 = !DILocation(line: 351, column: 24, scope: !3045)
!3079 = !DILocation(line: 358, column: 6, scope: !3034)
!3080 = !DILocation(line: 354, column: 13, scope: !3045)
!3081 = !DILocation(line: 348, column: 9, scope: !3045)
!3082 = !DILocation(line: 357, column: 49, scope: !3045)
!3083 = !DILocation(line: 357, column: 9, scope: !3045)
!3084 = !DILocation(line: 357, column: 33, scope: !3045)
!3085 = !DILocation(line: 357, column: 28, scope: !3045)
!3086 = distinct !DISubprogram(name: "all<core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>, num_traits::str_to_ascii_lower_eq_str::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3all17h55110c1c86203de0E", scope: !3088, file: !3087, line: 2581, type: !3091, scopeLine: 2581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3098, retainedNodes: !3095)
!3087 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/traits/iterator.rs", directory: "", checksumkind: CSK_MD5, checksum: "a0295b930225b37fba81d1ded0ab2716")
!3088 = !DINamespace(name: "Iterator", scope: !3089)
!3089 = !DINamespace(name: "iterator", scope: !3090)
!3090 = !DINamespace(name: "traits", scope: !60)
!3091 = !DISubroutineType(types: !3092)
!3092 = !{!918, !138, !3093}
!3093 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !3094, file: !2, align: 8, elements: !19, identifier: "4ffd4d9ff1cf2b24105c981baa88053e")
!3094 = !DINamespace(name: "str_to_ascii_lower_eq_str", scope: !14)
!3095 = !{!3096, !3097}
!3096 = !DILocalVariable(name: "self", arg: 1, scope: !3086, file: !3087, line: 2581, type: !138)
!3097 = !DILocalVariable(name: "f", arg: 2, scope: !3086, file: !3087, line: 2581, type: !3093)
!3098 = !{!3099, !3100}
!3099 = !DITemplateTypeParameter(name: "Self", type: !139)
!3100 = !DITemplateTypeParameter(name: "F", type: !3093)
!3101 = !DILocation(line: 2581, column: 15, scope: !3086)
!3102 = !DILocation(line: 2581, column: 26, scope: !3086)
!3103 = !DILocalVariable(name: "f", scope: !3104, file: !3087, line: 2592, type: !3093, align: 1)
!3104 = distinct !DISubprogram(name: "check<(u8, u8), num_traits::str_to_ascii_lower_eq_str::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3all5check17hdd41877d93103742E", scope: !3105, file: !3087, line: 2587, type: !3106, scopeLine: 2587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3109, retainedNodes: !3108)
!3105 = !DINamespace(name: "all", scope: !3088)
!3106 = !DISubroutineType(types: !3107)
!3107 = !{null, !3093}
!3108 = !{!3103}
!3109 = !{!128, !3110}
!3110 = !DITemplateTypeParameter(name: "impl FnMut(T) -> bool", type: !3093)
!3111 = !DILocation(line: 2592, column: 27, scope: !3104, inlinedAt: !3112)
!3112 = !DILocation(line: 2592, column: 27, scope: !3086)
!3113 = !DILocation(line: 2592, column: 9, scope: !3086)
!3114 = !DILocation(line: 2593, column: 6, scope: !3086)
!3115 = distinct !DISubprogram(name: "{closure#0}<(u8, u8), num_traits::str_to_ascii_lower_eq_str::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17h4bdda3824bf03e14E", scope: !3116, file: !3087, line: 2588, type: !3117, scopeLine: 2588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3109, retainedNodes: !3123)
!3116 = !DINamespace(name: "check", scope: !3105)
!3117 = !DISubroutineType(types: !3118)
!3118 = !{!224, !3119, !7, !129}
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::all::check::{closure_env#0}<(u8, u8), num_traits::str_to_ascii_lower_eq_str::{closure_env#0}>", baseType: !3120, size: 64, align: 64, dwarfAddressSpace: 0)
!3120 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<(u8, u8), num_traits::str_to_ascii_lower_eq_str::{closure_env#0}>", scope: !3116, file: !2, align: 8, elements: !3121, templateParams: !19, identifier: "9e1d3dbd8d7241fb66d321db826630ce")
!3121 = !{!3122}
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3120, file: !2, baseType: !3093, align: 8)
!3123 = !{!3124, !3125, !3126}
!3124 = !DILocalVariable(name: "x", arg: 3, scope: !3115, file: !3087, line: 2588, type: !129)
!3125 = !DILocalVariable(name: "f", scope: !3115, file: !3087, line: 2587, type: !3093, align: 1)
!3126 = !DILocalVariable(arg: 2, scope: !3115, file: !3087, line: 2588, type: !7)
!3127 = !DILocation(line: 2587, column: 21, scope: !3115)
!3128 = !DILocation(line: 2588, column: 19, scope: !3115)
!3129 = !DILocation(line: 2588, column: 23, scope: !3115)
!3130 = !DILocation(line: 2589, column: 20, scope: !3115)
!3131 = !DILocation(line: 2589, column: 58, scope: !3115)
!3132 = !DILocation(line: 2589, column: 17, scope: !3115)
!3133 = !DILocation(line: 2589, column: 27, scope: !3115)
!3134 = !DILocation(line: 2588, column: 25, scope: !3115)
!3135 = distinct !DISubprogram(name: "zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3zip17h1f0de46e36054093E", scope: !3088, file: !3087, line: 617, type: !579, scopeLine: 617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3139, retainedNodes: !3136)
!3136 = !{!3137, !3138}
!3137 = !DILocalVariable(name: "self", arg: 1, scope: !3135, file: !3087, line: 617, type: !87)
!3138 = !DILocalVariable(name: "other", arg: 2, scope: !3135, file: !3087, line: 617, type: !87)
!3139 = !{!3140, !3141}
!3140 = !DITemplateTypeParameter(name: "Self", type: !87)
!3141 = !DITemplateTypeParameter(name: "U", type: !87)
!3142 = !DILocation(line: 617, column: 15, scope: !3135)
!3143 = !DILocation(line: 617, column: 21, scope: !3135)
!3144 = !DILocation(line: 622, column: 18, scope: !3135)
!3145 = !DILocation(line: 622, column: 24, scope: !3135)
!3146 = !DILocation(line: 622, column: 41, scope: !3135)
!3147 = !DILocation(line: 622, column: 9, scope: !3135)
!3148 = !DILocation(line: 623, column: 6, scope: !3135)
!3149 = !DILocation(line: 617, column: 5, scope: !3135)
!3150 = distinct !DISubprogram(name: "zip<core::str::iter::Bytes, core::str::iter::Bytes>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3zip17hfe2ae64a1b412659E", scope: !3088, file: !3087, line: 617, type: !546, scopeLine: 617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3154, retainedNodes: !3151)
!3151 = !{!3152, !3153}
!3152 = !DILocalVariable(name: "self", arg: 1, scope: !3150, file: !3087, line: 617, type: !142)
!3153 = !DILocalVariable(name: "other", arg: 2, scope: !3150, file: !3087, line: 617, type: !142)
!3154 = !{!3155, !3156}
!3155 = !DITemplateTypeParameter(name: "Self", type: !142)
!3156 = !DITemplateTypeParameter(name: "U", type: !142)
!3157 = !DILocation(line: 617, column: 15, scope: !3150)
!3158 = !DILocation(line: 617, column: 21, scope: !3150)
!3159 = !DILocation(line: 622, column: 18, scope: !3150)
!3160 = !DILocation(line: 622, column: 24, scope: !3150)
!3161 = !DILocation(line: 622, column: 41, scope: !3150)
!3162 = !DILocation(line: 622, column: 9, scope: !3150)
!3163 = !DILocation(line: 623, column: 6, scope: !3150)
!3164 = !DILocation(line: 617, column: 5, scope: !3150)
!3165 = distinct !DISubprogram(name: "fold<core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>, u8, core::num::dec2flt::common::ByteSlice::starts_with_ignore_case::{closure_env#0}<[u8]>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4fold17h7a99a4b92c7196bcE", scope: !3088, file: !3087, line: 2407, type: !3166, scopeLine: 2407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3176, retainedNodes: !3168)
!3166 = !DISubroutineType(types: !3167)
!3167 = !{!15, !84, !15, !1687}
!3168 = !{!3169, !3170, !3171, !3172, !3174}
!3169 = !DILocalVariable(name: "self", arg: 1, scope: !3165, file: !3087, line: 2407, type: !84)
!3170 = !DILocalVariable(name: "init", arg: 2, scope: !3165, file: !3087, line: 2407, type: !15)
!3171 = !DILocalVariable(name: "f", arg: 3, scope: !3165, file: !3087, line: 2407, type: !1687)
!3172 = !DILocalVariable(name: "accum", scope: !3173, file: !3087, line: 2412, type: !15, align: 1)
!3173 = distinct !DILexicalBlock(scope: !3165, file: !3087, line: 2412, column: 9)
!3174 = !DILocalVariable(name: "x", scope: !3175, file: !3087, line: 2413, type: !72, align: 8)
!3175 = distinct !DILexicalBlock(scope: !3173, file: !3087, line: 2413, column: 41)
!3176 = !{!3177, !3013, !3178}
!3177 = !DITemplateTypeParameter(name: "Self", type: !84)
!3178 = !DITemplateTypeParameter(name: "F", type: !1687)
!3179 = !DILocation(line: 2412, column: 13, scope: !3173)
!3180 = !DILocation(line: 2407, column: 19, scope: !3165)
!3181 = !DILocation(line: 2407, column: 29, scope: !3165)
!3182 = !DILocation(line: 2407, column: 38, scope: !3165)
!3183 = !DILocation(line: 2412, column: 25, scope: !3165)
!3184 = !DILocation(line: 2413, column: 9, scope: !3173)
!3185 = !DILocation(line: 2413, column: 29, scope: !3175)
!3186 = !DILocation(line: 2417, column: 5, scope: !3165)
!3187 = !DILocation(line: 2413, column: 19, scope: !3175)
!3188 = !DILocation(line: 2413, column: 24, scope: !3175)
!3189 = !DILocation(line: 2414, column: 23, scope: !3175)
!3190 = !DILocation(line: 2414, column: 21, scope: !3175)
!3191 = !DILocation(line: 2417, column: 6, scope: !3165)
!3192 = !DILocation(line: 2414, column: 13, scope: !3175)
!3193 = !DILocation(line: 2407, column: 5, scope: !3165)
!3194 = distinct !DISubprogram(name: "by_ref<core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator6by_ref17h1c8ab6f8dfb47eefE", scope: !3088, file: !3087, line: 1714, type: !3195, scopeLine: 1714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3199, retainedNodes: !3197)
!3195 = !DISubroutineType(types: !3196)
!3196 = !{!392, !392}
!3197 = !{!3198}
!3198 = !DILocalVariable(name: "self", arg: 1, scope: !3194, file: !3087, line: 1714, type: !392)
!3199 = !{!3200}
!3200 = !DITemplateTypeParameter(name: "Self", type: !393)
!3201 = !DILocation(line: 1714, column: 15, scope: !3194)
!3202 = !DILocation(line: 1719, column: 6, scope: !3194)
!3203 = distinct !DISubprogram(name: "copied<core::slice::iter::Iter<u8>, u8>", linkageName: "_ZN4core4iter6traits8iterator8Iterator6copied17h3bcb896e46176f52E", scope: !3088, file: !3087, line: 3231, type: !3204, scopeLine: 3231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3208, retainedNodes: !3206)
!3204 = !DISubroutineType(types: !3205)
!3205 = !{!147, !87}
!3206 = !{!3207}
!3207 = !DILocalVariable(name: "self", arg: 1, scope: !3203, file: !3087, line: 3231, type: !87)
!3208 = !{!3140, !99}
!3209 = !DILocation(line: 3231, column: 26, scope: !3203)
!3210 = !DILocation(line: 3236, column: 9, scope: !3203)
!3211 = !DILocation(line: 3237, column: 6, scope: !3203)
!3212 = distinct !DISubprogram(name: "try_fold<core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>, (), core::iter::traits::iterator::Iterator::all::check::{closure_env#0}<(u8, u8), num_traits::str_to_ascii_lower_eq_str::{closure_env#0}>, core::ops::control_flow::ControlFlow<(), ()>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8try_fold17h2e9b7b6cdab93b27E", scope: !3088, file: !3087, line: 2230, type: !3213, scopeLine: 2230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3227, retainedNodes: !3215)
!3213 = !DISubroutineType(types: !3214)
!3214 = !{!224, !138, !7, !3120}
!3215 = !{!3216, !3217, !3218, !3219, !3221, !3223, !3225}
!3216 = !DILocalVariable(name: "self", arg: 1, scope: !3212, file: !3087, line: 2230, type: !138)
!3217 = !DILocalVariable(name: "init", arg: 2, scope: !3212, file: !3087, line: 2230, type: !7)
!3218 = !DILocalVariable(name: "f", arg: 3, scope: !3212, file: !3087, line: 2230, type: !3120)
!3219 = !DILocalVariable(name: "accum", scope: !3220, file: !3087, line: 2236, type: !7, align: 1)
!3220 = distinct !DILexicalBlock(scope: !3212, file: !3087, line: 2236, column: 9)
!3221 = !DILocalVariable(name: "x", scope: !3222, file: !3087, line: 2237, type: !129, align: 1)
!3222 = distinct !DILexicalBlock(scope: !3220, file: !3087, line: 2237, column: 41)
!3223 = !DILocalVariable(name: "residual", scope: !3224, file: !3087, line: 2238, type: !240, align: 1)
!3224 = distinct !DILexicalBlock(scope: !3222, file: !3087, line: 2238, column: 32)
!3225 = !DILocalVariable(name: "val", scope: !3226, file: !3087, line: 2238, type: !7, align: 1)
!3226 = distinct !DILexicalBlock(scope: !3222, file: !3087, line: 2238, column: 21)
!3227 = !{!3099, !233, !3228, !3229}
!3228 = !DITemplateTypeParameter(name: "F", type: !3120)
!3229 = !DITemplateTypeParameter(name: "R", type: !224)
!3230 = !DILocation(line: 2230, column: 26, scope: !3212)
!3231 = !DILocation(line: 2230, column: 37, scope: !3212)
!3232 = !DILocation(line: 2230, column: 46, scope: !3212)
!3233 = !DILocation(line: 2236, column: 13, scope: !3220)
!3234 = !DILocation(line: 2238, column: 32, scope: !3224)
!3235 = !DILocation(line: 2238, column: 21, scope: !3226)
!3236 = !DILocation(line: 2236, column: 25, scope: !3212)
!3237 = !DILocation(line: 2237, column: 9, scope: !3220)
!3238 = !DILocation(line: 2237, column: 29, scope: !3222)
!3239 = !DILocation(line: 2241, column: 5, scope: !3212)
!3240 = !DILocation(line: 2237, column: 19, scope: !3222)
!3241 = !DILocation(line: 2237, column: 24, scope: !3222)
!3242 = !DILocation(line: 2238, column: 23, scope: !3222)
!3243 = !DILocation(line: 2238, column: 21, scope: !3222)
!3244 = !DILocation(line: 2240, column: 15, scope: !3220)
!3245 = !DILocation(line: 2241, column: 6, scope: !3212)
!3246 = !DILocation(line: 2238, column: 13, scope: !3222)
!3247 = !DILocation(line: 2238, column: 21, scope: !3224)
!3248 = !DILocation(line: 2230, column: 5, scope: !3212)
!3249 = distinct !DISubprogram(name: "enumerate<core::str::iter::Chars>", linkageName: "_ZN4core4iter6traits8iterator8Iterator9enumerate17h117ad964b76af218E", scope: !3088, file: !3087, line: 987, type: !3250, scopeLine: 987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3254, retainedNodes: !3252)
!3250 = !DISubroutineType(types: !3251)
!3251 = !{!393, !396}
!3252 = !{!3253}
!3253 = !DILocalVariable(name: "self", arg: 1, scope: !3249, file: !3087, line: 987, type: !396)
!3254 = !{!3255}
!3255 = !DITemplateTypeParameter(name: "Self", type: !396)
!3256 = !DILocation(line: 987, column: 18, scope: !3249)
!3257 = !DILocation(line: 991, column: 9, scope: !3249)
!3258 = !DILocation(line: 992, column: 6, scope: !3249)
!3259 = distinct !DISubprogram(name: "new<core::str::iter::Bytes, core::str::iter::Bytes>", linkageName: "_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h000d4d698fdadbdbE", scope: !139, file: !56, line: 22, type: !546, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !157, retainedNodes: !3260)
!3260 = !{!3261, !3262}
!3261 = !DILocalVariable(name: "a", arg: 1, scope: !3259, file: !56, line: 22, type: !142)
!3262 = !DILocalVariable(name: "b", arg: 2, scope: !3259, file: !56, line: 22, type: !142)
!3263 = !DILocation(line: 22, column: 32, scope: !3259)
!3264 = !DILocation(line: 22, column: 38, scope: !3259)
!3265 = !DILocation(line: 23, column: 9, scope: !3259)
!3266 = !DILocation(line: 24, column: 6, scope: !3259)
!3267 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", linkageName: "_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h69ef29024fdc950cE", scope: !84, file: !56, line: 22, type: !579, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !110, retainedNodes: !3268)
!3268 = !{!3269, !3270}
!3269 = !DILocalVariable(name: "a", arg: 1, scope: !3267, file: !56, line: 22, type: !87)
!3270 = !DILocalVariable(name: "b", arg: 2, scope: !3267, file: !56, line: 22, type: !87)
!3271 = !DILocation(line: 22, column: 32, scope: !3267)
!3272 = !DILocation(line: 22, column: 38, scope: !3267)
!3273 = !DILocation(line: 23, column: 9, scope: !3267)
!3274 = !DILocation(line: 24, column: 6, scope: !3267)
!3275 = distinct !DISubprogram(name: "size<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hab0864515fa45a0fE", scope: !3276, file: !56, line: 538, type: !3277, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3282, retainedNodes: !3280)
!3276 = !DINamespace(name: "TrustedRandomAccessNoCoerce", scope: !58)
!3277 = !DISubroutineType(types: !3278)
!3278 = !{!9, !3279}
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::slice::iter::Iter<u8>", baseType: !87, size: 64, align: 64, dwarfAddressSpace: 0)
!3280 = !{!3281}
!3281 = !DILocalVariable(name: "self", arg: 1, scope: !3275, file: !56, line: 538, type: !3279)
!3282 = !{!3140}
!3283 = !DILocation(line: 538, column: 13, scope: !3275)
!3284 = !DILocation(line: 542, column: 9, scope: !3275)
!3285 = !DILocation(line: 543, column: 6, scope: !3275)
!3286 = distinct !DISubprogram(name: "size<core::str::iter::Bytes>", linkageName: "_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hcb4ffd2378459e25E", scope: !3276, file: !56, line: 538, type: !3287, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3292, retainedNodes: !3290)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{!9, !3289}
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::iter::Bytes", baseType: !142, size: 64, align: 64, dwarfAddressSpace: 0)
!3290 = !{!3291}
!3291 = !DILocalVariable(name: "self", arg: 1, scope: !3286, file: !56, line: 538, type: !3289)
!3292 = !{!3155}
!3293 = !DILocation(line: 538, column: 13, scope: !3286)
!3294 = !DILocation(line: 542, column: 9, scope: !3286)
!3295 = !DILocation(line: 543, column: 6, scope: !3286)
!3296 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17hfcf37a10df90156dE", scope: !147, file: !166, line: 22, type: !3204, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !151, retainedNodes: !3297)
!3297 = !{!3298}
!3298 = !DILocalVariable(name: "it", arg: 1, scope: !3296, file: !166, line: 22, type: !87)
!3299 = !DILocation(line: 22, column: 32, scope: !3296)
!3300 = !DILocation(line: 23, column: 9, scope: !3296)
!3301 = !DILocation(line: 24, column: 6, scope: !3296)
!3302 = distinct !DISubprogram(name: "new<core::str::iter::Chars>", linkageName: "_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h1de30b20327c77b3E", scope: !393, file: !368, line: 22, type: !3250, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !400, retainedNodes: !3303)
!3303 = !{!3304}
!3304 = !DILocalVariable(name: "iter", arg: 1, scope: !3302, file: !368, line: 22, type: !396)
!3305 = !DILocation(line: 22, column: 32, scope: !3302)
!3306 = !DILocation(line: 23, column: 9, scope: !3302)
!3307 = !DILocation(line: 24, column: 6, scope: !3302)
!3308 = distinct !DISubprogram(name: "eq<u8, u8>", linkageName: "_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17he344d24537209facE", scope: !3310, file: !3309, line: 25, type: !1647, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3011, retainedNodes: !3312)
!3309 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "d8ffa992b82fe6d1648610bb489e30e6")
!3310 = !DINamespace(name: "{impl#0}", scope: !3311)
!3311 = !DINamespace(name: "cmp", scope: !89)
!3312 = !{!3313, !3314}
!3313 = !DILocalVariable(name: "self", arg: 1, scope: !3308, file: !3309, line: 25, type: !494)
!3314 = !DILocalVariable(name: "other", arg: 2, scope: !3308, file: !3309, line: 25, type: !494)
!3315 = !DILocation(line: 25, column: 11, scope: !3308)
!3316 = !DILocation(line: 25, column: 18, scope: !3308)
!3317 = !DILocation(line: 26, column: 9, scope: !3308)
!3318 = !DILocation(line: 27, column: 6, scope: !3308)
!3319 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17ha977156ac332a7d0E", scope: !87, file: !3320, line: 88, type: !1667, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3321)
!3320 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "36678af40fdc22d7150f6f91e11271b3")
!3321 = !{!3322, !3323, !3325}
!3322 = !DILocalVariable(name: "slice", arg: 1, scope: !3319, file: !3320, line: 88, type: !494)
!3323 = !DILocalVariable(name: "ptr", scope: !3324, file: !3320, line: 89, type: !97, align: 8)
!3324 = distinct !DILexicalBlock(scope: !3319, file: !3320, line: 89, column: 9)
!3325 = !DILocalVariable(name: "end", scope: !3326, file: !3320, line: 94, type: !97, align: 8)
!3326 = distinct !DILexicalBlock(scope: !3324, file: !3320, line: 94, column: 13)
!3327 = !DILocation(line: 88, column: 23, scope: !3319)
!3328 = !DILocation(line: 94, column: 17, scope: !3326)
!3329 = !DILocalVariable(name: "metadata", scope: !3330, file: !3320, line: 92, type: !7, align: 1)
!3330 = !DILexicalBlockFile(scope: !3331, file: !3320, discriminator: 0)
!3331 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h5001af046c018773E", scope: !359, file: !358, line: 110, type: !3332, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3334)
!3332 = !DISubroutineType(types: !3333)
!3333 = !{!97, !6, !7}
!3334 = !{!3335, !3329}
!3335 = !DILocalVariable(name: "data_address", scope: !3330, file: !3320, line: 92, type: !6, align: 8)
!3336 = !DILocation(line: 92, column: 21, scope: !3330, inlinedAt: !3337)
!3337 = !DILocation(line: 513, column: 5, scope: !3338, inlinedAt: !3341)
!3338 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17h8927d454b5f75466E", scope: !94, file: !337, line: 512, type: !3339, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !19)
!3339 = !DISubroutineType(types: !3340)
!3340 = !{!97}
!3341 = !DILocation(line: 39, column: 43, scope: !3342, inlinedAt: !3348)
!3342 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hc428b7cda6710dbaE", scope: !317, file: !307, line: 36, type: !3343, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3345)
!3343 = !DISubroutineType(types: !3344)
!3344 = !{!918, !97}
!3345 = !{!3346}
!3346 = !DILocalVariable(name: "self", scope: !3347, file: !3320, line: 92, type: !97, align: 8)
!3347 = !DILexicalBlockFile(scope: !3342, file: !3320, discriminator: 0)
!3348 = !DILocation(line: 92, column: 21, scope: !3324)
!3349 = !DILocation(line: 89, column: 19, scope: !3319)
!3350 = !DILocalVariable(name: "self", scope: !3351, file: !3320, line: 89, type: !494, align: 8)
!3351 = !DILexicalBlockFile(scope: !3352, file: !3320, discriminator: 0)
!3352 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h7d8d5578dc6cc1eeE", scope: !1666, file: !1665, line: 476, type: !3353, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3355)
!3353 = !DISubroutineType(types: !3354)
!3354 = !{!97, !494}
!3355 = !{!3350}
!3356 = !DILocation(line: 89, column: 19, scope: !3351, inlinedAt: !3349)
!3357 = !DILocation(line: 89, column: 13, scope: !3324)
!3358 = !DILocation(line: 92, column: 21, scope: !3347, inlinedAt: !3348)
!3359 = !DILocalVariable(name: "self", scope: !3360, file: !3320, line: 92, type: !97, align: 8)
!3360 = !DILexicalBlockFile(scope: !3361, file: !3320, discriminator: 0)
!3361 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h908da1a1470bd1a0E", scope: !317, file: !307, line: 777, type: !3362, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3364)
!3362 = !DISubroutineType(types: !3363)
!3363 = !{!918, !97, !97}
!3364 = !{!3359, !3365}
!3365 = !DILocalVariable(name: "other", scope: !3360, file: !3320, line: 92, type: !97, align: 8)
!3366 = !DILocation(line: 92, column: 21, scope: !3360, inlinedAt: !3367)
!3367 = !DILocation(line: 39, column: 9, scope: !3342, inlinedAt: !3348)
!3368 = !DILocation(line: 92, column: 21, scope: !3369, inlinedAt: !3376)
!3369 = !DILexicalBlockFile(scope: !3370, file: !3320, discriminator: 0)
!3370 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h0b49d469c5ae04d6E", scope: !94, file: !337, line: 538, type: !3371, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3375, retainedNodes: !3373)
!3371 = !DISubroutineType(types: !3372)
!3372 = !{!6, !9}
!3373 = !{!3374}
!3374 = !DILocalVariable(name: "addr", scope: !3369, file: !3320, line: 92, type: !9, align: 8)
!3375 = !{!720}
!3376 = !DILocation(line: 513, column: 20, scope: !3338, inlinedAt: !3341)
!3377 = !DILocation(line: 92, column: 20, scope: !3324)
!3378 = !DILocation(line: 92, column: 13, scope: !3324)
!3379 = !DILocation(line: 94, column: 26, scope: !3324)
!3380 = !DILocation(line: 95, column: 17, scope: !3324)
!3381 = !DILocalVariable(name: "self", scope: !3382, file: !3320, line: 95, type: !97, align: 8)
!3382 = !DILexicalBlockFile(scope: !3383, file: !3320, discriminator: 0)
!3383 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17heddc142a779e4197E", scope: !317, file: !307, line: 1042, type: !318, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3384)
!3384 = !{!3381, !3385}
!3385 = !DILocalVariable(name: "count", scope: !3382, file: !3320, line: 95, type: !9, align: 8)
!3386 = !DILocation(line: 95, column: 17, scope: !3382, inlinedAt: !3380)
!3387 = !DILocation(line: 95, column: 49, scope: !3324)
!3388 = !DILocalVariable(name: "self", scope: !3389, file: !3320, line: 95, type: !97, align: 8)
!3389 = !DILexicalBlockFile(scope: !3390, file: !3320, discriminator: 0)
!3390 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h18b1176233243c73E", scope: !317, file: !307, line: 536, type: !327, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3391)
!3391 = !{!3388, !3392}
!3392 = !DILocalVariable(name: "count", scope: !3389, file: !3320, line: 95, type: !329, align: 8)
!3393 = !DILocation(line: 95, column: 17, scope: !3389, inlinedAt: !3394)
!3394 = !DILocation(line: 1046, column: 9, scope: !3383, inlinedAt: !3380)
!3395 = !DILocation(line: 97, column: 17, scope: !3324)
!3396 = !DILocalVariable(name: "self", scope: !3397, file: !3320, line: 97, type: !97, align: 8)
!3397 = !DILexicalBlockFile(scope: !3398, file: !3320, discriminator: 0)
!3398 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hdeb7c1729690ff7fE", scope: !317, file: !307, line: 871, type: !318, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3399)
!3399 = !{!3396, !3400}
!3400 = !DILocalVariable(name: "count", scope: !3397, file: !3320, line: 97, type: !9, align: 8)
!3401 = !DILocation(line: 97, column: 17, scope: !3397, inlinedAt: !3395)
!3402 = !DILocation(line: 97, column: 25, scope: !3324)
!3403 = !DILocalVariable(name: "self", scope: !3404, file: !3320, line: 97, type: !97, align: 8)
!3404 = !DILexicalBlockFile(scope: !3405, file: !3320, discriminator: 0)
!3405 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h8b35729b9a3365e8E", scope: !317, file: !307, line: 453, type: !327, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3406)
!3406 = !{!3403, !3407}
!3407 = !DILocalVariable(name: "count", scope: !3404, file: !3320, line: 97, type: !329, align: 8)
!3408 = !DILocation(line: 97, column: 17, scope: !3404, inlinedAt: !3409)
!3409 = !DILocation(line: 876, column: 18, scope: !3398, inlinedAt: !3395)
!3410 = !DILocation(line: 94, column: 23, scope: !3324)
!3411 = !DILocation(line: 100, column: 48, scope: !3326)
!3412 = !DILocalVariable(name: "ptr", scope: !3413, file: !3320, line: 100, type: !3418, align: 8)
!3413 = !DILexicalBlockFile(scope: !3414, file: !3320, discriminator: 0)
!3414 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17he2917240d1660175E", scope: !92, file: !3415, line: 196, type: !3416, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3419)
!3415 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "856acc92efd7925b83dd1e3c577ddbdc")
!3416 = !DISubroutineType(types: !3417)
!3417 = !{!92, !3418}
!3418 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !15, size: 64, align: 64, dwarfAddressSpace: 0)
!3419 = !{!3412}
!3420 = !DILocation(line: 100, column: 25, scope: !3413, inlinedAt: !3421)
!3421 = !DILocation(line: 100, column: 25, scope: !3326)
!3422 = !DILocation(line: 100, column: 64, scope: !3326)
!3423 = !DILocation(line: 100, column: 13, scope: !3326)
!3424 = !DILocation(line: 102, column: 6, scope: !3319)
!3425 = distinct !DISubprogram(name: "as_slice<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17ha674f49ca7c71770E", scope: !87, file: !3320, line: 130, type: !3426, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3428)
!3426 = !DISubroutineType(types: !3427)
!3427 = !{!494, !3279}
!3428 = !{!3429}
!3429 = !DILocalVariable(name: "self", arg: 1, scope: !3425, file: !3320, line: 130, type: !3279)
!3430 = !DILocation(line: 130, column: 21, scope: !3425)
!3431 = !DILocalVariable(name: "len", scope: !3432, file: !3320, line: 131, type: !9, align: 8)
!3432 = !DILexicalBlockFile(scope: !3433, file: !3320, discriminator: 0)
!3433 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17he8d11dab72cc6e75E", scope: !3435, file: !3434, line: 90, type: !3436, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3438)
!3434 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "bc05ab33aeb77226885613c6dc511a0a")
!3435 = !DINamespace(name: "raw", scope: !89)
!3436 = !DISubroutineType(types: !3437)
!3437 = !{!494, !97, !9}
!3438 = !{!3439, !3431, !3440}
!3439 = !DILocalVariable(name: "data", scope: !3432, file: !3320, line: 131, type: !97, align: 8)
!3440 = !DILocalVariable(name: "runtime", scope: !3441, file: !3320, line: 131, type: !3443, align: 8)
!3441 = !DILexicalBlockFile(scope: !3442, file: !3320, discriminator: 0)
!3442 = distinct !DILexicalBlock(scope: !3433, file: !291, line: 2336, column: 13)
!3443 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !3444, file: !2, size: 128, align: 64, elements: !3445, templateParams: !19, identifier: "ca6adac9bf5585e57d20f143c4c8a4b5")
!3444 = !DINamespace(name: "from_raw_parts", scope: !3435)
!3445 = !{!3446, !3448}
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__data", scope: !3443, file: !2, baseType: !3447, size: 64, align: 64)
!3447 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const u8", baseType: !97, size: 64, align: 64, dwarfAddressSpace: 0)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__len", scope: !3443, file: !2, baseType: !296, size: 64, align: 64, offset: 64)
!3449 = !DILocation(line: 131, column: 9, scope: !3432, inlinedAt: !3450)
!3450 = !DILocation(line: 78, column: 26, scope: !3451, inlinedAt: !3465)
!3451 = distinct !DISubprogram(name: "make_slice<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17h6297f568ed1e64b0E", scope: !87, file: !3452, line: 74, type: !3426, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3453)
!3452 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "41903112aef4079fb81d70967f52d92d")
!3453 = !{!3454, !3456, !3459, !3462}
!3454 = !DILocalVariable(name: "self", scope: !3455, file: !3320, line: 131, type: !3279, align: 8)
!3455 = !DILexicalBlockFile(scope: !3451, file: !3320, discriminator: 0)
!3456 = !DILocalVariable(name: "start", scope: !3457, file: !3320, line: 131, type: !92, align: 8)
!3457 = !DILexicalBlockFile(scope: !3458, file: !3320, discriminator: 0)
!3458 = distinct !DILexicalBlock(scope: !3451, file: !3452, line: 18, column: 9)
!3459 = !DILocalVariable(name: "size", scope: !3460, file: !3320, line: 131, type: !9, align: 8)
!3460 = !DILexicalBlockFile(scope: !3461, file: !3320, discriminator: 0)
!3461 = distinct !DILexicalBlock(scope: !3458, file: !3452, line: 19, column: 9)
!3462 = !DILocalVariable(name: "diff", scope: !3463, file: !3320, line: 131, type: !9, align: 8)
!3463 = !DILexicalBlockFile(scope: !3464, file: !3320, discriminator: 0)
!3464 = distinct !DILexicalBlock(scope: !3461, file: !3452, line: 29, column: 13)
!3465 = !DILocation(line: 131, column: 9, scope: !3425)
!3466 = !DILocation(line: 131, column: 9, scope: !3455, inlinedAt: !3465)
!3467 = !DILocalVariable(name: "self", scope: !3468, file: !3320, line: 131, type: !92, align: 8)
!3468 = !DILexicalBlockFile(scope: !3469, file: !3320, discriminator: 0)
!3469 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h41ead865595ab8ddE", scope: !92, file: !3415, line: 330, type: !3470, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3472)
!3470 = !DISubroutineType(types: !3471)
!3471 = !{!3418, !92}
!3472 = !{!3467}
!3473 = !DILocation(line: 131, column: 9, scope: !3468, inlinedAt: !3474)
!3474 = !DILocation(line: 78, column: 41, scope: !3451, inlinedAt: !3465)
!3475 = !DILocation(line: 131, column: 9, scope: !3457, inlinedAt: !3465)
!3476 = !DILocation(line: 131, column: 9, scope: !3477, inlinedAt: !3483)
!3477 = !DILexicalBlockFile(scope: !3478, file: !3320, discriminator: 0)
!3478 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17h1bc4045107d8b7b3E", scope: !3480, file: !3479, line: 314, type: !3481, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !19)
!3479 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "27c8869548c9dcb65186c5584c2586f6")
!3480 = !DINamespace(name: "mem", scope: !31)
!3481 = !DISubroutineType(types: !3482)
!3482 = !{!9}
!3483 = !DILocation(line: 41, column: 5, scope: !3484, inlinedAt: !3487)
!3484 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h1cc0e66cda3f6f86E", scope: !88, file: !3320, line: 40, type: !3485, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !19)
!3485 = !DISubroutineType(types: !3486)
!3486 = !{!9, !97}
!3487 = !DILocation(line: 19, column: 20, scope: !3458, inlinedAt: !3465)
!3488 = !DILocation(line: 131, column: 9, scope: !3460, inlinedAt: !3465)
!3489 = !DILocalVariable(name: "self", scope: !3490, file: !3320, line: 131, type: !97, align: 8)
!3490 = !DILexicalBlockFile(scope: !3491, file: !3320, discriminator: 0)
!3491 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hc933b8753dc073c5E", scope: !317, file: !307, line: 178, type: !3485, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3492)
!3492 = !{!3489}
!3493 = !DILocation(line: 131, column: 9, scope: !3490, inlinedAt: !3494)
!3494 = !DILocation(line: 23, column: 13, scope: !3461, inlinedAt: !3465)
!3495 = !DILocalVariable(name: "self", scope: !3496, file: !3320, line: 131, type: !9, align: 8)
!3496 = !DILexicalBlockFile(scope: !3497, file: !3320, discriminator: 0)
!3497 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h5e8f57e42e99a91fE", scope: !3498, file: !1056, line: 1231, type: !565, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !3499)
!3498 = !DINamespace(name: "{impl#11}", scope: !46)
!3499 = !{!3495, !3500}
!3500 = !DILocalVariable(name: "rhs", scope: !3496, file: !3320, line: 131, type: !9, align: 8)
!3501 = !DILocation(line: 131, column: 9, scope: !3496, inlinedAt: !3494)
!3502 = !DILocalVariable(name: "self", scope: !3503, file: !3320, line: 131, type: !97, align: 8)
!3503 = !DILexicalBlockFile(scope: !3504, file: !3320, discriminator: 0)
!3504 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hc933b8753dc073c5E", scope: !317, file: !307, line: 178, type: !3485, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3505)
!3505 = !{!3502}
!3506 = !DILocation(line: 131, column: 9, scope: !3503, inlinedAt: !3507)
!3507 = !DILocation(line: 29, column: 47, scope: !3461, inlinedAt: !3465)
!3508 = !DILocalVariable(name: "self", scope: !3509, file: !3320, line: 131, type: !92, align: 8)
!3509 = !DILexicalBlockFile(scope: !3510, file: !3320, discriminator: 0)
!3510 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h41ead865595ab8ddE", scope: !92, file: !3415, line: 330, type: !3470, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3511)
!3511 = !{!3508}
!3512 = !DILocation(line: 131, column: 9, scope: !3509, inlinedAt: !3513)
!3513 = !DILocation(line: 29, column: 65, scope: !3461, inlinedAt: !3465)
!3514 = !DILocalVariable(name: "self", scope: !3515, file: !3320, line: 131, type: !3418, align: 8)
!3515 = !DILexicalBlockFile(scope: !3516, file: !3320, discriminator: 0)
!3516 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hc8f195753fa091c9E", scope: !3518, file: !3517, line: 184, type: !3520, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3522)
!3517 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "6672664af50614ec3c026afd55307af7")
!3518 = !DINamespace(name: "{impl#0}", scope: !3519)
!3519 = !DINamespace(name: "mut_ptr", scope: !94)
!3520 = !DISubroutineType(types: !3521)
!3521 = !{!9, !3418}
!3522 = !{!3514}
!3523 = !DILocation(line: 131, column: 9, scope: !3515, inlinedAt: !3513)
!3524 = !DILocation(line: 131, column: 9, scope: !3463, inlinedAt: !3465)
!3525 = !DILocalVariable(name: "data", scope: !3526, file: !3320, line: 131, type: !97, align: 8)
!3526 = !DILexicalBlockFile(scope: !3527, file: !3320, discriminator: 0)
!3527 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h4e0dd63690dcfc18E", scope: !94, file: !337, line: 695, type: !338, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3528)
!3528 = !{!3525, !3529}
!3529 = !DILocalVariable(name: "len", scope: !3526, file: !3320, line: 131, type: !9, align: 8)
!3530 = !DILocation(line: 131, column: 9, scope: !3526, inlinedAt: !3531)
!3531 = !DILocation(line: 97, column: 11, scope: !3433, inlinedAt: !3450)
!3532 = !DILocalVariable(name: "self", scope: !3533, file: !3320, line: 131, type: !97, align: 8)
!3533 = !DILexicalBlockFile(scope: !3534, file: !3320, discriminator: 0)
!3534 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h46b8598cf8ede31bE", scope: !317, file: !307, line: 46, type: !348, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !351, retainedNodes: !3535)
!3535 = !{!3532}
!3536 = !DILocation(line: 131, column: 9, scope: !3533, inlinedAt: !3537)
!3537 = !DILocation(line: 696, column: 20, scope: !3527, inlinedAt: !3531)
!3538 = !DILocalVariable(name: "data_address", scope: !3539, file: !3320, line: 131, type: !6, align: 8)
!3539 = !DILexicalBlockFile(scope: !3540, file: !3320, discriminator: 0)
!3540 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h5216e18adf09ab15E", scope: !359, file: !358, line: 110, type: !360, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3541)
!3541 = !{!3538, !3542}
!3542 = !DILocalVariable(name: "metadata", scope: !3539, file: !3320, line: 131, type: !9, align: 8)
!3543 = !DILocation(line: 131, column: 9, scope: !3539, inlinedAt: !3544)
!3544 = !DILocation(line: 696, column: 5, scope: !3527, inlinedAt: !3531)
!3545 = !DILocation(line: 132, column: 6, scope: !3425)
!3546 = !DILocalVariable(name: "self", scope: !3547, file: !3320, line: 131, type: !92, align: 8)
!3547 = !DILexicalBlockFile(scope: !3548, file: !3320, discriminator: 0)
!3548 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h41ead865595ab8ddE", scope: !92, file: !3415, line: 330, type: !3470, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3549)
!3549 = !{!3546}
!3550 = !DILocation(line: 131, column: 9, scope: !3547, inlinedAt: !3551)
!3551 = !DILocation(line: 23, column: 43, scope: !3461, inlinedAt: !3465)
!3552 = !DILocalVariable(name: "self", scope: !3553, file: !3320, line: 131, type: !3418, align: 8)
!3553 = !DILexicalBlockFile(scope: !3554, file: !3320, discriminator: 0)
!3554 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hc8f195753fa091c9E", scope: !3518, file: !3517, line: 184, type: !3520, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3555)
!3555 = !{!3552}
!3556 = !DILocation(line: 131, column: 9, scope: !3553, inlinedAt: !3551)
!3557 = distinct !DISubprogram(name: "map<u32, char, core::str::iter::{impl#0}::next::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h512574eb021baf48E", scope: !2483, file: !428, line: 923, type: !3558, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3568, retainedNodes: !3563)
!3558 = !DISubroutineType(types: !3559)
!3559 = !{!448, !2483, !3560}
!3560 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !3561, file: !2, align: 8, elements: !19, identifier: "4cf36c936363045ec43ec5a0e97329aa")
!3561 = !DINamespace(name: "next", scope: !3562)
!3562 = !DINamespace(name: "{impl#0}", scope: !143)
!3563 = !{!3564, !3565, !3566}
!3564 = !DILocalVariable(name: "self", arg: 1, scope: !3557, file: !428, line: 923, type: !2483)
!3565 = !DILocalVariable(name: "f", arg: 2, scope: !3557, file: !428, line: 923, type: !3560)
!3566 = !DILocalVariable(name: "x", scope: !3567, file: !428, line: 929, type: !391, align: 4)
!3567 = distinct !DILexicalBlock(scope: !3557, file: !428, line: 929, column: 13)
!3568 = !{!2490, !3569, !3570}
!3569 = !DITemplateTypeParameter(name: "U", type: !385)
!3570 = !DITemplateTypeParameter(name: "F", type: !3560)
!3571 = !DILocation(line: 923, column: 28, scope: !3557)
!3572 = !DILocation(line: 923, column: 34, scope: !3557)
!3573 = !DILocation(line: 928, column: 15, scope: !3557)
!3574 = !DILocation(line: 928, column: 9, scope: !3557)
!3575 = !DILocation(line: 930, column: 21, scope: !3557)
!3576 = !DILocation(line: 929, column: 18, scope: !3557)
!3577 = !DILocation(line: 929, column: 18, scope: !3567)
!3578 = !DILocation(line: 929, column: 29, scope: !3567)
!3579 = !DILocation(line: 929, column: 24, scope: !3567)
!3580 = !DILocation(line: 929, column: 33, scope: !3557)
!3581 = !DILocation(line: 932, column: 5, scope: !3557)
!3582 = !DILocation(line: 932, column: 6, scope: !3557)
!3583 = distinct !DISubprogram(name: "is_none<(char, usize)>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_none17h842d5359bdf9a9d2E", scope: !3584, file: !428, line: 596, type: !3601, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3590, retainedNodes: !3604)
!3584 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(char, usize)>", scope: !64, file: !2, size: 128, align: 64, elements: !3585, templateParams: !19, identifier: "694ea34650389917b582541f2e509592")
!3585 = !{!3586}
!3586 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3584, file: !2, size: 128, align: 64, elements: !3587, templateParams: !19, identifier: "2bc8d470ad830310d9105443d5d4fa2d", discriminator: !3600)
!3587 = !{!3588, !3596}
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3586, file: !2, baseType: !3589, size: 128, align: 64, extraData: i64 1114112)
!3589 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3584, file: !2, size: 128, align: 64, elements: !19, templateParams: !3590, identifier: "b5c19313419389cc805c12f0dc56a8e6")
!3590 = !{!3591}
!3591 = !DITemplateTypeParameter(name: "T", type: !3592)
!3592 = !DICompositeType(tag: DW_TAG_structure_type, name: "(char, usize)", file: !2, size: 128, align: 64, elements: !3593, templateParams: !19, identifier: "cf90d1514ba7940c7ee88b72dbceefe7")
!3593 = !{!3594, !3595}
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3592, file: !2, baseType: !385, size: 32, align: 32)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !3592, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3586, file: !2, baseType: !3597, size: 128, align: 64)
!3597 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3584, file: !2, size: 128, align: 64, elements: !3598, templateParams: !3590, identifier: "1cad70f46f537388ce027578a0c4d214")
!3598 = !{!3599}
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3597, file: !2, baseType: !3592, size: 128, align: 64)
!3600 = !DIDerivedType(tag: DW_TAG_member, scope: !3584, file: !2, baseType: !391, size: 32, align: 32, flags: DIFlagArtificial)
!3601 = !DISubroutineType(types: !3602)
!3602 = !{!918, !3603}
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<(char, usize)>", baseType: !3584, size: 64, align: 64, dwarfAddressSpace: 0)
!3604 = !{!3605}
!3605 = !DILocalVariable(name: "self", arg: 1, scope: !3583, file: !428, line: 596, type: !3603)
!3606 = !DILocation(line: 596, column: 26, scope: !3583)
!3607 = !DILocation(line: 597, column: 10, scope: !3583)
!3608 = !DILocalVariable(name: "self", scope: !3609, file: !428, line: 597, type: !3603, align: 8)
!3609 = distinct !DISubprogram(name: "is_some<(char, usize)>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_some17h9bfbbd383281a55aE", scope: !3584, file: !428, line: 553, type: !3601, scopeLine: 553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3590, retainedNodes: !3610)
!3610 = !{!3608}
!3611 = !DILocation(line: 597, column: 10, scope: !3609, inlinedAt: !3607)
!3612 = !DILocation(line: 597, column: 9, scope: !3583)
!3613 = !DILocation(line: 598, column: 6, scope: !3583)
!3614 = distinct !DISubprogram(name: "map_err<f32, core::num::dec2flt::ParseFloatError, num_traits::ParseFloatError, num_traits::{impl#22}::from_str_radix::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha4a48964b3dc122bE", scope: !1598, file: !3615, line: 852, type: !3616, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3648, retainedNodes: !3641)
!3615 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "376d3f50f2b6d030dde9244768e6c6e1")
!3616 = !DISubroutineType(types: !3617)
!3617 = !{!3618, !1598, !3636}
!3618 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<f32, num_traits::ParseFloatError>", scope: !711, file: !2, size: 64, align: 32, elements: !3619, templateParams: !19, identifier: "3f5d7f897c04de33dafd4ad7edc4f17c")
!3619 = !{!3620}
!3620 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3618, file: !2, size: 64, align: 32, elements: !3621, templateParams: !19, identifier: "dd9a4cd18f299ecaab9b5fd385bb8d", discriminator: !3635)
!3621 = !{!3622, !3631}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !3620, file: !2, baseType: !3623, size: 64, align: 32, extraData: i64 0)
!3623 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !3618, file: !2, size: 64, align: 32, elements: !3624, templateParams: !3626, identifier: "60b3411341c957f0adc5fb1ef1494799")
!3624 = !{!3625}
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3623, file: !2, baseType: !682, size: 32, align: 32, offset: 32)
!3626 = !{!1122, !3627}
!3627 = !DITemplateTypeParameter(name: "E", type: !3628)
!3628 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParseFloatError", scope: !14, file: !2, size: 8, align: 8, elements: !3629, templateParams: !19, identifier: "4059859da46fc0522e6a989a8d4249af")
!3629 = !{!3630}
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !3628, file: !2, baseType: !13, size: 8, align: 8)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !3620, file: !2, baseType: !3632, size: 64, align: 32, extraData: i64 1)
!3632 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !3618, file: !2, size: 64, align: 32, elements: !3633, templateParams: !3626, identifier: "adc00032ff5941d053d4c1dfc2467ec1")
!3633 = !{!3634}
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3632, file: !2, baseType: !3628, size: 8, align: 8, offset: 8)
!3635 = !DIDerivedType(tag: DW_TAG_member, scope: !3618, file: !2, baseType: !15, size: 8, align: 8, flags: DIFlagArtificial)
!3636 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !3637, file: !2, size: 128, align: 64, elements: !3639, templateParams: !19, identifier: "eb81f88670827ff4b623b616012a088b")
!3637 = !DINamespace(name: "from_str_radix", scope: !3638)
!3638 = !DINamespace(name: "{impl#22}", scope: !14)
!3639 = !{!3640}
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__src", scope: !3636, file: !2, baseType: !507, size: 128, align: 64)
!3641 = !{!3642, !3643, !3644, !3646}
!3642 = !DILocalVariable(name: "self", arg: 1, scope: !3614, file: !3615, line: 852, type: !1598)
!3643 = !DILocalVariable(name: "op", arg: 2, scope: !3614, file: !3615, line: 852, type: !3636)
!3644 = !DILocalVariable(name: "t", scope: !3645, file: !3615, line: 854, type: !682, align: 4)
!3645 = distinct !DILexicalBlock(scope: !3614, file: !3615, line: 854, column: 13)
!3646 = !DILocalVariable(name: "e", scope: !3647, file: !3615, line: 855, type: !1608, align: 1)
!3647 = distinct !DILexicalBlock(scope: !3614, file: !3615, line: 855, column: 13)
!3648 = !{!1122, !1607, !3649, !3650}
!3649 = !DITemplateTypeParameter(name: "F", type: !3628)
!3650 = !DITemplateTypeParameter(name: "O", type: !3636)
!3651 = !DILocation(line: 852, column: 42, scope: !3614)
!3652 = !DILocation(line: 852, column: 48, scope: !3614)
!3653 = !DILocation(line: 853, column: 15, scope: !3614)
!3654 = !DILocation(line: 853, column: 9, scope: !3614)
!3655 = !DILocation(line: 854, column: 16, scope: !3614)
!3656 = !DILocation(line: 854, column: 16, scope: !3645)
!3657 = !DILocation(line: 854, column: 22, scope: !3645)
!3658 = !DILocation(line: 854, column: 26, scope: !3614)
!3659 = !DILocation(line: 855, column: 17, scope: !3614)
!3660 = !DILocation(line: 855, column: 17, scope: !3647)
!3661 = !DILocation(line: 855, column: 27, scope: !3647)
!3662 = !DILocation(line: 855, column: 23, scope: !3647)
!3663 = !DILocation(line: 855, column: 32, scope: !3614)
!3664 = !DILocation(line: 857, column: 5, scope: !3614)
!3665 = !DILocation(line: 857, column: 6, scope: !3614)
!3666 = distinct !DISubprogram(name: "map_err<f64, core::num::dec2flt::ParseFloatError, num_traits::ParseFloatError, num_traits::{impl#23}::from_str_radix::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hb519e03d703bef08E", scope: !1625, file: !3615, line: 852, type: !3667, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3695, retainedNodes: !3688)
!3667 = !DISubroutineType(types: !3668)
!3668 = !{!3669, !1625, !3683}
!3669 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<f64, num_traits::ParseFloatError>", scope: !711, file: !2, size: 128, align: 64, elements: !3670, templateParams: !19, identifier: "4b7a35900f905aa6c8c59aac91fd0493")
!3670 = !{!3671}
!3671 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3669, file: !2, size: 128, align: 64, elements: !3672, templateParams: !19, identifier: "b0427d117af4b25429bf712e676d9e1b", discriminator: !3682)
!3672 = !{!3673, !3678}
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !3671, file: !2, baseType: !3674, size: 128, align: 64, extraData: i64 0)
!3674 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !3669, file: !2, size: 128, align: 64, elements: !3675, templateParams: !3677, identifier: "137b76870910425131ed297e24a12801")
!3675 = !{!3676}
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3674, file: !2, baseType: !697, size: 64, align: 64, offset: 64)
!3677 = !{!1139, !3627}
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !3671, file: !2, baseType: !3679, size: 128, align: 64, extraData: i64 1)
!3679 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !3669, file: !2, size: 128, align: 64, elements: !3680, templateParams: !3677, identifier: "47c1e18e8aa697fa2a2a6db2a8e3e76b")
!3680 = !{!3681}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3679, file: !2, baseType: !3628, size: 8, align: 8, offset: 8)
!3682 = !DIDerivedType(tag: DW_TAG_member, scope: !3669, file: !2, baseType: !15, size: 8, align: 8, flags: DIFlagArtificial)
!3683 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !3684, file: !2, size: 128, align: 64, elements: !3686, templateParams: !19, identifier: "426dc8a92ba483d2795db9ad7fa941a")
!3684 = !DINamespace(name: "from_str_radix", scope: !3685)
!3685 = !DINamespace(name: "{impl#23}", scope: !14)
!3686 = !{!3687}
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__src", scope: !3683, file: !2, baseType: !507, size: 128, align: 64)
!3688 = !{!3689, !3690, !3691, !3693}
!3689 = !DILocalVariable(name: "self", arg: 1, scope: !3666, file: !3615, line: 852, type: !1625)
!3690 = !DILocalVariable(name: "op", arg: 2, scope: !3666, file: !3615, line: 852, type: !3683)
!3691 = !DILocalVariable(name: "t", scope: !3692, file: !3615, line: 854, type: !697, align: 8)
!3692 = distinct !DILexicalBlock(scope: !3666, file: !3615, line: 854, column: 13)
!3693 = !DILocalVariable(name: "e", scope: !3694, file: !3615, line: 855, type: !1608, align: 1)
!3694 = distinct !DILexicalBlock(scope: !3666, file: !3615, line: 855, column: 13)
!3695 = !{!1139, !1607, !3649, !3696}
!3696 = !DITemplateTypeParameter(name: "O", type: !3683)
!3697 = !DILocation(line: 852, column: 42, scope: !3666)
!3698 = !DILocation(line: 852, column: 48, scope: !3666)
!3699 = !DILocation(line: 853, column: 15, scope: !3666)
!3700 = !DILocation(line: 853, column: 9, scope: !3666)
!3701 = !DILocation(line: 854, column: 16, scope: !3666)
!3702 = !DILocation(line: 854, column: 16, scope: !3692)
!3703 = !DILocation(line: 854, column: 22, scope: !3692)
!3704 = !DILocation(line: 854, column: 26, scope: !3666)
!3705 = !DILocation(line: 855, column: 17, scope: !3666)
!3706 = !DILocation(line: 855, column: 17, scope: !3694)
!3707 = !DILocation(line: 855, column: 27, scope: !3694)
!3708 = !DILocation(line: 855, column: 23, scope: !3694)
!3709 = !DILocation(line: 855, column: 32, scope: !3666)
!3710 = !DILocation(line: 857, column: 5, scope: !3666)
!3711 = !DILocation(line: 857, column: 6, scope: !3666)
!3712 = distinct !DISubprogram(name: "into_iter<core::str::iter::Bytes>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1ac0ac8f0ea4d813E", scope: !3714, file: !3713, line: 271, type: !3716, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3720, retainedNodes: !3718)
!3713 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "73b4070628f6fcec74cccccb11afa9ef")
!3714 = !DINamespace(name: "{impl#0}", scope: !3715)
!3715 = !DINamespace(name: "collect", scope: !3090)
!3716 = !DISubroutineType(types: !3717)
!3717 = !{!142, !142}
!3718 = !{!3719}
!3719 = !DILocalVariable(name: "self", arg: 1, scope: !3712, file: !3713, line: 271, type: !142)
!3720 = !{!3721}
!3721 = !DITemplateTypeParameter(name: "I", type: !142)
!3722 = !DILocation(line: 271, column: 18, scope: !3712)
!3723 = !DILocation(line: 273, column: 6, scope: !3712)
!3724 = distinct !DISubprogram(name: "into_iter<core::slice::iter::Iter<u8>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h99c7c5edb85f7ec6E", scope: !3714, file: !3713, line: 271, type: !3725, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !151, retainedNodes: !3727)
!3725 = !DISubroutineType(types: !3726)
!3726 = !{!87, !87}
!3727 = !{!3728}
!3728 = !DILocalVariable(name: "self", arg: 1, scope: !3724, file: !3713, line: 271, type: !87)
!3729 = !DILocation(line: 271, column: 18, scope: !3724)
!3730 = !DILocation(line: 273, column: 6, scope: !3724)
!3731 = distinct !DISubprogram(name: "into_iter<&mut core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfd42fc2a0daf9593E", scope: !3714, file: !3713, line: 271, type: !3195, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3734, retainedNodes: !3732)
!3732 = !{!3733}
!3733 = !DILocalVariable(name: "self", arg: 1, scope: !3731, file: !3713, line: 271, type: !392)
!3734 = !{!3735}
!3735 = !DITemplateTypeParameter(name: "I", type: !392)
!3736 = !DILocation(line: 271, column: 18, scope: !3731)
!3737 = !DILocation(line: 273, column: 6, scope: !3731)
!3738 = distinct !DISubprogram(name: "as_ref<u8>", linkageName: "_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17hbc654c52d10227c1E", scope: !3740, file: !3739, line: 615, type: !3741, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3743)
!3739 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e9a22d2b51b4cfd278a09c9d531e27c4")
!3740 = !DINamespace(name: "{impl#8}", scope: !249)
!3741 = !DISubroutineType(types: !3742)
!3742 = !{!494, !494}
!3743 = !{!3744}
!3744 = !DILocalVariable(name: "self", arg: 1, scope: !3738, file: !3739, line: 615, type: !494)
!3745 = !DILocation(line: 615, column: 15, scope: !3738)
!3746 = !DILocation(line: 617, column: 6, scope: !3738)
!3747 = distinct !DISubprogram(name: "next<core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>>", linkageName: "_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha8f876ab095cc07bE", scope: !3748, file: !3087, line: 3824, type: !3749, scopeLine: 3824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3754, retainedNodes: !3752)
!3748 = !DINamespace(name: "{impl#0}", scope: !3089)
!3749 = !DISubroutineType(types: !3750)
!3750 = !{!373, !3751}
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut &mut core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>", baseType: !392, size: 64, align: 64, dwarfAddressSpace: 0)
!3752 = !{!3753}
!3753 = !DILocalVariable(name: "self", arg: 1, scope: !3747, file: !3087, line: 3824, type: !3751)
!3754 = !{!3755}
!3755 = !DITemplateTypeParameter(name: "I", type: !393)
!3756 = !DILocation(line: 3824, column: 13, scope: !3747)
!3757 = !DILocation(line: 3825, column: 9, scope: !3747)
!3758 = !DILocation(line: 3826, column: 6, scope: !3747)
!3759 = distinct !DISubprogram(name: "try_get_unchecked<core::slice::iter::Iter<u8>>", linkageName: "_ZN72_$LT$I$u20$as$u20$core..iter..adapters..zip..SpecTrustedRandomAccess$GT$17try_get_unchecked17h48c4431c05125caeE", scope: !3760, file: !56, line: 580, type: !181, scopeLine: 580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !151, retainedNodes: !3761)
!3760 = !DINamespace(name: "{impl#17}", scope: !58)
!3761 = !{!3762, !3763}
!3762 = !DILocalVariable(name: "self", arg: 1, scope: !3759, file: !56, line: 580, type: !183)
!3763 = !DILocalVariable(name: "index", arg: 2, scope: !3759, file: !56, line: 580, type: !9)
!3764 = !DILocation(line: 580, column: 33, scope: !3759)
!3765 = !DILocation(line: 580, column: 44, scope: !3759)
!3766 = !DILocation(line: 583, column: 18, scope: !3759)
!3767 = !DILocation(line: 584, column: 6, scope: !3759)
!3768 = distinct !DISubprogram(name: "equal<u8, u8>", linkageName: "_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17h96cf66691151e4e6E", scope: !3769, file: !3309, line: 82, type: !1647, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3011, retainedNodes: !3770)
!3769 = !DINamespace(name: "{impl#5}", scope: !3311)
!3770 = !{!3771, !3772, !3773}
!3771 = !DILocalVariable(name: "self", arg: 1, scope: !3768, file: !3309, line: 82, type: !494)
!3772 = !DILocalVariable(name: "other", arg: 2, scope: !3768, file: !3309, line: 82, type: !494)
!3773 = !DILocalVariable(name: "size", scope: !3774, file: !3309, line: 90, type: !9, align: 8)
!3774 = distinct !DILexicalBlock(scope: !3768, file: !3309, line: 90, column: 13)
!3775 = !DILocation(line: 82, column: 14, scope: !3768)
!3776 = !DILocation(line: 82, column: 21, scope: !3768)
!3777 = !DILocation(line: 83, column: 12, scope: !3768)
!3778 = !DILocation(line: 90, column: 41, scope: !3768)
!3779 = !DILocalVariable(name: "val", scope: !3780, file: !3309, line: 90, type: !494, align: 8)
!3780 = !DILexicalBlockFile(scope: !3781, file: !3309, discriminator: 0)
!3781 = distinct !DISubprogram(name: "size_of_val<[u8]>", linkageName: "_ZN4core3mem11size_of_val17h55f3e8bb570f8b78E", scope: !3480, file: !3479, line: 342, type: !3782, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3784)
!3782 = !DISubroutineType(types: !3783)
!3783 = !{!9, !494}
!3784 = !{!3779}
!3785 = !DILocation(line: 90, column: 24, scope: !3780, inlinedAt: !3786)
!3786 = !DILocation(line: 90, column: 24, scope: !3768)
!3787 = !DILocation(line: 90, column: 17, scope: !3774)
!3788 = !DILocation(line: 84, column: 20, scope: !3768)
!3789 = !DILocation(line: 93, column: 6, scope: !3768)
!3790 = !DILocation(line: 91, column: 20, scope: !3774)
!3791 = !DILocalVariable(name: "self", scope: !3792, file: !3309, line: 91, type: !494, align: 8)
!3792 = !DILexicalBlockFile(scope: !3793, file: !3309, discriminator: 0)
!3793 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h7d8d5578dc6cc1eeE", scope: !1666, file: !1665, line: 476, type: !3353, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3794)
!3794 = !{!3791}
!3795 = !DILocation(line: 91, column: 20, scope: !3792, inlinedAt: !3790)
!3796 = !DILocation(line: 91, column: 48, scope: !3774)
!3797 = !DILocalVariable(name: "self", scope: !3798, file: !3309, line: 91, type: !494, align: 8)
!3798 = !DILexicalBlockFile(scope: !3799, file: !3309, discriminator: 0)
!3799 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h7d8d5578dc6cc1eeE", scope: !1666, file: !1665, line: 476, type: !3353, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3800)
!3800 = !{!3797}
!3801 = !DILocation(line: 91, column: 48, scope: !3798, inlinedAt: !3796)
!3802 = !DILocation(line: 91, column: 13, scope: !3774)
!3803 = distinct !DISubprogram(name: "branch<char>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h934df6cd5ceddcc0E", scope: !429, file: !428, line: 2290, type: !430, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !454, retainedNodes: !3804)
!3804 = !{!3805, !3806}
!3805 = !DILocalVariable(name: "self", arg: 1, scope: !3803, file: !428, line: 2290, type: !448)
!3806 = !DILocalVariable(name: "v", scope: !3807, file: !428, line: 2292, type: !385, align: 4)
!3807 = distinct !DILexicalBlock(scope: !3803, file: !428, line: 2292, column: 13)
!3808 = !DILocation(line: 2290, column: 15, scope: !3803)
!3809 = !DILocation(line: 2291, column: 15, scope: !3803)
!3810 = !DILocation(line: 2291, column: 9, scope: !3803)
!3811 = !DILocation(line: 2293, column: 21, scope: !3803)
!3812 = !DILocation(line: 2293, column: 44, scope: !3803)
!3813 = !DILocation(line: 2292, column: 18, scope: !3803)
!3814 = !DILocation(line: 2292, column: 18, scope: !3807)
!3815 = !DILocation(line: 2292, column: 24, scope: !3807)
!3816 = !DILocation(line: 2295, column: 5, scope: !3803)
!3817 = !DILocation(line: 2295, column: 6, scope: !3803)
!3818 = distinct !DISubprogram(name: "get<u8>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h3a9a8b8b453d5703E", scope: !3819, file: !268, line: 207, type: !3820, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3822)
!3819 = !DINamespace(name: "{impl#2}", scope: !270)
!3820 = !DISubroutineType(types: !3821)
!3821 = !{!2219, !9, !494}
!3822 = !{!3823, !3824}
!3823 = !DILocalVariable(name: "self", arg: 1, scope: !3818, file: !268, line: 207, type: !9)
!3824 = !DILocalVariable(name: "slice", arg: 2, scope: !3818, file: !268, line: 207, type: !494)
!3825 = !DILocation(line: 207, column: 12, scope: !3818)
!3826 = !DILocation(line: 207, column: 18, scope: !3818)
!3827 = !DILocation(line: 209, column: 12, scope: !3818)
!3828 = !DILocation(line: 209, column: 87, scope: !3818)
!3829 = !DILocation(line: 209, column: 9, scope: !3818)
!3830 = !DILocation(line: 209, column: 49, scope: !3818)
!3831 = !DILocalVariable(name: "self", scope: !3832, file: !268, line: 209, type: !9, align: 8)
!3832 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hd8a40bfc9857e6c4E", scope: !3819, file: !268, line: 219, type: !3833, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3835)
!3833 = !DISubroutineType(types: !3834)
!3834 = !{!97, !9, !273}
!3835 = !{!3831, !3836, !3837}
!3836 = !DILocalVariable(name: "slice", scope: !3832, file: !268, line: 209, type: !273, align: 8)
!3837 = !DILocalVariable(name: "runtime", scope: !3838, file: !268, line: 209, type: !3840, align: 8)
!3838 = !DILexicalBlockFile(scope: !3839, file: !268, discriminator: 0)
!3839 = distinct !DILexicalBlock(scope: !3832, file: !291, line: 2336, column: 13)
!3840 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !3841, file: !2, size: 128, align: 64, elements: !3842, templateParams: !19, identifier: "7104d3ced1030246c65aea384aa33b26")
!3841 = !DINamespace(name: "get_unchecked", scope: !3819)
!3842 = !{!3843, !3844}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !3840, file: !2, baseType: !296, size: 64, align: 64)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !3840, file: !2, baseType: !299, size: 64, align: 64, offset: 64)
!3845 = !DILocation(line: 209, column: 49, scope: !3832, inlinedAt: !3830)
!3846 = !DILocation(line: 209, column: 68, scope: !3818)
!3847 = !DILocalVariable(name: "self", scope: !3848, file: !268, line: 209, type: !273, align: 8)
!3848 = !DILexicalBlockFile(scope: !3849, file: !268, discriminator: 0)
!3849 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hf8efb5a105c8a645E", scope: !308, file: !307, line: 1385, type: !310, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3850)
!3850 = !{!3847}
!3851 = !DILocation(line: 209, column: 49, scope: !3848, inlinedAt: !3852)
!3852 = !DILocation(line: 226, column: 13, scope: !3832, inlinedAt: !3830)
!3853 = !DILocalVariable(name: "self", scope: !3854, file: !268, line: 209, type: !97, align: 8)
!3854 = !DILexicalBlockFile(scope: !3855, file: !268, discriminator: 0)
!3855 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hdeb7c1729690ff7fE", scope: !317, file: !307, line: 871, type: !318, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3856)
!3856 = !{!3853, !3857}
!3857 = !DILocalVariable(name: "count", scope: !3854, file: !268, line: 209, type: !9, align: 8)
!3858 = !DILocation(line: 209, column: 49, scope: !3854, inlinedAt: !3852)
!3859 = !DILocalVariable(name: "self", scope: !3860, file: !268, line: 209, type: !97, align: 8)
!3860 = !DILexicalBlockFile(scope: !3861, file: !268, discriminator: 0)
!3861 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h8b35729b9a3365e8E", scope: !317, file: !307, line: 453, type: !327, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3862)
!3862 = !{!3859, !3863}
!3863 = !DILocalVariable(name: "count", scope: !3860, file: !268, line: 209, type: !329, align: 8)
!3864 = !DILocation(line: 209, column: 49, scope: !3860, inlinedAt: !3865)
!3865 = !DILocation(line: 876, column: 18, scope: !3855, inlinedAt: !3852)
!3866 = !DILocation(line: 209, column: 42, scope: !3818)
!3867 = !DILocation(line: 210, column: 6, scope: !3818)
!3868 = distinct !DISubprogram(name: "__iterator_get_unchecked", linkageName: "_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h3121124e48e5ceddE", scope: !3869, file: !2825, line: 301, type: !3870, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !3873)
!3869 = !DINamespace(name: "{impl#9}", scope: !143)
!3870 = !DISubroutineType(types: !3871)
!3871 = !{!15, !3872, !9}
!3872 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::Bytes", baseType: !142, size: 64, align: 64, dwarfAddressSpace: 0)
!3873 = !{!3874, !3875}
!3874 = !DILocalVariable(name: "self", arg: 1, scope: !3868, file: !2825, line: 301, type: !3872)
!3875 = !DILocalVariable(name: "idx", arg: 2, scope: !3868, file: !2825, line: 301, type: !9)
!3876 = !DILocation(line: 301, column: 40, scope: !3868)
!3877 = !DILocation(line: 301, column: 51, scope: !3868)
!3878 = !DILocation(line: 304, column: 18, scope: !3868)
!3879 = !DILocation(line: 305, column: 6, scope: !3868)
!3880 = distinct !DISubprogram(name: "size_hint", linkageName: "_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h748bcbe8628c60b7E", scope: !3869, file: !2825, line: 241, type: !3881, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !3883)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{!194, !3289}
!3883 = !{!3884}
!3884 = !DILocalVariable(name: "self", arg: 1, scope: !3880, file: !2825, line: 241, type: !3289)
!3885 = !DILocation(line: 241, column: 18, scope: !3880)
!3886 = !DILocation(line: 242, column: 9, scope: !3880)
!3887 = !DILocation(line: 243, column: 6, scope: !3880)
!3888 = distinct !DISubprogram(name: "next", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc2c8c40ef0f18e21E", scope: !3562, file: !2825, line: 41, type: !3889, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !3892)
!3889 = !DISubroutineType(types: !3890)
!3890 = !{!448, !3891}
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::Chars", baseType: !396, size: 64, align: 64, dwarfAddressSpace: 0)
!3892 = !{!3893}
!3893 = !DILocalVariable(name: "self", arg: 1, scope: !3888, file: !2825, line: 41, type: !3891)
!3894 = !DILocation(line: 41, column: 13, scope: !3888)
!3895 = !DILocation(line: 44, column: 18, scope: !3888)
!3896 = !DILocation(line: 45, column: 6, scope: !3888)
!3897 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hcffcd55cd65fd083E", scope: !3561, file: !2825, line: 44, type: !3898, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !3900)
!3898 = !DISubroutineType(types: !3899)
!3899 = !{!385, !3560, !391}
!3900 = !{!3901, !3902}
!3901 = !DILocalVariable(name: "ch", arg: 2, scope: !3897, file: !2825, line: 44, type: !391)
!3902 = !DILocalVariable(arg: 1, scope: !3897, file: !2825, line: 44, type: !3560)
!3903 = !DILocation(line: 44, column: 54, scope: !3897)
!3904 = !DILocation(line: 44, column: 55, scope: !3897)
!3905 = !DILocation(line: 44, column: 84, scope: !3897)
!3906 = !DILocalVariable(name: "i", scope: !3907, file: !2825, line: 44, type: !391, align: 4)
!3907 = !DILexicalBlockFile(scope: !3908, file: !2825, discriminator: 0)
!3908 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char18from_u32_unchecked17h0689cd2c8fb13d35E", scope: !3038, file: !3909, line: 123, type: !3910, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !3912)
!3909 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/char/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "d5e58489a0433b5803d74ec8aa0d2891")
!3910 = !DISubroutineType(types: !3911)
!3911 = !{!385, !391}
!3912 = !{!3906}
!3913 = !DILocation(line: 44, column: 59, scope: !3907, inlinedAt: !3914)
!3914 = !DILocation(line: 44, column: 59, scope: !3897)
!3915 = !DILocalVariable(name: "i", scope: !3916, file: !2825, line: 44, type: !391, align: 4)
!3916 = !DILexicalBlockFile(scope: !3917, file: !2825, discriminator: 0)
!3917 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char7convert18from_u32_unchecked17h999a68b0189ea21cE", scope: !3919, file: !3918, line: 24, type: !3910, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !3920)
!3918 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/char/convert.rs", directory: "", checksumkind: CSK_MD5, checksum: "682330ec4e366d97d021bfdf78a11076")
!3919 = !DINamespace(name: "convert", scope: !3038)
!3920 = !{!3915}
!3921 = !DILocation(line: 44, column: 59, scope: !3916, inlinedAt: !3922)
!3922 = !DILocation(line: 125, column: 14, scope: !3908, inlinedAt: !3914)
!3923 = !DILocation(line: 44, column: 58, scope: !3897)
!3924 = distinct !DISubprogram(name: "from_residual<(char, &str)>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hba229eeb2623e15bE", scope: !471, file: !428, line: 2302, type: !3925, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3933, retainedNodes: !3944)
!3925 = !DISubroutineType(types: !3926)
!3926 = !{!3927, !408}
!3927 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(char, &str)>", scope: !64, file: !2, size: 192, align: 64, elements: !3928, templateParams: !19, identifier: "d5772915d033ee821d2cb04e6bc247a2")
!3928 = !{!3929}
!3929 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3927, file: !2, size: 192, align: 64, elements: !3930, templateParams: !19, identifier: "12d33d6fb79dcca18ad64724d174ad8e", discriminator: !3943)
!3930 = !{!3931, !3939}
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3929, file: !2, baseType: !3932, size: 192, align: 64, extraData: i64 1114112)
!3932 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3927, file: !2, size: 192, align: 64, elements: !19, templateParams: !3933, identifier: "cb06ae2f0386329bad68e7e36dada9ae")
!3933 = !{!3934}
!3934 = !DITemplateTypeParameter(name: "T", type: !3935)
!3935 = !DICompositeType(tag: DW_TAG_structure_type, name: "(char, &str)", file: !2, size: 192, align: 64, elements: !3936, templateParams: !19, identifier: "504fc5b8d7e7bce0457906fb779b3a72")
!3936 = !{!3937, !3938}
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3935, file: !2, baseType: !385, size: 32, align: 32)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !3935, file: !2, baseType: !507, size: 128, align: 64, offset: 64)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3929, file: !2, baseType: !3940, size: 192, align: 64)
!3940 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3927, file: !2, size: 192, align: 64, elements: !3941, templateParams: !3933, identifier: "4e1022bb89479a4c24d2c7ede665e329")
!3941 = !{!3942}
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3940, file: !2, baseType: !3935, size: 192, align: 64)
!3943 = !DIDerivedType(tag: DW_TAG_member, scope: !3927, file: !2, baseType: !391, size: 32, align: 32, flags: DIFlagArtificial)
!3944 = !{!3945}
!3945 = !DILocalVariable(name: "residual", arg: 1, scope: !3924, file: !428, line: 2302, type: !408)
!3946 = !DILocation(line: 2302, column: 22, scope: !3924)
!3947 = !DILocation(line: 2304, column: 21, scope: !3924)
!3948 = !DILocation(line: 2306, column: 6, scope: !3924)
!3949 = distinct !DISubprogram(name: "eq<(), ()>", linkageName: "_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9c0c388c38acfc34E", scope: !3950, file: !218, line: 82, type: !3951, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !232, retainedNodes: !3954)
!3950 = !DINamespace(name: "{impl#11}", scope: !220)
!3951 = !DISubroutineType(types: !3952)
!3952 = !{!918, !3953, !3953}
!3953 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ops::control_flow::ControlFlow<(), ()>", baseType: !224, size: 64, align: 64, dwarfAddressSpace: 0)
!3954 = !{!3955, !3956, !3957, !3959, !3961, !3963, !3964, !3966}
!3955 = !DILocalVariable(name: "self", arg: 1, scope: !3949, file: !218, line: 82, type: !3953)
!3956 = !DILocalVariable(name: "other", arg: 2, scope: !3949, file: !218, line: 82, type: !3953)
!3957 = !DILocalVariable(name: "__self_tag", scope: !3958, file: !218, line: 82, type: !329, align: 8)
!3958 = distinct !DILexicalBlock(scope: !3949, file: !218, line: 82, column: 30)
!3959 = !DILocalVariable(name: "__arg1_tag", scope: !3960, file: !218, line: 82, type: !329, align: 8)
!3960 = distinct !DILexicalBlock(scope: !3958, file: !218, line: 82, column: 30)
!3961 = !DILocalVariable(name: "__self_0", scope: !3962, file: !218, line: 87, type: !919, align: 8)
!3962 = distinct !DILexicalBlock(scope: !3960, file: !218, line: 82, column: 30)
!3963 = !DILocalVariable(name: "__arg1_0", scope: !3962, file: !218, line: 87, type: !919, align: 8)
!3964 = !DILocalVariable(name: "__self_0", scope: !3965, file: !218, line: 91, type: !919, align: 8)
!3965 = distinct !DILexicalBlock(scope: !3960, file: !218, line: 82, column: 30)
!3966 = !DILocalVariable(name: "__arg1_0", scope: !3965, file: !218, line: 91, type: !919, align: 8)
!3967 = !DILocation(line: 82, column: 30, scope: !3949)
!3968 = !DILocation(line: 82, column: 30, scope: !3958)
!3969 = !DILocation(line: 82, column: 30, scope: !3960)
!3970 = !DILocation(line: 91, column: 11, scope: !3960)
!3971 = !DILocation(line: 91, column: 11, scope: !3965)
!3972 = !DILocation(line: 82, column: 38, scope: !3960)
!3973 = !DILocation(line: 87, column: 14, scope: !3960)
!3974 = !DILocation(line: 87, column: 14, scope: !3962)
!3975 = !DILocation(line: 82, column: 39, scope: !3949)
!3976 = distinct !DISubprogram(name: "__iterator_get_unchecked<u8>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h029f0420f93161dbE", scope: !3977, file: !3452, line: 329, type: !181, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3978)
!3977 = !DINamespace(name: "{impl#181}", scope: !88)
!3978 = !{!3979, !3980}
!3979 = !DILocalVariable(name: "self", arg: 1, scope: !3976, file: !3452, line: 329, type: !183)
!3980 = !DILocalVariable(name: "idx", arg: 2, scope: !3976, file: !3452, line: 329, type: !9)
!3981 = !DILocation(line: 329, column: 48, scope: !3976)
!3982 = !DILocation(line: 329, column: 59, scope: !3976)
!3983 = !DILocation(line: 340, column: 42, scope: !3976)
!3984 = !DILocalVariable(name: "self", scope: !3985, file: !3452, line: 340, type: !92, align: 8)
!3985 = !DILexicalBlockFile(scope: !3986, file: !3452, discriminator: 0)
!3986 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h41ead865595ab8ddE", scope: !92, file: !3415, line: 330, type: !3470, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3987)
!3987 = !{!3984}
!3988 = !DILocation(line: 340, column: 42, scope: !3985, inlinedAt: !3983)
!3989 = !DILocalVariable(name: "self", scope: !3990, file: !3452, line: 340, type: !3418, align: 8)
!3990 = !DILexicalBlockFile(scope: !3991, file: !3452, discriminator: 0)
!3991 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h00735792072d278eE", scope: !3518, file: !3517, line: 985, type: !3992, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !3994)
!3992 = !DISubroutineType(types: !3993)
!3993 = !{!3418, !3418, !9}
!3994 = !{!3989, !3995}
!3995 = !DILocalVariable(name: "count", scope: !3990, file: !3452, line: 340, type: !9, align: 8)
!3996 = !DILocation(line: 340, column: 42, scope: !3990, inlinedAt: !3983)
!3997 = !DILocation(line: 340, column: 64, scope: !3976)
!3998 = !DILocalVariable(name: "self", scope: !3999, file: !3452, line: 340, type: !3418, align: 8)
!3999 = !DILexicalBlockFile(scope: !4000, file: !3452, discriminator: 0)
!4000 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hd9d99b6fd1c9dc3eE", scope: !3518, file: !3517, line: 465, type: !4001, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4003)
!4001 = !DISubroutineType(types: !4002)
!4002 = !{!3418, !3418, !329}
!4003 = !{!3998, !4004}
!4004 = !DILocalVariable(name: "count", scope: !3999, file: !3452, line: 340, type: !329, align: 8)
!4005 = !DILocation(line: 340, column: 42, scope: !3999, inlinedAt: !4006)
!4006 = !DILocation(line: 990, column: 18, scope: !3991, inlinedAt: !3983)
!4007 = !DILocation(line: 341, column: 14, scope: !3976)
!4008 = distinct !DISubprogram(name: "next<u8>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h49c6b49183a26f7dE", scope: !3977, file: !3452, line: 134, type: !4009, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4011)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{!2219, !183}
!4011 = !{!4012}
!4012 = !DILocalVariable(name: "self", arg: 1, scope: !4008, file: !3452, line: 134, type: !183)
!4013 = !DILocation(line: 134, column: 21, scope: !4008)
!4014 = !DILocalVariable(name: "metadata", scope: !4015, file: !3452, line: 142, type: !7, align: 1)
!4015 = !DILexicalBlockFile(scope: !4016, file: !3452, discriminator: 0)
!4016 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h8bcdf5113001349fE", scope: !359, file: !358, line: 127, type: !4017, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4020)
!4017 = !DISubroutineType(types: !4018)
!4018 = !{!3418, !4019, !7}
!4019 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!4020 = !{!4021, !4014}
!4021 = !DILocalVariable(name: "data_address", scope: !4015, file: !3452, line: 142, type: !4019, align: 8)
!4022 = !DILocation(line: 142, column: 29, scope: !4015, inlinedAt: !4023)
!4023 = !DILocation(line: 668, column: 5, scope: !4024, inlinedAt: !4027)
!4024 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h874b548386310cbdE", scope: !94, file: !337, line: 667, type: !4025, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !19)
!4025 = !DISubroutineType(types: !4026)
!4026 = !{!3418}
!4027 = !DILocation(line: 38, column: 41, scope: !4028, inlinedAt: !4034)
!4028 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha7a267c4c5b122a1E", scope: !3518, file: !3517, line: 35, type: !4029, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4031)
!4029 = !DISubroutineType(types: !4030)
!4030 = !{!918, !3418}
!4031 = !{!4032}
!4032 = !DILocalVariable(name: "self", scope: !4033, file: !3452, line: 142, type: !3418, align: 8)
!4033 = !DILexicalBlockFile(scope: !4028, file: !3452, discriminator: 0)
!4034 = !DILocation(line: 142, column: 29, scope: !4008)
!4035 = !DILocalVariable(name: "metadata", scope: !4036, file: !3452, line: 144, type: !7, align: 1)
!4036 = !DILexicalBlockFile(scope: !4037, file: !3452, discriminator: 0)
!4037 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h5001af046c018773E", scope: !359, file: !358, line: 110, type: !3332, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4038)
!4038 = !{!4039, !4035}
!4039 = !DILocalVariable(name: "data_address", scope: !4036, file: !3452, line: 144, type: !6, align: 8)
!4040 = !DILocation(line: 144, column: 33, scope: !4036, inlinedAt: !4041)
!4041 = !DILocation(line: 513, column: 5, scope: !4042, inlinedAt: !4043)
!4042 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17h8927d454b5f75466E", scope: !94, file: !337, line: 512, type: !3339, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !19)
!4043 = !DILocation(line: 39, column: 43, scope: !4044, inlinedAt: !4048)
!4044 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hc428b7cda6710dbaE", scope: !317, file: !307, line: 36, type: !3343, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4045)
!4045 = !{!4046}
!4046 = !DILocalVariable(name: "self", scope: !4047, file: !3452, line: 144, type: !97, align: 8)
!4047 = !DILexicalBlockFile(scope: !4044, file: !3452, discriminator: 0)
!4048 = !DILocation(line: 144, column: 33, scope: !4008)
!4049 = !DILocalVariable(name: "self", scope: !4050, file: !3452, line: 142, type: !92, align: 8)
!4050 = !DILexicalBlockFile(scope: !4051, file: !3452, discriminator: 0)
!4051 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h41ead865595ab8ddE", scope: !92, file: !3415, line: 330, type: !3470, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4052)
!4052 = !{!4049}
!4053 = !DILocation(line: 142, column: 29, scope: !4050, inlinedAt: !4034)
!4054 = !DILocation(line: 142, column: 29, scope: !4033, inlinedAt: !4034)
!4055 = !DILocalVariable(name: "self", scope: !4056, file: !3452, line: 142, type: !3418, align: 8)
!4056 = !DILexicalBlockFile(scope: !4057, file: !3452, discriminator: 0)
!4057 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h8fe6028d923c6ae2E", scope: !3518, file: !3517, line: 707, type: !4058, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4060)
!4058 = !DISubroutineType(types: !4059)
!4059 = !{!918, !3418, !3418}
!4060 = !{!4055, !4061}
!4061 = !DILocalVariable(name: "other", scope: !4056, file: !3452, line: 142, type: !3418, align: 8)
!4062 = !DILocation(line: 142, column: 29, scope: !4056, inlinedAt: !4063)
!4063 = !DILocation(line: 38, column: 9, scope: !4028, inlinedAt: !4034)
!4064 = !DILocation(line: 142, column: 29, scope: !4065, inlinedAt: !4071)
!4065 = !DILexicalBlockFile(scope: !4066, file: !3452, discriminator: 0)
!4066 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h0f758e2741e2c6e6E", scope: !94, file: !337, line: 569, type: !4067, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3375, retainedNodes: !4069)
!4067 = !DISubroutineType(types: !4068)
!4068 = !{!4019, !9}
!4069 = !{!4070}
!4070 = !DILocalVariable(name: "addr", scope: !4065, file: !3452, line: 142, type: !9, align: 8)
!4071 = !DILocation(line: 668, column: 24, scope: !4024, inlinedAt: !4027)
!4072 = !DILocation(line: 142, column: 28, scope: !4008)
!4073 = !DILocation(line: 142, column: 21, scope: !4008)
!4074 = !DILocation(line: 143, column: 24, scope: !4008)
!4075 = !DILocation(line: 143, column: 21, scope: !4008)
!4076 = !DILocation(line: 144, column: 33, scope: !4047, inlinedAt: !4048)
!4077 = !DILocalVariable(name: "self", scope: !4078, file: !3452, line: 144, type: !97, align: 8)
!4078 = !DILexicalBlockFile(scope: !4079, file: !3452, discriminator: 0)
!4079 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h908da1a1470bd1a0E", scope: !317, file: !307, line: 777, type: !3362, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4080)
!4080 = !{!4077, !4081}
!4081 = !DILocalVariable(name: "other", scope: !4078, file: !3452, line: 144, type: !97, align: 8)
!4082 = !DILocation(line: 144, column: 33, scope: !4078, inlinedAt: !4083)
!4083 = !DILocation(line: 39, column: 9, scope: !4044, inlinedAt: !4048)
!4084 = !DILocation(line: 144, column: 33, scope: !4085, inlinedAt: !4089)
!4085 = !DILexicalBlockFile(scope: !4086, file: !3452, discriminator: 0)
!4086 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h0b49d469c5ae04d6E", scope: !94, file: !337, line: 538, type: !3371, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !3375, retainedNodes: !4087)
!4087 = !{!4088}
!4088 = !DILocalVariable(name: "addr", scope: !4085, file: !3452, line: 144, type: !9, align: 8)
!4089 = !DILocation(line: 513, column: 20, scope: !4042, inlinedAt: !4043)
!4090 = !DILocation(line: 144, column: 32, scope: !4008)
!4091 = !DILocation(line: 144, column: 25, scope: !4008)
!4092 = !DILocation(line: 146, column: 24, scope: !4008)
!4093 = !DILocalVariable(name: "self", scope: !4094, file: !3452, line: 146, type: !92, align: 8)
!4094 = !DILexicalBlockFile(scope: !4095, file: !3452, discriminator: 0)
!4095 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h41ead865595ab8ddE", scope: !92, file: !3415, line: 330, type: !3470, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4096)
!4096 = !{!4093}
!4097 = !DILocation(line: 146, column: 24, scope: !4094, inlinedAt: !4098)
!4098 = !DILocation(line: 8, column: 9, scope: !4008)
!4099 = !DILocation(line: 149, column: 30, scope: !4008)
!4100 = !DILocalVariable(name: "self", scope: !4101, file: !3452, line: 149, type: !183, align: 8)
!4101 = distinct !DISubprogram(name: "post_inc_start<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h7c8ecf94ba7428eeE", scope: !87, file: !3452, line: 85, type: !4102, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4104)
!4102 = !DISubroutineType(types: !4103)
!4103 = !{!97, !183, !329}
!4104 = !{!4100, !4105, !4106}
!4105 = !DILocalVariable(name: "offset", scope: !4101, file: !3452, line: 149, type: !329, align: 8)
!4106 = !DILocalVariable(name: "old", scope: !4107, file: !3452, line: 149, type: !3418, align: 8)
!4107 = distinct !DILexicalBlock(scope: !4101, file: !3452, line: 90, column: 21)
!4108 = !DILocation(line: 149, column: 30, scope: !4101, inlinedAt: !4109)
!4109 = !DILocation(line: 53, column: 47, scope: !4008)
!4110 = !DILocation(line: 147, column: 25, scope: !4008)
!4111 = !DILocation(line: 146, column: 21, scope: !4008)
!4112 = !DILocation(line: 152, column: 14, scope: !4008)
!4113 = !DILocalVariable(name: "self", scope: !4114, file: !3452, line: 149, type: !97, align: 8)
!4114 = !DILexicalBlockFile(scope: !4115, file: !3452, discriminator: 0)
!4115 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h18b1176233243c73E", scope: !317, file: !307, line: 536, type: !327, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4116)
!4116 = !{!4113, !4117}
!4117 = !DILocalVariable(name: "count", scope: !4114, file: !3452, line: 149, type: !329, align: 8)
!4118 = !DILocation(line: 149, column: 30, scope: !4114, inlinedAt: !4119)
!4119 = !DILocation(line: 67, column: 29, scope: !4101, inlinedAt: !4109)
!4120 = !DILocalVariable(name: "self", scope: !4121, file: !3452, line: 149, type: !92, align: 8)
!4121 = !DILexicalBlockFile(scope: !4122, file: !3452, discriminator: 0)
!4122 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h41ead865595ab8ddE", scope: !92, file: !3415, line: 330, type: !3470, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4123)
!4123 = !{!4120}
!4124 = !DILocation(line: 149, column: 30, scope: !4121, inlinedAt: !4125)
!4125 = !DILocation(line: 90, column: 31, scope: !4101, inlinedAt: !4109)
!4126 = !DILocation(line: 149, column: 30, scope: !4107, inlinedAt: !4109)
!4127 = !DILocalVariable(name: "self", scope: !4128, file: !3452, line: 149, type: !92, align: 8)
!4128 = !DILexicalBlockFile(scope: !4129, file: !3452, discriminator: 0)
!4129 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h41ead865595ab8ddE", scope: !92, file: !3415, line: 330, type: !3470, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4130)
!4130 = !{!4127}
!4131 = !DILocation(line: 149, column: 30, scope: !4128, inlinedAt: !4132)
!4132 = !DILocation(line: 93, column: 64, scope: !4107, inlinedAt: !4109)
!4133 = !DILocalVariable(name: "self", scope: !4134, file: !3452, line: 149, type: !3418, align: 8)
!4134 = !DILexicalBlockFile(scope: !4135, file: !3452, discriminator: 0)
!4135 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hd9d99b6fd1c9dc3eE", scope: !3518, file: !3517, line: 465, type: !4001, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4136)
!4136 = !{!4133, !4137}
!4137 = !DILocalVariable(name: "count", scope: !4134, file: !3452, line: 149, type: !329, align: 8)
!4138 = !DILocation(line: 149, column: 30, scope: !4134, inlinedAt: !4132)
!4139 = !DILocalVariable(name: "ptr", scope: !4140, file: !3452, line: 149, type: !3418, align: 8)
!4140 = !DILexicalBlockFile(scope: !4141, file: !3452, discriminator: 0)
!4141 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17he2917240d1660175E", scope: !92, file: !3415, line: 196, type: !3416, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4142)
!4142 = !{!4139}
!4143 = !DILocation(line: 149, column: 30, scope: !4140, inlinedAt: !4144)
!4144 = !DILocation(line: 93, column: 41, scope: !4107, inlinedAt: !4109)
!4145 = !DILocation(line: 149, column: 25, scope: !4008)
!4146 = !DILocalVariable(name: "self", scope: !4147, file: !3452, line: 149, type: !92, align: 8)
!4147 = !DILexicalBlockFile(scope: !4148, file: !3452, discriminator: 0)
!4148 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h41ead865595ab8ddE", scope: !92, file: !3415, line: 330, type: !3470, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4149)
!4149 = !{!4146}
!4150 = !DILocation(line: 149, column: 30, scope: !4147, inlinedAt: !4151)
!4151 = !DILocation(line: 88, column: 21, scope: !4101, inlinedAt: !4109)
!4152 = distinct !DISubprogram(name: "size_hint<u8>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h69a171558dec0b6eE", scope: !3977, file: !3452, line: 155, type: !4153, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4155)
!4153 = !DISubroutineType(types: !4154)
!4154 = !{!194, !3279}
!4155 = !{!4156, !4157, !4159, !4161, !4163}
!4156 = !DILocalVariable(name: "self", arg: 1, scope: !4152, file: !3452, line: 155, type: !3279)
!4157 = !DILocalVariable(name: "exact", scope: !4158, file: !3452, line: 156, type: !9, align: 8)
!4158 = distinct !DILexicalBlock(scope: !4152, file: !3452, line: 156, column: 17)
!4159 = !DILocalVariable(name: "start", scope: !4160, file: !3452, line: 156, type: !92, align: 8)
!4160 = distinct !DILexicalBlock(scope: !4152, file: !3452, line: 18, column: 9)
!4161 = !DILocalVariable(name: "size", scope: !4162, file: !3452, line: 156, type: !9, align: 8)
!4162 = distinct !DILexicalBlock(scope: !4160, file: !3452, line: 19, column: 9)
!4163 = !DILocalVariable(name: "diff", scope: !4164, file: !3452, line: 156, type: !9, align: 8)
!4164 = distinct !DILexicalBlock(scope: !4162, file: !3452, line: 29, column: 13)
!4165 = !DILocation(line: 155, column: 26, scope: !4152)
!4166 = !DILocation(line: 156, column: 21, scope: !4158)
!4167 = !DILocation(line: 156, column: 29, scope: !4152)
!4168 = !DILocation(line: 156, column: 29, scope: !4160)
!4169 = !DILocation(line: 156, column: 29, scope: !4170, inlinedAt: !4172)
!4170 = !DILexicalBlockFile(scope: !4171, file: !3452, discriminator: 0)
!4171 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17h1bc4045107d8b7b3E", scope: !3480, file: !3479, line: 314, type: !3481, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !19)
!4172 = !DILocation(line: 41, column: 5, scope: !4173, inlinedAt: !4174)
!4173 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h1cc0e66cda3f6f86E", scope: !88, file: !3320, line: 40, type: !3485, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !19)
!4174 = !DILocation(line: 19, column: 20, scope: !4160)
!4175 = !DILocation(line: 156, column: 29, scope: !4162)
!4176 = !DILocalVariable(name: "self", scope: !4177, file: !3452, line: 156, type: !97, align: 8)
!4177 = !DILexicalBlockFile(scope: !4178, file: !3452, discriminator: 0)
!4178 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hc933b8753dc073c5E", scope: !317, file: !307, line: 178, type: !3485, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4179)
!4179 = !{!4176}
!4180 = !DILocation(line: 156, column: 29, scope: !4177, inlinedAt: !4181)
!4181 = !DILocation(line: 23, column: 13, scope: !4162)
!4182 = !DILocalVariable(name: "self", scope: !4183, file: !3452, line: 156, type: !9, align: 8)
!4183 = !DILexicalBlockFile(scope: !4184, file: !3452, discriminator: 0)
!4184 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h5e8f57e42e99a91fE", scope: !3498, file: !1056, line: 1231, type: !565, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !4185)
!4185 = !{!4182, !4186}
!4186 = !DILocalVariable(name: "rhs", scope: !4183, file: !3452, line: 156, type: !9, align: 8)
!4187 = !DILocation(line: 156, column: 29, scope: !4183, inlinedAt: !4181)
!4188 = !DILocalVariable(name: "self", scope: !4189, file: !3452, line: 156, type: !97, align: 8)
!4189 = !DILexicalBlockFile(scope: !4190, file: !3452, discriminator: 0)
!4190 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hc933b8753dc073c5E", scope: !317, file: !307, line: 178, type: !3485, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4191)
!4191 = !{!4188}
!4192 = !DILocation(line: 156, column: 29, scope: !4189, inlinedAt: !4193)
!4193 = !DILocation(line: 29, column: 47, scope: !4162)
!4194 = !DILocalVariable(name: "self", scope: !4195, file: !3452, line: 156, type: !92, align: 8)
!4195 = !DILexicalBlockFile(scope: !4196, file: !3452, discriminator: 0)
!4196 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h41ead865595ab8ddE", scope: !92, file: !3415, line: 330, type: !3470, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4197)
!4197 = !{!4194}
!4198 = !DILocation(line: 156, column: 29, scope: !4195, inlinedAt: !4199)
!4199 = !DILocation(line: 29, column: 65, scope: !4162)
!4200 = !DILocalVariable(name: "self", scope: !4201, file: !3452, line: 156, type: !3418, align: 8)
!4201 = !DILexicalBlockFile(scope: !4202, file: !3452, discriminator: 0)
!4202 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hc8f195753fa091c9E", scope: !3518, file: !3517, line: 184, type: !3520, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4203)
!4203 = !{!4200}
!4204 = !DILocation(line: 156, column: 29, scope: !4201, inlinedAt: !4199)
!4205 = !DILocation(line: 156, column: 29, scope: !4164)
!4206 = !DILocation(line: 157, column: 18, scope: !4158)
!4207 = !DILocation(line: 157, column: 30, scope: !4158)
!4208 = !DILocation(line: 157, column: 25, scope: !4158)
!4209 = !DILocation(line: 157, column: 17, scope: !4158)
!4210 = !DILocation(line: 158, column: 14, scope: !4152)
!4211 = !DILocalVariable(name: "self", scope: !4212, file: !3452, line: 156, type: !92, align: 8)
!4212 = !DILexicalBlockFile(scope: !4213, file: !3452, discriminator: 0)
!4213 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h41ead865595ab8ddE", scope: !92, file: !3415, line: 330, type: !3470, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4214)
!4214 = !{!4211}
!4215 = !DILocation(line: 156, column: 29, scope: !4212, inlinedAt: !4216)
!4216 = !DILocation(line: 23, column: 43, scope: !4162)
!4217 = !DILocalVariable(name: "self", scope: !4218, file: !3452, line: 156, type: !3418, align: 8)
!4218 = !DILexicalBlockFile(scope: !4219, file: !3452, discriminator: 0)
!4219 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hc8f195753fa091c9E", scope: !3518, file: !3517, line: 184, type: !3520, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !98, retainedNodes: !4220)
!4220 = !{!4217}
!4221 = !DILocation(line: 156, column: 29, scope: !4218, inlinedAt: !4216)
!4222 = distinct !DISubprogram(name: "from_output<(), ()>", linkageName: "_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h88b553f8594f52e7E", scope: !4223, file: !218, line: 103, type: !4224, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !232, retainedNodes: !4226)
!4223 = !DINamespace(name: "{impl#0}", scope: !220)
!4224 = !DISubroutineType(types: !4225)
!4225 = !{!224, !7}
!4226 = !{!4227}
!4227 = !DILocalVariable(name: "output", arg: 1, scope: !4222, file: !218, line: 103, type: !7)
!4228 = !DILocation(line: 103, column: 20, scope: !4222)
!4229 = !DILocation(line: 104, column: 9, scope: !4222)
!4230 = !DILocation(line: 105, column: 6, scope: !4222)
!4231 = distinct !DISubprogram(name: "branch<(), ()>", linkageName: "_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hbe9c1b26215460c4E", scope: !4223, file: !218, line: 108, type: !4232, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !232, retainedNodes: !4249)
!4232 = !DISubroutineType(types: !4233)
!4233 = !{!4234, !224}
!4234 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::ops::control_flow::ControlFlow<(), core::convert::Infallible>, ()>", scope: !220, file: !2, size: 8, align: 8, elements: !4235, templateParams: !19, identifier: "d2837ae961dddbcadb05adc1de674319")
!4235 = !{!4236}
!4236 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4234, file: !2, size: 8, align: 8, elements: !4237, templateParams: !19, identifier: "11f2510ebf7e84f6ebdbaf9b2777c441", discriminator: !4248)
!4237 = !{!4238, !4244}
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !4236, file: !2, baseType: !4239, size: 8, align: 8, extraData: i64 0)
!4239 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !4234, file: !2, size: 8, align: 8, elements: !4240, templateParams: !4242, identifier: "909c42ad02fdb6df36fd54dfc990d67c")
!4240 = !{!4241}
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4239, file: !2, baseType: !7, align: 8, offset: 8)
!4242 = !{!4243, !234}
!4243 = !DITemplateTypeParameter(name: "B", type: !240)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !4236, file: !2, baseType: !4245, size: 8, align: 8, extraData: i64 1)
!4245 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !4234, file: !2, size: 8, align: 8, elements: !4246, templateParams: !4242, identifier: "cb4032c5c1a707c0f19c56a57ae118f")
!4246 = !{!4247}
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4245, file: !2, baseType: !240, align: 8, offset: 8)
!4248 = !DIDerivedType(tag: DW_TAG_member, scope: !4234, file: !2, baseType: !15, size: 8, align: 8, flags: DIFlagArtificial)
!4249 = !{!4250, !4251, !4253}
!4250 = !DILocalVariable(name: "self", arg: 1, scope: !4231, file: !218, line: 108, type: !224)
!4251 = !DILocalVariable(name: "c", scope: !4252, file: !218, line: 110, type: !7, align: 1)
!4252 = distinct !DILexicalBlock(scope: !4231, file: !218, line: 110, column: 13)
!4253 = !DILocalVariable(name: "b", scope: !4254, file: !218, line: 111, type: !7, align: 1)
!4254 = distinct !DILexicalBlock(scope: !4231, file: !218, line: 111, column: 13)
!4255 = !DILocation(line: 108, column: 15, scope: !4231)
!4256 = !DILocation(line: 110, column: 35, scope: !4252)
!4257 = !DILocation(line: 111, column: 32, scope: !4254)
!4258 = !DILocation(line: 109, column: 15, scope: !4231)
!4259 = !DILocation(line: 109, column: 9, scope: !4231)
!4260 = !DILocation(line: 110, column: 41, scope: !4252)
!4261 = !DILocation(line: 110, column: 64, scope: !4231)
!4262 = !DILocation(line: 111, column: 57, scope: !4254)
!4263 = !DILocation(line: 111, column: 38, scope: !4254)
!4264 = !DILocation(line: 111, column: 78, scope: !4231)
!4265 = !DILocation(line: 113, column: 6, scope: !4231)
!4266 = distinct !DISubprogram(name: "integer_decode_f32", linkageName: "_ZN10num_traits5float18integer_decode_f3217hcc569b9c390c9910E", scope: !4268, file: !4267, line: 2049, type: !4269, scopeLine: 2049, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !4277)
!4267 = !DIFile(filename: "src/float.rs", directory: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19", checksumkind: CSK_MD5, checksum: "fcb69c0c6a48e469130af4abe170ef4c")
!4268 = !DINamespace(name: "float", scope: !14)
!4269 = !DISubroutineType(types: !4270)
!4270 = !{!4271, !682}
!4271 = !DICompositeType(tag: DW_TAG_structure_type, name: "(u64, i16, i8)", file: !2, size: 128, align: 64, elements: !4272, templateParams: !19, identifier: "4337c68391f3fa6dfa540dcc23eee406")
!4272 = !{!4273, !4274, !4276}
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4271, file: !2, baseType: !82, size: 64, align: 64)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !4271, file: !2, baseType: !4275, size: 16, align: 16, offset: 64)
!4275 = !DIBasicType(name: "i16", size: 16, encoding: DW_ATE_signed)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "__2", scope: !4271, file: !2, baseType: !39, size: 8, align: 8, offset: 80)
!4277 = !{!4278, !4279, !4281, !4283, !4285}
!4278 = !DILocalVariable(name: "f", arg: 1, scope: !4266, file: !4267, line: 2049, type: !682)
!4279 = !DILocalVariable(name: "bits", scope: !4280, file: !4267, line: 2050, type: !391, align: 4)
!4280 = distinct !DILexicalBlock(scope: !4266, file: !4267, line: 2050, column: 5)
!4281 = !DILocalVariable(name: "sign", scope: !4282, file: !4267, line: 2051, type: !39, align: 1)
!4282 = distinct !DILexicalBlock(scope: !4280, file: !4267, line: 2051, column: 5)
!4283 = !DILocalVariable(name: "exponent", scope: !4284, file: !4267, line: 2052, type: !4275, align: 2)
!4284 = distinct !DILexicalBlock(scope: !4282, file: !4267, line: 2052, column: 5)
!4285 = !DILocalVariable(name: "mantissa", scope: !4286, file: !4267, line: 2053, type: !391, align: 4)
!4286 = distinct !DILexicalBlock(scope: !4284, file: !4267, line: 2053, column: 5)
!4287 = !DILocation(line: 2049, column: 23, scope: !4266)
!4288 = !DILocation(line: 2051, column: 9, scope: !4282)
!4289 = !DILocation(line: 2052, column: 9, scope: !4284)
!4290 = !DILocation(line: 2053, column: 9, scope: !4286)
!4291 = !DILocation(line: 2050, column: 21, scope: !4266)
!4292 = !DILocation(line: 2050, column: 9, scope: !4280)
!4293 = !DILocation(line: 2051, column: 23, scope: !4280)
!4294 = !DILocation(line: 2051, column: 41, scope: !4280)
!4295 = !DILocation(line: 2051, column: 20, scope: !4280)
!4296 = !DILocation(line: 2051, column: 52, scope: !4280)
!4297 = !DILocation(line: 2052, column: 30, scope: !4282)
!4298 = !DILocation(line: 2052, column: 29, scope: !4282)
!4299 = !DILocation(line: 2053, column: 23, scope: !4284)
!4300 = !DILocation(line: 2054, column: 9, scope: !4284)
!4301 = !DILocation(line: 2056, column: 9, scope: !4284)
!4302 = !DILocation(line: 2053, column: 20, scope: !4284)
!4303 = !DILocation(line: 2059, column: 5, scope: !4286)
!4304 = !DILocation(line: 2060, column: 6, scope: !4286)
!4305 = !DILocation(line: 2060, column: 23, scope: !4286)
!4306 = !DILocation(line: 2060, column: 33, scope: !4286)
!4307 = !DILocation(line: 2060, column: 5, scope: !4286)
!4308 = !DILocation(line: 2061, column: 2, scope: !4266)
!4309 = distinct !DISubprogram(name: "integer_decode_f64", linkageName: "_ZN10num_traits5float18integer_decode_f6417h162edbd33bc04f83E", scope: !4268, file: !4267, line: 2063, type: !4310, scopeLine: 2063, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !4312)
!4310 = !DISubroutineType(types: !4311)
!4311 = !{!4271, !697}
!4312 = !{!4313, !4314, !4316, !4318, !4320}
!4313 = !DILocalVariable(name: "f", arg: 1, scope: !4309, file: !4267, line: 2063, type: !697)
!4314 = !DILocalVariable(name: "bits", scope: !4315, file: !4267, line: 2064, type: !82, align: 8)
!4315 = distinct !DILexicalBlock(scope: !4309, file: !4267, line: 2064, column: 5)
!4316 = !DILocalVariable(name: "sign", scope: !4317, file: !4267, line: 2065, type: !39, align: 1)
!4317 = distinct !DILexicalBlock(scope: !4315, file: !4267, line: 2065, column: 5)
!4318 = !DILocalVariable(name: "exponent", scope: !4319, file: !4267, line: 2066, type: !4275, align: 2)
!4319 = distinct !DILexicalBlock(scope: !4317, file: !4267, line: 2066, column: 5)
!4320 = !DILocalVariable(name: "mantissa", scope: !4321, file: !4267, line: 2067, type: !82, align: 8)
!4321 = distinct !DILexicalBlock(scope: !4319, file: !4267, line: 2067, column: 5)
!4322 = !DILocation(line: 2063, column: 23, scope: !4309)
!4323 = !DILocation(line: 2065, column: 9, scope: !4317)
!4324 = !DILocation(line: 2066, column: 9, scope: !4319)
!4325 = !DILocation(line: 2067, column: 9, scope: !4321)
!4326 = !DILocation(line: 2064, column: 21, scope: !4309)
!4327 = !DILocation(line: 2064, column: 9, scope: !4315)
!4328 = !DILocation(line: 2065, column: 23, scope: !4315)
!4329 = !DILocation(line: 2065, column: 41, scope: !4315)
!4330 = !DILocation(line: 2065, column: 20, scope: !4315)
!4331 = !DILocation(line: 2065, column: 52, scope: !4315)
!4332 = !DILocation(line: 2066, column: 30, scope: !4317)
!4333 = !DILocation(line: 2066, column: 29, scope: !4317)
!4334 = !DILocation(line: 2067, column: 23, scope: !4319)
!4335 = !DILocation(line: 2068, column: 9, scope: !4319)
!4336 = !DILocation(line: 2070, column: 9, scope: !4319)
!4337 = !DILocation(line: 2067, column: 20, scope: !4319)
!4338 = !DILocation(line: 2073, column: 5, scope: !4321)
!4339 = !DILocation(line: 2074, column: 6, scope: !4321)
!4340 = !DILocation(line: 2074, column: 16, scope: !4321)
!4341 = !DILocation(line: 2074, column: 26, scope: !4321)
!4342 = !DILocation(line: 2074, column: 5, scope: !4321)
!4343 = !DILocation(line: 2075, column: 2, scope: !4309)
!4344 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN66_$LT$num_traits..ParseFloatError$u20$as$u20$core..fmt..Display$GT$3fmt17h59cbe774a3280ba1E", scope: !4345, file: !1223, line: 200, type: !4346, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !4349)
!4345 = !DINamespace(name: "{impl#7}", scope: !14)
!4346 = !DISubroutineType(types: !4347)
!4347 = !{!710, !4348, !729}
!4348 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&num_traits::ParseFloatError", baseType: !3628, size: 64, align: 64, dwarfAddressSpace: 0)
!4349 = !{!4350, !4351, !4352}
!4350 = !DILocalVariable(name: "self", arg: 1, scope: !4344, file: !1223, line: 200, type: !4348)
!4351 = !DILocalVariable(name: "f", arg: 2, scope: !4344, file: !1223, line: 200, type: !729)
!4352 = !DILocalVariable(name: "description", scope: !4353, file: !1223, line: 201, type: !507, align: 8)
!4353 = distinct !DILexicalBlock(scope: !4344, file: !1223, line: 201, column: 9)
!4354 = !DILocation(line: 200, column: 12, scope: !4344)
!4355 = !DILocation(line: 200, column: 19, scope: !4344)
!4356 = !DILocation(line: 201, column: 13, scope: !4353)
!4357 = !DILocation(line: 201, column: 33, scope: !4344)
!4358 = !DILocation(line: 201, column: 27, scope: !4344)
!4359 = !DILocation(line: 202, column: 38, scope: !4344)
!4360 = !DILocation(line: 203, column: 40, scope: !4344)
!4361 = !DILocation(line: 203, column: 62, scope: !4344)
!4362 = !DILocation(line: 206, column: 9, scope: !4353)
!4363 = !DILocation(line: 207, column: 6, scope: !4344)
!4364 = distinct !DISubprogram(name: "str_to_ascii_lower_eq_str", linkageName: "_ZN10num_traits25str_to_ascii_lower_eq_str17he6b1e18fd8245256E", scope: !14, file: !1223, line: 210, type: !2989, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !4365)
!4365 = !{!4366, !4367}
!4366 = !DILocalVariable(name: "a", arg: 1, scope: !4364, file: !1223, line: 210, type: !507)
!4367 = !DILocalVariable(name: "b", arg: 2, scope: !4364, file: !1223, line: 210, type: !507)
!4368 = !DILocation(line: 210, column: 30, scope: !4364)
!4369 = !DILocation(line: 210, column: 39, scope: !4364)
!4370 = !DILocation(line: 211, column: 5, scope: !4364)
!4371 = !DILocation(line: 211, column: 16, scope: !4364)
!4372 = !DILocation(line: 212, column: 12, scope: !4364)
!4373 = !DILocation(line: 212, column: 26, scope: !4364)
!4374 = !DILocation(line: 216, column: 2, scope: !4364)
!4375 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10num_traits25str_to_ascii_lower_eq_str28_$u7b$$u7b$closure$u7d$$u7d$17h7005b0a191bc2f89E", scope: !3094, file: !1223, line: 212, type: !4376, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !4379)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{!918, !4378, !129}
!4378 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut num_traits::str_to_ascii_lower_eq_str::{closure_env#0}", baseType: !3093, size: 64, align: 64, dwarfAddressSpace: 0)
!4379 = !{!4380, !4382, !4383, !4385, !4386}
!4380 = !DILocalVariable(name: "a", scope: !4381, file: !1223, line: 212, type: !15, align: 1)
!4381 = distinct !DILexicalBlock(scope: !4375, file: !1223, line: 212, column: 50)
!4382 = !DILocalVariable(name: "b", scope: !4381, file: !1223, line: 212, type: !15, align: 1)
!4383 = !DILocalVariable(name: "a_to_ascii_lower", scope: !4384, file: !1223, line: 213, type: !15, align: 1)
!4384 = distinct !DILexicalBlock(scope: !4381, file: !1223, line: 213, column: 13)
!4385 = !DILocalVariable(arg: 1, scope: !4375, file: !1223, line: 212, type: !4378)
!4386 = !DILocalVariable(arg: 2, scope: !4375, file: !1223, line: 212, type: !129)
!4387 = !DILocation(line: 212, column: 41, scope: !4375)
!4388 = !DILocation(line: 212, column: 42, scope: !4375)
!4389 = !DILocation(line: 212, column: 43, scope: !4375)
!4390 = !DILocation(line: 212, column: 43, scope: !4381)
!4391 = !DILocation(line: 212, column: 46, scope: !4375)
!4392 = !DILocation(line: 212, column: 46, scope: !4381)
!4393 = !DILocation(line: 213, column: 43, scope: !4381)
!4394 = !DILocation(line: 213, column: 42, scope: !4381)
!4395 = !DILocation(line: 213, column: 56, scope: !4381)
!4396 = !DILocation(line: 213, column: 41, scope: !4381)
!4397 = !DILocation(line: 213, column: 40, scope: !4381)
!4398 = !DILocation(line: 213, column: 36, scope: !4381)
!4399 = !DILocation(line: 213, column: 17, scope: !4384)
!4400 = !DILocation(line: 214, column: 13, scope: !4384)
!4401 = !DILocation(line: 212, column: 49, scope: !4375)
!4402 = distinct !DISubprogram(name: "powi", linkageName: "_ZN48_$LT$f32$u20$as$u20$num_traits..float..Float$GT$4powi17h332eaedf2e3a860bE", scope: !4404, file: !4403, line: 9, type: !680, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !4405)
!4403 = !DIFile(filename: "src/macros.rs", directory: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.19", checksumkind: CSK_MD5, checksum: "0e1f44c14a8b93134d236bd176cf6b0b")
!4404 = !DINamespace(name: "{impl#2}", scope: !4268)
!4405 = !{!4406, !4407}
!4406 = !DILocalVariable(name: "self", arg: 1, scope: !4402, file: !4403, line: 9, type: !682)
!4407 = !DILocalVariable(name: "n", arg: 2, scope: !4402, file: !4403, line: 9, type: !683)
!4408 = !DILocation(line: 9, column: 24, scope: !4402)
!4409 = !DILocation(line: 9, column: 34, scope: !4402)
!4410 = !DILocation(line: 10, column: 17, scope: !4402)
!4411 = !DILocation(line: 11, column: 14, scope: !4402)
!4412 = distinct !DISubprogram(name: "powi", linkageName: "_ZN48_$LT$f64$u20$as$u20$num_traits..float..Float$GT$4powi17hc010881944047abcE", scope: !4413, file: !4403, line: 9, type: !695, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !4414)
!4413 = !DINamespace(name: "{impl#3}", scope: !4268)
!4414 = !{!4415, !4416}
!4415 = !DILocalVariable(name: "self", arg: 1, scope: !4412, file: !4403, line: 9, type: !697)
!4416 = !DILocalVariable(name: "n", arg: 2, scope: !4412, file: !4403, line: 9, type: !683)
!4417 = !DILocation(line: 9, column: 24, scope: !4412)
!4418 = !DILocation(line: 9, column: 34, scope: !4412)
!4419 = !DILocation(line: 10, column: 17, scope: !4412)
!4420 = !DILocation(line: 11, column: 14, scope: !4412)
!4421 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN63_$LT$num_traits..FloatErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h4a8ab705b67ee6caE", scope: !4422, file: !1223, line: 187, type: !4423, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !4425)
!4422 = !DINamespace(name: "{impl#20}", scope: !14)
!4423 = !DISubroutineType(types: !4424)
!4424 = !{!710, !12, !729}
!4425 = !{!4426, !4427}
!4426 = !DILocalVariable(name: "self", arg: 1, scope: !4421, file: !1223, line: 187, type: !12)
!4427 = !DILocalVariable(name: "f", arg: 2, scope: !4421, file: !1223, line: 187, type: !729)
!4428 = !DILocation(line: 187, column: 10, scope: !4421)
!4429 = !DILocation(line: 187, column: 15, scope: !4421)
!4430 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN64_$LT$num_traits..ParseFloatError$u20$as$u20$core..fmt..Debug$GT$3fmt17h06f948c51ad705a1E", scope: !4431, file: !1223, line: 194, type: !4346, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !4432)
!4431 = !DINamespace(name: "{impl#21}", scope: !14)
!4432 = !{!4433, !4434}
!4433 = !DILocalVariable(name: "self", arg: 1, scope: !4430, file: !1223, line: 194, type: !4348)
!4434 = !DILocalVariable(name: "f", arg: 2, scope: !4430, file: !1223, line: 194, type: !729)
!4435 = !DILocation(line: 194, column: 10, scope: !4430)
!4436 = !DILocation(line: 196, column: 5, scope: !4430)
!4437 = !DILocation(line: 194, column: 15, scope: !4430)
!4438 = distinct !DISubprogram(name: "from_str_radix", linkageName: "_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix17h6ab493e5b46cb750E", scope: !3638, file: !1223, line: 226, type: !4439, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !4441)
!4439 = !DISubroutineType(types: !4440)
!4440 = !{!3618, !507, !391}
!4441 = !{!4442, !4443, !4444, !4446, !4447, !4449, !4451, !4453, !4455, !4457, !4459, !4461, !4462, !4464, !4466, !4468, !4470, !4471, !4473, !4475, !4477, !4478, !4480, !4482, !4484, !4485, !4487, !4489, !4491}
!4442 = !DILocalVariable(name: "src", arg: 1, scope: !4438, file: !1223, line: 226, type: !507)
!4443 = !DILocalVariable(name: "radix", arg: 2, scope: !4438, file: !1223, line: 226, type: !391)
!4444 = !DILocalVariable(name: "is_positive", scope: !4445, file: !1223, line: 259, type: !918, align: 1)
!4445 = distinct !DILexicalBlock(scope: !4438, file: !1223, line: 259, column: 17)
!4446 = !DILocalVariable(name: "src", scope: !4445, file: !1223, line: 259, type: !507, align: 8)
!4447 = !DILocalVariable(name: "src", scope: !4448, file: !1223, line: 262, type: !507, align: 8)
!4448 = distinct !DILexicalBlock(scope: !4438, file: !1223, line: 262, column: 21)
!4449 = !DILocalVariable(name: "sig", scope: !4450, file: !1223, line: 267, type: !682, align: 4)
!4450 = distinct !DILexicalBlock(scope: !4445, file: !1223, line: 267, column: 17)
!4451 = !DILocalVariable(name: "prev_sig", scope: !4452, file: !1223, line: 269, type: !682, align: 4)
!4452 = distinct !DILexicalBlock(scope: !4450, file: !1223, line: 269, column: 17)
!4453 = !DILocalVariable(name: "cs", scope: !4454, file: !1223, line: 270, type: !393, align: 8)
!4454 = distinct !DILexicalBlock(scope: !4452, file: !1223, line: 270, column: 17)
!4455 = !DILocalVariable(name: "exp_info", scope: !4456, file: !1223, line: 272, type: !3584, align: 8)
!4456 = distinct !DILexicalBlock(scope: !4454, file: !1223, line: 272, column: 17)
!4457 = !DILocalVariable(name: "iter", scope: !4458, file: !1223, line: 275, type: !392, align: 8)
!4458 = distinct !DILexicalBlock(scope: !4456, file: !1223, line: 275, column: 17)
!4459 = !DILocalVariable(name: "i", scope: !4460, file: !1223, line: 275, type: !9, align: 8)
!4460 = distinct !DILexicalBlock(scope: !4458, file: !1223, line: 275, column: 43)
!4461 = !DILocalVariable(name: "c", scope: !4460, file: !1223, line: 275, type: !385, align: 4)
!4462 = !DILocalVariable(name: "digit", scope: !4463, file: !1223, line: 277, type: !391, align: 4)
!4463 = distinct !DILexicalBlock(scope: !4460, file: !1223, line: 277, column: 25)
!4464 = !DILocalVariable(name: "power", scope: !4465, file: !1223, line: 322, type: !682, align: 4)
!4465 = distinct !DILexicalBlock(scope: !4456, file: !1223, line: 322, column: 21)
!4466 = !DILocalVariable(name: "iter", scope: !4467, file: !1223, line: 323, type: !392, align: 8)
!4467 = distinct !DILexicalBlock(scope: !4465, file: !1223, line: 323, column: 21)
!4468 = !DILocalVariable(name: "i", scope: !4469, file: !1223, line: 323, type: !9, align: 8)
!4469 = distinct !DILexicalBlock(scope: !4467, file: !1223, line: 323, column: 47)
!4470 = !DILocalVariable(name: "c", scope: !4469, file: !1223, line: 323, type: !385, align: 4)
!4471 = !DILocalVariable(name: "digit", scope: !4472, file: !1223, line: 325, type: !391, align: 4)
!4472 = distinct !DILexicalBlock(scope: !4469, file: !1223, line: 325, column: 29)
!4473 = !DILocalVariable(name: "exp", scope: !4474, file: !1223, line: 355, type: !682, align: 4)
!4474 = distinct !DILexicalBlock(scope: !4456, file: !1223, line: 355, column: 17)
!4475 = !DILocalVariable(name: "c", scope: !4476, file: !1223, line: 356, type: !385, align: 4)
!4476 = distinct !DILexicalBlock(scope: !4456, file: !1223, line: 356, column: 21)
!4477 = !DILocalVariable(name: "offset", scope: !4476, file: !1223, line: 356, type: !9, align: 8)
!4478 = !DILocalVariable(name: "base", scope: !4479, file: !1223, line: 357, type: !682, align: 4)
!4479 = distinct !DILexicalBlock(scope: !4476, file: !1223, line: 357, column: 25)
!4480 = !DILocalVariable(name: "src", scope: !4481, file: !1223, line: 364, type: !507, align: 8)
!4481 = distinct !DILexicalBlock(scope: !4479, file: !1223, line: 364, column: 25)
!4482 = !DILocalVariable(name: "is_positive", scope: !4483, file: !1223, line: 365, type: !918, align: 1)
!4483 = distinct !DILexicalBlock(scope: !4481, file: !1223, line: 365, column: 25)
!4484 = !DILocalVariable(name: "exp", scope: !4483, file: !1223, line: 365, type: !2782, align: 8)
!4485 = !DILocalVariable(name: "src", scope: !4486, file: !1223, line: 366, type: !507, align: 8)
!4486 = distinct !DILexicalBlock(scope: !4481, file: !1223, line: 366, column: 29)
!4487 = !DILocalVariable(name: "src", scope: !4488, file: !1223, line: 367, type: !507, align: 8)
!4488 = distinct !DILexicalBlock(scope: !4481, file: !1223, line: 367, column: 29)
!4489 = !DILocalVariable(name: "exp", scope: !4490, file: !1223, line: 379, type: !9, align: 8)
!4490 = distinct !DILexicalBlock(scope: !4483, file: !1223, line: 379, column: 29)
!4491 = !DILocalVariable(name: "exp", scope: !4492, file: !1223, line: 380, type: !9, align: 8)
!4492 = distinct !DILexicalBlock(scope: !4483, file: !1223, line: 380, column: 29)
!4493 = !DILocation(line: 226, column: 31, scope: !4438)
!4494 = !DILocation(line: 226, column: 42, scope: !4438)
!4495 = !DILocation(line: 267, column: 21, scope: !4450)
!4496 = !DILocation(line: 269, column: 21, scope: !4452)
!4497 = !DILocation(line: 270, column: 21, scope: !4454)
!4498 = !DILocation(line: 272, column: 21, scope: !4456)
!4499 = !DILocation(line: 275, column: 31, scope: !4458)
!4500 = !DILocation(line: 322, column: 25, scope: !4465)
!4501 = !DILocation(line: 323, column: 35, scope: !4467)
!4502 = !DILocation(line: 355, column: 21, scope: !4474)
!4503 = !DILocation(line: 357, column: 29, scope: !4479)
!4504 = !DILocation(line: 365, column: 43, scope: !4483)
!4505 = !DILocation(line: 233, column: 20, scope: !4438)
!4506 = !DILocation(line: 234, column: 28, scope: !4438)
!4507 = !DILocation(line: 240, column: 20, scope: !4438)
!4508 = !DILocation(line: 241, column: 24, scope: !4438)
!4509 = !DILocation(line: 244, column: 27, scope: !4438)
!4510 = !DILocation(line: 243, column: 28, scope: !4438)
!4511 = !DILocation(line: 243, column: 21, scope: !4438)
!4512 = !DILocation(line: 388, column: 14, scope: !4438)
!4513 = !DILocation(line: 245, column: 24, scope: !4438)
!4514 = !DILocation(line: 248, column: 27, scope: !4438)
!4515 = !DILocation(line: 247, column: 28, scope: !4438)
!4516 = !DILocation(line: 247, column: 21, scope: !4438)
!4517 = !DILocation(line: 250, column: 27, scope: !4438)
!4518 = !DILocation(line: 249, column: 28, scope: !4438)
!4519 = !DILocation(line: 249, column: 21, scope: !4438)
!4520 = !DILocation(line: 259, column: 49, scope: !4438)
!4521 = !DILocation(line: 251, column: 28, scope: !4438)
!4522 = !DILocation(line: 1, column: 1, scope: !4438)
!4523 = !DILocation(line: 259, column: 43, scope: !4438)
!4524 = !DILocation(line: 260, column: 48, scope: !4438)
!4525 = !DILocation(line: 260, column: 41, scope: !4438)
!4526 = !DILocation(line: 261, column: 32, scope: !4438)
!4527 = !DILocation(line: 263, column: 41, scope: !4438)
!4528 = !DILocation(line: 263, column: 52, scope: !4438)
!4529 = !DILocation(line: 259, column: 22, scope: !4438)
!4530 = !DILocation(line: 259, column: 22, scope: !4445)
!4531 = !DILocation(line: 259, column: 35, scope: !4438)
!4532 = !DILocation(line: 259, column: 35, scope: !4445)
!4533 = !DILocation(line: 267, column: 34, scope: !4445)
!4534 = !DILocation(line: 262, column: 32, scope: !4438)
!4535 = !DILocation(line: 262, column: 32, scope: !4448)
!4536 = !DILocation(line: 262, column: 41, scope: !4448)
!4537 = !DILocation(line: 262, column: 52, scope: !4438)
!4538 = !DILocation(line: 261, column: 48, scope: !4438)
!4539 = !DILocation(line: 261, column: 41, scope: !4438)
!4540 = !DILocation(line: 267, column: 61, scope: !4445)
!4541 = !DILocation(line: 267, column: 31, scope: !4445)
!4542 = !DILocation(line: 267, column: 48, scope: !4445)
!4543 = !DILocation(line: 269, column: 36, scope: !4450)
!4544 = !DILocation(line: 270, column: 30, scope: !4452)
!4545 = !DILocation(line: 272, column: 36, scope: !4454)
!4546 = !DILocation(line: 275, column: 31, scope: !4456)
!4547 = !DILocation(line: 275, column: 17, scope: !4458)
!4548 = !DILocation(line: 321, column: 20, scope: !4456)
!4549 = !DILocation(line: 275, column: 22, scope: !4458)
!4550 = !DILocation(line: 275, column: 22, scope: !4460)
!4551 = !DILocation(line: 275, column: 25, scope: !4458)
!4552 = !DILocation(line: 275, column: 25, scope: !4460)
!4553 = !DILocation(line: 276, column: 27, scope: !4460)
!4554 = !DILocation(line: 276, column: 21, scope: !4460)
!4555 = !DILocation(line: 304, column: 33, scope: !4460)
!4556 = !DILocation(line: 277, column: 30, scope: !4460)
!4557 = !DILocation(line: 277, column: 30, scope: !4463)
!4558 = !DILocation(line: 279, column: 36, scope: !4463)
!4559 = !DILocation(line: 279, column: 29, scope: !4463)
!4560 = !DILocation(line: 282, column: 32, scope: !4463)
!4561 = !DILocation(line: 285, column: 40, scope: !4463)
!4562 = !DILocation(line: 285, column: 33, scope: !4463)
!4563 = !DILocation(line: 282, column: 29, scope: !4463)
!4564 = !DILocation(line: 283, column: 40, scope: !4463)
!4565 = !DILocation(line: 283, column: 33, scope: !4463)
!4566 = !DILocation(line: 290, column: 32, scope: !4463)
!4567 = !DILocation(line: 302, column: 40, scope: !4463)
!4568 = !DILocation(line: 302, column: 29, scope: !4463)
!4569 = !DILocation(line: 291, column: 36, scope: !4463)
!4570 = !DILocation(line: 291, column: 51, scope: !4463)
!4571 = !DILocation(line: 291, column: 58, scope: !4463)
!4572 = !DILocation(line: 293, column: 36, scope: !4463)
!4573 = !DILocation(line: 292, column: 46, scope: !4463)
!4574 = !DILocation(line: 1, column: 1, scope: !4463)
!4575 = !DILocation(line: 293, column: 52, scope: !4463)
!4576 = !DILocation(line: 293, column: 59, scope: !4463)
!4577 = !DILocation(line: 297, column: 36, scope: !4463)
!4578 = !DILocation(line: 294, column: 46, scope: !4463)
!4579 = !DILocation(line: 297, column: 52, scope: !4463)
!4580 = !DILocation(line: 297, column: 65, scope: !4463)
!4581 = !DILocation(line: 297, column: 71, scope: !4463)
!4582 = !DILocation(line: 297, column: 64, scope: !4463)
!4583 = !DILocation(line: 297, column: 86, scope: !4463)
!4584 = !DILocation(line: 297, column: 51, scope: !4463)
!4585 = !DILocation(line: 299, column: 36, scope: !4463)
!4586 = !DILocation(line: 298, column: 46, scope: !4463)
!4587 = !DILocation(line: 299, column: 53, scope: !4463)
!4588 = !DILocation(line: 299, column: 66, scope: !4463)
!4589 = !DILocation(line: 299, column: 72, scope: !4463)
!4590 = !DILocation(line: 299, column: 65, scope: !4463)
!4591 = !DILocation(line: 299, column: 87, scope: !4463)
!4592 = !DILocation(line: 299, column: 52, scope: !4463)
!4593 = !DILocation(line: 300, column: 46, scope: !4463)
!4594 = !DILocation(line: 313, column: 40, scope: !4460)
!4595 = !DILocation(line: 313, column: 33, scope: !4460)
!4596 = !DILocation(line: 306, column: 53, scope: !4460)
!4597 = !DILocation(line: 306, column: 49, scope: !4460)
!4598 = !DILocation(line: 306, column: 44, scope: !4460)
!4599 = !DILocation(line: 306, column: 33, scope: !4460)
!4600 = !DILocation(line: 307, column: 33, scope: !4460)
!4601 = !DILocation(line: 355, column: 33, scope: !4456)
!4602 = !DILocation(line: 355, column: 27, scope: !4456)
!4603 = !DILocation(line: 322, column: 37, scope: !4456)
!4604 = !DILocation(line: 323, column: 35, scope: !4465)
!4605 = !DILocation(line: 323, column: 21, scope: !4467)
!4606 = !DILocation(line: 323, column: 26, scope: !4467)
!4607 = !DILocation(line: 323, column: 26, scope: !4469)
!4608 = !DILocation(line: 323, column: 29, scope: !4467)
!4609 = !DILocation(line: 323, column: 29, scope: !4469)
!4610 = !DILocation(line: 324, column: 31, scope: !4469)
!4611 = !DILocation(line: 324, column: 25, scope: !4469)
!4612 = !DILocation(line: 341, column: 37, scope: !4469)
!4613 = !DILocation(line: 325, column: 34, scope: !4469)
!4614 = !DILocation(line: 325, column: 34, scope: !4472)
!4615 = !DILocation(line: 327, column: 42, scope: !4472)
!4616 = !DILocation(line: 327, column: 33, scope: !4472)
!4617 = !DILocation(line: 329, column: 42, scope: !4472)
!4618 = !DILocation(line: 332, column: 37, scope: !4472)
!4619 = !DILocation(line: 332, column: 43, scope: !4472)
!4620 = !DILocation(line: 332, column: 59, scope: !4472)
!4621 = !DILocation(line: 329, column: 39, scope: !4472)
!4622 = !DILocation(line: 330, column: 37, scope: !4472)
!4623 = !DILocation(line: 330, column: 43, scope: !4472)
!4624 = !DILocation(line: 330, column: 59, scope: !4472)
!4625 = !DILocation(line: 329, column: 33, scope: !4472)
!4626 = !DILocation(line: 335, column: 36, scope: !4472)
!4627 = !DILocation(line: 335, column: 51, scope: !4472)
!4628 = !DILocation(line: 335, column: 57, scope: !4472)
!4629 = !DILocation(line: 337, column: 36, scope: !4472)
!4630 = !DILocation(line: 336, column: 46, scope: !4472)
!4631 = !DILocation(line: 1, column: 1, scope: !4472)
!4632 = !DILocation(line: 337, column: 52, scope: !4472)
!4633 = !DILocation(line: 337, column: 58, scope: !4472)
!4634 = !DILocation(line: 339, column: 44, scope: !4472)
!4635 = !DILocation(line: 339, column: 33, scope: !4472)
!4636 = !DILocation(line: 338, column: 46, scope: !4472)
!4637 = !DILocation(line: 347, column: 44, scope: !4469)
!4638 = !DILocation(line: 347, column: 37, scope: !4469)
!4639 = !DILocation(line: 343, column: 57, scope: !4469)
!4640 = !DILocation(line: 343, column: 53, scope: !4469)
!4641 = !DILocation(line: 343, column: 48, scope: !4469)
!4642 = !DILocation(line: 343, column: 37, scope: !4469)
!4643 = !DILocation(line: 1, column: 1, scope: !4467)
!4644 = !DILocation(line: 384, column: 29, scope: !4456)
!4645 = !DILocation(line: 356, column: 27, scope: !4456)
!4646 = !DILocation(line: 356, column: 27, scope: !4476)
!4647 = !DILocation(line: 356, column: 30, scope: !4456)
!4648 = !DILocation(line: 356, column: 30, scope: !4476)
!4649 = !DILocation(line: 357, column: 36, scope: !4476)
!4650 = !DILocation(line: 360, column: 41, scope: !4476)
!4651 = !DILocation(line: 360, column: 34, scope: !4476)
!4652 = !DILocation(line: 358, column: 42, scope: !4476)
!4653 = !DILocation(line: 359, column: 42, scope: !4476)
!4654 = !DILocation(line: 359, column: 57, scope: !4476)
!4655 = !DILocation(line: 364, column: 40, scope: !4479)
!4656 = !DILocation(line: 364, column: 36, scope: !4479)
!4657 = !DILocation(line: 358, column: 57, scope: !4476)
!4658 = !DILocation(line: 364, column: 35, scope: !4479)
!4659 = !DILocation(line: 364, column: 29, scope: !4481)
!4660 = !DILocation(line: 365, column: 56, scope: !4481)
!4661 = !DILocation(line: 365, column: 50, scope: !4481)
!4662 = !DILocation(line: 369, column: 56, scope: !4481)
!4663 = !DILocation(line: 1, column: 1, scope: !4479)
!4664 = !DILocation(line: 368, column: 57, scope: !4481)
!4665 = !DILocation(line: 366, column: 40, scope: !4481)
!4666 = !DILocation(line: 366, column: 40, scope: !4486)
!4667 = !DILocation(line: 366, column: 57, scope: !4486)
!4668 = !DILocation(line: 367, column: 40, scope: !4481)
!4669 = !DILocation(line: 367, column: 40, scope: !4488)
!4670 = !DILocation(line: 367, column: 57, scope: !4488)
!4671 = !DILocation(line: 368, column: 49, scope: !4481)
!4672 = !DILocation(line: 368, column: 77, scope: !4481)
!4673 = !DILocation(line: 365, column: 30, scope: !4481)
!4674 = !DILocation(line: 365, column: 30, scope: !4483)
!4675 = !DILocation(line: 365, column: 43, scope: !4481)
!4676 = !DILocation(line: 378, column: 45, scope: !4483)
!4677 = !DILocation(line: 378, column: 31, scope: !4483)
!4678 = !DILocation(line: 378, column: 25, scope: !4483)
!4679 = !DILocation(line: 367, column: 49, scope: !4488)
!4680 = !DILocation(line: 367, column: 77, scope: !4481)
!4681 = !DILocation(line: 366, column: 49, scope: !4486)
!4682 = !DILocation(line: 366, column: 77, scope: !4481)
!4683 = !DILocation(line: 379, column: 40, scope: !4483)
!4684 = !DILocation(line: 379, column: 40, scope: !4490)
!4685 = !DILocation(line: 379, column: 53, scope: !4490)
!4686 = !DILocation(line: 379, column: 49, scope: !4490)
!4687 = !DILocation(line: 387, column: 20, scope: !4474)
!4688 = !DILocation(line: 387, column: 26, scope: !4474)
!4689 = !DILocation(line: 387, column: 17, scope: !4474)
!4690 = !DILocation(line: 380, column: 40, scope: !4483)
!4691 = !DILocation(line: 380, column: 40, scope: !4492)
!4692 = !DILocation(line: 380, column: 59, scope: !4492)
!4693 = !DILocation(line: 380, column: 55, scope: !4492)
!4694 = !DILocation(line: 381, column: 56, scope: !4483)
!4695 = !DILocation(line: 1, column: 1, scope: !4476)
!4696 = !DILocation(line: 380, column: 49, scope: !4492)
!4697 = !DILocation(line: 380, column: 68, scope: !4483)
!4698 = !DILocation(line: 234, column: 48, scope: !4438)
!4699 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix28_$u7b$$u7b$closure$u7d$$u7d$17h38734442aa3cd03bE", scope: !3637, file: !1223, line: 234, type: !4700, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !4702)
!4700 = !DISubroutineType(types: !4701)
!4701 = !{!3628, !3636, !1608}
!4702 = !{!4703, !4704}
!4703 = !DILocalVariable(name: "src", scope: !4699, file: !1223, line: 226, type: !15, align: 1)
!4704 = !DILocalVariable(arg: 2, scope: !4699, file: !1223, line: 234, type: !1608)
!4705 = !DILocation(line: 226, column: 31, scope: !4699)
!4706 = !DILocation(line: 234, column: 49, scope: !4699)
!4707 = !DILocation(line: 235, column: 34, scope: !4699)
!4708 = !DILocation(line: 235, column: 66, scope: !4699)
!4709 = !DILocation(line: 235, column: 31, scope: !4699)
!4710 = !DILocation(line: 235, column: 51, scope: !4699)
!4711 = !DILocation(line: 234, column: 52, scope: !4699)
!4712 = !DILocation(line: 234, column: 51, scope: !4699)
!4713 = distinct !DISubprogram(name: "slice_shift_char", linkageName: "_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix16slice_shift_char17h2a151c24a168fe39E", scope: !3637, file: !1223, line: 254, type: !4714, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !4716)
!4714 = !DISubroutineType(types: !4715)
!4715 = !{!3927, !507}
!4716 = !{!4717, !4718, !4720, !4722}
!4717 = !DILocalVariable(name: "src", arg: 1, scope: !4713, file: !1223, line: 254, type: !507)
!4718 = !DILocalVariable(name: "chars", scope: !4719, file: !1223, line: 255, type: !396, align: 8)
!4719 = distinct !DILexicalBlock(scope: !4713, file: !1223, line: 255, column: 21)
!4720 = !DILocalVariable(name: "residual", scope: !4721, file: !1223, line: 256, type: !408, align: 1)
!4721 = distinct !DILexicalBlock(scope: !4719, file: !1223, line: 256, column: 39)
!4722 = !DILocalVariable(name: "val", scope: !4723, file: !1223, line: 256, type: !385, align: 4)
!4723 = distinct !DILexicalBlock(scope: !4719, file: !1223, line: 256, column: 27)
!4724 = !DILocation(line: 254, column: 37, scope: !4713)
!4725 = !DILocation(line: 255, column: 25, scope: !4719)
!4726 = !DILocation(line: 256, column: 39, scope: !4721)
!4727 = !DILocation(line: 255, column: 37, scope: !4713)
!4728 = !DILocation(line: 256, column: 27, scope: !4719)
!4729 = !DILocation(line: 256, column: 27, scope: !4723)
!4730 = !DILocation(line: 256, column: 42, scope: !4719)
!4731 = !DILocation(line: 256, column: 27, scope: !4721)
!4732 = !DILocation(line: 257, column: 18, scope: !4713)
!4733 = !DILocation(line: 256, column: 26, scope: !4719)
!4734 = !DILocation(line: 256, column: 21, scope: !4719)
!4735 = distinct !DISubprogram(name: "pow", linkageName: "_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix3pow17hdd4cfebcf626832eE", scope: !3637, file: !1223, line: 373, type: !4736, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !4738)
!4736 = !DISubroutineType(types: !4737)
!4737 = !{!682, !682, !9}
!4738 = !{!4739, !4740}
!4739 = !DILocalVariable(name: "base", arg: 1, scope: !4735, file: !1223, line: 373, type: !682)
!4740 = !DILocalVariable(name: "exp", arg: 2, scope: !4735, file: !1223, line: 373, type: !9)
!4741 = !DILocation(line: 373, column: 32, scope: !4735)
!4742 = !DILocation(line: 373, column: 42, scope: !4735)
!4743 = !DILocation(line: 374, column: 47, scope: !4735)
!4744 = !DILocation(line: 374, column: 29, scope: !4735)
!4745 = !DILocation(line: 375, column: 26, scope: !4735)
!4746 = distinct !DISubprogram(name: "from_str_radix", linkageName: "_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix17h409d5ce935d7d020E", scope: !3685, file: !1223, line: 226, type: !4747, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !4749)
!4747 = !DISubroutineType(types: !4748)
!4748 = !{!3669, !507, !391}
!4749 = !{!4750, !4751, !4752, !4754, !4755, !4757, !4759, !4761, !4763, !4765, !4767, !4769, !4770, !4772, !4774, !4776, !4778, !4779, !4781, !4783, !4785, !4786, !4788, !4790, !4792, !4793, !4795, !4797, !4799}
!4750 = !DILocalVariable(name: "src", arg: 1, scope: !4746, file: !1223, line: 226, type: !507)
!4751 = !DILocalVariable(name: "radix", arg: 2, scope: !4746, file: !1223, line: 226, type: !391)
!4752 = !DILocalVariable(name: "is_positive", scope: !4753, file: !1223, line: 259, type: !918, align: 1)
!4753 = distinct !DILexicalBlock(scope: !4746, file: !1223, line: 259, column: 17)
!4754 = !DILocalVariable(name: "src", scope: !4753, file: !1223, line: 259, type: !507, align: 8)
!4755 = !DILocalVariable(name: "src", scope: !4756, file: !1223, line: 262, type: !507, align: 8)
!4756 = distinct !DILexicalBlock(scope: !4746, file: !1223, line: 262, column: 21)
!4757 = !DILocalVariable(name: "sig", scope: !4758, file: !1223, line: 267, type: !697, align: 8)
!4758 = distinct !DILexicalBlock(scope: !4753, file: !1223, line: 267, column: 17)
!4759 = !DILocalVariable(name: "prev_sig", scope: !4760, file: !1223, line: 269, type: !697, align: 8)
!4760 = distinct !DILexicalBlock(scope: !4758, file: !1223, line: 269, column: 17)
!4761 = !DILocalVariable(name: "cs", scope: !4762, file: !1223, line: 270, type: !393, align: 8)
!4762 = distinct !DILexicalBlock(scope: !4760, file: !1223, line: 270, column: 17)
!4763 = !DILocalVariable(name: "exp_info", scope: !4764, file: !1223, line: 272, type: !3584, align: 8)
!4764 = distinct !DILexicalBlock(scope: !4762, file: !1223, line: 272, column: 17)
!4765 = !DILocalVariable(name: "iter", scope: !4766, file: !1223, line: 275, type: !392, align: 8)
!4766 = distinct !DILexicalBlock(scope: !4764, file: !1223, line: 275, column: 17)
!4767 = !DILocalVariable(name: "i", scope: !4768, file: !1223, line: 275, type: !9, align: 8)
!4768 = distinct !DILexicalBlock(scope: !4766, file: !1223, line: 275, column: 43)
!4769 = !DILocalVariable(name: "c", scope: !4768, file: !1223, line: 275, type: !385, align: 4)
!4770 = !DILocalVariable(name: "digit", scope: !4771, file: !1223, line: 277, type: !391, align: 4)
!4771 = distinct !DILexicalBlock(scope: !4768, file: !1223, line: 277, column: 25)
!4772 = !DILocalVariable(name: "power", scope: !4773, file: !1223, line: 322, type: !697, align: 8)
!4773 = distinct !DILexicalBlock(scope: !4764, file: !1223, line: 322, column: 21)
!4774 = !DILocalVariable(name: "iter", scope: !4775, file: !1223, line: 323, type: !392, align: 8)
!4775 = distinct !DILexicalBlock(scope: !4773, file: !1223, line: 323, column: 21)
!4776 = !DILocalVariable(name: "i", scope: !4777, file: !1223, line: 323, type: !9, align: 8)
!4777 = distinct !DILexicalBlock(scope: !4775, file: !1223, line: 323, column: 47)
!4778 = !DILocalVariable(name: "c", scope: !4777, file: !1223, line: 323, type: !385, align: 4)
!4779 = !DILocalVariable(name: "digit", scope: !4780, file: !1223, line: 325, type: !391, align: 4)
!4780 = distinct !DILexicalBlock(scope: !4777, file: !1223, line: 325, column: 29)
!4781 = !DILocalVariable(name: "exp", scope: !4782, file: !1223, line: 355, type: !697, align: 8)
!4782 = distinct !DILexicalBlock(scope: !4764, file: !1223, line: 355, column: 17)
!4783 = !DILocalVariable(name: "c", scope: !4784, file: !1223, line: 356, type: !385, align: 4)
!4784 = distinct !DILexicalBlock(scope: !4764, file: !1223, line: 356, column: 21)
!4785 = !DILocalVariable(name: "offset", scope: !4784, file: !1223, line: 356, type: !9, align: 8)
!4786 = !DILocalVariable(name: "base", scope: !4787, file: !1223, line: 357, type: !697, align: 8)
!4787 = distinct !DILexicalBlock(scope: !4784, file: !1223, line: 357, column: 25)
!4788 = !DILocalVariable(name: "src", scope: !4789, file: !1223, line: 364, type: !507, align: 8)
!4789 = distinct !DILexicalBlock(scope: !4787, file: !1223, line: 364, column: 25)
!4790 = !DILocalVariable(name: "is_positive", scope: !4791, file: !1223, line: 365, type: !918, align: 1)
!4791 = distinct !DILexicalBlock(scope: !4789, file: !1223, line: 365, column: 25)
!4792 = !DILocalVariable(name: "exp", scope: !4791, file: !1223, line: 365, type: !2782, align: 8)
!4793 = !DILocalVariable(name: "src", scope: !4794, file: !1223, line: 366, type: !507, align: 8)
!4794 = distinct !DILexicalBlock(scope: !4789, file: !1223, line: 366, column: 29)
!4795 = !DILocalVariable(name: "src", scope: !4796, file: !1223, line: 367, type: !507, align: 8)
!4796 = distinct !DILexicalBlock(scope: !4789, file: !1223, line: 367, column: 29)
!4797 = !DILocalVariable(name: "exp", scope: !4798, file: !1223, line: 379, type: !9, align: 8)
!4798 = distinct !DILexicalBlock(scope: !4791, file: !1223, line: 379, column: 29)
!4799 = !DILocalVariable(name: "exp", scope: !4800, file: !1223, line: 380, type: !9, align: 8)
!4800 = distinct !DILexicalBlock(scope: !4791, file: !1223, line: 380, column: 29)
!4801 = !DILocation(line: 226, column: 31, scope: !4746)
!4802 = !DILocation(line: 226, column: 42, scope: !4746)
!4803 = !DILocation(line: 267, column: 21, scope: !4758)
!4804 = !DILocation(line: 269, column: 21, scope: !4760)
!4805 = !DILocation(line: 270, column: 21, scope: !4762)
!4806 = !DILocation(line: 272, column: 21, scope: !4764)
!4807 = !DILocation(line: 275, column: 31, scope: !4766)
!4808 = !DILocation(line: 322, column: 25, scope: !4773)
!4809 = !DILocation(line: 323, column: 35, scope: !4775)
!4810 = !DILocation(line: 355, column: 21, scope: !4782)
!4811 = !DILocation(line: 357, column: 29, scope: !4787)
!4812 = !DILocation(line: 365, column: 43, scope: !4791)
!4813 = !DILocation(line: 233, column: 20, scope: !4746)
!4814 = !DILocation(line: 234, column: 28, scope: !4746)
!4815 = !DILocation(line: 240, column: 20, scope: !4746)
!4816 = !DILocation(line: 241, column: 24, scope: !4746)
!4817 = !DILocation(line: 244, column: 27, scope: !4746)
!4818 = !DILocation(line: 243, column: 28, scope: !4746)
!4819 = !DILocation(line: 243, column: 21, scope: !4746)
!4820 = !DILocation(line: 388, column: 14, scope: !4746)
!4821 = !DILocation(line: 245, column: 24, scope: !4746)
!4822 = !DILocation(line: 248, column: 27, scope: !4746)
!4823 = !DILocation(line: 247, column: 28, scope: !4746)
!4824 = !DILocation(line: 247, column: 21, scope: !4746)
!4825 = !DILocation(line: 250, column: 27, scope: !4746)
!4826 = !DILocation(line: 249, column: 28, scope: !4746)
!4827 = !DILocation(line: 249, column: 21, scope: !4746)
!4828 = !DILocation(line: 259, column: 49, scope: !4746)
!4829 = !DILocation(line: 251, column: 28, scope: !4746)
!4830 = !DILocation(line: 1, column: 1, scope: !4746)
!4831 = !DILocation(line: 259, column: 43, scope: !4746)
!4832 = !DILocation(line: 260, column: 48, scope: !4746)
!4833 = !DILocation(line: 260, column: 41, scope: !4746)
!4834 = !DILocation(line: 261, column: 32, scope: !4746)
!4835 = !DILocation(line: 263, column: 41, scope: !4746)
!4836 = !DILocation(line: 263, column: 52, scope: !4746)
!4837 = !DILocation(line: 259, column: 22, scope: !4746)
!4838 = !DILocation(line: 259, column: 22, scope: !4753)
!4839 = !DILocation(line: 259, column: 35, scope: !4746)
!4840 = !DILocation(line: 259, column: 35, scope: !4753)
!4841 = !DILocation(line: 267, column: 34, scope: !4753)
!4842 = !DILocation(line: 262, column: 32, scope: !4746)
!4843 = !DILocation(line: 262, column: 32, scope: !4756)
!4844 = !DILocation(line: 262, column: 41, scope: !4756)
!4845 = !DILocation(line: 262, column: 52, scope: !4746)
!4846 = !DILocation(line: 261, column: 48, scope: !4746)
!4847 = !DILocation(line: 261, column: 41, scope: !4746)
!4848 = !DILocation(line: 267, column: 61, scope: !4753)
!4849 = !DILocation(line: 267, column: 31, scope: !4753)
!4850 = !DILocation(line: 267, column: 48, scope: !4753)
!4851 = !DILocation(line: 269, column: 36, scope: !4758)
!4852 = !DILocation(line: 270, column: 30, scope: !4760)
!4853 = !DILocation(line: 272, column: 36, scope: !4762)
!4854 = !DILocation(line: 275, column: 31, scope: !4764)
!4855 = !DILocation(line: 275, column: 17, scope: !4766)
!4856 = !DILocation(line: 321, column: 20, scope: !4764)
!4857 = !DILocation(line: 275, column: 22, scope: !4766)
!4858 = !DILocation(line: 275, column: 22, scope: !4768)
!4859 = !DILocation(line: 275, column: 25, scope: !4766)
!4860 = !DILocation(line: 275, column: 25, scope: !4768)
!4861 = !DILocation(line: 276, column: 27, scope: !4768)
!4862 = !DILocation(line: 276, column: 21, scope: !4768)
!4863 = !DILocation(line: 304, column: 33, scope: !4768)
!4864 = !DILocation(line: 277, column: 30, scope: !4768)
!4865 = !DILocation(line: 277, column: 30, scope: !4771)
!4866 = !DILocation(line: 279, column: 36, scope: !4771)
!4867 = !DILocation(line: 279, column: 29, scope: !4771)
!4868 = !DILocation(line: 282, column: 32, scope: !4771)
!4869 = !DILocation(line: 285, column: 40, scope: !4771)
!4870 = !DILocation(line: 285, column: 33, scope: !4771)
!4871 = !DILocation(line: 282, column: 29, scope: !4771)
!4872 = !DILocation(line: 283, column: 40, scope: !4771)
!4873 = !DILocation(line: 283, column: 33, scope: !4771)
!4874 = !DILocation(line: 290, column: 32, scope: !4771)
!4875 = !DILocation(line: 302, column: 40, scope: !4771)
!4876 = !DILocation(line: 302, column: 29, scope: !4771)
!4877 = !DILocation(line: 291, column: 36, scope: !4771)
!4878 = !DILocation(line: 291, column: 51, scope: !4771)
!4879 = !DILocation(line: 291, column: 58, scope: !4771)
!4880 = !DILocation(line: 293, column: 36, scope: !4771)
!4881 = !DILocation(line: 292, column: 46, scope: !4771)
!4882 = !DILocation(line: 1, column: 1, scope: !4771)
!4883 = !DILocation(line: 293, column: 52, scope: !4771)
!4884 = !DILocation(line: 293, column: 59, scope: !4771)
!4885 = !DILocation(line: 297, column: 36, scope: !4771)
!4886 = !DILocation(line: 294, column: 46, scope: !4771)
!4887 = !DILocation(line: 297, column: 52, scope: !4771)
!4888 = !DILocation(line: 297, column: 65, scope: !4771)
!4889 = !DILocation(line: 297, column: 71, scope: !4771)
!4890 = !DILocation(line: 297, column: 64, scope: !4771)
!4891 = !DILocation(line: 297, column: 86, scope: !4771)
!4892 = !DILocation(line: 297, column: 51, scope: !4771)
!4893 = !DILocation(line: 299, column: 36, scope: !4771)
!4894 = !DILocation(line: 298, column: 46, scope: !4771)
!4895 = !DILocation(line: 299, column: 53, scope: !4771)
!4896 = !DILocation(line: 299, column: 66, scope: !4771)
!4897 = !DILocation(line: 299, column: 72, scope: !4771)
!4898 = !DILocation(line: 299, column: 65, scope: !4771)
!4899 = !DILocation(line: 299, column: 87, scope: !4771)
!4900 = !DILocation(line: 299, column: 52, scope: !4771)
!4901 = !DILocation(line: 300, column: 46, scope: !4771)
!4902 = !DILocation(line: 313, column: 40, scope: !4768)
!4903 = !DILocation(line: 313, column: 33, scope: !4768)
!4904 = !DILocation(line: 306, column: 53, scope: !4768)
!4905 = !DILocation(line: 306, column: 49, scope: !4768)
!4906 = !DILocation(line: 306, column: 44, scope: !4768)
!4907 = !DILocation(line: 306, column: 33, scope: !4768)
!4908 = !DILocation(line: 307, column: 33, scope: !4768)
!4909 = !DILocation(line: 355, column: 33, scope: !4764)
!4910 = !DILocation(line: 355, column: 27, scope: !4764)
!4911 = !DILocation(line: 322, column: 37, scope: !4764)
!4912 = !DILocation(line: 323, column: 35, scope: !4773)
!4913 = !DILocation(line: 323, column: 21, scope: !4775)
!4914 = !DILocation(line: 323, column: 26, scope: !4775)
!4915 = !DILocation(line: 323, column: 26, scope: !4777)
!4916 = !DILocation(line: 323, column: 29, scope: !4775)
!4917 = !DILocation(line: 323, column: 29, scope: !4777)
!4918 = !DILocation(line: 324, column: 31, scope: !4777)
!4919 = !DILocation(line: 324, column: 25, scope: !4777)
!4920 = !DILocation(line: 341, column: 37, scope: !4777)
!4921 = !DILocation(line: 325, column: 34, scope: !4777)
!4922 = !DILocation(line: 325, column: 34, scope: !4780)
!4923 = !DILocation(line: 327, column: 42, scope: !4780)
!4924 = !DILocation(line: 327, column: 33, scope: !4780)
!4925 = !DILocation(line: 329, column: 42, scope: !4780)
!4926 = !DILocation(line: 332, column: 37, scope: !4780)
!4927 = !DILocation(line: 332, column: 43, scope: !4780)
!4928 = !DILocation(line: 332, column: 59, scope: !4780)
!4929 = !DILocation(line: 329, column: 39, scope: !4780)
!4930 = !DILocation(line: 330, column: 37, scope: !4780)
!4931 = !DILocation(line: 330, column: 43, scope: !4780)
!4932 = !DILocation(line: 330, column: 59, scope: !4780)
!4933 = !DILocation(line: 329, column: 33, scope: !4780)
!4934 = !DILocation(line: 335, column: 36, scope: !4780)
!4935 = !DILocation(line: 335, column: 51, scope: !4780)
!4936 = !DILocation(line: 335, column: 57, scope: !4780)
!4937 = !DILocation(line: 337, column: 36, scope: !4780)
!4938 = !DILocation(line: 336, column: 46, scope: !4780)
!4939 = !DILocation(line: 1, column: 1, scope: !4780)
!4940 = !DILocation(line: 337, column: 52, scope: !4780)
!4941 = !DILocation(line: 337, column: 58, scope: !4780)
!4942 = !DILocation(line: 339, column: 44, scope: !4780)
!4943 = !DILocation(line: 339, column: 33, scope: !4780)
!4944 = !DILocation(line: 338, column: 46, scope: !4780)
!4945 = !DILocation(line: 347, column: 44, scope: !4777)
!4946 = !DILocation(line: 347, column: 37, scope: !4777)
!4947 = !DILocation(line: 343, column: 57, scope: !4777)
!4948 = !DILocation(line: 343, column: 53, scope: !4777)
!4949 = !DILocation(line: 343, column: 48, scope: !4777)
!4950 = !DILocation(line: 343, column: 37, scope: !4777)
!4951 = !DILocation(line: 1, column: 1, scope: !4775)
!4952 = !DILocation(line: 384, column: 29, scope: !4764)
!4953 = !DILocation(line: 356, column: 27, scope: !4764)
!4954 = !DILocation(line: 356, column: 27, scope: !4784)
!4955 = !DILocation(line: 356, column: 30, scope: !4764)
!4956 = !DILocation(line: 356, column: 30, scope: !4784)
!4957 = !DILocation(line: 357, column: 36, scope: !4784)
!4958 = !DILocation(line: 360, column: 41, scope: !4784)
!4959 = !DILocation(line: 360, column: 34, scope: !4784)
!4960 = !DILocation(line: 358, column: 42, scope: !4784)
!4961 = !DILocation(line: 359, column: 42, scope: !4784)
!4962 = !DILocation(line: 359, column: 57, scope: !4784)
!4963 = !DILocation(line: 364, column: 40, scope: !4787)
!4964 = !DILocation(line: 364, column: 36, scope: !4787)
!4965 = !DILocation(line: 358, column: 57, scope: !4784)
!4966 = !DILocation(line: 364, column: 35, scope: !4787)
!4967 = !DILocation(line: 364, column: 29, scope: !4789)
!4968 = !DILocation(line: 365, column: 56, scope: !4789)
!4969 = !DILocation(line: 365, column: 50, scope: !4789)
!4970 = !DILocation(line: 369, column: 56, scope: !4789)
!4971 = !DILocation(line: 1, column: 1, scope: !4787)
!4972 = !DILocation(line: 368, column: 57, scope: !4789)
!4973 = !DILocation(line: 366, column: 40, scope: !4789)
!4974 = !DILocation(line: 366, column: 40, scope: !4794)
!4975 = !DILocation(line: 366, column: 57, scope: !4794)
!4976 = !DILocation(line: 367, column: 40, scope: !4789)
!4977 = !DILocation(line: 367, column: 40, scope: !4796)
!4978 = !DILocation(line: 367, column: 57, scope: !4796)
!4979 = !DILocation(line: 368, column: 49, scope: !4789)
!4980 = !DILocation(line: 368, column: 77, scope: !4789)
!4981 = !DILocation(line: 365, column: 30, scope: !4789)
!4982 = !DILocation(line: 365, column: 30, scope: !4791)
!4983 = !DILocation(line: 365, column: 43, scope: !4789)
!4984 = !DILocation(line: 378, column: 45, scope: !4791)
!4985 = !DILocation(line: 378, column: 31, scope: !4791)
!4986 = !DILocation(line: 378, column: 25, scope: !4791)
!4987 = !DILocation(line: 367, column: 49, scope: !4796)
!4988 = !DILocation(line: 367, column: 77, scope: !4789)
!4989 = !DILocation(line: 366, column: 49, scope: !4794)
!4990 = !DILocation(line: 366, column: 77, scope: !4789)
!4991 = !DILocation(line: 379, column: 40, scope: !4791)
!4992 = !DILocation(line: 379, column: 40, scope: !4798)
!4993 = !DILocation(line: 379, column: 53, scope: !4798)
!4994 = !DILocation(line: 379, column: 49, scope: !4798)
!4995 = !DILocation(line: 387, column: 20, scope: !4782)
!4996 = !DILocation(line: 387, column: 26, scope: !4782)
!4997 = !DILocation(line: 387, column: 17, scope: !4782)
!4998 = !DILocation(line: 380, column: 40, scope: !4791)
!4999 = !DILocation(line: 380, column: 40, scope: !4800)
!5000 = !DILocation(line: 380, column: 59, scope: !4800)
!5001 = !DILocation(line: 380, column: 55, scope: !4800)
!5002 = !DILocation(line: 381, column: 56, scope: !4791)
!5003 = !DILocation(line: 1, column: 1, scope: !4784)
!5004 = !DILocation(line: 380, column: 49, scope: !4800)
!5005 = !DILocation(line: 380, column: 68, scope: !4791)
!5006 = !DILocation(line: 234, column: 48, scope: !4746)
!5007 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix28_$u7b$$u7b$closure$u7d$$u7d$17hbd71b197aeed867dE", scope: !3684, file: !1223, line: 234, type: !5008, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !5010)
!5008 = !DISubroutineType(types: !5009)
!5009 = !{!3628, !3683, !1608}
!5010 = !{!5011, !5012}
!5011 = !DILocalVariable(name: "src", scope: !5007, file: !1223, line: 226, type: !15, align: 1)
!5012 = !DILocalVariable(arg: 2, scope: !5007, file: !1223, line: 234, type: !1608)
!5013 = !DILocation(line: 226, column: 31, scope: !5007)
!5014 = !DILocation(line: 234, column: 49, scope: !5007)
!5015 = !DILocation(line: 235, column: 34, scope: !5007)
!5016 = !DILocation(line: 235, column: 66, scope: !5007)
!5017 = !DILocation(line: 235, column: 31, scope: !5007)
!5018 = !DILocation(line: 235, column: 51, scope: !5007)
!5019 = !DILocation(line: 234, column: 52, scope: !5007)
!5020 = !DILocation(line: 234, column: 51, scope: !5007)
!5021 = distinct !DISubprogram(name: "slice_shift_char", linkageName: "_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix16slice_shift_char17hb8d8a487f4573dbbE", scope: !3684, file: !1223, line: 254, type: !4714, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !5022)
!5022 = !{!5023, !5024, !5026, !5028}
!5023 = !DILocalVariable(name: "src", arg: 1, scope: !5021, file: !1223, line: 254, type: !507)
!5024 = !DILocalVariable(name: "chars", scope: !5025, file: !1223, line: 255, type: !396, align: 8)
!5025 = distinct !DILexicalBlock(scope: !5021, file: !1223, line: 255, column: 21)
!5026 = !DILocalVariable(name: "residual", scope: !5027, file: !1223, line: 256, type: !408, align: 1)
!5027 = distinct !DILexicalBlock(scope: !5025, file: !1223, line: 256, column: 39)
!5028 = !DILocalVariable(name: "val", scope: !5029, file: !1223, line: 256, type: !385, align: 4)
!5029 = distinct !DILexicalBlock(scope: !5025, file: !1223, line: 256, column: 27)
!5030 = !DILocation(line: 254, column: 37, scope: !5021)
!5031 = !DILocation(line: 255, column: 25, scope: !5025)
!5032 = !DILocation(line: 256, column: 39, scope: !5027)
!5033 = !DILocation(line: 255, column: 37, scope: !5021)
!5034 = !DILocation(line: 256, column: 27, scope: !5025)
!5035 = !DILocation(line: 256, column: 27, scope: !5029)
!5036 = !DILocation(line: 256, column: 42, scope: !5025)
!5037 = !DILocation(line: 256, column: 27, scope: !5027)
!5038 = !DILocation(line: 257, column: 18, scope: !5021)
!5039 = !DILocation(line: 256, column: 26, scope: !5025)
!5040 = !DILocation(line: 256, column: 21, scope: !5025)
!5041 = distinct !DISubprogram(name: "pow", linkageName: "_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix3pow17h717bf06b4f432d24E", scope: !3684, file: !1223, line: 373, type: !5042, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !24, templateParams: !19, retainedNodes: !5044)
!5042 = !DISubroutineType(types: !5043)
!5043 = !{!697, !697, !9}
!5044 = !{!5045, !5046}
!5045 = !DILocalVariable(name: "base", arg: 1, scope: !5041, file: !1223, line: 373, type: !697)
!5046 = !DILocalVariable(name: "exp", arg: 2, scope: !5041, file: !1223, line: 373, type: !9)
!5047 = !DILocation(line: 373, column: 32, scope: !5041)
!5048 = !DILocation(line: 373, column: 42, scope: !5041)
!5049 = !DILocation(line: 374, column: 47, scope: !5041)
!5050 = !DILocation(line: 374, column: 29, scope: !5041)
!5051 = !DILocation(line: 375, column: 26, scope: !5041)
