; ModuleID = 'f128_input.d0c3c3a7-cgu.0'
source_filename = "f128_input.d0c3c3a7-cgu.0"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>" = type { %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", i8, [7 x i8] }
%"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>" = type { %"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>" }
%"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>" = type { %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>" }
%"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>" = type { i64, [10 x i64] }
%"alloc::string::String" = type { %"alloc::vec::Vec<u8>" }
%"alloc::vec::Vec<u8>" = type { { i8*, i64 }, i64 }
%"core::panic::location::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"core::ops::range::RangeFull" = type {}
%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"proc_macro::bridge::buffer::Buffer" = type { i8*, i64, i64, void (%"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"*, i64)*, void (%"proc_macro::bridge::buffer::Buffer"*)* }
%"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]" = type { i64*, i64*, { [0 x i8]*, i64 }* }
%"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>" = type { i32, i32, i32 }
%"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>" = type { i64, [3 x i64] }
%"proc_macro::bridge::rpc::PanicMessage" = type { i64, [3 x i64] }
%"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>::Err" = type { %"proc_macro::bridge::rpc::PanicMessage" }
%"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>" = type { %"core::cell::Cell<proc_macro::bridge::client::BridgeState>" }
%"core::cell::Cell<proc_macro::bridge::client::BridgeState>" = type { %"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>" }
%"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>" = type { %"proc_macro::bridge::client::BridgeState" }
%"proc_macro::bridge::client::BridgeState" = type { i64, [9 x i64] }
%"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]" = type { i8*, %"proc_macro::bridge::buffer::Buffer"*, i32, [1 x i32] }
%"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]" = type { %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]" }
%"core::option::Option<proc_macro::bridge::client::BridgeState>" = type { i64, [9 x i64] }
%"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>" = type { %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, %"core::option::Option<proc_macro::bridge::client::BridgeState>" }
%"core::option::Option<proc_macro::bridge::client::BridgeState>::Some" = type { %"proc_macro::bridge::client::BridgeState" }
%"[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}::{closure#0}]" = type { %"[closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]" }
%"[closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]" = type { %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]" }
%"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]" = type {}
%"proc_macro::bridge::BridgeConfig" = type { %"proc_macro::bridge::buffer::Buffer", { i64*, i8* }, i8, %"core::marker::PhantomData<*mut ()>", [7 x i8] }
%"core::marker::PhantomData<*mut ()>" = type {}
%"core::mem::manually_drop::ManuallyDrop<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]>" = type { %"[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]" }
%"[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]" = type { {} }
%"core::mem::maybe_uninit::MaybeUninit<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]>" = type { [0 x i8] }
%"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]" = type { i8**, i8**, i64* }
%"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]" = type { i8*, %"proc_macro::bridge::buffer::Buffer"*, { i64*, i8* }, i8* }
%"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>" = type { %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]" }
%"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]" = type { %"proc_macro::bridge::client::BridgeState", i8*, %"proc_macro::bridge::buffer::Buffer"*, i32, [1 x i32] }
%"proc_macro::bridge::client::Bridge" = type { %"proc_macro::bridge::buffer::Buffer", { i64*, i8* }, %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>", [1 x i32] }
%"proc_macro::bridge::client::BridgeState::Connected" = type { [1 x i64], %"proc_macro::bridge::client::Bridge" }
%"[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]" = type { %"[closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]" }
%"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::Some" = type { [1 x i64], %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>" }
%"core::fmt::Arguments" = type { { [0 x { [0 x i8]*, i64 }]*, i64 }, { i64*, i64 }, { [0 x { i8*, i64* }]*, i64 } }
%"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>" = type { i8, [39 x i8] }
%"f128_internal::f128_t::f128" = type { [16 x i8] }
%"core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>::Err" = type { %"alloc::ffi::c_str::NulError" }
%"alloc::ffi::c_str::NulError" = type { i64, %"alloc::vec::Vec<u8>" }
%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>" = type { i64, [4 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>" = type { i64, [4 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>::Continue" = type { [1 x i64], { i8*, i64 } }
%"core::ffi::c_str::CStr" = type { [0 x i8] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>::Break" = type { [1 x i64], %"core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>::Err" }
%"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>::Ok" = type { [1 x i8], %"f128_internal::f128_t::f128" }
%"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>::Err" = type { [1 x i64], %"alloc::ffi::c_str::NulError" }
%"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]" = type { %"alloc::string::String", %"core::panic::location::Location"* }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>" = type { i8, [15 x i8] }
%"std::io::error::SimpleMessage" = type { { [0 x i8]*, i64 }, i8, [7 x i8] }
%"std::io::error::Custom" = type { { {}*, [3 x i64]* }, i8, [7 x i8] }
%"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]" = type {}
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os" = type { [1 x i32], i32 }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage" = type { [1 x i64], %"std::io::error::SimpleMessage"* }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom" = type { [1 x i64], %"std::io::error::Custom"* }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple" = type { [1 x i8], i8 }
%"core::fmt::UnsafeArg" = type { {} }
%"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>" = type { [3 x i64], {}*, [1 x i64] }
%"std::thread::local::AccessError" = type {}
%"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err" = type { %"std::thread::local::AccessError" }
%"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>::Ok" = type { %"proc_macro::bridge::buffer::Buffer" }
%"std::panicking::begin_panic::PanicPayload<alloc::string::String>" = type { %"core::option::Option<alloc::string::String>" }
%"core::option::Option<alloc::string::String>" = type { {}*, [2 x i64] }
%"core::option::Option<alloc::string::String>::Some" = type { %"alloc::string::String" }
%"core::mem::manually_drop::ManuallyDrop<()>" = type { {} }
%"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>" = type { %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>" }
%"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>" = type { [5 x i64] }
%"core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Ok" = type { {} }
%"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>" = type { [5 x i64] }
%"core::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%"core::fmt::builders::DebugList" = type { %"core::fmt::builders::DebugInner" }
%"core::fmt::builders::DebugInner" = type { %"core::fmt::Formatter"*, i8, i8, [6 x i8] }
%"core::fmt::Opaque" = type {}
%"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>" = type { [10 x i64] }
%"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::client::BridgeState>" = type { %"proc_macro::bridge::client::BridgeState" }
%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>" = type { [11 x i64] }
%"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>" = type { %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>" }
%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::client::BridgeState>>" = type { [10 x i64] }
%"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::bridge::client::BridgeState>>" = type { %"core::option::Option<proc_macro::bridge::client::BridgeState>" }
%"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::buffer::Buffer>" = type { [5 x i64] }
%"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::buffer::Buffer>" = type { %"proc_macro::bridge::buffer::Buffer" }
%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::string::String>>" = type { [3 x i64] }
%"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::string::String>>" = type { %"core::option::Option<alloc::string::String>" }
%"proc_macro::LexError" = type {}
%"proc_macro::bridge::rpc::PanicMessage::String" = type { [1 x i64], %"alloc::string::String" }
%"core::str::pattern::CharSearcher" = type { { [0 x i8]*, i64 }, i64, i64, i64, i32, [4 x i8] }
%"core::option::Option<(usize, &str)>" = type { [1 x i64], {}*, [1 x i64] }
%"core::option::Option<(usize, usize)>" = type { i64, [2 x i64] }
%"core::option::Option<(usize, usize)>::Some" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<(usize, &str)>::Some" = type { { i64, { [0 x i8]*, i64 } } }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::alloc::AllocError" = type {}
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"[closure@alloc::raw_vec::handle_reserve::{closure#0}]" = type {}
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok" = type { {} }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::alloc::layout::LayoutError" = type {}
%"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]" = type {}
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>::Ok" = type { {} }
%"core::str::iter::MatchIndicesInternal<char>" = type { %"core::str::pattern::CharSearcher" }
%"core::str::iter::MatchIndices<char>" = type { %"core::str::iter::MatchIndicesInternal<char>" }
%"alloc::alloc::Global" = type {}
%"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>" = type { [0 x i8] }
%"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>" = type { %"alloc::alloc::Global" }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>" = type { [2 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some" = type { { i8*, { i64, i64 } } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue" = type { [1 x i64], { i8*, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Err" = type { [1 x i64], %"alloc::ffi::c_str::NulError" }
%"core::option::Option<core::convert::Infallible>::None" = type {}
%"unwind::libunwind::_Unwind_Exception" = type { i64, void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [6 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }
%"proc_macro::bridge::client::HandleCounters" = type { %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize" }
%"core::sync::atomic::AtomicUsize" = type { i64 }

@alloc236 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Option::unwrap()` on a `None` value" }>, align 1
@alloc181 = private unnamed_addr constant <{ [92 x i8] }> <{ [92 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/proc_macro/src/bridge/scoped_cell.rs" }>, align 1
@alloc174 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc181, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00J\00\00\00\13\00\00\00" }>, align 8
@0 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@alloc71 = private unnamed_addr constant <{ i8* }> <{ i8* bitcast (i64* (i64*)* @_ZN10proc_macro6bridge6client12BRIDGE_STATE7__getit17hcbe55ff2dc409fbfE to i8*) }>, align 8
@_ZN10proc_macro6bridge6client12BRIDGE_STATE7__getit5__KEY17hf23c929d95a924ccE = external thread_local global %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"
@alloc78 = private unnamed_addr constant <{ [54 x i8] }> <{ [54 x i8] c"procedural macro API is used while it's already in use" }>, align 1
@alloc79 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [54 x i8] }>, <{ [54 x i8] }>* @alloc78, i32 0, i32 0, i32 0), [8 x i8] c"6\00\00\00\00\00\00\00" }>, align 8
@alloc239 = private unnamed_addr constant <{}> zeroinitializer, align 8
@alloc178 = private unnamed_addr constant <{ [87 x i8] }> <{ [87 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/proc_macro/src/bridge/client.rs" }>, align 1
@alloc177 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc178, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00<\01\00\00\11\00\00\00" }>, align 8
@alloc73 = private unnamed_addr constant <{ [58 x i8] }> <{ [58 x i8] c"procedural macro API is used outside of a procedural macro" }>, align 1
@alloc74 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [58 x i8] }>, <{ [58 x i8] }>* @alloc73, i32 0, i32 0, i32 0), [8 x i8] c":\00\00\00\00\00\00\00" }>, align 8
@alloc179 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc178, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\009\01\00\00\11\00\00\00" }>, align 8
@alloc182 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc181, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00=\00\00\00!\00\00\00" }>, align 8
@alloc183 = private unnamed_addr constant <{ [94 x i8] }> <{ [94 x i8] c"/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/f128_internal-0.2.2/src/f128_t.rs" }>, align 1
@alloc184 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc183, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\E7\00\00\00\14\00\00\00" }>, align 8
@alloc185 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"internal error: entered unreachable code" }>, align 1
@alloc186 = private unnamed_addr constant <{ [90 x i8] }> <{ [90 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/io/error/repr_bitpacked.rs" }>, align 1
@alloc187 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc186, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\18\01\00\00\0D\00\00\00" }>, align 8
@alloc191 = private unnamed_addr constant <{ [70 x i8] }> <{ [70 x i8] c"cannot access a Thread Local Storage value during or after destruction" }>, align 1
@alloc189 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/thread/local.rs" }>, align 1
@alloc190 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc189, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\A5\01\00\00\1A\00\00\00" }>, align 8
@vtable.0 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8* }> <{ i8* bitcast (void (%"std::panicking::begin_panic::PanicPayload<alloc::string::String>"*)* @"_ZN4core3ptr91drop_in_place$LT$std..panicking..begin_panic..PanicPayload$LT$alloc..string..String$GT$$GT$17hdb31efc448dc26bcE" to i8*), [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast ({ {}*, [3 x i64]* } (%"std::panicking::begin_panic::PanicPayload<alloc::string::String>"*)* @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17hf166ab1c4ec907f8E" to i8*), i8* bitcast ({ {}*, [3 x i64]* } (%"std::panicking::begin_panic::PanicPayload<alloc::string::String>"*)* @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17h4cad47839b91b8f4E" to i8*) }>, align 8, !dbg !0
@vtable.1 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (i8**)* @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h3aab73b83e147934E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i8**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbc18d34cc4cf18f7E" to i8*) }>, align 8, !dbg !74
@alloc29 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc30 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc29, i32 0, i32 0, i32 0), [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc200 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/mod.rs" }>, align 1
@alloc201 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc200, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\88\01\00\00\0D\00\00\00" }>, align 8
@alloc24 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"cannot transmute_copy if U is larger than T" }>, align 1
@alloc25 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [43 x i8] }>, <{ [43 x i8] }>* @alloc24, i32 0, i32 0, i32 0), [8 x i8] c"+\00\00\00\00\00\00\00" }>, align 8
@alloc202 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/mod.rs" }>, align 1
@alloc203 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc202, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00!\04\00\00\05\00\00\00" }>, align 8
@alloc206 = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/char/methods.rs" }>, align 1
@alloc205 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc206, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\A7\06\00\00\0A\00\00\00" }>, align 8
@alloc50 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"encode_utf8: need " }>, align 1
@alloc52 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c" bytes to encode U+" }>, align 1
@alloc53 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c", but the buffer has " }>, align 1
@alloc51 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc50, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc52, i32 0, i32 0, i32 0), [8 x i8] c"\13\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc53, i32 0, i32 0, i32 0), [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc207 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc206, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\A0\06\00\00\0E\00\00\00" }>, align 8
@vtable.2 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (%"std::thread::local::AccessError"*)* @"_ZN4core3ptr52drop_in_place$LT$std..thread..local..AccessError$GT$17h6c4dc30a4bf43b0aE" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::thread::local::AccessError"*, %"core::fmt::Formatter"*)* @"_ZN68_$LT$std..thread..local..AccessError$u20$as$u20$core..fmt..Debug$GT$3fmt17h3b11f678344b3b67E" to i8*) }>, align 8, !dbg !83
@alloc215 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@vtable.3 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (i8**)* @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h32c7df30d12904acE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i8**, %"core::fmt::Formatter"*)* @"_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h9412cc25832b82a2E" to i8*) }>, align 8, !dbg !94
@vtable.4 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (%"proc_macro::LexError"*)* @"_ZN4core3ptr41drop_in_place$LT$proc_macro..LexError$GT$17h3cebe70310e60f92E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"proc_macro::LexError"*, %"core::fmt::Formatter"*)* @"_ZN57_$LT$proc_macro..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17ha30ce66e4b763940E" to i8*) }>, align 8, !dbg !212
@alloc237 = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/proc_macro/src/bridge/rpc.rs" }>, align 1
@alloc226 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc237, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\82\00\00\00\01\00\00\00" }>, align 8
@alloc228 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc237, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\BF\00\00\00\1B\00\00\00" }>, align 8
@alloc229 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/pattern.rs" }>, align 1
@alloc230 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc229, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\B7\01\00\00&\00\00\00" }>, align 8
@alloc231 = private unnamed_addr constant <{ [78 x i8] }> <{ [78 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/iter.rs" }>, align 1
@alloc232 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [78 x i8] }>, <{ [78 x i8] }>* @alloc231, i32 0, i32 0, i32 0), [16 x i8] c"N\00\00\00\00\00\00\00\87\00\00\00\01\00\00\00" }>, align 8
@str.5 = internal constant [28 x i8] c"attempt to add with overflow"
@vtable.6 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (%"alloc::string::String"*)* @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E" to i8*), [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i64 (%"alloc::string::String"*)* @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h85c59b930058df08E" to i8*) }>, align 8, !dbg !222
@alloc238 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc237, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\A9\00\00\00\09\00\00\00" }>, align 8
@alloc246 = private unnamed_addr constant <{ [88 x i8] }> <{ [88 x i8] c"/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/f128_input-0.2.1/src/lib.rs" }>, align 1
@alloc241 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc246, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\0A\00\00\00\0E\00\00\00" }>, align 8
@alloc39 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"'" }>, align 1
@alloc41 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"' is not a valid f128" }>, align 1
@alloc40 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc39, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc41, i32 0, i32 0, i32 0), [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc243 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc246, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\11\00\00\00\13\00\00\00" }>, align 8
@alloc43 = private unnamed_addr constant <{ [49 x i8] }> <{ [49 x i8] c"unsafe { ::std::mem::transmute::<[u8; 16], f128>(" }>, align 1
@alloc45 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c") }" }>, align 1
@alloc44 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [49 x i8] }>, <{ [49 x i8] }>* @alloc43, i32 0, i32 0, i32 0), [8 x i8] c"1\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc45, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc245 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc246, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\18\00\00\00\0C\00\00\00" }>, align 8
@alloc247 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc246, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\18\00\00\00\1B\00\00\00" }>, align 8
@alloc4 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"f128_inner" }>, align 1
@alloc11 = private unnamed_addr constant <{ [4 x i8], [4 x i8], i8*, [8 x i8], i8*, i8*, [16 x i8] }> <{ [4 x i8] c"\02\00\00\00", [4 x i8] undef, i8* getelementptr inbounds (<{ [10 x i8] }>, <{ [10 x i8] }>* @alloc4, i32 0, i32 0, i32 0), [8 x i8] c"\0A\00\00\00\00\00\00\00", i8* bitcast (%"proc_macro::bridge::client::HandleCounters"* ()* @_ZN10proc_macro6bridge6client14HandleCounters3get17h671f5d76124a041eE to i8*), i8* bitcast (void (%"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::BridgeConfig"*)* @_ZN10proc_macro6bridge14selfless_reify31reify_to_extern_c_fn_hrt_bridge7wrapper17h42ad000de5b43883E to i8*), [16 x i8] undef }>, align 8
@__rustc_proc_macro_decls_df67d460d0c3c3a7__ = constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [4 x i8], [4 x i8], i8*, [8 x i8], i8*, i8*, [16 x i8] }>, <{ [4 x i8], [4 x i8], i8*, [8 x i8], i8*, i8*, [16 x i8] }>* @alloc11, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8, !dbg !230

; <alloc::string::String as core::ops::index::Index<core::ops::range::RangeFull>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN100_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17h5b81c5e26663cc31E"(%"alloc::string::String"* align 8 %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !499 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %len.dbg.spill3 = alloca i64, align 8
  %data.dbg.spill2 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %self.dbg.spill = alloca %"alloc::string::String"*, align 8
  %_19 = alloca { i8*, i64 }, align 8
  %_18 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store %"alloc::string::String"* %self, %"alloc::string::String"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill, metadata !517, metadata !DIExpression()), !dbg !519
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %_index.dbg.spill, metadata !518, metadata !DIExpression()), !dbg !520
  %_6 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*, !dbg !521
  store %"alloc::vec::Vec<u8>"* %_6, %"alloc::vec::Vec<u8>"** %self.dbg.spill1, align 8, !dbg !521
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill1, metadata !522, metadata !DIExpression()), !dbg !535
; call alloc::vec::Vec<T,A>::as_ptr
  %data = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf5c71e8a33b2e895E"(%"alloc::vec::Vec<u8>"* align 8 %_6), !dbg !535
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !535
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !536, metadata !DIExpression()), !dbg !557
  br label %bb1, !dbg !535

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %_6, i32 0, i32 1, !dbg !535
  %len = load i64, i64* %2, align 8, !dbg !535
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !535
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !545, metadata !DIExpression()), !dbg !557
  store i8* %data, i8** %data.dbg.spill2, align 8, !dbg !557
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill2, metadata !559, metadata !DIExpression()), !dbg !571
  store i64 %len, i64* %len.dbg.spill3, align 8, !dbg !557
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill3, metadata !570, metadata !DIExpression()), !dbg !571
  store i8* %data, i8** %self.dbg.spill4, align 8, !dbg !571
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !573, metadata !DIExpression()), !dbg !584
  %data_address = bitcast i8* %data to {}*, !dbg !584
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !584
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !586, metadata !DIExpression()), !dbg !595
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !571
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !594, metadata !DIExpression()), !dbg !595
  %3 = bitcast { i8*, i64 }* %_19 to {}**, !dbg !595
  store {}* %data_address, {}** %3, align 8, !dbg !595
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_19, i32 0, i32 1, !dbg !595
  store i64 %len, i64* %4, align 8, !dbg !595
  %5 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_18 to { i8*, i64 }*, !dbg !595
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_19, i32 0, i32 0, !dbg !595
  %7 = load i8*, i8** %6, align 8, !dbg !595
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_19, i32 0, i32 1, !dbg !595
  %9 = load i64, i64* %8, align 8, !dbg !595
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !595
  store i8* %7, i8** %10, align 8, !dbg !595
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !595
  store i64 %9, i64* %11, align 8, !dbg !595
  %12 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_18 to { [0 x i8]*, i64 }*, !dbg !595
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0, !dbg !595
  %_11.0 = load [0 x i8]*, [0 x i8]** %13, align 8, !dbg !595
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1, !dbg !595
  %_11.1 = load i64, i64* %14, align 8, !dbg !595
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !521
  store [0 x i8]* %_11.0, [0 x i8]** %15, align 8, !dbg !521
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !521
  store i64 %_11.1, i64* %16, align 8, !dbg !521
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !597, metadata !DIExpression()), !dbg !606
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !606
  store [0 x i8]* %_11.0, [0 x i8]** %17, align 8, !dbg !606
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !606
  store i64 %_11.1, i64* %18, align 8, !dbg !606
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !606
  %20 = load [0 x i8]*, [0 x i8]** %19, align 8, !dbg !606, !nonnull !27, !align !608, !noundef !27
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !606
  %22 = load i64, i64* %21, align 8, !dbg !606
  br label %bb2, !dbg !606

bb2:                                              ; preds = %bb1
  %23 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %20, 0, !dbg !609
  %24 = insertvalue { [0 x i8]*, i64 } %23, i64 %22, 1, !dbg !609
  ret { [0 x i8]*, i64 } %24, !dbg !609
}

; <proc_macro::bridge::client::TokenStream as proc_macro::bridge::rpc::Encode<S>>::encode
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN100_$LT$proc_macro..bridge..client..TokenStream$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h1c05180f801e837eE"(i32 %self, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s) unnamed_addr #1 !dbg !610 {
start:
  %handle.dbg.spill = alloca i32, align 4
  %s.dbg.spill = alloca {}*, align 8
  %w.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %self.dbg.spill = alloca i32, align 4
  store i32 %self, i32* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill, metadata !617, metadata !DIExpression()), !dbg !624
  store %"proc_macro::bridge::buffer::Buffer"* %w, %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, metadata !618, metadata !DIExpression()), !dbg !625
  store {}* %s, {}** %s.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %s.dbg.spill, metadata !619, metadata !DIExpression()), !dbg !626
  store i32 %self, i32* %handle.dbg.spill, align 4, !dbg !627
  call void @llvm.dbg.declare(metadata i32* %handle.dbg.spill, metadata !620, metadata !DIExpression()), !dbg !628
; call <core::num::nonzero::NonZeroU32 as proc_macro::bridge::rpc::Encode<S>>::encode
  call void @"_ZN91_$LT$core..num..nonzero..NonZeroU32$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h6eff8dc709d18f76E"(i32 %self, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s), !dbg !629
  br label %bb1, !dbg !629

bb1:                                              ; preds = %start
  ret void, !dbg !630
}

; <proc_macro::bridge::client::TokenStream as proc_macro::bridge::rpc::DecodeMut<S>>::decode
; Function Attrs: nonlazybind uwtable
define internal i32 @"_ZN103_$LT$proc_macro..bridge..client..TokenStream$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17he5ea93e573f0561cE"({ [0 x i8]*, i64 }* align 8 %r, {}* align 1 %s) unnamed_addr #1 !dbg !631 {
start:
  %s.dbg.spill = alloca {}*, align 8
  %r.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %0 = alloca i32, align 4
  store { [0 x i8]*, i64 }* %r, { [0 x i8]*, i64 }** %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %r.dbg.spill, metadata !637, metadata !DIExpression()), !dbg !639
  store {}* %s, {}** %s.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %s.dbg.spill, metadata !638, metadata !DIExpression()), !dbg !640
; call <core::num::nonzero::NonZeroU32 as proc_macro::bridge::rpc::DecodeMut<S>>::decode
  %_3 = call i32 @"_ZN94_$LT$core..num..nonzero..NonZeroU32$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17h195da8d32a305c54E"({ [0 x i8]*, i64 }* align 8 %r, {}* align 1 %s), !dbg !641, !range !642
  br label %bb1, !dbg !641

bb1:                                              ; preds = %start
  store i32 %_3, i32* %0, align 4, !dbg !643
  %1 = load i32, i32* %0, align 4, !dbg !644, !range !642, !noundef !27
  ret i32 %1, !dbg !644
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h6f044855ca2f8af0E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !645 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill4 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_24 = alloca { i8*, i64 }, align 8
  %_23 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %runtime = alloca %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]", align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !662, metadata !DIExpression()), !dbg !674
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !663, metadata !DIExpression()), !dbg !675
  call void @llvm.dbg.declare(metadata %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]"* %runtime, metadata !664, metadata !DIExpression()), !dbg !676
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !677
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !677
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !677
  store i64 %slice.1, i64* %6, align 8, !dbg !677
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !678, metadata !DIExpression()), !dbg !687
  %self = bitcast [0 x i8]* %slice.0 to i8*, !dbg !687
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !687
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !688, metadata !DIExpression()), !dbg !696
  store i64 %self.0, i64* %count.dbg.spill, align 8, !dbg !697
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !695, metadata !DIExpression()), !dbg !696
  store i8* %self, i8** %self.dbg.spill3, align 8, !dbg !696
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !698, metadata !DIExpression()), !dbg !706
  store i64 %self.0, i64* %count.dbg.spill4, align 8, !dbg !696
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill4, metadata !705, metadata !DIExpression()), !dbg !706
  %7 = getelementptr inbounds i8, i8* %self, i64 %self.0, !dbg !706
  store i8* %7, i8** %0, align 8, !dbg !706
  %_15 = load i8*, i8** %0, align 8, !dbg !706
  br label %bb1, !dbg !706

bb1:                                              ; preds = %start
  store i8* %_15, i8** %data.dbg.spill, align 8, !dbg !706
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !708, metadata !DIExpression()), !dbg !715
  %len = sub i64 %self.1, %self.0, !dbg !717
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !717
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !714, metadata !DIExpression()), !dbg !715
  store i8* %_15, i8** %self.dbg.spill5, align 8, !dbg !715
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !718, metadata !DIExpression()), !dbg !724
  %data_address = bitcast i8* %_15 to {}*, !dbg !724
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !724
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !726, metadata !DIExpression()), !dbg !733
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !715
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !732, metadata !DIExpression()), !dbg !733
  %8 = bitcast { i8*, i64 }* %_24 to {}**, !dbg !733
  store {}* %data_address, {}** %8, align 8, !dbg !733
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !733
  store i64 %len, i64* %9, align 8, !dbg !733
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_23 to { i8*, i64 }*, !dbg !733
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 0, !dbg !733
  %12 = load i8*, i8** %11, align 8, !dbg !733
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !733
  %14 = load i64, i64* %13, align 8, !dbg !733
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 0, !dbg !733
  store i8* %12, i8** %15, align 8, !dbg !733
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 1, !dbg !733
  store i64 %14, i64* %16, align 8, !dbg !733
  %17 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_23 to { [0 x i8]*, i64 }*, !dbg !733
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 0, !dbg !733
  %19 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !733
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 1, !dbg !733
  %21 = load i64, i64* %20, align 8, !dbg !733
  %22 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %19, 0, !dbg !735
  %23 = insertvalue { [0 x i8]*, i64 } %22, i64 %21, 1, !dbg !735
  ret { [0 x i8]*, i64 } %23, !dbg !735
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17hcac955a39670c74cE"(i64 %self.0, i64 %self.1, [0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !736 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_3 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !753, metadata !DIExpression()), !dbg !755
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !754, metadata !DIExpression()), !dbg !756
  %_4 = icmp ugt i64 %self.0, %self.1, !dbg !757
  br i1 %_4, label %bb1, label %bb2, !dbg !757

bb2:                                              ; preds = %start
  %_7 = icmp ugt i64 %self.1, %slice.1, !dbg !758
  %5 = zext i1 %_7 to i8, !dbg !757
  store i8 %5, i8* %_3, align 1, !dbg !757
  br label %bb3, !dbg !757

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1, !dbg !757
  br label %bb3, !dbg !757

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %_3, align 1, !dbg !757, !range !759, !noundef !27
  %7 = trunc i8 %6 to i1, !dbg !757
  br i1 %7, label %bb4, label %bb5, !dbg !757

bb5:                                              ; preds = %bb3
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %8 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h027adc00ed696f09E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1), !dbg !760
  %_13.0 = extractvalue { [0 x i8]*, i64 } %8, 0, !dbg !760
  %_13.1 = extractvalue { [0 x i8]*, i64 } %8, 1, !dbg !760
  br label %bb6, !dbg !760

bb4:                                              ; preds = %bb3
  %9 = bitcast { i8*, i64 }* %0 to {}**, !dbg !761
  store {}* null, {}** %9, align 8, !dbg !761
  br label %bb7, !dbg !762

bb7:                                              ; preds = %bb6, %bb4
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !763
  %11 = load i8*, i8** %10, align 8, !dbg !763, !align !608
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !763
  %13 = load i64, i64* %12, align 8, !dbg !763
  %14 = insertvalue { i8*, i64 } undef, i8* %11, 0, !dbg !763
  %15 = insertvalue { i8*, i64 } %14, i64 %13, 1, !dbg !763
  ret { i8*, i64 } %15, !dbg !763

bb6:                                              ; preds = %bb5
  %16 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !764
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0, !dbg !764
  store [0 x i8]* %_13.0, [0 x i8]** %17, align 8, !dbg !764
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1, !dbg !764
  store i64 %_13.1, i64* %18, align 8, !dbg !764
  br label %bb7, !dbg !762
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h49eca17de111d561E"(i64 %self.0, i64 %self.1, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !765 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !773, metadata !DIExpression()), !dbg !775
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !774, metadata !DIExpression()), !dbg !776
  %_4 = icmp ugt i64 %self.0, %self.1, !dbg !777
  br i1 %_4, label %bb1, label %bb2, !dbg !777

bb2:                                              ; preds = %start
  %_10 = icmp ugt i64 %self.1, %slice.1, !dbg !778
  br i1 %_10, label %bb3, label %bb4, !dbg !778

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17ha5ea6a931f940f05E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0) #18, !dbg !779
  unreachable, !dbg !779

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %5 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h6f044855ca2f8af0E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1), !dbg !780
  %_20.0 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !780
  %_20.1 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !780
  br label %bb5, !dbg !780

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hc132699ea07ad3eeE(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) #18, !dbg !781
  unreachable, !dbg !781

bb5:                                              ; preds = %bb4
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_20.0, 0, !dbg !782
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %_20.1, 1, !dbg !782
  ret { [0 x i8]*, i64 } %7, !dbg !782
}

; <proc_macro::bridge::ExpnGlobals<Span> as proc_macro::bridge::rpc::DecodeMut<S>>::decode
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN107_$LT$proc_macro..bridge..ExpnGlobals$LT$Span$GT$$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17h8296fd1bf7e4ce1dE"(%"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>"* sret(%"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>") %0, { [0 x i8]*, i64 }* align 8 %r, {}* align 1 %s) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !783 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %s.dbg.spill = alloca {}*, align 8
  %r.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %r, { [0 x i8]*, i64 }** %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %r.dbg.spill, metadata !800, metadata !DIExpression()), !dbg !803
  store {}* %s, {}** %s.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %s.dbg.spill, metadata !801, metadata !DIExpression()), !dbg !804
; call <proc_macro::bridge::client::Span as proc_macro::bridge::rpc::DecodeMut<S>>::decode
  %_3 = call i32 @"_ZN96_$LT$proc_macro..bridge..client..Span$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17h393090e286eefc6cE"({ [0 x i8]*, i64 }* align 8 %r, {}* align 1 %s), !dbg !805, !range !642
  br label %bb1, !dbg !805

bb1:                                              ; preds = %start
; invoke <proc_macro::bridge::client::Span as proc_macro::bridge::rpc::DecodeMut<S>>::decode
  %_6 = invoke i32 @"_ZN96_$LT$proc_macro..bridge..client..Span$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17h393090e286eefc6cE"({ [0 x i8]*, i64 }* align 8 %r, {}* align 1 %s)
          to label %bb2 unwind label %cleanup, !dbg !805, !range !642

bb5:                                              ; preds = %bb4, %cleanup
  br label %bb6, !dbg !806

cleanup:                                          ; preds = %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
; invoke <proc_macro::bridge::client::Span as proc_macro::bridge::rpc::DecodeMut<S>>::decode
  %_9 = invoke i32 @"_ZN96_$LT$proc_macro..bridge..client..Span$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17h393090e286eefc6cE"({ [0 x i8]*, i64 }* align 8 %r, {}* align 1 %s)
          to label %bb3 unwind label %cleanup1, !dbg !805, !range !642

bb4:                                              ; preds = %cleanup1
  br label %bb5, !dbg !806

cleanup1:                                         ; preds = %bb2
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %12 = bitcast %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>"* %0 to i32*, !dbg !807
  store i32 %_3, i32* %12, align 4, !dbg !807
  %13 = getelementptr inbounds %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>", %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>"* %0, i32 0, i32 1, !dbg !807
  store i32 %_6, i32* %13, align 4, !dbg !807
  %14 = getelementptr inbounds %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>", %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>"* %0, i32 0, i32 2, !dbg !807
  store i32 %_9, i32* %14, align 4, !dbg !807
  ret void, !dbg !808

bb6:                                              ; preds = %bb5
  %15 = bitcast { i8*, i32 }* %1 to i8**, !dbg !809
  %16 = load i8*, i8** %15, align 8, !dbg !809
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !809
  %18 = load i32, i32* %17, align 8, !dbg !809
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0, !dbg !809
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1, !dbg !809
  resume { i8*, i32 } %20, !dbg !809
}

; proc_macro::bridge::<impl proc_macro::bridge::rpc::Encode<S> for core::option::Option<T>>::encode
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN10proc_macro6bridge100_$LT$impl$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$u20$for$u20$core..option..Option$LT$T$GT$$GT$6encode17h0ce7338230398f4dE"(i8* align 1 %0, i64 %1, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !810 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %t.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill = alloca {}*, align 8
  %w.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %_16 = alloca i8, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !828, metadata !DIExpression()), !dbg !834
  store %"proc_macro::bridge::buffer::Buffer"* %w, %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, metadata !829, metadata !DIExpression()), !dbg !835
  store {}* %s, {}** %s.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %s.dbg.spill, metadata !830, metadata !DIExpression()), !dbg !836
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !837
  %6 = load {}*, {}** %5, align 8, !dbg !837
  %7 = icmp eq {}* %6, null, !dbg !837
  %_4 = select i1 %7, i64 0, i64 1, !dbg !837
  switch i64 %_4, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !838

bb2:                                              ; preds = %start
  unreachable, !dbg !837

bb1:                                              ; preds = %start
; call <u8 as proc_macro::bridge::rpc::Encode<S>>::encode
  call void @"_ZN63_$LT$u8$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h18dcaaf63bdfe937E"(i8 1, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s), !dbg !839
  br label %bb6, !dbg !839

bb3:                                              ; preds = %start
  store i8 1, i8* %_16, align 1, !dbg !840
  %8 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !840
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 0, !dbg !840
  %t.0 = load [0 x i8]*, [0 x i8]** %9, align 8, !dbg !840, !nonnull !27, !align !608, !noundef !27
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 1, !dbg !840
  %t.1 = load i64, i64* %10, align 8, !dbg !840
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !840
  store [0 x i8]* %t.0, [0 x i8]** %11, align 8, !dbg !840
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !840
  store i64 %t.1, i64* %12, align 8, !dbg !840
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %t.dbg.spill, metadata !831, metadata !DIExpression()), !dbg !841
; invoke <u8 as proc_macro::bridge::rpc::Encode<S>>::encode
  invoke void @"_ZN63_$LT$u8$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h18dcaaf63bdfe937E"(i8 0, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s)
          to label %bb4 unwind label %cleanup, !dbg !842

bb9:                                              ; preds = %cleanup
  %13 = load i8, i8* %_16, align 1, !dbg !843, !range !759, !noundef !27
  %14 = trunc i8 %13 to i1, !dbg !843
  br i1 %14, label %bb8, label %bb10, !dbg !843

cleanup:                                          ; preds = %bb4, %bb3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb9

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_16, align 1, !dbg !844
; invoke <&str as proc_macro::bridge::rpc::Encode<S>>::encode
  invoke void @"_ZN68_$LT$$RF$str$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17hba6464c36be37697E"([0 x i8]* align 1 %t.0, i64 %t.1, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s)
          to label %bb5 unwind label %cleanup, !dbg !844

bb5:                                              ; preds = %bb4
  br label %bb7, !dbg !843

bb10:                                             ; preds = %bb8, %bb9
  %20 = bitcast { i8*, i32 }* %2 to i8**, !dbg !845
  %21 = load i8*, i8** %20, align 8, !dbg !845
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !845
  %23 = load i32, i32* %22, align 8, !dbg !845
  %24 = insertvalue { i8*, i32 } undef, i8* %21, 0, !dbg !845
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1, !dbg !845
  resume { i8*, i32 } %25, !dbg !845

bb8:                                              ; preds = %bb9
  br label %bb10, !dbg !843

bb7:                                              ; preds = %bb6, %bb5
  ret void, !dbg !846

bb6:                                              ; preds = %bb1
  br label %bb7, !dbg !847
}

; proc_macro::bridge::<impl proc_macro::bridge::rpc::Encode<S> for core::option::Option<T>>::encode
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN10proc_macro6bridge100_$LT$impl$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$u20$for$u20$core..option..Option$LT$T$GT$$GT$6encode17haa31a8d681da04b6E"(i32 %0, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !848 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %s.dbg.spill = alloca {}*, align 8
  %w.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %_16 = alloca i8, align 1
  %t = alloca i32, align 4
  %self = alloca i32, align 4
  store i32 %0, i32* %self, align 4
  call void @llvm.dbg.declare(metadata i32* %self, metadata !852, metadata !DIExpression()), !dbg !858
  store %"proc_macro::bridge::buffer::Buffer"* %w, %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, metadata !853, metadata !DIExpression()), !dbg !859
  store {}* %s, {}** %s.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %s.dbg.spill, metadata !854, metadata !DIExpression()), !dbg !860
  call void @llvm.dbg.declare(metadata i32* %t, metadata !855, metadata !DIExpression()), !dbg !861
  %2 = load i32, i32* %self, align 4, !dbg !862
  %3 = icmp eq i32 %2, 0, !dbg !862
  %_4 = select i1 %3, i64 0, i64 1, !dbg !862
  switch i64 %_4, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !863

bb2:                                              ; preds = %start
  unreachable, !dbg !862

bb1:                                              ; preds = %start
; call <u8 as proc_macro::bridge::rpc::Encode<S>>::encode
  call void @"_ZN63_$LT$u8$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h18dcaaf63bdfe937E"(i8 1, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s), !dbg !864
  br label %bb6, !dbg !864

bb3:                                              ; preds = %start
  store i8 1, i8* %_16, align 1, !dbg !865
  %4 = load i32, i32* %self, align 4, !dbg !865, !range !642, !noundef !27
  store i32 %4, i32* %t, align 4, !dbg !865
; invoke <u8 as proc_macro::bridge::rpc::Encode<S>>::encode
  invoke void @"_ZN63_$LT$u8$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h18dcaaf63bdfe937E"(i8 0, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s)
          to label %bb4 unwind label %cleanup, !dbg !866

bb9:                                              ; preds = %cleanup
  %5 = load i8, i8* %_16, align 1, !dbg !867, !range !759, !noundef !27
  %6 = trunc i8 %5 to i1, !dbg !867
  br i1 %6, label %bb8, label %bb10, !dbg !867

cleanup:                                          ; preds = %bb4, %bb3
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb9

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_16, align 1, !dbg !868
  %_10 = load i32, i32* %t, align 4, !dbg !868, !range !642, !noundef !27
; invoke <proc_macro::bridge::client::TokenStream as proc_macro::bridge::rpc::Encode<S>>::encode
  invoke void @"_ZN100_$LT$proc_macro..bridge..client..TokenStream$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h1c05180f801e837eE"(i32 %_10, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s)
          to label %bb5 unwind label %cleanup, !dbg !868

bb5:                                              ; preds = %bb4
  br label %bb7, !dbg !867

bb10:                                             ; preds = %bb8, %bb9
  %12 = bitcast { i8*, i32 }* %1 to i8**, !dbg !869
  %13 = load i8*, i8** %12, align 8, !dbg !869
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !869
  %15 = load i32, i32* %14, align 8, !dbg !869
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0, !dbg !869
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1, !dbg !869
  resume { i8*, i32 } %17, !dbg !869

bb8:                                              ; preds = %bb9
; invoke core::ptr::drop_in_place<proc_macro::bridge::client::TokenStream>
  invoke void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..TokenStream$GT$17h6e4ae08084020ae3E"(i32* %t) #19
          to label %bb10 unwind label %abort, !dbg !867

abort:                                            ; preds = %bb8
  %18 = landingpad { i8*, i32 }
          cleanup, !dbg !869
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !869
  unreachable, !dbg !869

bb7:                                              ; preds = %bb6, %bb5
  ret void, !dbg !870

bb6:                                              ; preds = %bb1
  br label %bb7, !dbg !871
}

; proc_macro::bridge::<impl proc_macro::bridge::rpc::Encode<S> for core::result::Result<T,E>>::encode
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN10proc_macro6bridge104_$LT$impl$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$u20$for$u20$core..result..Result$LT$T$C$E$GT$$GT$6encode17h3118e371acb46529E"(%"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>"* %self, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !872 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %t.dbg.spill = alloca {}, align 1
  %s.dbg.spill = alloca {}*, align 8
  %w.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %_22 = alloca i8, align 1
  %_21 = alloca i8, align 1
  %_18 = alloca %"proc_macro::bridge::rpc::PanicMessage", align 8
  %e = alloca %"proc_macro::bridge::rpc::PanicMessage", align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>"* %self, metadata !909, metadata !DIExpression()), !dbg !917
  store %"proc_macro::bridge::buffer::Buffer"* %w, %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, metadata !910, metadata !DIExpression()), !dbg !918
  store {}* %s, {}** %s.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %s.dbg.spill, metadata !911, metadata !DIExpression()), !dbg !919
  call void @llvm.dbg.declare(metadata {}* %t.dbg.spill, metadata !912, metadata !DIExpression()), !dbg !920
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::rpc::PanicMessage"* %e, metadata !914, metadata !DIExpression()), !dbg !921
  %1 = bitcast %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>"* %self to i64*, !dbg !922
  %2 = load i64, i64* %1, align 8, !dbg !922, !range !923, !noundef !27
  %3 = sub i64 %2, 3, !dbg !922
  %4 = icmp eq i64 %3, 0, !dbg !922
  %_4 = select i1 %4, i64 0, i64 1, !dbg !922
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !924

bb2:                                              ; preds = %start
  unreachable, !dbg !922

bb3:                                              ; preds = %start
  store i8 1, i8* %_22, align 1, !dbg !925
; invoke <u8 as proc_macro::bridge::rpc::Encode<S>>::encode
  invoke void @"_ZN63_$LT$u8$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h18dcaaf63bdfe937E"(i8 0, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s)
          to label %bb4 unwind label %cleanup1, !dbg !926

bb1:                                              ; preds = %start
  store i8 1, i8* %_21, align 1, !dbg !925
  %5 = bitcast %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>"* %self to %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>::Err"*, !dbg !925
  %6 = bitcast %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>::Err"* %5 to %"proc_macro::bridge::rpc::PanicMessage"*, !dbg !925
  %7 = bitcast %"proc_macro::bridge::rpc::PanicMessage"* %e to i8*, !dbg !925
  %8 = bitcast %"proc_macro::bridge::rpc::PanicMessage"* %6 to i8*, !dbg !925
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false), !dbg !925
; invoke <u8 as proc_macro::bridge::rpc::Encode<S>>::encode
  invoke void @"_ZN63_$LT$u8$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h18dcaaf63bdfe937E"(i8 1, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s)
          to label %bb6 unwind label %cleanup, !dbg !927

bb10:                                             ; preds = %cleanup
  %9 = load i8, i8* %_21, align 1, !dbg !928, !range !759, !noundef !27
  %10 = trunc i8 %9 to i1, !dbg !928
  br i1 %10, label %bb9, label %bb13, !dbg !928

cleanup:                                          ; preds = %bb6, %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb10

bb6:                                              ; preds = %bb1
  store i8 0, i8* %_21, align 1, !dbg !929
  %16 = bitcast %"proc_macro::bridge::rpc::PanicMessage"* %_18 to i8*, !dbg !929
  %17 = bitcast %"proc_macro::bridge::rpc::PanicMessage"* %e to i8*, !dbg !929
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 32, i1 false), !dbg !929
; invoke <proc_macro::bridge::rpc::PanicMessage as proc_macro::bridge::rpc::Encode<S>>::encode
  invoke void @"_ZN98_$LT$proc_macro..bridge..rpc..PanicMessage$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h48e5f54ac329d40aE"(%"proc_macro::bridge::rpc::PanicMessage"* %_18, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s)
          to label %bb7 unwind label %cleanup, !dbg !929

bb7:                                              ; preds = %bb6
  br label %bb8, !dbg !928

bb13:                                             ; preds = %bb11, %bb12, %bb9, %bb10
  %18 = bitcast { i8*, i32 }* %0 to i8**, !dbg !930
  %19 = load i8*, i8** %18, align 8, !dbg !930
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !930
  %21 = load i32, i32* %20, align 8, !dbg !930
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0, !dbg !930
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1, !dbg !930
  resume { i8*, i32 } %23, !dbg !930

bb9:                                              ; preds = %bb10
; invoke core::ptr::drop_in_place<proc_macro::bridge::rpc::PanicMessage>
  invoke void @"_ZN4core3ptr58drop_in_place$LT$proc_macro..bridge..rpc..PanicMessage$GT$17ha026d0b68f540484E"(%"proc_macro::bridge::rpc::PanicMessage"* %e) #19
          to label %bb13 unwind label %abort, !dbg !928

abort:                                            ; preds = %bb9
  %24 = landingpad { i8*, i32 }
          cleanup, !dbg !930
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !930
  unreachable, !dbg !930

bb8:                                              ; preds = %bb5, %bb7
  ret void, !dbg !931

bb12:                                             ; preds = %cleanup1
  %25 = load i8, i8* %_22, align 1, !dbg !928, !range !759, !noundef !27
  %26 = trunc i8 %25 to i1, !dbg !928
  br i1 %26, label %bb11, label %bb13, !dbg !928

cleanup1:                                         ; preds = %bb4, %bb3
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %29, i32* %31, align 8
  br label %bb12

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_22, align 1, !dbg !932
; invoke <() as proc_macro::bridge::rpc::Encode<S>>::encode
  invoke void @"_ZN69_$LT$$LP$$RP$$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h89c64569fb1c86c5E"(%"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s)
          to label %bb5 unwind label %cleanup1, !dbg !932

bb5:                                              ; preds = %bb4
  br label %bb8, !dbg !928

bb11:                                             ; preds = %bb12
  br label %bb13, !dbg !928
}

; proc_macro::bridge::<impl proc_macro::bridge::rpc::Encode<S> for core::result::Result<T,E>>::encode
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN10proc_macro6bridge104_$LT$impl$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$u20$for$u20$core..result..Result$LT$T$C$E$GT$$GT$6encode17h8ab643544b667b03E"(i32 %0, i32 %1, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !933 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e.dbg.spill = alloca {}, align 1
  %s.dbg.spill = alloca {}*, align 8
  %w.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %_22 = alloca i8, align 1
  %_21 = alloca i8, align 1
  %t = alloca i32, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata { i32, i32 }* %self, metadata !953, metadata !DIExpression()), !dbg !961
  store %"proc_macro::bridge::buffer::Buffer"* %w, %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, metadata !954, metadata !DIExpression()), !dbg !962
  store {}* %s, {}** %s.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %s.dbg.spill, metadata !955, metadata !DIExpression()), !dbg !963
  call void @llvm.dbg.declare(metadata i32* %t, metadata !956, metadata !DIExpression()), !dbg !964
  call void @llvm.dbg.declare(metadata {}* %e.dbg.spill, metadata !958, metadata !DIExpression()), !dbg !965
  %5 = bitcast { i32, i32 }* %self to i32*, !dbg !966
  %6 = load i32, i32* %5, align 4, !dbg !966, !range !967, !noundef !27
  %_4 = zext i32 %6 to i64, !dbg !966
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !968

bb2:                                              ; preds = %start
  unreachable, !dbg !966

bb3:                                              ; preds = %start
  store i8 1, i8* %_22, align 1, !dbg !969
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1, !dbg !969
  %8 = load i32, i32* %7, align 4, !dbg !969
  store i32 %8, i32* %t, align 4, !dbg !969
; invoke <u8 as proc_macro::bridge::rpc::Encode<S>>::encode
  invoke void @"_ZN63_$LT$u8$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h18dcaaf63bdfe937E"(i8 0, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s)
          to label %bb4 unwind label %cleanup1, !dbg !970

bb1:                                              ; preds = %start
  store i8 1, i8* %_21, align 1, !dbg !969
; invoke <u8 as proc_macro::bridge::rpc::Encode<S>>::encode
  invoke void @"_ZN63_$LT$u8$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h18dcaaf63bdfe937E"(i8 1, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s)
          to label %bb6 unwind label %cleanup, !dbg !971

bb10:                                             ; preds = %cleanup
  %9 = load i8, i8* %_21, align 1, !dbg !972, !range !759, !noundef !27
  %10 = trunc i8 %9 to i1, !dbg !972
  br i1 %10, label %bb9, label %bb13, !dbg !972

cleanup:                                          ; preds = %bb6, %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb10

bb6:                                              ; preds = %bb1
  store i8 0, i8* %_21, align 1, !dbg !973
; invoke <() as proc_macro::bridge::rpc::Encode<S>>::encode
  invoke void @"_ZN69_$LT$$LP$$RP$$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h89c64569fb1c86c5E"(%"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s)
          to label %bb7 unwind label %cleanup, !dbg !973

bb7:                                              ; preds = %bb6
  br label %bb8, !dbg !972

bb13:                                             ; preds = %bb11, %bb12, %bb9, %bb10
  %16 = bitcast { i8*, i32 }* %2 to i8**, !dbg !974
  %17 = load i8*, i8** %16, align 8, !dbg !974
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !974
  %19 = load i32, i32* %18, align 8, !dbg !974
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !974
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !974
  resume { i8*, i32 } %21, !dbg !974

bb9:                                              ; preds = %bb10
  br label %bb13, !dbg !972

bb8:                                              ; preds = %bb5, %bb7
  ret void, !dbg !975

bb12:                                             ; preds = %cleanup1
  %22 = load i8, i8* %_22, align 1, !dbg !972, !range !759, !noundef !27
  %23 = trunc i8 %22 to i1, !dbg !972
  br i1 %23, label %bb11, label %bb13, !dbg !972

cleanup1:                                         ; preds = %bb4, %bb3
  %24 = landingpad { i8*, i32 }
          cleanup
  %25 = extractvalue { i8*, i32 } %24, 0
  %26 = extractvalue { i8*, i32 } %24, 1
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %25, i8** %27, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %26, i32* %28, align 8
  br label %bb12

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_22, align 1, !dbg !976
  %_10 = load i32, i32* %t, align 4, !dbg !976
; invoke proc_macro::bridge::<impl proc_macro::bridge::rpc::Encode<S> for core::option::Option<T>>::encode
  invoke void @"_ZN10proc_macro6bridge100_$LT$impl$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$u20$for$u20$core..option..Option$LT$T$GT$$GT$6encode17haa31a8d681da04b6E"(i32 %_10, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s)
          to label %bb5 unwind label %cleanup1, !dbg !976

bb5:                                              ; preds = %bb4
  br label %bb8, !dbg !972

bb11:                                             ; preds = %bb12
; invoke core::ptr::drop_in_place<core::option::Option<proc_macro::bridge::client::TokenStream>>
  invoke void @"_ZN4core3ptr88drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$GT$17h0d2fe3aa7bb6e441E"(i32* %t) #19
          to label %bb13 unwind label %abort, !dbg !972

abort:                                            ; preds = %bb11
  %29 = landingpad { i8*, i32 }
          cleanup, !dbg !974
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !974
  unreachable, !dbg !974
}

; proc_macro::bridge::scoped_cell::ScopedCell<T>::new
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN10proc_macro6bridge11scoped_cell19ScopedCell$LT$T$GT$3new17hfe6f4b7449893b9bE"(%"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* sret(%"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>") %0, %"proc_macro::bridge::client::BridgeState"* %value) unnamed_addr #1 !dbg !977 {
start:
  %_6 = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %value2 = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %_4 = alloca %"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>", align 8
  %value1 = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %_2 = alloca %"core::cell::Cell<proc_macro::bridge::client::BridgeState>", align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %value, metadata !1017, metadata !DIExpression()), !dbg !1018
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %value1, metadata !1019, metadata !DIExpression()), !dbg !1026
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %value2, metadata !1028, metadata !DIExpression()), !dbg !1034
  %1 = bitcast %"proc_macro::bridge::client::BridgeState"* %value1 to i8*, !dbg !1036
  %2 = bitcast %"proc_macro::bridge::client::BridgeState"* %value to i8*, !dbg !1036
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 80, i1 false), !dbg !1036
  %3 = bitcast %"proc_macro::bridge::client::BridgeState"* %value2 to i8*, !dbg !1026
  %4 = bitcast %"proc_macro::bridge::client::BridgeState"* %value1 to i8*, !dbg !1026
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 80, i1 false), !dbg !1026
  %5 = bitcast %"proc_macro::bridge::client::BridgeState"* %_6 to i8*, !dbg !1034
  %6 = bitcast %"proc_macro::bridge::client::BridgeState"* %value2 to i8*, !dbg !1034
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 80, i1 false), !dbg !1034
  %7 = bitcast %"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>"* %_4 to %"proc_macro::bridge::client::BridgeState"*, !dbg !1034
  %8 = bitcast %"proc_macro::bridge::client::BridgeState"* %7 to i8*, !dbg !1034
  %9 = bitcast %"proc_macro::bridge::client::BridgeState"* %_6 to i8*, !dbg !1034
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 80, i1 false), !dbg !1034
  %10 = bitcast %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"* %_2 to %"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>"*, !dbg !1026
  %11 = bitcast %"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>"* %10 to i8*, !dbg !1026
  %12 = bitcast %"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>"* %_4 to i8*, !dbg !1026
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 80, i1 false), !dbg !1026
  %13 = bitcast %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %0 to %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"*, !dbg !1037
  %14 = bitcast %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"* %13 to i8*, !dbg !1037
  %15 = bitcast %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"* %_2 to i8*, !dbg !1037
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 80, i1 false), !dbg !1037
  ret void, !dbg !1038
}

; proc_macro::bridge::scoped_cell::ScopedCell<T>::set
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN10proc_macro6bridge11scoped_cell19ScopedCell$LT$T$GT$3set17hf32551b6ab7cf3cdE"(%"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* align 8 %self, %"proc_macro::bridge::client::BridgeState"* %value, %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %f) unnamed_addr #1 !dbg !1039 {
start:
  %self.dbg.spill = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, align 8
  %_6 = alloca %"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]", align 8
  %_5 = alloca %"proc_macro::bridge::client::BridgeState", align 8
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %self, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %self.dbg.spill, metadata !1059, metadata !DIExpression()), !dbg !1065
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %value, metadata !1060, metadata !DIExpression()), !dbg !1066
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %f, metadata !1061, metadata !DIExpression()), !dbg !1067
  %0 = bitcast %"proc_macro::bridge::client::BridgeState"* %_5 to i8*, !dbg !1068
  %1 = bitcast %"proc_macro::bridge::client::BridgeState"* %value to i8*, !dbg !1068
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 80, i1 false), !dbg !1068
  %2 = bitcast %"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %_6 to %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"*, !dbg !1069
  %3 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %2 to i8*, !dbg !1069
  %4 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %f to i8*, !dbg !1069
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false), !dbg !1069
; call proc_macro::bridge::scoped_cell::ScopedCell<T>::replace
  call void @"_ZN10proc_macro6bridge11scoped_cell19ScopedCell$LT$T$GT$7replace17h464957909ae8eab9E"(%"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* align 8 %self, %"proc_macro::bridge::client::BridgeState"* %_5, %"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %_6), !dbg !1070
  br label %bb1, !dbg !1070

bb1:                                              ; preds = %start
  ret void, !dbg !1071
}

; proc_macro::bridge::scoped_cell::ScopedCell<T>::set::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10proc_macro6bridge11scoped_cell19ScopedCell$LT$T$GT$3set28_$u7b$$u7b$closure$u7d$$u7d$17h1a2c85c9c6853d0fE"(%"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %_1, i64* align 8 %_2) unnamed_addr #0 !dbg !1072 {
start:
  %_2.dbg.spill = alloca i64*, align 8
  %_3 = alloca %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]", align 8
  %0 = bitcast %"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %_1 to %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"*
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %_1, metadata !1085, metadata !DIExpression()), !dbg !1087
  store i64* %_2, i64** %_2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %_2.dbg.spill, metadata !1086, metadata !DIExpression()), !dbg !1088
  %1 = bitcast %"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %_1 to %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"*, !dbg !1089
  %2 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_3 to i8*, !dbg !1089
  %3 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %1 to i8*, !dbg !1089
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !1089
; call proc_macro::bridge::client::run_client::{{closure}}::{{closure}}::{{closure}}
  call void @"_ZN10proc_macro6bridge6client10run_client28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h2884d7662d45a5aeE"(%"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_3), !dbg !1089
  br label %bb1, !dbg !1089

bb1:                                              ; preds = %start
  ret void, !dbg !1090
}

; proc_macro::bridge::scoped_cell::ScopedCell<T>::replace
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN10proc_macro6bridge11scoped_cell19ScopedCell$LT$T$GT$7replace17h464957909ae8eab9E"(%"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* align 8 %self, %"proc_macro::bridge::client::BridgeState"* %replacement, %"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %f) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1091 {
start:
  %val.dbg.spill = alloca %"proc_macro::bridge::client::BridgeState"*, align 8
  %x.dbg.spill = alloca %"proc_macro::bridge::client::BridgeState"*, align 8
  %self.dbg.spill3 = alloca %"core::option::Option<proc_macro::bridge::client::BridgeState>"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, align 8
  %value = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %_23 = alloca i8, align 1
  %_22 = alloca i8, align 1
  %_21 = alloca i8, align 1
  %self1 = alloca i64*, align 8
  %_16 = alloca i64*, align 8
  %_15 = alloca i64*, align 8
  %_14 = alloca %"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]", align 8
  %t = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %erased = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %_9 = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %_7 = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %_6 = alloca %"core::option::Option<proc_macro::bridge::client::BridgeState>", align 8
  %put_back_on_drop = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>", align 8
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %self, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %self.dbg.spill, metadata !1095, metadata !DIExpression()), !dbg !1120
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %replacement, metadata !1096, metadata !DIExpression()), !dbg !1121
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %f, metadata !1097, metadata !DIExpression()), !dbg !1122
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* %put_back_on_drop, metadata !1098, metadata !DIExpression()), !dbg !1123
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %erased, metadata !1116, metadata !DIExpression()), !dbg !1124
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %t, metadata !1125, metadata !DIExpression()), !dbg !1132
  call void @llvm.dbg.declare(metadata i64** %self1, metadata !1134, metadata !DIExpression()), !dbg !1157
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %value, metadata !1159, metadata !DIExpression()), !dbg !1170
  store i8 1, i8* %_23, align 1, !dbg !1172
  store i8 1, i8* %_22, align 1, !dbg !1172
  %_8 = bitcast %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %self to %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"*, !dbg !1173
; invoke core::mem::transmute_copy
  invoke void @_ZN4core3mem14transmute_copy17h2e6e4585588377faE(%"proc_macro::bridge::client::BridgeState"* sret(%"proc_macro::bridge::client::BridgeState") %erased, %"proc_macro::bridge::client::BridgeState"* align 8 %replacement)
          to label %bb1 unwind label %cleanup, !dbg !1174

bb12:                                             ; preds = %bb6, %cleanup
  %1 = load i8, i8* %_22, align 1, !dbg !1175, !range !759, !noundef !27
  %2 = trunc i8 %1 to i1, !dbg !1175
  br i1 %2, label %bb11, label %bb7, !dbg !1175

cleanup:                                          ; preds = %bb4, %bb1, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb12

bb1:                                              ; preds = %start
  store i8 0, i8* %_23, align 1, !dbg !1176
  %8 = bitcast %"proc_macro::bridge::client::BridgeState"* %_9 to i8*, !dbg !1177
  %9 = bitcast %"proc_macro::bridge::client::BridgeState"* %erased to i8*, !dbg !1177
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 80, i1 false), !dbg !1177
; invoke core::cell::Cell<T>::replace
  invoke void @"_ZN4core4cell13Cell$LT$T$GT$7replace17h0488958ed4ddb4e1E"(%"proc_macro::bridge::client::BridgeState"* sret(%"proc_macro::bridge::client::BridgeState") %_7, %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"* align 8 %_8, %"proc_macro::bridge::client::BridgeState"* %_9)
          to label %bb2 unwind label %cleanup, !dbg !1173

bb2:                                              ; preds = %bb1
  %10 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %_6 to %"core::option::Option<proc_macro::bridge::client::BridgeState>::Some"*, !dbg !1178
  %11 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>::Some"* %10 to %"proc_macro::bridge::client::BridgeState"*, !dbg !1178
  %12 = bitcast %"proc_macro::bridge::client::BridgeState"* %11 to i8*, !dbg !1178
  %13 = bitcast %"proc_macro::bridge::client::BridgeState"* %_7 to i8*, !dbg !1178
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 80, i1 false), !dbg !1178
  %14 = bitcast %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* %put_back_on_drop to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"**, !dbg !1179
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %self, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %14, align 8, !dbg !1179
  %15 = getelementptr inbounds %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>", %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* %put_back_on_drop, i32 0, i32 1, !dbg !1179
  %16 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %15 to i8*, !dbg !1179
  %17 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %_6 to i8*, !dbg !1179
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 80, i1 false), !dbg !1179
  store i8 0, i8* %_22, align 1, !dbg !1180
  store i8 1, i8* %_21, align 1, !dbg !1180
  %18 = bitcast %"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %_14 to i8*, !dbg !1180
  %19 = bitcast %"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %f to i8*, !dbg !1180
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false), !dbg !1180
  %self2 = getelementptr inbounds %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>", %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* %put_back_on_drop, i32 0, i32 1, !dbg !1158
  store %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %self2, %"core::option::Option<proc_macro::bridge::client::BridgeState>"** %self.dbg.spill3, align 8, !dbg !1158
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::client::BridgeState>"** %self.dbg.spill3, metadata !1181, metadata !DIExpression()), !dbg !1191
  %20 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %self2 to i64*, !dbg !1191
  %21 = load i64, i64* %20, align 8, !dbg !1191, !range !923, !noundef !27
  %22 = sub i64 %21, 3, !dbg !1191
  %23 = icmp eq i64 %22, 0, !dbg !1191
  %_25 = select i1 %23, i64 0, i64 1, !dbg !1191
  switch i64 %_25, label %bb15 [
    i64 0, label %bb14
    i64 1, label %bb16
  ], !dbg !1191

bb15:                                             ; preds = %bb2
  unreachable, !dbg !1191

bb14:                                             ; preds = %bb2
  %24 = bitcast i64** %self1 to {}**, !dbg !1191
  store {}* null, {}** %24, align 8, !dbg !1191
  br label %bb3, !dbg !1191

bb16:                                             ; preds = %bb2
  %25 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %self2 to %"core::option::Option<proc_macro::bridge::client::BridgeState>::Some"*, !dbg !1191
  %x = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>::Some"* %25 to %"proc_macro::bridge::client::BridgeState"*, !dbg !1191
  store %"proc_macro::bridge::client::BridgeState"* %x, %"proc_macro::bridge::client::BridgeState"** %x.dbg.spill, align 8, !dbg !1191
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"** %x.dbg.spill, metadata !1188, metadata !DIExpression()), !dbg !1192
  %26 = bitcast i64** %self1 to %"proc_macro::bridge::client::BridgeState"**, !dbg !1192
  store %"proc_macro::bridge::client::BridgeState"* %x, %"proc_macro::bridge::client::BridgeState"** %26, align 8, !dbg !1192
  br label %bb3, !dbg !1191

bb3:                                              ; preds = %bb14, %bb16
  %27 = bitcast i64** %self1 to {}**, !dbg !1157
  %28 = load {}*, {}** %27, align 8, !dbg !1157
  %29 = icmp eq {}* %28, null, !dbg !1157
  %_28 = select i1 %29, i64 0, i64 1, !dbg !1157
  switch i64 %_28, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ], !dbg !1157

bb18:                                             ; preds = %bb3
  unreachable, !dbg !1157

bb17:                                             ; preds = %bb3
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc236 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc174 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup4, !dbg !1157

bb19:                                             ; preds = %bb3
  %30 = bitcast i64** %self1 to %"proc_macro::bridge::client::BridgeState"**, !dbg !1157
  %val = load %"proc_macro::bridge::client::BridgeState"*, %"proc_macro::bridge::client::BridgeState"** %30, align 8, !dbg !1157, !nonnull !27, !align !1193, !noundef !27
  store %"proc_macro::bridge::client::BridgeState"* %val, %"proc_macro::bridge::client::BridgeState"** %val.dbg.spill, align 8, !dbg !1157
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"** %val.dbg.spill, metadata !1154, metadata !DIExpression()), !dbg !1194
  %31 = bitcast i64** %_16 to %"proc_macro::bridge::client::BridgeState"**, !dbg !1195
  store %"proc_macro::bridge::client::BridgeState"* %val, %"proc_macro::bridge::client::BridgeState"** %31, align 8, !dbg !1195
  %32 = load i64*, i64** %_16, align 8, !dbg !1180, !nonnull !27, !align !1193, !noundef !27
  store i64* %32, i64** %_15, align 8, !dbg !1180
  store i8 0, i8* %_21, align 1, !dbg !1180
  %33 = load i64*, i64** %_15, align 8, !dbg !1180, !nonnull !27, !align !1193, !noundef !27
; invoke proc_macro::bridge::scoped_cell::ScopedCell<T>::set::{{closure}}
  invoke void @"_ZN10proc_macro6bridge11scoped_cell19ScopedCell$LT$T$GT$3set28_$u7b$$u7b$closure$u7d$$u7d$17h1a2c85c9c6853d0fE"(%"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %_14, i64* align 8 %33)
          to label %bb4 unwind label %cleanup4, !dbg !1180

bb10:                                             ; preds = %cleanup4
  %34 = load i8, i8* %_21, align 1, !dbg !1196, !range !759, !noundef !27
  %35 = trunc i8 %34 to i1, !dbg !1196
  br i1 %35, label %bb9, label %bb6, !dbg !1196

cleanup4:                                         ; preds = %bb17, %bb19
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  %38 = extractvalue { i8*, i32 } %36, 1
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %37, i8** %39, align 8
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %38, i32* %40, align 8
  br label %bb10

bb4:                                              ; preds = %bb19
; invoke core::ptr::drop_in_place<proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>>
  invoke void @"_ZN4core3ptr145drop_in_place$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$T$GT$..replace..PutBackOnDrop$LT$proc_macro..bridge..client..BridgeStateL$GT$$GT$17h4f995b6b6f582f16E"(%"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* %put_back_on_drop)
          to label %bb5 unwind label %cleanup, !dbg !1175

bb5:                                              ; preds = %bb4
  ret void, !dbg !1197

unreachable:                                      ; preds = %bb17
  unreachable

bb6:                                              ; preds = %bb9, %bb10
; invoke core::ptr::drop_in_place<proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>>
  invoke void @"_ZN4core3ptr145drop_in_place$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$T$GT$..replace..PutBackOnDrop$LT$proc_macro..bridge..client..BridgeStateL$GT$$GT$17h4f995b6b6f582f16E"(%"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* %put_back_on_drop) #19
          to label %bb12 unwind label %abort, !dbg !1175

bb9:                                              ; preds = %bb10
; invoke core::ptr::drop_in_place<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(),proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream,core::option::Option<proc_macro::bridge::client::TokenStream>,proc_macro::bridge::client::Client<proc_macro::TokenStream,proc_macro::TokenStream>::expand1<f128_input::f128_inner>::{{closure}}::{{closure}}>::{{closure}}::{{closure}}::{{closure}}>::{{closure}}>
  invoke void @"_ZN4core3ptr598drop_in_place$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$proc_macro..bridge..client..BridgeStateL$GT$..set$LT$$LP$$RP$$C$proc_macro..bridge..client..run_client$LT$proc_macro..bridge..client..TokenStream$C$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$C$proc_macro..bridge..client..Client$LT$proc_macro..TokenStream$C$proc_macro..TokenStream$GT$..expand1$LT$f128_input..f128_inner$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hb875581cfeba128dE"(%"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %_14) #19
          to label %bb6 unwind label %abort, !dbg !1196

abort:                                            ; preds = %bb13, %bb11, %bb6, %bb9
  %41 = landingpad { i8*, i32 }
          cleanup, !dbg !1198
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !1198
  unreachable, !dbg !1198

bb7:                                              ; preds = %bb11, %bb12
  %42 = load i8, i8* %_23, align 1, !dbg !1175, !range !759, !noundef !27
  %43 = trunc i8 %42 to i1, !dbg !1175
  br i1 %43, label %bb13, label %bb8, !dbg !1175

bb11:                                             ; preds = %bb12
; invoke core::ptr::drop_in_place<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(),proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream,core::option::Option<proc_macro::bridge::client::TokenStream>,proc_macro::bridge::client::Client<proc_macro::TokenStream,proc_macro::TokenStream>::expand1<f128_input::f128_inner>::{{closure}}::{{closure}}>::{{closure}}::{{closure}}::{{closure}}>::{{closure}}>
  invoke void @"_ZN4core3ptr598drop_in_place$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$proc_macro..bridge..client..BridgeStateL$GT$..set$LT$$LP$$RP$$C$proc_macro..bridge..client..run_client$LT$proc_macro..bridge..client..TokenStream$C$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$C$proc_macro..bridge..client..Client$LT$proc_macro..TokenStream$C$proc_macro..TokenStream$GT$..expand1$LT$f128_input..f128_inner$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hb875581cfeba128dE"(%"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %f) #19
          to label %bb7 unwind label %abort, !dbg !1175

bb8:                                              ; preds = %bb13, %bb7
  %44 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1198
  %45 = load i8*, i8** %44, align 8, !dbg !1198
  %46 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1198
  %47 = load i32, i32* %46, align 8, !dbg !1198
  %48 = insertvalue { i8*, i32 } undef, i8* %45, 0, !dbg !1198
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1, !dbg !1198
  resume { i8*, i32 } %49, !dbg !1198

bb13:                                             ; preds = %bb7
; invoke core::ptr::drop_in_place<proc_macro::bridge::client::BridgeState>
  invoke void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..BridgeState$GT$17haf8a3b6b03ea9458E"(%"proc_macro::bridge::client::BridgeState"* %replacement) #19
          to label %bb8 unwind label %abort, !dbg !1175
}

; proc_macro::bridge::scoped_cell::ScopedCell<T>::replace
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN10proc_macro6bridge11scoped_cell19ScopedCell$LT$T$GT$7replace17heea85a70599103bbE"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* align 8 %self, %"proc_macro::bridge::client::BridgeState"* %replacement) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1199 {
start:
  %val.dbg.spill = alloca %"proc_macro::bridge::client::BridgeState"*, align 8
  %x.dbg.spill = alloca %"proc_macro::bridge::client::BridgeState"*, align 8
  %self.dbg.spill3 = alloca %"core::option::Option<proc_macro::bridge::client::BridgeState>"*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %f.dbg.spill = alloca %"[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}::{closure#0}]", align 1
  %self.dbg.spill = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, align 8
  %value = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %_23 = alloca i8, align 1
  %_22 = alloca i8, align 1
  %_21 = alloca i8, align 1
  %self1 = alloca i64*, align 8
  %_16 = alloca i64*, align 8
  %_15 = alloca i64*, align 8
  %t = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %erased = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %_9 = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %_7 = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %_6 = alloca %"core::option::Option<proc_macro::bridge::client::BridgeState>", align 8
  %put_back_on_drop = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>", align 8
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %self, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %self.dbg.spill, metadata !1216, metadata !DIExpression()), !dbg !1225
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %replacement, metadata !1217, metadata !DIExpression()), !dbg !1226
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}::{closure#0}]"* %f.dbg.spill, metadata !1218, metadata !DIExpression()), !dbg !1227
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* %put_back_on_drop, metadata !1219, metadata !DIExpression()), !dbg !1228
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %erased, metadata !1221, metadata !DIExpression()), !dbg !1229
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %t, metadata !1230, metadata !DIExpression()), !dbg !1234
  call void @llvm.dbg.declare(metadata i64** %self1, metadata !1236, metadata !DIExpression()), !dbg !1243
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %value, metadata !1245, metadata !DIExpression()), !dbg !1249
  store i8 1, i8* %_23, align 1, !dbg !1251
  store i8 1, i8* %_22, align 1, !dbg !1251
  %_8 = bitcast %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %self to %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"*, !dbg !1252
; invoke core::mem::transmute_copy
  invoke void @_ZN4core3mem14transmute_copy17h2e6e4585588377faE(%"proc_macro::bridge::client::BridgeState"* sret(%"proc_macro::bridge::client::BridgeState") %erased, %"proc_macro::bridge::client::BridgeState"* align 8 %replacement)
          to label %bb1 unwind label %cleanup, !dbg !1253

bb12:                                             ; preds = %bb6, %cleanup
  %2 = load i8, i8* %_22, align 1, !dbg !1254, !range !759, !noundef !27
  %3 = trunc i8 %2 to i1, !dbg !1254
  br i1 %3, label %bb11, label %bb7, !dbg !1254

cleanup:                                          ; preds = %bb4, %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb12

bb1:                                              ; preds = %start
  store i8 0, i8* %_23, align 1, !dbg !1255
  %9 = bitcast %"proc_macro::bridge::client::BridgeState"* %_9 to i8*, !dbg !1256
  %10 = bitcast %"proc_macro::bridge::client::BridgeState"* %erased to i8*, !dbg !1256
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 80, i1 false), !dbg !1256
; invoke core::cell::Cell<T>::replace
  invoke void @"_ZN4core4cell13Cell$LT$T$GT$7replace17h0488958ed4ddb4e1E"(%"proc_macro::bridge::client::BridgeState"* sret(%"proc_macro::bridge::client::BridgeState") %_7, %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"* align 8 %_8, %"proc_macro::bridge::client::BridgeState"* %_9)
          to label %bb2 unwind label %cleanup, !dbg !1252

bb2:                                              ; preds = %bb1
  %11 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %_6 to %"core::option::Option<proc_macro::bridge::client::BridgeState>::Some"*, !dbg !1257
  %12 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>::Some"* %11 to %"proc_macro::bridge::client::BridgeState"*, !dbg !1257
  %13 = bitcast %"proc_macro::bridge::client::BridgeState"* %12 to i8*, !dbg !1257
  %14 = bitcast %"proc_macro::bridge::client::BridgeState"* %_7 to i8*, !dbg !1257
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 80, i1 false), !dbg !1257
  %15 = bitcast %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* %put_back_on_drop to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"**, !dbg !1258
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %self, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %15, align 8, !dbg !1258
  %16 = getelementptr inbounds %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>", %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* %put_back_on_drop, i32 0, i32 1, !dbg !1258
  %17 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %16 to i8*, !dbg !1258
  %18 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %_6 to i8*, !dbg !1258
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 80, i1 false), !dbg !1258
  store i8 0, i8* %_22, align 1, !dbg !1259
  store i8 1, i8* %_21, align 1, !dbg !1259
  %self2 = getelementptr inbounds %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>", %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* %put_back_on_drop, i32 0, i32 1, !dbg !1244
  store %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %self2, %"core::option::Option<proc_macro::bridge::client::BridgeState>"** %self.dbg.spill3, align 8, !dbg !1244
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::client::BridgeState>"** %self.dbg.spill3, metadata !1260, metadata !DIExpression()), !dbg !1267
  %19 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %self2 to i64*, !dbg !1267
  %20 = load i64, i64* %19, align 8, !dbg !1267, !range !923, !noundef !27
  %21 = sub i64 %20, 3, !dbg !1267
  %22 = icmp eq i64 %21, 0, !dbg !1267
  %_25 = select i1 %22, i64 0, i64 1, !dbg !1267
  switch i64 %_25, label %bb15 [
    i64 0, label %bb14
    i64 1, label %bb16
  ], !dbg !1267

bb15:                                             ; preds = %bb2
  unreachable, !dbg !1267

bb14:                                             ; preds = %bb2
  %23 = bitcast i64** %self1 to {}**, !dbg !1267
  store {}* null, {}** %23, align 8, !dbg !1267
  br label %bb3, !dbg !1267

bb16:                                             ; preds = %bb2
  %24 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %self2 to %"core::option::Option<proc_macro::bridge::client::BridgeState>::Some"*, !dbg !1267
  %x = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>::Some"* %24 to %"proc_macro::bridge::client::BridgeState"*, !dbg !1267
  store %"proc_macro::bridge::client::BridgeState"* %x, %"proc_macro::bridge::client::BridgeState"** %x.dbg.spill, align 8, !dbg !1267
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"** %x.dbg.spill, metadata !1264, metadata !DIExpression()), !dbg !1268
  %25 = bitcast i64** %self1 to %"proc_macro::bridge::client::BridgeState"**, !dbg !1268
  store %"proc_macro::bridge::client::BridgeState"* %x, %"proc_macro::bridge::client::BridgeState"** %25, align 8, !dbg !1268
  br label %bb3, !dbg !1267

bb3:                                              ; preds = %bb14, %bb16
  %26 = bitcast i64** %self1 to {}**, !dbg !1243
  %27 = load {}*, {}** %26, align 8, !dbg !1243
  %28 = icmp eq {}* %27, null, !dbg !1243
  %_28 = select i1 %28, i64 0, i64 1, !dbg !1243
  switch i64 %_28, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ], !dbg !1243

bb18:                                             ; preds = %bb3
  unreachable, !dbg !1243

bb17:                                             ; preds = %bb3
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc236 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc174 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup4, !dbg !1243

bb19:                                             ; preds = %bb3
  %29 = bitcast i64** %self1 to %"proc_macro::bridge::client::BridgeState"**, !dbg !1243
  %val = load %"proc_macro::bridge::client::BridgeState"*, %"proc_macro::bridge::client::BridgeState"** %29, align 8, !dbg !1243, !nonnull !27, !align !1193, !noundef !27
  store %"proc_macro::bridge::client::BridgeState"* %val, %"proc_macro::bridge::client::BridgeState"** %val.dbg.spill, align 8, !dbg !1243
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"** %val.dbg.spill, metadata !1240, metadata !DIExpression()), !dbg !1269
  %30 = bitcast i64** %_16 to %"proc_macro::bridge::client::BridgeState"**, !dbg !1270
  store %"proc_macro::bridge::client::BridgeState"* %val, %"proc_macro::bridge::client::BridgeState"** %30, align 8, !dbg !1270
  %31 = load i64*, i64** %_16, align 8, !dbg !1259, !nonnull !27, !align !1193, !noundef !27
  store i64* %31, i64** %_15, align 8, !dbg !1259
  store i8 0, i8* %_21, align 1, !dbg !1259
  %32 = load i64*, i64** %_15, align 8, !dbg !1259, !nonnull !27, !align !1193, !noundef !27
; invoke proc_macro::bridge::client::BridgeState::with::{{closure}}::{{closure}}
  invoke void @"_ZN10proc_macro6bridge6client11BridgeState4with28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hc8c1d915ee284f69E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0, i64* align 8 %32)
          to label %bb4 unwind label %cleanup4, !dbg !1259

bb10:                                             ; preds = %cleanup4
  %33 = load i8, i8* %_21, align 1, !dbg !1271, !range !759, !noundef !27
  %34 = trunc i8 %33 to i1, !dbg !1271
  br i1 %34, label %bb9, label %bb6, !dbg !1271

cleanup4:                                         ; preds = %bb17, %bb19
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = extractvalue { i8*, i32 } %35, 0
  %37 = extractvalue { i8*, i32 } %35, 1
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %36, i8** %38, align 8
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %37, i32* %39, align 8
  br label %bb10

bb4:                                              ; preds = %bb19
; invoke core::ptr::drop_in_place<proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>>
  invoke void @"_ZN4core3ptr145drop_in_place$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$T$GT$..replace..PutBackOnDrop$LT$proc_macro..bridge..client..BridgeStateL$GT$$GT$17h4f995b6b6f582f16E"(%"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* %put_back_on_drop)
          to label %bb5 unwind label %cleanup, !dbg !1254

bb5:                                              ; preds = %bb4
  ret void, !dbg !1272

unreachable:                                      ; preds = %bb17
  unreachable

bb6:                                              ; preds = %bb9, %bb10
; invoke core::ptr::drop_in_place<proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>>
  invoke void @"_ZN4core3ptr145drop_in_place$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$T$GT$..replace..PutBackOnDrop$LT$proc_macro..bridge..client..BridgeStateL$GT$$GT$17h4f995b6b6f582f16E"(%"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* %put_back_on_drop) #19
          to label %bb12 unwind label %abort, !dbg !1254

bb9:                                              ; preds = %bb10
  br label %bb6, !dbg !1271

abort:                                            ; preds = %bb13, %bb6
  %40 = landingpad { i8*, i32 }
          cleanup, !dbg !1273
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !1273
  unreachable, !dbg !1273

bb7:                                              ; preds = %bb11, %bb12
  %41 = load i8, i8* %_23, align 1, !dbg !1254, !range !759, !noundef !27
  %42 = trunc i8 %41 to i1, !dbg !1254
  br i1 %42, label %bb13, label %bb8, !dbg !1254

bb11:                                             ; preds = %bb12
  br label %bb7, !dbg !1254

bb8:                                              ; preds = %bb13, %bb7
  %43 = bitcast { i8*, i32 }* %1 to i8**, !dbg !1273
  %44 = load i8*, i8** %43, align 8, !dbg !1273
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !1273
  %46 = load i32, i32* %45, align 8, !dbg !1273
  %47 = insertvalue { i8*, i32 } undef, i8* %44, 0, !dbg !1273
  %48 = insertvalue { i8*, i32 } %47, i32 %46, 1, !dbg !1273
  resume { i8*, i32 } %48, !dbg !1273

bb13:                                             ; preds = %bb7
; invoke core::ptr::drop_in_place<proc_macro::bridge::client::BridgeState>
  invoke void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..BridgeState$GT$17haf8a3b6b03ea9458E"(%"proc_macro::bridge::client::BridgeState"* %replacement) #19
          to label %bb8 unwind label %abort, !dbg !1254
}

; proc_macro::bridge::selfless_reify::reify_to_extern_c_fn_hrt_bridge::wrapper
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10proc_macro6bridge14selfless_reify31reify_to_extern_c_fn_hrt_bridge7wrapper17h42ad000de5b43883E(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0, %"proc_macro::bridge::BridgeConfig"* byval(%"proc_macro::bridge::BridgeConfig") %bridge) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1274 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %slot.dbg.spill = alloca %"core::mem::manually_drop::ManuallyDrop<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]>", align 1
  %_7 = alloca i8, align 1
  %_6 = alloca %"proc_macro::bridge::BridgeConfig", align 8
  %_5 = alloca { %"proc_macro::bridge::BridgeConfig" }, align 8
  %self = alloca %"core::mem::maybe_uninit::MaybeUninit<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]>", align 1
  %f = alloca %"[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]", align 1
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::BridgeConfig"* %bridge, metadata !1279, metadata !DIExpression()), !dbg !1287
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]"* %f, metadata !1280, metadata !DIExpression()), !dbg !1288
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]>"* %self, metadata !1289, metadata !DIExpression()), !dbg !1306
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]>"* %slot.dbg.spill, metadata !1308, metadata !DIExpression()), !dbg !1314
  store i8 1, i8* %_7, align 1, !dbg !1316
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]>"* %self to {}*, !dbg !1317
  br label %bb5, !dbg !1306

bb5:                                              ; preds = %start
  store i8 0, i8* %_7, align 1, !dbg !1322
  %3 = bitcast %"proc_macro::bridge::BridgeConfig"* %_6 to i8*, !dbg !1322
  %4 = bitcast %"proc_macro::bridge::BridgeConfig"* %bridge to i8*, !dbg !1322
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 64, i1 false), !dbg !1322
  %5 = bitcast { %"proc_macro::bridge::BridgeConfig" }* %_5 to %"proc_macro::bridge::BridgeConfig"*, !dbg !1323
  %6 = bitcast %"proc_macro::bridge::BridgeConfig"* %5 to i8*, !dbg !1323
  %7 = bitcast %"proc_macro::bridge::BridgeConfig"* %_6 to i8*, !dbg !1323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 64, i1 false), !dbg !1323
  %8 = bitcast { %"proc_macro::bridge::BridgeConfig" }* %_5 to %"proc_macro::bridge::BridgeConfig"*, !dbg !1323
; invoke proc_macro::bridge::client::Client<proc_macro::TokenStream,proc_macro::TokenStream>::expand1::{{closure}}
  invoke void @"_ZN10proc_macro6bridge6client63Client$LT$proc_macro..TokenStream$C$proc_macro..TokenStream$GT$7expand128_$u7b$$u7b$closure$u7d$$u7d$17h67025ea0df26fe70E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0, %"[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]"* align 1 %f, %"proc_macro::bridge::BridgeConfig"* %8)
          to label %bb1 unwind label %cleanup, !dbg !1323

bb4:                                              ; preds = %cleanup
  %9 = load i8, i8* %_7, align 1, !dbg !1324, !range !759, !noundef !27
  %10 = trunc i8 %9 to i1, !dbg !1324
  br i1 %10, label %bb3, label %bb2, !dbg !1324

cleanup:                                          ; preds = %bb5
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb4

bb1:                                              ; preds = %bb5
  ret void, !dbg !1325

bb2:                                              ; preds = %bb3, %bb4
  %16 = bitcast { i8*, i32 }* %1 to i8**, !dbg !1326
  %17 = load i8*, i8** %16, align 8, !dbg !1326
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !1326
  %19 = load i32, i32* %18, align 8, !dbg !1326
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !1326
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !1326
  resume { i8*, i32 } %21, !dbg !1326

bb3:                                              ; preds = %bb4
; invoke core::ptr::drop_in_place<proc_macro::bridge::BridgeConfig>
  invoke void @"_ZN4core3ptr53drop_in_place$LT$proc_macro..bridge..BridgeConfig$GT$17hddb41ec64c3227ecE"(%"proc_macro::bridge::BridgeConfig"* %bridge) #19
          to label %bb2 unwind label %abort, !dbg !1324

abort:                                            ; preds = %bb3
  %22 = landingpad { i8*, i32 }
          cleanup, !dbg !1326
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !1326
  unreachable, !dbg !1326
}

; proc_macro::bridge::buffer::Buffer::extend_from_array
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN10proc_macro6bridge6buffer6Buffer17extend_from_array17h2a6c1ed1be41c0e6E(%"proc_macro::bridge::buffer::Buffer"* align 8 %self, [4 x i8]* align 1 %xs) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1327 {
start:
  %count.dbg.spill14 = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %src.dbg.spill = alloca i8*, align 8
  %count.dbg.spill13 = alloca i64, align 8
  %dest.dbg.spill12 = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill11 = alloca i64, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill9 = alloca i8*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %dest.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %self.dbg.spill1 = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %xs.dbg.spill = alloca [4 x i8]*, align 8
  %self.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]", align 8
  %_36 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_34 = alloca %"alloc::vec::Vec<u8>", align 8
  %_33 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  %_14 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  %_12 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  %b = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  store %"proc_macro::bridge::buffer::Buffer"* %self, %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill, metadata !1336, metadata !DIExpression()), !dbg !1340
  store [4 x i8]* %xs, [4 x i8]** %xs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [4 x i8]** %xs.dbg.spill, metadata !1337, metadata !DIExpression()), !dbg !1341
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"* %b, metadata !1338, metadata !DIExpression()), !dbg !1342
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]"* %runtime, metadata !1343, metadata !DIExpression()), !dbg !1362
  %_5.0 = bitcast [4 x i8]* %xs to [0 x i8]*, !dbg !1371
  %2 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 2, !dbg !1372
  %_8 = load i64, i64* %2, align 8, !dbg !1372
  %3 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 1, !dbg !1373
  %_9 = load i64, i64* %3, align 8, !dbg !1373
  %_7 = sub i64 %_8, %_9, !dbg !1374
  %_3 = icmp ugt i64 4, %_7, !dbg !1371
  br i1 %_3, label %bb1, label %bb3, !dbg !1371

bb3:                                              ; preds = %bb6, %start
  %self.04 = bitcast [4 x i8]* %xs to [0 x i8]*, !dbg !1370
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !1370
  store [0 x i8]* %self.04, [0 x i8]** %4, align 8, !dbg !1370
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !1370
  store i64 4, i64* %5, align 8, !dbg !1370
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill5, metadata !1375, metadata !DIExpression()), !dbg !1383
  %self6 = bitcast [0 x i8]* %self.04 to i8*, !dbg !1383
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !1383
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !1366, metadata !DIExpression()), !dbg !1384
  %6 = bitcast %"proc_macro::bridge::buffer::Buffer"* %self to i8**, !dbg !1385
  %self8 = load i8*, i8** %6, align 8, !dbg !1385
  store i8* %self8, i8** %self.dbg.spill9, align 8, !dbg !1385
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill9, metadata !1386, metadata !DIExpression()), !dbg !1391
  %7 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 1, !dbg !1392
  %count = load i64, i64* %7, align 8, !dbg !1392
  store i64 %count, i64* %count.dbg.spill, align 8, !dbg !1392
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !1390, metadata !DIExpression()), !dbg !1391
  store i8* %self8, i8** %self.dbg.spill10, align 8, !dbg !1391
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !1393, metadata !DIExpression()), !dbg !1398
  store i64 %count, i64* %count.dbg.spill11, align 8, !dbg !1391
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill11, metadata !1397, metadata !DIExpression()), !dbg !1398
  %8 = getelementptr inbounds i8, i8* %self8, i64 %count, !dbg !1398
  store i8* %8, i8** %0, align 8, !dbg !1398
  %_42 = load i8*, i8** %0, align 8, !dbg !1398
  br label %bb11, !dbg !1398

bb1:                                              ; preds = %start
  store %"proc_macro::bridge::buffer::Buffer"* %self, %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill1, align 8, !dbg !1400
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill1, metadata !1401, metadata !DIExpression()), !dbg !1406
  store %"proc_macro::bridge::buffer::Buffer"* %self, %"proc_macro::bridge::buffer::Buffer"** %dest.dbg.spill, align 8, !dbg !1406
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %dest.dbg.spill, metadata !1407, metadata !DIExpression()), !dbg !1413
  %_35.0 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 0), align 8, !dbg !1415, !nonnull !27, !noundef !27
  %_35.1 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 1), align 8, !dbg !1415
  %9 = bitcast %"alloc::vec::Vec<u8>"* %_34 to { i8*, i64 }*, !dbg !1415
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %9, i32 0, i32 0, !dbg !1415
  store i8* %_35.0, i8** %10, align 8, !dbg !1415
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %9, i32 0, i32 1, !dbg !1415
  store i64 %_35.1, i64* %11, align 8, !dbg !1415
  %12 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %_34, i32 0, i32 1, !dbg !1415
  store i64 0, i64* %12, align 8, !dbg !1415
; call <proc_macro::bridge::buffer::Buffer as core::convert::From<alloc::vec::Vec<u8>>>::from
  call void @"_ZN107_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$core..convert..From$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$4from17hae087b0765d8b4d8E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %_33, %"alloc::vec::Vec<u8>"* %_34), !dbg !1428
  br label %bb10, !dbg !1428

bb10:                                             ; preds = %bb1
; call core::mem::replace
  call void @_ZN4core3mem7replace17haedb1d51e20a5159E(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %b, %"proc_macro::bridge::buffer::Buffer"* align 8 %self, %"proc_macro::bridge::buffer::Buffer"* %_33), !dbg !1413
  br label %bb9, !dbg !1413

bb9:                                              ; preds = %bb10
  %13 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %b, i32 0, i32 3, !dbg !1429
  %_13 = load void (%"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"*, i64)*, void (%"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"*, i64)** %13, align 8, !dbg !1429, !nonnull !27, !noundef !27
  %14 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_14 to i8*, !dbg !1430
  %15 = bitcast %"proc_macro::bridge::buffer::Buffer"* %b to i8*, !dbg !1430
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 40, i1 false), !dbg !1430
  %self.0 = bitcast [4 x i8]* %xs to [0 x i8]*, !dbg !1431
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !1431
  store [0 x i8]* %self.0, [0 x i8]** %16, align 8, !dbg !1431
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !1431
  store i64 4, i64* %17, align 8, !dbg !1431
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !1432, metadata !DIExpression()), !dbg !1438
  %18 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_36 to { [0 x i8]*, i64 }*, !dbg !1438
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %18, i32 0, i32 0, !dbg !1438
  store [0 x i8]* %self.0, [0 x i8]** %19, align 8, !dbg !1438
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %18, i32 0, i32 1, !dbg !1438
  store i64 4, i64* %20, align 8, !dbg !1438
  %21 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_36 to { i8*, i64 }*, !dbg !1438
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %21, i32 0, i32 1, !dbg !1438
  %_15 = load i64, i64* %22, align 8, !dbg !1438
  invoke void %_13(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %_12, %"proc_macro::bridge::buffer::Buffer"* byval(%"proc_macro::bridge::buffer::Buffer") %_14, i64 %_15)
          to label %bb2 unwind label %cleanup, !dbg !1429

bb8:                                              ; preds = %cleanup
  br i1 false, label %bb7, label %bb4, !dbg !1439

cleanup:                                          ; preds = %bb9
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  %25 = extractvalue { i8*, i32 } %23, 1
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %25, i32* %27, align 8
  br label %bb8

bb2:                                              ; preds = %bb9
; invoke core::ptr::drop_in_place<proc_macro::bridge::buffer::Buffer>
  invoke void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..bridge..buffer..Buffer$GT$17ha3af9902afa5dfbfE"(%"proc_macro::bridge::buffer::Buffer"* %self)
          to label %bb6 unwind label %cleanup3, !dbg !1440

bb4:                                              ; preds = %bb5, %bb7, %bb8
  %28 = bitcast { i8*, i32 }* %1 to i8**, !dbg !1441
  %29 = load i8*, i8** %28, align 8, !dbg !1441
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !1441
  %31 = load i32, i32* %30, align 8, !dbg !1441
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0, !dbg !1441
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1, !dbg !1441
  resume { i8*, i32 } %33, !dbg !1441

bb7:                                              ; preds = %bb8
; invoke core::ptr::drop_in_place<proc_macro::bridge::buffer::Buffer>
  invoke void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..bridge..buffer..Buffer$GT$17ha3af9902afa5dfbfE"(%"proc_macro::bridge::buffer::Buffer"* %_14) #19
          to label %bb4 unwind label %abort, !dbg !1439

abort:                                            ; preds = %bb7
  %34 = landingpad { i8*, i32 }
          cleanup, !dbg !1441
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !1441
  unreachable, !dbg !1441

bb5:                                              ; preds = %cleanup3
  %35 = bitcast %"proc_macro::bridge::buffer::Buffer"* %self to i8*, !dbg !1440
  %36 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_12 to i8*, !dbg !1440
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 40, i1 false), !dbg !1440
  br label %bb4, !dbg !1440

cleanup3:                                         ; preds = %bb2
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  %39 = extractvalue { i8*, i32 } %37, 1
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %39, i32* %41, align 8
  br label %bb5

bb6:                                              ; preds = %bb2
  %42 = bitcast %"proc_macro::bridge::buffer::Buffer"* %self to i8*, !dbg !1440
  %43 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_12 to i8*, !dbg !1440
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 40, i1 false), !dbg !1440
  br label %bb3, !dbg !1442

bb11:                                             ; preds = %bb3
  store i8* %_42, i8** %dest.dbg.spill12, align 8, !dbg !1398
  call void @llvm.dbg.declare(metadata i8** %dest.dbg.spill12, metadata !1368, metadata !DIExpression()), !dbg !1384
  %_25.0 = bitcast [4 x i8]* %xs to [0 x i8]*, !dbg !1443
  store i64 4, i64* %count.dbg.spill13, align 8, !dbg !1443
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill13, metadata !1369, metadata !DIExpression()), !dbg !1384
  store i8* %self6, i8** %src.dbg.spill, align 8, !dbg !1384
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill, metadata !1351, metadata !DIExpression()), !dbg !1444
  store i8* %_42, i8** %dst.dbg.spill, align 8, !dbg !1384
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !1353, metadata !DIExpression()), !dbg !1444
  store i64 4, i64* %count.dbg.spill14, align 8, !dbg !1384
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill14, metadata !1354, metadata !DIExpression()), !dbg !1444
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %_42, i8* align 1 %self6, i64 4, i1 false), !dbg !1444
  %_28.0 = bitcast [4 x i8]* %xs to [0 x i8]*, !dbg !1445
  %44 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 1, !dbg !1446
  %45 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 1, !dbg !1446
  %46 = load i64, i64* %45, align 8, !dbg !1446
  %47 = add i64 %46, 4, !dbg !1446
  store i64 %47, i64* %44, align 8, !dbg !1446
  ret void, !dbg !1447
}

; proc_macro::bridge::buffer::Buffer::extend_from_array
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN10proc_macro6bridge6buffer6Buffer17extend_from_array17h52eeff7a999f4e59E(%"proc_macro::bridge::buffer::Buffer"* align 8 %self, [8 x i8]* align 1 %xs) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1448 {
start:
  %count.dbg.spill14 = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %src.dbg.spill = alloca i8*, align 8
  %count.dbg.spill13 = alloca i64, align 8
  %dest.dbg.spill12 = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill11 = alloca i64, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill9 = alloca i8*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %dest.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %self.dbg.spill1 = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %xs.dbg.spill = alloca [8 x i8]*, align 8
  %self.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]", align 8
  %_36 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_34 = alloca %"alloc::vec::Vec<u8>", align 8
  %_33 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  %_14 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  %_12 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  %b = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  store %"proc_macro::bridge::buffer::Buffer"* %self, %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill, metadata !1456, metadata !DIExpression()), !dbg !1460
  store [8 x i8]* %xs, [8 x i8]** %xs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [8 x i8]** %xs.dbg.spill, metadata !1457, metadata !DIExpression()), !dbg !1461
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"* %b, metadata !1458, metadata !DIExpression()), !dbg !1462
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]"* %runtime, metadata !1463, metadata !DIExpression()), !dbg !1472
  %_5.0 = bitcast [8 x i8]* %xs to [0 x i8]*, !dbg !1481
  %2 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 2, !dbg !1482
  %_8 = load i64, i64* %2, align 8, !dbg !1482
  %3 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 1, !dbg !1483
  %_9 = load i64, i64* %3, align 8, !dbg !1483
  %_7 = sub i64 %_8, %_9, !dbg !1484
  %_3 = icmp ugt i64 8, %_7, !dbg !1481
  br i1 %_3, label %bb1, label %bb3, !dbg !1481

bb3:                                              ; preds = %bb6, %start
  %self.04 = bitcast [8 x i8]* %xs to [0 x i8]*, !dbg !1480
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !1480
  store [0 x i8]* %self.04, [0 x i8]** %4, align 8, !dbg !1480
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !1480
  store i64 8, i64* %5, align 8, !dbg !1480
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill5, metadata !1485, metadata !DIExpression()), !dbg !1489
  %self6 = bitcast [0 x i8]* %self.04 to i8*, !dbg !1489
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !1489
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !1476, metadata !DIExpression()), !dbg !1490
  %6 = bitcast %"proc_macro::bridge::buffer::Buffer"* %self to i8**, !dbg !1491
  %self8 = load i8*, i8** %6, align 8, !dbg !1491
  store i8* %self8, i8** %self.dbg.spill9, align 8, !dbg !1491
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill9, metadata !1492, metadata !DIExpression()), !dbg !1497
  %7 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 1, !dbg !1498
  %count = load i64, i64* %7, align 8, !dbg !1498
  store i64 %count, i64* %count.dbg.spill, align 8, !dbg !1498
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !1496, metadata !DIExpression()), !dbg !1497
  store i8* %self8, i8** %self.dbg.spill10, align 8, !dbg !1497
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !1499, metadata !DIExpression()), !dbg !1504
  store i64 %count, i64* %count.dbg.spill11, align 8, !dbg !1497
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill11, metadata !1503, metadata !DIExpression()), !dbg !1504
  %8 = getelementptr inbounds i8, i8* %self8, i64 %count, !dbg !1504
  store i8* %8, i8** %0, align 8, !dbg !1504
  %_42 = load i8*, i8** %0, align 8, !dbg !1504
  br label %bb11, !dbg !1504

bb1:                                              ; preds = %start
  store %"proc_macro::bridge::buffer::Buffer"* %self, %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill1, align 8, !dbg !1506
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill1, metadata !1507, metadata !DIExpression()), !dbg !1510
  store %"proc_macro::bridge::buffer::Buffer"* %self, %"proc_macro::bridge::buffer::Buffer"** %dest.dbg.spill, align 8, !dbg !1510
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %dest.dbg.spill, metadata !1511, metadata !DIExpression()), !dbg !1515
  %_35.0 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 0), align 8, !dbg !1517, !nonnull !27, !noundef !27
  %_35.1 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 1), align 8, !dbg !1517
  %9 = bitcast %"alloc::vec::Vec<u8>"* %_34 to { i8*, i64 }*, !dbg !1517
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %9, i32 0, i32 0, !dbg !1517
  store i8* %_35.0, i8** %10, align 8, !dbg !1517
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %9, i32 0, i32 1, !dbg !1517
  store i64 %_35.1, i64* %11, align 8, !dbg !1517
  %12 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %_34, i32 0, i32 1, !dbg !1517
  store i64 0, i64* %12, align 8, !dbg !1517
; call <proc_macro::bridge::buffer::Buffer as core::convert::From<alloc::vec::Vec<u8>>>::from
  call void @"_ZN107_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$core..convert..From$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$4from17hae087b0765d8b4d8E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %_33, %"alloc::vec::Vec<u8>"* %_34), !dbg !1524
  br label %bb10, !dbg !1524

bb10:                                             ; preds = %bb1
; call core::mem::replace
  call void @_ZN4core3mem7replace17haedb1d51e20a5159E(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %b, %"proc_macro::bridge::buffer::Buffer"* align 8 %self, %"proc_macro::bridge::buffer::Buffer"* %_33), !dbg !1515
  br label %bb9, !dbg !1515

bb9:                                              ; preds = %bb10
  %13 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %b, i32 0, i32 3, !dbg !1525
  %_13 = load void (%"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"*, i64)*, void (%"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"*, i64)** %13, align 8, !dbg !1525, !nonnull !27, !noundef !27
  %14 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_14 to i8*, !dbg !1526
  %15 = bitcast %"proc_macro::bridge::buffer::Buffer"* %b to i8*, !dbg !1526
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 40, i1 false), !dbg !1526
  %self.0 = bitcast [8 x i8]* %xs to [0 x i8]*, !dbg !1527
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !1527
  store [0 x i8]* %self.0, [0 x i8]** %16, align 8, !dbg !1527
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !1527
  store i64 8, i64* %17, align 8, !dbg !1527
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !1528, metadata !DIExpression()), !dbg !1532
  %18 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_36 to { [0 x i8]*, i64 }*, !dbg !1532
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %18, i32 0, i32 0, !dbg !1532
  store [0 x i8]* %self.0, [0 x i8]** %19, align 8, !dbg !1532
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %18, i32 0, i32 1, !dbg !1532
  store i64 8, i64* %20, align 8, !dbg !1532
  %21 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_36 to { i8*, i64 }*, !dbg !1532
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %21, i32 0, i32 1, !dbg !1532
  %_15 = load i64, i64* %22, align 8, !dbg !1532
  invoke void %_13(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %_12, %"proc_macro::bridge::buffer::Buffer"* byval(%"proc_macro::bridge::buffer::Buffer") %_14, i64 %_15)
          to label %bb2 unwind label %cleanup, !dbg !1525

bb8:                                              ; preds = %cleanup
  br i1 false, label %bb7, label %bb4, !dbg !1533

cleanup:                                          ; preds = %bb9
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  %25 = extractvalue { i8*, i32 } %23, 1
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %25, i32* %27, align 8
  br label %bb8

bb2:                                              ; preds = %bb9
; invoke core::ptr::drop_in_place<proc_macro::bridge::buffer::Buffer>
  invoke void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..bridge..buffer..Buffer$GT$17ha3af9902afa5dfbfE"(%"proc_macro::bridge::buffer::Buffer"* %self)
          to label %bb6 unwind label %cleanup3, !dbg !1534

bb4:                                              ; preds = %bb5, %bb7, %bb8
  %28 = bitcast { i8*, i32 }* %1 to i8**, !dbg !1535
  %29 = load i8*, i8** %28, align 8, !dbg !1535
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !1535
  %31 = load i32, i32* %30, align 8, !dbg !1535
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0, !dbg !1535
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1, !dbg !1535
  resume { i8*, i32 } %33, !dbg !1535

bb7:                                              ; preds = %bb8
; invoke core::ptr::drop_in_place<proc_macro::bridge::buffer::Buffer>
  invoke void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..bridge..buffer..Buffer$GT$17ha3af9902afa5dfbfE"(%"proc_macro::bridge::buffer::Buffer"* %_14) #19
          to label %bb4 unwind label %abort, !dbg !1533

abort:                                            ; preds = %bb7
  %34 = landingpad { i8*, i32 }
          cleanup, !dbg !1535
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !1535
  unreachable, !dbg !1535

bb5:                                              ; preds = %cleanup3
  %35 = bitcast %"proc_macro::bridge::buffer::Buffer"* %self to i8*, !dbg !1534
  %36 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_12 to i8*, !dbg !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 40, i1 false), !dbg !1534
  br label %bb4, !dbg !1534

cleanup3:                                         ; preds = %bb2
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  %39 = extractvalue { i8*, i32 } %37, 1
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %39, i32* %41, align 8
  br label %bb5

bb6:                                              ; preds = %bb2
  %42 = bitcast %"proc_macro::bridge::buffer::Buffer"* %self to i8*, !dbg !1534
  %43 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_12 to i8*, !dbg !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 40, i1 false), !dbg !1534
  br label %bb3, !dbg !1536

bb11:                                             ; preds = %bb3
  store i8* %_42, i8** %dest.dbg.spill12, align 8, !dbg !1504
  call void @llvm.dbg.declare(metadata i8** %dest.dbg.spill12, metadata !1478, metadata !DIExpression()), !dbg !1490
  %_25.0 = bitcast [8 x i8]* %xs to [0 x i8]*, !dbg !1537
  store i64 8, i64* %count.dbg.spill13, align 8, !dbg !1537
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill13, metadata !1479, metadata !DIExpression()), !dbg !1490
  store i8* %self6, i8** %src.dbg.spill, align 8, !dbg !1490
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill, metadata !1468, metadata !DIExpression()), !dbg !1538
  store i8* %_42, i8** %dst.dbg.spill, align 8, !dbg !1490
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !1470, metadata !DIExpression()), !dbg !1538
  store i64 8, i64* %count.dbg.spill14, align 8, !dbg !1490
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill14, metadata !1471, metadata !DIExpression()), !dbg !1538
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %_42, i8* align 1 %self6, i64 8, i1 false), !dbg !1538
  %_28.0 = bitcast [8 x i8]* %xs to [0 x i8]*, !dbg !1539
  %44 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 1, !dbg !1540
  %45 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 1, !dbg !1540
  %46 = load i64, i64* %45, align 8, !dbg !1540
  %47 = add i64 %46, 8, !dbg !1540
  store i64 %47, i64* %44, align 8, !dbg !1540
  ret void, !dbg !1541
}

; proc_macro::bridge::buffer::Buffer::extend_from_slice
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN10proc_macro6bridge6buffer6Buffer17extend_from_slice17hfbb611c0c268f353E(%"proc_macro::bridge::buffer::Buffer"* align 8 %self, [0 x i8]* align 1 %xs.0, i64 %xs.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1542 {
start:
  %count.dbg.spill13 = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %src.dbg.spill = alloca i8*, align 8
  %count.dbg.spill12 = alloca i64, align 8
  %dest.dbg.spill11 = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill10 = alloca i64, align 8
  %self.dbg.spill9 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %dest.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %self.dbg.spill1 = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %xs.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]", align 8
  %_31 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_29 = alloca %"alloc::vec::Vec<u8>", align 8
  %_28 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  %_13 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  %_11 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  %b = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  store %"proc_macro::bridge::buffer::Buffer"* %self, %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill, metadata !1546, metadata !DIExpression()), !dbg !1550
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %xs.dbg.spill, i32 0, i32 0
  store [0 x i8]* %xs.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %xs.dbg.spill, i32 0, i32 1
  store i64 %xs.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %xs.dbg.spill, metadata !1547, metadata !DIExpression()), !dbg !1551
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"* %b, metadata !1548, metadata !DIExpression()), !dbg !1552
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]"* %runtime, metadata !1553, metadata !DIExpression()), !dbg !1562
  %4 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 2, !dbg !1571
  %_7 = load i64, i64* %4, align 8, !dbg !1571
  %5 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 1, !dbg !1572
  %_8 = load i64, i64* %5, align 8, !dbg !1572
  %_6 = sub i64 %_7, %_8, !dbg !1573
  %_3 = icmp ugt i64 %xs.1, %_6, !dbg !1574
  br i1 %_3, label %bb1, label %bb3, !dbg !1574

bb3:                                              ; preds = %bb6, %start
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !1570
  store [0 x i8]* %xs.0, [0 x i8]** %6, align 8, !dbg !1570
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !1570
  store i64 %xs.1, i64* %7, align 8, !dbg !1570
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill4, metadata !1575, metadata !DIExpression()), !dbg !1579
  %self5 = bitcast [0 x i8]* %xs.0 to i8*, !dbg !1579
  store i8* %self5, i8** %self.dbg.spill6, align 8, !dbg !1579
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !1566, metadata !DIExpression()), !dbg !1580
  %8 = bitcast %"proc_macro::bridge::buffer::Buffer"* %self to i8**, !dbg !1581
  %self7 = load i8*, i8** %8, align 8, !dbg !1581
  store i8* %self7, i8** %self.dbg.spill8, align 8, !dbg !1581
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !1582, metadata !DIExpression()), !dbg !1587
  %9 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 1, !dbg !1588
  %count = load i64, i64* %9, align 8, !dbg !1588
  store i64 %count, i64* %count.dbg.spill, align 8, !dbg !1588
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !1586, metadata !DIExpression()), !dbg !1587
  store i8* %self7, i8** %self.dbg.spill9, align 8, !dbg !1587
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill9, metadata !1589, metadata !DIExpression()), !dbg !1594
  store i64 %count, i64* %count.dbg.spill10, align 8, !dbg !1587
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill10, metadata !1593, metadata !DIExpression()), !dbg !1594
  %10 = getelementptr inbounds i8, i8* %self7, i64 %count, !dbg !1594
  store i8* %10, i8** %0, align 8, !dbg !1594
  %_37 = load i8*, i8** %0, align 8, !dbg !1594
  br label %bb11, !dbg !1594

bb1:                                              ; preds = %start
  store %"proc_macro::bridge::buffer::Buffer"* %self, %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill1, align 8, !dbg !1596
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill1, metadata !1597, metadata !DIExpression()), !dbg !1600
  store %"proc_macro::bridge::buffer::Buffer"* %self, %"proc_macro::bridge::buffer::Buffer"** %dest.dbg.spill, align 8, !dbg !1600
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %dest.dbg.spill, metadata !1601, metadata !DIExpression()), !dbg !1605
  %_30.0 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 0), align 8, !dbg !1607, !nonnull !27, !noundef !27
  %_30.1 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 1), align 8, !dbg !1607
  %11 = bitcast %"alloc::vec::Vec<u8>"* %_29 to { i8*, i64 }*, !dbg !1607
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %11, i32 0, i32 0, !dbg !1607
  store i8* %_30.0, i8** %12, align 8, !dbg !1607
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %11, i32 0, i32 1, !dbg !1607
  store i64 %_30.1, i64* %13, align 8, !dbg !1607
  %14 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %_29, i32 0, i32 1, !dbg !1607
  store i64 0, i64* %14, align 8, !dbg !1607
; call <proc_macro::bridge::buffer::Buffer as core::convert::From<alloc::vec::Vec<u8>>>::from
  call void @"_ZN107_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$core..convert..From$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$4from17hae087b0765d8b4d8E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %_28, %"alloc::vec::Vec<u8>"* %_29), !dbg !1614
  br label %bb10, !dbg !1614

bb10:                                             ; preds = %bb1
; call core::mem::replace
  call void @_ZN4core3mem7replace17haedb1d51e20a5159E(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %b, %"proc_macro::bridge::buffer::Buffer"* align 8 %self, %"proc_macro::bridge::buffer::Buffer"* %_28), !dbg !1605
  br label %bb9, !dbg !1605

bb9:                                              ; preds = %bb10
  %15 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %b, i32 0, i32 3, !dbg !1615
  %_12 = load void (%"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"*, i64)*, void (%"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"*, i64)** %15, align 8, !dbg !1615, !nonnull !27, !noundef !27
  %16 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_13 to i8*, !dbg !1616
  %17 = bitcast %"proc_macro::bridge::buffer::Buffer"* %b to i8*, !dbg !1616
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 40, i1 false), !dbg !1616
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !1617
  store [0 x i8]* %xs.0, [0 x i8]** %18, align 8, !dbg !1617
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !1617
  store i64 %xs.1, i64* %19, align 8, !dbg !1617
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !1618, metadata !DIExpression()), !dbg !1622
  %20 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_31 to { [0 x i8]*, i64 }*, !dbg !1622
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0, !dbg !1622
  store [0 x i8]* %xs.0, [0 x i8]** %21, align 8, !dbg !1622
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1, !dbg !1622
  store i64 %xs.1, i64* %22, align 8, !dbg !1622
  %23 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_31 to { i8*, i64 }*, !dbg !1622
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %23, i32 0, i32 1, !dbg !1622
  %_14 = load i64, i64* %24, align 8, !dbg !1622
  invoke void %_12(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %_11, %"proc_macro::bridge::buffer::Buffer"* byval(%"proc_macro::bridge::buffer::Buffer") %_13, i64 %_14)
          to label %bb2 unwind label %cleanup, !dbg !1615

bb8:                                              ; preds = %cleanup
  br i1 false, label %bb7, label %bb4, !dbg !1623

cleanup:                                          ; preds = %bb9
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb8

bb2:                                              ; preds = %bb9
; invoke core::ptr::drop_in_place<proc_macro::bridge::buffer::Buffer>
  invoke void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..bridge..buffer..Buffer$GT$17ha3af9902afa5dfbfE"(%"proc_macro::bridge::buffer::Buffer"* %self)
          to label %bb6 unwind label %cleanup3, !dbg !1624

bb4:                                              ; preds = %bb5, %bb7, %bb8
  %30 = bitcast { i8*, i32 }* %1 to i8**, !dbg !1625
  %31 = load i8*, i8** %30, align 8, !dbg !1625
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !1625
  %33 = load i32, i32* %32, align 8, !dbg !1625
  %34 = insertvalue { i8*, i32 } undef, i8* %31, 0, !dbg !1625
  %35 = insertvalue { i8*, i32 } %34, i32 %33, 1, !dbg !1625
  resume { i8*, i32 } %35, !dbg !1625

bb7:                                              ; preds = %bb8
; invoke core::ptr::drop_in_place<proc_macro::bridge::buffer::Buffer>
  invoke void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..bridge..buffer..Buffer$GT$17ha3af9902afa5dfbfE"(%"proc_macro::bridge::buffer::Buffer"* %_13) #19
          to label %bb4 unwind label %abort, !dbg !1623

abort:                                            ; preds = %bb7
  %36 = landingpad { i8*, i32 }
          cleanup, !dbg !1625
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !1625
  unreachable, !dbg !1625

bb5:                                              ; preds = %cleanup3
  %37 = bitcast %"proc_macro::bridge::buffer::Buffer"* %self to i8*, !dbg !1624
  %38 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_11 to i8*, !dbg !1624
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 40, i1 false), !dbg !1624
  br label %bb4, !dbg !1624

cleanup3:                                         ; preds = %bb2
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  %41 = extractvalue { i8*, i32 } %39, 1
  %42 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %41, i32* %43, align 8
  br label %bb5

bb6:                                              ; preds = %bb2
  %44 = bitcast %"proc_macro::bridge::buffer::Buffer"* %self to i8*, !dbg !1624
  %45 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_11 to i8*, !dbg !1624
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 40, i1 false), !dbg !1624
  br label %bb3, !dbg !1626

bb11:                                             ; preds = %bb3
  store i8* %_37, i8** %dest.dbg.spill11, align 8, !dbg !1594
  call void @llvm.dbg.declare(metadata i8** %dest.dbg.spill11, metadata !1568, metadata !DIExpression()), !dbg !1580
  store i64 %xs.1, i64* %count.dbg.spill12, align 8, !dbg !1627
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill12, metadata !1569, metadata !DIExpression()), !dbg !1580
  store i8* %self5, i8** %src.dbg.spill, align 8, !dbg !1580
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill, metadata !1558, metadata !DIExpression()), !dbg !1628
  store i8* %_37, i8** %dst.dbg.spill, align 8, !dbg !1580
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !1560, metadata !DIExpression()), !dbg !1628
  store i64 %xs.1, i64* %count.dbg.spill13, align 8, !dbg !1580
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill13, metadata !1561, metadata !DIExpression()), !dbg !1628
  %46 = mul i64 %xs.1, 1, !dbg !1628
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %_37, i8* align 1 %self5, i64 %46, i1 false), !dbg !1628
  %47 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 1, !dbg !1629
  %48 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 1, !dbg !1629
  %49 = load i64, i64* %48, align 8, !dbg !1629
  %50 = add i64 %49, %xs.1, !dbg !1629
  store i64 %50, i64* %47, align 8, !dbg !1629
  ret void, !dbg !1630
}

; proc_macro::bridge::buffer::Buffer::push
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN10proc_macro6bridge6buffer6Buffer4push17h641e142eab244a8dE(%"proc_macro::bridge::buffer::Buffer"* align 8 %self, i8 %v) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1631 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %dest.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %self.dbg.spill1 = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %v.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %_18 = alloca %"alloc::vec::Vec<u8>", align 8
  %_17 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  %_10 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  %_8 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  %b = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  store %"proc_macro::bridge::buffer::Buffer"* %self, %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill, metadata !1635, metadata !DIExpression()), !dbg !1639
  store i8 %v, i8* %v.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %v.dbg.spill, metadata !1636, metadata !DIExpression()), !dbg !1640
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"* %b, metadata !1637, metadata !DIExpression()), !dbg !1641
  %2 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 1, !dbg !1642
  %_4 = load i64, i64* %2, align 8, !dbg !1642
  %3 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 2, !dbg !1643
  %_5 = load i64, i64* %3, align 8, !dbg !1643
  %_3 = icmp eq i64 %_4, %_5, !dbg !1642
  br i1 %_3, label %bb1, label %bb3, !dbg !1642

bb3:                                              ; preds = %bb5, %start
  %4 = bitcast %"proc_macro::bridge::buffer::Buffer"* %self to i8**, !dbg !1644
  %self2 = load i8*, i8** %4, align 8, !dbg !1644
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !1644
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !1645, metadata !DIExpression()), !dbg !1650
  %5 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 1, !dbg !1651
  %count = load i64, i64* %5, align 8, !dbg !1651
  store i64 %count, i64* %count.dbg.spill, align 8, !dbg !1651
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !1649, metadata !DIExpression()), !dbg !1650
  store i8* %self2, i8** %self.dbg.spill4, align 8, !dbg !1650
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !1652, metadata !DIExpression()), !dbg !1657
  store i64 %count, i64* %count.dbg.spill5, align 8, !dbg !1650
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !1656, metadata !DIExpression()), !dbg !1657
  %6 = getelementptr inbounds i8, i8* %self2, i64 %count, !dbg !1657
  store i8* %6, i8** %0, align 8, !dbg !1657
  %_23 = load i8*, i8** %0, align 8, !dbg !1657
  br label %bb8, !dbg !1657

bb1:                                              ; preds = %start
  store %"proc_macro::bridge::buffer::Buffer"* %self, %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill1, align 8, !dbg !1659
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill1, metadata !1660, metadata !DIExpression()), !dbg !1663
  store %"proc_macro::bridge::buffer::Buffer"* %self, %"proc_macro::bridge::buffer::Buffer"** %dest.dbg.spill, align 8, !dbg !1663
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %dest.dbg.spill, metadata !1664, metadata !DIExpression()), !dbg !1668
  %_19.0 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 0), align 8, !dbg !1670, !nonnull !27, !noundef !27
  %_19.1 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 1), align 8, !dbg !1670
  %7 = bitcast %"alloc::vec::Vec<u8>"* %_18 to { i8*, i64 }*, !dbg !1670
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %7, i32 0, i32 0, !dbg !1670
  store i8* %_19.0, i8** %8, align 8, !dbg !1670
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %7, i32 0, i32 1, !dbg !1670
  store i64 %_19.1, i64* %9, align 8, !dbg !1670
  %10 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %_18, i32 0, i32 1, !dbg !1670
  store i64 0, i64* %10, align 8, !dbg !1670
; call <proc_macro::bridge::buffer::Buffer as core::convert::From<alloc::vec::Vec<u8>>>::from
  call void @"_ZN107_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$core..convert..From$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$4from17hae087b0765d8b4d8E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %_17, %"alloc::vec::Vec<u8>"* %_18), !dbg !1677
  br label %bb7, !dbg !1677

bb7:                                              ; preds = %bb1
; call core::mem::replace
  call void @_ZN4core3mem7replace17haedb1d51e20a5159E(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %b, %"proc_macro::bridge::buffer::Buffer"* align 8 %self, %"proc_macro::bridge::buffer::Buffer"* %_17), !dbg !1668
  br label %bb6, !dbg !1668

bb6:                                              ; preds = %bb7
  %11 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %b, i32 0, i32 3, !dbg !1678
  %_9 = load void (%"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"*, i64)*, void (%"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"*, i64)** %11, align 8, !dbg !1678, !nonnull !27, !noundef !27
  %12 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_10 to i8*, !dbg !1679
  %13 = bitcast %"proc_macro::bridge::buffer::Buffer"* %b to i8*, !dbg !1679
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 40, i1 false), !dbg !1679
  call void %_9(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %_8, %"proc_macro::bridge::buffer::Buffer"* byval(%"proc_macro::bridge::buffer::Buffer") %_10, i64 1), !dbg !1678
  br label %bb2, !dbg !1678

bb2:                                              ; preds = %bb6
; invoke core::ptr::drop_in_place<proc_macro::bridge::buffer::Buffer>
  invoke void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..bridge..buffer..Buffer$GT$17ha3af9902afa5dfbfE"(%"proc_macro::bridge::buffer::Buffer"* %self)
          to label %bb5 unwind label %cleanup, !dbg !1680

bb4:                                              ; preds = %cleanup
  %14 = bitcast %"proc_macro::bridge::buffer::Buffer"* %self to i8*, !dbg !1680
  %15 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_8 to i8*, !dbg !1680
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 40, i1 false), !dbg !1680
  %16 = bitcast { i8*, i32 }* %1 to i8**, !dbg !1681
  %17 = load i8*, i8** %16, align 8, !dbg !1681
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !1681
  %19 = load i32, i32* %18, align 8, !dbg !1681
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !1681
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !1681
  resume { i8*, i32 } %21, !dbg !1681

cleanup:                                          ; preds = %bb2
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb4

bb5:                                              ; preds = %bb2
  %27 = bitcast %"proc_macro::bridge::buffer::Buffer"* %self to i8*, !dbg !1680
  %28 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_8 to i8*, !dbg !1680
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 40, i1 false), !dbg !1680
  br label %bb3, !dbg !1682

bb8:                                              ; preds = %bb3
  store i8 %v, i8* %_23, align 1, !dbg !1683
  %29 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 1, !dbg !1684
  %30 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %self, i32 0, i32 1, !dbg !1684
  %31 = load i64, i64* %30, align 8, !dbg !1684
  %32 = add i64 %31, 1, !dbg !1684
  store i64 %32, i64* %29, align 8, !dbg !1684
  ret void, !dbg !1685
}

; proc_macro::bridge::client::run_client
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10proc_macro6bridge6client10run_client17h655ca071f1606824E(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %buf, %"proc_macro::bridge::BridgeConfig"* %config, i8* align 1 %f) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1686 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %dispatch.dbg.spill = alloca { i64*, i8* }, align 8
  %f.dbg.spill = alloca i8*, align 8
  %_12 = alloca i64*, align 8
  %_9 = alloca %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]", align 8
  %_8 = alloca %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>", align 8
  %_6 = alloca %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>", align 8
  %force_show_panics = alloca i8, align 1
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"* %buf, metadata !1692, metadata !DIExpression()), !dbg !1700
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::BridgeConfig"* %config, metadata !1690, metadata !DIExpression()), !dbg !1701
  store i8* %f, i8** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %f.dbg.spill, metadata !1691, metadata !DIExpression()), !dbg !1702
  call void @llvm.dbg.declare(metadata i8* %force_show_panics, metadata !1695, metadata !DIExpression()), !dbg !1703
  %1 = bitcast %"proc_macro::bridge::BridgeConfig"* %config to %"proc_macro::bridge::buffer::Buffer"*, !dbg !1704
  %2 = bitcast %"proc_macro::bridge::buffer::Buffer"* %buf to i8*, !dbg !1704
  %3 = bitcast %"proc_macro::bridge::buffer::Buffer"* %1 to i8*, !dbg !1704
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 40, i1 false), !dbg !1704
  %4 = getelementptr inbounds %"proc_macro::bridge::BridgeConfig", %"proc_macro::bridge::BridgeConfig"* %config, i32 0, i32 1, !dbg !1705
  %5 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %4, i32 0, i32 0, !dbg !1705
  %dispatch.0 = load i64*, i64** %5, align 8, !dbg !1705, !nonnull !27, !noundef !27
  %6 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %4, i32 0, i32 1, !dbg !1705
  %dispatch.1 = load i8*, i8** %6, align 8, !dbg !1705
  %7 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %dispatch.dbg.spill, i32 0, i32 0, !dbg !1705
  store i64* %dispatch.0, i64** %7, align 8, !dbg !1705
  %8 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %dispatch.dbg.spill, i32 0, i32 1, !dbg !1705
  store i8* %dispatch.1, i8** %8, align 8, !dbg !1705
  call void @llvm.dbg.declare(metadata { i64*, i8* }* %dispatch.dbg.spill, metadata !1694, metadata !DIExpression()), !dbg !1706
  %9 = getelementptr inbounds %"proc_macro::bridge::BridgeConfig", %"proc_macro::bridge::BridgeConfig"* %config, i32 0, i32 2, !dbg !1707
  %10 = load i8, i8* %9, align 8, !dbg !1707, !range !759, !noundef !27
  %11 = trunc i8 %10 to i1, !dbg !1707
  %12 = zext i1 %11 to i8, !dbg !1707
  store i8 %12, i8* %force_show_panics, align 1, !dbg !1707
  %13 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_9 to i8**, !dbg !1708
  store i8* %force_show_panics, i8** %13, align 8, !dbg !1708
  %14 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_9, i32 0, i32 1, !dbg !1708
  store %"proc_macro::bridge::buffer::Buffer"* %buf, %"proc_macro::bridge::buffer::Buffer"** %14, align 8, !dbg !1708
  %15 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_9, i32 0, i32 2, !dbg !1708
  %16 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %15, i32 0, i32 0, !dbg !1708
  store i64* %dispatch.0, i64** %16, align 8, !dbg !1708
  %17 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %15, i32 0, i32 1, !dbg !1708
  store i8* %dispatch.1, i8** %17, align 8, !dbg !1708
  %18 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_9, i32 0, i32 3, !dbg !1708
  store i8* %f, i8** %18, align 8, !dbg !1708
  %19 = bitcast %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %_8 to %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"*, !dbg !1709
  %20 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %19 to i8*, !dbg !1709
  %21 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_9 to i8*, !dbg !1709
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 40, i1 false), !dbg !1709
; invoke std::panic::catch_unwind
  %22 = invoke { i8*, i8* } @_ZN3std5panic12catch_unwind17h4585c9830b5c7ae1E(%"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %_8)
          to label %bb1 unwind label %cleanup, !dbg !1710

bb5:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<proc_macro::bridge::buffer::Buffer>
  invoke void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..bridge..buffer..Buffer$GT$17ha3af9902afa5dfbfE"(%"proc_macro::bridge::buffer::Buffer"* %buf) #19
          to label %bb6 unwind label %abort, !dbg !1711

cleanup:                                          ; preds = %bb3, %bb2, %bb1, %start
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  %25 = extractvalue { i8*, i32 } %23, 1
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %25, i32* %27, align 8
  br label %bb5

bb1:                                              ; preds = %start
  %_7.0 = extractvalue { i8*, i8* } %22, 0, !dbg !1710
  %_7.1 = extractvalue { i8*, i8* } %22, 1, !dbg !1710
; invoke core::result::Result<T,E>::map_err
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha3fa06a25fa3eb8fE"(%"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>"* sret(%"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>") %_6, i8* align 1 %_7.0, i8* %_7.1)
          to label %bb2 unwind label %cleanup, !dbg !1710

bb2:                                              ; preds = %bb1
  %28 = bitcast i64** %_12 to %"proc_macro::bridge::buffer::Buffer"**, !dbg !1712
  store %"proc_macro::bridge::buffer::Buffer"* %buf, %"proc_macro::bridge::buffer::Buffer"** %28, align 8, !dbg !1712
  %29 = load i64*, i64** %_12, align 8, !dbg !1710, !nonnull !27, !align !1193, !noundef !27
; invoke core::result::Result<T,E>::unwrap_or_else
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hb6b1d8dc2e2d1c2bE"(%"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>"* %_6, i64* align 8 %29)
          to label %bb3 unwind label %cleanup, !dbg !1710

bb3:                                              ; preds = %bb2
; invoke proc_macro::bridge::symbol::Symbol::invalidate_all
  invoke void @_ZN10proc_macro6bridge6symbol6Symbol14invalidate_all17ha1707764c36a0d84E()
          to label %bb4 unwind label %cleanup, !dbg !1713

bb4:                                              ; preds = %bb3
  ret void, !dbg !1714

abort:                                            ; preds = %bb5
  %30 = landingpad { i8*, i32 }
          cleanup, !dbg !1715
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !1715
  unreachable, !dbg !1715

bb6:                                              ; preds = %bb5
  %31 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1715
  %32 = load i8*, i8** %31, align 8, !dbg !1715
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1715
  %34 = load i32, i32* %33, align 8, !dbg !1715
  %35 = insertvalue { i8*, i32 } undef, i8* %32, 0, !dbg !1715
  %36 = insertvalue { i8*, i32 } %35, i32 %34, 1, !dbg !1715
  resume { i8*, i32 } %36, !dbg !1715
}

; proc_macro::bridge::client::run_client::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10proc_macro6bridge6client10run_client28_$u7b$$u7b$closure$u7d$$u7d$17h7bb2dd194cb78232E"(i64* align 8 %0, %"proc_macro::bridge::rpc::PanicMessage"* %e) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1716 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %_11 = alloca {}, align 1
  %_6 = alloca %"proc_macro::bridge::rpc::PanicMessage", align 8
  %_5 = alloca %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>", align 8
  %_1 = alloca i64*, align 8
  store i64* %0, i64** %_1, align 8
  %2 = bitcast i64** %_1 to %"proc_macro::bridge::buffer::Buffer"**
  %3 = load %"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"** %2, align 8, !nonnull !27, !align !1193, !noundef !27
  call void @llvm.dbg.declare(metadata i64** %_1, metadata !1724, metadata !DIExpression(DW_OP_deref)), !dbg !1725
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::rpc::PanicMessage"* %e, metadata !1723, metadata !DIExpression()), !dbg !1726
  %4 = bitcast i64** %_1 to %"proc_macro::bridge::buffer::Buffer"**, !dbg !1727
  %_12 = load %"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"** %4, align 8, !dbg !1727, !nonnull !27, !align !1193, !noundef !27
  store %"proc_macro::bridge::buffer::Buffer"* %_12, %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill, align 8, !dbg !1727
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill, metadata !1728, metadata !DIExpression()), !dbg !1734
  %5 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %_12, i32 0, i32 1, !dbg !1734
  store i64 0, i64* %5, align 8, !dbg !1734
  %6 = bitcast %"proc_macro::bridge::rpc::PanicMessage"* %_6 to i8*, !dbg !1735
  %7 = bitcast %"proc_macro::bridge::rpc::PanicMessage"* %e to i8*, !dbg !1735
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 32, i1 false), !dbg !1735
  %8 = bitcast %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>"* %_5 to %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>::Err"*, !dbg !1736
  %9 = bitcast %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>::Err"* %8 to %"proc_macro::bridge::rpc::PanicMessage"*, !dbg !1736
  %10 = bitcast %"proc_macro::bridge::rpc::PanicMessage"* %9 to i8*, !dbg !1736
  %11 = bitcast %"proc_macro::bridge::rpc::PanicMessage"* %_6 to i8*, !dbg !1736
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 32, i1 false), !dbg !1736
  %12 = bitcast i64** %_1 to %"proc_macro::bridge::buffer::Buffer"**, !dbg !1737
  %_13 = load %"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"** %12, align 8, !dbg !1737, !nonnull !27, !align !1193, !noundef !27
; invoke proc_macro::bridge::<impl proc_macro::bridge::rpc::Encode<S> for core::result::Result<T,E>>::encode
  invoke void @"_ZN10proc_macro6bridge104_$LT$impl$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$u20$for$u20$core..result..Result$LT$T$C$E$GT$$GT$6encode17h3118e371acb46529E"(%"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>"* %_5, %"proc_macro::bridge::buffer::Buffer"* align 8 %_13, {}* align 1 %_11)
          to label %bb1 unwind label %cleanup, !dbg !1736

bb4:                                              ; preds = %cleanup
  br i1 false, label %bb3, label %bb2, !dbg !1738

cleanup:                                          ; preds = %start
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb4

bb1:                                              ; preds = %start
  ret void, !dbg !1739

bb2:                                              ; preds = %bb3, %bb4
  %18 = bitcast { i8*, i32 }* %1 to i8**, !dbg !1740
  %19 = load i8*, i8** %18, align 8, !dbg !1740
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !1740
  %21 = load i32, i32* %20, align 8, !dbg !1740
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0, !dbg !1740
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1, !dbg !1740
  resume { i8*, i32 } %23, !dbg !1740

bb3:                                              ; preds = %bb4
; invoke core::ptr::drop_in_place<proc_macro::bridge::rpc::PanicMessage>
  invoke void @"_ZN4core3ptr58drop_in_place$LT$proc_macro..bridge..rpc..PanicMessage$GT$17ha026d0b68f540484E"(%"proc_macro::bridge::rpc::PanicMessage"* %e) #19
          to label %bb2 unwind label %abort, !dbg !1738

abort:                                            ; preds = %bb3
  %24 = landingpad { i8*, i32 }
          cleanup, !dbg !1740
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !1740
  unreachable, !dbg !1740
}

; proc_macro::bridge::client::run_client::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10proc_macro6bridge6client10run_client28_$u7b$$u7b$closure$u7d$$u7d$17hebaacc5d58c41ba4E"(%"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1741 {
start:
  %dest.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %self.dbg.spill6 = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %reader.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %len.dbg.spill3 = alloca i64, align 8
  %data.dbg.spill2 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %_55 = alloca %"alloc::vec::Vec<u8>", align 8
  %_54 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  %_47 = alloca { i8*, i64 }, align 8
  %_46 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_34 = alloca i8, align 1
  %_33 = alloca i8, align 1
  %_26 = alloca %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]", align 8
  %_24 = alloca %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>", align 4
  %_21 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  %_20 = alloca %"proc_macro::bridge::client::Bridge", align 8
  %new_state = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %_18 = alloca {}, align 1
  %_14 = alloca { %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>", i32 }, align 4
  %input = alloca i32, align 4
  %globals = alloca %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>", align 4
  %_6 = alloca { [0 x i8]*, i64 }, align 8
  %1 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_1 to i8**
  %2 = load i8*, i8** %1, align 8, !nonnull !27, !align !608, !noundef !27
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_1, metadata !1752, metadata !DIExpression(DW_OP_deref)), !dbg !1763
  %3 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_1, i32 0, i32 1
  %4 = load %"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"** %3, align 8, !nonnull !27, !align !1193, !noundef !27
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_1, metadata !1753, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_deref)), !dbg !1764
  %5 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_1, i32 0, i32 2
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_1, metadata !1754, metadata !DIExpression(DW_OP_plus_uconst, 16)), !dbg !1765
  %6 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_1, i32 0, i32 3
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_1, metadata !1755, metadata !DIExpression(DW_OP_plus_uconst, 32)), !dbg !1766
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill, metadata !1767, metadata !DIExpression()), !dbg !1777
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>"* %globals, metadata !1758, metadata !DIExpression()), !dbg !1779
  call void @llvm.dbg.declare(metadata i32* %input, metadata !1760, metadata !DIExpression()), !dbg !1780
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %new_state, metadata !1761, metadata !DIExpression()), !dbg !1781
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %self.dbg.spill, metadata !1782, metadata !DIExpression()), !dbg !1790
  store i8 1, i8* %_34, align 1, !dbg !1792
  %7 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_1 to i8**, !dbg !1793
  %_29 = load i8*, i8** %7, align 8, !dbg !1793, !nonnull !27, !align !608, !noundef !27
  %8 = load i8, i8* %_29, align 1, !dbg !1793, !range !759, !noundef !27
  %_3 = trunc i8 %8 to i1, !dbg !1793
; invoke proc_macro::bridge::client::maybe_install_panic_hook
  invoke void @_ZN10proc_macro6bridge6client24maybe_install_panic_hook17hc0c60877daa0e856E(i1 zeroext %_3)
          to label %bb1 unwind label %cleanup, !dbg !1792

bb9:                                              ; preds = %bb6, %bb7, %cleanup
  %9 = load i8, i8* %_34, align 1, !dbg !1794, !range !759, !noundef !27
  %10 = trunc i8 %9 to i1, !dbg !1794
  br i1 %10, label %bb8, label %bb5, !dbg !1794

cleanup:                                          ; preds = %bb2, %bb1, %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb9

bb1:                                              ; preds = %start
; invoke proc_macro::bridge::symbol::Symbol::invalidate_all
  invoke void @_ZN10proc_macro6bridge6symbol6Symbol14invalidate_all17ha1707764c36a0d84E()
          to label %bb2 unwind label %cleanup, !dbg !1795

bb2:                                              ; preds = %bb1
  %16 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_1, i32 0, i32 1, !dbg !1778
  %_30 = load %"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"** %16, align 8, !dbg !1778, !nonnull !27, !align !1193, !noundef !27
  store %"proc_macro::bridge::buffer::Buffer"* %_30, %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill1, align 8, !dbg !1778
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill1, metadata !1796, metadata !DIExpression()), !dbg !1804
  %17 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_30 to i8**, !dbg !1804
  %_36 = load i8*, i8** %17, align 8, !dbg !1804
  store i8* %_36, i8** %data.dbg.spill, align 8, !dbg !1804
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !1805, metadata !DIExpression()), !dbg !1813
  %18 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %_30, i32 0, i32 1, !dbg !1804
  %len = load i64, i64* %18, align 8, !dbg !1804
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !1804
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !1809, metadata !DIExpression()), !dbg !1813
  store i8* %_36, i8** %data.dbg.spill2, align 8, !dbg !1813
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill2, metadata !1815, metadata !DIExpression()), !dbg !1820
  store i64 %len, i64* %len.dbg.spill3, align 8, !dbg !1813
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill3, metadata !1819, metadata !DIExpression()), !dbg !1820
  store i8* %_36, i8** %self.dbg.spill4, align 8, !dbg !1820
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !1822, metadata !DIExpression()), !dbg !1826
  %data_address = bitcast i8* %_36 to {}*, !dbg !1826
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !1826
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1828, metadata !DIExpression()), !dbg !1833
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !1820
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !1832, metadata !DIExpression()), !dbg !1833
  %19 = bitcast { i8*, i64 }* %_47 to {}**, !dbg !1833
  store {}* %data_address, {}** %19, align 8, !dbg !1833
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_47, i32 0, i32 1, !dbg !1833
  store i64 %len, i64* %20, align 8, !dbg !1833
  %21 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_46 to { i8*, i64 }*, !dbg !1833
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_47, i32 0, i32 0, !dbg !1833
  %23 = load i8*, i8** %22, align 8, !dbg !1833
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_47, i32 0, i32 1, !dbg !1833
  %25 = load i64, i64* %24, align 8, !dbg !1833
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %21, i32 0, i32 0, !dbg !1833
  store i8* %23, i8** %26, align 8, !dbg !1833
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %21, i32 0, i32 1, !dbg !1833
  store i64 %25, i64* %27, align 8, !dbg !1833
  %28 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_46 to { [0 x i8]*, i64 }*, !dbg !1833
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 0, !dbg !1833
  %_39.0 = load [0 x i8]*, [0 x i8]** %29, align 8, !dbg !1833
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 1, !dbg !1833
  %_39.1 = load i64, i64* %30, align 8, !dbg !1833
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !1778
  store [0 x i8]* %_39.0, [0 x i8]** %31, align 8, !dbg !1778
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !1778
  store i64 %_39.1, i64* %32, align 8, !dbg !1778
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill5, metadata !1774, metadata !DIExpression()), !dbg !1777
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !1777
  store [0 x i8]* %_39.0, [0 x i8]** %33, align 8, !dbg !1777
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !1777
  store i64 %_39.1, i64* %34, align 8, !dbg !1777
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !1789, metadata !DIExpression()), !dbg !1790
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_6, i32 0, i32 0, !dbg !1835
  store [0 x i8]* %_39.0, [0 x i8]** %35, align 8, !dbg !1835
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_6, i32 0, i32 1, !dbg !1835
  store i64 %_39.1, i64* %36, align 8, !dbg !1835
  store { [0 x i8]*, i64 }* %_6, { [0 x i8]*, i64 }** %reader.dbg.spill, align 8, !dbg !1836
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %reader.dbg.spill, metadata !1756, metadata !DIExpression()), !dbg !1837
; invoke <(A,B) as proc_macro::bridge::rpc::DecodeMut<S>>::decode
  invoke void @"_ZN77_$LT$$LP$A$C$B$RP$$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17hd565458767a4d1cdE"({ %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>", i32 }* sret({ %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>", i32 }) %_14, { [0 x i8]*, i64 }* align 8 %_6, {}* align 1 %_18)
          to label %bb3 unwind label %cleanup, !dbg !1838

bb3:                                              ; preds = %bb2
  %37 = bitcast { %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>", i32 }* %_14 to %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>"*, !dbg !1839
  %38 = bitcast %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>"* %globals to i8*, !dbg !1839
  %39 = bitcast %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>"* %37 to i8*, !dbg !1839
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %39, i64 12, i1 false), !dbg !1839
  store i8 1, i8* %_33, align 1, !dbg !1840
  %40 = getelementptr inbounds { %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>", i32 }, { %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>", i32 }* %_14, i32 0, i32 1, !dbg !1840
  %41 = load i32, i32* %40, align 4, !dbg !1840, !range !642, !noundef !27
  store i32 %41, i32* %input, align 4, !dbg !1840
  %42 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_1, i32 0, i32 1, !dbg !1841
  %_31 = load %"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"** %42, align 8, !dbg !1841, !nonnull !27, !align !1193, !noundef !27
  store %"proc_macro::bridge::buffer::Buffer"* %_31, %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill6, align 8, !dbg !1841
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill6, metadata !1842, metadata !DIExpression()), !dbg !1846
  store %"proc_macro::bridge::buffer::Buffer"* %_31, %"proc_macro::bridge::buffer::Buffer"** %dest.dbg.spill, align 8, !dbg !1846
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %dest.dbg.spill, metadata !1847, metadata !DIExpression()), !dbg !1851
  %_56.0 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 0), align 8, !dbg !1853, !nonnull !27, !noundef !27
  %_56.1 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 1), align 8, !dbg !1853
  %43 = bitcast %"alloc::vec::Vec<u8>"* %_55 to { i8*, i64 }*, !dbg !1853
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %43, i32 0, i32 0, !dbg !1853
  store i8* %_56.0, i8** %44, align 8, !dbg !1853
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %43, i32 0, i32 1, !dbg !1853
  store i64 %_56.1, i64* %45, align 8, !dbg !1853
  %46 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %_55, i32 0, i32 1, !dbg !1853
  store i64 0, i64* %46, align 8, !dbg !1853
; invoke <proc_macro::bridge::buffer::Buffer as core::convert::From<alloc::vec::Vec<u8>>>::from
  invoke void @"_ZN107_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$core..convert..From$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$4from17hae087b0765d8b4d8E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %_54, %"alloc::vec::Vec<u8>"* %_55)
          to label %bb11 unwind label %cleanup7, !dbg !1860

bb7:                                              ; preds = %cleanup7
  %47 = load i8, i8* %_33, align 1, !dbg !1862, !range !759, !noundef !27
  %48 = trunc i8 %47 to i1, !dbg !1862
  br i1 %48, label %bb6, label %bb9, !dbg !1862

cleanup7:                                         ; preds = %bb10, %bb11, %bb3
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  %51 = extractvalue { i8*, i32 } %49, 1
  %52 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %50, i8** %52, align 8
  %53 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %51, i32* %53, align 8
  br label %bb7

bb11:                                             ; preds = %bb3
; invoke core::mem::replace
  invoke void @_ZN4core3mem7replace17haedb1d51e20a5159E(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %_21, %"proc_macro::bridge::buffer::Buffer"* align 8 %_31, %"proc_macro::bridge::buffer::Buffer"* %_54)
          to label %bb10 unwind label %cleanup7, !dbg !1851

bb10:                                             ; preds = %bb11
  %54 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_1, i32 0, i32 2, !dbg !1863
  %55 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %54, i32 0, i32 0, !dbg !1863
  %_23.0 = load i64*, i64** %55, align 8, !dbg !1863, !nonnull !27, !noundef !27
  %56 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %54, i32 0, i32 1, !dbg !1863
  %_23.1 = load i8*, i8** %56, align 8, !dbg !1863
  %57 = bitcast %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>"* %_24 to i8*, !dbg !1864
  %58 = bitcast %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>"* %globals to i8*, !dbg !1864
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %58, i64 12, i1 false), !dbg !1864
  %59 = bitcast %"proc_macro::bridge::client::Bridge"* %_20 to %"proc_macro::bridge::buffer::Buffer"*, !dbg !1865
  %60 = bitcast %"proc_macro::bridge::buffer::Buffer"* %59 to i8*, !dbg !1865
  %61 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_21 to i8*, !dbg !1865
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 40, i1 false), !dbg !1865
  %62 = getelementptr inbounds %"proc_macro::bridge::client::Bridge", %"proc_macro::bridge::client::Bridge"* %_20, i32 0, i32 1, !dbg !1865
  %63 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %62, i32 0, i32 0, !dbg !1865
  store i64* %_23.0, i64** %63, align 8, !dbg !1865
  %64 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %62, i32 0, i32 1, !dbg !1865
  store i8* %_23.1, i8** %64, align 8, !dbg !1865
  %65 = getelementptr inbounds %"proc_macro::bridge::client::Bridge", %"proc_macro::bridge::client::Bridge"* %_20, i32 0, i32 2, !dbg !1865
  %66 = bitcast %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>"* %65 to i8*, !dbg !1865
  %67 = bitcast %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>"* %_24 to i8*, !dbg !1865
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 4 %67, i64 12, i1 false), !dbg !1865
  %68 = bitcast %"proc_macro::bridge::client::BridgeState"* %new_state to %"proc_macro::bridge::client::BridgeState::Connected"*, !dbg !1866
  %69 = getelementptr inbounds %"proc_macro::bridge::client::BridgeState::Connected", %"proc_macro::bridge::client::BridgeState::Connected"* %68, i32 0, i32 1, !dbg !1866
  %70 = bitcast %"proc_macro::bridge::client::Bridge"* %69 to i8*, !dbg !1866
  %71 = bitcast %"proc_macro::bridge::client::Bridge"* %_20 to i8*, !dbg !1866
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 72, i1 false), !dbg !1866
  %72 = bitcast %"proc_macro::bridge::client::BridgeState"* %new_state to i64*, !dbg !1866
  store i64 1, i64* %72, align 8, !dbg !1866
  %73 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_1, i32 0, i32 1, !dbg !1867
  %_32 = load %"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"** %73, align 8, !dbg !1867, !nonnull !27, !align !1193, !noundef !27
  store i8 0, i8* %_34, align 1, !dbg !1867
  store i8 0, i8* %_33, align 1, !dbg !1867
  %74 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_26 to %"proc_macro::bridge::client::BridgeState"*, !dbg !1867
  %75 = bitcast %"proc_macro::bridge::client::BridgeState"* %74 to i8*, !dbg !1867
  %76 = bitcast %"proc_macro::bridge::client::BridgeState"* %new_state to i8*, !dbg !1867
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 80, i1 false), !dbg !1867
  %77 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_26, i32 0, i32 1, !dbg !1867
  %78 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_1, i32 0, i32 3, !dbg !1867
  %79 = load i8*, i8** %78, align 8, !dbg !1867, !nonnull !27, !align !608, !noundef !27
  store i8* %79, i8** %77, align 8, !dbg !1867
  %80 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_26, i32 0, i32 3, !dbg !1867
  %81 = load i32, i32* %input, align 4, !dbg !1867, !range !642, !noundef !27
  store i32 %81, i32* %80, align 8, !dbg !1867
  %82 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_26, i32 0, i32 2, !dbg !1867
  store %"proc_macro::bridge::buffer::Buffer"* %_32, %"proc_macro::bridge::buffer::Buffer"** %82, align 8, !dbg !1867
; invoke std::thread::local::LocalKey<T>::with
  invoke void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17had1af13dedc69e39E"(i64** align 8 bitcast (<{ i8* }>* @alloc71 to i64**), %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_26)
          to label %bb4 unwind label %cleanup7, !dbg !1868

bb4:                                              ; preds = %bb10
  ret void, !dbg !1869

bb6:                                              ; preds = %bb7
; invoke core::ptr::drop_in_place<proc_macro::bridge::client::TokenStream>
  invoke void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..TokenStream$GT$17h6e4ae08084020ae3E"(i32* %input) #19
          to label %bb9 unwind label %abort, !dbg !1862

abort:                                            ; preds = %bb6
  %83 = landingpad { i8*, i32 }
          cleanup, !dbg !1870
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !1870
  unreachable, !dbg !1870

bb5:                                              ; preds = %bb8, %bb9
  %84 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1870
  %85 = load i8*, i8** %84, align 8, !dbg !1870
  %86 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1870
  %87 = load i32, i32* %86, align 8, !dbg !1870
  %88 = insertvalue { i8*, i32 } undef, i8* %85, 0, !dbg !1870
  %89 = insertvalue { i8*, i32 } %88, i32 %87, 1, !dbg !1870
  resume { i8*, i32 } %89, !dbg !1870

bb8:                                              ; preds = %bb9
  br label %bb5, !dbg !1794
}

; proc_macro::bridge::client::run_client::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10proc_macro6bridge6client10run_client28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hb080680d2449079fE"(%"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_1, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* align 8 %state) unnamed_addr #0 !dbg !1871 {
start:
  %state.dbg.spill = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, align 8
  %_5 = alloca %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]", align 8
  %_4 = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %0 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_1 to %"proc_macro::bridge::client::BridgeState"*
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_1, metadata !1882, metadata !DIExpression()), !dbg !1886
  %1 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_1, i32 0, i32 1
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_1, metadata !1883, metadata !DIExpression(DW_OP_plus_uconst, 80)), !dbg !1887
  %2 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_1, i32 0, i32 3
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_1, metadata !1884, metadata !DIExpression(DW_OP_plus_uconst, 96)), !dbg !1888
  %3 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_1, i32 0, i32 2
  %4 = load %"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"** %3, align 8, !nonnull !27, !align !1193, !noundef !27
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_1, metadata !1885, metadata !DIExpression(DW_OP_plus_uconst, 88, DW_OP_deref)), !dbg !1889
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %state, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %state.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %state.dbg.spill, metadata !1881, metadata !DIExpression()), !dbg !1890
  %5 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_1 to %"proc_macro::bridge::client::BridgeState"*, !dbg !1891
  %6 = bitcast %"proc_macro::bridge::client::BridgeState"* %_4 to i8*, !dbg !1891
  %7 = bitcast %"proc_macro::bridge::client::BridgeState"* %5 to i8*, !dbg !1891
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 80, i1 false), !dbg !1891
  %8 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_1, i32 0, i32 2, !dbg !1892
  %_7 = load %"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"** %8, align 8, !dbg !1892, !nonnull !27, !align !1193, !noundef !27
  %9 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_5 to i8**, !dbg !1892
  %10 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_1, i32 0, i32 1, !dbg !1892
  %11 = load i8*, i8** %10, align 8, !dbg !1892, !nonnull !27, !align !608, !noundef !27
  store i8* %11, i8** %9, align 8, !dbg !1892
  %12 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_5, i32 0, i32 2, !dbg !1892
  %13 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_1, i32 0, i32 3, !dbg !1892
  %14 = load i32, i32* %13, align 8, !dbg !1892, !range !642, !noundef !27
  store i32 %14, i32* %12, align 8, !dbg !1892
  %15 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_5, i32 0, i32 1, !dbg !1892
  store %"proc_macro::bridge::buffer::Buffer"* %_7, %"proc_macro::bridge::buffer::Buffer"** %15, align 8, !dbg !1892
; call proc_macro::bridge::scoped_cell::ScopedCell<T>::set
  call void @"_ZN10proc_macro6bridge11scoped_cell19ScopedCell$LT$T$GT$3set17hf32551b6ab7cf3cdE"(%"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* align 8 %state, %"proc_macro::bridge::client::BridgeState"* %_4, %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_5), !dbg !1893
  br label %bb1, !dbg !1893

bb1:                                              ; preds = %start
  ret void, !dbg !1894
}

; proc_macro::bridge::client::run_client::{{closure}}::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10proc_macro6bridge6client10run_client28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h2884d7662d45a5aeE"(%"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1895 {
start:
  %self.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %_19 = alloca i8, align 1
  %_16 = alloca {}, align 1
  %_10 = alloca { i32, i32 }, align 4
  %_6 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  %_4 = alloca i32, align 4
  %output = alloca i32, align 4
  %1 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_1 to i8**
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_1, metadata !1899, metadata !DIExpression()), !dbg !1904
  %2 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_1, i32 0, i32 2
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_1, metadata !1900, metadata !DIExpression(DW_OP_plus_uconst, 16)), !dbg !1905
  %3 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_1, i32 0, i32 1
  %4 = load %"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"** %3, align 8, !nonnull !27, !align !1193, !noundef !27
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_1, metadata !1901, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_deref)), !dbg !1906
  call void @llvm.dbg.declare(metadata i32* %output, metadata !1902, metadata !DIExpression()), !dbg !1907
  %5 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_1 to i8**, !dbg !1908
  %_3 = load i8*, i8** %5, align 8, !dbg !1908, !nonnull !27, !align !608, !noundef !27
  %6 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_1, i32 0, i32 2, !dbg !1909
  %_5 = load i32, i32* %6, align 8, !dbg !1909, !range !642, !noundef !27
  store i32 %_5, i32* %_4, align 4, !dbg !1908
  %7 = load i32, i32* %_4, align 4, !dbg !1908, !range !642, !noundef !27
; call proc_macro::bridge::client::Client<proc_macro::TokenStream,proc_macro::TokenStream>::expand1::{{closure}}::{{closure}}
  %8 = call i32 @"_ZN10proc_macro6bridge6client63Client$LT$proc_macro..TokenStream$C$proc_macro..TokenStream$GT$7expand128_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h12dd0c2eeb73f56dE"(i8* align 1 %_3, i32 %7), !dbg !1908
  store i32 %8, i32* %output, align 4, !dbg !1908
  br label %bb1, !dbg !1908

bb1:                                              ; preds = %start
  store i8 1, i8* %_19, align 1, !dbg !1910
; invoke proc_macro::bridge::client::Bridge::with
  invoke void @_ZN10proc_macro6bridge6client6Bridge4with17h422274e9a3f3c3feE(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %_6)
          to label %bb2 unwind label %cleanup, !dbg !1911

bb8:                                              ; preds = %bb5, %cleanup
  %9 = load i8, i8* %_19, align 1, !dbg !1912, !range !759, !noundef !27
  %10 = trunc i8 %9 to i1, !dbg !1912
  br i1 %10, label %bb7, label %bb4, !dbg !1912

cleanup:                                          ; preds = %bb6, %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb8

bb2:                                              ; preds = %bb1
  %16 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_1, i32 0, i32 1, !dbg !1913
  %_20 = load %"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"** %16, align 8, !dbg !1913, !nonnull !27, !align !1193, !noundef !27
; invoke core::ptr::drop_in_place<proc_macro::bridge::buffer::Buffer>
  invoke void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..bridge..buffer..Buffer$GT$17ha3af9902afa5dfbfE"(%"proc_macro::bridge::buffer::Buffer"* %_20)
          to label %bb6 unwind label %cleanup1, !dbg !1913

bb5:                                              ; preds = %cleanup1
  %17 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_1, i32 0, i32 1, !dbg !1913
  %_21 = load %"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"** %17, align 8, !dbg !1913, !nonnull !27, !align !1193, !noundef !27
  %18 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_21 to i8*, !dbg !1913
  %19 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_6 to i8*, !dbg !1913
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 40, i1 false), !dbg !1913
  br label %bb8, !dbg !1914

cleanup1:                                         ; preds = %bb2
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  %22 = extractvalue { i8*, i32 } %20, 1
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %22, i32* %24, align 8
  br label %bb5

bb6:                                              ; preds = %bb2
  %25 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_1, i32 0, i32 1, !dbg !1913
  %_22 = load %"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"** %25, align 8, !dbg !1913, !nonnull !27, !align !1193, !noundef !27
  %26 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_22 to i8*, !dbg !1913
  %27 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_6 to i8*, !dbg !1913
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 40, i1 false), !dbg !1913
  %28 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_1, i32 0, i32 1, !dbg !1915
  %_17 = load %"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"** %28, align 8, !dbg !1915, !nonnull !27, !align !1193, !noundef !27
  store %"proc_macro::bridge::buffer::Buffer"* %_17, %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill, align 8, !dbg !1915
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill, metadata !1916, metadata !DIExpression()), !dbg !1920
  %29 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %_17, i32 0, i32 1, !dbg !1920
  store i64 0, i64* %29, align 8, !dbg !1920
  store i8 0, i8* %_19, align 1, !dbg !1921
  %_11 = load i32, i32* %output, align 4, !dbg !1921
  %30 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_10, i32 0, i32 1, !dbg !1922
  store i32 %_11, i32* %30, align 4, !dbg !1922
  %31 = bitcast { i32, i32 }* %_10 to i32*, !dbg !1922
  store i32 0, i32* %31, align 4, !dbg !1922
  %32 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_1, i32 0, i32 1, !dbg !1923
  %_18 = load %"proc_macro::bridge::buffer::Buffer"*, %"proc_macro::bridge::buffer::Buffer"** %32, align 8, !dbg !1923, !nonnull !27, !align !1193, !noundef !27
  %33 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_10, i32 0, i32 0, !dbg !1922
  %34 = load i32, i32* %33, align 4, !dbg !1922, !range !967, !noundef !27
  %35 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_10, i32 0, i32 1, !dbg !1922
  %36 = load i32, i32* %35, align 4, !dbg !1922
; invoke proc_macro::bridge::<impl proc_macro::bridge::rpc::Encode<S> for core::result::Result<T,E>>::encode
  invoke void @"_ZN10proc_macro6bridge104_$LT$impl$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$u20$for$u20$core..result..Result$LT$T$C$E$GT$$GT$6encode17h8ab643544b667b03E"(i32 %34, i32 %36, %"proc_macro::bridge::buffer::Buffer"* align 8 %_18, {}* align 1 %_16)
          to label %bb3 unwind label %cleanup, !dbg !1922

bb3:                                              ; preds = %bb6
  ret void, !dbg !1924

bb4:                                              ; preds = %bb7, %bb8
  %37 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1925
  %38 = load i8*, i8** %37, align 8, !dbg !1925
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1925
  %40 = load i32, i32* %39, align 8, !dbg !1925
  %41 = insertvalue { i8*, i32 } undef, i8* %38, 0, !dbg !1925
  %42 = insertvalue { i8*, i32 } %41, i32 %40, 1, !dbg !1925
  resume { i8*, i32 } %42, !dbg !1925

bb7:                                              ; preds = %bb8
; invoke core::ptr::drop_in_place<core::option::Option<proc_macro::bridge::client::TokenStream>>
  invoke void @"_ZN4core3ptr88drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$GT$17h0d2fe3aa7bb6e441E"(i32* %output) #19
          to label %bb4 unwind label %abort, !dbg !1912

abort:                                            ; preds = %bb7
  %43 = landingpad { i8*, i32 }
          cleanup, !dbg !1925
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !1925
  unreachable, !dbg !1925
}

; proc_macro::bridge::client::run_client::{{closure}}::{{closure}}::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10proc_macro6bridge6client10run_client28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h534d15f39f4c9324E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0, %"proc_macro::bridge::client::Bridge"* align 8 %bridge) unnamed_addr #0 !dbg !1926 {
start:
  %dest.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %self.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %bridge.dbg.spill = alloca %"proc_macro::bridge::client::Bridge"*, align 8
  %_1.dbg.spill = alloca %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]", align 1
  %_7 = alloca %"alloc::vec::Vec<u8>", align 8
  %_6 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]"* %_1.dbg.spill, metadata !1932, metadata !DIExpression()), !dbg !1933
  store %"proc_macro::bridge::client::Bridge"* %bridge, %"proc_macro::bridge::client::Bridge"** %bridge.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::Bridge"** %bridge.dbg.spill, metadata !1931, metadata !DIExpression()), !dbg !1934
  %self = bitcast %"proc_macro::bridge::client::Bridge"* %bridge to %"proc_macro::bridge::buffer::Buffer"*, !dbg !1935
  store %"proc_macro::bridge::buffer::Buffer"* %self, %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill, align 8, !dbg !1935
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill, metadata !1936, metadata !DIExpression()), !dbg !1940
  store %"proc_macro::bridge::buffer::Buffer"* %self, %"proc_macro::bridge::buffer::Buffer"** %dest.dbg.spill, align 8, !dbg !1940
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %dest.dbg.spill, metadata !1941, metadata !DIExpression()), !dbg !1945
  %_8.0 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 0), align 8, !dbg !1947, !nonnull !27, !noundef !27
  %_8.1 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 1), align 8, !dbg !1947
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_7 to { i8*, i64 }*, !dbg !1947
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0, !dbg !1947
  store i8* %_8.0, i8** %2, align 8, !dbg !1947
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1, !dbg !1947
  store i64 %_8.1, i64* %3, align 8, !dbg !1947
  %4 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %_7, i32 0, i32 1, !dbg !1947
  store i64 0, i64* %4, align 8, !dbg !1947
; call <proc_macro::bridge::buffer::Buffer as core::convert::From<alloc::vec::Vec<u8>>>::from
  call void @"_ZN107_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$core..convert..From$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$4from17hae087b0765d8b4d8E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %_6, %"alloc::vec::Vec<u8>"* %_7), !dbg !1954
  br label %bb2, !dbg !1954

bb2:                                              ; preds = %start
; call core::mem::replace
  call void @_ZN4core3mem7replace17haedb1d51e20a5159E(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0, %"proc_macro::bridge::buffer::Buffer"* align 8 %self, %"proc_macro::bridge::buffer::Buffer"* %_6), !dbg !1945
  br label %bb1, !dbg !1945

bb1:                                              ; preds = %bb2
  ret void, !dbg !1956
}

; proc_macro::bridge::client::BridgeState::with
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10proc_macro6bridge6client11BridgeState4with17h3dcb91e7dbd02b8fE(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0) unnamed_addr #1 !dbg !1957 {
start:
  %f.dbg.spill = alloca %"[closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]", align 1
  %_3 = alloca %"[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %f.dbg.spill, metadata !1961, metadata !DIExpression()), !dbg !1964
  %1 = bitcast %"[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]"* %_3 to %"[closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"*, !dbg !1965
; call std::thread::local::LocalKey<T>::with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h5ac37a28d5c34d15E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0, i64** align 8 bitcast (<{ i8* }>* @alloc71 to i64**)), !dbg !1966
  br label %bb1, !dbg !1966

bb1:                                              ; preds = %start
  ret void, !dbg !1967
}

; proc_macro::bridge::client::BridgeState::with::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10proc_macro6bridge6client11BridgeState4with28_$u7b$$u7b$closure$u7d$$u7d$17hfd48522897f9ccadE"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* align 8 %state) unnamed_addr #0 !dbg !1968 {
start:
  %state.dbg.spill = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, align 8
  %_1.dbg.spill = alloca %"[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]", align 1
  %_5 = alloca %"[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}::{closure#0}]", align 1
  %_4 = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %1 = bitcast %"[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]"* %_1.dbg.spill to %"[closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"*
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]"* %_1.dbg.spill, metadata !1976, metadata !DIExpression()), !dbg !1977
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %state, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %state.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %state.dbg.spill, metadata !1975, metadata !DIExpression()), !dbg !1978
  %2 = bitcast %"proc_macro::bridge::client::BridgeState"* %_4 to i64*, !dbg !1979
  store i64 2, i64* %2, align 8, !dbg !1979
  %3 = bitcast %"[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}::{closure#0}]"* %_5 to %"[closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"*, !dbg !1980
; call proc_macro::bridge::scoped_cell::ScopedCell<T>::replace
  call void @"_ZN10proc_macro6bridge11scoped_cell19ScopedCell$LT$T$GT$7replace17heea85a70599103bbE"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* align 8 %state, %"proc_macro::bridge::client::BridgeState"* %_4), !dbg !1981
  br label %bb1, !dbg !1981

bb1:                                              ; preds = %start
  ret void, !dbg !1982
}

; proc_macro::bridge::client::BridgeState::with::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10proc_macro6bridge6client11BridgeState4with28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hc8c1d915ee284f69E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0, i64* align 8 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1983 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}::{closure#0}]", align 1
  %_9 = alloca i8, align 1
  %_4 = alloca i64*, align 8
  %state = alloca i64*, align 8
  store i64* %1, i64** %state, align 8
  %3 = bitcast %"[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}::{closure#0}]"* %_1.dbg.spill to %"[closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"*
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}::{closure#0}]"* %_1.dbg.spill, metadata !1988, metadata !DIExpression()), !dbg !1989
  call void @llvm.dbg.declare(metadata i64** %state, metadata !1987, metadata !DIExpression()), !dbg !1990
  store i8 1, i8* %_9, align 1, !dbg !1991
; invoke <proc_macro::bridge::scoped_cell::RefMutL<T> as core::ops::deref::DerefMut>::deref_mut
  %_7 = invoke align 8 %"proc_macro::bridge::client::BridgeState"* @"_ZN96_$LT$proc_macro..bridge..scoped_cell..RefMutL$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hb74aae393af6043eE"(i64** align 8 %state)
          to label %bb1 unwind label %cleanup, !dbg !1992

bb5:                                              ; preds = %cleanup
  %4 = load i8, i8* %_9, align 1, !dbg !1993, !range !759, !noundef !27
  %5 = trunc i8 %4 to i1, !dbg !1993
  br i1 %5, label %bb4, label %bb3, !dbg !1993

cleanup:                                          ; preds = %bb1, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb5

bb1:                                              ; preds = %start
  %11 = bitcast i64** %_4 to %"proc_macro::bridge::client::BridgeState"**, !dbg !1991
  store %"proc_macro::bridge::client::BridgeState"* %_7, %"proc_macro::bridge::client::BridgeState"** %11, align 8, !dbg !1991
  store i8 0, i8* %_9, align 1, !dbg !1991
  %12 = load i64*, i64** %_4, align 8, !dbg !1991, !nonnull !27, !align !1193, !noundef !27
  %13 = bitcast i64* %12 to %"proc_macro::bridge::client::BridgeState"*, !dbg !1991
; invoke proc_macro::bridge::client::Bridge::with::{{closure}}
  invoke void @"_ZN10proc_macro6bridge6client6Bridge4with28_$u7b$$u7b$closure$u7d$$u7d$17h93f2913f9087a582E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0, %"proc_macro::bridge::client::BridgeState"* align 8 %13)
          to label %bb2 unwind label %cleanup, !dbg !1991

bb2:                                              ; preds = %bb1
  ret void, !dbg !1994

bb3:                                              ; preds = %bb4, %bb5
  %14 = bitcast { i8*, i32 }* %2 to i8**, !dbg !1995
  %15 = load i8*, i8** %14, align 8, !dbg !1995
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !1995
  %17 = load i32, i32* %16, align 8, !dbg !1995
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0, !dbg !1995
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1, !dbg !1995
  resume { i8*, i32 } %19, !dbg !1995

bb4:                                              ; preds = %bb5
  br label %bb3, !dbg !1993
}

; proc_macro::bridge::client::BRIDGE_STATE::__getit
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 i64* @_ZN10proc_macro6bridge6client12BRIDGE_STATE7__getit17hcbe55ff2dc409fbfE(i64* align 8 %init) unnamed_addr #0 !dbg !1996 {
start:
  %init.dbg.spill = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  store i64* %init, i64** %init.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %init.dbg.spill, metadata !2042, metadata !DIExpression()), !dbg !2043
  store i64* %init, i64** %_4, align 8, !dbg !2044
  %0 = load i64*, i64** %_4, align 8, !dbg !2045, !align !1193
; call std::thread::local::fast::Key<T>::get
  %1 = call align 8 i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$3get17hec36f08b67c44b0bE"(%"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* align 8 @_ZN10proc_macro6bridge6client12BRIDGE_STATE7__getit5__KEY17hf23c929d95a924ccE, i64* align 8 %0), !dbg !2045
  br label %bb1, !dbg !2045

bb1:                                              ; preds = %start
  ret i64* %1, !dbg !2046
}

; proc_macro::bridge::client::BRIDGE_STATE::__getit::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10proc_macro6bridge6client12BRIDGE_STATE7__getit28_$u7b$$u7b$closure$u7d$$u7d$17h88635db59fb9f3bbE"(%"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* sret(%"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>") %0, i64* align 8 %1) unnamed_addr #0 !dbg !2047 {
start:
  %self.dbg.spill = alloca %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, align 8
  %init.dbg.spill = alloca %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, align 8
  %_13 = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %_10 = alloca %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", align 8
  %value = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>", align 8
  %_4 = alloca %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", align 8
  %_1 = alloca i64*, align 8
  store i64* %1, i64** %_1, align 8
  call void @llvm.dbg.declare(metadata i64** %_1, metadata !2055, metadata !DIExpression()), !dbg !2060
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %value, metadata !2058, metadata !DIExpression()), !dbg !2061
  %2 = bitcast i64** %_1 to {}**, !dbg !2062
  %3 = load {}*, {}** %2, align 8, !dbg !2062
  %4 = icmp eq {}* %3, null, !dbg !2062
  %_2 = select i1 %4, i64 0, i64 1, !dbg !2062
  %5 = icmp eq i64 %_2, 1, !dbg !2062
  br i1 %5, label %bb1, label %bb5, !dbg !2062

bb1:                                              ; preds = %start
  %6 = bitcast i64** %_1 to %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"**, !dbg !2063
  %init = load %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %6, align 8, !dbg !2063, !nonnull !27, !align !1193, !noundef !27
  store %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %init, %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %init.dbg.spill, align 8, !dbg !2063
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %init.dbg.spill, metadata !2056, metadata !DIExpression()), !dbg !2063
  store %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %init, %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %self.dbg.spill, align 8, !dbg !2064
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %self.dbg.spill, metadata !2065, metadata !DIExpression()), !dbg !2071
  %7 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_10 to i64*, !dbg !2071
  store i64 0, i64* %7, align 8, !dbg !2071
; call core::mem::replace
  call void @_ZN4core3mem7replace17h5a00048dad880c23E(%"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* sret(%"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>") %_4, %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* align 8 %init, %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_10), !dbg !2071
  br label %bb7, !dbg !2071

bb5:                                              ; preds = %bb4, %start
  %8 = bitcast %"proc_macro::bridge::client::BridgeState"* %_13 to i64*, !dbg !2072
  store i64 0, i64* %8, align 8, !dbg !2072
; call proc_macro::bridge::scoped_cell::ScopedCell<T>::new
  call void @"_ZN10proc_macro6bridge11scoped_cell19ScopedCell$LT$T$GT$3new17hfe6f4b7449893b9bE"(%"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* sret(%"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>") %0, %"proc_macro::bridge::client::BridgeState"* %_13), !dbg !2072
  br label %bb8, !dbg !2072

bb7:                                              ; preds = %bb1
  %9 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_4 to i64*, !dbg !2077
  %_6 = load i64, i64* %9, align 8, !dbg !2077, !range !2078, !noundef !27
  %10 = icmp eq i64 %_6, 1, !dbg !2077
  br i1 %10, label %bb2, label %bb3, !dbg !2077

bb2:                                              ; preds = %bb7
  %11 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_4 to %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::Some"*, !dbg !2061
  %12 = getelementptr inbounds %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::Some", %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::Some"* %11, i32 0, i32 1, !dbg !2061
  %13 = bitcast %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %value to i8*, !dbg !2061
  %14 = bitcast %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %12 to i8*, !dbg !2061
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 80, i1 false), !dbg !2061
  %15 = bitcast %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %0 to i8*, !dbg !2079
  %16 = bitcast %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %value to i8*, !dbg !2079
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 80, i1 false), !dbg !2079
  br label %bb6, !dbg !2080

bb3:                                              ; preds = %bb7
; call core::ptr::drop_in_place<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>
  call void @"_ZN4core3ptr140drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$proc_macro..bridge..client..BridgeStateL$GT$$GT$$GT$17he92c14df81bac4fdE"(%"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_4), !dbg !2081
  br label %bb4, !dbg !2081

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !2082

bb8:                                              ; preds = %bb5
  br label %bb6, !dbg !2083

bb6:                                              ; preds = %bb2, %bb8
  ret void, !dbg !2080
}

; proc_macro::bridge::client::Client<proc_macro::TokenStream,proc_macro::TokenStream>::expand1::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10proc_macro6bridge6client63Client$LT$proc_macro..TokenStream$C$proc_macro..TokenStream$GT$7expand128_$u7b$$u7b$closure$u7d$$u7d$17h67025ea0df26fe70E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0, %"[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]"* align 1 %_1, %"proc_macro::bridge::BridgeConfig"* %bridge) unnamed_addr #0 !dbg !2084 {
start:
  %_1.dbg.spill = alloca %"[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]"*, align 8
  %_4 = alloca i8*, align 8
  %_3 = alloca %"proc_macro::bridge::BridgeConfig", align 8
  store %"[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]"* %_1, %"[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]"** %_1.dbg.spill, align 8
  %1 = load %"[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]"*, %"[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]"** %_1.dbg.spill, align 8, !nonnull !27, !align !608, !noundef !27
  %2 = bitcast %"[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]"* %1 to {}*
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]"** %_1.dbg.spill, metadata !2090, metadata !DIExpression(DW_OP_deref)), !dbg !2093
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::BridgeConfig"* %bridge, metadata !2089, metadata !DIExpression()), !dbg !2094
  %3 = bitcast %"proc_macro::bridge::BridgeConfig"* %_3 to i8*, !dbg !2095
  %4 = bitcast %"proc_macro::bridge::BridgeConfig"* %bridge to i8*, !dbg !2095
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 64, i1 false), !dbg !2095
  %_5 = bitcast %"[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}]"* %_1 to {}*, !dbg !2096
  %5 = bitcast i8** %_4 to {}**, !dbg !2096
  store {}* %_5, {}** %5, align 8, !dbg !2096
  %6 = load i8*, i8** %_4, align 8, !dbg !2097, !nonnull !27, !align !608, !noundef !27
; call proc_macro::bridge::client::run_client
  call void @_ZN10proc_macro6bridge6client10run_client17h655ca071f1606824E(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0, %"proc_macro::bridge::BridgeConfig"* %_3, i8* align 1 %6), !dbg !2097
  br label %bb1, !dbg !2097

bb1:                                              ; preds = %start
  ret void, !dbg !2098
}

; proc_macro::bridge::client::Client<proc_macro::TokenStream,proc_macro::TokenStream>::expand1::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN10proc_macro6bridge6client63Client$LT$proc_macro..TokenStream$C$proc_macro..TokenStream$GT$7expand128_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h12dd0c2eeb73f56dE"(i8* align 1 %0, i32 %input) unnamed_addr #0 !dbg !2099 {
start:
  %input.dbg.spill = alloca i32, align 4
  %_7 = alloca i32, align 4
  %_6 = alloca i32, align 4
  %_5 = alloca i32, align 4
  %_1 = alloca i8*, align 8
  store i8* %0, i8** %_1, align 8
  %1 = bitcast i8** %_1 to {}**
  %2 = load {}*, {}** %1, align 8, !nonnull !27, !align !608, !noundef !27
  call void @llvm.dbg.declare(metadata i8** %_1, metadata !2104, metadata !DIExpression(DW_OP_deref)), !dbg !2105
  store i32 %input, i32* %input.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %input.dbg.spill, metadata !2103, metadata !DIExpression()), !dbg !2106
  %3 = bitcast i8** %_1 to {}**, !dbg !2107
  %_9 = load {}*, {}** %3, align 8, !dbg !2107, !nonnull !27, !align !608, !noundef !27
  store i32 %input, i32* %_7, align 4, !dbg !2108
  %4 = load i32, i32* %_7, align 4, !dbg !2109
  store i32 %4, i32* %_6, align 4, !dbg !2109
  %5 = load i32, i32* %_6, align 4, !dbg !2107
  store i32 %5, i32* %_5, align 4, !dbg !2107
  %6 = load i32, i32* %_5, align 4, !dbg !2107
; call core::ops::function::Fn::call
  %_3 = call i32 @_ZN4core3ops8function2Fn4call17h0000b40ff0727754E({}* align 1 %_9, i32 %6), !dbg !2107
  br label %bb1, !dbg !2107

bb1:                                              ; preds = %start
  ret i32 %_3, !dbg !2110
}

; proc_macro::bridge::client::Bridge::with
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10proc_macro6bridge6client6Bridge4with17h422274e9a3f3c3feE(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0) unnamed_addr #1 !dbg !2111 {
start:
  %f.dbg.spill = alloca %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]", align 1
  %_2 = alloca %"[closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]"* %f.dbg.spill, metadata !2115, metadata !DIExpression()), !dbg !2118
  %1 = bitcast %"[closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %_2 to %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]"*, !dbg !2119
; call proc_macro::bridge::client::BridgeState::with
  call void @_ZN10proc_macro6bridge6client11BridgeState4with17h3dcb91e7dbd02b8fE(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0), !dbg !2120
  br label %bb1, !dbg !2120

bb1:                                              ; preds = %start
  ret void, !dbg !2121
}

; proc_macro::bridge::client::Bridge::with::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10proc_macro6bridge6client6Bridge4with28_$u7b$$u7b$closure$u7d$$u7d$17h93f2913f9087a582E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0, %"proc_macro::bridge::client::BridgeState"* align 8 %state) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2122 {
start:
  %bridge.dbg.spill = alloca %"proc_macro::bridge::client::Bridge"*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %state.dbg.spill = alloca %"proc_macro::bridge::client::BridgeState"*, align 8
  %_28 = alloca i8, align 1
  %_22 = alloca i64*, align 8
  %_13 = alloca %"core::fmt::Arguments", align 8
  %_5 = alloca %"core::fmt::Arguments", align 8
  %_1 = alloca %"[closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]", align 1
  %2 = bitcast %"[closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %_1 to %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]"*
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %_1, metadata !2127, metadata !DIExpression()), !dbg !2130
  store %"proc_macro::bridge::client::BridgeState"* %state, %"proc_macro::bridge::client::BridgeState"** %state.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"** %state.dbg.spill, metadata !2126, metadata !DIExpression()), !dbg !2131
  store i8 1, i8* %_28, align 1, !dbg !2132
  %3 = bitcast %"proc_macro::bridge::client::BridgeState"* %state to i64*, !dbg !2132
  %_3 = load i64, i64* %3, align 8, !dbg !2132, !range !2133, !noundef !27
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
    i64 2, label %bb5
  ], !dbg !2134

bb2:                                              ; preds = %start
  unreachable, !dbg !2132

bb3:                                              ; preds = %start
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h09031697824c4fd0E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_5, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc74 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc239 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb4 unwind label %cleanup, !dbg !2135

bb1:                                              ; preds = %start
  %4 = bitcast %"proc_macro::bridge::client::BridgeState"* %state to %"proc_macro::bridge::client::BridgeState::Connected"*, !dbg !2136
  %bridge = getelementptr inbounds %"proc_macro::bridge::client::BridgeState::Connected", %"proc_macro::bridge::client::BridgeState::Connected"* %4, i32 0, i32 1, !dbg !2136
  store %"proc_macro::bridge::client::Bridge"* %bridge, %"proc_macro::bridge::client::Bridge"** %bridge.dbg.spill, align 8, !dbg !2136
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::Bridge"** %bridge.dbg.spill, metadata !2128, metadata !DIExpression()), !dbg !2137
  store i8 0, i8* %_28, align 1, !dbg !2138
  %5 = bitcast i64** %_22 to %"proc_macro::bridge::client::Bridge"**, !dbg !2138
  store %"proc_macro::bridge::client::Bridge"* %bridge, %"proc_macro::bridge::client::Bridge"** %5, align 8, !dbg !2138
  %6 = load i64*, i64** %_22, align 8, !dbg !2138, !nonnull !27, !align !1193, !noundef !27
  %7 = bitcast i64* %6 to %"proc_macro::bridge::client::Bridge"*, !dbg !2138
; invoke proc_macro::bridge::client::run_client::{{closure}}::{{closure}}::{{closure}}::{{closure}}
  invoke void @"_ZN10proc_macro6bridge6client10run_client28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h534d15f39f4c9324E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0, %"proc_macro::bridge::client::Bridge"* align 8 %7)
          to label %bb7 unwind label %cleanup, !dbg !2138

bb5:                                              ; preds = %start
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h09031697824c4fd0E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_13, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc79 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc239 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb6 unwind label %cleanup, !dbg !2139

bb10:                                             ; preds = %cleanup
  %8 = load i8, i8* %_28, align 1, !dbg !2140, !range !759, !noundef !27
  %9 = trunc i8 %8 to i1, !dbg !2140
  br i1 %9, label %bb9, label %bb8, !dbg !2140

cleanup:                                          ; preds = %bb4, %bb3, %bb1, %bb6, %bb5
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb10

bb6:                                              ; preds = %bb5
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_13, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc177 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup, !dbg !2139

unreachable:                                      ; preds = %bb4, %bb6
  unreachable

bb7:                                              ; preds = %bb1
  ret void, !dbg !2141

bb4:                                              ; preds = %bb3
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_5, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc179 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup, !dbg !2135

bb8:                                              ; preds = %bb9, %bb10
  %15 = bitcast { i8*, i32 }* %1 to i8**, !dbg !2142
  %16 = load i8*, i8** %15, align 8, !dbg !2142
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !2142
  %18 = load i32, i32* %17, align 8, !dbg !2142
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0, !dbg !2142
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1, !dbg !2142
  resume { i8*, i32 } %20, !dbg !2142

bb9:                                              ; preds = %bb10
  br label %bb8, !dbg !2140
}

; <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN115_$LT$core..panic..unwind_safe..AssertUnwindSafe$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$$LP$$RP$$GT$$GT$9call_once17h0f824571ee362855E"(%"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %self) unnamed_addr #1 !dbg !2143 {
start:
  %_3 = alloca %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]", align 8
  %_args = alloca {}, align 1
  call void @llvm.dbg.declare(metadata %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %self, metadata !2155, metadata !DIExpression()), !dbg !2159
  call void @llvm.dbg.declare(metadata {}* %_args, metadata !2156, metadata !DIExpression()), !dbg !2160
  %0 = bitcast %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %self to %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"*, !dbg !2161
  %1 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_3 to i8*, !dbg !2161
  %2 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %0 to i8*, !dbg !2161
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false), !dbg !2161
; call proc_macro::bridge::client::run_client::{{closure}}
  call void @"_ZN10proc_macro6bridge6client10run_client28_$u7b$$u7b$closure$u7d$$u7d$17hebaacc5d58c41ba4E"(%"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]"* %_3), !dbg !2161
  br label %bb1, !dbg !2161

bb1:                                              ; preds = %start
  ret void, !dbg !2162
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h4602960108bdc8f3E"(i64 %kind.0, i64 %kind.1) unnamed_addr #0 !dbg !2163 {
start:
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0
  store i64 %kind.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1
  store i64 %kind.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !2194, metadata !DIExpression()), !dbg !2195
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !2196
  store i64 %kind.0, i64* %3, align 8, !dbg !2196
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2196
  store i64 %kind.1, i64* %4, align 8, !dbg !2196
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !2197
  %6 = load i64, i64* %5, align 8, !dbg !2197
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2197
  %8 = load i64, i64* %7, align 8, !dbg !2197, !range !2198, !noundef !27
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !2197
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !2197
  ret { i64, i64 } %10, !dbg !2197
}

; <proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN127_$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$T$GT$..replace..PutBackOnDrop$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb7b021722ea6eeaeE"(%"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* align 8 %self) unnamed_addr #1 !dbg !2199 {
start:
  %self.dbg.spill5 = alloca %"core::option::Option<proc_macro::bridge::client::BridgeState>"*, align 8
  %self.dbg.spill3 = alloca %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"*, align 8
  %self.dbg.spill = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"*, align 8
  %_x = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %_13 = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %old = alloca %"proc_macro::bridge::client::BridgeState", align 8
  %_8 = alloca %"core::option::Option<proc_macro::bridge::client::BridgeState>", align 8
  %self1 = alloca %"core::option::Option<proc_macro::bridge::client::BridgeState>", align 8
  %val = alloca %"proc_macro::bridge::client::BridgeState", align 8
  store %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* %self, %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"** %self.dbg.spill, metadata !2205, metadata !DIExpression()), !dbg !2206
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %val, metadata !2207, metadata !DIExpression()), !dbg !2216
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %val, metadata !2218, metadata !DIExpression()), !dbg !2229
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %self1, metadata !2214, metadata !DIExpression()), !dbg !2231
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %old, metadata !2226, metadata !DIExpression()), !dbg !2232
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %_x, metadata !2233, metadata !DIExpression()), !dbg !2237
  %0 = bitcast %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* %self to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"**, !dbg !2230
  %_6 = load %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %0, align 8, !dbg !2230, !nonnull !27, !align !1193, !noundef !27
  %self2 = bitcast %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %_6 to %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"*, !dbg !2230
  store %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"* %self2, %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"** %self.dbg.spill3, align 8, !dbg !2230
  call void @llvm.dbg.declare(metadata %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"** %self.dbg.spill3, metadata !2225, metadata !DIExpression()), !dbg !2229
  %self4 = getelementptr inbounds %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>", %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* %self, i32 0, i32 1, !dbg !2217
  store %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %self4, %"core::option::Option<proc_macro::bridge::client::BridgeState>"** %self.dbg.spill5, align 8, !dbg !2217
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::client::BridgeState>"** %self.dbg.spill5, metadata !2239, metadata !DIExpression()), !dbg !2245
  %1 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %_8 to i64*, !dbg !2245
  store i64 3, i64* %1, align 8, !dbg !2245
; call core::mem::replace
  call void @_ZN4core3mem7replace17h9cc864aff5afd957E(%"core::option::Option<proc_macro::bridge::client::BridgeState>"* sret(%"core::option::Option<proc_macro::bridge::client::BridgeState>") %self1, %"core::option::Option<proc_macro::bridge::client::BridgeState>"* align 8 %self4, %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %_8), !dbg !2245
  br label %bb1, !dbg !2245

bb1:                                              ; preds = %start
  %2 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %self1 to i64*, !dbg !2231
  %3 = load i64, i64* %2, align 8, !dbg !2231, !range !923, !noundef !27
  %4 = sub i64 %3, 3, !dbg !2231
  %5 = icmp eq i64 %4, 0, !dbg !2231
  %_9 = select i1 %5, i64 0, i64 1, !dbg !2231
  switch i64 %_9, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ], !dbg !2231

bb3:                                              ; preds = %bb1
  unreachable, !dbg !2231

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc236 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc182 to %"core::panic::location::Location"*)) #18, !dbg !2231
  unreachable, !dbg !2231

bb4:                                              ; preds = %bb1
  %6 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %self1 to %"core::option::Option<proc_macro::bridge::client::BridgeState>::Some"*, !dbg !2231
  %7 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>::Some"* %6 to %"proc_macro::bridge::client::BridgeState"*, !dbg !2231
  %8 = bitcast %"proc_macro::bridge::client::BridgeState"* %val to i8*, !dbg !2231
  %9 = bitcast %"proc_macro::bridge::client::BridgeState"* %7 to i8*, !dbg !2231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 80, i1 false), !dbg !2231
  %10 = bitcast %"proc_macro::bridge::client::BridgeState"* %_13 to i8*, !dbg !2229
  %11 = bitcast %"proc_macro::bridge::client::BridgeState"* %val to i8*, !dbg !2229
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 80, i1 false), !dbg !2229
; call core::cell::Cell<T>::replace
  call void @"_ZN4core4cell13Cell$LT$T$GT$7replace17h0488958ed4ddb4e1E"(%"proc_macro::bridge::client::BridgeState"* sret(%"proc_macro::bridge::client::BridgeState") %old, %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"* align 8 %self2, %"proc_macro::bridge::client::BridgeState"* %_13), !dbg !2229
  br label %bb5, !dbg !2229

bb5:                                              ; preds = %bb4
  %12 = bitcast %"proc_macro::bridge::client::BridgeState"* %_x to i8*, !dbg !2232
  %13 = bitcast %"proc_macro::bridge::client::BridgeState"* %old to i8*, !dbg !2232
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 80, i1 false), !dbg !2232
; call core::ptr::drop_in_place<proc_macro::bridge::client::BridgeState>
  call void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..BridgeState$GT$17haf8a3b6b03ea9458E"(%"proc_macro::bridge::client::BridgeState"* %_x), !dbg !2237
  br label %bb6, !dbg !2237

bb6:                                              ; preds = %bb5
  ret void, !dbg !2246
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17hafc0c5ca4454b3a5E"(%"alloc::vec::Vec<u8>"* align 8 %self, i8* %0, i8* %1) unnamed_addr #1 !dbg !2247 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %iterator = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iterator, i32 0, i32 0
  store i8* %0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iterator, i32 0, i32 1
  store i8* %1, i8** %3, align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !2264, metadata !DIExpression()), !dbg !2268
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %iterator, metadata !2265, metadata !DIExpression()), !dbg !2269
; call core::slice::iter::Iter<T>::as_slice
  %4 = call { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17ha674f49ca7c71770E"({ i8*, i8* }* align 8 %iterator), !dbg !2270
  %slice.0 = extractvalue { [0 x i8]*, i64 } %4, 0, !dbg !2270
  %slice.1 = extractvalue { [0 x i8]*, i64 } %4, 1, !dbg !2270
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !2270
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !2270
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !2270
  store i64 %slice.1, i64* %6, align 8, !dbg !2270
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !2266, metadata !DIExpression()), !dbg !2271
  br label %bb1, !dbg !2270

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::append_elements
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17hbbe26f4fc28a9322E"(%"alloc::vec::Vec<u8>"* align 8 %self, [0 x i8]* %slice.0, i64 %slice.1), !dbg !2272
  br label %bb2, !dbg !2272

bb2:                                              ; preds = %bb1
  ret void, !dbg !2273
}

; f128_internal::f128_t::f128::parse
; Function Attrs: nonlazybind uwtable
define internal void @_ZN13f128_internal6f128_t4f1285parse17hf25b7b511a1394fcE(%"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>") %0, [0 x i8]* align 1 %1, i64 %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2274 {
start:
  %3 = alloca { i64, i64 }, align 8
  %val.dbg.spill = alloca { i8*, i64 }, align 8
  %4 = alloca { i8*, i32 }, align 8
  %_11 = alloca %"f128_internal::f128_t::f128", align 1
  %_9 = alloca %"core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>::Err", align 8
  %residual = alloca %"core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>::Err", align 8
  %_4 = alloca %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", align 8
  %_3 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>", align 8
  %cstr = alloca { i8*, i64 }, align 8
  %s = alloca { [0 x i8]*, i64 }, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s, metadata !2309, metadata !DIExpression()), !dbg !2341
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %cstr, metadata !2310, metadata !DIExpression()), !dbg !2342
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>::Err"* %residual, metadata !2319, metadata !DIExpression()), !dbg !2343
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %7 = invoke { [0 x i8]*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h070ed05afd8b3047E"({ [0 x i8]*, i64 }* align 8 %s)
          to label %bb1 unwind label %cleanup, !dbg !2344

bb14:                                             ; preds = %bb13, %bb16, %cleanup
  br label %bb15, !dbg !2345

cleanup:                                          ; preds = %bb10, %bb2, %bb1, %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb14

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { [0 x i8]*, i64 } %7, 0, !dbg !2344
  %_5.1 = extractvalue { [0 x i8]*, i64 } %7, 1, !dbg !2344
; invoke alloc::ffi::c_str::CString::new
  invoke void @_ZN5alloc3ffi5c_str7CString3new17h0cecf027ce58c664E(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>") %_4, [0 x i8]* align 1 %_5.0, i64 %_5.1)
          to label %bb2 unwind label %cleanup, !dbg !2346

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  invoke void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53ef9a15ff82a4bE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>") %_3, %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_4)
          to label %bb3 unwind label %cleanup, !dbg !2346

bb3:                                              ; preds = %bb2
  %13 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>"* %_3 to i64*, !dbg !2346
  %_7 = load i64, i64* %13, align 8, !dbg !2346, !range !2078, !noundef !27
  switch i64 %_7, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ], !dbg !2346

bb5:                                              ; preds = %bb3
  unreachable, !dbg !2346

bb4:                                              ; preds = %bb3
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>"* %_3 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>::Continue"*, !dbg !2346
  %15 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>::Continue"* %14, i32 0, i32 1, !dbg !2346
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %15, i32 0, i32 0, !dbg !2346
  %val.0 = load i8*, i8** %16, align 8, !dbg !2346, !nonnull !27, !align !608, !noundef !27
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %15, i32 0, i32 1, !dbg !2346
  %val.1 = load i64, i64* %17, align 8, !dbg !2346
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill, i32 0, i32 0, !dbg !2346
  store i8* %val.0, i8** %18, align 8, !dbg !2346
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill, i32 0, i32 1, !dbg !2346
  store i64 %val.1, i64* %19, align 8, !dbg !2346
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill, metadata !2339, metadata !DIExpression()), !dbg !2347
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %cstr, i32 0, i32 0, !dbg !2347
  store i8* %val.0, i8** %20, align 8, !dbg !2347
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %cstr, i32 0, i32 1, !dbg !2347
  store i64 %val.1, i64* %21, align 8, !dbg !2347
; invoke <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
  %22 = invoke { %"core::ffi::c_str::CStr"*, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h56c45477f0e1c3baE"({ i8*, i64 }* align 8 %cstr)
          to label %bb8 unwind label %cleanup2, !dbg !2348

bb6:                                              ; preds = %bb3
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>"* %_3 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>::Break"*, !dbg !2349
  %24 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>::Break"* %23, i32 0, i32 1, !dbg !2349
  %25 = bitcast %"core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>::Err"* %residual to i8*, !dbg !2349
  %26 = bitcast %"core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>::Err"* %24 to i8*, !dbg !2349
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 32, i1 false), !dbg !2349
  %27 = bitcast %"core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>::Err"* %_9 to i8*, !dbg !2343
  %28 = bitcast %"core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>::Err"* %residual to i8*, !dbg !2343
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 32, i1 false), !dbg !2343
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  invoke void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h848244b9b10820a9E"(%"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>") %0, %"core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>::Err"* %_9, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc184 to %"core::panic::location::Location"*))
          to label %bb7 unwind label %cleanup1, !dbg !2350

bb16:                                             ; preds = %cleanup1
  br label %bb14, !dbg !2351

cleanup1:                                         ; preds = %bb6
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  %31 = extractvalue { i8*, i32 } %29, 1
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %30, i8** %32, align 8
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %31, i32* %33, align 8
  br label %bb16

bb7:                                              ; preds = %bb6
  br label %bb12, !dbg !2345

bb12:                                             ; preds = %bb11, %bb7
  ret void, !dbg !2352

bb13:                                             ; preds = %cleanup2
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h60597de3fa84e837E"({ i8*, i64 }* %cstr) #19
          to label %bb14 unwind label %abort, !dbg !2345

cleanup2:                                         ; preds = %bb9, %bb8, %bb4
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  %36 = extractvalue { i8*, i32 } %34, 1
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %35, i8** %37, align 8
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %36, i32* %38, align 8
  br label %bb13

bb8:                                              ; preds = %bb4
  %_14.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %22, 0, !dbg !2348
  %_14.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %22, 1, !dbg !2348
; invoke core::ffi::c_str::CStr::as_ptr
  %_12 = invoke i8* @_ZN4core3ffi5c_str4CStr6as_ptr17h49ea30813ca2b85dE(%"core::ffi::c_str::CStr"* align 1 %_14.0, i64 %_14.1)
          to label %bb9 unwind label %cleanup2, !dbg !2348

bb9:                                              ; preds = %bb8
  %39 = invoke { i64, i64 } @strtoflt128_f(i8* %_12)
          to label %bb10 unwind label %cleanup2, !dbg !2353

bb10:                                             ; preds = %bb9
  store { i64, i64 } %39, { i64, i64 }* %3, align 8, !dbg !2353
  %40 = bitcast %"f128_internal::f128_t::f128"* %_11 to i8*, !dbg !2353
  %41 = bitcast { i64, i64 }* %3 to i8*, !dbg !2353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %40, i8* align 8 %41, i64 16, i1 false), !dbg !2353
  %42 = bitcast %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>"* %0 to %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>::Ok"*, !dbg !2354
  %43 = getelementptr inbounds %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>::Ok", %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>::Ok"* %42, i32 0, i32 1, !dbg !2354
  %44 = bitcast %"f128_internal::f128_t::f128"* %43 to i8*, !dbg !2354
  %45 = bitcast %"f128_internal::f128_t::f128"* %_11 to i8*, !dbg !2354
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %45, i64 16, i1 false), !dbg !2354
  %46 = bitcast %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>"* %0 to i8*, !dbg !2354
  store i8 0, i8* %46, align 8, !dbg !2354
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h60597de3fa84e837E"({ i8*, i64 }* %cstr)
          to label %bb11 unwind label %cleanup, !dbg !2345

abort:                                            ; preds = %bb13
  %47 = landingpad { i8*, i32 }
          cleanup, !dbg !2355
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !2355
  unreachable, !dbg !2355

bb11:                                             ; preds = %bb10
  br label %bb12, !dbg !2345

bb15:                                             ; preds = %bb14
  %48 = bitcast { i8*, i32 }* %4 to i8**, !dbg !2355
  %49 = load i8*, i8** %48, align 8, !dbg !2355
  %50 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1, !dbg !2355
  %51 = load i32, i32* %50, align 8, !dbg !2355
  %52 = insertvalue { i8*, i32 } undef, i8* %49, 0, !dbg !2355
  %53 = insertvalue { i8*, i32 } %52, i32 %51, 1, !dbg !2355
  resume { i8*, i32 } %53, !dbg !2355
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h848244b9b10820a9E"(%"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>") %0, %"core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>::Err"* %residual, %"core::panic::location::Location"* align 8 %1) unnamed_addr #0 !dbg !2356 {
start:
  %_4 = alloca %"alloc::ffi::c_str::NulError", align 8
  %_3 = alloca %"alloc::ffi::c_str::NulError", align 8
  %e = alloca %"alloc::ffi::c_str::NulError", align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>::Err"* %residual, metadata !2362, metadata !DIExpression()), !dbg !2367
  call void @llvm.dbg.declare(metadata %"alloc::ffi::c_str::NulError"* %e, metadata !2363, metadata !DIExpression()), !dbg !2368
  %2 = bitcast %"core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>::Err"* %residual to %"alloc::ffi::c_str::NulError"*, !dbg !2369
  %3 = bitcast %"alloc::ffi::c_str::NulError"* %e to i8*, !dbg !2369
  %4 = bitcast %"alloc::ffi::c_str::NulError"* %2 to i8*, !dbg !2369
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false), !dbg !2369
  %5 = bitcast %"alloc::ffi::c_str::NulError"* %_4 to i8*, !dbg !2370
  %6 = bitcast %"alloc::ffi::c_str::NulError"* %e to i8*, !dbg !2370
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 32, i1 false), !dbg !2370
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hb839e2439fd86ed6E"(%"alloc::ffi::c_str::NulError"* sret(%"alloc::ffi::c_str::NulError") %_3, %"alloc::ffi::c_str::NulError"* %_4), !dbg !2371
  br label %bb1, !dbg !2371

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>"* %0 to %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>::Err"*, !dbg !2372
  %8 = getelementptr inbounds %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>::Err", %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>::Err"* %7, i32 0, i32 1, !dbg !2372
  %9 = bitcast %"alloc::ffi::c_str::NulError"* %8 to i8*, !dbg !2372
  %10 = bitcast %"alloc::ffi::c_str::NulError"* %_3 to i8*, !dbg !2372
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 32, i1 false), !dbg !2372
  %11 = bitcast %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>"* %0 to i8*, !dbg !2372
  store i8 1, i8* %11, align 8, !dbg !2372
  ret void, !dbg !2373
}

; <T as core::any::Any>::type_id
; Function Attrs: nonlazybind uwtable
define internal i64 @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h85c59b930058df08E"(%"alloc::string::String"* align 8 %self) unnamed_addr #1 !dbg !2374 {
start:
  %self.dbg.spill = alloca %"alloc::string::String"*, align 8
  store %"alloc::string::String"* %self, %"alloc::string::String"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill, metadata !2384, metadata !DIExpression()), !dbg !2385
; call core::any::TypeId::of
  %0 = call i64 @_ZN4core3any6TypeId2of17hf6117aa77346b9f4E(), !dbg !2386
  br label %bb1, !dbg !2386

bb1:                                              ; preds = %start
  ret i64 %0, !dbg !2387
}

; std::sys_common::backtrace::__rust_end_short_backtrace
; Function Attrs: noinline noreturn nonlazybind uwtable
define internal void @_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17h24620aa2f97a02d9E(%"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]"* %f) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2388 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %dummy.dbg.spill = alloca {}, align 1
  %result.dbg.spill = alloca { [0 x i8] }, align 1
  %_2 = alloca %"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]", align 8
  call void @llvm.dbg.declare(metadata { [0 x i8] }* %result.dbg.spill, metadata !2400, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.declare(metadata %"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]"* %f, metadata !2399, metadata !DIExpression()), !dbg !2407
  call void @llvm.dbg.declare(metadata {}* %dummy.dbg.spill, metadata !2408, metadata !DIExpression()), !dbg !2416
  %1 = bitcast %"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]"* %_2 to i8*, !dbg !2418
  %2 = bitcast %"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]"* %f to i8*, !dbg !2418
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false), !dbg !2418
; call std::panicking::begin_panic::{{closure}}
  call void @"_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17h9299bb9144d5d9faE"(%"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]"* %_2) #18, !dbg !2418
  br label %bb1, !dbg !2418

bb1:                                              ; preds = %start
  call void asm sideeffect "", "r,~{memory}"({}* undef), !dbg !2416, !srcloc !2419
  br label %bb4, !dbg !2416

bb4:                                              ; preds = %bb1
  call void @llvm.trap(), !dbg !2420
  unreachable, !dbg !2420

bb2:                                              ; No predecessors!
  br label %bb3, !dbg !2421

bb3:                                              ; preds = %bb2
  %3 = bitcast { i8*, i32 }* %0 to i8**, !dbg !2422
  %4 = load i8*, i8** %3, align 8, !dbg !2422
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !2422
  %6 = load i32, i32* %5, align 8, !dbg !2422
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0, !dbg !2422
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1, !dbg !2422
  resume { i8*, i32 } %8, !dbg !2422
}

; std::io::error::repr_bitpacked::decode_repr
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std2io5error14repr_bitpacked11decode_repr17h9f34d0bc13560ddeE(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* sret(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>") %0, i8* %ptr) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2423 {
start:
  %code.dbg.spill = alloca i32, align 4
  %x.dbg.spill = alloca i8, align 1
  %kind_bits.dbg.spill = alloca i32, align 4
  %ptr.dbg.spill12 = alloca %"std::io::error::SimpleMessage"*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %self.dbg.spill9 = alloca i8*, align 8
  %custom.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill4 = alloca {}*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %2 = alloca { i8*, i32 }, align 8
  %self.dbg.spill2 = alloca {}*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %make_custom.dbg.spill = alloca %"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]", align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %_37 = alloca i8, align 1
  %_34 = alloca i64*, align 8
  %self1 = alloca i64*, align 8
  %f = alloca i64*, align 8
  %self = alloca i8, align 1
  %kind = alloca i8, align 1
  %bits = alloca i64, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2431, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.declare(metadata %"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]"* %make_custom.dbg.spill, metadata !2432, metadata !DIExpression()), !dbg !2447
  call void @llvm.dbg.declare(metadata i64* %bits, metadata !2433, metadata !DIExpression()), !dbg !2448
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !2439, metadata !DIExpression()), !dbg !2449
  call void @llvm.dbg.declare(metadata i8* %self, metadata !2450, metadata !DIExpression()), !dbg !2479
  call void @llvm.dbg.declare(metadata i64** %f, metadata !2473, metadata !DIExpression()), !dbg !2479
  call void @llvm.dbg.declare(metadata i64** %self1, metadata !2481, metadata !DIExpression()), !dbg !2495
  store i8 1, i8* %_37, align 1, !dbg !2497
  store i8* %ptr, i8** %self.dbg.spill, align 8, !dbg !2498
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2499, metadata !DIExpression()), !dbg !2505
  %_38 = bitcast i8* %ptr to {}*, !dbg !2505
  store {}* %_38, {}** %self.dbg.spill2, align 8, !dbg !2505
  call void @llvm.dbg.declare(metadata {}** %self.dbg.spill2, metadata !2506, metadata !DIExpression()), !dbg !2512
  %3 = bitcast i64* %bits to {}**, !dbg !2512
  store {}* %_38, {}** %3, align 8, !dbg !2512
  br label %bb14, !dbg !2512

bb14:                                             ; preds = %start
  %_7 = load i64, i64* %bits, align 8, !dbg !2513
  %_6 = and i64 %_7, 3, !dbg !2513
  switch i64 %_6, label %bb1 [
    i64 2, label %bb2
    i64 3, label %bb3
    i64 0, label %bb5
    i64 1, label %bb6
  ], !dbg !2514

bb1:                                              ; preds = %bb14
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [40 x i8] }>* @alloc185 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc187 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup, !dbg !2515

bb2:                                              ; preds = %bb14
  %_11 = load i64, i64* %bits, align 8, !dbg !2516
  %_9 = ashr i64 %_11, 32, !dbg !2517
  %code = trunc i64 %_9 to i32, !dbg !2517
  store i32 %code, i32* %code.dbg.spill, align 4, !dbg !2517
  call void @llvm.dbg.declare(metadata i32* %code.dbg.spill, metadata !2435, metadata !DIExpression()), !dbg !2518
  %4 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os"*, !dbg !2519
  %5 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os"* %4, i32 0, i32 1, !dbg !2519
  store i32 %code, i32* %5, align 4, !dbg !2519
  %6 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*, !dbg !2519
  store i8 0, i8* %6, align 8, !dbg !2519
  br label %bb8, !dbg !2520

bb3:                                              ; preds = %bb14
  %_15 = load i64, i64* %bits, align 8, !dbg !2521
  %_14 = lshr i64 %_15, 32, !dbg !2522
  %kind_bits = trunc i64 %_14 to i32, !dbg !2522
  store i32 %kind_bits, i32* %kind_bits.dbg.spill, align 4, !dbg !2522
  call void @llvm.dbg.declare(metadata i32* %kind_bits.dbg.spill, metadata !2437, metadata !DIExpression()), !dbg !2523
; invoke std::io::error::repr_bitpacked::kind_from_prim
  %7 = invoke i8 @_ZN3std2io5error14repr_bitpacked14kind_from_prim17hb64baca91718389bE(i32 %kind_bits)
          to label %bb4 unwind label %cleanup, !dbg !2480, !range !2524

bb5:                                              ; preds = %bb14
  store i8* %ptr, i8** %self.dbg.spill9, align 8, !dbg !2496
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill9, metadata !2525, metadata !DIExpression()), !dbg !2533
  store i8* %ptr, i8** %self.dbg.spill10, align 8, !dbg !2533
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !2534, metadata !DIExpression()), !dbg !2538
  %_47 = bitcast i8* %ptr to {}*, !dbg !2538
  %ptr11 = bitcast {}* %_47 to %"std::io::error::SimpleMessage"*, !dbg !2533
  store %"std::io::error::SimpleMessage"* %ptr11, %"std::io::error::SimpleMessage"** %ptr.dbg.spill12, align 8, !dbg !2533
  call void @llvm.dbg.declare(metadata %"std::io::error::SimpleMessage"** %ptr.dbg.spill12, metadata !2540, metadata !DIExpression()), !dbg !2546
  %8 = bitcast i64** %self1 to %"std::io::error::SimpleMessage"**, !dbg !2546
  store %"std::io::error::SimpleMessage"* %ptr11, %"std::io::error::SimpleMessage"** %8, align 8, !dbg !2546
  %9 = bitcast i64** %self1 to %"std::io::error::SimpleMessage"**, !dbg !2495
  %_51 = load %"std::io::error::SimpleMessage"*, %"std::io::error::SimpleMessage"** %9, align 8, !dbg !2495
  %10 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage"*, !dbg !2548
  %11 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage"* %10, i32 0, i32 1, !dbg !2548
  store %"std::io::error::SimpleMessage"* %_51, %"std::io::error::SimpleMessage"** %11, align 8, !dbg !2548
  %12 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*, !dbg !2548
  store i8 2, i8* %12, align 8, !dbg !2548
  br label %bb8, !dbg !2549

bb6:                                              ; preds = %bb14
  store i8* %ptr, i8** %self.dbg.spill3, align 8, !dbg !2550
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !2551, metadata !DIExpression()), !dbg !2555
  %_52 = bitcast i8* %ptr to {}*, !dbg !2555
  store {}* %_52, {}** %self.dbg.spill4, align 8, !dbg !2555
  call void @llvm.dbg.declare(metadata {}** %self.dbg.spill4, metadata !2556, metadata !DIExpression()), !dbg !2564
  %self5 = bitcast {}* %_52 to i8*, !dbg !2564
  store i8* %self5, i8** %self.dbg.spill6, align 8, !dbg !2564
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !2565, metadata !DIExpression()), !dbg !2570
  store i8* %self5, i8** %self.dbg.spill7, align 8, !dbg !2570
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !2571, metadata !DIExpression()), !dbg !2576
  %13 = getelementptr i8, i8* %self5, i64 -1, !dbg !2576
  store i8* %13, i8** %1, align 8, !dbg !2576
  %_60 = load i8*, i8** %1, align 8, !dbg !2576
  br label %bb20, !dbg !2576

bb13:                                             ; preds = %cleanup
  %14 = load i8, i8* %_37, align 1, !dbg !2578, !range !759, !noundef !27
  %15 = trunc i8 %14 to i1, !dbg !2578
  br i1 %15, label %bb12, label %bb10, !dbg !2578

cleanup:                                          ; preds = %bb15, %bb3, %bb20, %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb13

unreachable:                                      ; preds = %bb1
  unreachable

bb20:                                             ; preds = %bb6
  store i8* %_60, i8** %self.dbg.spill8, align 8, !dbg !2576
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !2579, metadata !DIExpression()), !dbg !2587
  %custom = bitcast i8* %_60 to %"std::io::error::Custom"*, !dbg !2587
  store %"std::io::error::Custom"* %custom, %"std::io::error::Custom"** %custom.dbg.spill, align 8, !dbg !2587
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %custom.dbg.spill, metadata !2441, metadata !DIExpression()), !dbg !2588
  store i8 0, i8* %_37, align 1, !dbg !2589
  %21 = bitcast i64** %_34 to %"std::io::error::Custom"**, !dbg !2589
  store %"std::io::error::Custom"* %custom, %"std::io::error::Custom"** %21, align 8, !dbg !2589
  %22 = load i64*, i64** %_34, align 8, !dbg !2589
  %23 = bitcast i64* %22 to %"std::io::error::Custom"*, !dbg !2589
; invoke <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{{closure}}
  %_32 = invoke align 8 %"std::io::error::Custom"* @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop28_$u7b$$u7b$closure$u7d$$u7d$17h298387e370db4930E"(%"std::io::error::Custom"* %23)
          to label %bb7 unwind label %cleanup, !dbg !2589

bb7:                                              ; preds = %bb20
  %24 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"*, !dbg !2590
  %25 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"* %24, i32 0, i32 1, !dbg !2590
  store %"std::io::error::Custom"* %_32, %"std::io::error::Custom"** %25, align 8, !dbg !2590
  %26 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*, !dbg !2590
  store i8 3, i8* %26, align 8, !dbg !2590
  br label %bb8, !dbg !2591

bb8:                                              ; preds = %bb2, %bb19, %bb5, %bb7
  %27 = load i8, i8* %_37, align 1, !dbg !2578, !range !759, !noundef !27
  %28 = trunc i8 %27 to i1, !dbg !2578
  br i1 %28, label %bb11, label %bb9, !dbg !2578

bb4:                                              ; preds = %bb3
  store i8 %7, i8* %self, align 1, !dbg !2480
  store i64* %bits, i64** %f, align 8, !dbg !2592
  %29 = load i8, i8* %self, align 1, !dbg !2479, !range !2524, !noundef !27
  %30 = sub i8 %29, 41, !dbg !2479
  %31 = icmp eq i8 %30, 0, !dbg !2479
  %_40 = select i1 %31, i64 0, i64 1, !dbg !2479
  switch i64 %_40, label %bb16 [
    i64 0, label %bb15
    i64 1, label %bb17
  ], !dbg !2479

bb16:                                             ; preds = %bb4
  unreachable, !dbg !2479

bb15:                                             ; preds = %bb4
  %_42 = load i64*, i64** %f, align 8, !dbg !2479, !nonnull !27, !align !1193, !noundef !27
; invoke std::io::error::repr_bitpacked::decode_repr::{{closure}}
  %32 = invoke i8 @"_ZN3std2io5error14repr_bitpacked11decode_repr28_$u7b$$u7b$closure$u7d$$u7d$17hf8e0e9c8e659377bE"(i64* align 8 %_42)
          to label %bb18 unwind label %cleanup, !dbg !2479, !range !2593

bb17:                                             ; preds = %bb4
  %x = load i8, i8* %self, align 1, !dbg !2479, !range !2593, !noundef !27
  store i8 %x, i8* %x.dbg.spill, align 1, !dbg !2479
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !2474, metadata !DIExpression()), !dbg !2594
  store i8 %x, i8* %kind, align 1, !dbg !2594
  br label %bb19, !dbg !2479

bb19:                                             ; preds = %bb18, %bb17
  %_21 = load i8, i8* %kind, align 1, !dbg !2595, !range !2593, !noundef !27
  %33 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple"*, !dbg !2596
  %34 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple"* %33, i32 0, i32 1, !dbg !2596
  store i8 %_21, i8* %34, align 1, !dbg !2596
  %35 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*, !dbg !2596
  store i8 1, i8* %35, align 8, !dbg !2596
  br label %bb8, !dbg !2597

bb18:                                             ; preds = %bb15
  store i8 %32, i8* %kind, align 1, !dbg !2479
  br label %bb19, !dbg !2479

bb10:                                             ; preds = %bb12, %bb13
  %36 = bitcast { i8*, i32 }* %2 to i8**, !dbg !2598
  %37 = load i8*, i8** %36, align 8, !dbg !2598
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !2598
  %39 = load i32, i32* %38, align 8, !dbg !2598
  %40 = insertvalue { i8*, i32 } undef, i8* %37, 0, !dbg !2598
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1, !dbg !2598
  resume { i8*, i32 } %41, !dbg !2598

bb12:                                             ; preds = %bb13
  br label %bb10, !dbg !2578

bb9:                                              ; preds = %bb11, %bb8
  ret void, !dbg !2599

bb11:                                             ; preds = %bb8
  br label %bb9, !dbg !2578
}

; std::io::error::repr_bitpacked::decode_repr::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN3std2io5error14repr_bitpacked11decode_repr28_$u7b$$u7b$closure$u7d$$u7d$17hf8e0e9c8e659377bE"(i64* align 8 %_1) unnamed_addr #0 !dbg !2600 {
start:
  %_unsafe_arg.dbg.spill = alloca %"core::fmt::UnsafeArg", align 1
  %_1.dbg.spill = alloca i64*, align 8
  store i64* %_1, i64** %_1.dbg.spill, align 8
  %0 = load i64*, i64** %_1.dbg.spill, align 8, !nonnull !27, !align !1193, !noundef !27
  call void @llvm.dbg.declare(metadata i64** %_1.dbg.spill, metadata !2604, metadata !DIExpression(DW_OP_deref)), !dbg !2605
  call void @llvm.dbg.declare(metadata %"core::fmt::UnsafeArg"* %_unsafe_arg.dbg.spill, metadata !2606, metadata !DIExpression()), !dbg !2726
  unreachable, !dbg !2730
}

; std::io::error::repr_bitpacked::kind_from_prim
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN3std2io5error14repr_bitpacked14kind_from_prim17hb64baca91718389bE(i32 %0) unnamed_addr #0 !dbg !2734 {
start:
  %v.dbg.spill40 = alloca i32*, align 8
  %v.dbg.spill39 = alloca i32*, align 8
  %v.dbg.spill38 = alloca i32*, align 8
  %v.dbg.spill37 = alloca i32*, align 8
  %v.dbg.spill36 = alloca i32*, align 8
  %v.dbg.spill35 = alloca i32*, align 8
  %v.dbg.spill34 = alloca i32*, align 8
  %v.dbg.spill33 = alloca i32*, align 8
  %v.dbg.spill32 = alloca i32*, align 8
  %v.dbg.spill31 = alloca i32*, align 8
  %v.dbg.spill30 = alloca i32*, align 8
  %v.dbg.spill29 = alloca i32*, align 8
  %v.dbg.spill28 = alloca i32*, align 8
  %v.dbg.spill27 = alloca i32*, align 8
  %v.dbg.spill26 = alloca i32*, align 8
  %v.dbg.spill25 = alloca i32*, align 8
  %v.dbg.spill24 = alloca i32*, align 8
  %v.dbg.spill23 = alloca i32*, align 8
  %v.dbg.spill22 = alloca i32*, align 8
  %v.dbg.spill21 = alloca i32*, align 8
  %v.dbg.spill20 = alloca i32*, align 8
  %v.dbg.spill19 = alloca i32*, align 8
  %v.dbg.spill18 = alloca i32*, align 8
  %v.dbg.spill17 = alloca i32*, align 8
  %v.dbg.spill16 = alloca i32*, align 8
  %v.dbg.spill15 = alloca i32*, align 8
  %v.dbg.spill14 = alloca i32*, align 8
  %v.dbg.spill13 = alloca i32*, align 8
  %v.dbg.spill12 = alloca i32*, align 8
  %v.dbg.spill11 = alloca i32*, align 8
  %v.dbg.spill10 = alloca i32*, align 8
  %v.dbg.spill9 = alloca i32*, align 8
  %v.dbg.spill8 = alloca i32*, align 8
  %v.dbg.spill7 = alloca i32*, align 8
  %v.dbg.spill6 = alloca i32*, align 8
  %v.dbg.spill5 = alloca i32*, align 8
  %v.dbg.spill4 = alloca i32*, align 8
  %v.dbg.spill3 = alloca i32*, align 8
  %v.dbg.spill2 = alloca i32*, align 8
  %v.dbg.spill1 = alloca i32*, align 8
  %v.dbg.spill = alloca i32*, align 8
  %1 = alloca i8, align 1
  %ek = alloca i32, align 4
  store i32 %0, i32* %ek, align 4
  call void @llvm.dbg.declare(metadata i32* %ek, metadata !2738, metadata !DIExpression()), !dbg !2863
  store i32* %ek, i32** %v.dbg.spill, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill, metadata !2741, metadata !DIExpression()), !dbg !2865
  %_5 = load i32, i32* %ek, align 4, !dbg !2864
  %_4 = icmp eq i32 %_5, 0, !dbg !2864
  br i1 %_4, label %bb1, label %bb2, !dbg !2864

bb2:                                              ; preds = %start
  store i32* %ek, i32** %v.dbg.spill1, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill1, metadata !2745, metadata !DIExpression()), !dbg !2866
  %_10 = load i32, i32* %ek, align 4, !dbg !2864
  %_9 = icmp eq i32 %_10, 1, !dbg !2864
  br i1 %_9, label %bb3, label %bb4, !dbg !2864

bb1:                                              ; preds = %start
  store i8 0, i8* %1, align 1, !dbg !2865
  br label %bb83, !dbg !2864

bb83:                                             ; preds = %bb82, %bb81, %bb79, %bb77, %bb75, %bb73, %bb71, %bb69, %bb67, %bb65, %bb63, %bb61, %bb59, %bb57, %bb55, %bb53, %bb51, %bb49, %bb47, %bb45, %bb43, %bb41, %bb39, %bb37, %bb35, %bb33, %bb31, %bb29, %bb27, %bb25, %bb23, %bb21, %bb19, %bb17, %bb15, %bb13, %bb11, %bb9, %bb7, %bb5, %bb3, %bb1
  %2 = load i8, i8* %1, align 1, !dbg !2867, !range !2524, !noundef !27
  ret i8 %2, !dbg !2867

bb4:                                              ; preds = %bb2
  store i32* %ek, i32** %v.dbg.spill2, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill2, metadata !2748, metadata !DIExpression()), !dbg !2868
  %_15 = load i32, i32* %ek, align 4, !dbg !2864
  %_14 = icmp eq i32 %_15, 2, !dbg !2864
  br i1 %_14, label %bb5, label %bb6, !dbg !2864

bb3:                                              ; preds = %bb2
  store i8 1, i8* %1, align 1, !dbg !2866
  br label %bb83, !dbg !2864

bb6:                                              ; preds = %bb4
  store i32* %ek, i32** %v.dbg.spill3, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill3, metadata !2751, metadata !DIExpression()), !dbg !2869
  %_20 = load i32, i32* %ek, align 4, !dbg !2864
  %_19 = icmp eq i32 %_20, 3, !dbg !2864
  br i1 %_19, label %bb7, label %bb8, !dbg !2864

bb5:                                              ; preds = %bb4
  store i8 2, i8* %1, align 1, !dbg !2868
  br label %bb83, !dbg !2864

bb8:                                              ; preds = %bb6
  store i32* %ek, i32** %v.dbg.spill4, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill4, metadata !2754, metadata !DIExpression()), !dbg !2870
  %_25 = load i32, i32* %ek, align 4, !dbg !2864
  %_24 = icmp eq i32 %_25, 4, !dbg !2864
  br i1 %_24, label %bb9, label %bb10, !dbg !2864

bb7:                                              ; preds = %bb6
  store i8 3, i8* %1, align 1, !dbg !2869
  br label %bb83, !dbg !2864

bb10:                                             ; preds = %bb8
  store i32* %ek, i32** %v.dbg.spill5, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill5, metadata !2757, metadata !DIExpression()), !dbg !2871
  %_30 = load i32, i32* %ek, align 4, !dbg !2864
  %_29 = icmp eq i32 %_30, 5, !dbg !2864
  br i1 %_29, label %bb11, label %bb12, !dbg !2864

bb9:                                              ; preds = %bb8
  store i8 4, i8* %1, align 1, !dbg !2870
  br label %bb83, !dbg !2864

bb12:                                             ; preds = %bb10
  store i32* %ek, i32** %v.dbg.spill6, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill6, metadata !2760, metadata !DIExpression()), !dbg !2872
  %_35 = load i32, i32* %ek, align 4, !dbg !2864
  %_34 = icmp eq i32 %_35, 6, !dbg !2864
  br i1 %_34, label %bb13, label %bb14, !dbg !2864

bb11:                                             ; preds = %bb10
  store i8 5, i8* %1, align 1, !dbg !2871
  br label %bb83, !dbg !2864

bb14:                                             ; preds = %bb12
  store i32* %ek, i32** %v.dbg.spill7, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill7, metadata !2763, metadata !DIExpression()), !dbg !2873
  %_40 = load i32, i32* %ek, align 4, !dbg !2864
  %_39 = icmp eq i32 %_40, 7, !dbg !2864
  br i1 %_39, label %bb15, label %bb16, !dbg !2864

bb13:                                             ; preds = %bb12
  store i8 6, i8* %1, align 1, !dbg !2872
  br label %bb83, !dbg !2864

bb16:                                             ; preds = %bb14
  store i32* %ek, i32** %v.dbg.spill8, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill8, metadata !2766, metadata !DIExpression()), !dbg !2874
  %_45 = load i32, i32* %ek, align 4, !dbg !2864
  %_44 = icmp eq i32 %_45, 8, !dbg !2864
  br i1 %_44, label %bb17, label %bb18, !dbg !2864

bb15:                                             ; preds = %bb14
  store i8 7, i8* %1, align 1, !dbg !2873
  br label %bb83, !dbg !2864

bb18:                                             ; preds = %bb16
  store i32* %ek, i32** %v.dbg.spill9, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill9, metadata !2769, metadata !DIExpression()), !dbg !2875
  %_50 = load i32, i32* %ek, align 4, !dbg !2864
  %_49 = icmp eq i32 %_50, 9, !dbg !2864
  br i1 %_49, label %bb19, label %bb20, !dbg !2864

bb17:                                             ; preds = %bb16
  store i8 8, i8* %1, align 1, !dbg !2874
  br label %bb83, !dbg !2864

bb20:                                             ; preds = %bb18
  store i32* %ek, i32** %v.dbg.spill10, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill10, metadata !2772, metadata !DIExpression()), !dbg !2876
  %_55 = load i32, i32* %ek, align 4, !dbg !2864
  %_54 = icmp eq i32 %_55, 10, !dbg !2864
  br i1 %_54, label %bb21, label %bb22, !dbg !2864

bb19:                                             ; preds = %bb18
  store i8 9, i8* %1, align 1, !dbg !2875
  br label %bb83, !dbg !2864

bb22:                                             ; preds = %bb20
  store i32* %ek, i32** %v.dbg.spill11, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill11, metadata !2775, metadata !DIExpression()), !dbg !2877
  %_60 = load i32, i32* %ek, align 4, !dbg !2864
  %_59 = icmp eq i32 %_60, 11, !dbg !2864
  br i1 %_59, label %bb23, label %bb24, !dbg !2864

bb21:                                             ; preds = %bb20
  store i8 10, i8* %1, align 1, !dbg !2876
  br label %bb83, !dbg !2864

bb24:                                             ; preds = %bb22
  store i32* %ek, i32** %v.dbg.spill12, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill12, metadata !2778, metadata !DIExpression()), !dbg !2878
  %_65 = load i32, i32* %ek, align 4, !dbg !2864
  %_64 = icmp eq i32 %_65, 12, !dbg !2864
  br i1 %_64, label %bb25, label %bb26, !dbg !2864

bb23:                                             ; preds = %bb22
  store i8 11, i8* %1, align 1, !dbg !2877
  br label %bb83, !dbg !2864

bb26:                                             ; preds = %bb24
  store i32* %ek, i32** %v.dbg.spill13, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill13, metadata !2781, metadata !DIExpression()), !dbg !2879
  %_70 = load i32, i32* %ek, align 4, !dbg !2864
  %_69 = icmp eq i32 %_70, 13, !dbg !2864
  br i1 %_69, label %bb27, label %bb28, !dbg !2864

bb25:                                             ; preds = %bb24
  store i8 12, i8* %1, align 1, !dbg !2878
  br label %bb83, !dbg !2864

bb28:                                             ; preds = %bb26
  store i32* %ek, i32** %v.dbg.spill14, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill14, metadata !2784, metadata !DIExpression()), !dbg !2880
  %_75 = load i32, i32* %ek, align 4, !dbg !2864
  %_74 = icmp eq i32 %_75, 14, !dbg !2864
  br i1 %_74, label %bb29, label %bb30, !dbg !2864

bb27:                                             ; preds = %bb26
  store i8 13, i8* %1, align 1, !dbg !2879
  br label %bb83, !dbg !2864

bb30:                                             ; preds = %bb28
  store i32* %ek, i32** %v.dbg.spill15, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill15, metadata !2787, metadata !DIExpression()), !dbg !2881
  %_80 = load i32, i32* %ek, align 4, !dbg !2864
  %_79 = icmp eq i32 %_80, 15, !dbg !2864
  br i1 %_79, label %bb31, label %bb32, !dbg !2864

bb29:                                             ; preds = %bb28
  store i8 14, i8* %1, align 1, !dbg !2880
  br label %bb83, !dbg !2864

bb32:                                             ; preds = %bb30
  store i32* %ek, i32** %v.dbg.spill16, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill16, metadata !2790, metadata !DIExpression()), !dbg !2882
  %_85 = load i32, i32* %ek, align 4, !dbg !2864
  %_84 = icmp eq i32 %_85, 16, !dbg !2864
  br i1 %_84, label %bb33, label %bb34, !dbg !2864

bb31:                                             ; preds = %bb30
  store i8 15, i8* %1, align 1, !dbg !2881
  br label %bb83, !dbg !2864

bb34:                                             ; preds = %bb32
  store i32* %ek, i32** %v.dbg.spill17, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill17, metadata !2793, metadata !DIExpression()), !dbg !2883
  %_90 = load i32, i32* %ek, align 4, !dbg !2864
  %_89 = icmp eq i32 %_90, 17, !dbg !2864
  br i1 %_89, label %bb35, label %bb36, !dbg !2864

bb33:                                             ; preds = %bb32
  store i8 16, i8* %1, align 1, !dbg !2882
  br label %bb83, !dbg !2864

bb36:                                             ; preds = %bb34
  store i32* %ek, i32** %v.dbg.spill18, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill18, metadata !2796, metadata !DIExpression()), !dbg !2884
  %_95 = load i32, i32* %ek, align 4, !dbg !2864
  %_94 = icmp eq i32 %_95, 18, !dbg !2864
  br i1 %_94, label %bb37, label %bb38, !dbg !2864

bb35:                                             ; preds = %bb34
  store i8 17, i8* %1, align 1, !dbg !2883
  br label %bb83, !dbg !2864

bb38:                                             ; preds = %bb36
  store i32* %ek, i32** %v.dbg.spill19, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill19, metadata !2799, metadata !DIExpression()), !dbg !2885
  %_100 = load i32, i32* %ek, align 4, !dbg !2864
  %_99 = icmp eq i32 %_100, 19, !dbg !2864
  br i1 %_99, label %bb39, label %bb40, !dbg !2864

bb37:                                             ; preds = %bb36
  store i8 18, i8* %1, align 1, !dbg !2884
  br label %bb83, !dbg !2864

bb40:                                             ; preds = %bb38
  store i32* %ek, i32** %v.dbg.spill20, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill20, metadata !2802, metadata !DIExpression()), !dbg !2886
  %_105 = load i32, i32* %ek, align 4, !dbg !2864
  %_104 = icmp eq i32 %_105, 20, !dbg !2864
  br i1 %_104, label %bb41, label %bb42, !dbg !2864

bb39:                                             ; preds = %bb38
  store i8 19, i8* %1, align 1, !dbg !2885
  br label %bb83, !dbg !2864

bb42:                                             ; preds = %bb40
  store i32* %ek, i32** %v.dbg.spill21, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill21, metadata !2805, metadata !DIExpression()), !dbg !2887
  %_110 = load i32, i32* %ek, align 4, !dbg !2864
  %_109 = icmp eq i32 %_110, 21, !dbg !2864
  br i1 %_109, label %bb43, label %bb44, !dbg !2864

bb41:                                             ; preds = %bb40
  store i8 20, i8* %1, align 1, !dbg !2886
  br label %bb83, !dbg !2864

bb44:                                             ; preds = %bb42
  store i32* %ek, i32** %v.dbg.spill22, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill22, metadata !2808, metadata !DIExpression()), !dbg !2888
  %_115 = load i32, i32* %ek, align 4, !dbg !2864
  %_114 = icmp eq i32 %_115, 22, !dbg !2864
  br i1 %_114, label %bb45, label %bb46, !dbg !2864

bb43:                                             ; preds = %bb42
  store i8 21, i8* %1, align 1, !dbg !2887
  br label %bb83, !dbg !2864

bb46:                                             ; preds = %bb44
  store i32* %ek, i32** %v.dbg.spill23, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill23, metadata !2811, metadata !DIExpression()), !dbg !2889
  %_120 = load i32, i32* %ek, align 4, !dbg !2864
  %_119 = icmp eq i32 %_120, 23, !dbg !2864
  br i1 %_119, label %bb47, label %bb48, !dbg !2864

bb45:                                             ; preds = %bb44
  store i8 22, i8* %1, align 1, !dbg !2888
  br label %bb83, !dbg !2864

bb48:                                             ; preds = %bb46
  store i32* %ek, i32** %v.dbg.spill24, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill24, metadata !2814, metadata !DIExpression()), !dbg !2890
  %_125 = load i32, i32* %ek, align 4, !dbg !2864
  %_124 = icmp eq i32 %_125, 24, !dbg !2864
  br i1 %_124, label %bb49, label %bb50, !dbg !2864

bb47:                                             ; preds = %bb46
  store i8 23, i8* %1, align 1, !dbg !2889
  br label %bb83, !dbg !2864

bb50:                                             ; preds = %bb48
  store i32* %ek, i32** %v.dbg.spill25, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill25, metadata !2817, metadata !DIExpression()), !dbg !2891
  %_130 = load i32, i32* %ek, align 4, !dbg !2864
  %_129 = icmp eq i32 %_130, 25, !dbg !2864
  br i1 %_129, label %bb51, label %bb52, !dbg !2864

bb49:                                             ; preds = %bb48
  store i8 24, i8* %1, align 1, !dbg !2890
  br label %bb83, !dbg !2864

bb52:                                             ; preds = %bb50
  store i32* %ek, i32** %v.dbg.spill26, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill26, metadata !2820, metadata !DIExpression()), !dbg !2892
  %_135 = load i32, i32* %ek, align 4, !dbg !2864
  %_134 = icmp eq i32 %_135, 26, !dbg !2864
  br i1 %_134, label %bb53, label %bb54, !dbg !2864

bb51:                                             ; preds = %bb50
  store i8 25, i8* %1, align 1, !dbg !2891
  br label %bb83, !dbg !2864

bb54:                                             ; preds = %bb52
  store i32* %ek, i32** %v.dbg.spill27, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill27, metadata !2823, metadata !DIExpression()), !dbg !2893
  %_140 = load i32, i32* %ek, align 4, !dbg !2864
  %_139 = icmp eq i32 %_140, 27, !dbg !2864
  br i1 %_139, label %bb55, label %bb56, !dbg !2864

bb53:                                             ; preds = %bb52
  store i8 26, i8* %1, align 1, !dbg !2892
  br label %bb83, !dbg !2864

bb56:                                             ; preds = %bb54
  store i32* %ek, i32** %v.dbg.spill28, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill28, metadata !2826, metadata !DIExpression()), !dbg !2894
  %_145 = load i32, i32* %ek, align 4, !dbg !2864
  %_144 = icmp eq i32 %_145, 28, !dbg !2864
  br i1 %_144, label %bb57, label %bb58, !dbg !2864

bb55:                                             ; preds = %bb54
  store i8 27, i8* %1, align 1, !dbg !2893
  br label %bb83, !dbg !2864

bb58:                                             ; preds = %bb56
  store i32* %ek, i32** %v.dbg.spill29, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill29, metadata !2829, metadata !DIExpression()), !dbg !2895
  %_150 = load i32, i32* %ek, align 4, !dbg !2864
  %_149 = icmp eq i32 %_150, 29, !dbg !2864
  br i1 %_149, label %bb59, label %bb60, !dbg !2864

bb57:                                             ; preds = %bb56
  store i8 28, i8* %1, align 1, !dbg !2894
  br label %bb83, !dbg !2864

bb60:                                             ; preds = %bb58
  store i32* %ek, i32** %v.dbg.spill30, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill30, metadata !2832, metadata !DIExpression()), !dbg !2896
  %_155 = load i32, i32* %ek, align 4, !dbg !2864
  %_154 = icmp eq i32 %_155, 30, !dbg !2864
  br i1 %_154, label %bb61, label %bb62, !dbg !2864

bb59:                                             ; preds = %bb58
  store i8 29, i8* %1, align 1, !dbg !2895
  br label %bb83, !dbg !2864

bb62:                                             ; preds = %bb60
  store i32* %ek, i32** %v.dbg.spill31, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill31, metadata !2835, metadata !DIExpression()), !dbg !2897
  %_160 = load i32, i32* %ek, align 4, !dbg !2864
  %_159 = icmp eq i32 %_160, 31, !dbg !2864
  br i1 %_159, label %bb63, label %bb64, !dbg !2864

bb61:                                             ; preds = %bb60
  store i8 30, i8* %1, align 1, !dbg !2896
  br label %bb83, !dbg !2864

bb64:                                             ; preds = %bb62
  store i32* %ek, i32** %v.dbg.spill32, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill32, metadata !2838, metadata !DIExpression()), !dbg !2898
  %_165 = load i32, i32* %ek, align 4, !dbg !2864
  %_164 = icmp eq i32 %_165, 32, !dbg !2864
  br i1 %_164, label %bb65, label %bb66, !dbg !2864

bb63:                                             ; preds = %bb62
  store i8 31, i8* %1, align 1, !dbg !2897
  br label %bb83, !dbg !2864

bb66:                                             ; preds = %bb64
  store i32* %ek, i32** %v.dbg.spill33, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill33, metadata !2841, metadata !DIExpression()), !dbg !2899
  %_170 = load i32, i32* %ek, align 4, !dbg !2864
  %_169 = icmp eq i32 %_170, 33, !dbg !2864
  br i1 %_169, label %bb67, label %bb68, !dbg !2864

bb65:                                             ; preds = %bb64
  store i8 32, i8* %1, align 1, !dbg !2898
  br label %bb83, !dbg !2864

bb68:                                             ; preds = %bb66
  store i32* %ek, i32** %v.dbg.spill34, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill34, metadata !2844, metadata !DIExpression()), !dbg !2900
  %_175 = load i32, i32* %ek, align 4, !dbg !2864
  %_174 = icmp eq i32 %_175, 34, !dbg !2864
  br i1 %_174, label %bb69, label %bb70, !dbg !2864

bb67:                                             ; preds = %bb66
  store i8 33, i8* %1, align 1, !dbg !2899
  br label %bb83, !dbg !2864

bb70:                                             ; preds = %bb68
  store i32* %ek, i32** %v.dbg.spill35, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill35, metadata !2847, metadata !DIExpression()), !dbg !2901
  %_180 = load i32, i32* %ek, align 4, !dbg !2864
  %_179 = icmp eq i32 %_180, 35, !dbg !2864
  br i1 %_179, label %bb71, label %bb72, !dbg !2864

bb69:                                             ; preds = %bb68
  store i8 34, i8* %1, align 1, !dbg !2900
  br label %bb83, !dbg !2864

bb72:                                             ; preds = %bb70
  store i32* %ek, i32** %v.dbg.spill36, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill36, metadata !2850, metadata !DIExpression()), !dbg !2902
  %_185 = load i32, i32* %ek, align 4, !dbg !2864
  %_184 = icmp eq i32 %_185, 39, !dbg !2864
  br i1 %_184, label %bb73, label %bb74, !dbg !2864

bb71:                                             ; preds = %bb70
  store i8 35, i8* %1, align 1, !dbg !2901
  br label %bb83, !dbg !2864

bb74:                                             ; preds = %bb72
  store i32* %ek, i32** %v.dbg.spill37, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill37, metadata !2853, metadata !DIExpression()), !dbg !2903
  %_190 = load i32, i32* %ek, align 4, !dbg !2864
  %_189 = icmp eq i32 %_190, 37, !dbg !2864
  br i1 %_189, label %bb75, label %bb76, !dbg !2864

bb73:                                             ; preds = %bb72
  store i8 39, i8* %1, align 1, !dbg !2902
  br label %bb83, !dbg !2864

bb76:                                             ; preds = %bb74
  store i32* %ek, i32** %v.dbg.spill38, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill38, metadata !2856, metadata !DIExpression()), !dbg !2904
  %_195 = load i32, i32* %ek, align 4, !dbg !2864
  %_194 = icmp eq i32 %_195, 36, !dbg !2864
  br i1 %_194, label %bb77, label %bb78, !dbg !2864

bb75:                                             ; preds = %bb74
  store i8 37, i8* %1, align 1, !dbg !2903
  br label %bb83, !dbg !2864

bb78:                                             ; preds = %bb76
  store i32* %ek, i32** %v.dbg.spill39, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill39, metadata !2859, metadata !DIExpression()), !dbg !2905
  %_200 = load i32, i32* %ek, align 4, !dbg !2864
  %_199 = icmp eq i32 %_200, 38, !dbg !2864
  br i1 %_199, label %bb79, label %bb80, !dbg !2864

bb77:                                             ; preds = %bb76
  store i8 36, i8* %1, align 1, !dbg !2904
  br label %bb83, !dbg !2864

bb80:                                             ; preds = %bb78
  store i32* %ek, i32** %v.dbg.spill40, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill40, metadata !2862, metadata !DIExpression()), !dbg !2906
  %_205 = load i32, i32* %ek, align 4, !dbg !2864
  %_204 = icmp eq i32 %_205, 40, !dbg !2864
  br i1 %_204, label %bb81, label %bb82, !dbg !2864

bb79:                                             ; preds = %bb78
  store i8 38, i8* %1, align 1, !dbg !2905
  br label %bb83, !dbg !2864

bb82:                                             ; preds = %bb80
  store i8 41, i8* %1, align 1, !dbg !2864
  br label %bb83, !dbg !2864

bb81:                                             ; preds = %bb80
  store i8 40, i8* %1, align 1, !dbg !2906
  br label %bb83, !dbg !2864
}

; std::panic::catch_unwind
; Function Attrs: nonlazybind uwtable
define internal { i8*, i8* } @_ZN3std5panic12catch_unwind17h4585c9830b5c7ae1E(%"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %f) unnamed_addr #1 !dbg !2907 {
start:
  %_2 = alloca %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>", align 8
  call void @llvm.dbg.declare(metadata %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %f, metadata !2934, metadata !DIExpression()), !dbg !2937
  %0 = bitcast %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %_2 to i8*, !dbg !2938
  %1 = bitcast %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %f to i8*, !dbg !2938
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 40, i1 false), !dbg !2938
; call std::panicking::try
  %2 = call { i8*, i8* } @_ZN3std9panicking3try17h047ed4ea129d31ccE(%"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %_2), !dbg !2939
  %3 = extractvalue { i8*, i8* } %2, 0, !dbg !2939
  %4 = extractvalue { i8*, i8* } %2, 1, !dbg !2939
  br label %bb1, !dbg !2939

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i8* } undef, i8* %3, 0, !dbg !2940
  %6 = insertvalue { i8*, i8* } %5, i8* %4, 1, !dbg !2940
  ret { i8*, i8* } %6, !dbg !2940
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h5ac37a28d5c34d15E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0, i64** align 8 %self) unnamed_addr #1 !dbg !2941 {
start:
  %f.dbg.spill = alloca %"[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]", align 1
  %self.dbg.spill = alloca i64**, align 8
  %_3 = alloca %"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>", align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !2950, metadata !DIExpression()), !dbg !2954
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]"* %f.dbg.spill, metadata !2951, metadata !DIExpression()), !dbg !2955
; call std::thread::local::LocalKey<T>::try_with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h192ef2285605c32bE"(%"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>"* sret(%"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>") %_3, i64** align 8 %self), !dbg !2956
  br label %bb1, !dbg !2956

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h952c80a6ae6ce946E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %0, %"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>"* %_3, [0 x i8]* align 1 bitcast (<{ [70 x i8] }>* @alloc191 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc190 to %"core::panic::location::Location"*)), !dbg !2956
  br label %bb2, !dbg !2956

bb2:                                              ; preds = %bb1
  ret void, !dbg !2957
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17had1af13dedc69e39E"(i64** align 8 %self, %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %f) unnamed_addr #1 !dbg !2958 {
start:
  %self.dbg.spill = alloca i64**, align 8
  %_5 = alloca %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]", align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !2962, metadata !DIExpression()), !dbg !2966
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %f, metadata !2963, metadata !DIExpression()), !dbg !2967
  %0 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_5 to i8*, !dbg !2968
  %1 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %f to i8*, !dbg !2968
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 104, i1 false), !dbg !2968
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h0e0fb7125d5016c5E"(i64** align 8 %self, %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_5), !dbg !2969
  br label %bb1, !dbg !2969

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h3040be500976e412E"(i1 zeroext %_3, [0 x i8]* align 1 bitcast (<{ [70 x i8] }>* @alloc191 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc190 to %"core::panic::location::Location"*)), !dbg !2969
  br label %bb2, !dbg !2969

bb2:                                              ; preds = %bb1
  ret void, !dbg !2970
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h0e0fb7125d5016c5E"(i64** align 8 %self, %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %f) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2971 {
start:
  %thread_local.dbg.spill = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, align 8
  %val.dbg.spill = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, align 8
  %v.dbg.spill6 = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, align 8
  %v.dbg.spill = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %e.dbg.spill4 = alloca %"std::thread::local::AccessError", align 1
  %e.dbg.spill = alloca %"std::thread::local::AccessError", align 1
  %residual.dbg.spill3 = alloca %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err", align 1
  %err.dbg.spill = alloca %"std::thread::local::AccessError", align 1
  %self.dbg.spill = alloca i64**, align 8
  %_18 = alloca i8, align 1
  %_16 = alloca i64*, align 8
  %_15 = alloca %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]", align 8
  %_8 = alloca i64*, align 8
  %self2 = alloca i64*, align 8
  %self1 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i8, align 1
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !2990, metadata !DIExpression()), !dbg !3011
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %f, metadata !2991, metadata !DIExpression()), !dbg !3012
  call void @llvm.dbg.declare(metadata i64** %self1, metadata !3013, metadata !DIExpression()), !dbg !3057
  call void @llvm.dbg.declare(metadata i64** %self2, metadata !3059, metadata !DIExpression()), !dbg !3069
  call void @llvm.dbg.declare(metadata %"std::thread::local::AccessError"* %err.dbg.spill, metadata !3065, metadata !DIExpression()), !dbg !3069
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err"* %residual.dbg.spill, metadata !2994, metadata !DIExpression()), !dbg !3070
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err"* %residual.dbg.spill3, metadata !3071, metadata !DIExpression()), !dbg !3082
  call void @llvm.dbg.declare(metadata %"std::thread::local::AccessError"* %e.dbg.spill, metadata !3054, metadata !DIExpression()), !dbg !3084
  call void @llvm.dbg.declare(metadata %"std::thread::local::AccessError"* %e.dbg.spill4, metadata !3077, metadata !DIExpression()), !dbg !3085
  store i8 1, i8* %_18, align 1, !dbg !3086
  %2 = bitcast i64** %self to i64* (i64*)**, !dbg !3058
  %_7 = load i64* (i64*)*, i64* (i64*)** %2, align 8, !dbg !3058, !nonnull !27, !noundef !27
  %3 = bitcast i64** %_8 to {}**, !dbg !3087
  store {}* null, {}** %3, align 8, !dbg !3087
  %4 = load i64*, i64** %_8, align 8, !dbg !3058, !align !1193
  %5 = invoke align 8 i64* %_7(i64* align 8 %4)
          to label %bb1 unwind label %cleanup, !dbg !3058

bb10:                                             ; preds = %cleanup
  %6 = load i8, i8* %_18, align 1, !dbg !3088, !range !759, !noundef !27
  %7 = trunc i8 %6 to i1, !dbg !3088
  br i1 %7, label %bb9, label %bb8, !dbg !3088

cleanup:                                          ; preds = %bb3, %bb5, %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb10

bb1:                                              ; preds = %start
  store i64* %5, i64** %self2, align 8, !dbg !3058
  %13 = bitcast i64** %self2 to {}**, !dbg !3069
  %14 = load {}*, {}** %13, align 8, !dbg !3069
  %15 = icmp eq {}* %14, null, !dbg !3069
  %_19 = select i1 %15, i64 0, i64 1, !dbg !3069
  switch i64 %_19, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ], !dbg !3069

bb12:                                             ; preds = %bb1
  unreachable, !dbg !3069

bb11:                                             ; preds = %bb1
  %16 = bitcast i64** %self1 to {}**, !dbg !3069
  store {}* null, {}** %16, align 8, !dbg !3069
  br label %bb14, !dbg !3069

bb13:                                             ; preds = %bb1
  %17 = bitcast i64** %self2 to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"**, !dbg !3069
  %v = load %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %17, align 8, !dbg !3069, !nonnull !27, !align !1193, !noundef !27
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %v, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %v.dbg.spill, align 8, !dbg !3069
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %v.dbg.spill, metadata !3066, metadata !DIExpression()), !dbg !3089
  %18 = bitcast i64** %self1 to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"**, !dbg !3089
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %v, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %18, align 8, !dbg !3089
  br label %bb14, !dbg !3069

bb14:                                             ; preds = %bb11, %bb13
  %19 = bitcast i64** %self1 to {}**, !dbg !3057
  %20 = load {}*, {}** %19, align 8, !dbg !3057
  %21 = icmp eq {}* %20, null, !dbg !3057
  %_22 = select i1 %21, i64 1, i64 0, !dbg !3057
  switch i64 %_22, label %bb16 [
    i64 0, label %bb17
    i64 1, label %bb15
  ], !dbg !3057

bb16:                                             ; preds = %bb14
  unreachable, !dbg !3057

bb17:                                             ; preds = %bb14
  %22 = bitcast i64** %self1 to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"**, !dbg !3057
  %v5 = load %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %22, align 8, !dbg !3057, !nonnull !27, !align !1193, !noundef !27
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %v5, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %v.dbg.spill6, align 8, !dbg !3057
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %v.dbg.spill6, metadata !3051, metadata !DIExpression()), !dbg !3090
  %23 = bitcast i64** %_4 to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"**, !dbg !3090
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %v5, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %23, align 8, !dbg !3090
  br label %bb2, !dbg !3057

bb15:                                             ; preds = %bb14
  %24 = bitcast i64** %_4 to {}**, !dbg !3084
  store {}* null, {}** %24, align 8, !dbg !3084
  br label %bb2, !dbg !3057

bb2:                                              ; preds = %bb17, %bb15
  %25 = bitcast i64** %_4 to {}**, !dbg !3058
  %26 = load {}*, {}** %25, align 8, !dbg !3058
  %27 = icmp eq {}* %26, null, !dbg !3058
  %_10 = select i1 %27, i64 1, i64 0, !dbg !3058
  switch i64 %_10, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !3058

bb4:                                              ; preds = %bb2
  unreachable, !dbg !3058

bb3:                                              ; preds = %bb2
  %28 = bitcast i64** %_4 to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"**, !dbg !3058
  %val = load %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %28, align 8, !dbg !3058, !nonnull !27, !align !1193, !noundef !27
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %val, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %val.dbg.spill, align 8, !dbg !3058
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %val.dbg.spill, metadata !3009, metadata !DIExpression()), !dbg !3091
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %val, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %thread_local.dbg.spill, align 8, !dbg !3091
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %thread_local.dbg.spill, metadata !2992, metadata !DIExpression()), !dbg !3092
  store i8 0, i8* %_18, align 1, !dbg !3093
  %29 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_15 to i8*, !dbg !3093
  %30 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %f to i8*, !dbg !3093
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 104, i1 false), !dbg !3093
  %31 = bitcast i64** %_16 to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"**, !dbg !3093
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %val, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %31, align 8, !dbg !3093
  %32 = load i64*, i64** %_16, align 8, !dbg !3093, !nonnull !27, !align !1193, !noundef !27
  %33 = bitcast i64* %32 to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, !dbg !3093
; invoke proc_macro::bridge::client::run_client::{{closure}}::{{closure}}
  invoke void @"_ZN10proc_macro6bridge6client10run_client28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hb080680d2449079fE"(%"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_15, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* align 8 %33)
          to label %bb6 unwind label %cleanup, !dbg !3093

bb5:                                              ; preds = %bb2
; invoke <T as core::convert::From<T>>::from
  invoke void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h552284ca564a009eE"()
          to label %bb18 unwind label %cleanup, !dbg !3085

bb18:                                             ; preds = %bb5
  store i8 1, i8* %1, align 1, !dbg !3085
; call core::ptr::drop_in_place<proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream,core::option::Option<proc_macro::bridge::client::TokenStream>,proc_macro::bridge::client::Client<proc_macro::TokenStream,proc_macro::TokenStream>::expand1<f128_input::f128_inner>::{{closure}}::{{closure}}>::{{closure}}::{{closure}}>
  call void @"_ZN4core3ptr425drop_in_place$LT$proc_macro..bridge..client..run_client$LT$proc_macro..bridge..client..TokenStream$C$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$C$proc_macro..bridge..client..Client$LT$proc_macro..TokenStream$C$proc_macro..TokenStream$GT$..expand1$LT$f128_input..f128_inner$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hcc80abe9357577ffE"(%"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %f), !dbg !3088
  br label %bb7, !dbg !3088

bb7:                                              ; preds = %bb6, %bb18
  %34 = load i8, i8* %1, align 1, !dbg !3094, !range !759, !noundef !27
  %35 = trunc i8 %34 to i1, !dbg !3094
  ret i1 %35, !dbg !3094

bb6:                                              ; preds = %bb3
  %36 = getelementptr i8, i8* %1, i64 1, !dbg !3095
  %37 = bitcast i8* %36 to {}*, !dbg !3095
  store i8 0, i8* %1, align 1, !dbg !3095
  br label %bb7, !dbg !3088

bb8:                                              ; preds = %bb9, %bb10
  %38 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3096
  %39 = load i8*, i8** %38, align 8, !dbg !3096
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3096
  %41 = load i32, i32* %40, align 8, !dbg !3096
  %42 = insertvalue { i8*, i32 } undef, i8* %39, 0, !dbg !3096
  %43 = insertvalue { i8*, i32 } %42, i32 %41, 1, !dbg !3096
  resume { i8*, i32 } %43, !dbg !3096

bb9:                                              ; preds = %bb10
; invoke core::ptr::drop_in_place<proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream,core::option::Option<proc_macro::bridge::client::TokenStream>,proc_macro::bridge::client::Client<proc_macro::TokenStream,proc_macro::TokenStream>::expand1<f128_input::f128_inner>::{{closure}}::{{closure}}>::{{closure}}::{{closure}}>
  invoke void @"_ZN4core3ptr425drop_in_place$LT$proc_macro..bridge..client..run_client$LT$proc_macro..bridge..client..TokenStream$C$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$C$proc_macro..bridge..client..Client$LT$proc_macro..TokenStream$C$proc_macro..TokenStream$GT$..expand1$LT$f128_input..f128_inner$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hcc80abe9357577ffE"(%"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %f) #19
          to label %bb8 unwind label %abort, !dbg !3088

abort:                                            ; preds = %bb9
  %44 = landingpad { i8*, i32 }
          cleanup, !dbg !3096
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !3096
  unreachable, !dbg !3096
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h192ef2285605c32bE"(%"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>"* sret(%"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>") %0, i64** align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3097 {
start:
  %thread_local.dbg.spill = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, align 8
  %val.dbg.spill = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, align 8
  %v.dbg.spill6 = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, align 8
  %v.dbg.spill = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %e.dbg.spill4 = alloca %"std::thread::local::AccessError", align 1
  %e.dbg.spill = alloca %"std::thread::local::AccessError", align 1
  %residual.dbg.spill3 = alloca %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err", align 1
  %err.dbg.spill = alloca %"std::thread::local::AccessError", align 1
  %f.dbg.spill = alloca %"[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]", align 1
  %self.dbg.spill = alloca i64**, align 8
  %_18 = alloca i8, align 1
  %_16 = alloca i64*, align 8
  %_14 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  %_8 = alloca i64*, align 8
  %self2 = alloca i64*, align 8
  %self1 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !3115, metadata !DIExpression()), !dbg !3123
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]"* %f.dbg.spill, metadata !3116, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.declare(metadata i64** %self1, metadata !3125, metadata !DIExpression()), !dbg !3135
  call void @llvm.dbg.declare(metadata i64** %self2, metadata !3137, metadata !DIExpression()), !dbg !3145
  call void @llvm.dbg.declare(metadata %"std::thread::local::AccessError"* %err.dbg.spill, metadata !3141, metadata !DIExpression()), !dbg !3145
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err"* %residual.dbg.spill, metadata !3119, metadata !DIExpression()), !dbg !3146
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err"* %residual.dbg.spill3, metadata !3147, metadata !DIExpression()), !dbg !3157
  call void @llvm.dbg.declare(metadata %"std::thread::local::AccessError"* %e.dbg.spill, metadata !3132, metadata !DIExpression()), !dbg !3159
  call void @llvm.dbg.declare(metadata %"std::thread::local::AccessError"* %e.dbg.spill4, metadata !3153, metadata !DIExpression()), !dbg !3160
  store i8 1, i8* %_18, align 1, !dbg !3161
  %2 = bitcast i64** %self to i64* (i64*)**, !dbg !3136
  %_7 = load i64* (i64*)*, i64* (i64*)** %2, align 8, !dbg !3136, !nonnull !27, !noundef !27
  %3 = bitcast i64** %_8 to {}**, !dbg !3162
  store {}* null, {}** %3, align 8, !dbg !3162
  %4 = load i64*, i64** %_8, align 8, !dbg !3136, !align !1193
  %5 = invoke align 8 i64* %_7(i64* align 8 %4)
          to label %bb1 unwind label %cleanup, !dbg !3136

bb10:                                             ; preds = %cleanup
  %6 = load i8, i8* %_18, align 1, !dbg !3163, !range !759, !noundef !27
  %7 = trunc i8 %6 to i1, !dbg !3163
  br i1 %7, label %bb9, label %bb8, !dbg !3163

cleanup:                                          ; preds = %bb3, %bb5, %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb10

bb1:                                              ; preds = %start
  store i64* %5, i64** %self2, align 8, !dbg !3136
  %13 = bitcast i64** %self2 to {}**, !dbg !3145
  %14 = load {}*, {}** %13, align 8, !dbg !3145
  %15 = icmp eq {}* %14, null, !dbg !3145
  %_19 = select i1 %15, i64 0, i64 1, !dbg !3145
  switch i64 %_19, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ], !dbg !3145

bb12:                                             ; preds = %bb1
  unreachable, !dbg !3145

bb11:                                             ; preds = %bb1
  %16 = bitcast i64** %self1 to {}**, !dbg !3145
  store {}* null, {}** %16, align 8, !dbg !3145
  br label %bb14, !dbg !3145

bb13:                                             ; preds = %bb1
  %17 = bitcast i64** %self2 to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"**, !dbg !3145
  %v = load %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %17, align 8, !dbg !3145, !nonnull !27, !align !1193, !noundef !27
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %v, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %v.dbg.spill, align 8, !dbg !3145
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %v.dbg.spill, metadata !3142, metadata !DIExpression()), !dbg !3164
  %18 = bitcast i64** %self1 to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"**, !dbg !3164
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %v, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %18, align 8, !dbg !3164
  br label %bb14, !dbg !3145

bb14:                                             ; preds = %bb11, %bb13
  %19 = bitcast i64** %self1 to {}**, !dbg !3135
  %20 = load {}*, {}** %19, align 8, !dbg !3135
  %21 = icmp eq {}* %20, null, !dbg !3135
  %_22 = select i1 %21, i64 1, i64 0, !dbg !3135
  switch i64 %_22, label %bb16 [
    i64 0, label %bb17
    i64 1, label %bb15
  ], !dbg !3135

bb16:                                             ; preds = %bb14
  unreachable, !dbg !3135

bb17:                                             ; preds = %bb14
  %22 = bitcast i64** %self1 to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"**, !dbg !3135
  %v5 = load %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %22, align 8, !dbg !3135, !nonnull !27, !align !1193, !noundef !27
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %v5, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %v.dbg.spill6, align 8, !dbg !3135
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %v.dbg.spill6, metadata !3129, metadata !DIExpression()), !dbg !3165
  %23 = bitcast i64** %_4 to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"**, !dbg !3165
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %v5, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %23, align 8, !dbg !3165
  br label %bb2, !dbg !3135

bb15:                                             ; preds = %bb14
  %24 = bitcast i64** %_4 to {}**, !dbg !3159
  store {}* null, {}** %24, align 8, !dbg !3159
  br label %bb2, !dbg !3135

bb2:                                              ; preds = %bb17, %bb15
  %25 = bitcast i64** %_4 to {}**, !dbg !3136
  %26 = load {}*, {}** %25, align 8, !dbg !3136
  %27 = icmp eq {}* %26, null, !dbg !3136
  %_10 = select i1 %27, i64 1, i64 0, !dbg !3136
  switch i64 %_10, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !3136

bb4:                                              ; preds = %bb2
  unreachable, !dbg !3136

bb3:                                              ; preds = %bb2
  %28 = bitcast i64** %_4 to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"**, !dbg !3136
  %val = load %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %28, align 8, !dbg !3136, !nonnull !27, !align !1193, !noundef !27
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %val, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %val.dbg.spill, align 8, !dbg !3136
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %val.dbg.spill, metadata !3121, metadata !DIExpression()), !dbg !3166
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %val, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %thread_local.dbg.spill, align 8, !dbg !3166
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %thread_local.dbg.spill, metadata !3117, metadata !DIExpression()), !dbg !3167
  store i8 0, i8* %_18, align 1, !dbg !3168
  %29 = bitcast i64** %_16 to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"**, !dbg !3168
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %val, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %29, align 8, !dbg !3168
  %30 = load i64*, i64** %_16, align 8, !dbg !3168, !nonnull !27, !align !1193, !noundef !27
  %31 = bitcast i64* %30 to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, !dbg !3168
; invoke proc_macro::bridge::client::BridgeState::with::{{closure}}
  invoke void @"_ZN10proc_macro6bridge6client11BridgeState4with28_$u7b$$u7b$closure$u7d$$u7d$17hfd48522897f9ccadE"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %_14, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* align 8 %31)
          to label %bb6 unwind label %cleanup, !dbg !3168

bb5:                                              ; preds = %bb2
; invoke <T as core::convert::From<T>>::from
  invoke void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h552284ca564a009eE"()
          to label %bb18 unwind label %cleanup, !dbg !3160

bb18:                                             ; preds = %bb5
  %32 = getelementptr inbounds %"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>", %"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>"* %0, i32 0, i32 1, !dbg !3160
  store {}* null, {}** %32, align 8, !dbg !3160
  br label %bb7, !dbg !3163

bb7:                                              ; preds = %bb6, %bb18
  ret void, !dbg !3169

bb6:                                              ; preds = %bb3
  %33 = bitcast %"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>"* %0 to %"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>::Ok"*, !dbg !3170
  %34 = bitcast %"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>::Ok"* %33 to %"proc_macro::bridge::buffer::Buffer"*, !dbg !3170
  %35 = bitcast %"proc_macro::bridge::buffer::Buffer"* %34 to i8*, !dbg !3170
  %36 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_14 to i8*, !dbg !3170
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 40, i1 false), !dbg !3170
  br label %bb7, !dbg !3163

bb8:                                              ; preds = %bb9, %bb10
  %37 = bitcast { i8*, i32 }* %1 to i8**, !dbg !3171
  %38 = load i8*, i8** %37, align 8, !dbg !3171
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !3171
  %40 = load i32, i32* %39, align 8, !dbg !3171
  %41 = insertvalue { i8*, i32 } undef, i8* %38, 0, !dbg !3171
  %42 = insertvalue { i8*, i32 } %41, i32 %40, 1, !dbg !3171
  resume { i8*, i32 } %42, !dbg !3171

bb9:                                              ; preds = %bb10
  br label %bb8, !dbg !3163
}

; std::thread::local::fast::Key<T>::try_initialize
; Function Attrs: noinline nonlazybind uwtable
define internal align 8 i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h4332ab060d92dd2cE"(%"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* align 8 %self, i64* align 8 %init) unnamed_addr #3 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3172 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca i8, align 1
  %init.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, align 8
  %_12 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %2 = alloca i64*, align 8
  store %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %self, %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %self.dbg.spill, metadata !3198, metadata !DIExpression()), !dbg !3202
  store i64* %init, i64** %init.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %init.dbg.spill, metadata !3199, metadata !DIExpression()), !dbg !3203
  store i8 1, i8* %_12, align 1, !dbg !3204
  store i8 1, i8* %1, align 1, !dbg !3205
  %3 = load i8, i8* %1, align 1, !dbg !3205, !range !759, !noundef !27
  %_5 = trunc i8 %3 to i1, !dbg !3205
  br label %bb14, !dbg !3205

bb14:                                             ; preds = %start
  %_4 = xor i1 %_5, true, !dbg !3204
  br i1 %_4, label %bb1, label %bb2, !dbg !3204

bb2:                                              ; preds = %bb14
; invoke std::thread::local::fast::Key<T>::try_register_dtor
  %_6 = invoke zeroext i1 @"_ZN3std6thread5local4fast12Key$LT$T$GT$17try_register_dtor17h84fb030e3aa96ebbE"(%"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* align 8 %self)
          to label %bb4 unwind label %cleanup, !dbg !3211

bb1:                                              ; preds = %bb14
  store i8 1, i8* %_3, align 1, !dbg !3204
  br label %bb3, !dbg !3204

bb3:                                              ; preds = %bb4, %bb1
  %4 = load i8, i8* %_3, align 1, !dbg !3204, !range !759, !noundef !27
  %5 = trunc i8 %4 to i1, !dbg !3204
  br i1 %5, label %bb5, label %bb7, !dbg !3204

bb13:                                             ; preds = %cleanup
  %6 = load i8, i8* %_12, align 1, !dbg !3212, !range !759, !noundef !27
  %7 = trunc i8 %6 to i1, !dbg !3212
  br i1 %7, label %bb12, label %bb10, !dbg !3212

cleanup:                                          ; preds = %bb5, %bb2
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb13

bb4:                                              ; preds = %bb2
  %13 = zext i1 %_6 to i8, !dbg !3204
  store i8 %13, i8* %_3, align 1, !dbg !3204
  br label %bb3, !dbg !3204

bb7:                                              ; preds = %bb3
  %14 = bitcast i64** %2 to {}**, !dbg !3213
  store {}* null, {}** %14, align 8, !dbg !3213
  br label %bb8, !dbg !3214

bb5:                                              ; preds = %bb3
  %_10 = bitcast %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %self to %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, !dbg !3215
  store i8 0, i8* %_12, align 1, !dbg !3216
; invoke std::thread::local::lazy::LazyKeyInner<T>::initialize
  %_9 = invoke align 8 %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$10initialize17hb4145435b005afdcE"(%"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* align 8 %_10, i64* align 8 %init)
          to label %bb6 unwind label %cleanup, !dbg !3215

bb6:                                              ; preds = %bb5
  %15 = bitcast i64** %2 to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"**, !dbg !3217
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %_9, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %15, align 8, !dbg !3217
  br label %bb8, !dbg !3214

bb10:                                             ; preds = %bb12, %bb13
  %16 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3218
  %17 = load i8*, i8** %16, align 8, !dbg !3218
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3218
  %19 = load i32, i32* %18, align 8, !dbg !3218
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !3218
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !3218
  resume { i8*, i32 } %21, !dbg !3218

bb12:                                             ; preds = %bb13
  br label %bb10, !dbg !3212

bb8:                                              ; preds = %bb7, %bb6
  %22 = load i8, i8* %_12, align 1, !dbg !3212, !range !759, !noundef !27
  %23 = trunc i8 %22 to i1, !dbg !3212
  br i1 %23, label %bb11, label %bb9, !dbg !3212

bb9:                                              ; preds = %bb11, %bb8
  %24 = load i64*, i64** %2, align 8, !dbg !3219, !align !1193
  ret i64* %24, !dbg !3219

bb11:                                             ; preds = %bb8
  br label %bb9, !dbg !3212
}

; std::thread::local::fast::Key<T>::try_register_dtor
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN3std6thread5local4fast12Key$LT$T$GT$17try_register_dtor17h84fb030e3aa96ebbE"(%"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* align 8 %self) unnamed_addr #1 !dbg !3220 {
start:
  %old.dbg.spill = alloca i8, align 1
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill = alloca %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, align 8
  %_2 = alloca i8, align 1
  %0 = alloca i8, align 1
  store %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %self, %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %self.dbg.spill, metadata !3224, metadata !DIExpression()), !dbg !3225
  %self1 = getelementptr inbounds %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %self, i32 0, i32 1, !dbg !3226
  store i8* %self1, i8** %self.dbg.spill2, align 8, !dbg !3226
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !3227, metadata !DIExpression()), !dbg !3234
  store i8* %self1, i8** %self.dbg.spill3, align 8, !dbg !3234
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !3235, metadata !DIExpression()), !dbg !3243
  %1 = load i8, i8* %self1, align 1, !dbg !3234, !range !3245, !noundef !27
  store i8 %1, i8* %_2, align 1, !dbg !3234
  %2 = load i8, i8* %_2, align 1, !dbg !3226, !range !3245, !noundef !27
  %_4 = zext i8 %2 to i64, !dbg !3226
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb5
    i64 2, label %bb1
  ], !dbg !3246

bb2:                                              ; preds = %start
  unreachable, !dbg !3226

bb3:                                              ; preds = %start
  %_6 = bitcast %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %self to i8*, !dbg !3247
; call std::sys::unix::thread_local_dtor::register_dtor
  call void @_ZN3std3sys4unix17thread_local_dtor13register_dtor17h3a4b010953491cd9E(i8* %_6, void (i8*)* @_ZN3std6thread5local4fast13destroy_value17h9e2a9ba8c1278b5aE), !dbg !3248
  br label %bb4, !dbg !3248

bb5:                                              ; preds = %start
  store i8 1, i8* %0, align 1, !dbg !3249
  br label %bb6, !dbg !3249

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1, !dbg !3250
  br label %bb6, !dbg !3250

bb6:                                              ; preds = %bb7, %bb5, %bb1
  %3 = load i8, i8* %0, align 1, !dbg !3251, !range !759, !noundef !27
  %4 = trunc i8 %3 to i1, !dbg !3251
  ret i1 %4, !dbg !3251

bb4:                                              ; preds = %bb3
  %self4 = getelementptr inbounds %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %self, i32 0, i32 1, !dbg !3252
  store i8* %self4, i8** %self.dbg.spill5, align 8, !dbg !3252
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !3253, metadata !DIExpression()), !dbg !3263
; call core::cell::Cell<T>::replace
  %old = call i8 @"_ZN4core4cell13Cell$LT$T$GT$7replace17h6b32ba01a72e7e1eE"(i8* align 1 %self4, i8 1), !dbg !3263, !range !3245
  store i8 %old, i8* %old.dbg.spill, align 1, !dbg !3263
  call void @llvm.dbg.declare(metadata i8* %old.dbg.spill, metadata !3260, metadata !DIExpression()), !dbg !3264
  br label %bb7, !dbg !3263

bb7:                                              ; preds = %bb4
  store i8 1, i8* %0, align 1, !dbg !3265
  br label %bb6, !dbg !3265
}

; std::thread::local::fast::Key<T>::get
; Function Attrs: nonlazybind uwtable
define internal align 8 i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$3get17hec36f08b67c44b0bE"(%"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* align 8 %self, i64* align 8 %init) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3266 {
start:
  %val.dbg.spill = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %init.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, align 8
  %_10 = alloca i8, align 1
  %_3 = alloca i64*, align 8
  %1 = alloca i64*, align 8
  store %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %self, %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %self.dbg.spill, metadata !3268, metadata !DIExpression()), !dbg !3272
  store i64* %init, i64** %init.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %init.dbg.spill, metadata !3269, metadata !DIExpression()), !dbg !3273
  store i8 1, i8* %_10, align 1, !dbg !3274
  %_4 = bitcast %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %self to %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, !dbg !3274
; invoke std::thread::local::lazy::LazyKeyInner<T>::get
  %2 = invoke align 8 i64* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$3get17h30901762845eb534E"(%"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* align 8 %_4)
          to label %bb1 unwind label %cleanup, !dbg !3274

bb11:                                             ; preds = %cleanup
  %3 = load i8, i8* %_10, align 1, !dbg !3275, !range !759, !noundef !27
  %4 = trunc i8 %3 to i1, !dbg !3275
  br i1 %4, label %bb10, label %bb8, !dbg !3275

cleanup:                                          ; preds = %bb2, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb11

bb1:                                              ; preds = %start
  store i64* %2, i64** %_3, align 8, !dbg !3274
  %10 = bitcast i64** %_3 to {}**, !dbg !3274
  %11 = load {}*, {}** %10, align 8, !dbg !3274
  %12 = icmp eq {}* %11, null, !dbg !3274
  %_5 = select i1 %12, i64 0, i64 1, !dbg !3274
  switch i64 %_5, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ], !dbg !3276

bb3:                                              ; preds = %bb1
  unreachable, !dbg !3274

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_10, align 1, !dbg !3277
; invoke std::thread::local::fast::Key<T>::try_initialize
  %13 = invoke align 8 i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h4332ab060d92dd2cE"(%"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* align 8 %self, i64* align 8 %init)
          to label %bb5 unwind label %cleanup, !dbg !3278

bb4:                                              ; preds = %bb1
  %14 = bitcast i64** %_3 to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"**, !dbg !3279
  %val = load %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %14, align 8, !dbg !3279, !nonnull !27, !align !1193, !noundef !27
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %val, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %val.dbg.spill, align 8, !dbg !3279
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %val.dbg.spill, metadata !3270, metadata !DIExpression()), !dbg !3280
  %15 = bitcast i64** %1 to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"**, !dbg !3281
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %val, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %15, align 8, !dbg !3281
  br label %bb6, !dbg !3282

bb6:                                              ; preds = %bb5, %bb4
  %16 = load i8, i8* %_10, align 1, !dbg !3275, !range !759, !noundef !27
  %17 = trunc i8 %16 to i1, !dbg !3275
  br i1 %17, label %bb9, label %bb7, !dbg !3275

bb5:                                              ; preds = %bb2
  store i64* %13, i64** %1, align 8, !dbg !3278
  br label %bb6, !dbg !3283

bb8:                                              ; preds = %bb10, %bb11
  %18 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3284
  %19 = load i8*, i8** %18, align 8, !dbg !3284
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3284
  %21 = load i32, i32* %20, align 8, !dbg !3284
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0, !dbg !3284
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1, !dbg !3284
  resume { i8*, i32 } %23, !dbg !3284

bb10:                                             ; preds = %bb11
  br label %bb8, !dbg !3275

bb7:                                              ; preds = %bb9, %bb6
  %24 = load i64*, i64** %1, align 8, !dbg !3285, !align !1193
  ret i64* %24, !dbg !3285

bb9:                                              ; preds = %bb6
  br label %bb7, !dbg !3275
}

; std::thread::local::fast::destroy_value
; Function Attrs: nonlazybind uwtable
define internal void @_ZN3std6thread5local4fast13destroy_value17h9e2a9ba8c1278b5aE(i8* %ptr) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3286 {
start:
  %old.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca i8*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill2 = alloca %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %_x = alloca %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", align 8
  %value = alloca %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3290, metadata !DIExpression()), !dbg !3296
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %value, metadata !3294, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_x, metadata !3298, metadata !DIExpression()), !dbg !3304
  %ptr1 = bitcast i8* %ptr to %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, !dbg !3306
  store %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %ptr1, %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %ptr.dbg.spill2, align 8, !dbg !3306
  call void @llvm.dbg.declare(metadata %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %ptr.dbg.spill2, metadata !3291, metadata !DIExpression()), !dbg !3307
  %_5 = bitcast %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %ptr1 to %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, !dbg !3308
; invoke std::thread::local::lazy::LazyKeyInner<T>::take
  invoke void @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$4take17h63535b62087b3b82E"(%"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* sret(%"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>") %value, %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* align 8 %_5)
          to label %bb1 unwind label %cleanup, !dbg !3308

bb2:                                              ; preds = %cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !3309
  unreachable, !dbg !3309

cleanup:                                          ; preds = %bb3, %bb1, %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb2

bb1:                                              ; preds = %start
  %self = getelementptr inbounds %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", %"std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %ptr1, i32 0, i32 1, !dbg !3310
  store i8* %self, i8** %self.dbg.spill, align 8, !dbg !3310
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !3311, metadata !DIExpression()), !dbg !3319
; invoke core::cell::Cell<T>::replace
  %old = invoke i8 @"_ZN4core4cell13Cell$LT$T$GT$7replace17h6b32ba01a72e7e1eE"(i8* align 1 %self, i8 2)
          to label %bb3 unwind label %cleanup, !dbg !3319, !range !3245

bb3:                                              ; preds = %bb1
  store i8 %old, i8* %old.dbg.spill, align 1, !dbg !3319
  call void @llvm.dbg.declare(metadata i8* %old.dbg.spill, metadata !3316, metadata !DIExpression()), !dbg !3320
  %6 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_x to i8*, !dbg !3321
  %7 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %value to i8*, !dbg !3321
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 88, i1 false), !dbg !3321
; invoke core::ptr::drop_in_place<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>
  invoke void @"_ZN4core3ptr140drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$proc_macro..bridge..client..BridgeStateL$GT$$GT$$GT$17he92c14df81bac4fdE"(%"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_x)
          to label %bb4 unwind label %cleanup, !dbg !3304

bb4:                                              ; preds = %bb3
  ret void, !dbg !3322
}

; std::thread::local::lazy::LazyKeyInner<T>::initialize
; Function Attrs: nonlazybind uwtable
define internal align 8 %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$10initialize17hb4145435b005afdcE"(%"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* align 8 %self, i64* align 8 %init) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3323 {
start:
  %x.dbg.spill = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill = alloca %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, align 8
  %self.dbg.spill2 = alloca %"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"*, align 8
  %init.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, align 8
  %_12 = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>", align 8
  %_11 = alloca %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", align 8
  %_8 = alloca %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", align 8
  %value = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>", align 8
  store %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %self, %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %self.dbg.spill, metadata !3328, metadata !DIExpression()), !dbg !3337
  store i64* %init, i64** %init.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %init.dbg.spill, metadata !3329, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %value, metadata !3330, metadata !DIExpression()), !dbg !3339
; call proc_macro::bridge::client::BRIDGE_STATE::__getit::{{closure}}
  call void @"_ZN10proc_macro6bridge6client12BRIDGE_STATE7__getit28_$u7b$$u7b$closure$u7d$$u7d$17h88635db59fb9f3bbE"(%"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* sret(%"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>") %value, i64* align 8 %init), !dbg !3340
  br label %bb1, !dbg !3340

bb1:                                              ; preds = %start
  %self1 = bitcast %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %self to %"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"*, !dbg !3341
  store %"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"* %self1, %"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"** %self.dbg.spill2, align 8, !dbg !3341
  call void @llvm.dbg.declare(metadata %"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"** %self.dbg.spill2, metadata !3342, metadata !DIExpression()), !dbg !3349
  %_15 = bitcast %"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"* %self1 to %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, !dbg !3349
  store %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_15, %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %ptr.dbg.spill, align 8, !dbg !3349
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %ptr.dbg.spill, metadata !3332, metadata !DIExpression()), !dbg !3350
  %1 = bitcast %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %_12 to i8*, !dbg !3351
  %2 = bitcast %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %value to i8*, !dbg !3351
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 80, i1 false), !dbg !3351
  %3 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_11 to %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::Some"*, !dbg !3352
  %4 = getelementptr inbounds %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::Some", %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::Some"* %3, i32 0, i32 1, !dbg !3352
  %5 = bitcast %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %4 to i8*, !dbg !3352
  %6 = bitcast %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %_12 to i8*, !dbg !3352
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 80, i1 false), !dbg !3352
  %7 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_11 to i64*, !dbg !3352
  store i64 1, i64* %7, align 8, !dbg !3352
; invoke core::mem::replace
  invoke void @_ZN4core3mem7replace17h5a00048dad880c23E(%"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* sret(%"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>") %_8, %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* align 8 %_15, %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_11)
          to label %bb2 unwind label %cleanup, !dbg !3353

bb9:                                              ; preds = %cleanup
  br i1 false, label %bb8, label %bb7, !dbg !3354

cleanup:                                          ; preds = %bb2, %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb9

bb2:                                              ; preds = %bb1
; invoke core::ptr::drop_in_place<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>
  invoke void @"_ZN4core3ptr140drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$proc_macro..bridge..client..BridgeStateL$GT$$GT$$GT$17he92c14df81bac4fdE"(%"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_8)
          to label %bb3 unwind label %cleanup, !dbg !3355

bb3:                                              ; preds = %bb2
  %13 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_15 to i64*, !dbg !3356
  %_13 = load i64, i64* %13, align 8, !dbg !3356, !range !2078, !noundef !27
  switch i64 %_13, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ], !dbg !3357

bb7:                                              ; preds = %bb8, %bb9
  %14 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3358
  %15 = load i8*, i8** %14, align 8, !dbg !3358
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3358
  %17 = load i32, i32* %16, align 8, !dbg !3358
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0, !dbg !3358
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1, !dbg !3358
  resume { i8*, i32 } %19, !dbg !3358

bb8:                                              ; preds = %bb9
; invoke core::ptr::drop_in_place<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>
  invoke void @"_ZN4core3ptr112drop_in_place$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$proc_macro..bridge..client..BridgeStateL$GT$$GT$17h9170cc61345a158bE"(%"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %value) #19
          to label %bb7 unwind label %abort, !dbg !3354

abort:                                            ; preds = %bb8
  %20 = landingpad { i8*, i32 }
          cleanup, !dbg !3358
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !3358
  unreachable, !dbg !3358

bb5:                                              ; preds = %bb3
  unreachable, !dbg !3356

bb4:                                              ; preds = %bb3
  unreachable, !dbg !3359

bb6:                                              ; preds = %bb3
  %21 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_15 to %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::Some"*, !dbg !3363
  %x = getelementptr inbounds %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::Some", %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::Some"* %21, i32 0, i32 1, !dbg !3363
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %x, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %x.dbg.spill, align 8, !dbg !3363
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %x.dbg.spill, metadata !3335, metadata !DIExpression()), !dbg !3364
  ret %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %x, !dbg !3365
}

; std::thread::local::lazy::LazyKeyInner<T>::get
; Function Attrs: nonlazybind uwtable
define internal align 8 i64* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$3get17h30901762845eb534E"(%"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* align 8 %self) unnamed_addr #1 !dbg !3366 {
start:
  %x.dbg.spill = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, align 8
  %self.dbg.spill3 = alloca %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, align 8
  %self.dbg.spill2 = alloca %"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"*, align 8
  %self.dbg.spill = alloca %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, align 8
  %0 = alloca i64*, align 8
  store %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %self, %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %self.dbg.spill, metadata !3370, metadata !DIExpression()), !dbg !3371
  %self1 = bitcast %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %self to %"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"*, !dbg !3372
  store %"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"* %self1, %"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"** %self.dbg.spill2, align 8, !dbg !3372
  call void @llvm.dbg.declare(metadata %"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"** %self.dbg.spill2, metadata !3373, metadata !DIExpression()), !dbg !3377
  %_5 = bitcast %"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"* %self1 to %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, !dbg !3377
  store %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_5, %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %self.dbg.spill3, align 8, !dbg !3378
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %self.dbg.spill3, metadata !3379, metadata !DIExpression()), !dbg !3389
  %1 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_5 to i64*, !dbg !3389
  %_7 = load i64, i64* %1, align 8, !dbg !3389, !range !2078, !noundef !27
  switch i64 %_7, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ], !dbg !3389

bb3:                                              ; preds = %start
  unreachable, !dbg !3389

bb2:                                              ; preds = %start
  %2 = bitcast i64** %0 to {}**, !dbg !3389
  store {}* null, {}** %2, align 8, !dbg !3389
  br label %bb1, !dbg !3389

bb4:                                              ; preds = %start
  %3 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_5 to %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::Some"*, !dbg !3389
  %x = getelementptr inbounds %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::Some", %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::Some"* %3, i32 0, i32 1, !dbg !3389
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %x, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %x.dbg.spill, align 8, !dbg !3389
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %x.dbg.spill, metadata !3386, metadata !DIExpression()), !dbg !3390
  %4 = bitcast i64** %0 to %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"**, !dbg !3390
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %x, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %4, align 8, !dbg !3390
  br label %bb1, !dbg !3389

bb1:                                              ; preds = %bb2, %bb4
  %5 = load i64*, i64** %0, align 8, !dbg !3391, !align !1193
  ret i64* %5, !dbg !3391
}

; std::thread::local::lazy::LazyKeyInner<T>::take
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$4take17h63535b62087b3b82E"(%"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* sret(%"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>") %0, %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* align 8 %self) unnamed_addr #1 !dbg !3392 {
start:
  %self.dbg.spill3 = alloca %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, align 8
  %self.dbg.spill2 = alloca %"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"*, align 8
  %self.dbg.spill = alloca %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, align 8
  %_8 = alloca %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", align 8
  store %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %self, %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %self.dbg.spill, metadata !3397, metadata !DIExpression()), !dbg !3398
  %self1 = bitcast %"std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %self to %"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"*, !dbg !3399
  store %"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"* %self1, %"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"** %self.dbg.spill2, align 8, !dbg !3399
  call void @llvm.dbg.declare(metadata %"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"** %self.dbg.spill2, metadata !3400, metadata !DIExpression()), !dbg !3404
  %_5 = bitcast %"core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"* %self1 to %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, !dbg !3404
  store %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_5, %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %self.dbg.spill3, align 8, !dbg !3405
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %self.dbg.spill3, metadata !3406, metadata !DIExpression()), !dbg !3410
  %1 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_8 to i64*, !dbg !3410
  store i64 0, i64* %1, align 8, !dbg !3410
; call core::mem::replace
  call void @_ZN4core3mem7replace17h5a00048dad880c23E(%"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* sret(%"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>") %0, %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* align 8 %_5, %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_8), !dbg !3410
  br label %bb1, !dbg !3410

bb1:                                              ; preds = %start
  ret void, !dbg !3411
}

; std::panicking::begin_panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
define internal void @_ZN3std9panicking11begin_panic17hed299a0b07cec048E(%"alloc::string::String"* %msg, %"core::panic::location::Location"* align 8 %0) unnamed_addr #4 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3412 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %loc.dbg.spill = alloca %"core::panic::location::Location"*, align 8
  %2 = alloca %"core::panic::location::Location"*, align 8
  %_4 = alloca i8, align 1
  %_3 = alloca %"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]", align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %msg, metadata !3417, metadata !DIExpression()), !dbg !3422
  store i8 1, i8* %_4, align 1, !dbg !3423
  store %"core::panic::location::Location"* %0, %"core::panic::location::Location"** %2, align 8, !dbg !3424
  %loc = load %"core::panic::location::Location"*, %"core::panic::location::Location"** %2, align 8, !dbg !3424, !nonnull !27, !align !1193, !noundef !27
  store %"core::panic::location::Location"* %loc, %"core::panic::location::Location"** %loc.dbg.spill, align 8, !dbg !3424
  call void @llvm.dbg.declare(metadata %"core::panic::location::Location"** %loc.dbg.spill, metadata !3418, metadata !DIExpression()), !dbg !3431
  br label %bb4, !dbg !3424

bb4:                                              ; preds = %start
  store i8 0, i8* %_4, align 1, !dbg !3432
  %3 = bitcast %"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]"* %_3 to %"alloc::string::String"*, !dbg !3432
  %4 = bitcast %"alloc::string::String"* %3 to i8*, !dbg !3432
  %5 = bitcast %"alloc::string::String"* %msg to i8*, !dbg !3432
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !3432
  %6 = getelementptr inbounds %"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]", %"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]"* %_3, i32 0, i32 1, !dbg !3432
  store %"core::panic::location::Location"* %loc, %"core::panic::location::Location"** %6, align 8, !dbg !3432
; invoke std::sys_common::backtrace::__rust_end_short_backtrace
  invoke void @_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17h24620aa2f97a02d9E(%"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]"* %_3) #18
          to label %unreachable unwind label %cleanup, !dbg !3433

bb3:                                              ; preds = %cleanup
  %7 = load i8, i8* %_4, align 1, !dbg !3434, !range !759, !noundef !27
  %8 = trunc i8 %7 to i1, !dbg !3434
  br i1 %8, label %bb2, label %bb1, !dbg !3434

cleanup:                                          ; preds = %bb4
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb3

unreachable:                                      ; preds = %bb4
  unreachable

bb1:                                              ; preds = %bb2, %bb3
  %14 = bitcast { i8*, i32 }* %1 to i8**, !dbg !3435
  %15 = load i8*, i8** %14, align 8, !dbg !3435
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !3435
  %17 = load i32, i32* %16, align 8, !dbg !3435
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0, !dbg !3435
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1, !dbg !3435
  resume { i8*, i32 } %19, !dbg !3435

bb2:                                              ; preds = %bb3
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"* %msg) #19
          to label %bb1 unwind label %abort, !dbg !3434

abort:                                            ; preds = %bb2
  %20 = landingpad { i8*, i32 }
          cleanup, !dbg !3435
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !3435
  unreachable, !dbg !3435
}

; std::panicking::begin_panic::PanicPayload<A>::new
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN3std9panicking11begin_panic21PanicPayload$LT$A$GT$3new17h47c4a722f0a2b18fE"(%"std::panicking::begin_panic::PanicPayload<alloc::string::String>"* sret(%"std::panicking::begin_panic::PanicPayload<alloc::string::String>") %0, %"alloc::string::String"* %inner) unnamed_addr #1 !dbg !3436 {
start:
  %_3 = alloca %"alloc::string::String", align 8
  %_2 = alloca %"core::option::Option<alloc::string::String>", align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %inner, metadata !3440, metadata !DIExpression()), !dbg !3441
  %1 = bitcast %"alloc::string::String"* %_3 to i8*, !dbg !3442
  %2 = bitcast %"alloc::string::String"* %inner to i8*, !dbg !3442
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !3442
  %3 = bitcast %"core::option::Option<alloc::string::String>"* %_2 to %"core::option::Option<alloc::string::String>::Some"*, !dbg !3443
  %4 = bitcast %"core::option::Option<alloc::string::String>::Some"* %3 to %"alloc::string::String"*, !dbg !3443
  %5 = bitcast %"alloc::string::String"* %4 to i8*, !dbg !3443
  %6 = bitcast %"alloc::string::String"* %_3 to i8*, !dbg !3443
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !3443
  %7 = bitcast %"std::panicking::begin_panic::PanicPayload<alloc::string::String>"* %0 to %"core::option::Option<alloc::string::String>"*, !dbg !3444
  %8 = bitcast %"core::option::Option<alloc::string::String>"* %7 to i8*, !dbg !3444
  %9 = bitcast %"core::option::Option<alloc::string::String>"* %_2 to i8*, !dbg !3444
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false), !dbg !3444
  ret void, !dbg !3445
}

; std::panicking::begin_panic::{{closure}}
; Function Attrs: inlinehint noreturn nonlazybind uwtable
define internal void @"_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17h9299bb9144d5d9faE"(%"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]"* %_1) unnamed_addr #5 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3446 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_8 = alloca i64*, align 8
  %_7 = alloca %"alloc::string::String", align 8
  %_6 = alloca %"std::panicking::begin_panic::PanicPayload<alloc::string::String>", align 8
  %1 = bitcast %"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]"* %_1 to %"alloc::string::String"*
  call void @llvm.dbg.declare(metadata %"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]"* %_1, metadata !3448, metadata !DIExpression()), !dbg !3450
  %2 = getelementptr inbounds %"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]", %"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]"* %_1, i32 0, i32 1
  call void @llvm.dbg.declare(metadata %"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]"* %_1, metadata !3449, metadata !DIExpression(DW_OP_plus_uconst, 24)), !dbg !3451
  %3 = bitcast %"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]"* %_1 to %"alloc::string::String"*, !dbg !3452
  %4 = bitcast %"alloc::string::String"* %_7 to i8*, !dbg !3452
  %5 = bitcast %"alloc::string::String"* %3 to i8*, !dbg !3452
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !3452
; call std::panicking::begin_panic::PanicPayload<A>::new
  call void @"_ZN3std9panicking11begin_panic21PanicPayload$LT$A$GT$3new17h47c4a722f0a2b18fE"(%"std::panicking::begin_panic::PanicPayload<alloc::string::String>"* sret(%"std::panicking::begin_panic::PanicPayload<alloc::string::String>") %_6, %"alloc::string::String"* %_7), !dbg !3453
  br label %bb1, !dbg !3453

bb1:                                              ; preds = %start
  %_3.0 = bitcast %"std::panicking::begin_panic::PanicPayload<alloc::string::String>"* %_6 to {}*, !dbg !3454
  %6 = bitcast i64** %_8 to {}**, !dbg !3455
  store {}* null, {}** %6, align 8, !dbg !3455
  %7 = getelementptr inbounds %"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]", %"[closure@std::panicking::begin_panic<alloc::string::String>::{closure#0}]"* %_1, i32 0, i32 1, !dbg !3456
  %_10 = load %"core::panic::location::Location"*, %"core::panic::location::Location"** %7, align 8, !dbg !3456, !nonnull !27, !align !1193, !noundef !27
  %8 = load i64*, i64** %_8, align 8, !dbg !3457, !align !1193
; invoke std::panicking::rust_panic_with_hook
  invoke void @_ZN3std9panicking20rust_panic_with_hook17hf1e7a1cb721a9823E({}* align 1 %_3.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8*, i8* }>* @vtable.0 to [3 x i64]*), i64* align 8 %8, %"core::panic::location::Location"* align 8 %_10, i1 zeroext true) #18
          to label %unreachable unwind label %cleanup, !dbg !3457

bb2:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::panicking::begin_panic::PanicPayload<alloc::string::String>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$std..panicking..begin_panic..PanicPayload$LT$alloc..string..String$GT$$GT$17hdb31efc448dc26bcE"(%"std::panicking::begin_panic::PanicPayload<alloc::string::String>"* %_6) #19
          to label %bb3 unwind label %abort, !dbg !3458

cleanup:                                          ; preds = %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb2

unreachable:                                      ; preds = %bb1
  unreachable

abort:                                            ; preds = %bb2
  %14 = landingpad { i8*, i32 }
          cleanup, !dbg !3459
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !3459
  unreachable, !dbg !3459

bb3:                                              ; preds = %bb2
  %15 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3459
  %16 = load i8*, i8** %15, align 8, !dbg !3459
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3459
  %18 = load i32, i32* %17, align 8, !dbg !3459
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0, !dbg !3459
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1, !dbg !3459
  resume { i8*, i32 } %20, !dbg !3459
}

; std::panicking::try
; Function Attrs: nonlazybind uwtable
define internal { i8*, i8* } @_ZN3std9panicking3try17h047ed4ea129d31ccE(%"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %f) unnamed_addr #1 !dbg !3460 {
start:
  %slot.dbg.spill1 = alloca { i8*, i64* }, align 8
  %0 = alloca i32, align 4
  %data_ptr.dbg.spill = alloca i8*, align 8
  %slot.dbg.spill = alloca %"core::mem::manually_drop::ManuallyDrop<()>", align 1
  %_18 = alloca %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>", align 8
  %value = alloca %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>", align 8
  %_3 = alloca %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>", align 8
  %data = alloca %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>", align 8
  %1 = alloca { i8*, i8* }, align 8
  call void @llvm.dbg.declare(metadata %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %f, metadata !3462, metadata !DIExpression()), !dbg !3487
  call void @llvm.dbg.declare(metadata %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"* %data, metadata !3463, metadata !DIExpression()), !dbg !3488
  call void @llvm.dbg.declare(metadata %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %value, metadata !3489, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<()>"* %slot.dbg.spill, metadata !3497, metadata !DIExpression()), !dbg !3503
  %2 = bitcast %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %value to i8*, !dbg !3505
  %3 = bitcast %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %f to i8*, !dbg !3505
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 40, i1 false), !dbg !3505
  %4 = bitcast %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %_18 to i8*, !dbg !3495
  %5 = bitcast %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %value to i8*, !dbg !3495
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 40, i1 false), !dbg !3495
  %6 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"* %_3 to %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"*, !dbg !3495
  %7 = bitcast %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %6 to i8*, !dbg !3495
  %8 = bitcast %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %_18 to i8*, !dbg !3495
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 40, i1 false), !dbg !3495
  %9 = bitcast %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"* %data to %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"*, !dbg !3506
  %10 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"* %9 to i8*, !dbg !3506
  %11 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"* %_3 to i8*, !dbg !3506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 40, i1 false), !dbg !3506
  %data_ptr = bitcast %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"* %data to i8*, !dbg !3507
  store i8* %data_ptr, i8** %data_ptr.dbg.spill, align 8, !dbg !3507
  call void @llvm.dbg.declare(metadata i8** %data_ptr.dbg.spill, metadata !3484, metadata !DIExpression()), !dbg !3508
  %12 = call i32 @__rust_try(void (i8*)* @_ZN3std9panicking3try7do_call17hb50dabacbcc9832eE, i8* %data_ptr, void (i8*, i8*)* @_ZN3std9panicking3try8do_catch17h5a46316d0e807170E), !dbg !3509
  store i32 %12, i32* %0, align 4, !dbg !3509
  %_9 = load i32, i32* %0, align 4, !dbg !3509
  br label %bb1, !dbg !3509

bb1:                                              ; preds = %start
  %13 = icmp eq i32 %_9, 0, !dbg !3509
  br i1 %13, label %bb2, label %bb3, !dbg !3509

bb2:                                              ; preds = %bb1
  %14 = bitcast { i8*, i8* }* %1 to %"core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Ok"*, !dbg !3510
  %15 = bitcast %"core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Ok"* %14 to {}*, !dbg !3510
  %16 = bitcast { i8*, i8* }* %1 to {}**, !dbg !3510
  store {}* null, {}** %16, align 8, !dbg !3510
  br label %bb4, !dbg !3511

bb3:                                              ; preds = %bb1
  %17 = bitcast %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"* %data to { i8*, i64* }*, !dbg !3512
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %17, i32 0, i32 0, !dbg !3512
  %slot.0 = load i8*, i8** %18, align 8, !dbg !3512, !nonnull !27, !align !608, !noundef !27
  %19 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %17, i32 0, i32 1, !dbg !3512
  %slot.1 = load i64*, i64** %19, align 8, !dbg !3512, !nonnull !27, !align !1193, !noundef !27
  %20 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %slot.dbg.spill1, i32 0, i32 0, !dbg !3512
  store i8* %slot.0, i8** %20, align 8, !dbg !3512
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %slot.dbg.spill1, i32 0, i32 1, !dbg !3512
  store i64* %slot.1, i64** %21, align 8, !dbg !3512
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %slot.dbg.spill1, metadata !3513, metadata !DIExpression()), !dbg !3519
  %_16.0 = bitcast i8* %slot.0 to {}*, !dbg !3519
  %_16.1 = bitcast i64* %slot.1 to [3 x i64]*, !dbg !3519
  %22 = bitcast { i8*, i8* }* %1 to { {}*, [3 x i64]* }*, !dbg !3521
  %23 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %22, i32 0, i32 0, !dbg !3521
  store {}* %_16.0, {}** %23, align 8, !dbg !3521
  %24 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %22, i32 0, i32 1, !dbg !3521
  store [3 x i64]* %_16.1, [3 x i64]** %24, align 8, !dbg !3521
  br label %bb4, !dbg !3511

bb4:                                              ; preds = %bb2, %bb3
  %25 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0, !dbg !3522
  %26 = load i8*, i8** %25, align 8, !dbg !3522, !align !608
  %27 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1, !dbg !3522
  %28 = load i8*, i8** %27, align 8, !dbg !3522
  %29 = insertvalue { i8*, i8* } undef, i8* %26, 0, !dbg !3522
  %30 = insertvalue { i8*, i8* } %29, i8* %28, 1, !dbg !3522
  ret { i8*, i8* } %30, !dbg !3522
}

; std::panicking::try::do_call
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std9panicking3try7do_call17hb50dabacbcc9832eE(i8* %data) unnamed_addr #0 !dbg !3523 {
start:
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"*, align 8
  %src.dbg.spill = alloca %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"*, align 8
  %slot.dbg.spill = alloca %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"*, align 8
  %data.dbg.spill3 = alloca %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"*, align 8
  %data.dbg.spill2 = alloca %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"*, align 8
  %value.dbg.spill = alloca {}, align 1
  %data.dbg.spill = alloca i8*, align 8
  %slot = alloca %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>", align 8
  %self = alloca %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>", align 8
  %_10 = alloca %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>", align 8
  %_8 = alloca %"core::mem::manually_drop::ManuallyDrop<()>", align 1
  %f = alloca %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>", align 8
  store i8* %data, i8** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !3525, metadata !DIExpression()), !dbg !3534
  call void @llvm.dbg.declare(metadata %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %f, metadata !3532, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.declare(metadata {}* %value.dbg.spill, metadata !3536, metadata !DIExpression()), !dbg !3540
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"* %tmp, metadata !3542, metadata !DIExpression()), !dbg !3556
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"* %self, metadata !3566, metadata !DIExpression()), !dbg !3572
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"* %slot, metadata !3574, metadata !DIExpression()), !dbg !3580
  %data1 = bitcast i8* %data to %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"*, !dbg !3582
  store %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"* %data1, %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"** %data.dbg.spill2, align 8, !dbg !3582
  call void @llvm.dbg.declare(metadata %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"** %data.dbg.spill2, metadata !3526, metadata !DIExpression()), !dbg !3583
  store %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"* %data1, %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"** %data.dbg.spill3, align 8, !dbg !3584
  call void @llvm.dbg.declare(metadata %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"** %data.dbg.spill3, metadata !3529, metadata !DIExpression()), !dbg !3585
  %_7 = bitcast %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"* %data1 to %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"*, !dbg !3586
  store %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"* %_7, %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"** %slot.dbg.spill, align 8, !dbg !3586
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"** %slot.dbg.spill, metadata !3563, metadata !DIExpression()), !dbg !3587
  %_13 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"* %_7 to %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"*, !dbg !3587
  store %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %_13, %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"** %src.dbg.spill, align 8, !dbg !3587
  call void @llvm.dbg.declare(metadata %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"** %src.dbg.spill, metadata !3550, metadata !DIExpression()), !dbg !3588
  %0 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"* %tmp to {}*, !dbg !3589
  store %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"** %self.dbg.spill, align 8, !dbg !3556
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"** %self.dbg.spill, metadata !3595, metadata !DIExpression()), !dbg !3603
  %_16 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"* %tmp to %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"*, !dbg !3603
  %1 = bitcast %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %_16 to i8*, !dbg !3556
  %2 = bitcast %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %_13 to i8*, !dbg !3556
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false), !dbg !3556
  %3 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"* %self to i8*, !dbg !3556
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"* %tmp to i8*, !dbg !3556
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false), !dbg !3556
  br label %bb2, !dbg !3572

bb2:                                              ; preds = %start
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"* %self to %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"*, !dbg !3572
  %6 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"* %slot to i8*, !dbg !3572
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"* %5 to i8*, !dbg !3572
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 40, i1 false), !dbg !3572
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>>"* %slot to %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"*, !dbg !3580
  %9 = bitcast %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %f to i8*, !dbg !3580
  %10 = bitcast %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %8 to i8*, !dbg !3580
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 40, i1 false), !dbg !3580
  %11 = bitcast %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %_10 to i8*, !dbg !3605
  %12 = bitcast %"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %f to i8*, !dbg !3605
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 40, i1 false), !dbg !3605
; call <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
  call void @"_ZN115_$LT$core..panic..unwind_safe..AssertUnwindSafe$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$$LP$$RP$$GT$$GT$9call_once17h0f824571ee362855E"(%"core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>"* %_10), !dbg !3605
  br label %bb1, !dbg !3605

bb1:                                              ; preds = %bb2
  %13 = bitcast %"core::mem::manually_drop::ManuallyDrop<()>"* %_8 to {}*, !dbg !3540
  %14 = bitcast %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"* %data1 to %"core::mem::manually_drop::ManuallyDrop<()>"*, !dbg !3606
  ret void, !dbg !3607
}

; std::panicking::try::do_catch
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std9panicking3try8do_catch17h5a46316d0e807170E(i8* %data, i8* %payload) unnamed_addr #0 !dbg !3608 {
start:
  %value.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %obj.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %data.dbg.spill3 = alloca %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"*, align 8
  %data.dbg.spill2 = alloca %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"*, align 8
  %payload.dbg.spill = alloca i8*, align 8
  %data.dbg.spill = alloca i8*, align 8
  %_8 = alloca { i8*, i64* }, align 8
  store i8* %data, i8** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !3612, metadata !DIExpression()), !dbg !3620
  store i8* %payload, i8** %payload.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.dbg.spill, metadata !3613, metadata !DIExpression()), !dbg !3621
  %data1 = bitcast i8* %data to %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"*, !dbg !3622
  store %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"* %data1, %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"** %data.dbg.spill2, align 8, !dbg !3622
  call void @llvm.dbg.declare(metadata %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"** %data.dbg.spill2, metadata !3614, metadata !DIExpression()), !dbg !3623
  store %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"* %data1, %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"** %data.dbg.spill3, align 8, !dbg !3624
  call void @llvm.dbg.declare(metadata %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"** %data.dbg.spill3, metadata !3616, metadata !DIExpression()), !dbg !3625
; call std::panicking::try::cleanup
  %0 = call { {}*, [3 x i64]* } @_ZN3std9panicking3try7cleanup17hc943fe53eebad02eE(i8* %payload), !dbg !3626
  %obj.0 = extractvalue { {}*, [3 x i64]* } %0, 0, !dbg !3626
  %obj.1 = extractvalue { {}*, [3 x i64]* } %0, 1, !dbg !3626
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %obj.dbg.spill, i32 0, i32 0, !dbg !3626
  store {}* %obj.0, {}** %1, align 8, !dbg !3626
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %obj.dbg.spill, i32 0, i32 1, !dbg !3626
  store [3 x i64]* %obj.1, [3 x i64]** %2, align 8, !dbg !3626
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %obj.dbg.spill, metadata !3618, metadata !DIExpression()), !dbg !3627
  br label %bb1, !dbg !3626

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %value.dbg.spill, i32 0, i32 0, !dbg !3628
  store {}* %obj.0, {}** %3, align 8, !dbg !3628
  %4 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %value.dbg.spill, i32 0, i32 1, !dbg !3628
  store [3 x i64]* %obj.1, [3 x i64]** %4, align 8, !dbg !3628
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %value.dbg.spill, metadata !3629, metadata !DIExpression()), !dbg !3635
  %5 = bitcast { i8*, i64* }* %_8 to { {}*, [3 x i64]* }*, !dbg !3635
  %6 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %5, i32 0, i32 0, !dbg !3635
  store {}* %obj.0, {}** %6, align 8, !dbg !3635
  %7 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %5, i32 0, i32 1, !dbg !3635
  store [3 x i64]* %obj.1, [3 x i64]** %7, align 8, !dbg !3635
  %8 = bitcast %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>"* %data1 to { i8*, i64* }*, !dbg !3637
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_8, i32 0, i32 0, !dbg !3637
  %10 = load i8*, i8** %9, align 8, !dbg !3637, !nonnull !27, !align !608, !noundef !27
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_8, i32 0, i32 1, !dbg !3637
  %12 = load i64*, i64** %11, align 8, !dbg !3637, !nonnull !27, !align !1193, !noundef !27
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 0, !dbg !3637
  store i8* %10, i8** %13, align 8, !dbg !3637
  %14 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 1, !dbg !3637
  store i64* %12, i64** %14, align 8, !dbg !3637
  ret void, !dbg !3638
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h1f515c5ffdd0d64bE"({ [0 x i8]*, i64 }* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !3639 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill, metadata !3645, metadata !DIExpression()), !dbg !3647
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !3646, metadata !DIExpression()), !dbg !3648
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0, !dbg !3649
  %_6.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !3649, !nonnull !27, !align !608, !noundef !27
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1, !dbg !3649
  %_6.1 = load i64, i64* %1, align 8, !dbg !3649
; call <str as core::fmt::Debug>::fmt
  %2 = call zeroext i1 @"_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h158131d6df421a05E"([0 x i8]* align 1 %_6.0, i64 %_6.1, %"core::fmt::Formatter"* align 8 %f), !dbg !3650
  br label %bb1, !dbg !3650

bb1:                                              ; preds = %start
  ret i1 %2, !dbg !3651
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbc18d34cc4cf18f7E"(i8** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !3652 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8**, align 8
  store i8** %self, i8*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill, metadata !3657, metadata !DIExpression()), !dbg !3659
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !3658, metadata !DIExpression()), !dbg !3660
  %_6 = load i8*, i8** %self, align 8, !dbg !3661, !nonnull !27, !align !608, !noundef !27
; call core::fmt::num::<impl core::fmt::Debug for u8>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h2b57816d96c16d29E"(i8* align 1 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !3662
  br label %bb1, !dbg !3662

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !3663
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he718d28ed36feac2E"({ [0 x i8]*, i64 }* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !3664 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill, metadata !3669, metadata !DIExpression()), !dbg !3671
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !3670, metadata !DIExpression()), !dbg !3672
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0, !dbg !3673
  %_6.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !3673, !nonnull !27, !align !608, !noundef !27
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1, !dbg !3673
  %_6.1 = load i64, i64* %1, align 8, !dbg !3673
; call <[T] as core::fmt::Debug>::fmt
  %2 = call zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17hae625f7e4cf7709aE"([0 x i8]* align 1 %_6.0, i64 %_6.1, %"core::fmt::Formatter"* align 8 %f), !dbg !3674
  br label %bb1, !dbg !3674

bb1:                                              ; preds = %start
  ret i1 %2, !dbg !3675
}

; <[T] as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17hae625f7e4cf7709aE"([0 x i8]* align 1 %self.0, i64 %self.1, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !3676 {
start:
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_6 = alloca %"core::fmt::builders::DebugList", align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3681, metadata !DIExpression()), !dbg !3683
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !3682, metadata !DIExpression()), !dbg !3684
; call core::fmt::Formatter::debug_list
  call void @_ZN4core3fmt9Formatter10debug_list17h2e70d1c34e8cb782E(%"core::fmt::builders::DebugList"* sret(%"core::fmt::builders::DebugList") %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !3685
  br label %bb1, !dbg !3685

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !3686
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8, !dbg !3686
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !3686
  store i64 %self.1, i64* %3, align 8, !dbg !3686
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !3687, metadata !DIExpression()), !dbg !3693
; call core::slice::iter::Iter<T>::new
  %4 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17ha977156ac332a7d0E"([0 x i8]* align 1 %self.0, i64 %self.1), !dbg !3693
  %_8.0 = extractvalue { i8*, i8* } %4, 0, !dbg !3693
  %_8.1 = extractvalue { i8*, i8* } %4, 1, !dbg !3693
  br label %bb4, !dbg !3693

bb4:                                              ; preds = %bb1
; call core::fmt::builders::DebugList::entries
  %_4 = call align 8 %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList7entries17h1f4181b7f26d85aeE(%"core::fmt::builders::DebugList"* align 8 %_6, i8* %_8.0, i8* %_8.1), !dbg !3685
  br label %bb2, !dbg !3685

bb2:                                              ; preds = %bb4
; call core::fmt::builders::DebugList::finish
  %5 = call zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17ha896c0aa3642bf32E(%"core::fmt::builders::DebugList"* align 8 %_4), !dbg !3685
  br label %bb3, !dbg !3685

bb3:                                              ; preds = %bb2
  ret i1 %5, !dbg !3694
}

; core::any::TypeId::of
; Function Attrs: nonlazybind uwtable
define internal i64 @_ZN4core3any6TypeId2of17hf6117aa77346b9f4E() unnamed_addr #1 !dbg !3695 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 8175271873271494452, i64* %0, align 8, !dbg !3698
  %_1 = load i64, i64* %0, align 8, !dbg !3698
  br label %bb1, !dbg !3698

bb1:                                              ; preds = %start
  store i64 %_1, i64* %1, align 8, !dbg !3699
  %2 = load i64, i64* %1, align 8, !dbg !3700
  ret i64 %2, !dbg !3700
}

; core::cmp::Ord::max
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3cmp3Ord3max17h3d8b339d630bc134E(i64 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3701 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %_8 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %3 = alloca i64, align 8
  %other = alloca i64, align 8
  %self = alloca i64, align 8
  store i64 %0, i64* %self, align 8
  store i64 %1, i64* %other, align 8
  call void @llvm.dbg.declare(metadata i64* %self, metadata !3707, metadata !DIExpression()), !dbg !3711
  call void @llvm.dbg.declare(metadata i64* %other, metadata !3708, metadata !DIExpression()), !dbg !3712
  store i8 1, i8* %_9, align 1, !dbg !3713
  store i8 1, i8* %_8, align 1, !dbg !3713
; invoke core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %4 = invoke i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h698f6b872abea088E"(i64* align 8 %self, i64* align 8 %other)
          to label %bb1 unwind label %cleanup, !dbg !3713, !range !3714

bb8:                                              ; preds = %cleanup
  br label %bb13, !dbg !3715

cleanup:                                          ; preds = %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb8

bb1:                                              ; preds = %start
  store i8 %4, i8* %_3, align 1, !dbg !3713
  %_7 = load i8, i8* %_3, align 1, !dbg !3713, !range !3714, !noundef !27
  switch i8 %_7, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ], !dbg !3716

bb13:                                             ; preds = %bb8
  %10 = load i8, i8* %_9, align 1, !dbg !3715, !range !759, !noundef !27
  %11 = trunc i8 %10 to i1, !dbg !3715
  br i1 %11, label %bb12, label %bb9, !dbg !3715

bb3:                                              ; preds = %bb1
  unreachable, !dbg !3713

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_8, align 1, !dbg !3717
  %12 = load i64, i64* %other, align 8, !dbg !3717
  store i64 %12, i64* %3, align 8, !dbg !3717
  br label %bb5, !dbg !3717

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_9, align 1, !dbg !3718
  %13 = load i64, i64* %self, align 8, !dbg !3718
  store i64 %13, i64* %3, align 8, !dbg !3718
  br label %bb5, !dbg !3718

bb5:                                              ; preds = %bb4, %bb2
  %14 = load i8, i8* %_8, align 1, !dbg !3715, !range !759, !noundef !27
  %15 = trunc i8 %14 to i1, !dbg !3715
  br i1 %15, label %bb10, label %bb6, !dbg !3715

bb6:                                              ; preds = %bb10, %bb5
  %16 = load i8, i8* %_9, align 1, !dbg !3715, !range !759, !noundef !27
  %17 = trunc i8 %16 to i1, !dbg !3715
  br i1 %17, label %bb11, label %bb7, !dbg !3715

bb10:                                             ; preds = %bb5
  br label %bb6, !dbg !3715

bb9:                                              ; preds = %bb12, %bb13
  %18 = bitcast { i8*, i32 }* %2 to i8**, !dbg !3719
  %19 = load i8*, i8** %18, align 8, !dbg !3719
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !3719
  %21 = load i32, i32* %20, align 8, !dbg !3719
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0, !dbg !3719
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1, !dbg !3719
  resume { i8*, i32 } %23, !dbg !3719

bb12:                                             ; preds = %bb13
  br label %bb9, !dbg !3715

bb7:                                              ; preds = %bb11, %bb6
  %24 = load i64, i64* %3, align 8, !dbg !3720
  ret i64 %24, !dbg !3720

bb11:                                             ; preds = %bb6
  br label %bb7, !dbg !3715
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h698f6b872abea088E"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #0 !dbg !3721 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  %0 = alloca i8, align 1
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !3727, metadata !DIExpression()), !dbg !3729
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !3728, metadata !DIExpression()), !dbg !3730
  %_4 = load i64, i64* %self, align 8, !dbg !3731
  %_5 = load i64, i64* %other, align 8, !dbg !3732
  %_3 = icmp ult i64 %_4, %_5, !dbg !3731
  br i1 %_3, label %bb1, label %bb2, !dbg !3731

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8, !dbg !3733
  %_8 = load i64, i64* %other, align 8, !dbg !3734
  %_6 = icmp eq i64 %_7, %_8, !dbg !3733
  br i1 %_6, label %bb3, label %bb4, !dbg !3733

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1, !dbg !3735
  br label %bb6, !dbg !3736

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !dbg !3737, !range !3714, !noundef !27
  ret i8 %1, !dbg !3737

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1, !dbg !3738
  br label %bb5, !dbg !3739

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1, !dbg !3740
  br label %bb5, !dbg !3739

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6, !dbg !3736
}

; core::ffi::c_str::CStr::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN4core3ffi5c_str4CStr6as_ptr17h49ea30813ca2b85dE(%"core::ffi::c_str::CStr"* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !3741 {
start:
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { %"core::ffi::c_str::CStr"*, i64 }, align 8
  %0 = getelementptr inbounds { %"core::ffi::c_str::CStr"*, i64 }, { %"core::ffi::c_str::CStr"*, i64 }* %self.dbg.spill, i32 0, i32 0
  store %"core::ffi::c_str::CStr"* %self.0, %"core::ffi::c_str::CStr"** %0, align 8
  %1 = getelementptr inbounds { %"core::ffi::c_str::CStr"*, i64 }, { %"core::ffi::c_str::CStr"*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { %"core::ffi::c_str::CStr"*, i64 }* %self.dbg.spill, metadata !3757, metadata !DIExpression()), !dbg !3758
  %self.01 = bitcast %"core::ffi::c_str::CStr"* %self.0 to [0 x i8]*, !dbg !3759
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !3759
  store [0 x i8]* %self.01, [0 x i8]** %2, align 8, !dbg !3759
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !3759
  store i64 %self.1, i64* %3, align 8, !dbg !3759
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !3760, metadata !DIExpression()), !dbg !3773
  %4 = bitcast [0 x i8]* %self.01 to i8*, !dbg !3773
  ret i8* %4, !dbg !3774
}

; core::fmt::ArgumentV1::new_debug
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64* } @_ZN4core3fmt10ArgumentV19new_debug17h11007976e2ae55e0E([16 x i8]* align 1 %x) unnamed_addr #0 !dbg !3775 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 ([16 x i8]*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca [16 x i8]*, align 8
  %x.dbg.spill = alloca [16 x i8]*, align 8
  %2 = alloca { i8*, i64* }, align 8
  store [16 x i8]* %x, [16 x i8]** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [16 x i8]** %x.dbg.spill, metadata !3780, metadata !DIExpression()), !dbg !3783
  store [16 x i8]* %x, [16 x i8]** %x.dbg.spill1, align 8, !dbg !3784
  call void @llvm.dbg.declare(metadata [16 x i8]** %x.dbg.spill1, metadata !3785, metadata !DIExpression()), !dbg !3794
  store i1 ([16 x i8]*, %"core::fmt::Formatter"*)* @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17h26f7dc4fb55d5aa1E", i1 ([16 x i8]*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !3796
  call void @llvm.dbg.declare(metadata i1 ([16 x i8]*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !3793, metadata !DIExpression()), !dbg !3794
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 ([16 x i8]*, %"core::fmt::Formatter"*)* @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17h26f7dc4fb55d5aa1E" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3794
  %_4 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3794, !nonnull !27, !noundef !27
  br label %bb1, !dbg !3794

bb1:                                              ; preds = %start
  %3 = bitcast [16 x i8]* %x to %"core::fmt::Opaque"*, !dbg !3794
  store %"core::fmt::Opaque"* %3, %"core::fmt::Opaque"** %0, align 8, !dbg !3794
  %_6 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !3794, !nonnull !27, !align !608, !noundef !27
  br label %bb2, !dbg !3794

bb2:                                              ; preds = %bb1
  %4 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**, !dbg !3794
  store %"core::fmt::Opaque"* %_6, %"core::fmt::Opaque"** %4, align 8, !dbg !3794
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3794
  %6 = bitcast i64** %5 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !3794
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_4, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !3794
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !3797
  %8 = load i8*, i8** %7, align 8, !dbg !3797, !nonnull !27, !align !608, !noundef !27
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3797
  %10 = load i64*, i64** %9, align 8, !dbg !3797, !nonnull !27, !noundef !27
  %11 = insertvalue { i8*, i64* } undef, i8* %8, 0, !dbg !3797
  %12 = insertvalue { i8*, i64* } %11, i64* %10, 1, !dbg !3797
  ret { i8*, i64* } %12, !dbg !3797
}

; core::fmt::ArgumentV1::new_debug
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64* } @_ZN4core3fmt10ArgumentV19new_debug17h881e4fa91d92a927E({ [0 x i8]*, i64 }* align 8 %x) unnamed_addr #0 !dbg !3798 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca { [0 x i8]*, i64 }*, align 8
  %x.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %2 = alloca { i8*, i64* }, align 8
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %x.dbg.spill, metadata !3802, metadata !DIExpression()), !dbg !3803
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %x.dbg.spill1, align 8, !dbg !3804
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %x.dbg.spill1, metadata !3805, metadata !DIExpression()), !dbg !3812
  store i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h1f515c5ffdd0d64bE", i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !3814
  call void @llvm.dbg.declare(metadata i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !3811, metadata !DIExpression()), !dbg !3812
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h1f515c5ffdd0d64bE" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3812
  %_4 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3812, !nonnull !27, !noundef !27
  br label %bb1, !dbg !3812

bb1:                                              ; preds = %start
  %3 = bitcast { [0 x i8]*, i64 }* %x to %"core::fmt::Opaque"*, !dbg !3812
  store %"core::fmt::Opaque"* %3, %"core::fmt::Opaque"** %0, align 8, !dbg !3812
  %_6 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !3812, !nonnull !27, !align !608, !noundef !27
  br label %bb2, !dbg !3812

bb2:                                              ; preds = %bb1
  %4 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**, !dbg !3812
  store %"core::fmt::Opaque"* %_6, %"core::fmt::Opaque"** %4, align 8, !dbg !3812
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3812
  %6 = bitcast i64** %5 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !3812
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_4, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !3812
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !3815
  %8 = load i8*, i8** %7, align 8, !dbg !3815, !nonnull !27, !align !608, !noundef !27
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3815
  %10 = load i64*, i64** %9, align 8, !dbg !3815, !nonnull !27, !noundef !27
  %11 = insertvalue { i8*, i64* } undef, i8* %8, 0, !dbg !3815
  %12 = insertvalue { i8*, i64* } %11, i64* %10, 1, !dbg !3815
  ret { i8*, i64* } %12, !dbg !3815
}

; core::fmt::num::<impl core::fmt::Debug for u8>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h2b57816d96c16d29E"(i8* align 1 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #0 !dbg !3816 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %0 = alloca i8, align 1
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !3823, metadata !DIExpression()), !dbg !3825
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !3824, metadata !DIExpression()), !dbg !3826
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h861f5ddbf758e4f9E(%"core::fmt::Formatter"* align 8 %f), !dbg !3827
  br label %bb1, !dbg !3827

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4, !dbg !3827

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h21ddf2be2e6a0fd5E(%"core::fmt::Formatter"* align 8 %f), !dbg !3828
  br label %bb5, !dbg !3828

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17h437d704c417669d5E"(i8* align 1 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !3829
  %2 = zext i1 %1 to i8, !dbg !3829
  store i8 %2, i8* %0, align 1, !dbg !3829
  br label %bb3, !dbg !3829

bb3:                                              ; preds = %bb2
  br label %bb11, !dbg !3830

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !dbg !3831, !range !759, !noundef !27
  %4 = trunc i8 %3 to i1, !dbg !3831
  ret i1 %4, !dbg !3831

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8, !dbg !3828

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17h2c072cd9eb854d8eE"(i8* align 1 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !3832
  %6 = zext i1 %5 to i8, !dbg !3832
  store i8 %6, i8* %0, align 1, !dbg !3832
  br label %bb9, !dbg !3832

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17h1deefbda95ae754eE"(i8* align 1 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !3833
  %8 = zext i1 %7 to i8, !dbg !3833
  store i8 %8, i8* %0, align 1, !dbg !3833
  br label %bb7, !dbg !3833

bb7:                                              ; preds = %bb6
  br label %bb10, !dbg !3834

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11, !dbg !3830

bb9:                                              ; preds = %bb8
  br label %bb10, !dbg !3834
}

; core::fmt::builders::DebugList::entries
; Function Attrs: nonlazybind uwtable
define internal align 8 %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList7entries17h1f4181b7f26d85aeE(%"core::fmt::builders::DebugList"* align 8 %self, i8* %entries.0, i8* %entries.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3835 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %entries.dbg.spill = alloca { i8*, i8* }, align 8
  %self.dbg.spill = alloca %"core::fmt::builders::DebugList"*, align 8
  %entry = alloca i8*, align 8
  %_7 = alloca i8*, align 8
  %iter = alloca { i8*, i8* }, align 8
  store %"core::fmt::builders::DebugList"* %self, %"core::fmt::builders::DebugList"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::builders::DebugList"** %self.dbg.spill, metadata !3850, metadata !DIExpression()), !dbg !3859
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %entries.dbg.spill, i32 0, i32 0
  store i8* %entries.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %entries.dbg.spill, i32 0, i32 1
  store i8* %entries.1, i8** %2, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %entries.dbg.spill, metadata !3851, metadata !DIExpression()), !dbg !3860
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %iter, metadata !3852, metadata !DIExpression()), !dbg !3861
  call void @llvm.dbg.declare(metadata i8** %entry, metadata !3854, metadata !DIExpression()), !dbg !3862
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %3 = call { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h99c7c5edb85f7ec6E"(i8* %entries.0, i8* %entries.1), !dbg !3863
  %_4.0 = extractvalue { i8*, i8* } %3, 0, !dbg !3863
  %_4.1 = extractvalue { i8*, i8* } %3, 1, !dbg !3863
  br label %bb1, !dbg !3863

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 0, !dbg !3863
  store i8* %_4.0, i8** %4, align 8, !dbg !3863
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 1, !dbg !3863
  store i8* %_4.1, i8** %5, align 8, !dbg !3863
  br label %bb2, !dbg !3864

bb2:                                              ; preds = %bb8, %bb1
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %6 = invoke align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h49c6b49183a26f7dE"({ i8*, i8* }* align 8 %iter)
          to label %bb3 unwind label %cleanup, !dbg !3861

bb11:                                             ; preds = %bb10, %cleanup
  br label %bb12, !dbg !3865

cleanup:                                          ; preds = %bb2
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb11

bb3:                                              ; preds = %bb2
  store i8* %6, i8** %_7, align 8, !dbg !3861
  %12 = bitcast i8** %_7 to {}**, !dbg !3861
  %13 = load {}*, {}** %12, align 8, !dbg !3861
  %14 = icmp eq {}* %13, null, !dbg !3861
  %_10 = select i1 %14, i64 0, i64 1, !dbg !3861
  switch i64 %_10, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ], !dbg !3861

bb5:                                              ; preds = %bb3
  unreachable, !dbg !3861

bb6:                                              ; preds = %bb3
  br label %bb9, !dbg !3865

bb4:                                              ; preds = %bb3
  %15 = load i8*, i8** %_7, align 8, !dbg !3866, !nonnull !27, !align !608, !noundef !27
  store i8* %15, i8** %entry, align 8, !dbg !3866
  %_14.0 = bitcast i8** %entry to {}*, !dbg !3867
; invoke core::fmt::builders::DebugList::entry
  %_12 = invoke align 8 %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList5entry17h5007920add23274dE(%"core::fmt::builders::DebugList"* align 8 %self, {}* align 1 %_14.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.1 to [3 x i64]*))
          to label %bb7 unwind label %cleanup1, !dbg !3868

bb10:                                             ; preds = %cleanup1
  br label %bb11, !dbg !3869

cleanup1:                                         ; preds = %bb4
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb10

bb7:                                              ; preds = %bb4
  br label %bb8, !dbg !3869

bb8:                                              ; preds = %bb7
  br label %bb2, !dbg !3864

bb12:                                             ; preds = %bb11
  %21 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3870
  %22 = load i8*, i8** %21, align 8, !dbg !3870
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3870
  %24 = load i32, i32* %23, align 8, !dbg !3870
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0, !dbg !3870
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1, !dbg !3870
  resume { i8*, i32 } %26, !dbg !3870

bb9:                                              ; preds = %bb6
  ret %"core::fmt::builders::DebugList"* %self, !dbg !3871
}

; core::fmt::Arguments::as_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN4core3fmt9Arguments6as_str17hd9dd9a590817d817E(%"core::fmt::Arguments"* align 8 %self) unnamed_addr #0 !dbg !3872 {
start:
  %s.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill = alloca %"core::fmt::Arguments"*, align 8
  %_2 = alloca { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }, align 8
  %0 = alloca { i8*, i64 }, align 8
  store %"core::fmt::Arguments"* %self, %"core::fmt::Arguments"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Arguments"** %self.dbg.spill, metadata !3877, metadata !DIExpression()), !dbg !3880
  %1 = bitcast %"core::fmt::Arguments"* %self to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !3881
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %1, i32 0, i32 0, !dbg !3881
  %_3.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %2, align 8, !dbg !3881, !nonnull !27, !align !1193, !noundef !27
  %3 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %1, i32 0, i32 1, !dbg !3881
  %_3.1 = load i64, i64* %3, align 8, !dbg !3881
  %4 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %self, i32 0, i32 2, !dbg !3882
  %5 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %4, i32 0, i32 0, !dbg !3882
  %_4.0 = load [0 x { i8*, i64* }]*, [0 x { i8*, i64* }]** %5, align 8, !dbg !3882, !nonnull !27, !align !1193, !noundef !27
  %6 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %4, i32 0, i32 1, !dbg !3882
  %_4.1 = load i64, i64* %6, align 8, !dbg !3882
  %7 = bitcast { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !3883
  %8 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %7, i32 0, i32 0, !dbg !3883
  store [0 x { [0 x i8]*, i64 }]* %_3.0, [0 x { [0 x i8]*, i64 }]** %8, align 8, !dbg !3883
  %9 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %7, i32 0, i32 1, !dbg !3883
  store i64 %_3.1, i64* %9, align 8, !dbg !3883
  %10 = getelementptr inbounds { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }, { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2, i32 0, i32 1, !dbg !3883
  %11 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %10, i32 0, i32 0, !dbg !3883
  store [0 x { i8*, i64* }]* %_4.0, [0 x { i8*, i64* }]** %11, align 8, !dbg !3883
  %12 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %10, i32 0, i32 1, !dbg !3883
  store i64 %_4.1, i64* %12, align 8, !dbg !3883
  %13 = bitcast { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !3884
  %14 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %13, i32 0, i32 0, !dbg !3884
  %_21.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %14, align 8, !dbg !3884, !nonnull !27, !align !1193, !noundef !27
  %15 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %13, i32 0, i32 1, !dbg !3884
  %_21.1 = load i64, i64* %15, align 8, !dbg !3884
  %_16 = icmp eq i64 %_21.1, 0, !dbg !3884
  br i1 %_16, label %bb1, label %bb3, !dbg !3884

bb3:                                              ; preds = %start
  %16 = bitcast { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !3885
  %17 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %16, i32 0, i32 0, !dbg !3885
  %_23.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %17, align 8, !dbg !3885, !nonnull !27, !align !1193, !noundef !27
  %18 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %16, i32 0, i32 1, !dbg !3885
  %_23.1 = load i64, i64* %18, align 8, !dbg !3885
  %_13 = icmp eq i64 %_23.1, 1, !dbg !3885
  br i1 %_13, label %bb4, label %bb2, !dbg !3885

bb1:                                              ; preds = %start
  %19 = getelementptr inbounds { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }, { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2, i32 0, i32 1, !dbg !3886
  %20 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 0, !dbg !3886
  %_22.0 = load [0 x { i8*, i64* }]*, [0 x { i8*, i64* }]** %20, align 8, !dbg !3886, !nonnull !27, !align !1193, !noundef !27
  %21 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 1, !dbg !3886
  %_22.1 = load i64, i64* %21, align 8, !dbg !3886
  %_7 = icmp eq i64 %_22.1, 0, !dbg !3886
  br i1 %_7, label %bb5, label %bb2, !dbg !3886

bb2:                                              ; preds = %bb4, %bb3, %bb1
  %22 = bitcast { i8*, i64 }* %0 to {}**, !dbg !3887
  store {}* null, {}** %22, align 8, !dbg !3887
  br label %bb7, !dbg !3887

bb5:                                              ; preds = %bb1
  %23 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !3888
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 0, !dbg !3888
  store [0 x i8]* bitcast (<{}>* @alloc239 to [0 x i8]*), [0 x i8]** %24, align 8, !dbg !3888
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 1, !dbg !3888
  store i64 0, i64* %25, align 8, !dbg !3888
  br label %bb7, !dbg !3889

bb7:                                              ; preds = %bb2, %bb6, %bb5
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !3890
  %27 = load i8*, i8** %26, align 8, !dbg !3890, !align !608
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !3890
  %29 = load i64, i64* %28, align 8, !dbg !3890
  %30 = insertvalue { i8*, i64 } undef, i8* %27, 0, !dbg !3890
  %31 = insertvalue { i8*, i64 } %30, i64 %29, 1, !dbg !3890
  ret { i8*, i64 } %31, !dbg !3890

bb4:                                              ; preds = %bb3
  %32 = getelementptr inbounds { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }, { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2, i32 0, i32 1, !dbg !3891
  %33 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %32, i32 0, i32 0, !dbg !3891
  %_24.0 = load [0 x { i8*, i64* }]*, [0 x { i8*, i64* }]** %33, align 8, !dbg !3891, !nonnull !27, !align !1193, !noundef !27
  %34 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %32, i32 0, i32 1, !dbg !3891
  %_24.1 = load i64, i64* %34, align 8, !dbg !3891
  %_10 = icmp eq i64 %_24.1, 0, !dbg !3891
  br i1 %_10, label %bb6, label %bb2, !dbg !3891

bb6:                                              ; preds = %bb4
  %35 = bitcast { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !3892
  %36 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %35, i32 0, i32 0, !dbg !3892
  %_25.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %36, align 8, !dbg !3892, !nonnull !27, !align !1193, !noundef !27
  %37 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %35, i32 0, i32 1, !dbg !3892
  %_25.1 = load i64, i64* %37, align 8, !dbg !3892
  %s = getelementptr inbounds [0 x { [0 x i8]*, i64 }], [0 x { [0 x i8]*, i64 }]* %_25.0, i64 0, i64 0, !dbg !3892
  store { [0 x i8]*, i64 }* %s, { [0 x i8]*, i64 }** %s.dbg.spill, align 8, !dbg !3892
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %s.dbg.spill, metadata !3878, metadata !DIExpression()), !dbg !3893
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !3894
  %_26.0 = load [0 x i8]*, [0 x i8]** %38, align 8, !dbg !3894, !nonnull !27, !align !608, !noundef !27
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !3894
  %_26.1 = load i64, i64* %39, align 8, !dbg !3894
  %40 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !3895
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %40, i32 0, i32 0, !dbg !3895
  store [0 x i8]* %_26.0, [0 x i8]** %41, align 8, !dbg !3895
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %40, i32 0, i32 1, !dbg !3895
  store i64 %_26.1, i64* %42, align 8, !dbg !3895
  br label %bb7, !dbg !3896
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments6new_v117h09031697824c4fd0E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %0, [0 x { [0 x i8]*, i64 }]* align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* align 8 %args.0, i64 %args.1) unnamed_addr #0 !dbg !3897 {
start:
  %args.dbg.spill = alloca { [0 x { i8*, i64* }]*, i64 }, align 8
  %pieces.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %_24 = alloca { i64*, i64 }, align 8
  %_16 = alloca %"core::fmt::Arguments", align 8
  %_3 = alloca i8, align 1
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %1, align 8
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, metadata !3901, metadata !DIExpression()), !dbg !3903
  %3 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %3, align 8
  %4 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, metadata !3902, metadata !DIExpression()), !dbg !3904
  %_4 = icmp ult i64 %pieces.1, %args.1, !dbg !3905
  br i1 %_4, label %bb1, label %bb2, !dbg !3905

bb2:                                              ; preds = %start
  %_12 = add i64 %args.1, 1, !dbg !3906
  %_9 = icmp ugt i64 %pieces.1, %_12, !dbg !3907
  %5 = zext i1 %_9 to i8, !dbg !3905
  store i8 %5, i8* %_3, align 1, !dbg !3905
  br label %bb3, !dbg !3905

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1, !dbg !3905
  br label %bb3, !dbg !3905

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %_3, align 1, !dbg !3905, !range !759, !noundef !27
  %7 = trunc i8 %6 to i1, !dbg !3905
  br i1 %7, label %bb4, label %bb6, !dbg !3905

bb6:                                              ; preds = %bb3
  %8 = bitcast { i64*, i64 }* %_24 to {}**, !dbg !3908
  store {}* null, {}** %8, align 8, !dbg !3908
  %9 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !3909
  %10 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 0, !dbg !3909
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %10, align 8, !dbg !3909
  %11 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 1, !dbg !3909
  store i64 %pieces.1, i64* %11, align 8, !dbg !3909
  %12 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1, !dbg !3909
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 0, !dbg !3909
  %14 = load i64*, i64** %13, align 8, !dbg !3909, !align !1193
  %15 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 1, !dbg !3909
  %16 = load i64, i64* %15, align 8, !dbg !3909
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 0, !dbg !3909
  store i64* %14, i64** %17, align 8, !dbg !3909
  %18 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 1, !dbg !3909
  store i64 %16, i64* %18, align 8, !dbg !3909
  %19 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2, !dbg !3909
  %20 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 0, !dbg !3909
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %20, align 8, !dbg !3909
  %21 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 1, !dbg !3909
  store i64 %args.1, i64* %21, align 8, !dbg !3909
  ret void, !dbg !3910

bb4:                                              ; preds = %bb3
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h09031697824c4fd0E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_16, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc30 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc239 to [0 x { i8*, i64* }]*), i64 0), !dbg !3911
  br label %bb5, !dbg !3911

bb5:                                              ; preds = %bb4
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_16, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc201 to %"core::panic::location::Location"*)) #18, !dbg !3911
  unreachable, !dbg !3911
}

; core::mem::transmute_copy
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3mem14transmute_copy17h2e6e4585588377faE(%"proc_macro::bridge::client::BridgeState"* sret(%"proc_macro::bridge::client::BridgeState") %0, %"proc_macro::bridge::client::BridgeState"* align 8 %src) unnamed_addr #0 !dbg !3912 {
start:
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"*, align 8
  %src.dbg.spill1 = alloca %"proc_macro::bridge::client::BridgeState"*, align 8
  %src.dbg.spill = alloca %"proc_macro::bridge::client::BridgeState"*, align 8
  %slot = alloca %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::client::BridgeState>", align 8
  %self = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>", align 8
  %_7 = alloca %"core::fmt::Arguments", align 8
  store %"proc_macro::bridge::client::BridgeState"* %src, %"proc_macro::bridge::client::BridgeState"** %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"** %src.dbg.spill, metadata !3917, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %tmp, metadata !3921, metadata !DIExpression()), !dbg !3935
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %self, metadata !3937, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::client::BridgeState>"* %slot, metadata !3945, metadata !DIExpression()), !dbg !3951
  br i1 false, label %bb1, label %bb3, !dbg !3953

bb3:                                              ; preds = %start
  br i1 false, label %bb4, label %bb6, !dbg !3954

bb1:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h09031697824c4fd0E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_7, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc25 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc239 to [0 x { i8*, i64* }]*), i64 0), !dbg !3953
  br label %bb2, !dbg !3953

bb2:                                              ; preds = %bb1
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_7, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc203 to %"core::panic::location::Location"*)) #18, !dbg !3953
  unreachable, !dbg !3953

bb6:                                              ; preds = %bb3
  store %"proc_macro::bridge::client::BridgeState"* %src, %"proc_macro::bridge::client::BridgeState"** %src.dbg.spill1, align 8, !dbg !3955
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"** %src.dbg.spill1, metadata !3929, metadata !DIExpression()), !dbg !3956
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %tmp to {}*, !dbg !3957
  store %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"** %self.dbg.spill, align 8, !dbg !3935
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"** %self.dbg.spill, metadata !3963, metadata !DIExpression()), !dbg !3971
  %_25 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %tmp to %"proc_macro::bridge::client::BridgeState"*, !dbg !3971
  %2 = bitcast %"proc_macro::bridge::client::BridgeState"* %_25 to i8*, !dbg !3935
  %3 = bitcast %"proc_macro::bridge::client::BridgeState"* %src to i8*, !dbg !3935
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 80, i1 false), !dbg !3935
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %self to i8*, !dbg !3935
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %tmp to i8*, !dbg !3935
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 80, i1 false), !dbg !3935
  br label %bb8, !dbg !3943

bb4:                                              ; preds = %bb3
; call core::ptr::read_unaligned
  call void @_ZN4core3ptr14read_unaligned17h6bf55fba9e0be37fE(%"proc_macro::bridge::client::BridgeState"* sret(%"proc_macro::bridge::client::BridgeState") %0, %"proc_macro::bridge::client::BridgeState"* %src), !dbg !3973
  br label %bb5, !dbg !3973

bb5:                                              ; preds = %bb4
  br label %bb7, !dbg !3974

bb7:                                              ; preds = %bb8, %bb5
  ret void, !dbg !3975

bb8:                                              ; preds = %bb6
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %self to %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::client::BridgeState>"*, !dbg !3943
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::client::BridgeState>"* %slot to i8*, !dbg !3943
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::client::BridgeState>"* %6 to i8*, !dbg !3943
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 80, i1 false), !dbg !3943
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::client::BridgeState>"* %slot to %"proc_macro::bridge::client::BridgeState"*, !dbg !3951
  %10 = bitcast %"proc_macro::bridge::client::BridgeState"* %0 to i8*, !dbg !3951
  %11 = bitcast %"proc_macro::bridge::client::BridgeState"* %9 to i8*, !dbg !3951
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 80, i1 false), !dbg !3951
  br label %bb7, !dbg !3974
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3mem7replace17h5a00048dad880c23E(%"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* sret(%"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>") %result, %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* align 8 %dest, %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3976 {
start:
  %dst.dbg.spill = alloca %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"*, align 8
  %src.dbg.spill = alloca %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, align 8
  %dest.dbg.spill = alloca %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, align 8
  %slot = alloca %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", align 8
  %self = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", align 8
  %src1 = alloca %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %result, metadata !3982, metadata !DIExpression()), !dbg !3984
  store %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %dest, %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %dest.dbg.spill, metadata !3980, metadata !DIExpression()), !dbg !3985
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %src, metadata !3981, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %src1, metadata !3987, metadata !DIExpression()), !dbg !3994
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"* %tmp, metadata !3996, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"* %self, metadata !4015, metadata !DIExpression()), !dbg !4021
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"* %slot, metadata !4023, metadata !DIExpression()), !dbg !4029
  store %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %dest, %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %src.dbg.spill, align 8, !dbg !4031
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %src.dbg.spill, metadata !4004, metadata !DIExpression()), !dbg !4032
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"* %tmp to {}*, !dbg !4033
  store %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"** %self.dbg.spill, align 8, !dbg !4013
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"** %self.dbg.spill, metadata !4039, metadata !DIExpression()), !dbg !4046
  %_9 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"* %tmp to %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, !dbg !4046
  %2 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_9 to i8*, !dbg !4013
  %3 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %dest to i8*, !dbg !4013
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 88, i1 false), !dbg !4013
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"* %self to i8*, !dbg !4013
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"* %tmp to i8*, !dbg !4013
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 88, i1 false), !dbg !4013
  br label %bb4, !dbg !4021

bb4:                                              ; preds = %start
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"* %self to %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"*, !dbg !4021
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"* %slot to i8*, !dbg !4021
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"* %6 to i8*, !dbg !4021
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 88, i1 false), !dbg !4021
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>"* %slot to %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, !dbg !4029
  %10 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %result to i8*, !dbg !4029
  %11 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %9 to i8*, !dbg !4029
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 88, i1 false), !dbg !4029
  store %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %dest, %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %dst.dbg.spill, align 8, !dbg !4048
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %dst.dbg.spill, metadata !3993, metadata !DIExpression()), !dbg !3994
  %12 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %src1 to i8*, !dbg !4049
  %13 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %src to i8*, !dbg !4049
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 88, i1 false), !dbg !4049
  %14 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %dest to i8*, !dbg !3994
  %15 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %src1 to i8*, !dbg !3994
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 88, i1 false), !dbg !3994
  ret void, !dbg !4050

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !4051

bb1:                                              ; preds = %bb2, %bb3
  %16 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4052
  %17 = load i8*, i8** %16, align 8, !dbg !4052
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4052
  %19 = load i32, i32* %18, align 8, !dbg !4052
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !4052
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !4052
  resume { i8*, i32 } %21, !dbg !4052

bb2:                                              ; preds = %bb3
; invoke core::ptr::drop_in_place<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>
  invoke void @"_ZN4core3ptr140drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$proc_macro..bridge..client..BridgeStateL$GT$$GT$$GT$17he92c14df81bac4fdE"(%"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %src) #19
          to label %bb1 unwind label %abort, !dbg !4051

abort:                                            ; preds = %bb2
  %22 = landingpad { i8*, i32 }
          cleanup, !dbg !4052
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !4052
  unreachable, !dbg !4052
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN4core3mem7replace17h7376dcee016dc44dE(i8* align 1 %dest, i8 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4053 {
start:
  %dst.dbg.spill = alloca i8*, align 8
  %result.dbg.spill = alloca i8, align 1
  %slot.dbg.spill = alloca i8, align 1
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill3 = alloca i8, align 1
  %self.dbg.spill = alloca i8*, align 8
  %src.dbg.spill2 = alloca i8*, align 8
  %src.dbg.spill = alloca i8, align 1
  %dest.dbg.spill = alloca i8*, align 8
  %tmp = alloca i8, align 1
  %src1 = alloca i8, align 1
  store i8* %dest, i8** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.dbg.spill, metadata !4058, metadata !DIExpression()), !dbg !4062
  store i8 %src, i8* %src.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %src.dbg.spill, metadata !4059, metadata !DIExpression()), !dbg !4063
  call void @llvm.dbg.declare(metadata i8* %src1, metadata !4064, metadata !DIExpression()), !dbg !4071
  call void @llvm.dbg.declare(metadata i8* %tmp, metadata !4073, metadata !DIExpression()), !dbg !4090
  store i8* %dest, i8** %src.dbg.spill2, align 8, !dbg !4092
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill2, metadata !4081, metadata !DIExpression()), !dbg !4093
  %1 = bitcast i8* %tmp to {}*, !dbg !4094
  store i8* %tmp, i8** %self.dbg.spill, align 8, !dbg !4090
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !4100, metadata !DIExpression()), !dbg !4107
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %tmp, i8* align 1 %dest, i64 1, i1 false), !dbg !4090
  %self = load i8, i8* %tmp, align 1, !dbg !4090
  store i8 %self, i8* %self.dbg.spill3, align 1, !dbg !4090
  call void @llvm.dbg.declare(metadata i8* %self.dbg.spill3, metadata !4109, metadata !DIExpression()), !dbg !4115
  br label %bb4, !dbg !4115

bb4:                                              ; preds = %start
  store i8 %self, i8* %slot.dbg.spill, align 1, !dbg !4115
  call void @llvm.dbg.declare(metadata i8* %slot.dbg.spill, metadata !4117, metadata !DIExpression()), !dbg !4123
  store i8 %self, i8* %result.dbg.spill, align 1, !dbg !4123
  call void @llvm.dbg.declare(metadata i8* %result.dbg.spill, metadata !4060, metadata !DIExpression()), !dbg !4125
  store i8* %dest, i8** %dst.dbg.spill, align 8, !dbg !4126
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !4070, metadata !DIExpression()), !dbg !4071
  store i8 %src, i8* %src1, align 1, !dbg !4127
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dest, i8* align 1 %src1, i64 1, i1 false), !dbg !4071
  ret i8 %self, !dbg !4128

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !4129

bb1:                                              ; preds = %bb2, %bb3
  %2 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4130
  %3 = load i8*, i8** %2, align 8, !dbg !4130
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4130
  %5 = load i32, i32* %4, align 8, !dbg !4130
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0, !dbg !4130
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1, !dbg !4130
  resume { i8*, i32 } %7, !dbg !4130

bb2:                                              ; preds = %bb3
  br label %bb1, !dbg !4129
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3mem7replace17h9cc864aff5afd957E(%"core::option::Option<proc_macro::bridge::client::BridgeState>"* sret(%"core::option::Option<proc_macro::bridge::client::BridgeState>") %result, %"core::option::Option<proc_macro::bridge::client::BridgeState>"* align 8 %dest, %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4131 {
start:
  %dst.dbg.spill = alloca %"core::option::Option<proc_macro::bridge::client::BridgeState>"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::client::BridgeState>>"*, align 8
  %src.dbg.spill = alloca %"core::option::Option<proc_macro::bridge::client::BridgeState>"*, align 8
  %dest.dbg.spill = alloca %"core::option::Option<proc_macro::bridge::client::BridgeState>"*, align 8
  %slot = alloca %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::bridge::client::BridgeState>>", align 8
  %self = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::client::BridgeState>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::client::BridgeState>>", align 8
  %src1 = alloca %"core::option::Option<proc_macro::bridge::client::BridgeState>", align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %result, metadata !4137, metadata !DIExpression()), !dbg !4141
  store %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %dest, %"core::option::Option<proc_macro::bridge::client::BridgeState>"** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::client::BridgeState>"** %dest.dbg.spill, metadata !4135, metadata !DIExpression()), !dbg !4142
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %src, metadata !4136, metadata !DIExpression()), !dbg !4143
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %src1, metadata !4144, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::client::BridgeState>>"* %tmp, metadata !4154, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::client::BridgeState>>"* %self, metadata !4173, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::bridge::client::BridgeState>>"* %slot, metadata !4181, metadata !DIExpression()), !dbg !4187
  store %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %dest, %"core::option::Option<proc_macro::bridge::client::BridgeState>"** %src.dbg.spill, align 8, !dbg !4189
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::client::BridgeState>"** %src.dbg.spill, metadata !4162, metadata !DIExpression()), !dbg !4190
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::client::BridgeState>>"* %tmp to {}*, !dbg !4191
  store %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::client::BridgeState>>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::client::BridgeState>>"** %self.dbg.spill, align 8, !dbg !4171
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::client::BridgeState>>"** %self.dbg.spill, metadata !4197, metadata !DIExpression()), !dbg !4204
  %_9 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::client::BridgeState>>"* %tmp to %"core::option::Option<proc_macro::bridge::client::BridgeState>"*, !dbg !4204
  %2 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %_9 to i8*, !dbg !4171
  %3 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %dest to i8*, !dbg !4171
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 80, i1 false), !dbg !4171
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::client::BridgeState>>"* %self to i8*, !dbg !4171
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::client::BridgeState>>"* %tmp to i8*, !dbg !4171
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 80, i1 false), !dbg !4171
  br label %bb4, !dbg !4179

bb4:                                              ; preds = %start
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::client::BridgeState>>"* %self to %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::bridge::client::BridgeState>>"*, !dbg !4179
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::bridge::client::BridgeState>>"* %slot to i8*, !dbg !4179
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::bridge::client::BridgeState>>"* %6 to i8*, !dbg !4179
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 80, i1 false), !dbg !4179
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::bridge::client::BridgeState>>"* %slot to %"core::option::Option<proc_macro::bridge::client::BridgeState>"*, !dbg !4187
  %10 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %result to i8*, !dbg !4187
  %11 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %9 to i8*, !dbg !4187
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 80, i1 false), !dbg !4187
  store %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %dest, %"core::option::Option<proc_macro::bridge::client::BridgeState>"** %dst.dbg.spill, align 8, !dbg !4206
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::client::BridgeState>"** %dst.dbg.spill, metadata !4151, metadata !DIExpression()), !dbg !4152
  %12 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %src1 to i8*, !dbg !4207
  %13 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %src to i8*, !dbg !4207
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 80, i1 false), !dbg !4207
  %14 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %dest to i8*, !dbg !4152
  %15 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %src1 to i8*, !dbg !4152
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 80, i1 false), !dbg !4152
  ret void, !dbg !4208

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !4209

bb1:                                              ; preds = %bb2, %bb3
  %16 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4210
  %17 = load i8*, i8** %16, align 8, !dbg !4210
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4210
  %19 = load i32, i32* %18, align 8, !dbg !4210
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !4210
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !4210
  resume { i8*, i32 } %21, !dbg !4210

bb2:                                              ; preds = %bb3
; invoke core::ptr::drop_in_place<core::option::Option<proc_macro::bridge::client::BridgeState>>
  invoke void @"_ZN4core3ptr88drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..client..BridgeState$GT$$GT$17hcd4d70fee93d206cE"(%"core::option::Option<proc_macro::bridge::client::BridgeState>"* %src) #19
          to label %bb1 unwind label %abort, !dbg !4209

abort:                                            ; preds = %bb2
  %22 = landingpad { i8*, i32 }
          cleanup, !dbg !4210
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !4210
  unreachable, !dbg !4210
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3mem7replace17haedb1d51e20a5159E(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %result, %"proc_macro::bridge::buffer::Buffer"* align 8 %dest, %"proc_macro::bridge::buffer::Buffer"* %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4211 {
start:
  %dst.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::buffer::Buffer>"*, align 8
  %src.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %dest.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %slot = alloca %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::buffer::Buffer>", align 8
  %self = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::buffer::Buffer>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::buffer::Buffer>", align 8
  %src1 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"* %result, metadata !4217, metadata !DIExpression()), !dbg !4219
  store %"proc_macro::bridge::buffer::Buffer"* %dest, %"proc_macro::bridge::buffer::Buffer"** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %dest.dbg.spill, metadata !4215, metadata !DIExpression()), !dbg !4220
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"* %src, metadata !4216, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"* %src1, metadata !4222, metadata !DIExpression()), !dbg !4230
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::buffer::Buffer>"* %tmp, metadata !4232, metadata !DIExpression()), !dbg !4249
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::buffer::Buffer>"* %self, metadata !4251, metadata !DIExpression()), !dbg !4257
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::buffer::Buffer>"* %slot, metadata !4259, metadata !DIExpression()), !dbg !4265
  store %"proc_macro::bridge::buffer::Buffer"* %dest, %"proc_macro::bridge::buffer::Buffer"** %src.dbg.spill, align 8, !dbg !4267
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %src.dbg.spill, metadata !4240, metadata !DIExpression()), !dbg !4268
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::buffer::Buffer>"* %tmp to {}*, !dbg !4269
  store %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::buffer::Buffer>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::buffer::Buffer>"** %self.dbg.spill, align 8, !dbg !4249
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::buffer::Buffer>"** %self.dbg.spill, metadata !4275, metadata !DIExpression()), !dbg !4282
  %_9 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::buffer::Buffer>"* %tmp to %"proc_macro::bridge::buffer::Buffer"*, !dbg !4282
  %2 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_9 to i8*, !dbg !4249
  %3 = bitcast %"proc_macro::bridge::buffer::Buffer"* %dest to i8*, !dbg !4249
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 40, i1 false), !dbg !4249
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::buffer::Buffer>"* %self to i8*, !dbg !4249
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::buffer::Buffer>"* %tmp to i8*, !dbg !4249
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 40, i1 false), !dbg !4249
  br label %bb4, !dbg !4257

bb4:                                              ; preds = %start
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::buffer::Buffer>"* %self to %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::buffer::Buffer>"*, !dbg !4257
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::buffer::Buffer>"* %slot to i8*, !dbg !4257
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::buffer::Buffer>"* %6 to i8*, !dbg !4257
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 40, i1 false), !dbg !4257
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::buffer::Buffer>"* %slot to %"proc_macro::bridge::buffer::Buffer"*, !dbg !4265
  %10 = bitcast %"proc_macro::bridge::buffer::Buffer"* %result to i8*, !dbg !4265
  %11 = bitcast %"proc_macro::bridge::buffer::Buffer"* %9 to i8*, !dbg !4265
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 40, i1 false), !dbg !4265
  store %"proc_macro::bridge::buffer::Buffer"* %dest, %"proc_macro::bridge::buffer::Buffer"** %dst.dbg.spill, align 8, !dbg !4284
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %dst.dbg.spill, metadata !4229, metadata !DIExpression()), !dbg !4230
  %12 = bitcast %"proc_macro::bridge::buffer::Buffer"* %src1 to i8*, !dbg !4285
  %13 = bitcast %"proc_macro::bridge::buffer::Buffer"* %src to i8*, !dbg !4285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 40, i1 false), !dbg !4285
  %14 = bitcast %"proc_macro::bridge::buffer::Buffer"* %dest to i8*, !dbg !4230
  %15 = bitcast %"proc_macro::bridge::buffer::Buffer"* %src1 to i8*, !dbg !4230
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 40, i1 false), !dbg !4230
  ret void, !dbg !4286

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !4287

bb1:                                              ; preds = %bb2, %bb3
  %16 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4288
  %17 = load i8*, i8** %16, align 8, !dbg !4288
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4288
  %19 = load i32, i32* %18, align 8, !dbg !4288
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !4288
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !4288
  resume { i8*, i32 } %21, !dbg !4288

bb2:                                              ; preds = %bb3
; invoke core::ptr::drop_in_place<proc_macro::bridge::buffer::Buffer>
  invoke void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..bridge..buffer..Buffer$GT$17ha3af9902afa5dfbfE"(%"proc_macro::bridge::buffer::Buffer"* %src) #19
          to label %bb1 unwind label %abort, !dbg !4287

abort:                                            ; preds = %bb2
  %22 = landingpad { i8*, i32 }
          cleanup, !dbg !4288
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !4288
  unreachable, !dbg !4288
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3mem7replace17hbbfe64bd76114668E(%"core::option::Option<alloc::string::String>"* sret(%"core::option::Option<alloc::string::String>") %result, %"core::option::Option<alloc::string::String>"* align 8 %dest, %"core::option::Option<alloc::string::String>"* %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4289 {
start:
  %dst.dbg.spill = alloca %"core::option::Option<alloc::string::String>"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::string::String>>"*, align 8
  %src.dbg.spill = alloca %"core::option::Option<alloc::string::String>"*, align 8
  %dest.dbg.spill = alloca %"core::option::Option<alloc::string::String>"*, align 8
  %slot = alloca %"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::string::String>>", align 8
  %self = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::string::String>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::string::String>>", align 8
  %src1 = alloca %"core::option::Option<alloc::string::String>", align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::string::String>"* %result, metadata !4296, metadata !DIExpression()), !dbg !4300
  store %"core::option::Option<alloc::string::String>"* %dest, %"core::option::Option<alloc::string::String>"** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::string::String>"** %dest.dbg.spill, metadata !4294, metadata !DIExpression()), !dbg !4301
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::string::String>"* %src, metadata !4295, metadata !DIExpression()), !dbg !4302
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::string::String>"* %src1, metadata !4303, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::string::String>>"* %tmp, metadata !4313, metadata !DIExpression()), !dbg !4330
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::string::String>>"* %self, metadata !4332, metadata !DIExpression()), !dbg !4338
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::string::String>>"* %slot, metadata !4340, metadata !DIExpression()), !dbg !4346
  store %"core::option::Option<alloc::string::String>"* %dest, %"core::option::Option<alloc::string::String>"** %src.dbg.spill, align 8, !dbg !4348
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::string::String>"** %src.dbg.spill, metadata !4321, metadata !DIExpression()), !dbg !4349
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::string::String>>"* %tmp to {}*, !dbg !4350
  store %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::string::String>>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::string::String>>"** %self.dbg.spill, align 8, !dbg !4330
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::string::String>>"** %self.dbg.spill, metadata !4356, metadata !DIExpression()), !dbg !4363
  %_9 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::string::String>>"* %tmp to %"core::option::Option<alloc::string::String>"*, !dbg !4363
  %2 = bitcast %"core::option::Option<alloc::string::String>"* %_9 to i8*, !dbg !4330
  %3 = bitcast %"core::option::Option<alloc::string::String>"* %dest to i8*, !dbg !4330
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !4330
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::string::String>>"* %self to i8*, !dbg !4330
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::string::String>>"* %tmp to i8*, !dbg !4330
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !4330
  br label %bb4, !dbg !4338

bb4:                                              ; preds = %start
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::string::String>>"* %self to %"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::string::String>>"*, !dbg !4338
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::string::String>>"* %slot to i8*, !dbg !4338
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::string::String>>"* %6 to i8*, !dbg !4338
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !4338
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::string::String>>"* %slot to %"core::option::Option<alloc::string::String>"*, !dbg !4346
  %10 = bitcast %"core::option::Option<alloc::string::String>"* %result to i8*, !dbg !4346
  %11 = bitcast %"core::option::Option<alloc::string::String>"* %9 to i8*, !dbg !4346
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !dbg !4346
  store %"core::option::Option<alloc::string::String>"* %dest, %"core::option::Option<alloc::string::String>"** %dst.dbg.spill, align 8, !dbg !4365
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::string::String>"** %dst.dbg.spill, metadata !4310, metadata !DIExpression()), !dbg !4311
  %12 = bitcast %"core::option::Option<alloc::string::String>"* %src1 to i8*, !dbg !4366
  %13 = bitcast %"core::option::Option<alloc::string::String>"* %src to i8*, !dbg !4366
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !4366
  %14 = bitcast %"core::option::Option<alloc::string::String>"* %dest to i8*, !dbg !4311
  %15 = bitcast %"core::option::Option<alloc::string::String>"* %src1 to i8*, !dbg !4311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false), !dbg !4311
  ret void, !dbg !4367

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !4368

bb1:                                              ; preds = %bb2, %bb3
  %16 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4369
  %17 = load i8*, i8** %16, align 8, !dbg !4369
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4369
  %19 = load i32, i32* %18, align 8, !dbg !4369
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !4369
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !4369
  resume { i8*, i32 } %21, !dbg !4369

bb2:                                              ; preds = %bb3
; invoke core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h59c5944dd0f7c63fE"(%"core::option::Option<alloc::string::String>"* %src) #19
          to label %bb1 unwind label %abort, !dbg !4368

abort:                                            ; preds = %bb2
  %22 = landingpad { i8*, i32 }
          cleanup, !dbg !4369
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !4369
  unreachable, !dbg !4369
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3mem7replace17hd0fb35326f122d1aE(%"proc_macro::bridge::client::BridgeState"* sret(%"proc_macro::bridge::client::BridgeState") %result, %"proc_macro::bridge::client::BridgeState"* align 8 %dest, %"proc_macro::bridge::client::BridgeState"* %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4370 {
start:
  %dst.dbg.spill = alloca %"proc_macro::bridge::client::BridgeState"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"*, align 8
  %src.dbg.spill = alloca %"proc_macro::bridge::client::BridgeState"*, align 8
  %dest.dbg.spill = alloca %"proc_macro::bridge::client::BridgeState"*, align 8
  %slot = alloca %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::client::BridgeState>", align 8
  %self = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>", align 8
  %src1 = alloca %"proc_macro::bridge::client::BridgeState", align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %result, metadata !4376, metadata !DIExpression()), !dbg !4378
  store %"proc_macro::bridge::client::BridgeState"* %dest, %"proc_macro::bridge::client::BridgeState"** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"** %dest.dbg.spill, metadata !4374, metadata !DIExpression()), !dbg !4379
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %src, metadata !4375, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %src1, metadata !4381, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %tmp, metadata !4390, metadata !DIExpression()), !dbg !4397
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %self, metadata !4399, metadata !DIExpression()), !dbg !4403
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::client::BridgeState>"* %slot, metadata !4405, metadata !DIExpression()), !dbg !4409
  store %"proc_macro::bridge::client::BridgeState"* %dest, %"proc_macro::bridge::client::BridgeState"** %src.dbg.spill, align 8, !dbg !4411
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"** %src.dbg.spill, metadata !4395, metadata !DIExpression()), !dbg !4412
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %tmp to {}*, !dbg !4413
  store %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"** %self.dbg.spill, align 8, !dbg !4397
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"** %self.dbg.spill, metadata !4417, metadata !DIExpression()), !dbg !4421
  %_9 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %tmp to %"proc_macro::bridge::client::BridgeState"*, !dbg !4421
  %2 = bitcast %"proc_macro::bridge::client::BridgeState"* %_9 to i8*, !dbg !4397
  %3 = bitcast %"proc_macro::bridge::client::BridgeState"* %dest to i8*, !dbg !4397
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 80, i1 false), !dbg !4397
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %self to i8*, !dbg !4397
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %tmp to i8*, !dbg !4397
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 80, i1 false), !dbg !4397
  br label %bb4, !dbg !4403

bb4:                                              ; preds = %start
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %self to %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::client::BridgeState>"*, !dbg !4403
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::client::BridgeState>"* %slot to i8*, !dbg !4403
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::client::BridgeState>"* %6 to i8*, !dbg !4403
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 80, i1 false), !dbg !4403
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::client::BridgeState>"* %slot to %"proc_macro::bridge::client::BridgeState"*, !dbg !4409
  %10 = bitcast %"proc_macro::bridge::client::BridgeState"* %result to i8*, !dbg !4409
  %11 = bitcast %"proc_macro::bridge::client::BridgeState"* %9 to i8*, !dbg !4409
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 80, i1 false), !dbg !4409
  store %"proc_macro::bridge::client::BridgeState"* %dest, %"proc_macro::bridge::client::BridgeState"** %dst.dbg.spill, align 8, !dbg !4423
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"** %dst.dbg.spill, metadata !4387, metadata !DIExpression()), !dbg !4388
  %12 = bitcast %"proc_macro::bridge::client::BridgeState"* %src1 to i8*, !dbg !4424
  %13 = bitcast %"proc_macro::bridge::client::BridgeState"* %src to i8*, !dbg !4424
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 80, i1 false), !dbg !4424
  %14 = bitcast %"proc_macro::bridge::client::BridgeState"* %dest to i8*, !dbg !4388
  %15 = bitcast %"proc_macro::bridge::client::BridgeState"* %src1 to i8*, !dbg !4388
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 80, i1 false), !dbg !4388
  ret void, !dbg !4425

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !4426

bb1:                                              ; preds = %bb2, %bb3
  %16 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4427
  %17 = load i8*, i8** %16, align 8, !dbg !4427
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4427
  %19 = load i32, i32* %18, align 8, !dbg !4427
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !4427
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !4427
  resume { i8*, i32 } %21, !dbg !4427

bb2:                                              ; preds = %bb3
; invoke core::ptr::drop_in_place<proc_macro::bridge::client::BridgeState>
  invoke void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..BridgeState$GT$17haf8a3b6b03ea9458E"(%"proc_macro::bridge::client::BridgeState"* %src) #19
          to label %bb1 unwind label %abort, !dbg !4426

abort:                                            ; preds = %bb2
  %22 = landingpad { i8*, i32 }
          cleanup, !dbg !4427
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !4427
  unreachable, !dbg !4427
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17hc352243ed65aed56E"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !4428 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill4 = alloca i8, align 1
  %a.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill2 = alloca i64, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i8 }, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !4434, metadata !DIExpression()), !dbg !4439
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !4435, metadata !DIExpression()), !dbg !4440
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !4441
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !4442, metadata !DIExpression()), !dbg !4455
  store i64 %rhs, i64* %rhs.dbg.spill2, align 8, !dbg !4456
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill2, metadata !4451, metadata !DIExpression()), !dbg !4455
  %3 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs), !dbg !4455
  %4 = extractvalue { i64, i1 } %3, 0, !dbg !4455
  %5 = extractvalue { i64, i1 } %3, 1, !dbg !4455
  %6 = zext i1 %5 to i8, !dbg !4455
  %7 = bitcast { i64, i8 }* %1 to i64*, !dbg !4455
  store i64 %4, i64* %7, align 8, !dbg !4455
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !4455
  store i8 %6, i8* %8, align 8, !dbg !4455
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !4455
  %_13.0 = load i64, i64* %9, align 8, !dbg !4455
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !4455
  %11 = load i8, i8* %10, align 8, !dbg !4455, !range !759, !noundef !27
  %_13.1 = trunc i8 %11 to i1, !dbg !4455
  br label %bb5, !dbg !4455

bb5:                                              ; preds = %start
  store i64 %_13.0, i64* %a.dbg.spill, align 8, !dbg !4455
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !4452, metadata !DIExpression()), !dbg !4457
  %12 = zext i1 %_13.1 to i8, !dbg !4455
  store i8 %12, i8* %b.dbg.spill, align 1, !dbg !4455
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !4454, metadata !DIExpression()), !dbg !4457
  %13 = bitcast { i64, i8 }* %_5 to i64*, !dbg !4457
  store i64 %_13.0, i64* %13, align 8, !dbg !4457
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !4457
  %15 = zext i1 %_13.1 to i8, !dbg !4457
  store i8 %15, i8* %14, align 8, !dbg !4457
  %16 = bitcast { i64, i8 }* %_5 to i64*, !dbg !4458
  %a = load i64, i64* %16, align 8, !dbg !4458
  store i64 %a, i64* %a.dbg.spill3, align 8, !dbg !4458
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill3, metadata !4436, metadata !DIExpression()), !dbg !4459
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !4460
  %18 = load i8, i8* %17, align 8, !dbg !4460, !range !759, !noundef !27
  %b = trunc i8 %18 to i1, !dbg !4460
  %19 = zext i1 %b to i8, !dbg !4460
  store i8 %19, i8* %b.dbg.spill4, align 1, !dbg !4460
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill4, metadata !4438, metadata !DIExpression()), !dbg !4461
  %20 = call i1 @llvm.expect.i1(i1 %b, i1 false), !dbg !4462
  %21 = zext i1 %20 to i8, !dbg !4462
  store i8 %21, i8* %0, align 1, !dbg !4462
  %22 = load i8, i8* %0, align 1, !dbg !4462, !range !759, !noundef !27
  %_8 = trunc i8 %22 to i1, !dbg !4462
  br label %bb1, !dbg !4462

bb1:                                              ; preds = %bb5
  br i1 %_8, label %bb2, label %bb3, !dbg !4462

bb3:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !4463
  store i64 %a, i64* %23, align 8, !dbg !4463
  %24 = bitcast { i64, i64 }* %2 to i64*, !dbg !4463
  store i64 1, i64* %24, align 8, !dbg !4463
  br label %bb4, !dbg !4464

bb2:                                              ; preds = %bb1
  %25 = bitcast { i64, i64 }* %2 to i64*, !dbg !4465
  store i64 0, i64* %25, align 8, !dbg !4465
  br label %bb4, !dbg !4464

bb4:                                              ; preds = %bb3, %bb2
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !4466
  %27 = load i64, i64* %26, align 8, !dbg !4466, !range !2078, !noundef !27
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !4466
  %29 = load i64, i64* %28, align 8, !dbg !4466
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !4466
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !4466
  ret { i64, i64 } %31, !dbg !4466
}

; core::ops::function::Fn::call
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3ops8function2Fn4call17h0000b40ff0727754E({}* align 1 %_1, i32 %0) unnamed_addr #0 !dbg !4467 {
start:
  %_1.dbg.spill = alloca {}*, align 8
  %_2 = alloca i32, align 4
  store i32 %0, i32* %_2, align 4
  store {}* %_1, {}** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %_1.dbg.spill, metadata !4474, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.declare(metadata i32* %_2, metadata !4476, metadata !DIExpression()), !dbg !4483
  %1 = load i32, i32* %_2, align 4, !dbg !4483
; call f128_input::f128_inner
  %2 = call i32 @_ZN10f128_input10f128_inner17h694766312852ec42E(i32 %1), !dbg !4483
  br label %bb1, !dbg !4483

bb1:                                              ; preds = %start
  ret i32 %2, !dbg !4483
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hb89f075583d92ce7E(%"proc_macro::bridge::rpc::PanicMessage"* sret(%"proc_macro::bridge::rpc::PanicMessage") %0, {}* align 1 %1, [3 x i64]* align 8 %2) unnamed_addr #0 !dbg !4484 {
start:
  %_1.dbg.spill = alloca {}, align 1
  %_2 = alloca { i8*, i64* }, align 8
  %3 = bitcast { i8*, i64* }* %_2 to { {}*, [3 x i64]* }*
  %4 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %3, i32 0, i32 0
  store {}* %1, {}** %4, align 8
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %3, i32 0, i32 1
  store [3 x i64]* %2, [3 x i64]** %5, align 8
  call void @llvm.dbg.declare(metadata {}* %_1.dbg.spill, metadata !4492, metadata !DIExpression()), !dbg !4500
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %_2, metadata !4493, metadata !DIExpression()), !dbg !4500
  %6 = bitcast { i8*, i64* }* %_2 to { {}*, [3 x i64]* }*, !dbg !4500
  %7 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %6, i32 0, i32 0, !dbg !4500
  %8 = load {}*, {}** %7, align 8, !dbg !4500, !nonnull !27, !align !608, !noundef !27
  %9 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %6, i32 0, i32 1, !dbg !4500
  %10 = load [3 x i64]*, [3 x i64]** %9, align 8, !dbg !4500, !nonnull !27, !align !1193, !noundef !27
; call <proc_macro::bridge::rpc::PanicMessage as core::convert::From<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>>::from
  call void @"_ZN155_$LT$proc_macro..bridge..rpc..PanicMessage$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$4from17hbfc4fc89b394159dE"(%"proc_macro::bridge::rpc::PanicMessage"* sret(%"proc_macro::bridge::rpc::PanicMessage") %0, {}* align 1 %8, [3 x i64]* align 8 %10), !dbg !4500
  br label %bb1, !dbg !4500

bb1:                                              ; preds = %start
  ret void, !dbg !4500
}

; core::ptr::drop_in_place<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr101drop_in_place$LT$std..io..error..ErrorData$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$$GT$17hfc79006d4189c0f7E"(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_1) unnamed_addr #1 !dbg !4501 {
start:
  %_1.dbg.spill = alloca %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"*, align 8
  store %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_1, %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"** %_1.dbg.spill, metadata !4506, metadata !DIExpression()), !dbg !4507
  %0 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_1 to i8*, !dbg !4507
  %1 = load i8, i8* %0, align 8, !dbg !4507, !range !4508, !noundef !27
  %_2 = zext i8 %1 to i64, !dbg !4507
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb1
    i64 2, label %bb1
  ], !dbg !4507

bb2:                                              ; preds = %start
  %2 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_1 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"*, !dbg !4507
  %3 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"* %2, i32 0, i32 1, !dbg !4507
; call core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
  call void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17h241b2fa8b6d90117E"(%"std::io::error::Custom"** %3), !dbg !4507
  br label %bb1, !dbg !4507

bb1:                                              ; preds = %bb2, %start, %start, %start
  ret void, !dbg !4507
}

; core::ptr::drop_in_place<core::result::Result<f128_internal::f128_t::f128,alloc::ffi::c_str::NulError>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr106drop_in_place$LT$core..result..Result$LT$f128_internal..f128_t..f128$C$alloc..ffi..c_str..NulError$GT$$GT$17hc90ee8ad40ed548dE"(%"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>"* %_1) unnamed_addr #1 !dbg !4509 {
start:
  %_1.dbg.spill = alloca %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>"*, align 8
  store %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>"* %_1, %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>"** %_1.dbg.spill, metadata !4514, metadata !DIExpression()), !dbg !4517
  %0 = bitcast %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>"* %_1 to i8*, !dbg !4517
  %1 = load i8, i8* %0, align 8, !dbg !4517, !range !759, !noundef !27
  %2 = trunc i8 %1 to i1, !dbg !4517
  %_2 = zext i1 %2 to i64, !dbg !4517
  %3 = icmp eq i64 %_2, 0, !dbg !4517
  br i1 %3, label %bb1, label %bb2, !dbg !4517

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !4517

bb2:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>"* %_1 to %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>::Err"*, !dbg !4517
  %5 = getelementptr inbounds %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>::Err", %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>::Err"* %4, i32 0, i32 1, !dbg !4517
; call core::ptr::drop_in_place<alloc::ffi::c_str::NulError>
  call void @"_ZN4core3ptr48drop_in_place$LT$alloc..ffi..c_str..NulError$GT$17h298172dc09689c5bE"(%"alloc::ffi::c_str::NulError"* %5), !dbg !4517
  br label %bb1, !dbg !4517
}

; core::ptr::drop_in_place<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr112drop_in_place$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$proc_macro..bridge..client..BridgeStateL$GT$$GT$17h9170cc61345a158bE"(%"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %_1) unnamed_addr #1 !dbg !4518 {
start:
  %_1.dbg.spill = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"*, align 8
  store %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %_1, %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"** %_1.dbg.spill, metadata !4523, metadata !DIExpression()), !dbg !4524
  %0 = bitcast %"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %_1 to %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"*, !dbg !4524
; call core::ptr::drop_in_place<core::cell::Cell<proc_macro::bridge::client::BridgeState>>
  call void @"_ZN4core3ptr84drop_in_place$LT$core..cell..Cell$LT$proc_macro..bridge..client..BridgeState$GT$$GT$17h4d75a05ec6061b5cE"(%"core::cell::Cell<proc_macro::bridge::client::BridgeState>"* %0), !dbg !4524
  br label %bb1, !dbg !4524

bb1:                                              ; preds = %start
  ret void, !dbg !4524
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h94fbd8a246bc56ccE"({ {}*, [3 x i64]* }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4525 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { {}*, [3 x i64]* }*, align 8
  store { {}*, [3 x i64]* }* %_1, { {}*, [3 x i64]* }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }** %_1.dbg.spill, metadata !4530, metadata !DIExpression()), !dbg !4533
  %1 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !4533
  %2 = bitcast { i8*, i64* }* %1 to { {}*, [3 x i64]* }*, !dbg !4533
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 0, !dbg !4533
  %4 = load {}*, {}** %3, align 8, !dbg !4533
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 1, !dbg !4533
  %6 = load [3 x i64]*, [3 x i64]** %5, align 8, !dbg !4533, !nonnull !27, !align !1193, !noundef !27
  %7 = bitcast [3 x i64]* %6 to void ({}*)**, !dbg !4533
  %8 = getelementptr inbounds void ({}*)*, void ({}*)** %7, i64 0, !dbg !4533
  %9 = load void ({}*)*, void ({}*)** %8, align 8, !dbg !4533, !invariant.load !27, !nonnull !27
  invoke void %9({}* %4)
          to label %bb3 unwind label %cleanup, !dbg !4533

bb4:                                              ; preds = %cleanup
  %10 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !4533
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 0, !dbg !4533
  %12 = load i8*, i8** %11, align 8, !dbg !4533, !nonnull !27, !noundef !27
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 1, !dbg !4533
  %14 = load i64*, i64** %13, align 8, !dbg !4533, !nonnull !27, !align !1193, !noundef !27
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17hab31e7a1212a3b5dE(i8* %12, i64* align 8 %14) #19
          to label %bb2 unwind label %abort, !dbg !4533

cleanup:                                          ; preds = %start
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %20 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !4533
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 0, !dbg !4533
  %22 = load i8*, i8** %21, align 8, !dbg !4533, !nonnull !27, !noundef !27
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 1, !dbg !4533
  %24 = load i64*, i64** %23, align 8, !dbg !4533, !nonnull !27, !align !1193, !noundef !27
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hab31e7a1212a3b5dE(i8* %22, i64* align 8 %24), !dbg !4533
  br label %bb1, !dbg !4533

abort:                                            ; preds = %bb4
  %25 = landingpad { i8*, i32 }
          cleanup, !dbg !4533
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !4533
  unreachable, !dbg !4533

bb2:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4533
  %27 = load i8*, i8** %26, align 8, !dbg !4533
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4533
  %29 = load i32, i32* %28, align 8, !dbg !4533
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0, !dbg !4533
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1, !dbg !4533
  resume { i8*, i32 } %31, !dbg !4533

bb1:                                              ; preds = %bb3
  ret void, !dbg !4533
}

; core::ptr::drop_in_place<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr140drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$proc_macro..bridge..client..BridgeStateL$GT$$GT$$GT$17he92c14df81bac4fdE"(%"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_1) unnamed_addr #1 !dbg !4534 {
start:
  %_1.dbg.spill = alloca %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"*, align 8
  store %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_1, %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"** %_1.dbg.spill, metadata !4538, metadata !DIExpression()), !dbg !4539
  %0 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_1 to i64*, !dbg !4539
  %_2 = load i64, i64* %0, align 8, !dbg !4539, !range !2078, !noundef !27
  %1 = icmp eq i64 %_2, 0, !dbg !4539
  br i1 %1, label %bb1, label %bb2, !dbg !4539

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !4539

bb2:                                              ; preds = %start
  %2 = bitcast %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>"* %_1 to %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::Some"*, !dbg !4539
  %3 = getelementptr inbounds %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::Some", %"core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::Some"* %2, i32 0, i32 1, !dbg !4539
; call core::ptr::drop_in_place<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>
  call void @"_ZN4core3ptr112drop_in_place$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$proc_macro..bridge..client..BridgeStateL$GT$$GT$17h9170cc61345a158bE"(%"proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>"* %3), !dbg !4539
  br label %bb1, !dbg !4539
}

; core::ptr::drop_in_place<proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr145drop_in_place$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$T$GT$..replace..PutBackOnDrop$LT$proc_macro..bridge..client..BridgeStateL$GT$$GT$17h4f995b6b6f582f16E"(%"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4540 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"*, align 8
  store %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* %_1, %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"** %_1.dbg.spill, metadata !4545, metadata !DIExpression()), !dbg !4548
; invoke <proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<T> as core::ops::drop::Drop>::drop
  invoke void @"_ZN127_$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$T$GT$..replace..PutBackOnDrop$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb7b021722ea6eeaeE"(%"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !4548

bb3:                                              ; preds = %cleanup
  %1 = getelementptr inbounds %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>", %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* %_1, i32 0, i32 1, !dbg !4548
; invoke core::ptr::drop_in_place<core::option::Option<proc_macro::bridge::client::BridgeState>>
  invoke void @"_ZN4core3ptr88drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..client..BridgeState$GT$$GT$17hcd4d70fee93d206cE"(%"core::option::Option<proc_macro::bridge::client::BridgeState>"* %1) #19
          to label %bb1 unwind label %abort, !dbg !4548

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = getelementptr inbounds %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>", %"proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>"* %_1, i32 0, i32 1, !dbg !4548
; call core::ptr::drop_in_place<core::option::Option<proc_macro::bridge::client::BridgeState>>
  call void @"_ZN4core3ptr88drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..client..BridgeState$GT$$GT$17hcd4d70fee93d206cE"(%"core::option::Option<proc_macro::bridge::client::BridgeState>"* %7), !dbg !4548
  br label %bb2, !dbg !4548

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !4548
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !4548
  unreachable, !dbg !4548

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4548
  %10 = load i8*, i8** %9, align 8, !dbg !4548
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4548
  %12 = load i32, i32* %11, align 8, !dbg !4548
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !4548
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !4548
  resume { i8*, i32 } %14, !dbg !4548

bb2:                                              ; preds = %bb4
  ret void, !dbg !4548
}

; core::ptr::read_unaligned
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ptr14read_unaligned17h6bf55fba9e0be37fE(%"proc_macro::bridge::client::BridgeState"* sret(%"proc_macro::bridge::client::BridgeState") %0, %"proc_macro::bridge::client::BridgeState"* %src) unnamed_addr #0 !dbg !4549 {
start:
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"*, align 8
  %src.dbg.spill2 = alloca i8*, align 8
  %src.dbg.spill = alloca %"proc_macro::bridge::client::BridgeState"*, align 8
  %slot = alloca %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::client::BridgeState>", align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]", align 8
  %self = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>", align 8
  store %"proc_macro::bridge::client::BridgeState"* %src, %"proc_macro::bridge::client::BridgeState"** %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"** %src.dbg.spill, metadata !4551, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %tmp, metadata !4552, metadata !DIExpression()), !dbg !4555
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %self, metadata !4556, metadata !DIExpression()), !dbg !4560
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]"* %runtime, metadata !4562, metadata !DIExpression()), !dbg !4571
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::client::BridgeState>"* %slot, metadata !4573, metadata !DIExpression()), !dbg !4577
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %tmp to {}*, !dbg !4579
  %src1 = bitcast %"proc_macro::bridge::client::BridgeState"* %src to i8*, !dbg !4583
  store i8* %src1, i8** %src.dbg.spill2, align 8, !dbg !4583
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill2, metadata !4567, metadata !DIExpression()), !dbg !4584
  store %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"** %self.dbg.spill, align 8, !dbg !4585
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"** %self.dbg.spill, metadata !4586, metadata !DIExpression()), !dbg !4590
  %_6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %tmp to %"proc_macro::bridge::client::BridgeState"*, !dbg !4590
  %dst = bitcast %"proc_macro::bridge::client::BridgeState"* %_6 to i8*, !dbg !4585
  store i8* %dst, i8** %dst.dbg.spill, align 8, !dbg !4585
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !4569, metadata !DIExpression()), !dbg !4584
  store i64 80, i64* %count.dbg.spill, align 8, !dbg !4591
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !4570, metadata !DIExpression()), !dbg !4584
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src1, i64 80, i1 false), !dbg !4584
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %self to i8*, !dbg !4561
  %3 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %tmp to i8*, !dbg !4561
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 80, i1 false), !dbg !4561
  br label %bb1, !dbg !4560

bb1:                                              ; preds = %start
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>"* %self to %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::client::BridgeState>"*, !dbg !4560
  %5 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::client::BridgeState>"* %slot to i8*, !dbg !4560
  %6 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::client::BridgeState>"* %4 to i8*, !dbg !4560
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 80, i1 false), !dbg !4560
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::bridge::client::BridgeState>"* %slot to %"proc_macro::bridge::client::BridgeState"*, !dbg !4577
  %8 = bitcast %"proc_macro::bridge::client::BridgeState"* %0 to i8*, !dbg !4577
  %9 = bitcast %"proc_macro::bridge::client::BridgeState"* %7 to i8*, !dbg !4577
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 80, i1 false), !dbg !4577
  ret void, !dbg !4597
}

; core::ptr::drop_in_place<&u8>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h3aab73b83e147934E"(i8** %_1) unnamed_addr #0 !dbg !4598 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !4603, metadata !DIExpression()), !dbg !4604
  ret void, !dbg !4604
}

; core::ptr::drop_in_place<proc_macro::LexError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr41drop_in_place$LT$proc_macro..LexError$GT$17h3cebe70310e60f92E"(%"proc_macro::LexError"* %_1) unnamed_addr #0 !dbg !4605 {
start:
  %_1.dbg.spill = alloca %"proc_macro::LexError"*, align 8
  store %"proc_macro::LexError"* %_1, %"proc_macro::LexError"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::LexError"** %_1.dbg.spill, metadata !4610, metadata !DIExpression()), !dbg !4613
  ret void, !dbg !4613
}

; core::ptr::drop_in_place<proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream,core::option::Option<proc_macro::bridge::client::TokenStream>,proc_macro::bridge::client::Client<proc_macro::TokenStream,proc_macro::TokenStream>::expand1<f128_input::f128_inner>::{{closure}}::{{closure}}>::{{closure}}::{{closure}}>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr425drop_in_place$LT$proc_macro..bridge..client..run_client$LT$proc_macro..bridge..client..TokenStream$C$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$C$proc_macro..bridge..client..Client$LT$proc_macro..TokenStream$C$proc_macro..TokenStream$GT$..expand1$LT$f128_input..f128_inner$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hcc80abe9357577ffE"(%"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4614 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"*, align 8
  store %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_1, %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"** %_1.dbg.spill, metadata !4619, metadata !DIExpression()), !dbg !4622
  %1 = bitcast %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_1 to %"proc_macro::bridge::client::BridgeState"*, !dbg !4622
; invoke core::ptr::drop_in_place<proc_macro::bridge::client::BridgeState>
  invoke void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..BridgeState$GT$17haf8a3b6b03ea9458E"(%"proc_macro::bridge::client::BridgeState"* %1)
          to label %bb4 unwind label %cleanup, !dbg !4622

bb3:                                              ; preds = %cleanup
  %2 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_1, i32 0, i32 3, !dbg !4622
; invoke core::ptr::drop_in_place<proc_macro::bridge::client::TokenStream>
  invoke void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..TokenStream$GT$17h6e4ae08084020ae3E"(i32* %2) #19
          to label %bb1 unwind label %abort, !dbg !4622

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]"* %_1, i32 0, i32 3, !dbg !4622
; call core::ptr::drop_in_place<proc_macro::bridge::client::TokenStream>
  call void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..TokenStream$GT$17h6e4ae08084020ae3E"(i32* %8), !dbg !4622
  br label %bb2, !dbg !4622

abort:                                            ; preds = %bb3
  %9 = landingpad { i8*, i32 }
          cleanup, !dbg !4622
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !4622
  unreachable, !dbg !4622

bb1:                                              ; preds = %bb3
  %10 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4622
  %11 = load i8*, i8** %10, align 8, !dbg !4622
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4622
  %13 = load i32, i32* %12, align 8, !dbg !4622
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0, !dbg !4622
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1, !dbg !4622
  resume { i8*, i32 } %15, !dbg !4622

bb2:                                              ; preds = %bb4
  ret void, !dbg !4622
}

; core::ptr::drop_in_place<std::io::error::Error>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h32c7df30d12904acE"(i8** %_1) unnamed_addr #1 !dbg !4623 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !4628, metadata !DIExpression()), !dbg !4631
; call core::ptr::drop_in_place<std::io::error::repr_bitpacked::Repr>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..io..error..repr_bitpacked..Repr$GT$17he7a0fa55eb80c664E"(i8** %_1), !dbg !4631
  br label %bb1, !dbg !4631

bb1:                                              ; preds = %start
  ret void, !dbg !4631
}

; core::ptr::drop_in_place<std::io::error::Custom>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17hce32a6c323cc4fcaE"(%"std::io::error::Custom"* %_1) unnamed_addr #1 !dbg !4632 {
start:
  %_1.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  store %"std::io::error::Custom"* %_1, %"std::io::error::Custom"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %_1.dbg.spill, metadata !4636, metadata !DIExpression()), !dbg !4639
  %0 = bitcast %"std::io::error::Custom"* %_1 to { {}*, [3 x i64]* }*, !dbg !4639
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>
  call void @"_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h94fbd8a246bc56ccE"({ {}*, [3 x i64]* }* %0), !dbg !4639
  br label %bb1, !dbg !4639

bb1:                                              ; preds = %start
  ret void, !dbg !4639
}

; core::ptr::drop_in_place<proc_macro::TokenStream>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h5984f1a9e3d64235E"(i32* %_1) unnamed_addr #1 !dbg !4640 {
start:
  %_1.dbg.spill = alloca i32*, align 8
  store i32* %_1, i32** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %_1.dbg.spill, metadata !4645, metadata !DIExpression()), !dbg !4648
; call core::ptr::drop_in_place<core::option::Option<proc_macro::bridge::client::TokenStream>>
  call void @"_ZN4core3ptr88drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$GT$17h0d2fe3aa7bb6e441E"(i32* %_1), !dbg !4648
  br label %bb1, !dbg !4648

bb1:                                              ; preds = %start
  ret void, !dbg !4648
}

; core::ptr::drop_in_place<proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream,core::option::Option<proc_macro::bridge::client::TokenStream>,proc_macro::bridge::client::Client<proc_macro::TokenStream,proc_macro::TokenStream>::expand1<f128_input::f128_inner>::{{closure}}::{{closure}}>::{{closure}}::{{closure}}::{{closure}}>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr454drop_in_place$LT$proc_macro..bridge..client..run_client$LT$proc_macro..bridge..client..TokenStream$C$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$C$proc_macro..bridge..client..Client$LT$proc_macro..TokenStream$C$proc_macro..TokenStream$GT$..expand1$LT$f128_input..f128_inner$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h0bff0144d6fd8481E"(%"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_1) unnamed_addr #1 !dbg !4649 {
start:
  %_1.dbg.spill = alloca %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"*, align 8
  store %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_1, %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"** %_1.dbg.spill, metadata !4654, metadata !DIExpression()), !dbg !4657
  %0 = getelementptr inbounds %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]", %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %_1, i32 0, i32 2, !dbg !4657
; call core::ptr::drop_in_place<proc_macro::bridge::client::TokenStream>
  call void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..TokenStream$GT$17h6e4ae08084020ae3E"(i32* %0), !dbg !4657
  br label %bb1, !dbg !4657

bb1:                                              ; preds = %start
  ret void, !dbg !4657
}

; core::ptr::drop_in_place<std::thread::local::AccessError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr52drop_in_place$LT$std..thread..local..AccessError$GT$17h6c4dc30a4bf43b0aE"(%"std::thread::local::AccessError"* %_1) unnamed_addr #0 !dbg !4658 {
start:
  %_1.dbg.spill = alloca %"std::thread::local::AccessError"*, align 8
  store %"std::thread::local::AccessError"* %_1, %"std::thread::local::AccessError"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::thread::local::AccessError"** %_1.dbg.spill, metadata !4663, metadata !DIExpression()), !dbg !4666
  ret void, !dbg !4666
}

; core::ptr::drop_in_place<proc_macro::bridge::BridgeConfig>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr53drop_in_place$LT$proc_macro..bridge..BridgeConfig$GT$17hddb41ec64c3227ecE"(%"proc_macro::bridge::BridgeConfig"* %_1) unnamed_addr #1 !dbg !4667 {
start:
  %_1.dbg.spill = alloca %"proc_macro::bridge::BridgeConfig"*, align 8
  store %"proc_macro::bridge::BridgeConfig"* %_1, %"proc_macro::bridge::BridgeConfig"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::BridgeConfig"** %_1.dbg.spill, metadata !4672, metadata !DIExpression()), !dbg !4675
  %0 = bitcast %"proc_macro::bridge::BridgeConfig"* %_1 to %"proc_macro::bridge::buffer::Buffer"*, !dbg !4675
; call core::ptr::drop_in_place<proc_macro::bridge::buffer::Buffer>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..bridge..buffer..Buffer$GT$17ha3af9902afa5dfbfE"(%"proc_macro::bridge::buffer::Buffer"* %0), !dbg !4675
  br label %bb1, !dbg !4675

bb1:                                              ; preds = %start
  ret void, !dbg !4675
}

; core::ptr::drop_in_place<proc_macro::bridge::buffer::Buffer>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..bridge..buffer..Buffer$GT$17ha3af9902afa5dfbfE"(%"proc_macro::bridge::buffer::Buffer"* %_1) unnamed_addr #1 !dbg !4676 {
start:
  %_1.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  store %"proc_macro::bridge::buffer::Buffer"* %_1, %"proc_macro::bridge::buffer::Buffer"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %_1.dbg.spill, metadata !4680, metadata !DIExpression()), !dbg !4681
; call <proc_macro::bridge::buffer::Buffer as core::ops::drop::Drop>::drop
  call void @"_ZN76_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf82cae4ee5e60ad4E"(%"proc_macro::bridge::buffer::Buffer"* align 8 %_1), !dbg !4681
  br label %bb1, !dbg !4681

bb1:                                              ; preds = %start
  ret void, !dbg !4681
}

; core::ptr::drop_in_place<proc_macro::bridge::client::Bridge>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..bridge..client..Bridge$GT$17h57aa75f72680a884E"(%"proc_macro::bridge::client::Bridge"* %_1) unnamed_addr #1 !dbg !4682 {
start:
  %_1.dbg.spill = alloca %"proc_macro::bridge::client::Bridge"*, align 8
  store %"proc_macro::bridge::client::Bridge"* %_1, %"proc_macro::bridge::client::Bridge"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::Bridge"** %_1.dbg.spill, metadata !4687, metadata !DIExpression()), !dbg !4690
  %0 = bitcast %"proc_macro::bridge::client::Bridge"* %_1 to %"proc_macro::bridge::buffer::Buffer"*, !dbg !4690
; call core::ptr::drop_in_place<proc_macro::bridge::buffer::Buffer>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..bridge..buffer..Buffer$GT$17ha3af9902afa5dfbfE"(%"proc_macro::bridge::buffer::Buffer"* %0), !dbg !4690
  br label %bb1, !dbg !4690

bb1:                                              ; preds = %start
  ret void, !dbg !4690
}

; core::ptr::drop_in_place<std::io::error::repr_bitpacked::Repr>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr57drop_in_place$LT$std..io..error..repr_bitpacked..Repr$GT$17he7a0fa55eb80c664E"(i8** %_1) unnamed_addr #1 !dbg !4691 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !4696, metadata !DIExpression()), !dbg !4699
; call <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop
  call void @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop17h61b5a34db5b5ec3eE"(i8** align 8 %_1), !dbg !4699
  br label %bb1, !dbg !4699

bb1:                                              ; preds = %start
  ret void, !dbg !4699
}

; core::ptr::drop_in_place<proc_macro::bridge::rpc::PanicMessage>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr58drop_in_place$LT$proc_macro..bridge..rpc..PanicMessage$GT$17ha026d0b68f540484E"(%"proc_macro::bridge::rpc::PanicMessage"* %_1) unnamed_addr #1 !dbg !4700 {
start:
  %_1.dbg.spill = alloca %"proc_macro::bridge::rpc::PanicMessage"*, align 8
  store %"proc_macro::bridge::rpc::PanicMessage"* %_1, %"proc_macro::bridge::rpc::PanicMessage"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::rpc::PanicMessage"** %_1.dbg.spill, metadata !4705, metadata !DIExpression()), !dbg !4708
  %0 = bitcast %"proc_macro::bridge::rpc::PanicMessage"* %_1 to i64*, !dbg !4708
  %_2 = load i64, i64* %0, align 8, !dbg !4708, !range !2133, !noundef !27
  switch i64 %_2, label %bb1 [
    i64 0, label %bb1
    i64 1, label %bb2
  ], !dbg !4708

bb1:                                              ; preds = %bb2, %start, %start
  ret void, !dbg !4708

bb2:                                              ; preds = %start
  %1 = bitcast %"proc_macro::bridge::rpc::PanicMessage"* %_1 to %"proc_macro::bridge::rpc::PanicMessage::String"*, !dbg !4708
  %2 = getelementptr inbounds %"proc_macro::bridge::rpc::PanicMessage::String", %"proc_macro::bridge::rpc::PanicMessage::String"* %1, i32 0, i32 1, !dbg !4708
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"* %2), !dbg !4708
  br label %bb1, !dbg !4708
}

; core::ptr::drop_in_place<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(),proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream,core::option::Option<proc_macro::bridge::client::TokenStream>,proc_macro::bridge::client::Client<proc_macro::TokenStream,proc_macro::TokenStream>::expand1<f128_input::f128_inner>::{{closure}}::{{closure}}>::{{closure}}::{{closure}}::{{closure}}>::{{closure}}>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr598drop_in_place$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$proc_macro..bridge..client..BridgeStateL$GT$..set$LT$$LP$$RP$$C$proc_macro..bridge..client..run_client$LT$proc_macro..bridge..client..TokenStream$C$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$C$proc_macro..bridge..client..Client$LT$proc_macro..TokenStream$C$proc_macro..TokenStream$GT$..expand1$LT$f128_input..f128_inner$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hb875581cfeba128dE"(%"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %_1) unnamed_addr #1 !dbg !4709 {
start:
  %_1.dbg.spill = alloca %"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"*, align 8
  store %"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %_1, %"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"** %_1.dbg.spill, metadata !4714, metadata !DIExpression()), !dbg !4717
  %0 = bitcast %"[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]"* %_1 to %"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"*, !dbg !4717
; call core::ptr::drop_in_place<proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream,core::option::Option<proc_macro::bridge::client::TokenStream>,proc_macro::bridge::client::Client<proc_macro::TokenStream,proc_macro::TokenStream>::expand1<f128_input::f128_inner>::{{closure}}::{{closure}}>::{{closure}}::{{closure}}::{{closure}}>
  call void @"_ZN4core3ptr454drop_in_place$LT$proc_macro..bridge..client..run_client$LT$proc_macro..bridge..client..TokenStream$C$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$C$proc_macro..bridge..client..Client$LT$proc_macro..TokenStream$C$proc_macro..TokenStream$GT$..expand1$LT$f128_input..f128_inner$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h0bff0144d6fd8481E"(%"[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {f128_inner}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]"* %0), !dbg !4717
  br label %bb1, !dbg !4717

bb1:                                              ; preds = %start
  ret void, !dbg !4717
}

; core::ptr::drop_in_place<proc_macro::bridge::client::BridgeState>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..BridgeState$GT$17haf8a3b6b03ea9458E"(%"proc_macro::bridge::client::BridgeState"* %_1) unnamed_addr #1 !dbg !4718 {
start:
  %_1.dbg.spill = alloca %"proc_macro::bridge::client::BridgeState"*, align 8
  store %"proc_macro::bridge::client::BridgeState"* %_1, %"proc_macro::bridge::client::BridgeState"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"** %_1.dbg.spill, metadata !4722, metadata !DIExpression()), !dbg !4723
  %0 = bitcast %"proc_macro::bridge::client::BridgeState"* %_1 to i64*, !dbg !4723
  %_2 = load i64, i64* %0, align 8, !dbg !4723, !range !2133, !noundef !27
  switch i64 %_2, label %bb1 [
    i64 0, label %bb1
    i64 1, label %bb2
  ], !dbg !4723

bb1:                                              ; preds = %bb2, %start, %start
  ret void, !dbg !4723

bb2:                                              ; preds = %start
  %1 = bitcast %"proc_macro::bridge::client::BridgeState"* %_1 to %"proc_macro::bridge::client::BridgeState::Connected"*, !dbg !4723
  %2 = getelementptr inbounds %"proc_macro::bridge::client::BridgeState::Connected", %"proc_macro::bridge::client::BridgeState::Connected"* %1, i32 0, i32 1, !dbg !4723
; call core::ptr::drop_in_place<proc_macro::bridge::client::Bridge>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..bridge..client..Bridge$GT$17h57aa75f72680a884E"(%"proc_macro::bridge::client::Bridge"* %2), !dbg !4723
  br label %bb1, !dbg !4723
}

; core::ptr::drop_in_place<proc_macro::bridge::client::TokenStream>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..TokenStream$GT$17h6e4ae08084020ae3E"(i32* %_1) unnamed_addr #1 !dbg !4724 {
start:
  %_1.dbg.spill = alloca i32*, align 8
  store i32* %_1, i32** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %_1.dbg.spill, metadata !4729, metadata !DIExpression()), !dbg !4730
; call <proc_macro::bridge::client::TokenStream as core::ops::drop::Drop>::drop
  call void @"_ZN81_$LT$proc_macro..bridge..client..TokenStream$u20$as$u20$core..ops..drop..Drop$GT$4drop17h221b41faa42f92beE"(i32* align 4 %_1), !dbg !4730
  br label %bb1, !dbg !4730

bb1:                                              ; preds = %start
  ret void, !dbg !4730
}

; core::ptr::drop_in_place<dyn core::any::Any+core::marker::Send>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr66drop_in_place$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$17hb707766d9eb55aafE"({}* %_1.0, [3 x i64]* align 8 %_1.1) unnamed_addr #1 !dbg !4731 {
start:
  %_1.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %0 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1.dbg.spill, i32 0, i32 0
  store {}* %_1.0, {}** %0, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1.dbg.spill, i32 0, i32 1
  store [3 x i64]* %_1.1, [3 x i64]** %1, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %_1.dbg.spill, metadata !4739, metadata !DIExpression()), !dbg !4742
  %2 = bitcast [3 x i64]* %_1.1 to void ({}*)**, !dbg !4742
  %3 = getelementptr inbounds void ({}*)*, void ({}*)** %2, i64 0, !dbg !4742
  %4 = load void ({}*)*, void ({}*)** %3, align 8, !dbg !4742, !invariant.load !27, !nonnull !27
  call void %4({}* %_1.0), !dbg !4742
  br label %bb1, !dbg !4742

bb1:                                              ; preds = %start
  ret void, !dbg !4742
}

; core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17h241b2fa8b6d90117E"(%"std::io::error::Custom"** %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4743 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"std::io::error::Custom"**, align 8
  store %"std::io::error::Custom"** %_1, %"std::io::error::Custom"*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"*** %_1.dbg.spill, metadata !4748, metadata !DIExpression()), !dbg !4751
  %1 = bitcast %"std::io::error::Custom"** %_1 to i64**, !dbg !4751
  %2 = bitcast i64** %1 to %"std::io::error::Custom"**, !dbg !4751
  %3 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %2, align 8, !dbg !4751
; invoke core::ptr::drop_in_place<std::io::error::Custom>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17hce32a6c323cc4fcaE"(%"std::io::error::Custom"* %3)
          to label %bb3 unwind label %cleanup, !dbg !4751

bb4:                                              ; preds = %cleanup
  %4 = bitcast %"std::io::error::Custom"** %_1 to i64**, !dbg !4751
  %5 = load i64*, i64** %4, align 8, !dbg !4751, !nonnull !27, !noundef !27
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17hf73f8100277838deE(i64* %5) #19
          to label %bb2 unwind label %abort, !dbg !4751

cleanup:                                          ; preds = %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %11 = bitcast %"std::io::error::Custom"** %_1 to i64**, !dbg !4751
  %12 = load i64*, i64** %11, align 8, !dbg !4751, !nonnull !27, !noundef !27
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hf73f8100277838deE(i64* %12), !dbg !4751
  br label %bb1, !dbg !4751

abort:                                            ; preds = %bb4
  %13 = landingpad { i8*, i32 }
          cleanup, !dbg !4751
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !4751
  unreachable, !dbg !4751

bb2:                                              ; preds = %bb4
  %14 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4751
  %15 = load i8*, i8** %14, align 8, !dbg !4751
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4751
  %17 = load i32, i32* %16, align 8, !dbg !4751
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0, !dbg !4751
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1, !dbg !4751
  resume { i8*, i32 } %19, !dbg !4751

bb1:                                              ; preds = %bb3
  ret void, !dbg !4751
}

; core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h59c5944dd0f7c63fE"(%"core::option::Option<alloc::string::String>"* %_1) unnamed_addr #1 !dbg !4752 {
start:
  %_1.dbg.spill = alloca %"core::option::Option<alloc::string::String>"*, align 8
  store %"core::option::Option<alloc::string::String>"* %_1, %"core::option::Option<alloc::string::String>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::string::String>"** %_1.dbg.spill, metadata !4756, metadata !DIExpression()), !dbg !4757
  %0 = bitcast %"core::option::Option<alloc::string::String>"* %_1 to {}**, !dbg !4757
  %1 = load {}*, {}** %0, align 8, !dbg !4757
  %2 = icmp eq {}* %1, null, !dbg !4757
  %_2 = select i1 %2, i64 0, i64 1, !dbg !4757
  %3 = icmp eq i64 %_2, 0, !dbg !4757
  br i1 %3, label %bb1, label %bb2, !dbg !4757

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !4757

bb2:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<alloc::string::String>"* %_1 to %"core::option::Option<alloc::string::String>::Some"*, !dbg !4757
  %5 = bitcast %"core::option::Option<alloc::string::String>::Some"* %4 to %"alloc::string::String"*, !dbg !4757
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"* %5), !dbg !4757
  br label %bb1, !dbg !4757
}

; core::ptr::drop_in_place<core::cell::Cell<proc_macro::bridge::client::BridgeState>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr84drop_in_place$LT$core..cell..Cell$LT$proc_macro..bridge..client..BridgeState$GT$$GT$17h4d75a05ec6061b5cE"(%"core::cell::Cell<proc_macro::bridge::client::BridgeState>"* %_1) unnamed_addr #1 !dbg !4758 {
start:
  %_1.dbg.spill = alloca %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"*, align 8
  store %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"* %_1, %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"** %_1.dbg.spill, metadata !4763, metadata !DIExpression()), !dbg !4766
  %0 = bitcast %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"* %_1 to %"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>"*, !dbg !4766
; call core::ptr::drop_in_place<core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>>
  call void @"_ZN4core3ptr90drop_in_place$LT$core..cell..UnsafeCell$LT$proc_macro..bridge..client..BridgeState$GT$$GT$17hc8529c697a384335E"(%"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>"* %0), !dbg !4766
  br label %bb1, !dbg !4766

bb1:                                              ; preds = %start
  ret void, !dbg !4766
}

; core::ptr::drop_in_place<core::option::Option<proc_macro::bridge::client::BridgeState>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr88drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..client..BridgeState$GT$$GT$17hcd4d70fee93d206cE"(%"core::option::Option<proc_macro::bridge::client::BridgeState>"* %_1) unnamed_addr #1 !dbg !4767 {
start:
  %_1.dbg.spill = alloca %"core::option::Option<proc_macro::bridge::client::BridgeState>"*, align 8
  store %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %_1, %"core::option::Option<proc_macro::bridge::client::BridgeState>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<proc_macro::bridge::client::BridgeState>"** %_1.dbg.spill, metadata !4771, metadata !DIExpression()), !dbg !4772
  %0 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %_1 to i64*, !dbg !4772
  %1 = load i64, i64* %0, align 8, !dbg !4772, !range !923, !noundef !27
  %2 = sub i64 %1, 3, !dbg !4772
  %3 = icmp eq i64 %2, 0, !dbg !4772
  %_2 = select i1 %3, i64 0, i64 1, !dbg !4772
  %4 = icmp eq i64 %_2, 0, !dbg !4772
  br i1 %4, label %bb1, label %bb2, !dbg !4772

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !4772

bb2:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>"* %_1 to %"core::option::Option<proc_macro::bridge::client::BridgeState>::Some"*, !dbg !4772
  %6 = bitcast %"core::option::Option<proc_macro::bridge::client::BridgeState>::Some"* %5 to %"proc_macro::bridge::client::BridgeState"*, !dbg !4772
; call core::ptr::drop_in_place<proc_macro::bridge::client::BridgeState>
  call void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..BridgeState$GT$17haf8a3b6b03ea9458E"(%"proc_macro::bridge::client::BridgeState"* %6), !dbg !4772
  br label %bb1, !dbg !4772
}

; core::ptr::drop_in_place<core::option::Option<proc_macro::bridge::client::TokenStream>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr88drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$GT$17h0d2fe3aa7bb6e441E"(i32* %_1) unnamed_addr #1 !dbg !4773 {
start:
  %_1.dbg.spill = alloca i32*, align 8
  store i32* %_1, i32** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %_1.dbg.spill, metadata !4778, metadata !DIExpression()), !dbg !4780
  %0 = load i32, i32* %_1, align 4, !dbg !4780
  %1 = icmp eq i32 %0, 0, !dbg !4780
  %_2 = select i1 %1, i64 0, i64 1, !dbg !4780
  %2 = icmp eq i64 %_2, 0, !dbg !4780
  br i1 %2, label %bb1, label %bb2, !dbg !4780

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !4780

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<proc_macro::bridge::client::TokenStream>
  call void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..TokenStream$GT$17h6e4ae08084020ae3E"(i32* %_1), !dbg !4780
  br label %bb1, !dbg !4780
}

; core::ptr::drop_in_place<core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr90drop_in_place$LT$core..cell..UnsafeCell$LT$proc_macro..bridge..client..BridgeState$GT$$GT$17hc8529c697a384335E"(%"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>"* %_1) unnamed_addr #1 !dbg !4781 {
start:
  %_1.dbg.spill = alloca %"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>"*, align 8
  store %"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>"* %_1, %"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>"** %_1.dbg.spill, metadata !4786, metadata !DIExpression()), !dbg !4789
  %0 = bitcast %"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>"* %_1 to %"proc_macro::bridge::client::BridgeState"*, !dbg !4789
; call core::ptr::drop_in_place<proc_macro::bridge::client::BridgeState>
  call void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..BridgeState$GT$17haf8a3b6b03ea9458E"(%"proc_macro::bridge::client::BridgeState"* %0), !dbg !4789
  br label %bb1, !dbg !4789

bb1:                                              ; preds = %start
  ret void, !dbg !4789
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h6a8e35d5e16ac4e8E"({ {}*, [3 x i64]* }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4790 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { {}*, [3 x i64]* }*, align 8
  store { {}*, [3 x i64]* }* %_1, { {}*, [3 x i64]* }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }** %_1.dbg.spill, metadata !4795, metadata !DIExpression()), !dbg !4796
  %1 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !4796
  %2 = bitcast { i8*, i64* }* %1 to { {}*, [3 x i64]* }*, !dbg !4796
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 0, !dbg !4796
  %4 = load {}*, {}** %3, align 8, !dbg !4796
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 1, !dbg !4796
  %6 = load [3 x i64]*, [3 x i64]** %5, align 8, !dbg !4796, !nonnull !27, !align !1193, !noundef !27
  %7 = bitcast [3 x i64]* %6 to void ({}*)**, !dbg !4796
  %8 = getelementptr inbounds void ({}*)*, void ({}*)** %7, i64 0, !dbg !4796
  %9 = load void ({}*)*, void ({}*)** %8, align 8, !dbg !4796, !invariant.load !27, !nonnull !27
  invoke void %9({}* %4)
          to label %bb3 unwind label %cleanup, !dbg !4796

bb4:                                              ; preds = %cleanup
  %10 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !4796
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 0, !dbg !4796
  %12 = load i8*, i8** %11, align 8, !dbg !4796, !nonnull !27, !noundef !27
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 1, !dbg !4796
  %14 = load i64*, i64** %13, align 8, !dbg !4796, !nonnull !27, !align !1193, !noundef !27
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17hc2dac458e5db55ffE(i8* %12, i64* align 8 %14) #19
          to label %bb2 unwind label %abort, !dbg !4796

cleanup:                                          ; preds = %start
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %20 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !4796
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 0, !dbg !4796
  %22 = load i8*, i8** %21, align 8, !dbg !4796, !nonnull !27, !noundef !27
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 1, !dbg !4796
  %24 = load i64*, i64** %23, align 8, !dbg !4796, !nonnull !27, !align !1193, !noundef !27
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hc2dac458e5db55ffE(i8* %22, i64* align 8 %24), !dbg !4796
  br label %bb1, !dbg !4796

abort:                                            ; preds = %bb4
  %25 = landingpad { i8*, i32 }
          cleanup, !dbg !4796
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !4796
  unreachable, !dbg !4796

bb2:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4796
  %27 = load i8*, i8** %26, align 8, !dbg !4796
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4796
  %29 = load i32, i32* %28, align 8, !dbg !4796
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0, !dbg !4796
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1, !dbg !4796
  resume { i8*, i32 } %31, !dbg !4796

bb1:                                              ; preds = %bb3
  ret void, !dbg !4796
}

; core::ptr::drop_in_place<std::panicking::begin_panic::PanicPayload<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr91drop_in_place$LT$std..panicking..begin_panic..PanicPayload$LT$alloc..string..String$GT$$GT$17hdb31efc448dc26bcE"(%"std::panicking::begin_panic::PanicPayload<alloc::string::String>"* %_1) unnamed_addr #1 !dbg !4797 {
start:
  %_1.dbg.spill = alloca %"std::panicking::begin_panic::PanicPayload<alloc::string::String>"*, align 8
  store %"std::panicking::begin_panic::PanicPayload<alloc::string::String>"* %_1, %"std::panicking::begin_panic::PanicPayload<alloc::string::String>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::panicking::begin_panic::PanicPayload<alloc::string::String>"** %_1.dbg.spill, metadata !4802, metadata !DIExpression()), !dbg !4805
  %0 = bitcast %"std::panicking::begin_panic::PanicPayload<alloc::string::String>"* %_1 to %"core::option::Option<alloc::string::String>"*, !dbg !4805
; call core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
  call void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h59c5944dd0f7c63fE"(%"core::option::Option<alloc::string::String>"* %0), !dbg !4805
  br label %bb1, !dbg !4805

bb1:                                              ; preds = %start
  ret void, !dbg !4805
}

; core::ptr::drop_in_place<dyn std::error::Error+core::marker::Send+core::marker::Sync>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr92drop_in_place$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$17h297f13f5d1085cddE"({}* %_1.0, [3 x i64]* align 8 %_1.1) unnamed_addr #1 !dbg !4806 {
start:
  %_1.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %0 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1.dbg.spill, i32 0, i32 0
  store {}* %_1.0, {}** %0, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1.dbg.spill, i32 0, i32 1
  store [3 x i64]* %_1.1, [3 x i64]** %1, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %_1.dbg.spill, metadata !4814, metadata !DIExpression()), !dbg !4817
  %2 = bitcast [3 x i64]* %_1.1 to void ({}*)**, !dbg !4817
  %3 = getelementptr inbounds void ({}*)*, void ({}*)** %2, i64 0, !dbg !4817
  %4 = load void ({}*)*, void ({}*)** %3, align 8, !dbg !4817, !invariant.load !27, !nonnull !27
  call void %4({}* %_1.0), !dbg !4817
  br label %bb1, !dbg !4817

bb1:                                              ; preds = %start
  ret void, !dbg !4817
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h0619204c43476cdeE"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !4818 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4839, metadata !DIExpression()), !dbg !4842
; call <proc_macro::TokenStream as core::str::traits::FromStr>::from_str
  %2 = call { i32, i32 } @"_ZN70_$LT$proc_macro..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str17hab35b9822424069aE"([0 x i8]* align 1 %self.0, i64 %self.1), !dbg !4843
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !4843
  %4 = extractvalue { i32, i32 } %2, 1, !dbg !4843
  br label %bb1, !dbg !4843

bb1:                                              ; preds = %start
  %5 = insertvalue { i32, i32 } undef, i32 %3, 0, !dbg !4844
  %6 = insertvalue { i32, i32 } %5, i32 %4, 1, !dbg !4844
  ret { i32, i32 } %6, !dbg !4844
}

; core::str::iter::MatchIndicesInternal<P>::next::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str4iter29MatchIndicesInternal$LT$P$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h69c42f6f0e091974E"({ i64, { [0 x i8]*, i64 } }* sret({ i64, { [0 x i8]*, i64 } }) %0, i64* align 8 %1, i64 %_2.0, i64 %_2.1) unnamed_addr #0 !dbg !4845 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %end.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  %_2.dbg.spill = alloca { i64, i64 }, align 8
  %i = alloca { i64, i64 }, align 8
  %_1 = alloca i64*, align 8
  store i64* %1, i64** %_1, align 8
  %2 = bitcast i64** %_1 to %"core::str::pattern::CharSearcher"**
  %3 = load %"core::str::pattern::CharSearcher"*, %"core::str::pattern::CharSearcher"** %2, align 8, !nonnull !27, !align !1193, !noundef !27
  call void @llvm.dbg.declare(metadata i64** %_1, metadata !4874, metadata !DIExpression(DW_OP_deref)), !dbg !4881
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2.dbg.spill, i32 0, i32 0
  store i64 %_2.0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2.dbg.spill, i32 0, i32 1
  store i64 %_2.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %_2.dbg.spill, metadata !4878, metadata !DIExpression()), !dbg !4882
  call void @llvm.dbg.declare(metadata { i64, i64 }* %i, metadata !4883, metadata !DIExpression()), !dbg !4892
  store i64 %_2.0, i64* %start.dbg.spill, align 8, !dbg !4894
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !4875, metadata !DIExpression()), !dbg !4895
  store i64 %_2.1, i64* %end.dbg.spill, align 8, !dbg !4896
  call void @llvm.dbg.declare(metadata i64* %end.dbg.spill, metadata !4877, metadata !DIExpression()), !dbg !4897
  %6 = bitcast i64** %_1 to %"core::str::pattern::CharSearcher"**, !dbg !4893
  %_13 = load %"core::str::pattern::CharSearcher"*, %"core::str::pattern::CharSearcher"** %6, align 8, !dbg !4893, !nonnull !27, !align !1193, !noundef !27
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
  %7 = call { [0 x i8]*, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h1bc4f9f368d5a079E"(%"core::str::pattern::CharSearcher"* align 8 %_13), !dbg !4893
  %_8.0 = extractvalue { [0 x i8]*, i64 } %7, 0, !dbg !4893
  %_8.1 = extractvalue { [0 x i8]*, i64 } %7, 1, !dbg !4893
  br label %bb1, !dbg !4893

bb1:                                              ; preds = %start
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !4893
  store [0 x i8]* %_8.0, [0 x i8]** %8, align 8, !dbg !4893
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !4893
  store i64 %_8.1, i64* %9, align 8, !dbg !4893
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4889, metadata !DIExpression()), !dbg !4892
  %10 = bitcast { i64, i64 }* %i to i64*, !dbg !4898
  store i64 %_2.0, i64* %10, align 8, !dbg !4898
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !4898
  store i64 %_2.1, i64* %11, align 8, !dbg !4898
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 0, !dbg !4892
  %_15.0 = load i64, i64* %12, align 8, !dbg !4892
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !4892
  %_15.1 = load i64, i64* %13, align 8, !dbg !4892
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %14 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h6c0b377acac096abE"(i64 %_15.0, i64 %_15.1, [0 x i8]* %_8.0, i64 %_8.1), !dbg !4892
  %_14.0 = extractvalue { [0 x i8]*, i64 } %14, 0, !dbg !4892
  %_14.1 = extractvalue { [0 x i8]*, i64 } %14, 1, !dbg !4892
  br label %bb2, !dbg !4892

bb2:                                              ; preds = %bb1
  %15 = bitcast { i64, { [0 x i8]*, i64 } }* %0 to i64*, !dbg !4899
  store i64 %_2.0, i64* %15, align 8, !dbg !4899
  %16 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %0, i32 0, i32 1, !dbg !4899
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0, !dbg !4899
  store [0 x i8]* %_14.0, [0 x i8]** %17, align 8, !dbg !4899
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1, !dbg !4899
  store i64 %_14.1, i64* %18, align 8, !dbg !4899
  ret void, !dbg !4900
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h6c0b377acac096abE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !4901 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %len.dbg.spill6 = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_26 = alloca { i8*, i64 }, align 8
  %_25 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !4912, metadata !DIExpression()), !dbg !4920
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !4913, metadata !DIExpression()), !dbg !4921
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill1, i32 0, i32 0, !dbg !4922
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !4922
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill1, i32 0, i32 1, !dbg !4922
  store i64 %slice.1, i64* %6, align 8, !dbg !4922
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill1, metadata !4914, metadata !DIExpression()), !dbg !4923
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !4924
  store [0 x i8]* %slice.0, [0 x i8]** %7, align 8, !dbg !4924
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !4924
  store i64 %slice.1, i64* %8, align 8, !dbg !4924
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !4925, metadata !DIExpression()), !dbg !4932
  %self = bitcast [0 x i8]* %slice.0 to i8*, !dbg !4932
  store i8* %self, i8** %self.dbg.spill3, align 8, !dbg !4932
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !4933, metadata !DIExpression()), !dbg !4940
  store i64 %self.0, i64* %count.dbg.spill, align 8, !dbg !4941
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !4939, metadata !DIExpression()), !dbg !4940
  store i8* %self, i8** %self.dbg.spill4, align 8, !dbg !4940
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !4942, metadata !DIExpression()), !dbg !4949
  store i64 %self.0, i64* %count.dbg.spill5, align 8, !dbg !4940
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !4948, metadata !DIExpression()), !dbg !4949
  %9 = getelementptr inbounds i8, i8* %self, i64 %self.0, !dbg !4949
  store i8* %9, i8** %0, align 8, !dbg !4949
  %ptr = load i8*, i8** %0, align 8, !dbg !4949
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !4949
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !4916, metadata !DIExpression()), !dbg !4951
  br label %bb1, !dbg !4949

bb1:                                              ; preds = %start
  %len = sub i64 %self.1, %self.0, !dbg !4952
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !4952
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !4918, metadata !DIExpression()), !dbg !4953
  store i8* %ptr, i8** %data.dbg.spill, align 8, !dbg !4954
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !4955, metadata !DIExpression()), !dbg !4960
  store i64 %len, i64* %len.dbg.spill6, align 8, !dbg !4962
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill6, metadata !4959, metadata !DIExpression()), !dbg !4960
  store i8* %ptr, i8** %self.dbg.spill7, align 8, !dbg !4960
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !4963, metadata !DIExpression()), !dbg !4967
  %data_address = bitcast i8* %ptr to {}*, !dbg !4967
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !4967
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !4969, metadata !DIExpression()), !dbg !4974
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !4960
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !4973, metadata !DIExpression()), !dbg !4974
  %10 = bitcast { i8*, i64 }* %_26 to {}**, !dbg !4974
  store {}* %data_address, {}** %10, align 8, !dbg !4974
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_26, i32 0, i32 1, !dbg !4974
  store i64 %len, i64* %11, align 8, !dbg !4974
  %12 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_25 to { i8*, i64 }*, !dbg !4974
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_26, i32 0, i32 0, !dbg !4974
  %14 = load i8*, i8** %13, align 8, !dbg !4974
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_26, i32 0, i32 1, !dbg !4974
  %16 = load i64, i64* %15, align 8, !dbg !4974
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %12, i32 0, i32 0, !dbg !4974
  store i8* %14, i8** %17, align 8, !dbg !4974
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %12, i32 0, i32 1, !dbg !4974
  store i64 %16, i64* %18, align 8, !dbg !4974
  %19 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_25 to { [0 x i8]*, i64 }*, !dbg !4974
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 0, !dbg !4974
  %_12.0 = load [0 x i8]*, [0 x i8]** %20, align 8, !dbg !4974
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 1, !dbg !4974
  %_12.1 = load i64, i64* %21, align 8, !dbg !4974
  %22 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_12.0, 0, !dbg !4976
  %23 = insertvalue { [0 x i8]*, i64 } %22, i64 %_12.1, 1, !dbg !4976
  ret { [0 x i8]*, i64 } %23, !dbg !4976
}

; core::cell::Cell<T>::replace
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core4cell13Cell$LT$T$GT$7replace17h0488958ed4ddb4e1E"(%"proc_macro::bridge::client::BridgeState"* sret(%"proc_macro::bridge::client::BridgeState") %0, %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"* align 8 %self, %"proc_macro::bridge::client::BridgeState"* %val) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4977 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %self.dbg.spill2 = alloca %"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>"*, align 8
  %self.dbg.spill = alloca %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"*, align 8
  %_8 = alloca %"proc_macro::bridge::client::BridgeState", align 8
  store %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"* %self, %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"** %self.dbg.spill, metadata !4981, metadata !DIExpression()), !dbg !4983
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::client::BridgeState"* %val, metadata !4982, metadata !DIExpression()), !dbg !4984
  %self1 = bitcast %"core::cell::Cell<proc_macro::bridge::client::BridgeState>"* %self to %"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>"*, !dbg !4985
  store %"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>"* %self1, %"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>"** %self.dbg.spill2, align 8, !dbg !4985
  call void @llvm.dbg.declare(metadata %"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>"** %self.dbg.spill2, metadata !4986, metadata !DIExpression()), !dbg !4992
  %_10 = bitcast %"core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>"* %self1 to %"proc_macro::bridge::client::BridgeState"*, !dbg !4992
  %2 = bitcast %"proc_macro::bridge::client::BridgeState"* %_8 to i8*, !dbg !4993
  %3 = bitcast %"proc_macro::bridge::client::BridgeState"* %val to i8*, !dbg !4993
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 80, i1 false), !dbg !4993
; invoke core::mem::replace
  invoke void @_ZN4core3mem7replace17hd0fb35326f122d1aE(%"proc_macro::bridge::client::BridgeState"* sret(%"proc_macro::bridge::client::BridgeState") %0, %"proc_macro::bridge::client::BridgeState"* align 8 %_10, %"proc_macro::bridge::client::BridgeState"* %_8)
          to label %bb1 unwind label %cleanup, !dbg !4994

bb4:                                              ; preds = %cleanup
  br i1 false, label %bb3, label %bb2, !dbg !4995

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb4

bb1:                                              ; preds = %start
  ret void, !dbg !4996

bb2:                                              ; preds = %bb3, %bb4
  %9 = bitcast { i8*, i32 }* %1 to i8**, !dbg !4997
  %10 = load i8*, i8** %9, align 8, !dbg !4997
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !4997
  %12 = load i32, i32* %11, align 8, !dbg !4997
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !4997
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !4997
  resume { i8*, i32 } %14, !dbg !4997

bb3:                                              ; preds = %bb4
; invoke core::ptr::drop_in_place<proc_macro::bridge::client::BridgeState>
  invoke void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..BridgeState$GT$17haf8a3b6b03ea9458E"(%"proc_macro::bridge::client::BridgeState"* %val) #19
          to label %bb2 unwind label %abort, !dbg !4995

abort:                                            ; preds = %bb3
  %15 = landingpad { i8*, i32 }
          cleanup, !dbg !4997
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !4997
  unreachable, !dbg !4997
}

; core::cell::Cell<T>::replace
; Function Attrs: nonlazybind uwtable
define internal i8 @"_ZN4core4cell13Cell$LT$T$GT$7replace17h6b32ba01a72e7e1eE"(i8* align 1 %self, i8 %val) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4998 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %val.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !5002, metadata !DIExpression()), !dbg !5004
  store i8 %val, i8* %val.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %val.dbg.spill, metadata !5003, metadata !DIExpression()), !dbg !5005
  store i8* %self, i8** %self.dbg.spill1, align 8, !dbg !5006
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !5007, metadata !DIExpression()), !dbg !5010
; invoke core::mem::replace
  %1 = invoke i8 @_ZN4core3mem7replace17h7376dcee016dc44dE(i8* align 1 %self, i8 %val)
          to label %bb1 unwind label %cleanup, !dbg !5011, !range !3245

bb4:                                              ; preds = %cleanup
  br i1 false, label %bb3, label %bb2, !dbg !5012

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb4

bb1:                                              ; preds = %start
  ret i8 %1, !dbg !5013

bb2:                                              ; preds = %bb3, %bb4
  %7 = bitcast { i8*, i32 }* %0 to i8**, !dbg !5014
  %8 = load i8*, i8** %7, align 8, !dbg !5014
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !5014
  %10 = load i32, i32* %9, align 8, !dbg !5014
  %11 = insertvalue { i8*, i32 } undef, i8* %8, 0, !dbg !5014
  %12 = insertvalue { i8*, i32 } %11, i32 %10, 1, !dbg !5014
  resume { i8*, i32 } %12, !dbg !5014

bb3:                                              ; preds = %bb4
  br label %bb2, !dbg !5012
}

; core::char::methods::encode_utf8_raw
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17h113a3882029519ffE(i32 %0, [0 x i8]* align 1 %dst.0, i64 %dst.1) unnamed_addr #0 !dbg !5015 {
start:
  %1 = alloca %"core::fmt::Opaque"*, align 8
  %2 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill23 = alloca i1 (i64*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill22 = alloca i64*, align 8
  %x.dbg.spill21 = alloca i64*, align 8
  %3 = alloca %"core::fmt::Opaque"*, align 8
  %4 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill20 = alloca i1 (i32*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill19 = alloca i32*, align 8
  %x.dbg.spill18 = alloca i32*, align 8
  %5 = alloca %"core::fmt::Opaque"*, align 8
  %6 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (i64*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill17 = alloca i64*, align 8
  %x.dbg.spill = alloca i64*, align 8
  %slice.dbg.spill16 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill15 = alloca i64, align 8
  %self.dbg.spill14 = alloca { [0 x i8]*, i64 }, align 8
  %a.dbg.spill13 = alloca i8*, align 8
  %b.dbg.spill11 = alloca i8*, align 8
  %a.dbg.spill9 = alloca i8*, align 8
  %c.dbg.spill7 = alloca i8*, align 8
  %b.dbg.spill5 = alloca i8*, align 8
  %a.dbg.spill3 = alloca i8*, align 8
  %d.dbg.spill = alloca i8*, align 8
  %c.dbg.spill = alloca i8*, align 8
  %b.dbg.spill = alloca i8*, align 8
  %a.dbg.spill = alloca i8*, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %dst.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_137 = alloca { i64, i64 }, align 8
  %index = alloca i64, align 8
  %_86 = alloca i64, align 8
  %_83 = alloca { i8*, i64* }, align 8
  %_80 = alloca { i8*, i64* }, align 8
  %_77 = alloca { i8*, i64* }, align 8
  %_76 = alloca [3 x { i8*, i64* }], align 8
  %_69 = alloca %"core::fmt::Arguments", align 8
  %_6 = alloca { i64, { [0 x i8]*, i64 } }, align 8
  %len = alloca i64, align 8
  %code = alloca i32, align 4
  store i32 %0, i32* %code, align 4
  call void @llvm.dbg.declare(metadata i32* %code, metadata !5022, metadata !DIExpression()), !dbg !5041
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %dst.dbg.spill, i32 0, i32 0
  store [0 x i8]* %dst.0, [0 x i8]** %7, align 8
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %dst.dbg.spill, i32 0, i32 1
  store i64 %dst.1, i64* %8, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %dst.dbg.spill, metadata !5023, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5024, metadata !DIExpression()), !dbg !5043
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill, metadata !5044, metadata !DIExpression()), !dbg !5052
  call void @llvm.dbg.declare(metadata i64* %index, metadata !5054, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %self.dbg.spill, metadata !5068, metadata !DIExpression()), !dbg !5075
  %_5 = load i32, i32* %code, align 4, !dbg !5077
; call core::char::methods::len_utf8
  %9 = call i64 @_ZN4core4char7methods8len_utf817h14434f0c82b1c7ddE(i32 %_5), !dbg !5078
  store i64 %9, i64* %len, align 8, !dbg !5078
  br label %bb1, !dbg !5078

bb1:                                              ; preds = %start
  %_7 = load i64, i64* %len, align 8, !dbg !5079
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !5053
  store [0 x i8]* %dst.0, [0 x i8]** %10, align 8, !dbg !5053
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !5053
  store i64 %dst.1, i64* %11, align 8, !dbg !5053
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !5051, metadata !DIExpression()), !dbg !5052
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !5052
  store [0 x i8]* %dst.0, [0 x i8]** %12, align 8, !dbg !5052
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !5052
  store i64 %dst.1, i64* %13, align 8, !dbg !5052
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !5074, metadata !DIExpression()), !dbg !5075
  %14 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*, !dbg !5080
  store i64 %_7, i64* %14, align 8, !dbg !5080
  %15 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5080
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 0, !dbg !5080
  store [0 x i8]* %dst.0, [0 x i8]** %16, align 8, !dbg !5080
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 1, !dbg !5080
  store i64 %dst.1, i64* %17, align 8, !dbg !5080
  %18 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*, !dbg !5081
  %19 = load i64, i64* %18, align 8, !dbg !5081
  switch i64 %19, label %bb3 [
    i64 1, label %bb2
    i64 2, label %bb4
    i64 3, label %bb5
    i64 4, label %bb6
  ], !dbg !5081

bb3:                                              ; preds = %bb2, %bb4, %bb5, %bb6, %bb1
  store i64* %len, i64** %x.dbg.spill, align 8, !dbg !5082
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill, metadata !5083, metadata !DIExpression()), !dbg !5089
  store i64* %len, i64** %x.dbg.spill17, align 8, !dbg !5089
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill17, metadata !5091, metadata !DIExpression()), !dbg !5101
  store i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE", i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !5089
  call void @llvm.dbg.declare(metadata i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !5100, metadata !DIExpression()), !dbg !5101
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !5101
  %_115 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !5101, !nonnull !27, !noundef !27
  br label %bb13, !dbg !5101

bb2:                                              ; preds = %bb1
  %20 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5103
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0, !dbg !5103
  %_94.0 = load [0 x i8]*, [0 x i8]** %21, align 8, !dbg !5103, !nonnull !27, !align !608, !noundef !27
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1, !dbg !5103
  %_94.1 = load i64, i64* %22, align 8, !dbg !5103
  %_14 = icmp uge i64 %_94.1, 1, !dbg !5103
  br i1 %_14, label %bb7, label %bb3, !dbg !5103

bb4:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5104
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 0, !dbg !5104
  %_95.0 = load [0 x i8]*, [0 x i8]** %24, align 8, !dbg !5104, !nonnull !27, !align !608, !noundef !27
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 1, !dbg !5104
  %_95.1 = load i64, i64* %25, align 8, !dbg !5104
  %_17 = icmp uge i64 %_95.1, 2, !dbg !5104
  br i1 %_17, label %bb8, label %bb3, !dbg !5104

bb5:                                              ; preds = %bb1
  %26 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5105
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 0, !dbg !5105
  %_96.0 = load [0 x i8]*, [0 x i8]** %27, align 8, !dbg !5105, !nonnull !27, !align !608, !noundef !27
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 1, !dbg !5105
  %_96.1 = load i64, i64* %28, align 8, !dbg !5105
  %_20 = icmp uge i64 %_96.1, 3, !dbg !5105
  br i1 %_20, label %bb9, label %bb3, !dbg !5105

bb6:                                              ; preds = %bb1
  %29 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5106
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 0, !dbg !5106
  %_97.0 = load [0 x i8]*, [0 x i8]** %30, align 8, !dbg !5106, !nonnull !27, !align !608, !noundef !27
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 1, !dbg !5106
  %_97.1 = load i64, i64* %31, align 8, !dbg !5106
  %_23 = icmp uge i64 %_97.1, 4, !dbg !5106
  br i1 %_23, label %bb10, label %bb3, !dbg !5106

bb10:                                             ; preds = %bb6
  %32 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5107
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0, !dbg !5107
  %_104.0 = load [0 x i8]*, [0 x i8]** %33, align 8, !dbg !5107, !nonnull !27, !align !608, !noundef !27
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1, !dbg !5107
  %_104.1 = load i64, i64* %34, align 8, !dbg !5107
  %a = getelementptr inbounds [0 x i8], [0 x i8]* %_104.0, i64 0, i64 0, !dbg !5107
  store i8* %a, i8** %a.dbg.spill, align 8, !dbg !5107
  call void @llvm.dbg.declare(metadata i8** %a.dbg.spill, metadata !5036, metadata !DIExpression()), !dbg !5108
  %35 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5109
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %35, i32 0, i32 0, !dbg !5109
  %_105.0 = load [0 x i8]*, [0 x i8]** %36, align 8, !dbg !5109, !nonnull !27, !align !608, !noundef !27
  %37 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %35, i32 0, i32 1, !dbg !5109
  %_105.1 = load i64, i64* %37, align 8, !dbg !5109
  %b = getelementptr inbounds [0 x i8], [0 x i8]* %_105.0, i64 0, i64 1, !dbg !5109
  store i8* %b, i8** %b.dbg.spill, align 8, !dbg !5109
  call void @llvm.dbg.declare(metadata i8** %b.dbg.spill, metadata !5038, metadata !DIExpression()), !dbg !5110
  %38 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5111
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %38, i32 0, i32 0, !dbg !5111
  %_106.0 = load [0 x i8]*, [0 x i8]** %39, align 8, !dbg !5111, !nonnull !27, !align !608, !noundef !27
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %38, i32 0, i32 1, !dbg !5111
  %_106.1 = load i64, i64* %40, align 8, !dbg !5111
  %c = getelementptr inbounds [0 x i8], [0 x i8]* %_106.0, i64 0, i64 2, !dbg !5111
  store i8* %c, i8** %c.dbg.spill, align 8, !dbg !5111
  call void @llvm.dbg.declare(metadata i8** %c.dbg.spill, metadata !5039, metadata !DIExpression()), !dbg !5112
  %41 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5113
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %41, i32 0, i32 0, !dbg !5113
  %_107.0 = load [0 x i8]*, [0 x i8]** %42, align 8, !dbg !5113, !nonnull !27, !align !608, !noundef !27
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %41, i32 0, i32 1, !dbg !5113
  %_107.1 = load i64, i64* %43, align 8, !dbg !5113
  %d = getelementptr inbounds [0 x i8], [0 x i8]* %_107.0, i64 0, i64 3, !dbg !5113
  store i8* %d, i8** %d.dbg.spill, align 8, !dbg !5113
  call void @llvm.dbg.declare(metadata i8** %d.dbg.spill, metadata !5040, metadata !DIExpression()), !dbg !5114
  %_56 = load i32, i32* %code, align 4, !dbg !5115
  %_55 = lshr i32 %_56, 18, !dbg !5115
  %_54 = and i32 %_55, 7, !dbg !5116
  %_53 = trunc i32 %_54 to i8, !dbg !5116
  %44 = or i8 %_53, -16, !dbg !5117
  store i8 %44, i8* %a, align 1, !dbg !5117
  %_60 = load i32, i32* %code, align 4, !dbg !5118
  %_59 = lshr i32 %_60, 12, !dbg !5118
  %_58 = and i32 %_59, 63, !dbg !5119
  %_57 = trunc i32 %_58 to i8, !dbg !5119
  %45 = or i8 %_57, -128, !dbg !5120
  store i8 %45, i8* %b, align 1, !dbg !5120
  %_64 = load i32, i32* %code, align 4, !dbg !5121
  %_63 = lshr i32 %_64, 6, !dbg !5121
  %_62 = and i32 %_63, 63, !dbg !5122
  %_61 = trunc i32 %_62 to i8, !dbg !5122
  %46 = or i8 %_61, -128, !dbg !5123
  store i8 %46, i8* %c, align 1, !dbg !5123
  %_67 = load i32, i32* %code, align 4, !dbg !5124
  %_66 = and i32 %_67, 63, !dbg !5125
  %_65 = trunc i32 %_66 to i8, !dbg !5125
  %47 = or i8 %_65, -128, !dbg !5126
  store i8 %47, i8* %d, align 1, !dbg !5126
  br label %bb12, !dbg !5127

bb12:                                             ; preds = %bb7, %bb8, %bb9, %bb10
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill14, i32 0, i32 0, !dbg !5067
  store [0 x i8]* %dst.0, [0 x i8]** %48, align 8, !dbg !5067
  %49 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill14, i32 0, i32 1, !dbg !5067
  store i64 %dst.1, i64* %49, align 8, !dbg !5067
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill14, metadata !5063, metadata !DIExpression()), !dbg !5066
  %_92 = load i64, i64* %len, align 8, !dbg !5128
  store i64 %_92, i64* %index, align 8, !dbg !5129
  %self = load i64, i64* %index, align 8, !dbg !5066
  store i64 %self, i64* %self.dbg.spill15, align 8, !dbg !5066
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill15, metadata !5130, metadata !DIExpression()), !dbg !5138
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill16, i32 0, i32 0, !dbg !5066
  store [0 x i8]* %dst.0, [0 x i8]** %50, align 8, !dbg !5066
  %51 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill16, i32 0, i32 1, !dbg !5066
  store i64 %dst.1, i64* %51, align 8, !dbg !5066
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill16, metadata !5137, metadata !DIExpression()), !dbg !5138
  %52 = bitcast { i64, i64 }* %_137 to i64*, !dbg !5138
  store i64 0, i64* %52, align 8, !dbg !5138
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_137, i32 0, i32 1, !dbg !5138
  store i64 %self, i64* %53, align 8, !dbg !5138
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_137, i32 0, i32 0, !dbg !5138
  %55 = load i64, i64* %54, align 8, !dbg !5138
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_137, i32 0, i32 1, !dbg !5138
  %57 = load i64, i64* %56, align 8, !dbg !5138
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %58 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h49eca17de111d561E"(i64 %55, i64 %57, [0 x i8]* align 1 %dst.0, i64 %dst.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc205 to %"core::panic::location::Location"*)), !dbg !5138
  %_136.0 = extractvalue { [0 x i8]*, i64 } %58, 0, !dbg !5138
  %_136.1 = extractvalue { [0 x i8]*, i64 } %58, 1, !dbg !5138
  br label %bb19, !dbg !5138

bb9:                                              ; preds = %bb5
  %59 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5140
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %59, i32 0, i32 0, !dbg !5140
  %_101.0 = load [0 x i8]*, [0 x i8]** %60, align 8, !dbg !5140, !nonnull !27, !align !608, !noundef !27
  %61 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %59, i32 0, i32 1, !dbg !5140
  %_101.1 = load i64, i64* %61, align 8, !dbg !5140
  %a2 = getelementptr inbounds [0 x i8], [0 x i8]* %_101.0, i64 0, i64 0, !dbg !5140
  store i8* %a2, i8** %a.dbg.spill3, align 8, !dbg !5140
  call void @llvm.dbg.declare(metadata i8** %a.dbg.spill3, metadata !5032, metadata !DIExpression()), !dbg !5141
  %62 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5142
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %62, i32 0, i32 0, !dbg !5142
  %_102.0 = load [0 x i8]*, [0 x i8]** %63, align 8, !dbg !5142, !nonnull !27, !align !608, !noundef !27
  %64 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %62, i32 0, i32 1, !dbg !5142
  %_102.1 = load i64, i64* %64, align 8, !dbg !5142
  %b4 = getelementptr inbounds [0 x i8], [0 x i8]* %_102.0, i64 0, i64 1, !dbg !5142
  store i8* %b4, i8** %b.dbg.spill5, align 8, !dbg !5142
  call void @llvm.dbg.declare(metadata i8** %b.dbg.spill5, metadata !5034, metadata !DIExpression()), !dbg !5143
  %65 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5144
  %66 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %65, i32 0, i32 0, !dbg !5144
  %_103.0 = load [0 x i8]*, [0 x i8]** %66, align 8, !dbg !5144, !nonnull !27, !align !608, !noundef !27
  %67 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %65, i32 0, i32 1, !dbg !5144
  %_103.1 = load i64, i64* %67, align 8, !dbg !5144
  %c6 = getelementptr inbounds [0 x i8], [0 x i8]* %_103.0, i64 0, i64 2, !dbg !5144
  store i8* %c6, i8** %c.dbg.spill7, align 8, !dbg !5144
  call void @llvm.dbg.declare(metadata i8** %c.dbg.spill7, metadata !5035, metadata !DIExpression()), !dbg !5145
  %_41 = load i32, i32* %code, align 4, !dbg !5146
  %_40 = lshr i32 %_41, 12, !dbg !5146
  %_39 = and i32 %_40, 15, !dbg !5147
  %_38 = trunc i32 %_39 to i8, !dbg !5147
  %68 = or i8 %_38, -32, !dbg !5148
  store i8 %68, i8* %a2, align 1, !dbg !5148
  %_45 = load i32, i32* %code, align 4, !dbg !5149
  %_44 = lshr i32 %_45, 6, !dbg !5149
  %_43 = and i32 %_44, 63, !dbg !5150
  %_42 = trunc i32 %_43 to i8, !dbg !5150
  %69 = or i8 %_42, -128, !dbg !5151
  store i8 %69, i8* %b4, align 1, !dbg !5151
  %_48 = load i32, i32* %code, align 4, !dbg !5152
  %_47 = and i32 %_48, 63, !dbg !5153
  %_46 = trunc i32 %_47 to i8, !dbg !5153
  %70 = or i8 %_46, -128, !dbg !5154
  store i8 %70, i8* %c6, align 1, !dbg !5154
  br label %bb12, !dbg !5155

bb8:                                              ; preds = %bb4
  %71 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5156
  %72 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %71, i32 0, i32 0, !dbg !5156
  %_99.0 = load [0 x i8]*, [0 x i8]** %72, align 8, !dbg !5156, !nonnull !27, !align !608, !noundef !27
  %73 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %71, i32 0, i32 1, !dbg !5156
  %_99.1 = load i64, i64* %73, align 8, !dbg !5156
  %a8 = getelementptr inbounds [0 x i8], [0 x i8]* %_99.0, i64 0, i64 0, !dbg !5156
  store i8* %a8, i8** %a.dbg.spill9, align 8, !dbg !5156
  call void @llvm.dbg.declare(metadata i8** %a.dbg.spill9, metadata !5029, metadata !DIExpression()), !dbg !5157
  %74 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5158
  %75 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %74, i32 0, i32 0, !dbg !5158
  %_100.0 = load [0 x i8]*, [0 x i8]** %75, align 8, !dbg !5158, !nonnull !27, !align !608, !noundef !27
  %76 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %74, i32 0, i32 1, !dbg !5158
  %_100.1 = load i64, i64* %76, align 8, !dbg !5158
  %b10 = getelementptr inbounds [0 x i8], [0 x i8]* %_100.0, i64 0, i64 1, !dbg !5158
  store i8* %b10, i8** %b.dbg.spill11, align 8, !dbg !5158
  call void @llvm.dbg.declare(metadata i8** %b.dbg.spill11, metadata !5031, metadata !DIExpression()), !dbg !5159
  %_31 = load i32, i32* %code, align 4, !dbg !5160
  %_30 = lshr i32 %_31, 6, !dbg !5160
  %_29 = and i32 %_30, 31, !dbg !5161
  %_28 = trunc i32 %_29 to i8, !dbg !5161
  %77 = or i8 %_28, -64, !dbg !5162
  store i8 %77, i8* %a8, align 1, !dbg !5162
  %_34 = load i32, i32* %code, align 4, !dbg !5163
  %_33 = and i32 %_34, 63, !dbg !5164
  %_32 = trunc i32 %_33 to i8, !dbg !5164
  %78 = or i8 %_32, -128, !dbg !5165
  store i8 %78, i8* %b10, align 1, !dbg !5165
  br label %bb12, !dbg !5166

bb7:                                              ; preds = %bb2
  %79 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5167
  %80 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %79, i32 0, i32 0, !dbg !5167
  %_98.0 = load [0 x i8]*, [0 x i8]** %80, align 8, !dbg !5167, !nonnull !27, !align !608, !noundef !27
  %81 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %79, i32 0, i32 1, !dbg !5167
  %_98.1 = load i64, i64* %81, align 8, !dbg !5167
  %a12 = getelementptr inbounds [0 x i8], [0 x i8]* %_98.0, i64 0, i64 0, !dbg !5167
  store i8* %a12, i8** %a.dbg.spill13, align 8, !dbg !5167
  call void @llvm.dbg.declare(metadata i8** %a.dbg.spill13, metadata !5026, metadata !DIExpression()), !dbg !5168
  %_25 = load i32, i32* %code, align 4, !dbg !5169
  %82 = trunc i32 %_25 to i8, !dbg !5170
  store i8 %82, i8* %a12, align 1, !dbg !5170
  br label %bb12, !dbg !5171

bb19:                                             ; preds = %bb12
  %83 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_136.0, 0, !dbg !5172
  %84 = insertvalue { [0 x i8]*, i64 } %83, i64 %_136.1, 1, !dbg !5172
  ret { [0 x i8]*, i64 } %84, !dbg !5172

bb13:                                             ; preds = %bb3
  %85 = bitcast i64* %len to %"core::fmt::Opaque"*, !dbg !5101
  store %"core::fmt::Opaque"* %85, %"core::fmt::Opaque"** %5, align 8, !dbg !5101
  %_117 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %5, align 8, !dbg !5101, !nonnull !27, !align !608, !noundef !27
  br label %bb14, !dbg !5101

bb14:                                             ; preds = %bb13
  %86 = bitcast { i8*, i64* }* %_77 to %"core::fmt::Opaque"**, !dbg !5101
  store %"core::fmt::Opaque"* %_117, %"core::fmt::Opaque"** %86, align 8, !dbg !5101
  %87 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_77, i32 0, i32 1, !dbg !5101
  %88 = bitcast i64** %87 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !5101
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_115, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %88, align 8, !dbg !5101
  store i32* %code, i32** %x.dbg.spill18, align 8, !dbg !5082
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill18, metadata !5173, metadata !DIExpression()), !dbg !5181
  store i32* %code, i32** %x.dbg.spill19, align 8, !dbg !5181
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill19, metadata !5183, metadata !DIExpression()), !dbg !5193
  store i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h1d19ab97b54bf162E", i1 (i32*, %"core::fmt::Formatter"*)** %f.dbg.spill20, align 8, !dbg !5181
  call void @llvm.dbg.declare(metadata i1 (i32*, %"core::fmt::Formatter"*)** %f.dbg.spill20, metadata !5192, metadata !DIExpression()), !dbg !5193
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h1d19ab97b54bf162E" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %4, align 8, !dbg !5193
  %_121 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %4, align 8, !dbg !5193, !nonnull !27, !noundef !27
  br label %bb15, !dbg !5193

bb15:                                             ; preds = %bb14
  %89 = bitcast i32* %code to %"core::fmt::Opaque"*, !dbg !5193
  store %"core::fmt::Opaque"* %89, %"core::fmt::Opaque"** %3, align 8, !dbg !5193
  %_123 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %3, align 8, !dbg !5193, !nonnull !27, !align !608, !noundef !27
  br label %bb16, !dbg !5193

bb16:                                             ; preds = %bb15
  %90 = bitcast { i8*, i64* }* %_80 to %"core::fmt::Opaque"**, !dbg !5193
  store %"core::fmt::Opaque"* %_123, %"core::fmt::Opaque"** %90, align 8, !dbg !5193
  %91 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_80, i32 0, i32 1, !dbg !5193
  %92 = bitcast i64** %91 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !5193
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_121, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %92, align 8, !dbg !5193
  store i64 %dst.1, i64* %_86, align 8, !dbg !5195
  store i64* %_86, i64** %x.dbg.spill21, align 8, !dbg !5082
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill21, metadata !5196, metadata !DIExpression()), !dbg !5200
  store i64* %_86, i64** %x.dbg.spill22, align 8, !dbg !5200
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill22, metadata !5201, metadata !DIExpression()), !dbg !5206
  store i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE", i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill23, align 8, !dbg !5200
  call void @llvm.dbg.declare(metadata i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill23, metadata !5205, metadata !DIExpression()), !dbg !5206
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %2, align 8, !dbg !5206
  %_127 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %2, align 8, !dbg !5206, !nonnull !27, !noundef !27
  br label %bb17, !dbg !5206

bb17:                                             ; preds = %bb16
  %93 = bitcast i64* %_86 to %"core::fmt::Opaque"*, !dbg !5206
  store %"core::fmt::Opaque"* %93, %"core::fmt::Opaque"** %1, align 8, !dbg !5206
  %_129 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %1, align 8, !dbg !5206, !nonnull !27, !align !608, !noundef !27
  br label %bb18, !dbg !5206

bb18:                                             ; preds = %bb17
  %94 = bitcast { i8*, i64* }* %_83 to %"core::fmt::Opaque"**, !dbg !5206
  store %"core::fmt::Opaque"* %_129, %"core::fmt::Opaque"** %94, align 8, !dbg !5206
  %95 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_83, i32 0, i32 1, !dbg !5206
  %96 = bitcast i64** %95 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !5206
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_127, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %96, align 8, !dbg !5206
  %97 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_77, i32 0, i32 0, !dbg !5082
  %98 = load i8*, i8** %97, align 8, !dbg !5082, !nonnull !27, !align !608, !noundef !27
  %99 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_77, i32 0, i32 1, !dbg !5082
  %100 = load i64*, i64** %99, align 8, !dbg !5082, !nonnull !27, !noundef !27
  %101 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_76, i64 0, i64 0, !dbg !5082
  %102 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %101, i32 0, i32 0, !dbg !5082
  store i8* %98, i8** %102, align 8, !dbg !5082
  %103 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %101, i32 0, i32 1, !dbg !5082
  store i64* %100, i64** %103, align 8, !dbg !5082
  %104 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_80, i32 0, i32 0, !dbg !5082
  %105 = load i8*, i8** %104, align 8, !dbg !5082, !nonnull !27, !align !608, !noundef !27
  %106 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_80, i32 0, i32 1, !dbg !5082
  %107 = load i64*, i64** %106, align 8, !dbg !5082, !nonnull !27, !noundef !27
  %108 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_76, i64 0, i64 1, !dbg !5082
  %109 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %108, i32 0, i32 0, !dbg !5082
  store i8* %105, i8** %109, align 8, !dbg !5082
  %110 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %108, i32 0, i32 1, !dbg !5082
  store i64* %107, i64** %110, align 8, !dbg !5082
  %111 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_83, i32 0, i32 0, !dbg !5082
  %112 = load i8*, i8** %111, align 8, !dbg !5082, !nonnull !27, !align !608, !noundef !27
  %113 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_83, i32 0, i32 1, !dbg !5082
  %114 = load i64*, i64** %113, align 8, !dbg !5082, !nonnull !27, !noundef !27
  %115 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_76, i64 0, i64 2, !dbg !5082
  %116 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %115, i32 0, i32 0, !dbg !5082
  store i8* %112, i8** %116, align 8, !dbg !5082
  %117 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %115, i32 0, i32 1, !dbg !5082
  store i64* %114, i64** %117, align 8, !dbg !5082
  %_73.0 = bitcast [3 x { i8*, i64* }]* %_76 to [0 x { i8*, i64* }]*, !dbg !5082
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h09031697824c4fd0E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_69, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc51 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* align 8 %_73.0, i64 3), !dbg !5082
  br label %bb11, !dbg !5082

bb11:                                             ; preds = %bb18
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_69, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc207 to %"core::panic::location::Location"*)) #18, !dbg !5082
  unreachable, !dbg !5082
}

; core::char::methods::len_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4char7methods8len_utf817h14434f0c82b1c7ddE(i32 %code) unnamed_addr #0 !dbg !5208 {
start:
  %code.dbg.spill = alloca i32, align 4
  %0 = alloca i64, align 8
  store i32 %code, i32* %code.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %code.dbg.spill, metadata !5212, metadata !DIExpression()), !dbg !5213
  %_2 = icmp ult i32 %code, 128, !dbg !5214
  br i1 %_2, label %bb1, label %bb2, !dbg !5214

bb2:                                              ; preds = %start
  %_4 = icmp ult i32 %code, 2048, !dbg !5215
  br i1 %_4, label %bb3, label %bb4, !dbg !5215

bb1:                                              ; preds = %start
  store i64 1, i64* %0, align 8, !dbg !5216
  br label %bb9, !dbg !5217

bb9:                                              ; preds = %bb8, %bb1
  %1 = load i64, i64* %0, align 8, !dbg !5218
  ret i64 %1, !dbg !5218

bb4:                                              ; preds = %bb2
  %_6 = icmp ult i32 %code, 65536, !dbg !5219
  br i1 %_6, label %bb5, label %bb6, !dbg !5219

bb3:                                              ; preds = %bb2
  store i64 2, i64* %0, align 8, !dbg !5220
  br label %bb8, !dbg !5221

bb8:                                              ; preds = %bb7, %bb3
  br label %bb9, !dbg !5217

bb6:                                              ; preds = %bb4
  store i64 4, i64* %0, align 8, !dbg !5222
  br label %bb7, !dbg !5223

bb5:                                              ; preds = %bb4
  store i64 3, i64* %0, align 8, !dbg !5224
  br label %bb7, !dbg !5223

bb7:                                              ; preds = %bb6, %bb5
  br label %bb8, !dbg !5221
}

; core::array::<impl core::fmt::Debug for [T; N]>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17h26f7dc4fb55d5aa1E"([16 x i8]* align 1 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !5225 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca [16 x i8]*, align 8
  %self.dbg.spill2 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill1 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca [16 x i8]*, align 8
  %_5 = alloca { [0 x i8]*, i64 }, align 8
  store [16 x i8]* %self, [16 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [16 x i8]** %self.dbg.spill, metadata !5230, metadata !DIExpression()), !dbg !5232
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !5231, metadata !DIExpression()), !dbg !5233
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill, metadata !5234, metadata !DIExpression()), !dbg !5241
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill1, metadata !5243, metadata !DIExpression()), !dbg !5248
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %self.dbg.spill2, metadata !5250, metadata !DIExpression()), !dbg !5255
  store [16 x i8]* %self, [16 x i8]** %self.dbg.spill3, align 8, !dbg !5242
  call void @llvm.dbg.declare(metadata [16 x i8]** %self.dbg.spill3, metadata !5240, metadata !DIExpression()), !dbg !5241
  %_11.0 = bitcast [16 x i8]* %self to [0 x i8]*, !dbg !5241
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !5241
  store [0 x i8]* %_11.0, [0 x i8]** %0, align 8, !dbg !5241
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !5241
  store i64 16, i64* %1, align 8, !dbg !5241
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill4, metadata !5247, metadata !DIExpression()), !dbg !5248
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !5248
  store [0 x i8]* %_11.0, [0 x i8]** %2, align 8, !dbg !5248
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !5248
  store i64 16, i64* %3, align 8, !dbg !5248
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !5254, metadata !DIExpression()), !dbg !5255
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 0, !dbg !5257
  store [0 x i8]* %_11.0, [0 x i8]** %4, align 8, !dbg !5257
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 1, !dbg !5257
  store i64 16, i64* %5, align 8, !dbg !5257
; call <&T as core::fmt::Debug>::fmt
  %6 = call zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he718d28ed36feac2E"({ [0 x i8]*, i64 }* align 8 %_5, %"core::fmt::Formatter"* align 8 %f), !dbg !5258
  br label %bb1, !dbg !5258

bb1:                                              ; preds = %start
  ret i1 %6, !dbg !5259
}

; core::slice::<impl [T]>::copy_from_slice
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hfd2d90aaa2887edeE"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %src.0, i64 %src.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #1 !dbg !5260 {
start:
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %src.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %src.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]", align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !5264, metadata !DIExpression()), !dbg !5266
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 0
  store [0 x i8]* %src.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 1
  store i64 %src.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill, metadata !5265, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]"* %runtime, metadata !5268, metadata !DIExpression()), !dbg !5277
  %_3 = icmp ne i64 %self.1, %src.1, !dbg !5279
  br i1 %_3, label %bb1, label %bb2, !dbg !5279

bb2:                                              ; preds = %start
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !5280
  store [0 x i8]* %src.0, [0 x i8]** %5, align 8, !dbg !5280
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !5280
  store i64 %src.1, i64* %6, align 8, !dbg !5280
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !5281, metadata !DIExpression()), !dbg !5284
  %src = bitcast [0 x i8]* %src.0 to i8*, !dbg !5284
  store i8* %src, i8** %src.dbg.spill2, align 8, !dbg !5284
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill2, metadata !5273, metadata !DIExpression()), !dbg !5285
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !5286
  store [0 x i8]* %self.0, [0 x i8]** %7, align 8, !dbg !5286
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !5286
  store i64 %self.1, i64* %8, align 8, !dbg !5286
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !5287, metadata !DIExpression()), !dbg !5292
  %dst = bitcast [0 x i8]* %self.0 to i8*, !dbg !5292
  store i8* %dst, i8** %dst.dbg.spill, align 8, !dbg !5292
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !5275, metadata !DIExpression()), !dbg !5285
  store i64 %self.1, i64* %count.dbg.spill, align 8, !dbg !5293
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !5276, metadata !DIExpression()), !dbg !5285
  %9 = mul i64 %self.1, 1, !dbg !5285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 %9, i1 false), !dbg !5285
  ret void, !dbg !5294

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17len_mismatch_fail17h19e3e22fb19335d6E"(i64 %self.1, i64 %src.1, %"core::panic::location::Location"* align 8 %0) #18, !dbg !5295
  unreachable, !dbg !5295
}

; core::slice::memchr::memchr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5slice6memchr6memchr17h66ee0e6458792bd0E(i8 %0, [0 x i8]* align 1 %text.0, i64 %text.1) unnamed_addr #0 !dbg !5296 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %text.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_10 = alloca i8*, align 8
  %_8 = alloca { i8*, i8* }, align 8
  %1 = alloca { i64, i64 }, align 8
  %x = alloca i8, align 1
  store i8 %0, i8* %x, align 1
  call void @llvm.dbg.declare(metadata i8* %x, metadata !5302, metadata !DIExpression()), !dbg !5304
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %text.dbg.spill, i32 0, i32 0
  store [0 x i8]* %text.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %text.dbg.spill, i32 0, i32 1
  store i64 %text.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %text.dbg.spill, metadata !5303, metadata !DIExpression()), !dbg !5305
  %_3 = icmp ult i64 %text.1, 16, !dbg !5306
  br i1 %_3, label %bb1, label %bb3, !dbg !5306

bb3:                                              ; preds = %start
  %_12 = load i8, i8* %x, align 1, !dbg !5307
; call core::slice::memchr::memchr_general_case
  %4 = call { i64, i64 } @_ZN4core5slice6memchr19memchr_general_case17h8d14ec4c11d8af08E(i8 %_12, [0 x i8]* align 1 %text.0, i64 %text.1), !dbg !5308
  store { i64, i64 } %4, { i64, i64 }* %1, align 8, !dbg !5308
  br label %bb4, !dbg !5308

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !5309
  store [0 x i8]* %text.0, [0 x i8]** %5, align 8, !dbg !5309
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !5309
  store i64 %text.1, i64* %6, align 8, !dbg !5309
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !5310, metadata !DIExpression()), !dbg !5314
; call core::slice::iter::Iter<T>::new
  %7 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17ha977156ac332a7d0E"([0 x i8]* align 1 %text.0, i64 %text.1), !dbg !5314
  store { i8*, i8* } %7, { i8*, i8* }* %_8, align 8, !dbg !5314
  br label %bb6, !dbg !5314

bb6:                                              ; preds = %bb1
  store i8* %x, i8** %_10, align 8, !dbg !5315
  %8 = load i8*, i8** %_10, align 8, !dbg !5309, !nonnull !27, !align !608, !noundef !27
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
  %9 = call { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h1d2c646529b828afE"({ i8*, i8* }* align 8 %_8, i8* align 1 %8), !dbg !5309
  store { i64, i64 } %9, { i64, i64 }* %1, align 8, !dbg !5309
  br label %bb2, !dbg !5309

bb2:                                              ; preds = %bb6
  br label %bb5, !dbg !5316

bb5:                                              ; preds = %bb4, %bb2
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !5316
  %11 = load i64, i64* %10, align 8, !dbg !5316, !range !2078, !noundef !27
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5316
  %13 = load i64, i64* %12, align 8, !dbg !5316
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !5316
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !5316
  ret { i64, i64 } %15, !dbg !5316

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !5316
}

; core::slice::memchr::memchr::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5slice6memchr6memchr28_$u7b$$u7b$closure$u7d$$u7d$17h16900041becdfdacE"(i8** align 8 %_1, i8* align 1 %elt) unnamed_addr #0 !dbg !5317 {
start:
  %elt.dbg.spill = alloca i8*, align 8
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  %0 = load i8**, i8*** %_1.dbg.spill, align 8, !nonnull !27, !align !1193, !noundef !27
  %1 = load i8*, i8** %0, align 8, !nonnull !27, !align !608, !noundef !27
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !5327, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !5328
  store i8* %elt, i8** %elt.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %elt.dbg.spill, metadata !5326, metadata !DIExpression()), !dbg !5329
  %_3 = load i8, i8* %elt, align 1, !dbg !5330
  %_5 = load i8*, i8** %_1, align 8, !dbg !5331, !nonnull !27, !align !608, !noundef !27
  %_4 = load i8, i8* %_5, align 1, !dbg !5331
  %2 = icmp eq i8 %_3, %_4, !dbg !5330
  ret i1 %2, !dbg !5332
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6option15Option$LT$T$GT$3map17h5352ef7e5719a803E"(%"core::option::Option<(usize, &str)>"* sret(%"core::option::Option<(usize, &str)>") %0, %"core::option::Option<(usize, usize)>"* %self, i64* align 8 %f) unnamed_addr #0 !dbg !5333 {
start:
  %x.dbg.spill = alloca { i64, i64 }, align 8
  %f.dbg.spill = alloca i64*, align 8
  %_9 = alloca i8, align 1
  %_7 = alloca { i64, i64 }, align 8
  %_5 = alloca { i64, { [0 x i8]*, i64 } }, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<(usize, usize)>"* %self, metadata !5363, metadata !DIExpression()), !dbg !5370
  store i64* %f, i64** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %f.dbg.spill, metadata !5364, metadata !DIExpression()), !dbg !5371
  store i8 1, i8* %_9, align 1, !dbg !5372
  %1 = bitcast %"core::option::Option<(usize, usize)>"* %self to i64*, !dbg !5372
  %_3 = load i64, i64* %1, align 8, !dbg !5372, !range !2078, !noundef !27
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !5373

bb2:                                              ; preds = %start
  unreachable, !dbg !5372

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"core::option::Option<(usize, &str)>", %"core::option::Option<(usize, &str)>"* %0, i32 0, i32 1, !dbg !5374
  store {}* null, {}** %2, align 8, !dbg !5374
  br label %bb7, !dbg !5374

bb3:                                              ; preds = %start
  %3 = bitcast %"core::option::Option<(usize, usize)>"* %self to %"core::option::Option<(usize, usize)>::Some"*, !dbg !5375
  %4 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %3, i32 0, i32 1, !dbg !5375
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 0, !dbg !5375
  %x.0 = load i64, i64* %5, align 8, !dbg !5375
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1, !dbg !5375
  %x.1 = load i64, i64* %6, align 8, !dbg !5375
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %x.dbg.spill, i32 0, i32 0, !dbg !5375
  store i64 %x.0, i64* %7, align 8, !dbg !5375
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %x.dbg.spill, i32 0, i32 1, !dbg !5375
  store i64 %x.1, i64* %8, align 8, !dbg !5375
  call void @llvm.dbg.declare(metadata { i64, i64 }* %x.dbg.spill, metadata !5365, metadata !DIExpression()), !dbg !5376
  store i8 0, i8* %_9, align 1, !dbg !5377
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0, !dbg !5377
  store i64 %x.0, i64* %9, align 8, !dbg !5377
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !5377
  store i64 %x.1, i64* %10, align 8, !dbg !5377
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0, !dbg !5377
  %12 = load i64, i64* %11, align 8, !dbg !5377
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !5377
  %14 = load i64, i64* %13, align 8, !dbg !5377
; call core::str::iter::MatchIndicesInternal<P>::next::{{closure}}
  call void @"_ZN4core3str4iter29MatchIndicesInternal$LT$P$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h69c42f6f0e091974E"({ i64, { [0 x i8]*, i64 } }* sret({ i64, { [0 x i8]*, i64 } }) %_5, i64* align 8 %f, i64 %12, i64 %14), !dbg !5377
  br label %bb4, !dbg !5377

bb4:                                              ; preds = %bb3
  %15 = bitcast %"core::option::Option<(usize, &str)>"* %0 to %"core::option::Option<(usize, &str)>::Some"*, !dbg !5378
  %16 = bitcast %"core::option::Option<(usize, &str)>::Some"* %15 to { i64, { [0 x i8]*, i64 } }*, !dbg !5378
  %17 = bitcast { i64, { [0 x i8]*, i64 } }* %16 to i8*, !dbg !5378
  %18 = bitcast { i64, { [0 x i8]*, i64 } }* %_5 to i8*, !dbg !5378
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false), !dbg !5378
  br label %bb7, !dbg !5379

bb7:                                              ; preds = %bb1, %bb4
  %19 = load i8, i8* %_9, align 1, !dbg !5380, !range !759, !noundef !27
  %20 = trunc i8 %19 to i1, !dbg !5380
  br i1 %20, label %bb6, label %bb5, !dbg !5380

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !5381

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !5380
}

; core::result::Result<T,E>::unwrap_or_else
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hb6b1d8dc2e2d1c2bE"(%"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>"* %self, i64* align 8 %op) unnamed_addr #0 !dbg !5382 {
start:
  %t.dbg.spill = alloca {}, align 1
  %op.dbg.spill = alloca i64*, align 8
  %_9 = alloca i8, align 1
  %_8 = alloca %"proc_macro::bridge::rpc::PanicMessage", align 8
  %_7 = alloca { %"proc_macro::bridge::rpc::PanicMessage" }, align 8
  %e = alloca %"proc_macro::bridge::rpc::PanicMessage", align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>"* %self, metadata !5386, metadata !DIExpression()), !dbg !5394
  store i64* %op, i64** %op.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %op.dbg.spill, metadata !5387, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.declare(metadata {}* %t.dbg.spill, metadata !5388, metadata !DIExpression()), !dbg !5396
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::rpc::PanicMessage"* %e, metadata !5390, metadata !DIExpression()), !dbg !5397
  store i8 1, i8* %_9, align 1, !dbg !5398
  %0 = bitcast %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>"* %self to i64*, !dbg !5398
  %1 = load i64, i64* %0, align 8, !dbg !5398, !range !923, !noundef !27
  %2 = sub i64 %1, 3, !dbg !5398
  %3 = icmp eq i64 %2, 0, !dbg !5398
  %_3 = select i1 %3, i64 0, i64 1, !dbg !5398
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !5399

bb2:                                              ; preds = %start
  unreachable, !dbg !5398

bb3:                                              ; preds = %start
  br label %bb7, !dbg !5400

bb1:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>"* %self to %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>::Err"*, !dbg !5401
  %5 = bitcast %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>::Err"* %4 to %"proc_macro::bridge::rpc::PanicMessage"*, !dbg !5401
  %6 = bitcast %"proc_macro::bridge::rpc::PanicMessage"* %e to i8*, !dbg !5401
  %7 = bitcast %"proc_macro::bridge::rpc::PanicMessage"* %5 to i8*, !dbg !5401
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 32, i1 false), !dbg !5401
  store i8 0, i8* %_9, align 1, !dbg !5402
  %8 = bitcast %"proc_macro::bridge::rpc::PanicMessage"* %_8 to i8*, !dbg !5403
  %9 = bitcast %"proc_macro::bridge::rpc::PanicMessage"* %e to i8*, !dbg !5403
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false), !dbg !5403
  %10 = bitcast { %"proc_macro::bridge::rpc::PanicMessage" }* %_7 to %"proc_macro::bridge::rpc::PanicMessage"*, !dbg !5402
  %11 = bitcast %"proc_macro::bridge::rpc::PanicMessage"* %10 to i8*, !dbg !5402
  %12 = bitcast %"proc_macro::bridge::rpc::PanicMessage"* %_8 to i8*, !dbg !5402
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 32, i1 false), !dbg !5402
  %13 = bitcast { %"proc_macro::bridge::rpc::PanicMessage" }* %_7 to %"proc_macro::bridge::rpc::PanicMessage"*, !dbg !5402
; call proc_macro::bridge::client::run_client::{{closure}}
  call void @"_ZN10proc_macro6bridge6client10run_client28_$u7b$$u7b$closure$u7d$$u7d$17h7bb2dd194cb78232E"(i64* align 8 %op, %"proc_macro::bridge::rpc::PanicMessage"* %13), !dbg !5402
  br label %bb4, !dbg !5402

bb4:                                              ; preds = %bb1
  br label %bb7, !dbg !5404

bb7:                                              ; preds = %bb3, %bb4
  %14 = load i8, i8* %_9, align 1, !dbg !5405, !range !759, !noundef !27
  %15 = trunc i8 %14 to i1, !dbg !5405
  br i1 %15, label %bb6, label %bb5, !dbg !5405

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !5406

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !5405
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h3040be500976e412E"(i1 zeroext %0, [0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5407 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %msg.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %t.dbg.spill = alloca {}, align 1
  %e = alloca %"std::thread::local::AccessError", align 1
  %self = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %self, align 1
  call void @llvm.dbg.declare(metadata {}* %t.dbg.spill, metadata !5413, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.declare(metadata i8* %self, metadata !5411, metadata !DIExpression()), !dbg !5418
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 0
  store [0 x i8]* %msg.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 1
  store i64 %msg.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %msg.dbg.spill, metadata !5412, metadata !DIExpression()), !dbg !5419
  call void @llvm.dbg.declare(metadata %"std::thread::local::AccessError"* %e, metadata !5415, metadata !DIExpression()), !dbg !5420
  %6 = load i8, i8* %self, align 1, !dbg !5421, !range !759, !noundef !27
  %7 = trunc i8 %6 to i1, !dbg !5421
  %_3 = zext i1 %7 to i64, !dbg !5421
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !5422

bb2:                                              ; preds = %start
  unreachable, !dbg !5421

bb3:                                              ; preds = %start
  ret void, !dbg !5423

bb1:                                              ; preds = %start
  %_7.0 = bitcast %"std::thread::local::AccessError"* %e to {}*, !dbg !5424
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hff48f82f03d418aeE([0 x i8]* align 1 %msg.0, i64 %msg.1, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.2 to [3 x i64]*), %"core::panic::location::Location"* align 8 %1) #18
          to label %unreachable unwind label %cleanup, !dbg !5425

bb4:                                              ; preds = %cleanup
  br label %bb5, !dbg !5426

cleanup:                                          ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb4
  %13 = bitcast { i8*, i32 }* %2 to i8**, !dbg !5427
  %14 = load i8*, i8** %13, align 8, !dbg !5427
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !5427
  %16 = load i32, i32* %15, align 8, !dbg !5427
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0, !dbg !5427
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1, !dbg !5427
  resume { i8*, i32 } %18, !dbg !5427
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h952c80a6ae6ce946E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %t, %"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>"* %self, [0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5428 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %msg.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %e = alloca %"std::thread::local::AccessError", align 1
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"* %t, metadata !5434, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.declare(metadata %"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>"* %self, metadata !5432, metadata !DIExpression()), !dbg !5439
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 0
  store [0 x i8]* %msg.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 1
  store i64 %msg.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %msg.dbg.spill, metadata !5433, metadata !DIExpression()), !dbg !5440
  call void @llvm.dbg.declare(metadata %"std::thread::local::AccessError"* %e, metadata !5436, metadata !DIExpression()), !dbg !5441
  %4 = getelementptr inbounds %"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>", %"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>"* %self, i32 0, i32 1, !dbg !5442
  %5 = load {}*, {}** %4, align 8, !dbg !5442
  %6 = icmp eq {}* %5, null, !dbg !5442
  %_3 = select i1 %6, i64 1, i64 0, !dbg !5442
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !5443

bb2:                                              ; preds = %start
  unreachable, !dbg !5442

bb3:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>"* %self to %"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>::Ok"*, !dbg !5444
  %8 = bitcast %"core::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>::Ok"* %7 to %"proc_macro::bridge::buffer::Buffer"*, !dbg !5444
  %9 = bitcast %"proc_macro::bridge::buffer::Buffer"* %t to i8*, !dbg !5444
  %10 = bitcast %"proc_macro::bridge::buffer::Buffer"* %8 to i8*, !dbg !5444
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 40, i1 false), !dbg !5444
  ret void, !dbg !5445

bb1:                                              ; preds = %start
  %_7.0 = bitcast %"std::thread::local::AccessError"* %e to {}*, !dbg !5446
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hff48f82f03d418aeE([0 x i8]* align 1 %msg.0, i64 %msg.1, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.2 to [3 x i64]*), %"core::panic::location::Location"* align 8 %0) #18
          to label %unreachable unwind label %cleanup, !dbg !5447

bb4:                                              ; preds = %cleanup
  br label %bb5, !dbg !5448

cleanup:                                          ; preds = %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb4
  %16 = bitcast { i8*, i32 }* %1 to i8**, !dbg !5449
  %17 = load i8*, i8** %16, align 8, !dbg !5449
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !5449
  %19 = load i32, i32* %18, align 8, !dbg !5449
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !5449
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !5449
  resume { i8*, i32 } %21, !dbg !5449
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h15db2de438a3931eE"(i8* %0, %"core::panic::location::Location"* align 8 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5450 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %t.dbg.spill = alloca {}, align 1
  %e = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  call void @llvm.dbg.declare(metadata {}* %t.dbg.spill, metadata !5470, metadata !DIExpression()), !dbg !5474
  call void @llvm.dbg.declare(metadata i8** %self, metadata !5469, metadata !DIExpression()), !dbg !5475
  call void @llvm.dbg.declare(metadata i8** %e, metadata !5472, metadata !DIExpression()), !dbg !5476
  %3 = bitcast i8** %self to {}**, !dbg !5477
  %4 = load {}*, {}** %3, align 8, !dbg !5477
  %5 = icmp eq {}* %4, null, !dbg !5477
  %_2 = select i1 %5, i64 0, i64 1, !dbg !5477
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !5478

bb2:                                              ; preds = %start
  unreachable, !dbg !5477

bb3:                                              ; preds = %start
  ret void, !dbg !5479

bb1:                                              ; preds = %start
  %6 = load i8*, i8** %self, align 8, !dbg !5480, !nonnull !27, !noundef !27
  store i8* %6, i8** %e, align 8, !dbg !5480
  %_7.0 = bitcast i8** %e to {}*, !dbg !5481
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hff48f82f03d418aeE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc215 to [0 x i8]*), i64 43, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.3 to [3 x i64]*), %"core::panic::location::Location"* align 8 %1) #18
          to label %unreachable unwind label %cleanup, !dbg !5482

bb4:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::io::error::Error>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h32c7df30d12904acE"(i8** %e) #19
          to label %bb5 unwind label %abort, !dbg !5483

cleanup:                                          ; preds = %bb1
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

abort:                                            ; preds = %bb4
  %12 = landingpad { i8*, i32 }
          cleanup, !dbg !5484
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !5484
  unreachable, !dbg !5484

bb5:                                              ; preds = %bb4
  %13 = bitcast { i8*, i32 }* %2 to i8**, !dbg !5484
  %14 = load i8*, i8** %13, align 8, !dbg !5484
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !5484
  %16 = load i32, i32* %15, align 8, !dbg !5484
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0, !dbg !5484
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1, !dbg !5484
  resume { i8*, i32 } %18, !dbg !5484
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hbad39de2ad96f304E"(i32 %0, i32 %1, %"core::panic::location::Location"* align 8 %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5485 {
start:
  %t.dbg.spill = alloca i32, align 4
  %3 = alloca { i8*, i32 }, align 8
  %e = alloca %"proc_macro::LexError", align 1
  %self = alloca { i32, i32 }, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %4, align 4
  %5 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata { i32, i32 }* %self, metadata !5489, metadata !DIExpression()), !dbg !5494
  call void @llvm.dbg.declare(metadata %"proc_macro::LexError"* %e, metadata !5492, metadata !DIExpression()), !dbg !5495
  %6 = bitcast { i32, i32 }* %self to i32*, !dbg !5496
  %7 = load i32, i32* %6, align 4, !dbg !5496, !range !967, !noundef !27
  %_2 = zext i32 %7 to i64, !dbg !5496
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !5497

bb2:                                              ; preds = %start
  unreachable, !dbg !5496

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1, !dbg !5498
  %t = load i32, i32* %8, align 4, !dbg !5498
  store i32 %t, i32* %t.dbg.spill, align 4, !dbg !5498
  call void @llvm.dbg.declare(metadata i32* %t.dbg.spill, metadata !5490, metadata !DIExpression()), !dbg !5499
  ret i32 %t, !dbg !5500

bb1:                                              ; preds = %start
  %_7.0 = bitcast %"proc_macro::LexError"* %e to {}*, !dbg !5501
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hff48f82f03d418aeE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc215 to [0 x i8]*), i64 43, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.4 to [3 x i64]*), %"core::panic::location::Location"* align 8 %2) #18
          to label %unreachable unwind label %cleanup, !dbg !5502

bb4:                                              ; preds = %cleanup
  br label %bb5, !dbg !5503

cleanup:                                          ; preds = %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb4
  %14 = bitcast { i8*, i32 }* %3 to i8**, !dbg !5504
  %15 = load i8*, i8** %14, align 8, !dbg !5504
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !5504
  %17 = load i32, i32* %16, align 8, !dbg !5504
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0, !dbg !5504
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1, !dbg !5504
  resume { i8*, i32 } %19, !dbg !5504
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h0da0f8cedc183056E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i8* %1, i64 %2, i64* align 8 %op) unnamed_addr #0 !dbg !5505 {
start:
  %t.dbg.spill = alloca { i8*, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %op.dbg.spill = alloca i64*, align 8
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::AllocError" }, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !5549, metadata !DIExpression()), !dbg !5558
  store i64* %op, i64** %op.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %op.dbg.spill, metadata !5550, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !5553, metadata !DIExpression()), !dbg !5560
  store i8 1, i8* %_11, align 1, !dbg !5561
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !5561
  %6 = load {}*, {}** %5, align 8, !dbg !5561
  %7 = icmp eq {}* %6, null, !dbg !5561
  %_3 = select i1 %7, i64 1, i64 0, !dbg !5561
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !5562

bb2:                                              ; preds = %start
  unreachable, !dbg !5561

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0, !dbg !5563
  %t.0 = load i8*, i8** %8, align 8, !dbg !5563, !nonnull !27, !noundef !27
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !5563
  %t.1 = load i64, i64* %9, align 8, !dbg !5563
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !5563
  store i8* %t.0, i8** %10, align 8, !dbg !5563
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !5563
  store i64 %t.1, i64* %11, align 8, !dbg !5563
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %t.dbg.spill, metadata !5551, metadata !DIExpression()), !dbg !5564
  %12 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*, !dbg !5565
  %13 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %12, i32 0, i32 1, !dbg !5565
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 0, !dbg !5565
  store i8* %t.0, i8** %14, align 8, !dbg !5565
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 1, !dbg !5565
  store i64 %t.1, i64* %15, align 8, !dbg !5565
  %16 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !5565
  store i64 0, i64* %16, align 8, !dbg !5565
  br label %bb7, !dbg !5566

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !5567
  %17 = bitcast { %"core::alloc::AllocError" }* %_9 to %"core::alloc::AllocError"*, !dbg !5567
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h19ea93a086e7b9cdE"(i64* align 8 %op), !dbg !5567
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !5567
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !5567
  br label %bb4, !dbg !5567

bb4:                                              ; preds = %bb1
  %19 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !5568
  %20 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %19, i32 0, i32 1, !dbg !5568
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !5568
  store i64 %_7.0, i64* %21, align 8, !dbg !5568
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !5568
  store i64 %_7.1, i64* %22, align 8, !dbg !5568
  %23 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !5568
  store i64 1, i64* %23, align 8, !dbg !5568
  br label %bb7, !dbg !5569

bb7:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !5570, !range !759, !noundef !27
  %25 = trunc i8 %24 to i1, !dbg !5570
  br i1 %25, label %bb6, label %bb5, !dbg !5570

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !5571

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !5570
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h2db4cce6e1006803E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !5572 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca {}, align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !5607, metadata !DIExpression()), !dbg !5616
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %op.dbg.spill, metadata !5608, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.declare(metadata {}* %t.dbg.spill, metadata !5609, metadata !DIExpression()), !dbg !5618
  store i8 1, i8* %_11, align 1, !dbg !5619
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5619
  %6 = load i64, i64* %5, align 8, !dbg !5619, !range !5620, !noundef !27
  %7 = sub i64 %6, -9223372036854775807, !dbg !5619
  %8 = icmp eq i64 %7, 0, !dbg !5619
  %_3 = select i1 %8, i64 0, i64 1, !dbg !5619
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !5621

bb2:                                              ; preds = %start
  unreachable, !dbg !5619

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %2 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !5622
  %10 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"* %9 to {}*, !dbg !5622
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !5622
  store i64 -9223372036854775807, i64* %11, align 8, !dbg !5622
  br label %bb7, !dbg !5623

bb1:                                              ; preds = %start
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !5624
  %e.0 = load i64, i64* %12, align 8, !dbg !5624
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5624
  %e.1 = load i64, i64* %13, align 8, !dbg !5624, !range !2198, !noundef !27
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !5624
  store i64 %e.0, i64* %14, align 8, !dbg !5624
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !5624
  store i64 %e.1, i64* %15, align 8, !dbg !5624
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !5611, metadata !DIExpression()), !dbg !5625
  store i8 0, i8* %_11, align 1, !dbg !5626
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !5626
  store i64 %e.0, i64* %16, align 8, !dbg !5626
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !5626
  store i64 %e.1, i64* %17, align 8, !dbg !5626
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !5626
  %19 = load i64, i64* %18, align 8, !dbg !5626
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !5626
  %21 = load i64, i64* %20, align 8, !dbg !5626, !range !2198, !noundef !27
; call alloc::raw_vec::handle_reserve::{{closure}}
  %22 = call { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hb761c6a74ff5d3c3E"(i64 %19, i64 %21), !dbg !5626
  %_7.0 = extractvalue { i64, i64 } %22, 0, !dbg !5626
  %_7.1 = extractvalue { i64, i64 } %22, 1, !dbg !5626
  br label %bb4, !dbg !5626

bb4:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !5627
  store i64 %_7.0, i64* %23, align 8, !dbg !5627
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !5627
  store i64 %_7.1, i64* %24, align 8, !dbg !5627
  br label %bb7, !dbg !5628

bb7:                                              ; preds = %bb3, %bb4
  %25 = load i8, i8* %_11, align 1, !dbg !5629, !range !759, !noundef !27
  %26 = trunc i8 %25 to i1, !dbg !5629
  br i1 %26, label %bb6, label %bb5, !dbg !5629

bb5:                                              ; preds = %bb6, %bb7
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !5630
  %28 = load i64, i64* %27, align 8, !dbg !5630
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !5630
  %30 = load i64, i64* %29, align 8, !dbg !5630, !range !5620, !noundef !27
  %31 = insertvalue { i64, i64 } undef, i64 %28, 0, !dbg !5630
  %32 = insertvalue { i64, i64 } %31, i64 %30, 1, !dbg !5630
  ret { i64, i64 } %32, !dbg !5630

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !5629
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h7bb473a7b559d364E"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !5631 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::layout::LayoutError" }, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !5667, metadata !DIExpression()), !dbg !5675
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]"* %op.dbg.spill, metadata !5668, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !5671, metadata !DIExpression()), !dbg !5677
  store i8 1, i8* %_11, align 1, !dbg !5678
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5678
  %6 = load i64, i64* %5, align 8, !dbg !5678, !range !2198, !noundef !27
  %7 = icmp eq i64 %6, 0, !dbg !5678
  %_3 = select i1 %7, i64 1, i64 0, !dbg !5678
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !5679

bb2:                                              ; preds = %start
  unreachable, !dbg !5678

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !5680
  %t.0 = load i64, i64* %8, align 8, !dbg !5680
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5680
  %t.1 = load i64, i64* %9, align 8, !dbg !5680, !range !5681, !noundef !27
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !5680
  store i64 %t.0, i64* %10, align 8, !dbg !5680
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !5680
  store i64 %t.1, i64* %11, align 8, !dbg !5680
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !5669, metadata !DIExpression()), !dbg !5682
  %12 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !5683
  %13 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %12, i32 0, i32 1, !dbg !5683
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !5683
  store i64 %t.0, i64* %14, align 8, !dbg !5683
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !5683
  store i64 %t.1, i64* %15, align 8, !dbg !5683
  %16 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !5683
  store i64 0, i64* %16, align 8, !dbg !5683
  br label %bb7, !dbg !5684

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !5685
  %17 = bitcast { %"core::alloc::layout::LayoutError" }* %_9 to %"core::alloc::layout::LayoutError"*, !dbg !5685
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h07d6da8a7107da5bE"(), !dbg !5685
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !5685
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !5685
  br label %bb4, !dbg !5685

bb4:                                              ; preds = %bb1
  %19 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !5686
  %20 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %19, i32 0, i32 1, !dbg !5686
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !5686
  store i64 %_7.0, i64* %21, align 8, !dbg !5686
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !5686
  store i64 %_7.1, i64* %22, align 8, !dbg !5686
  %23 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !5686
  store i64 1, i64* %23, align 8, !dbg !5686
  br label %bb7, !dbg !5687

bb7:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !5688, !range !759, !noundef !27
  %25 = trunc i8 %24 to i1, !dbg !5688
  br i1 %25, label %bb6, label %bb5, !dbg !5688

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !5689

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !5688
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha3fa06a25fa3eb8fE"(%"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>"* sret(%"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>") %0, i8* align 1 %1, i8* %2) unnamed_addr #0 !dbg !5690 {
start:
  %e.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %t.dbg.spill = alloca {}, align 1
  %op.dbg.spill = alloca {}, align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { i8*, i64* }, align 8
  %_7 = alloca %"proc_macro::bridge::rpc::PanicMessage", align 8
  %self = alloca { i8*, i8* }, align 8
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  store i8* %2, i8** %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %self, metadata !5694, metadata !DIExpression()), !dbg !5703
  call void @llvm.dbg.declare(metadata {}* %op.dbg.spill, metadata !5695, metadata !DIExpression()), !dbg !5704
  call void @llvm.dbg.declare(metadata {}* %t.dbg.spill, metadata !5696, metadata !DIExpression()), !dbg !5705
  store i8 1, i8* %_11, align 1, !dbg !5706
  %5 = bitcast { i8*, i8* }* %self to {}**, !dbg !5706
  %6 = load {}*, {}** %5, align 8, !dbg !5706
  %7 = icmp eq {}* %6, null, !dbg !5706
  %_3 = select i1 %7, i64 0, i64 1, !dbg !5706
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !5707

bb2:                                              ; preds = %start
  unreachable, !dbg !5706

bb3:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>"* %0 to %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>::Ok"*, !dbg !5708
  %9 = bitcast %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>::Ok"* %8 to {}*, !dbg !5708
  %10 = bitcast %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>"* %0 to i64*, !dbg !5708
  store i64 3, i64* %10, align 8, !dbg !5708
  br label %bb7, !dbg !5709

bb1:                                              ; preds = %start
  %11 = bitcast { i8*, i8* }* %self to { {}*, [3 x i64]* }*, !dbg !5710
  %12 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %11, i32 0, i32 0, !dbg !5710
  %e.0 = load {}*, {}** %12, align 8, !dbg !5710, !nonnull !27, !align !608, !noundef !27
  %13 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %11, i32 0, i32 1, !dbg !5710
  %e.1 = load [3 x i64]*, [3 x i64]** %13, align 8, !dbg !5710, !nonnull !27, !align !1193, !noundef !27
  %14 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %e.dbg.spill, i32 0, i32 0, !dbg !5710
  store {}* %e.0, {}** %14, align 8, !dbg !5710
  %15 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %e.dbg.spill, i32 0, i32 1, !dbg !5710
  store [3 x i64]* %e.1, [3 x i64]** %15, align 8, !dbg !5710
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %e.dbg.spill, metadata !5698, metadata !DIExpression()), !dbg !5711
  store i8 0, i8* %_11, align 1, !dbg !5712
  %16 = bitcast { i8*, i64* }* %_9 to { {}*, [3 x i64]* }*, !dbg !5712
  %17 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %16, i32 0, i32 0, !dbg !5712
  store {}* %e.0, {}** %17, align 8, !dbg !5712
  %18 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %16, i32 0, i32 1, !dbg !5712
  store [3 x i64]* %e.1, [3 x i64]** %18, align 8, !dbg !5712
  %19 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_9, i32 0, i32 0, !dbg !5712
  %20 = load i8*, i8** %19, align 8, !dbg !5712, !nonnull !27, !align !608, !noundef !27
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_9, i32 0, i32 1, !dbg !5712
  %22 = load i64*, i64** %21, align 8, !dbg !5712, !nonnull !27, !align !1193, !noundef !27
  %23 = bitcast i8* %20 to {}*, !dbg !5712
  %24 = bitcast i64* %22 to [3 x i64]*, !dbg !5712
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17hb89f075583d92ce7E(%"proc_macro::bridge::rpc::PanicMessage"* sret(%"proc_macro::bridge::rpc::PanicMessage") %_7, {}* align 1 %23, [3 x i64]* align 8 %24), !dbg !5712
  br label %bb4, !dbg !5712

bb4:                                              ; preds = %bb1
  %25 = bitcast %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>"* %0 to %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>::Err"*, !dbg !5713
  %26 = bitcast %"core::result::Result<(), proc_macro::bridge::rpc::PanicMessage>::Err"* %25 to %"proc_macro::bridge::rpc::PanicMessage"*, !dbg !5713
  %27 = bitcast %"proc_macro::bridge::rpc::PanicMessage"* %26 to i8*, !dbg !5713
  %28 = bitcast %"proc_macro::bridge::rpc::PanicMessage"* %_7 to i8*, !dbg !5713
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 32, i1 false), !dbg !5713
  br label %bb7, !dbg !5714

bb7:                                              ; preds = %bb3, %bb4
  %29 = load i8, i8* %_11, align 1, !dbg !5715, !range !759, !noundef !27
  %30 = trunc i8 %29 to i1, !dbg !5715
  br i1 %30, label %bb6, label %bb5, !dbg !5715

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !5716

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !5715
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h11a7bfb25080e112E"(i64 %t.0, i64 %t.1) unnamed_addr #1 !dbg !5717 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0
  store i64 %t.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1
  store i64 %t.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !5723, metadata !DIExpression()), !dbg !5726
  %2 = insertvalue { i64, i64 } undef, i64 %t.0, 0, !dbg !5727
  %3 = insertvalue { i64, i64 } %2, i64 %t.1, 1, !dbg !5727
  ret { i64, i64 } %3, !dbg !5727
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h552284ca564a009eE"() unnamed_addr #1 !dbg !5728 {
start:
  %t.dbg.spill = alloca %"std::thread::local::AccessError", align 1
  call void @llvm.dbg.declare(metadata %"std::thread::local::AccessError"* %t.dbg.spill, metadata !5732, metadata !DIExpression()), !dbg !5733
  ret void, !dbg !5734
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hb839e2439fd86ed6E"(%"alloc::ffi::c_str::NulError"* sret(%"alloc::ffi::c_str::NulError") %0, %"alloc::ffi::c_str::NulError"* %t) unnamed_addr #1 !dbg !5735 {
start:
  call void @llvm.dbg.declare(metadata %"alloc::ffi::c_str::NulError"* %t, metadata !5739, metadata !DIExpression()), !dbg !5742
  %1 = bitcast %"alloc::ffi::c_str::NulError"* %0 to i8*, !dbg !5743
  %2 = bitcast %"alloc::ffi::c_str::NulError"* %t to i8*, !dbg !5743
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false), !dbg !5743
  ret void, !dbg !5744
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb8ac4c94ae25218fE"(i64 %self.0, i64 %self.1) unnamed_addr #1 !dbg !5745 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !5748, metadata !DIExpression()), !dbg !5752
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %2 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h4602960108bdc8f3E"(i64 %self.0, i64 %self.1), !dbg !5753
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !5753
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !5753
  br label %bb1, !dbg !5753

bb1:                                              ; preds = %start
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !5754
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !5754
  ret { i64, i64 } %6, !dbg !5754
}

; <char as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hdfdbcaa7bb72fa07E"(%"core::str::pattern::CharSearcher"* sret(%"core::str::pattern::CharSearcher") %0, i32 %self, [0 x i8]* align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 !dbg !5755 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %utf8_size.dbg.spill = alloca i64, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %dst.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca i32, align 4
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i32, align 4
  %_16 = alloca [4 x i8], align 1
  %utf8_encoded = alloca [4 x i8], align 1
  store i32 %self, i32* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill, metadata !5761, metadata !DIExpression()), !dbg !5767
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !5762, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.declare(metadata [4 x i8]* %utf8_encoded, metadata !5763, metadata !DIExpression()), !dbg !5769
  %5 = getelementptr inbounds [4 x i8], [4 x i8]* %utf8_encoded, i64 0, i64 0, !dbg !5770
  call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 0, i64 4, i1 false), !dbg !5770
  store i32 %self, i32* %self.dbg.spill1, align 4, !dbg !5771
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill1, metadata !5772, metadata !DIExpression()), !dbg !5784
  %dst.0 = bitcast [4 x i8]* %utf8_encoded to [0 x i8]*, !dbg !5785
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %dst.dbg.spill, i32 0, i32 0, !dbg !5785
  store [0 x i8]* %dst.0, [0 x i8]** %6, align 8, !dbg !5785
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %dst.dbg.spill, i32 0, i32 1, !dbg !5785
  store i64 4, i64* %7, align 8, !dbg !5785
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %dst.dbg.spill, metadata !5783, metadata !DIExpression()), !dbg !5784
; call core::char::methods::encode_utf8_raw
  %8 = call { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17h113a3882029519ffE(i32 %self, [0 x i8]* align 1 %dst.0, i64 4), !dbg !5784
  %_21.0 = extractvalue { [0 x i8]*, i64 } %8, 0, !dbg !5784
  %_21.1 = extractvalue { [0 x i8]*, i64 } %8, 1, !dbg !5784
  br label %bb1, !dbg !5784

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !5784
  store [0 x i8]* %_21.0, [0 x i8]** %9, align 8, !dbg !5784
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !5784
  store i64 %_21.1, i64* %10, align 8, !dbg !5784
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !5786, metadata !DIExpression()), !dbg !5792
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !5771
  store [0 x i8]* %_21.0, [0 x i8]** %11, align 8, !dbg !5771
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !5771
  store i64 %_21.1, i64* %12, align 8, !dbg !5771
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !5794, metadata !DIExpression()), !dbg !5800
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !5800
  store [0 x i8]* %_21.0, [0 x i8]** %13, align 8, !dbg !5800
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !5800
  store i64 %_21.1, i64* %14, align 8, !dbg !5800
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !5801, metadata !DIExpression()), !dbg !5807
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !5807
  store [0 x i8]* %_21.0, [0 x i8]** %15, align 8, !dbg !5807
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !5807
  store i64 %_21.1, i64* %16, align 8, !dbg !5807
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !5807
  %_31.0 = load [0 x i8]*, [0 x i8]** %17, align 8, !dbg !5807, !nonnull !27, !align !608, !noundef !27
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !5807
  %_31.1 = load i64, i64* %18, align 8, !dbg !5807
  br label %bb2, !dbg !5807

bb2:                                              ; preds = %bb1
  store i64 %_31.1, i64* %utf8_size.dbg.spill, align 8, !dbg !5800
  call void @llvm.dbg.declare(metadata i64* %utf8_size.dbg.spill, metadata !5765, metadata !DIExpression()), !dbg !5809
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !5810
  store [0 x i8]* %haystack.0, [0 x i8]** %19, align 8, !dbg !5810
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !5810
  store i64 %haystack.1, i64* %20, align 8, !dbg !5810
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill4, metadata !5811, metadata !DIExpression()), !dbg !5815
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !5815
  store [0 x i8]* %haystack.0, [0 x i8]** %21, align 8, !dbg !5815
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !5815
  store i64 %haystack.1, i64* %22, align 8, !dbg !5815
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill5, metadata !5816, metadata !DIExpression()), !dbg !5820
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !5820
  store [0 x i8]* %haystack.0, [0 x i8]** %23, align 8, !dbg !5820
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !5820
  store i64 %haystack.1, i64* %24, align 8, !dbg !5820
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !5820
  %_35.0 = load [0 x i8]*, [0 x i8]** %25, align 8, !dbg !5820, !nonnull !27, !align !608, !noundef !27
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !5820
  %_35.1 = load i64, i64* %26, align 8, !dbg !5820
  br label %bb3, !dbg !5820

bb3:                                              ; preds = %bb2
  %27 = bitcast [4 x i8]* %_16 to i8*, !dbg !5822
  %28 = bitcast [4 x i8]* %utf8_encoded to i8*, !dbg !5822
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %28, i64 4, i1 false), !dbg !5822
  %29 = bitcast %"core::str::pattern::CharSearcher"* %0 to { [0 x i8]*, i64 }*, !dbg !5823
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 0, !dbg !5823
  store [0 x i8]* %haystack.0, [0 x i8]** %30, align 8, !dbg !5823
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 1, !dbg !5823
  store i64 %haystack.1, i64* %31, align 8, !dbg !5823
  %32 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 1, !dbg !5823
  store i64 0, i64* %32, align 8, !dbg !5823
  %33 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 2, !dbg !5823
  store i64 %_35.1, i64* %33, align 8, !dbg !5823
  %34 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 4, !dbg !5823
  store i32 %self, i32* %34, align 8, !dbg !5823
  %35 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 3, !dbg !5823
  store i64 %_31.1, i64* %35, align 8, !dbg !5823
  %36 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 5, !dbg !5823
  %37 = bitcast [4 x i8]* %36 to i8*, !dbg !5823
  %38 = bitcast [4 x i8]* %_16 to i8*, !dbg !5823
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 1 %38, i64 4, i1 false), !dbg !5823
  ret void, !dbg !5824
}

; alloc::fmt::format
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc3fmt6format17h379f45c17972232bE(%"alloc::string::String"* sret(%"alloc::string::String") %0, %"core::fmt::Arguments"* %args) unnamed_addr #0 !dbg !5825 {
start:
  %_4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Arguments"* %args, metadata !5831, metadata !DIExpression()), !dbg !5832
; call core::fmt::Arguments::as_str
  %1 = call { i8*, i64 } @_ZN4core3fmt9Arguments6as_str17hd9dd9a590817d817E(%"core::fmt::Arguments"* align 8 %args), !dbg !5833
  %_2.0 = extractvalue { i8*, i64 } %1, 0, !dbg !5833
  %_2.1 = extractvalue { i8*, i64 } %1, 1, !dbg !5833
  br label %bb1, !dbg !5833

bb1:                                              ; preds = %start
  %2 = bitcast i64** %_4 to %"core::fmt::Arguments"**, !dbg !5834
  store %"core::fmt::Arguments"* %args, %"core::fmt::Arguments"** %2, align 8, !dbg !5834
  %3 = load i64*, i64** %_4, align 8, !dbg !5833, !nonnull !27, !align !1193, !noundef !27
; call core::option::Option<T>::map_or_else
  call void @"_ZN4core6option15Option$LT$T$GT$11map_or_else17h2b746e8d475aa0c8E"(%"alloc::string::String"* sret(%"alloc::string::String") %0, i8* align 1 %_2.0, i64 %_2.1, i64* align 8 %3), !dbg !5833
  br label %bb2, !dbg !5833

bb2:                                              ; preds = %bb1
  ret void, !dbg !5835
}

; alloc::str::<impl str>::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc3str21_$LT$impl$u20$str$GT$7replace17h324b3cfea44dc7d1E"(%"alloc::string::String"* sret(%"alloc::string::String") %result, [0 x i8]* align 1 %self.0, i64 %self.1, i32 %from, [0 x i8]* align 1 %to.0, i64 %to.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5836 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill21 = alloca { [0 x i8]*, i64 }, align 8
  %string.dbg.spill20 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill19 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill18 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill17 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill16 = alloca %"alloc::string::String"*, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill15 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill14 = alloca { [0 x i8]*, i64 }, align 8
  %3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill13 = alloca { [0 x i8]*, i64 }, align 8
  %string.dbg.spill12 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill11 = alloca %"alloc::string::String"*, align 8
  %4 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill10 = alloca { [0 x i8]*, i64 }, align 8
  %string.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill9 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill8 = alloca %"alloc::string::String"*, align 8
  %part.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %start.dbg.spill = alloca i64, align 8
  %self.dbg.spill5 = alloca %"core::str::iter::MatchIndicesInternal<char>"*, align 8
  %self.dbg.spill3 = alloca %"core::str::iter::MatchIndices<char>"*, align 8
  %5 = alloca { i8*, i32 }, align 8
  %pat.dbg.spill = alloca i32, align 4
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %to.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %from.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_49 = alloca i64*, align 8
  %_47 = alloca %"core::option::Option<(usize, usize)>", align 8
  %_43 = alloca %"core::str::pattern::CharSearcher", align 8
  %_42 = alloca %"core::str::iter::MatchIndicesInternal<char>", align 8
  %_40 = alloca %"alloc::vec::Vec<u8>", align 8
  %i1 = alloca { i64, i64 }, align 8
  %i = alloca { i64, i64 }, align 8
  %_10 = alloca %"core::option::Option<(usize, &str)>", align 8
  %iter = alloca %"core::str::iter::MatchIndices<char>", align 8
  %self = alloca %"core::str::iter::MatchIndices<char>", align 8
  %_5 = alloca %"core::str::iter::MatchIndices<char>", align 8
  %last_end = alloca i64, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %result, metadata !5846, metadata !DIExpression()), !dbg !5861
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !5843, metadata !DIExpression()), !dbg !5862
  store i32 %from, i32* %from.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %from.dbg.spill, metadata !5844, metadata !DIExpression()), !dbg !5863
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %to.dbg.spill, i32 0, i32 0
  store [0 x i8]* %to.0, [0 x i8]** %8, align 8
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %to.dbg.spill, i32 0, i32 1
  store i64 %to.1, i64* %9, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %to.dbg.spill, metadata !5845, metadata !DIExpression()), !dbg !5864
  call void @llvm.dbg.declare(metadata i64* %last_end, metadata !5848, metadata !DIExpression()), !dbg !5865
  call void @llvm.dbg.declare(metadata %"core::str::iter::MatchIndices<char>"* %self, metadata !5866, metadata !DIExpression()), !dbg !5879
  call void @llvm.dbg.declare(metadata %"core::str::iter::MatchIndices<char>"* %iter, metadata !5850, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.declare(metadata { i64, i64 }* %i, metadata !5882, metadata !DIExpression()), !dbg !5887
  call void @llvm.dbg.declare(metadata { i64, i64 }* %i1, metadata !5889, metadata !DIExpression()), !dbg !5894
  %_41.0 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 0), align 8, !dbg !5896, !nonnull !27, !noundef !27
  %_41.1 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 1), align 8, !dbg !5896
  %10 = bitcast %"alloc::vec::Vec<u8>"* %_40 to { i8*, i64 }*, !dbg !5896
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 0, !dbg !5896
  store i8* %_41.0, i8** %11, align 8, !dbg !5896
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 1, !dbg !5896
  store i64 %_41.1, i64* %12, align 8, !dbg !5896
  %13 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %_40, i32 0, i32 1, !dbg !5896
  store i64 0, i64* %13, align 8, !dbg !5896
  %14 = bitcast %"alloc::string::String"* %result to %"alloc::vec::Vec<u8>"*, !dbg !5904
  %15 = bitcast %"alloc::vec::Vec<u8>"* %14 to i8*, !dbg !5904
  %16 = bitcast %"alloc::vec::Vec<u8>"* %_40 to i8*, !dbg !5904
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false), !dbg !5904
  store i64 0, i64* %last_end, align 8, !dbg !5906
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !5880
  store [0 x i8]* %self.0, [0 x i8]** %17, align 8, !dbg !5880
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !5880
  store i64 %self.1, i64* %18, align 8, !dbg !5880
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !5907, metadata !DIExpression()), !dbg !5914
  store i32 %from, i32* %pat.dbg.spill, align 4, !dbg !5915
  call void @llvm.dbg.declare(metadata i32* %pat.dbg.spill, metadata !5913, metadata !DIExpression()), !dbg !5914
; invoke <char as core::str::pattern::Pattern>::into_searcher
  invoke void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hdfdbcaa7bb72fa07E"(%"core::str::pattern::CharSearcher"* sret(%"core::str::pattern::CharSearcher") %_43, i32 %from, [0 x i8]* align 1 %self.0, i64 %self.1)
          to label %bb11 unwind label %cleanup, !dbg !5914

bb7:                                              ; preds = %bb6, %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"* %result) #19
          to label %bb10 unwind label %abort, !dbg !5916

cleanup:                                          ; preds = %bb23, %bb20, %start
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  %21 = extractvalue { i8*, i32 } %19, 1
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %21, i32* %23, align 8
  br label %bb7

bb11:                                             ; preds = %start
  %24 = bitcast %"core::str::iter::MatchIndicesInternal<char>"* %_42 to %"core::str::pattern::CharSearcher"*, !dbg !5914
  %25 = bitcast %"core::str::pattern::CharSearcher"* %24 to i8*, !dbg !5914
  %26 = bitcast %"core::str::pattern::CharSearcher"* %_43 to i8*, !dbg !5914
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 48, i1 false), !dbg !5914
  %27 = bitcast %"core::str::iter::MatchIndices<char>"* %self to %"core::str::iter::MatchIndicesInternal<char>"*, !dbg !5914
  %28 = bitcast %"core::str::iter::MatchIndicesInternal<char>"* %27 to i8*, !dbg !5914
  %29 = bitcast %"core::str::iter::MatchIndicesInternal<char>"* %_42 to i8*, !dbg !5914
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 48, i1 false), !dbg !5914
  %30 = bitcast %"core::str::iter::MatchIndices<char>"* %_5 to i8*, !dbg !5879
  %31 = bitcast %"core::str::iter::MatchIndices<char>"* %self to i8*, !dbg !5879
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 48, i1 false), !dbg !5879
  %32 = bitcast %"core::str::iter::MatchIndices<char>"* %iter to i8*, !dbg !5880
  %33 = bitcast %"core::str::iter::MatchIndices<char>"* %_5 to i8*, !dbg !5880
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 48, i1 false), !dbg !5880
  br label %bb1, !dbg !5917

bb1:                                              ; preds = %bb19, %bb11
  store %"core::str::iter::MatchIndices<char>"* %iter, %"core::str::iter::MatchIndices<char>"** %self.dbg.spill3, align 8, !dbg !5881
  call void @llvm.dbg.declare(metadata %"core::str::iter::MatchIndices<char>"** %self.dbg.spill3, metadata !5918, metadata !DIExpression()), !dbg !5926
  %self4 = bitcast %"core::str::iter::MatchIndices<char>"* %iter to %"core::str::iter::MatchIndicesInternal<char>"*, !dbg !5926
  store %"core::str::iter::MatchIndicesInternal<char>"* %self4, %"core::str::iter::MatchIndicesInternal<char>"** %self.dbg.spill5, align 8, !dbg !5926
  call void @llvm.dbg.declare(metadata %"core::str::iter::MatchIndicesInternal<char>"** %self.dbg.spill5, metadata !5927, metadata !DIExpression()), !dbg !5934
  %_48 = bitcast %"core::str::iter::MatchIndicesInternal<char>"* %self4 to %"core::str::pattern::CharSearcher"*, !dbg !5934
; invoke <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
  invoke void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h62e6844b22f4e1a1E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %_47, %"core::str::pattern::CharSearcher"* align 8 %_48)
          to label %bb12 unwind label %cleanup6, !dbg !5934

bb6:                                              ; preds = %cleanup6
  br label %bb7, !dbg !5936

cleanup6:                                         ; preds = %bb18, %bb16, %bb2, %bb12, %bb1
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  %36 = extractvalue { i8*, i32 } %34, 1
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %35, i8** %37, align 8
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %36, i32* %38, align 8
  br label %bb6

bb12:                                             ; preds = %bb1
  %_50 = bitcast %"core::str::iter::MatchIndicesInternal<char>"* %self4 to %"core::str::pattern::CharSearcher"*, !dbg !5934
  %39 = bitcast i64** %_49 to %"core::str::pattern::CharSearcher"**, !dbg !5934
  store %"core::str::pattern::CharSearcher"* %_50, %"core::str::pattern::CharSearcher"** %39, align 8, !dbg !5934
  %40 = load i64*, i64** %_49, align 8, !dbg !5934, !nonnull !27, !align !1193, !noundef !27
; invoke core::option::Option<T>::map
  invoke void @"_ZN4core6option15Option$LT$T$GT$3map17h5352ef7e5719a803E"(%"core::option::Option<(usize, &str)>"* sret(%"core::option::Option<(usize, &str)>") %_10, %"core::option::Option<(usize, usize)>"* %_47, i64* align 8 %40)
          to label %bb13 unwind label %cleanup6, !dbg !5934

bb13:                                             ; preds = %bb12
  %41 = getelementptr inbounds %"core::option::Option<(usize, &str)>", %"core::option::Option<(usize, &str)>"* %_10, i32 0, i32 1, !dbg !5881
  %42 = load {}*, {}** %41, align 8, !dbg !5881
  %43 = icmp eq {}* %42, null, !dbg !5881
  %_13 = select i1 %43, i64 0, i64 1, !dbg !5881
  switch i64 %_13, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !5881

bb3:                                              ; preds = %bb13
  unreachable, !dbg !5881

bb4:                                              ; preds = %bb13
  br label %bb5, !dbg !5936

bb2:                                              ; preds = %bb13
  %44 = bitcast %"core::option::Option<(usize, &str)>"* %_10 to %"core::option::Option<(usize, &str)>::Some"*, !dbg !5937
  %45 = bitcast %"core::option::Option<(usize, &str)>::Some"* %44 to { i64, { [0 x i8]*, i64 } }*, !dbg !5937
  %46 = bitcast { i64, { [0 x i8]*, i64 } }* %45 to i64*, !dbg !5937
  %start7 = load i64, i64* %46, align 8, !dbg !5937
  store i64 %start7, i64* %start.dbg.spill, align 8, !dbg !5937
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !5858, metadata !DIExpression()), !dbg !5938
  %47 = bitcast %"core::option::Option<(usize, &str)>"* %_10 to %"core::option::Option<(usize, &str)>::Some"*, !dbg !5939
  %48 = bitcast %"core::option::Option<(usize, &str)>::Some"* %47 to { i64, { [0 x i8]*, i64 } }*, !dbg !5939
  %49 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %48, i32 0, i32 1, !dbg !5939
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %49, i32 0, i32 0, !dbg !5939
  %part.0 = load [0 x i8]*, [0 x i8]** %50, align 8, !dbg !5939, !nonnull !27, !align !608, !noundef !27
  %51 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %49, i32 0, i32 1, !dbg !5939
  %part.1 = load i64, i64* %51, align 8, !dbg !5939
  %52 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %part.dbg.spill, i32 0, i32 0, !dbg !5939
  store [0 x i8]* %part.0, [0 x i8]** %52, align 8, !dbg !5939
  %53 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %part.dbg.spill, i32 0, i32 1, !dbg !5939
  store i64 %part.1, i64* %53, align 8, !dbg !5939
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %part.dbg.spill, metadata !5860, metadata !DIExpression()), !dbg !5940
  store %"alloc::string::String"* %result, %"alloc::string::String"** %self.dbg.spill8, align 8, !dbg !5941
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill8, metadata !5942, metadata !DIExpression()), !dbg !5950
  %54 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill9, i32 0, i32 0, !dbg !5888
  store [0 x i8]* %self.0, [0 x i8]** %54, align 8, !dbg !5888
  %55 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill9, i32 0, i32 1, !dbg !5888
  store i64 %self.1, i64* %55, align 8, !dbg !5888
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill9, metadata !5886, metadata !DIExpression()), !dbg !5887
  %_22 = load i64, i64* %last_end, align 8, !dbg !5951
  %56 = bitcast { i64, i64 }* %i to i64*, !dbg !5951
  store i64 %_22, i64* %56, align 8, !dbg !5951
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !5951
  store i64 %start7, i64* %57, align 8, !dbg !5951
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 0, !dbg !5887
  %_52.0 = load i64, i64* %58, align 8, !dbg !5887
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !5887
  %_52.1 = load i64, i64* %59, align 8, !dbg !5887
; invoke core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %60 = invoke { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h6c0b377acac096abE"(i64 %_52.0, i64 %_52.1, [0 x i8]* %self.0, i64 %self.1)
          to label %bb14 unwind label %cleanup6, !dbg !5887

bb14:                                             ; preds = %bb2
  %_51.0 = extractvalue { [0 x i8]*, i64 } %60, 0, !dbg !5887
  %_51.1 = extractvalue { [0 x i8]*, i64 } %60, 1, !dbg !5887
  %61 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string.dbg.spill, i32 0, i32 0, !dbg !5888
  store [0 x i8]* %_51.0, [0 x i8]** %61, align 8, !dbg !5888
  %62 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string.dbg.spill, i32 0, i32 1, !dbg !5888
  store i64 %_51.1, i64* %62, align 8, !dbg !5888
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %string.dbg.spill, metadata !5949, metadata !DIExpression()), !dbg !5950
  %_54 = bitcast %"alloc::string::String"* %result to %"alloc::vec::Vec<u8>"*, !dbg !5950
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill10, i32 0, i32 0, !dbg !5950
  store [0 x i8]* %_51.0, [0 x i8]** %63, align 8, !dbg !5950
  %64 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill10, i32 0, i32 1, !dbg !5950
  store i64 %_51.1, i64* %64, align 8, !dbg !5950
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill10, metadata !5952, metadata !DIExpression()), !dbg !5956
  %65 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !5956
  store [0 x i8]* %_51.0, [0 x i8]** %65, align 8, !dbg !5956
  %66 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !5956
  store i64 %_51.1, i64* %66, align 8, !dbg !5956
  %67 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !5956
  %_56.0 = load [0 x i8]*, [0 x i8]** %67, align 8, !dbg !5956, !nonnull !27, !align !608, !noundef !27
  %68 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !5956
  %_56.1 = load i64, i64* %68, align 8, !dbg !5956
  br label %bb16, !dbg !5956

bb16:                                             ; preds = %bb14
; invoke alloc::vec::Vec<T,A>::extend_from_slice
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17hc5e9896bf59240d0E"(%"alloc::vec::Vec<u8>"* align 8 %_54, [0 x i8]* align 1 %_56.0, i64 %_56.1)
          to label %bb15 unwind label %cleanup6, !dbg !5950

bb15:                                             ; preds = %bb16
  store %"alloc::string::String"* %result, %"alloc::string::String"** %self.dbg.spill11, align 8, !dbg !5958
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill11, metadata !5959, metadata !DIExpression()), !dbg !5964
  %69 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string.dbg.spill12, i32 0, i32 0, !dbg !5965
  store [0 x i8]* %to.0, [0 x i8]** %69, align 8, !dbg !5965
  %70 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string.dbg.spill12, i32 0, i32 1, !dbg !5965
  store i64 %to.1, i64* %70, align 8, !dbg !5965
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %string.dbg.spill12, metadata !5963, metadata !DIExpression()), !dbg !5964
  %_59 = bitcast %"alloc::string::String"* %result to %"alloc::vec::Vec<u8>"*, !dbg !5964
  %71 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill13, i32 0, i32 0, !dbg !5964
  store [0 x i8]* %to.0, [0 x i8]** %71, align 8, !dbg !5964
  %72 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill13, i32 0, i32 1, !dbg !5964
  store i64 %to.1, i64* %72, align 8, !dbg !5964
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill13, metadata !5966, metadata !DIExpression()), !dbg !5970
  %73 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !5970
  store [0 x i8]* %to.0, [0 x i8]** %73, align 8, !dbg !5970
  %74 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !5970
  store i64 %to.1, i64* %74, align 8, !dbg !5970
  %75 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !5970
  %_61.0 = load [0 x i8]*, [0 x i8]** %75, align 8, !dbg !5970, !nonnull !27, !align !608, !noundef !27
  %76 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !5970
  %_61.1 = load i64, i64* %76, align 8, !dbg !5970
  br label %bb18, !dbg !5970

bb18:                                             ; preds = %bb15
; invoke alloc::vec::Vec<T,A>::extend_from_slice
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17hc5e9896bf59240d0E"(%"alloc::vec::Vec<u8>"* align 8 %_59, [0 x i8]* align 1 %_61.0, i64 %_61.1)
          to label %bb17 unwind label %cleanup6, !dbg !5964

bb17:                                             ; preds = %bb18
  %77 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill14, i32 0, i32 0, !dbg !5972
  store [0 x i8]* %part.0, [0 x i8]** %77, align 8, !dbg !5972
  %78 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill14, i32 0, i32 1, !dbg !5972
  store i64 %part.1, i64* %78, align 8, !dbg !5972
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill14, metadata !5973, metadata !DIExpression()), !dbg !5977
  %79 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill15, i32 0, i32 0, !dbg !5977
  store [0 x i8]* %part.0, [0 x i8]** %79, align 8, !dbg !5977
  %80 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill15, i32 0, i32 1, !dbg !5977
  store i64 %part.1, i64* %80, align 8, !dbg !5977
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill15, metadata !5978, metadata !DIExpression()), !dbg !5982
  %81 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !5982
  store [0 x i8]* %part.0, [0 x i8]** %81, align 8, !dbg !5982
  %82 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !5982
  store i64 %part.1, i64* %82, align 8, !dbg !5982
  %83 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !5982
  %_65.0 = load [0 x i8]*, [0 x i8]** %83, align 8, !dbg !5982, !nonnull !27, !align !608, !noundef !27
  %84 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !5982
  %_65.1 = load i64, i64* %84, align 8, !dbg !5982
  br label %bb19, !dbg !5982

bb19:                                             ; preds = %bb17
  %85 = add i64 %start7, %_65.1, !dbg !5984
  store i64 %85, i64* %last_end, align 8, !dbg !5984
  br label %bb1, !dbg !5917

bb5:                                              ; preds = %bb4
  store %"alloc::string::String"* %result, %"alloc::string::String"** %self.dbg.spill16, align 8, !dbg !5985
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill16, metadata !5986, metadata !DIExpression()), !dbg !5991
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill17, i32 0, i32 0, !dbg !5895
  store [0 x i8]* %self.0, [0 x i8]** %86, align 8, !dbg !5895
  %87 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill17, i32 0, i32 1, !dbg !5895
  store i64 %self.1, i64* %87, align 8, !dbg !5895
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill17, metadata !5893, metadata !DIExpression()), !dbg !5894
  %_36 = load i64, i64* %last_end, align 8, !dbg !5992
  %88 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill18, i32 0, i32 0, !dbg !5993
  store [0 x i8]* %self.0, [0 x i8]** %88, align 8, !dbg !5993
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill18, i32 0, i32 1, !dbg !5993
  store i64 %self.1, i64* %89, align 8, !dbg !5993
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill18, metadata !5994, metadata !DIExpression()), !dbg !5998
  %90 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill19, i32 0, i32 0, !dbg !5998
  store [0 x i8]* %self.0, [0 x i8]** %90, align 8, !dbg !5998
  %91 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill19, i32 0, i32 1, !dbg !5998
  store i64 %self.1, i64* %91, align 8, !dbg !5998
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill19, metadata !5999, metadata !DIExpression()), !dbg !6003
  %92 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !6003
  store [0 x i8]* %self.0, [0 x i8]** %92, align 8, !dbg !6003
  %93 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !6003
  store i64 %self.1, i64* %93, align 8, !dbg !6003
  %94 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !6003
  %_69.0 = load [0 x i8]*, [0 x i8]** %94, align 8, !dbg !6003, !nonnull !27, !align !608, !noundef !27
  %95 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !6003
  %_69.1 = load i64, i64* %95, align 8, !dbg !6003
  br label %bb20, !dbg !6003

bb20:                                             ; preds = %bb5
  %96 = bitcast { i64, i64 }* %i1 to i64*, !dbg !5992
  store i64 %_36, i64* %96, align 8, !dbg !5992
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i1, i32 0, i32 1, !dbg !5992
  store i64 %_69.1, i64* %97, align 8, !dbg !5992
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i1, i32 0, i32 0, !dbg !5894
  %_73.0 = load i64, i64* %98, align 8, !dbg !5894
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i1, i32 0, i32 1, !dbg !5894
  %_73.1 = load i64, i64* %99, align 8, !dbg !5894
; invoke core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %100 = invoke { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h6c0b377acac096abE"(i64 %_73.0, i64 %_73.1, [0 x i8]* %self.0, i64 %self.1)
          to label %bb21 unwind label %cleanup, !dbg !5894

bb21:                                             ; preds = %bb20
  %_72.0 = extractvalue { [0 x i8]*, i64 } %100, 0, !dbg !5894
  %_72.1 = extractvalue { [0 x i8]*, i64 } %100, 1, !dbg !5894
  %101 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string.dbg.spill20, i32 0, i32 0, !dbg !5895
  store [0 x i8]* %_72.0, [0 x i8]** %101, align 8, !dbg !5895
  %102 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string.dbg.spill20, i32 0, i32 1, !dbg !5895
  store i64 %_72.1, i64* %102, align 8, !dbg !5895
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %string.dbg.spill20, metadata !5990, metadata !DIExpression()), !dbg !5991
  %_75 = bitcast %"alloc::string::String"* %result to %"alloc::vec::Vec<u8>"*, !dbg !5991
  %103 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill21, i32 0, i32 0, !dbg !5991
  store [0 x i8]* %_72.0, [0 x i8]** %103, align 8, !dbg !5991
  %104 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill21, i32 0, i32 1, !dbg !5991
  store i64 %_72.1, i64* %104, align 8, !dbg !5991
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill21, metadata !6005, metadata !DIExpression()), !dbg !6009
  %105 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !6009
  store [0 x i8]* %_72.0, [0 x i8]** %105, align 8, !dbg !6009
  %106 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !6009
  store i64 %_72.1, i64* %106, align 8, !dbg !6009
  %107 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !6009
  %_77.0 = load [0 x i8]*, [0 x i8]** %107, align 8, !dbg !6009, !nonnull !27, !align !608, !noundef !27
  %108 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !6009
  %_77.1 = load i64, i64* %108, align 8, !dbg !6009
  br label %bb23, !dbg !6009

bb23:                                             ; preds = %bb21
; invoke alloc::vec::Vec<T,A>::extend_from_slice
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17hc5e9896bf59240d0E"(%"alloc::vec::Vec<u8>"* align 8 %_75, [0 x i8]* align 1 %_77.0, i64 %_77.1)
          to label %bb22 unwind label %cleanup, !dbg !5991

bb22:                                             ; preds = %bb23
  ret void, !dbg !6011

abort:                                            ; preds = %bb7
  %109 = landingpad { i8*, i32 }
          cleanup, !dbg !6012
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !6012
  unreachable, !dbg !6012

bb10:                                             ; preds = %bb7
  br i1 false, label %bb9, label %bb8, !dbg !5916

bb8:                                              ; preds = %bb9, %bb10
  %110 = bitcast { i8*, i32 }* %5 to i8**, !dbg !6012
  %111 = load i8*, i8** %110, align 8, !dbg !6012
  %112 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1, !dbg !6012
  %113 = load i32, i32* %112, align 8, !dbg !6012
  %114 = insertvalue { i8*, i32 } undef, i8* %111, 0, !dbg !6012
  %115 = insertvalue { i8*, i32 } %114, i32 %113, 1, !dbg !6012
  resume { i8*, i32 } %115, !dbg !6012

bb9:                                              ; preds = %bb10
  br label %bb8, !dbg !5916
}

; alloc::vec::Vec<T,A>::append_elements
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17hbbe26f4fc28a9322E"(%"alloc::vec::Vec<u8>"* align 8 %self, [0 x i8]* %other.0, i64 %other.1) unnamed_addr #0 !dbg !6013 {
start:
  %count.dbg.spill7 = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill6 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %count.dbg.spill4 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %src.dbg.spill = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill1 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %count.dbg.spill = alloca i64, align 8
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !6017, metadata !DIExpression()), !dbg !6023
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !6018, metadata !DIExpression()), !dbg !6024
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]"* %runtime, metadata !6025, metadata !DIExpression()), !dbg !6034
  store i64 %other.1, i64* %count.dbg.spill, align 8, !dbg !6036
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !6019, metadata !DIExpression()), !dbg !6037
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hc547be82121339caE"(%"alloc::vec::Vec<u8>"* align 8 %self, i64 %other.1), !dbg !6038
  br label %bb1, !dbg !6038

bb1:                                              ; preds = %start
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill1, align 8, !dbg !6039
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill1, metadata !6040, metadata !DIExpression()), !dbg !6045
  %3 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !6045
  %len = load i64, i64* %3, align 8, !dbg !6045
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !6045
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !6021, metadata !DIExpression()), !dbg !6046
  %src = bitcast [0 x i8]* %other.0 to i8*, !dbg !6047
  store i8* %src, i8** %src.dbg.spill, align 8, !dbg !6047
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill, metadata !6030, metadata !DIExpression()), !dbg !6048
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %self2 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h34c25918ba95f615E"(%"alloc::vec::Vec<u8>"* align 8 %self), !dbg !6049
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !6049
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !6050, metadata !DIExpression()), !dbg !6055
  br label %bb2, !dbg !6049

bb2:                                              ; preds = %bb1
  store i64 %len, i64* %count.dbg.spill4, align 8, !dbg !6056
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill4, metadata !6054, metadata !DIExpression()), !dbg !6055
  store i8* %self2, i8** %self.dbg.spill5, align 8, !dbg !6055
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !6057, metadata !DIExpression()), !dbg !6062
  store i64 %len, i64* %count.dbg.spill6, align 8, !dbg !6055
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill6, metadata !6061, metadata !DIExpression()), !dbg !6062
  %4 = getelementptr inbounds i8, i8* %self2, i64 %len, !dbg !6062
  store i8* %4, i8** %0, align 8, !dbg !6062
  %_21 = load i8*, i8** %0, align 8, !dbg !6062
  br label %bb3, !dbg !6062

bb3:                                              ; preds = %bb2
  store i8* %_21, i8** %dst.dbg.spill, align 8, !dbg !6062
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !6032, metadata !DIExpression()), !dbg !6048
  store i64 %other.1, i64* %count.dbg.spill7, align 8, !dbg !6064
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill7, metadata !6033, metadata !DIExpression()), !dbg !6048
  %5 = mul i64 %other.1, 1, !dbg !6048
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %_21, i8* align 1 %src, i64 %5, i1 false), !dbg !6048
  %6 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !6065
  %7 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !6065
  %8 = load i64, i64* %7, align 8, !dbg !6065
  %9 = add i64 %8, %other.1, !dbg !6065
  store i64 %9, i64* %6, align 8, !dbg !6065
  ret void, !dbg !6066
}

; alloc::vec::Vec<T,A>::extend_from_slice
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17hc5e9896bf59240d0E"(%"alloc::vec::Vec<u8>"* align 8 %self, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #1 !dbg !6067 {
start:
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !6071, metadata !DIExpression()), !dbg !6073
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !6072, metadata !DIExpression()), !dbg !6074
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !6075
  store [0 x i8]* %other.0, [0 x i8]** %2, align 8, !dbg !6075
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !6075
  store i64 %other.1, i64* %3, align 8, !dbg !6075
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !6076, metadata !DIExpression()), !dbg !6080
; call core::slice::iter::Iter<T>::new
  %4 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17ha977156ac332a7d0E"([0 x i8]* align 1 %other.0, i64 %other.1), !dbg !6080
  %_4.0 = extractvalue { i8*, i8* } %4, 0, !dbg !6080
  %_4.1 = extractvalue { i8*, i8* } %4, 1, !dbg !6080
  br label %bb2, !dbg !6080

bb2:                                              ; preds = %start
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
  call void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17hafc0c5ca4454b3a5E"(%"alloc::vec::Vec<u8>"* align 8 %self, i8* %_4.0, i8* %_4.1), !dbg !6081
  br label %bb1, !dbg !6081

bb1:                                              ; preds = %bb2
  ret void, !dbg !6082
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hc547be82121339caE"(%"alloc::vec::Vec<u8>"* align 8 %self, i64 %additional) unnamed_addr #1 !dbg !6083 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !6087, metadata !DIExpression()), !dbg !6089
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !6088, metadata !DIExpression()), !dbg !6090
  %_4 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !6091
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !6092
  %_5 = load i64, i64* %0, align 8, !dbg !6092
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hb0febb4a687731a7E"({ i8*, i64 }* align 8 %_4, i64 %_5, i64 %additional), !dbg !6091
  br label %bb1, !dbg !6091

bb1:                                              ; preds = %start
  ret void, !dbg !6093
}

; alloc::alloc::exchange_malloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc15exchange_malloc17h4d4d724890fe9d4eE(i64 %size, i64 %align) unnamed_addr #0 !dbg !6094 {
start:
  %ptr.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill7 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill6 = alloca { i8*, i64 }, align 8
  %self.dbg.spill5 = alloca { i8*, i64 }, align 8
  %self.dbg.spill4 = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %0 = alloca i64, align 8
  %align.dbg.spill3 = alloca i64, align 8
  %align.dbg.spill2 = alloca i64, align 8
  %size.dbg.spill1 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %self = alloca i8*, align 8
  %_6 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  store i64 %size, i64* %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !6099, metadata !DIExpression()), !dbg !6105
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !6100, metadata !DIExpression()), !dbg !6106
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !6101, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.declare(metadata i8** %self, metadata !6108, metadata !DIExpression()), !dbg !6114
  store i64 %size, i64* %size.dbg.spill1, align 8, !dbg !6123
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill1, metadata !6124, metadata !DIExpression()), !dbg !6132
  store i64 %align, i64* %align.dbg.spill2, align 8, !dbg !6134
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill2, metadata !6131, metadata !DIExpression()), !dbg !6132
  store i64 %align, i64* %align.dbg.spill3, align 8, !dbg !6132
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill3, metadata !6135, metadata !DIExpression()), !dbg !6150
  store i64 %align, i64* %0, align 8, !dbg !6150
  %_16 = load i64, i64* %0, align 8, !dbg !6150, !range !5681, !noundef !27
  br label %bb4, !dbg !6150

bb4:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %layout to i64*, !dbg !6132
  store i64 %size, i64* %1, align 8, !dbg !6132
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !6132
  store i64 %_16, i64* %2, align 8, !dbg !6132
  store %"alloc::alloc::Global"* bitcast (<{}>* @alloc239 to %"alloc::alloc::Global"*), %"alloc::alloc::Global"** %self.dbg.spill, align 8, !dbg !6152
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !6153, metadata !DIExpression()), !dbg !6161
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !6162
  %layout.0 = load i64, i64* %3, align 8, !dbg !6162
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !6162
  %layout.1 = load i64, i64* %4, align 8, !dbg !6162, !range !5681, !noundef !27
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !6162
  store i64 %layout.0, i64* %5, align 8, !dbg !6162
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !6162
  store i64 %layout.1, i64* %6, align 8, !dbg !6162
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !6160, metadata !DIExpression()), !dbg !6161
; call alloc::alloc::Global::alloc_impl
  %7 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3b70ffcab534b8dfE(%"alloc::alloc::Global"* align 1 bitcast (<{}>* @alloc239 to %"alloc::alloc::Global"*), i64 %layout.0, i64 %layout.1, i1 zeroext false), !dbg !6161
  store { i8*, i64 } %7, { i8*, i64 }* %_6, align 8, !dbg !6161
  br label %bb5, !dbg !6161

bb5:                                              ; preds = %bb4
  %8 = bitcast { i8*, i64 }* %_6 to {}**, !dbg !6152
  %9 = load {}*, {}** %8, align 8, !dbg !6152
  %10 = icmp eq {}* %9, null, !dbg !6152
  %_9 = select i1 %10, i64 1, i64 0, !dbg !6152
  switch i64 %_9, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !6163

bb2:                                              ; preds = %bb5
  unreachable, !dbg !6152

bb3:                                              ; preds = %bb5
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !6164
  %ptr.0 = load i8*, i8** %11, align 8, !dbg !6164, !nonnull !27, !noundef !27
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !6164
  %ptr.1 = load i64, i64* %12, align 8, !dbg !6164
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !6164
  store i8* %ptr.0, i8** %13, align 8, !dbg !6164
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !6164
  store i64 %ptr.1, i64* %14, align 8, !dbg !6164
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !6103, metadata !DIExpression()), !dbg !6165
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !6122
  store i8* %ptr.0, i8** %15, align 8, !dbg !6122
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !6122
  store i64 %ptr.1, i64* %16, align 8, !dbg !6122
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill4, metadata !6120, metadata !DIExpression()), !dbg !6166
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !6166
  store i8* %ptr.0, i8** %17, align 8, !dbg !6166
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !6166
  store i64 %ptr.1, i64* %18, align 8, !dbg !6166
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill5, metadata !6167, metadata !DIExpression()), !dbg !6173
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill6, i32 0, i32 0, !dbg !6173
  store i8* %ptr.0, i8** %19, align 8, !dbg !6173
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill6, i32 0, i32 1, !dbg !6173
  store i64 %ptr.1, i64* %20, align 8, !dbg !6173
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill6, metadata !6174, metadata !DIExpression()), !dbg !6180
  %_27.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !6180
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !6180
  store [0 x i8]* %_27.0, [0 x i8]** %21, align 8, !dbg !6180
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !6180
  store i64 %ptr.1, i64* %22, align 8, !dbg !6180
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill7, metadata !6182, metadata !DIExpression()), !dbg !6186
  %ptr = bitcast [0 x i8]* %_27.0 to i8*, !dbg !6186
  store i8* %ptr, i8** %ptr.dbg.spill8, align 8, !dbg !6186
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill8, metadata !6187, metadata !DIExpression()), !dbg !6193
  store i8* %ptr, i8** %self, align 8, !dbg !6193
  %_32 = load i8*, i8** %self, align 8, !dbg !6114
  ret i8* %_32, !dbg !6195

bb1:                                              ; preds = %bb5
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !6196
  %_13.0 = load i64, i64* %23, align 8, !dbg !6196
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !6196
  %_13.1 = load i64, i64* %24, align 8, !dbg !6196, !range !5681, !noundef !27
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64 %_13.0, i64 %_13.1) #18, !dbg !6197
  unreachable, !dbg !6197
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3b70ffcab534b8dfE(%"alloc::alloc::Global"* align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #0 !dbg !6198 {
start:
  %ptr.dbg.spill38 = alloca { [0 x i8]*, i64 }, align 8
  %data_address.dbg.spill35 = alloca {}*, align 8
  %self.dbg.spill33 = alloca i8*, align 8
  %data.dbg.spill32 = alloca i8*, align 8
  %self.dbg.spill31 = alloca i8*, align 8
  %ptr.dbg.spill29 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %addr.dbg.spill = alloca i64, align 8
  %n.dbg.spill28 = alloca i64, align 8
  %self.dbg.spill27 = alloca { i64, i64 }*, align 8
  %self.dbg.spill26 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill25 = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill24 = alloca i8*, align 8
  %len.dbg.spill23 = alloca i64, align 8
  %data.dbg.spill22 = alloca i8*, align 8
  %self.dbg.spill21 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill20 = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %n.dbg.spill18 = alloca i64, align 8
  %self.dbg.spill17 = alloca { i64, i64 }*, align 8
  %self.dbg.spill16 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill15 = alloca { i64, i64 }*, align 8
  %self.dbg.spill14 = alloca { i64, i64 }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %self.dbg.spill13 = alloca { i64, i64 }*, align 8
  %e.dbg.spill12 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %residual.dbg.spill5 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %_94 = alloca { i8*, i64 }, align 8
  %_93 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self11 = alloca i64, align 8
  %self10 = alloca i64, align 8
  %self9 = alloca i64, align 8
  %self8 = alloca i64, align 8
  %_51 = alloca { i8*, i64 }, align 8
  %_50 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self7 = alloca i64, align 8
  %self6 = alloca i64, align 8
  %_24 = alloca { i8*, i64 }, align 8
  %self4 = alloca i8*, align 8
  %self3 = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout2 = alloca { i64, i64 }, align 8
  %layout1 = alloca { i64, i64 }, align 8
  %raw_ptr = alloca i8*, align 8
  %data = alloca i8*, align 8
  %_6 = alloca { i8*, i64 }, align 8
  %3 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !6202, metadata !DIExpression()), !dbg !6228
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !6203, metadata !DIExpression()), !dbg !6229
  %6 = zext i1 %zeroed to i8
  store i8 %6, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !6204, metadata !DIExpression()), !dbg !6230
  call void @llvm.dbg.declare(metadata i8** %data, metadata !6231, metadata !DIExpression()), !dbg !6238
  call void @llvm.dbg.declare(metadata i8** %raw_ptr, metadata !6207, metadata !DIExpression()), !dbg !6240
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout1, metadata !6241, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout2, metadata !6248, metadata !DIExpression()), !dbg !6251
  call void @llvm.dbg.declare(metadata i8** %self3, metadata !6253, metadata !DIExpression()), !dbg !6296
  call void @llvm.dbg.declare(metadata i8** %self4, metadata !6298, metadata !DIExpression()), !dbg !6320
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %err.dbg.spill, metadata !6316, metadata !DIExpression()), !dbg !6320
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !6211, metadata !DIExpression()), !dbg !6321
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill5, metadata !6322, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.declare(metadata i64* %self6, metadata !6335, metadata !DIExpression()), !dbg !6345
  call void @llvm.dbg.declare(metadata i64* %self7, metadata !6361, metadata !DIExpression()), !dbg !6367
  call void @llvm.dbg.declare(metadata i64* %self8, metadata !6368, metadata !DIExpression()), !dbg !6372
  call void @llvm.dbg.declare(metadata i64* %self9, metadata !6379, metadata !DIExpression()), !dbg !6383
  call void @llvm.dbg.declare(metadata i64* %self10, metadata !6384, metadata !DIExpression()), !dbg !6388
  call void @llvm.dbg.declare(metadata i64* %self11, metadata !6395, metadata !DIExpression()), !dbg !6399
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !6293, metadata !DIExpression()), !dbg !6400
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill12, metadata !6328, metadata !DIExpression()), !dbg !6401
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill13, align 8, !dbg !6402
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill13, metadata !6403, metadata !DIExpression()), !dbg !6407
  %7 = bitcast { i64, i64 }* %layout to i64*, !dbg !6407
  %_4 = load i64, i64* %7, align 8, !dbg !6407
  %8 = icmp eq i64 %_4, 0, !dbg !6408
  br i1 %8, label %bb2, label %bb1, !dbg !6408

bb2:                                              ; preds = %start
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill26, align 8, !dbg !6360
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill26, metadata !6358, metadata !DIExpression()), !dbg !6409
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill27, align 8, !dbg !6409
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill27, metadata !6351, metadata !DIExpression()), !dbg !6410
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !6410
  %10 = load i64, i64* %9, align 8, !dbg !6410, !range !5681, !noundef !27
  store i64 %10, i64* %self7, align 8, !dbg !6410
  %_33 = load i64, i64* %self7, align 8, !dbg !6367, !range !5681, !noundef !27
  store i64 %_33, i64* %n.dbg.spill28, align 8, !dbg !6367
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill28, metadata !6411, metadata !DIExpression()), !dbg !6425
  store i64 %_33, i64* %self6, align 8, !dbg !6425
  %addr = load i64, i64* %self6, align 8, !dbg !6345
  store i64 %addr, i64* %addr.dbg.spill, align 8, !dbg !6345
  call void @llvm.dbg.declare(metadata i64* %addr.dbg.spill, metadata !6427, metadata !DIExpression()), !dbg !6433
  %11 = bitcast i8** %2 to i64*, !dbg !6433
  store i64 %addr, i64* %11, align 8, !dbg !6433
  %ptr = load i8*, i8** %2, align 8, !dbg !6433
  store i8* %ptr, i8** %ptr.dbg.spill29, align 8, !dbg !6433
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill29, metadata !6435, metadata !DIExpression()), !dbg !6439
  br label %bb13, !dbg !6433

bb1:                                              ; preds = %start
  store i64 %_4, i64* %size.dbg.spill, align 8, !dbg !6441
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !6205, metadata !DIExpression()), !dbg !6442
  br i1 %zeroed, label %bb3, label %bb4, !dbg !6443

bb4:                                              ; preds = %bb1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !6444
  %13 = load i64, i64* %12, align 8, !dbg !6444
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !6444
  %15 = load i64, i64* %14, align 8, !dbg !6444, !range !5681, !noundef !27
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 0, !dbg !6444
  store i64 %13, i64* %16, align 8, !dbg !6444
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 1, !dbg !6444
  store i64 %15, i64* %17, align 8, !dbg !6444
  store { i64, i64 }* %layout2, { i64, i64 }** %self.dbg.spill16, align 8, !dbg !6251
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill16, metadata !6445, metadata !DIExpression()), !dbg !6449
  %18 = bitcast { i64, i64 }* %layout2 to i64*, !dbg !6449
  %_67 = load i64, i64* %18, align 8, !dbg !6449
  store { i64, i64 }* %layout2, { i64, i64 }** %self.dbg.spill17, align 8, !dbg !6251
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill17, metadata !6392, metadata !DIExpression()), !dbg !6451
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 1, !dbg !6451
  %20 = load i64, i64* %19, align 8, !dbg !6451, !range !5681, !noundef !27
  store i64 %20, i64* %self11, align 8, !dbg !6451
  %_74 = load i64, i64* %self11, align 8, !dbg !6399, !range !5681, !noundef !27
  store i64 %_74, i64* %n.dbg.spill18, align 8, !dbg !6399
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill18, metadata !6452, metadata !DIExpression()), !dbg !6459
  store i64 %_74, i64* %self10, align 8, !dbg !6459
  %_69 = load i64, i64* %self10, align 8, !dbg !6388
  %21 = call i8* @__rust_alloc(i64 %_67, i64 %_69) #21, !dbg !6251
  store i8* %21, i8** %raw_ptr, align 8, !dbg !6251
  br label %bb15, !dbg !6251

bb3:                                              ; preds = %bb1
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !6461
  %23 = load i64, i64* %22, align 8, !dbg !6461
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !6461
  %25 = load i64, i64* %24, align 8, !dbg !6461, !range !5681, !noundef !27
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 0, !dbg !6461
  store i64 %23, i64* %26, align 8, !dbg !6461
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !6461
  store i64 %25, i64* %27, align 8, !dbg !6461
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill14, align 8, !dbg !6246
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill14, metadata !6462, metadata !DIExpression()), !dbg !6466
  %28 = bitcast { i64, i64 }* %layout1 to i64*, !dbg !6466
  %_57 = load i64, i64* %28, align 8, !dbg !6466
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill15, align 8, !dbg !6246
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill15, metadata !6376, metadata !DIExpression()), !dbg !6468
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !6468
  %30 = load i64, i64* %29, align 8, !dbg !6468, !range !5681, !noundef !27
  store i64 %30, i64* %self9, align 8, !dbg !6468
  %_64 = load i64, i64* %self9, align 8, !dbg !6383, !range !5681, !noundef !27
  store i64 %_64, i64* %n.dbg.spill, align 8, !dbg !6383
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !6469, metadata !DIExpression()), !dbg !6476
  store i64 %_64, i64* %self8, align 8, !dbg !6476
  %_59 = load i64, i64* %self8, align 8, !dbg !6372
  %31 = call i8* @__rust_alloc_zeroed(i64 %_57, i64 %_59) #21, !dbg !6246
  store i8* %31, i8** %raw_ptr, align 8, !dbg !6246
  br label %bb14, !dbg !6246

bb14:                                             ; preds = %bb3
  br label %bb5, !dbg !6478

bb5:                                              ; preds = %bb15, %bb14
  %_18 = load i8*, i8** %raw_ptr, align 8, !dbg !6479
; call core::ptr::non_null::NonNull<T>::new
  %32 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hc739bec02c7381b9E"(i8* %_18), !dbg !6297
  store i8* %32, i8** %self4, align 8, !dbg !6297
  br label %bb6, !dbg !6297

bb15:                                             ; preds = %bb4
  br label %bb5, !dbg !6478

bb6:                                              ; preds = %bb5
  %33 = bitcast i8** %self4 to {}**, !dbg !6320
  %34 = load {}*, {}** %33, align 8, !dbg !6320
  %35 = icmp eq {}* %34, null, !dbg !6320
  %_77 = select i1 %35, i64 0, i64 1, !dbg !6320
  switch i64 %_77, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ], !dbg !6320

bb17:                                             ; preds = %bb6
  unreachable, !dbg !6320

bb16:                                             ; preds = %bb6
  %36 = bitcast i8** %self3 to {}**, !dbg !6320
  store {}* null, {}** %36, align 8, !dbg !6320
  br label %bb19, !dbg !6320

bb18:                                             ; preds = %bb6
  %v = load i8*, i8** %self4, align 8, !dbg !6320, !nonnull !27, !noundef !27
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !6320
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !6317, metadata !DIExpression()), !dbg !6480
  store i8* %v, i8** %self3, align 8, !dbg !6480
  br label %bb19, !dbg !6320

bb19:                                             ; preds = %bb16, %bb18
  %37 = bitcast i8** %self3 to {}**, !dbg !6296
  %38 = load {}*, {}** %37, align 8, !dbg !6296
  %39 = icmp eq {}* %38, null, !dbg !6296
  %_80 = select i1 %39, i64 1, i64 0, !dbg !6296
  switch i64 %_80, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !6296

bb21:                                             ; preds = %bb19
  unreachable, !dbg !6296

bb22:                                             ; preds = %bb19
  %v19 = load i8*, i8** %self3, align 8, !dbg !6296, !nonnull !27, !noundef !27
  store i8* %v19, i8** %v.dbg.spill20, align 8, !dbg !6296
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill20, metadata !6290, metadata !DIExpression()), !dbg !6481
  store i8* %v19, i8** %_15, align 8, !dbg !6481
  br label %bb7, !dbg !6296

bb20:                                             ; preds = %bb19
  %40 = bitcast i8** %_15 to {}**, !dbg !6400
  store {}* null, {}** %40, align 8, !dbg !6400
  br label %bb7, !dbg !6296

bb7:                                              ; preds = %bb22, %bb20
  %41 = bitcast i8** %_15 to {}**, !dbg !6297
  %42 = load {}*, {}** %41, align 8, !dbg !6297
  %43 = icmp eq {}* %42, null, !dbg !6297
  %_20 = select i1 %43, i64 1, i64 0, !dbg !6297
  switch i64 %_20, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !6297

bb9:                                              ; preds = %bb7
  unreachable, !dbg !6297

bb8:                                              ; preds = %bb7
  %val = load i8*, i8** %_15, align 8, !dbg !6297, !nonnull !27, !noundef !27
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !6297
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !6226, metadata !DIExpression()), !dbg !6482
  store i8* %val, i8** %ptr.dbg.spill, align 8, !dbg !6482
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !6209, metadata !DIExpression()), !dbg !6483
  store i8* %val, i8** %data.dbg.spill, align 8, !dbg !6484
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !6485, metadata !DIExpression()), !dbg !6490
  store i64 %_4, i64* %len.dbg.spill, align 8, !dbg !6492
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !6489, metadata !DIExpression()), !dbg !6490
  store i8* %val, i8** %self.dbg.spill21, align 8, !dbg !6490
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill21, metadata !6493, metadata !DIExpression()), !dbg !6497
  store i8* %val, i8** %data.dbg.spill22, align 8, !dbg !6497
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill22, metadata !6499, metadata !DIExpression()), !dbg !6504
  store i64 %_4, i64* %len.dbg.spill23, align 8, !dbg !6490
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill23, metadata !6503, metadata !DIExpression()), !dbg !6504
  store i8* %val, i8** %self.dbg.spill24, align 8, !dbg !6504
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill24, metadata !6506, metadata !DIExpression()), !dbg !6510
  %data_address = bitcast i8* %val to {}*, !dbg !6510
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !6510
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !6512, metadata !DIExpression()), !dbg !6517
  store i64 %_4, i64* %metadata.dbg.spill, align 8, !dbg !6504
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !6516, metadata !DIExpression()), !dbg !6517
  %44 = bitcast { i8*, i64 }* %_94 to {}**, !dbg !6517
  store {}* %data_address, {}** %44, align 8, !dbg !6517
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 1, !dbg !6517
  store i64 %_4, i64* %45, align 8, !dbg !6517
  %46 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_93 to { i8*, i64 }*, !dbg !6517
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 0, !dbg !6517
  %48 = load i8*, i8** %47, align 8, !dbg !6517
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 1, !dbg !6517
  %50 = load i64, i64* %49, align 8, !dbg !6517
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 0, !dbg !6517
  store i8* %48, i8** %51, align 8, !dbg !6517
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 1, !dbg !6517
  store i64 %50, i64* %52, align 8, !dbg !6517
  %53 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_93 to { [0 x i8]*, i64 }*, !dbg !6517
  %54 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 0, !dbg !6517
  %ptr.0 = load [0 x i8]*, [0 x i8]** %54, align 8, !dbg !6517
  %55 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 1, !dbg !6517
  %ptr.1 = load i64, i64* %55, align 8, !dbg !6517
  %56 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill25, i32 0, i32 0, !dbg !6517
  store [0 x i8]* %ptr.0, [0 x i8]** %56, align 8, !dbg !6517
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill25, i32 0, i32 1, !dbg !6517
  store i64 %ptr.1, i64* %57, align 8, !dbg !6517
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill25, metadata !6519, metadata !DIExpression()), !dbg !6525
  %58 = bitcast { i8*, i64 }* %_24 to { [0 x i8]*, i64 }*, !dbg !6525
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 0, !dbg !6525
  store [0 x i8]* %ptr.0, [0 x i8]** %59, align 8, !dbg !6525
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 1, !dbg !6525
  store i64 %ptr.1, i64* %60, align 8, !dbg !6525
  %61 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 0, !dbg !6527
  %62 = load i8*, i8** %61, align 8, !dbg !6527, !nonnull !27, !noundef !27
  %63 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !6527
  %64 = load i64, i64* %63, align 8, !dbg !6527
  %65 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !6527
  store i8* %62, i8** %65, align 8, !dbg !6527
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !6527
  store i64 %64, i64* %66, align 8, !dbg !6527
  br label %bb11, !dbg !6528

bb10:                                             ; preds = %bb7
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h5a2efa16e49566acE"(), !dbg !6401
  br label %bb23, !dbg !6401

bb23:                                             ; preds = %bb10
  %67 = bitcast { i8*, i64 }* %3 to {}**, !dbg !6401
  store {}* null, {}** %67, align 8, !dbg !6401
  br label %bb12, !dbg !6529

bb12:                                             ; preds = %bb11, %bb23
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !6529
  %69 = load i8*, i8** %68, align 8, !dbg !6529
  %70 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !6529
  %71 = load i64, i64* %70, align 8, !dbg !6529
  %72 = insertvalue { i8*, i64 } undef, i8* %69, 0, !dbg !6529
  %73 = insertvalue { i8*, i64 } %72, i64 %71, 1, !dbg !6529
  ret { i8*, i64 } %73, !dbg !6529

bb11:                                             ; preds = %bb13, %bb8
  br label %bb12, !dbg !6529

bb13:                                             ; preds = %bb2
  store i8* %ptr, i8** %data, align 8, !dbg !6439
  %self30 = load i8*, i8** %data, align 8, !dbg !6238, !nonnull !27, !noundef !27
  store i8* %self30, i8** %self.dbg.spill31, align 8, !dbg !6238
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill31, metadata !6530, metadata !DIExpression()), !dbg !6534
  store i8* %self30, i8** %data.dbg.spill32, align 8, !dbg !6534
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill32, metadata !6536, metadata !DIExpression()), !dbg !6541
  store i8* %self30, i8** %self.dbg.spill33, align 8, !dbg !6541
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill33, metadata !6543, metadata !DIExpression()), !dbg !6547
  %data_address34 = bitcast i8* %self30 to {}*, !dbg !6547
  store {}* %data_address34, {}** %data_address.dbg.spill35, align 8, !dbg !6547
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill35, metadata !6549, metadata !DIExpression()), !dbg !6554
  %74 = bitcast { i8*, i64 }* %_51 to {}**, !dbg !6554
  store {}* %data_address34, {}** %74, align 8, !dbg !6554
  %75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 1, !dbg !6554
  store i64 0, i64* %75, align 8, !dbg !6554
  %76 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_50 to { i8*, i64 }*, !dbg !6554
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 0, !dbg !6554
  %78 = load i8*, i8** %77, align 8, !dbg !6554
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 1, !dbg !6554
  %80 = load i64, i64* %79, align 8, !dbg !6554
  %81 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %76, i32 0, i32 0, !dbg !6554
  store i8* %78, i8** %81, align 8, !dbg !6554
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %76, i32 0, i32 1, !dbg !6554
  store i64 %80, i64* %82, align 8, !dbg !6554
  %83 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_50 to { [0 x i8]*, i64 }*, !dbg !6554
  %84 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %83, i32 0, i32 0, !dbg !6554
  %ptr.036 = load [0 x i8]*, [0 x i8]** %84, align 8, !dbg !6554
  %85 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %83, i32 0, i32 1, !dbg !6554
  %ptr.137 = load i64, i64* %85, align 8, !dbg !6554
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill38, i32 0, i32 0, !dbg !6554
  store [0 x i8]* %ptr.036, [0 x i8]** %86, align 8, !dbg !6554
  %87 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill38, i32 0, i32 1, !dbg !6554
  store i64 %ptr.137, i64* %87, align 8, !dbg !6554
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill38, metadata !6556, metadata !DIExpression()), !dbg !6560
  %88 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*, !dbg !6560
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 0, !dbg !6560
  store [0 x i8]* %ptr.036, [0 x i8]** %89, align 8, !dbg !6560
  %90 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 1, !dbg !6560
  store i64 %ptr.137, i64* %90, align 8, !dbg !6560
  %91 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !6562
  %92 = load i8*, i8** %91, align 8, !dbg !6562, !nonnull !27, !noundef !27
  %93 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !6562
  %94 = load i64, i64* %93, align 8, !dbg !6562
  %95 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !6562
  store i8* %92, i8** %95, align 8, !dbg !6562
  %96 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !6562
  store i64 %94, i64* %96, align 8, !dbg !6562
  br label %bb11, !dbg !6563
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17hf6d1afb61bd824ddE(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #0 !dbg !6564 {
start:
  %count.dbg.spill54 = alloca i64, align 8
  %dst.dbg.spill53 = alloca i8*, align 8
  %ptr.dbg.spill52 = alloca i8*, align 8
  %self.dbg.spill50 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill49 = alloca { i8*, i64 }, align 8
  %self.dbg.spill48 = alloca { i8*, i64 }, align 8
  %self.dbg.spill47 = alloca { i8*, i64 }, align 8
  %src.dbg.spill = alloca i8*, align 8
  %self.dbg.spill46 = alloca i8*, align 8
  %new_ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill45 = alloca { i8*, i64 }, align 8
  %v.dbg.spill44 = alloca { i8*, i64 }, align 8
  %old_size.dbg.spill43 = alloca i64, align 8
  %ptr.dbg.spill42 = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill41 = alloca i8*, align 8
  %len.dbg.spill40 = alloca i64, align 8
  %data.dbg.spill39 = alloca i8*, align 8
  %self.dbg.spill38 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %count.dbg.spill37 = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %count.dbg.spill36 = alloca i64, align 8
  %self.dbg.spill35 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %count.dbg.spill34 = alloca i64, align 8
  %self.dbg.spill33 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill32 = alloca i8*, align 8
  %ptr.dbg.spill31 = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill30 = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %raw_ptr.dbg.spill = alloca i8*, align 8
  %n.dbg.spill28 = alloca i64, align 8
  %self.dbg.spill27 = alloca { i64, i64 }*, align 8
  %self.dbg.spill26 = alloca { i64, i64 }*, align 8
  %new_size.dbg.spill25 = alloca i64, align 8
  %ptr.dbg.spill24 = alloca i8*, align 8
  %self.dbg.spill23 = alloca i8*, align 8
  %self.dbg.spill22 = alloca { i64, i64 }*, align 8
  %new_size.dbg.spill = alloca i64, align 8
  %self.dbg.spill21 = alloca { i64, i64 }*, align 8
  %old_size.dbg.spill = alloca i64, align 8
  %n.dbg.spill20 = alloca i64, align 8
  %self.dbg.spill19 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill18 = alloca { i64, i64 }*, align 8
  %self.dbg.spill17 = alloca { i64, i64 }*, align 8
  %e.dbg.spill15 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill14 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill13 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %residual.dbg.spill6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill5 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill3 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]", align 8
  %self16 = alloca i8*, align 8
  %_135 = alloca { i8*, i64 }, align 8
  %_134 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self12 = alloca i64, align 8
  %self11 = alloca i64, align 8
  %self10 = alloca i64, align 8
  %self9 = alloca i64, align 8
  %self8 = alloca i64, align 8
  %self7 = alloca i64, align 8
  %self4 = alloca { i8*, i64 }, align 8
  %_55 = alloca { i8*, i64 }, align 8
  %_50 = alloca { i8*, i64 }, align 8
  %self2 = alloca i8*, align 8
  %self1 = alloca i8*, align 8
  %_33 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %5 = alloca { i8*, i64 }, align 8
  %new_layout = alloca { i64, i64 }, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %3, i64* %9, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !6568, metadata !DIExpression()), !dbg !6594
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !6569, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !6570, metadata !DIExpression()), !dbg !6596
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !6571, metadata !DIExpression()), !dbg !6597
  %10 = zext i1 %zeroed to i8
  store i8 %10, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !6572, metadata !DIExpression()), !dbg !6598
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !6599, metadata !DIExpression()), !dbg !6606
  call void @llvm.dbg.declare(metadata i8** %self1, metadata !6608, metadata !DIExpression()), !dbg !6618
  call void @llvm.dbg.declare(metadata i8** %self2, metadata !6620, metadata !DIExpression()), !dbg !6628
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %err.dbg.spill, metadata !6624, metadata !DIExpression()), !dbg !6628
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !6582, metadata !DIExpression()), !dbg !6629
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill3, metadata !6630, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self4, metadata !6639, metadata !DIExpression()), !dbg !6666
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill5, metadata !6590, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill6, metadata !6669, metadata !DIExpression()), !dbg !6676
  call void @llvm.dbg.declare(metadata i64* %self7, metadata !6678, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.declare(metadata i64* %self8, metadata !6689, metadata !DIExpression()), !dbg !6693
  call void @llvm.dbg.declare(metadata i64* %self9, metadata !6694, metadata !DIExpression()), !dbg !6698
  call void @llvm.dbg.declare(metadata i64* %self10, metadata !6705, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.declare(metadata i64* %self11, metadata !6710, metadata !DIExpression()), !dbg !6714
  call void @llvm.dbg.declare(metadata i64* %self12, metadata !6721, metadata !DIExpression()), !dbg !6725
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !6615, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill13, metadata !6634, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill14, metadata !6663, metadata !DIExpression()), !dbg !6728
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill15, metadata !6673, metadata !DIExpression()), !dbg !6729
  call void @llvm.dbg.declare(metadata i8** %self16, metadata !6730, metadata !DIExpression()), !dbg !6734
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]"* %runtime, metadata !6741, metadata !DIExpression()), !dbg !6750
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill17, align 8, !dbg !6752
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill17, metadata !6753, metadata !DIExpression()), !dbg !6757
  %11 = bitcast { i64, i64 }* %old_layout to i64*, !dbg !6757
  %_8 = load i64, i64* %11, align 8, !dbg !6757
  %12 = icmp eq i64 %_8, 0, !dbg !6758
  br i1 %12, label %bb1, label %bb3, !dbg !6758

bb1:                                              ; preds = %start
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !6759
  %_11.0 = load i64, i64* %13, align 8, !dbg !6759
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !6759
  %_11.1 = load i64, i64* %14, align 8, !dbg !6759, !range !5681, !noundef !27
; call alloc::alloc::Global::alloc_impl
  %15 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3b70ffcab534b8dfE(%"alloc::alloc::Global"* align 1 %self, i64 %_11.0, i64 %_11.1, i1 zeroext %zeroed), !dbg !6760
  store { i8*, i64 } %15, { i8*, i64 }* %5, align 8, !dbg !6760
  br label %bb2, !dbg !6760

bb3:                                              ; preds = %start
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill18, align 8, !dbg !6688
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill18, metadata !6686, metadata !DIExpression()), !dbg !6761
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !6761
  %17 = load i64, i64* %16, align 8, !dbg !6761, !range !5681, !noundef !27
  store i64 %17, i64* %self8, align 8, !dbg !6761
  %_78 = load i64, i64* %self8, align 8, !dbg !6693, !range !5681, !noundef !27
  store i64 %_78, i64* %n.dbg.spill, align 8, !dbg !6693
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !6762, metadata !DIExpression()), !dbg !6769
  store i64 %_78, i64* %self7, align 8, !dbg !6769
  %_16 = load i64, i64* %self7, align 8, !dbg !6682
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill19, align 8, !dbg !6704
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill19, metadata !6702, metadata !DIExpression()), !dbg !6771
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !6771
  %19 = load i64, i64* %18, align 8, !dbg !6771, !range !5681, !noundef !27
  store i64 %19, i64* %self10, align 8, !dbg !6771
  %_84 = load i64, i64* %self10, align 8, !dbg !6709, !range !5681, !noundef !27
  store i64 %_84, i64* %n.dbg.spill20, align 8, !dbg !6709
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill20, metadata !6772, metadata !DIExpression()), !dbg !6779
  store i64 %_84, i64* %self9, align 8, !dbg !6779
  %_18 = load i64, i64* %self9, align 8, !dbg !6698
  %_15 = icmp eq i64 %_16, %_18, !dbg !6688
  br i1 %_15, label %bb4, label %bb5, !dbg !6688

bb5:                                              ; preds = %bb3
  store i64 %_8, i64* %old_size.dbg.spill43, align 8, !dbg !6781
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill43, metadata !6586, metadata !DIExpression()), !dbg !6782
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !6783
  %_58.0 = load i64, i64* %20, align 8, !dbg !6783
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !6783
  %_58.1 = load i64, i64* %21, align 8, !dbg !6783, !range !5681, !noundef !27
; call alloc::alloc::Global::alloc_impl
  %22 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3b70ffcab534b8dfE(%"alloc::alloc::Global"* align 1 %self, i64 %_58.0, i64 %_58.1, i1 zeroext %zeroed), !dbg !6667
  store { i8*, i64 } %22, { i8*, i64 }* %self4, align 8, !dbg !6667
  br label %bb14, !dbg !6667

bb4:                                              ; preds = %bb3
  store i64 %_8, i64* %old_size.dbg.spill, align 8, !dbg !6784
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill, metadata !6573, metadata !DIExpression()), !dbg !6785
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill21, align 8, !dbg !6786
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill21, metadata !6787, metadata !DIExpression()), !dbg !6791
  %23 = bitcast { i64, i64 }* %new_layout to i64*, !dbg !6791
  %new_size = load i64, i64* %23, align 8, !dbg !6791
  store i64 %new_size, i64* %new_size.dbg.spill, align 8, !dbg !6791
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill, metadata !6576, metadata !DIExpression()), !dbg !6792
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill22, align 8, !dbg !6793
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill22, metadata !6794, metadata !DIExpression()), !dbg !6798
  %24 = bitcast { i64, i64 }* %old_layout to i64*, !dbg !6798
  %_25 = load i64, i64* %24, align 8, !dbg !6798
  %_23 = icmp uge i64 %new_size, %_25, !dbg !6799
  call void @llvm.assume(i1 %_23), !dbg !6800
  br label %bb6, !dbg !6800

bb6:                                              ; preds = %bb4
  store i8* %ptr, i8** %self.dbg.spill23, align 8, !dbg !6801
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill23, metadata !6802, metadata !DIExpression()), !dbg !6806
  store i8* %ptr, i8** %ptr.dbg.spill24, align 8, !dbg !6806
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill24, metadata !6604, metadata !DIExpression()), !dbg !6606
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !6807
  %26 = load i64, i64* %25, align 8, !dbg !6807
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !6807
  %28 = load i64, i64* %27, align 8, !dbg !6807, !range !5681, !noundef !27
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !6807
  store i64 %26, i64* %29, align 8, !dbg !6807
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !6807
  store i64 %28, i64* %30, align 8, !dbg !6807
  store i64 %new_size, i64* %new_size.dbg.spill25, align 8, !dbg !6808
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill25, metadata !6605, metadata !DIExpression()), !dbg !6606
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill26, align 8, !dbg !6606
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill26, metadata !6809, metadata !DIExpression()), !dbg !6813
  %31 = bitcast { i64, i64 }* %layout to i64*, !dbg !6813
  %_89 = load i64, i64* %31, align 8, !dbg !6813
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill27, align 8, !dbg !6606
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill27, metadata !6718, metadata !DIExpression()), !dbg !6815
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !6815
  %33 = load i64, i64* %32, align 8, !dbg !6815, !range !5681, !noundef !27
  store i64 %33, i64* %self12, align 8, !dbg !6815
  %_97 = load i64, i64* %self12, align 8, !dbg !6725, !range !5681, !noundef !27
  store i64 %_97, i64* %n.dbg.spill28, align 8, !dbg !6725
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill28, metadata !6816, metadata !DIExpression()), !dbg !6823
  store i64 %_97, i64* %self11, align 8, !dbg !6823
  %_91 = load i64, i64* %self11, align 8, !dbg !6714
  %raw_ptr = call i8* @__rust_realloc(i8* %ptr, i64 %_89, i64 %_91, i64 %new_size) #21, !dbg !6606
  store i8* %raw_ptr, i8** %raw_ptr.dbg.spill, align 8, !dbg !6606
  call void @llvm.dbg.declare(metadata i8** %raw_ptr.dbg.spill, metadata !6578, metadata !DIExpression()), !dbg !6825
  br label %bb23, !dbg !6606

bb23:                                             ; preds = %bb6
; call core::ptr::non_null::NonNull<T>::new
  %34 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hc739bec02c7381b9E"(i8* %raw_ptr), !dbg !6619
  store i8* %34, i8** %self2, align 8, !dbg !6619
  br label %bb7, !dbg !6619

bb7:                                              ; preds = %bb23
  %35 = bitcast i8** %self2 to {}**, !dbg !6628
  %36 = load {}*, {}** %35, align 8, !dbg !6628
  %37 = icmp eq {}* %36, null, !dbg !6628
  %_100 = select i1 %37, i64 0, i64 1, !dbg !6628
  switch i64 %_100, label %bb25 [
    i64 0, label %bb24
    i64 1, label %bb26
  ], !dbg !6628

bb25:                                             ; preds = %bb7
  unreachable, !dbg !6628

bb24:                                             ; preds = %bb7
  %38 = bitcast i8** %self1 to {}**, !dbg !6628
  store {}* null, {}** %38, align 8, !dbg !6628
  br label %bb27, !dbg !6628

bb26:                                             ; preds = %bb7
  %v = load i8*, i8** %self2, align 8, !dbg !6628, !nonnull !27, !noundef !27
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !6628
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !6625, metadata !DIExpression()), !dbg !6826
  store i8* %v, i8** %self1, align 8, !dbg !6826
  br label %bb27, !dbg !6628

bb27:                                             ; preds = %bb24, %bb26
  %39 = bitcast i8** %self1 to {}**, !dbg !6618
  %40 = load {}*, {}** %39, align 8, !dbg !6618
  %41 = icmp eq {}* %40, null, !dbg !6618
  %_103 = select i1 %41, i64 1, i64 0, !dbg !6618
  switch i64 %_103, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ], !dbg !6618

bb29:                                             ; preds = %bb27
  unreachable, !dbg !6618

bb30:                                             ; preds = %bb27
  %v29 = load i8*, i8** %self1, align 8, !dbg !6618, !nonnull !27, !noundef !27
  store i8* %v29, i8** %v.dbg.spill30, align 8, !dbg !6618
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill30, metadata !6612, metadata !DIExpression()), !dbg !6827
  store i8* %v29, i8** %_33, align 8, !dbg !6827
  br label %bb8, !dbg !6618

bb28:                                             ; preds = %bb27
  %42 = bitcast i8** %_33 to {}**, !dbg !6726
  store {}* null, {}** %42, align 8, !dbg !6726
  br label %bb8, !dbg !6618

bb8:                                              ; preds = %bb30, %bb28
  %43 = bitcast i8** %_33 to {}**, !dbg !6619
  %44 = load {}*, {}** %43, align 8, !dbg !6619
  %45 = icmp eq {}* %44, null, !dbg !6619
  %_38 = select i1 %45, i64 1, i64 0, !dbg !6619
  switch i64 %_38, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ], !dbg !6619

bb10:                                             ; preds = %bb8
  unreachable, !dbg !6619

bb9:                                              ; preds = %bb8
  %val = load i8*, i8** %_33, align 8, !dbg !6619, !nonnull !27, !noundef !27
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !6619
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !6584, metadata !DIExpression()), !dbg !6828
  store i8* %val, i8** %ptr.dbg.spill31, align 8, !dbg !6828
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill31, metadata !6580, metadata !DIExpression()), !dbg !6829
  br i1 %zeroed, label %bb12, label %bb13, !dbg !6830

bb11:                                             ; preds = %bb8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h5a2efa16e49566acE"(), !dbg !6727
  br label %bb31, !dbg !6727

bb31:                                             ; preds = %bb11
  %46 = bitcast { i8*, i64 }* %5 to {}**, !dbg !6727
  store {}* null, {}** %46, align 8, !dbg !6727
  br label %bb21, !dbg !6831

bb21:                                             ; preds = %bb37, %bb31
  br label %bb22, !dbg !6834

bb13:                                             ; preds = %bb33, %bb9
  store i8* %val, i8** %data.dbg.spill, align 8, !dbg !6835
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !6836, metadata !DIExpression()), !dbg !6841
  store i64 %new_size, i64* %len.dbg.spill, align 8, !dbg !6843
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !6840, metadata !DIExpression()), !dbg !6841
  store i8* %val, i8** %self.dbg.spill38, align 8, !dbg !6841
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill38, metadata !6844, metadata !DIExpression()), !dbg !6848
  store i8* %val, i8** %data.dbg.spill39, align 8, !dbg !6848
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill39, metadata !6850, metadata !DIExpression()), !dbg !6855
  store i64 %new_size, i64* %len.dbg.spill40, align 8, !dbg !6841
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill40, metadata !6854, metadata !DIExpression()), !dbg !6855
  store i8* %val, i8** %self.dbg.spill41, align 8, !dbg !6855
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill41, metadata !6857, metadata !DIExpression()), !dbg !6861
  %data_address = bitcast i8* %val to {}*, !dbg !6861
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !6861
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !6863, metadata !DIExpression()), !dbg !6868
  store i64 %new_size, i64* %metadata.dbg.spill, align 8, !dbg !6855
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !6867, metadata !DIExpression()), !dbg !6868
  %47 = bitcast { i8*, i64 }* %_135 to {}**, !dbg !6868
  store {}* %data_address, {}** %47, align 8, !dbg !6868
  %48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 1, !dbg !6868
  store i64 %new_size, i64* %48, align 8, !dbg !6868
  %49 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_134 to { i8*, i64 }*, !dbg !6868
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 0, !dbg !6868
  %51 = load i8*, i8** %50, align 8, !dbg !6868
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 1, !dbg !6868
  %53 = load i64, i64* %52, align 8, !dbg !6868
  %54 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %49, i32 0, i32 0, !dbg !6868
  store i8* %51, i8** %54, align 8, !dbg !6868
  %55 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %49, i32 0, i32 1, !dbg !6868
  store i64 %53, i64* %55, align 8, !dbg !6868
  %56 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_134 to { [0 x i8]*, i64 }*, !dbg !6868
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 0, !dbg !6868
  %ptr.0 = load [0 x i8]*, [0 x i8]** %57, align 8, !dbg !6868
  %58 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 1, !dbg !6868
  %ptr.1 = load i64, i64* %58, align 8, !dbg !6868
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill42, i32 0, i32 0, !dbg !6868
  store [0 x i8]* %ptr.0, [0 x i8]** %59, align 8, !dbg !6868
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill42, i32 0, i32 1, !dbg !6868
  store i64 %ptr.1, i64* %60, align 8, !dbg !6868
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill42, metadata !6870, metadata !DIExpression()), !dbg !6874
  %61 = bitcast { i8*, i64 }* %_50 to { [0 x i8]*, i64 }*, !dbg !6874
  %62 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 0, !dbg !6874
  store [0 x i8]* %ptr.0, [0 x i8]** %62, align 8, !dbg !6874
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 1, !dbg !6874
  store i64 %ptr.1, i64* %63, align 8, !dbg !6874
  %64 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_50, i32 0, i32 0, !dbg !6876
  %65 = load i8*, i8** %64, align 8, !dbg !6876, !nonnull !27, !noundef !27
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_50, i32 0, i32 1, !dbg !6876
  %67 = load i64, i64* %66, align 8, !dbg !6876
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !6876
  store i8* %65, i8** %68, align 8, !dbg !6876
  %69 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !6876
  store i64 %67, i64* %69, align 8, !dbg !6876
  br label %bb20, !dbg !6877

bb12:                                             ; preds = %bb9
  store i8* %raw_ptr, i8** %self.dbg.spill32, align 8, !dbg !6878
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill32, metadata !6879, metadata !DIExpression()), !dbg !6884
  store i64 %_8, i64* %count.dbg.spill, align 8, !dbg !6885
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !6883, metadata !DIExpression()), !dbg !6884
  store i8* %raw_ptr, i8** %self.dbg.spill33, align 8, !dbg !6884
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill33, metadata !6886, metadata !DIExpression()), !dbg !6891
  store i64 %_8, i64* %count.dbg.spill34, align 8, !dbg !6884
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill34, metadata !6890, metadata !DIExpression()), !dbg !6891
  %70 = getelementptr inbounds i8, i8* %raw_ptr, i64 %_8, !dbg !6891
  store i8* %70, i8** %4, align 8, !dbg !6891
  %_113 = load i8*, i8** %4, align 8, !dbg !6891
  br label %bb32, !dbg !6891

bb32:                                             ; preds = %bb12
  store i8* %_113, i8** %self.dbg.spill35, align 8, !dbg !6891
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill35, metadata !6893, metadata !DIExpression()), !dbg !6901
  %count = sub i64 %new_size, %_8, !dbg !6902
  store i64 %count, i64* %count.dbg.spill36, align 8, !dbg !6902
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill36, metadata !6900, metadata !DIExpression()), !dbg !6901
  store i8* %_113, i8** %dst.dbg.spill, align 8, !dbg !6901
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !6903, metadata !DIExpression()), !dbg !6916
  store i64 %count, i64* %count.dbg.spill37, align 8, !dbg !6901
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill37, metadata !6908, metadata !DIExpression()), !dbg !6916
  %71 = mul i64 1, %count, !dbg !6916
  call void @llvm.memset.p0i8.i64(i8* align 1 %_113, i8 0, i64 %71, i1 false), !dbg !6916
  br label %bb33, !dbg !6916

bb33:                                             ; preds = %bb32
  br label %bb13, !dbg !6918

bb20:                                             ; preds = %bb2, %bb19, %bb13
  br label %bb22, !dbg !6834

bb14:                                             ; preds = %bb5
  %72 = bitcast { i8*, i64 }* %self4 to {}**, !dbg !6666
  %73 = load {}*, {}** %72, align 8, !dbg !6666
  %74 = icmp eq {}* %73, null, !dbg !6666
  %_142 = select i1 %74, i64 1, i64 0, !dbg !6666
  switch i64 %_142, label %bb35 [
    i64 0, label %bb36
    i64 1, label %bb34
  ], !dbg !6666

bb35:                                             ; preds = %bb14
  unreachable, !dbg !6666

bb36:                                             ; preds = %bb14
  %75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self4, i32 0, i32 0, !dbg !6666
  %v.0 = load i8*, i8** %75, align 8, !dbg !6666, !nonnull !27, !noundef !27
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self4, i32 0, i32 1, !dbg !6666
  %v.1 = load i64, i64* %76, align 8, !dbg !6666
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill44, i32 0, i32 0, !dbg !6666
  store i8* %v.0, i8** %77, align 8, !dbg !6666
  %78 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill44, i32 0, i32 1, !dbg !6666
  store i64 %v.1, i64* %78, align 8, !dbg !6666
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill44, metadata !6660, metadata !DIExpression()), !dbg !6919
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 0, !dbg !6919
  store i8* %v.0, i8** %79, align 8, !dbg !6919
  %80 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 1, !dbg !6919
  store i64 %v.1, i64* %80, align 8, !dbg !6919
  br label %bb15, !dbg !6666

bb34:                                             ; preds = %bb14
  %81 = bitcast { i8*, i64 }* %_55 to {}**, !dbg !6728
  store {}* null, {}** %81, align 8, !dbg !6728
  br label %bb15, !dbg !6666

bb15:                                             ; preds = %bb36, %bb34
  %82 = bitcast { i8*, i64 }* %_55 to {}**, !dbg !6667
  %83 = load {}*, {}** %82, align 8, !dbg !6667
  %84 = icmp eq {}* %83, null, !dbg !6667
  %_60 = select i1 %84, i64 1, i64 0, !dbg !6667
  switch i64 %_60, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ], !dbg !6667

bb17:                                             ; preds = %bb15
  unreachable, !dbg !6667

bb16:                                             ; preds = %bb15
  %85 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 0, !dbg !6667
  %val.0 = load i8*, i8** %85, align 8, !dbg !6667, !nonnull !27, !noundef !27
  %86 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 1, !dbg !6667
  %val.1 = load i64, i64* %86, align 8, !dbg !6667
  %87 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill45, i32 0, i32 0, !dbg !6667
  store i8* %val.0, i8** %87, align 8, !dbg !6667
  %88 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill45, i32 0, i32 1, !dbg !6667
  store i64 %val.1, i64* %88, align 8, !dbg !6667
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill45, metadata !6592, metadata !DIExpression()), !dbg !6920
  %89 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 0, !dbg !6920
  store i8* %val.0, i8** %89, align 8, !dbg !6920
  %90 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 1, !dbg !6920
  store i64 %val.1, i64* %90, align 8, !dbg !6920
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %new_ptr.dbg.spill, metadata !6588, metadata !DIExpression()), !dbg !6921
  store i8* %ptr, i8** %self.dbg.spill46, align 8, !dbg !6922
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill46, metadata !6923, metadata !DIExpression()), !dbg !6927
  store i8* %ptr, i8** %src.dbg.spill, align 8, !dbg !6922
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill, metadata !6746, metadata !DIExpression()), !dbg !6928
  %91 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill47, i32 0, i32 0, !dbg !6740
  store i8* %val.0, i8** %91, align 8, !dbg !6740
  %92 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill47, i32 0, i32 1, !dbg !6740
  store i64 %val.1, i64* %92, align 8, !dbg !6740
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill47, metadata !6738, metadata !DIExpression()), !dbg !6929
  %93 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill48, i32 0, i32 0, !dbg !6929
  store i8* %val.0, i8** %93, align 8, !dbg !6929
  %94 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill48, i32 0, i32 1, !dbg !6929
  store i64 %val.1, i64* %94, align 8, !dbg !6929
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill48, metadata !6930, metadata !DIExpression()), !dbg !6934
  %95 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill49, i32 0, i32 0, !dbg !6934
  store i8* %val.0, i8** %95, align 8, !dbg !6934
  %96 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill49, i32 0, i32 1, !dbg !6934
  store i64 %val.1, i64* %96, align 8, !dbg !6934
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill49, metadata !6935, metadata !DIExpression()), !dbg !6939
  %_155.0 = bitcast i8* %val.0 to [0 x i8]*, !dbg !6939
  %97 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill50, i32 0, i32 0, !dbg !6939
  store [0 x i8]* %_155.0, [0 x i8]** %97, align 8, !dbg !6939
  %98 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill50, i32 0, i32 1, !dbg !6939
  store i64 %val.1, i64* %98, align 8, !dbg !6939
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill50, metadata !6941, metadata !DIExpression()), !dbg !6945
  %ptr51 = bitcast [0 x i8]* %_155.0 to i8*, !dbg !6945
  store i8* %ptr51, i8** %ptr.dbg.spill52, align 8, !dbg !6945
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill52, metadata !6946, metadata !DIExpression()), !dbg !6950
  store i8* %ptr51, i8** %self16, align 8, !dbg !6950
  %_160 = load i8*, i8** %self16, align 8, !dbg !6734
  store i8* %_160, i8** %dst.dbg.spill53, align 8, !dbg !6734
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill53, metadata !6748, metadata !DIExpression()), !dbg !6928
  store i64 %_8, i64* %count.dbg.spill54, align 8, !dbg !6952
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill54, metadata !6749, metadata !DIExpression()), !dbg !6928
  %99 = mul i64 %_8, 1, !dbg !6928
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %_160, i8* align 1 %ptr, i64 %99, i1 false), !dbg !6928
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !6953
  %_73.0 = load i64, i64* %100, align 8, !dbg !6953
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !6953
  %_73.1 = load i64, i64* %101, align 8, !dbg !6953, !range !5681, !noundef !27
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc3b1727931ad6cc2E"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %_73.0, i64 %_73.1), !dbg !6954
  br label %bb19, !dbg !6954

bb18:                                             ; preds = %bb15
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h5a2efa16e49566acE"(), !dbg !6729
  br label %bb37, !dbg !6729

bb37:                                             ; preds = %bb18
  %102 = bitcast { i8*, i64 }* %5 to {}**, !dbg !6729
  store {}* null, {}** %102, align 8, !dbg !6729
  br label %bb21, !dbg !6831

bb22:                                             ; preds = %bb20, %bb21
  %103 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !6834
  %104 = load i8*, i8** %103, align 8, !dbg !6834
  %105 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !6834
  %106 = load i64, i64* %105, align 8, !dbg !6834
  %107 = insertvalue { i8*, i64 } undef, i8* %104, 0, !dbg !6834
  %108 = insertvalue { i8*, i64 } %107, i64 %106, 1, !dbg !6834
  ret { i8*, i64 } %108, !dbg !6834

bb19:                                             ; preds = %bb16
  %109 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !6955
  store i8* %val.0, i8** %109, align 8, !dbg !6955
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !6955
  store i64 %val.1, i64* %110, align 8, !dbg !6955
  br label %bb20, !dbg !6956

bb2:                                              ; preds = %bb1
  br label %bb20, !dbg !6957
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17hab31e7a1212a3b5dE(i8* %0, i64* align 8 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !6958 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill19 = alloca i8*, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i64* }, align 8
  %self.dbg.spill14 = alloca { i8*, i64* }, align 8
  %self.dbg.spill13 = alloca { i8*, i64* }, align 8
  %3 = alloca i64, align 8
  %align.dbg.spill10 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %size.dbg.spill8 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill7 = alloca { i8*, i64* }, align 8
  %self.dbg.spill4 = alloca { i8*, i64* }*, align 8
  %self.dbg.spill3 = alloca { i8*, i64* }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill2 = alloca { i8*, i64* }, align 8
  %self.dbg.spill1 = alloca { i8*, i64* }*, align 8
  %self.dbg.spill = alloca { i8*, i64* }*, align 8
  %pointer = alloca i8*, align 8
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %7, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %ptr, metadata !6974, metadata !DIExpression()), !dbg !6983
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !6975, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !6980, metadata !DIExpression()), !dbg !6985
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !6986, metadata !DIExpression()), !dbg !6993
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !6995, metadata !DIExpression()), !dbg !7003
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill, align 8, !dbg !7013
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill, metadata !7014, metadata !DIExpression()), !dbg !7025
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill1, align 8, !dbg !7025
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill1, metadata !7026, metadata !DIExpression()), !dbg !7033
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !7033
  %self.0 = load i8*, i8** %8, align 8, !dbg !7033, !nonnull !27, !noundef !27
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !7033
  %self.1 = load i64*, i64** %9, align 8, !dbg !7033, !nonnull !27, !align !1193, !noundef !27
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 0, !dbg !7033
  store i8* %self.0, i8** %10, align 8, !dbg !7033
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 1, !dbg !7033
  store i64* %self.1, i64** %11, align 8, !dbg !7033
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill2, metadata !7035, metadata !DIExpression()), !dbg !7041
  %_22.0 = bitcast i8* %self.0 to {}*, !dbg !7041
  %_22.1 = bitcast i64* %self.1 to [3 x i64]*, !dbg !7041
  %12 = bitcast [3 x i64]* %_22.1 to i64*, !dbg !7043
  %13 = getelementptr inbounds i64, i64* %12, i64 1, !dbg !7043
  %14 = load i64, i64* %13, align 8, !dbg !7043, !invariant.load !27
  %15 = bitcast [3 x i64]* %_22.1 to i64*, !dbg !7043
  %16 = getelementptr inbounds i64, i64* %15, i64 2, !dbg !7043
  %17 = load i64, i64* %16, align 8, !dbg !7043, !range !7044, !invariant.load !27
  store i64 %14, i64* %5, align 8, !dbg !7043
  %size = load i64, i64* %5, align 8, !dbg !7043
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !7043
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !6976, metadata !DIExpression()), !dbg !7045
  br label %bb1, !dbg !7043

bb1:                                              ; preds = %start
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill3, align 8, !dbg !7046
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill3, metadata !7047, metadata !DIExpression()), !dbg !7051
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill4, align 8, !dbg !7051
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill4, metadata !7052, metadata !DIExpression()), !dbg !7056
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !7056
  %self.05 = load i8*, i8** %18, align 8, !dbg !7056, !nonnull !27, !noundef !27
  %19 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !7056
  %self.16 = load i64*, i64** %19, align 8, !dbg !7056, !nonnull !27, !align !1193, !noundef !27
  %20 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill7, i32 0, i32 0, !dbg !7056
  store i8* %self.05, i8** %20, align 8, !dbg !7056
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill7, i32 0, i32 1, !dbg !7056
  store i64* %self.16, i64** %21, align 8, !dbg !7056
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill7, metadata !7058, metadata !DIExpression()), !dbg !7062
  %_26.0 = bitcast i8* %self.05 to {}*, !dbg !7062
  %_26.1 = bitcast i64* %self.16 to [3 x i64]*, !dbg !7062
  %22 = bitcast [3 x i64]* %_26.1 to i64*, !dbg !7064
  %23 = getelementptr inbounds i64, i64* %22, i64 1, !dbg !7064
  %24 = load i64, i64* %23, align 8, !dbg !7064, !invariant.load !27
  %25 = bitcast [3 x i64]* %_26.1 to i64*, !dbg !7064
  %26 = getelementptr inbounds i64, i64* %25, i64 2, !dbg !7064
  %27 = load i64, i64* %26, align 8, !dbg !7064, !range !7044, !invariant.load !27
  store i64 %27, i64* %4, align 8, !dbg !7064
  %align = load i64, i64* %4, align 8, !dbg !7064
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !7064
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !6978, metadata !DIExpression()), !dbg !7065
  br label %bb2, !dbg !7064

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill8, align 8, !dbg !7066
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill8, metadata !7067, metadata !DIExpression()), !dbg !7072
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !7074
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !7071, metadata !DIExpression()), !dbg !7072
  store i64 %align, i64* %align.dbg.spill10, align 8, !dbg !7072
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill10, metadata !7075, metadata !DIExpression()), !dbg !7082
  store i64 %align, i64* %3, align 8, !dbg !7082
  %_28 = load i64, i64* %3, align 8, !dbg !7082, !range !5681, !noundef !27
  br label %bb7, !dbg !7082

bb7:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %layout to i64*, !dbg !7072
  store i64 %size, i64* %28, align 8, !dbg !7072
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !7072
  store i64 %_28, i64* %29, align 8, !dbg !7072
  %30 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !7012
  %self.011 = load i8*, i8** %30, align 8, !dbg !7012, !nonnull !27, !noundef !27
  %31 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !7012
  %self.112 = load i64*, i64** %31, align 8, !dbg !7012, !nonnull !27, !align !1193, !noundef !27
  %32 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill13, i32 0, i32 0, !dbg !7012
  store i8* %self.011, i8** %32, align 8, !dbg !7012
  %33 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill13, i32 0, i32 1, !dbg !7012
  store i64* %self.112, i64** %33, align 8, !dbg !7012
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill13, metadata !7009, metadata !DIExpression()), !dbg !7084
  %34 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill14, i32 0, i32 0, !dbg !7084
  store i8* %self.011, i8** %34, align 8, !dbg !7084
  %35 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill14, i32 0, i32 1, !dbg !7084
  store i64* %self.112, i64** %35, align 8, !dbg !7084
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill14, metadata !7085, metadata !DIExpression()), !dbg !7091
  %36 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill15, i32 0, i32 0, !dbg !7091
  store i8* %self.011, i8** %36, align 8, !dbg !7091
  %37 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill15, i32 0, i32 1, !dbg !7091
  store i64* %self.112, i64** %37, align 8, !dbg !7091
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill15, metadata !7093, metadata !DIExpression()), !dbg !7097
  %_37.0 = bitcast i8* %self.011 to {}*, !dbg !7097
  %_37.1 = bitcast i64* %self.112 to [3 x i64]*, !dbg !7097
  %ptr16 = bitcast {}* %_37.0 to i8*, !dbg !7091
  store i8* %ptr16, i8** %ptr.dbg.spill, align 8, !dbg !7091
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !7099, metadata !DIExpression()), !dbg !7103
  store i8* %ptr16, i8** %pointer, align 8, !dbg !7103
  %_41 = load i8*, i8** %pointer, align 8, !dbg !7003, !nonnull !27, !noundef !27
  store i8* %_41, i8** %unique, align 8, !dbg !7003
  %self = load i8*, i8** %unique, align 8, !dbg !6993, !nonnull !27, !noundef !27
  store i8* %self, i8** %self.dbg.spill17, align 8, !dbg !6993
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !7105, metadata !DIExpression()), !dbg !7111
  store i8* %self, i8** %self.dbg.spill18, align 8, !dbg !7111
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !7113, metadata !DIExpression()), !dbg !7117
  store i8* %self, i8** %ptr.dbg.spill19, align 8, !dbg !7117
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill19, metadata !7119, metadata !DIExpression()), !dbg !7123
  store i8* %self, i8** %_15, align 8, !dbg !7123
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !7125
  %_18.0 = load i64, i64* %38, align 8, !dbg !7125
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !7125
  %_18.1 = load i64, i64* %39, align 8, !dbg !7125, !range !5681, !noundef !27
  %40 = load i8*, i8** %_15, align 8, !dbg !7126, !nonnull !27, !noundef !27
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc3b1727931ad6cc2E"(%"alloc::alloc::Global"* align 1 %alloc, i8* %40, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !7126

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !7127

cleanup:                                          ; preds = %bb7
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  %43 = extractvalue { i8*, i32 } %41, 1
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %43, i32* %45, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !7127

bb6:                                              ; preds = %bb5
  %46 = bitcast { i8*, i32 }* %2 to i8**, !dbg !7128
  %47 = load i8*, i8** %46, align 8, !dbg !7128
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !7128
  %49 = load i32, i32* %48, align 8, !dbg !7128
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0, !dbg !7128
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1, !dbg !7128
  resume { i8*, i32 } %51, !dbg !7128

bb4:                                              ; preds = %bb3
  ret void, !dbg !7129
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17hc2dac458e5db55ffE(i8* %0, i64* align 8 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !7130 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill19 = alloca i8*, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i64* }, align 8
  %self.dbg.spill14 = alloca { i8*, i64* }, align 8
  %self.dbg.spill13 = alloca { i8*, i64* }, align 8
  %3 = alloca i64, align 8
  %align.dbg.spill10 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %size.dbg.spill8 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill7 = alloca { i8*, i64* }, align 8
  %self.dbg.spill4 = alloca { i8*, i64* }*, align 8
  %self.dbg.spill3 = alloca { i8*, i64* }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill2 = alloca { i8*, i64* }, align 8
  %self.dbg.spill1 = alloca { i8*, i64* }*, align 8
  %self.dbg.spill = alloca { i8*, i64* }*, align 8
  %pointer = alloca i8*, align 8
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %7, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %ptr, metadata !7146, metadata !DIExpression()), !dbg !7155
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !7147, metadata !DIExpression()), !dbg !7156
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !7152, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !7158, metadata !DIExpression()), !dbg !7162
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !7164, metadata !DIExpression()), !dbg !7168
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill, align 8, !dbg !7178
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill, metadata !7179, metadata !DIExpression()), !dbg !7190
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill1, align 8, !dbg !7190
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill1, metadata !7191, metadata !DIExpression()), !dbg !7198
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !7198
  %self.0 = load i8*, i8** %8, align 8, !dbg !7198, !nonnull !27, !noundef !27
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !7198
  %self.1 = load i64*, i64** %9, align 8, !dbg !7198, !nonnull !27, !align !1193, !noundef !27
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 0, !dbg !7198
  store i8* %self.0, i8** %10, align 8, !dbg !7198
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 1, !dbg !7198
  store i64* %self.1, i64** %11, align 8, !dbg !7198
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill2, metadata !7200, metadata !DIExpression()), !dbg !7206
  %_22.0 = bitcast i8* %self.0 to {}*, !dbg !7206
  %_22.1 = bitcast i64* %self.1 to [3 x i64]*, !dbg !7206
  %12 = bitcast [3 x i64]* %_22.1 to i64*, !dbg !7208
  %13 = getelementptr inbounds i64, i64* %12, i64 1, !dbg !7208
  %14 = load i64, i64* %13, align 8, !dbg !7208, !invariant.load !27
  %15 = bitcast [3 x i64]* %_22.1 to i64*, !dbg !7208
  %16 = getelementptr inbounds i64, i64* %15, i64 2, !dbg !7208
  %17 = load i64, i64* %16, align 8, !dbg !7208, !range !7044, !invariant.load !27
  store i64 %14, i64* %5, align 8, !dbg !7208
  %size = load i64, i64* %5, align 8, !dbg !7208
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !7208
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !7148, metadata !DIExpression()), !dbg !7209
  br label %bb1, !dbg !7208

bb1:                                              ; preds = %start
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill3, align 8, !dbg !7210
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill3, metadata !7211, metadata !DIExpression()), !dbg !7215
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill4, align 8, !dbg !7215
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill4, metadata !7216, metadata !DIExpression()), !dbg !7220
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !7220
  %self.05 = load i8*, i8** %18, align 8, !dbg !7220, !nonnull !27, !noundef !27
  %19 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !7220
  %self.16 = load i64*, i64** %19, align 8, !dbg !7220, !nonnull !27, !align !1193, !noundef !27
  %20 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill7, i32 0, i32 0, !dbg !7220
  store i8* %self.05, i8** %20, align 8, !dbg !7220
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill7, i32 0, i32 1, !dbg !7220
  store i64* %self.16, i64** %21, align 8, !dbg !7220
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill7, metadata !7222, metadata !DIExpression()), !dbg !7226
  %_26.0 = bitcast i8* %self.05 to {}*, !dbg !7226
  %_26.1 = bitcast i64* %self.16 to [3 x i64]*, !dbg !7226
  %22 = bitcast [3 x i64]* %_26.1 to i64*, !dbg !7228
  %23 = getelementptr inbounds i64, i64* %22, i64 1, !dbg !7228
  %24 = load i64, i64* %23, align 8, !dbg !7228, !invariant.load !27
  %25 = bitcast [3 x i64]* %_26.1 to i64*, !dbg !7228
  %26 = getelementptr inbounds i64, i64* %25, i64 2, !dbg !7228
  %27 = load i64, i64* %26, align 8, !dbg !7228, !range !7044, !invariant.load !27
  store i64 %27, i64* %4, align 8, !dbg !7228
  %align = load i64, i64* %4, align 8, !dbg !7228
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !7228
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !7150, metadata !DIExpression()), !dbg !7229
  br label %bb2, !dbg !7228

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill8, align 8, !dbg !7230
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill8, metadata !7231, metadata !DIExpression()), !dbg !7236
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !7238
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !7235, metadata !DIExpression()), !dbg !7236
  store i64 %align, i64* %align.dbg.spill10, align 8, !dbg !7236
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill10, metadata !7239, metadata !DIExpression()), !dbg !7246
  store i64 %align, i64* %3, align 8, !dbg !7246
  %_28 = load i64, i64* %3, align 8, !dbg !7246, !range !5681, !noundef !27
  br label %bb7, !dbg !7246

bb7:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %layout to i64*, !dbg !7236
  store i64 %size, i64* %28, align 8, !dbg !7236
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !7236
  store i64 %_28, i64* %29, align 8, !dbg !7236
  %30 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !7177
  %self.011 = load i8*, i8** %30, align 8, !dbg !7177, !nonnull !27, !noundef !27
  %31 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !7177
  %self.112 = load i64*, i64** %31, align 8, !dbg !7177, !nonnull !27, !align !1193, !noundef !27
  %32 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill13, i32 0, i32 0, !dbg !7177
  store i8* %self.011, i8** %32, align 8, !dbg !7177
  %33 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill13, i32 0, i32 1, !dbg !7177
  store i64* %self.112, i64** %33, align 8, !dbg !7177
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill13, metadata !7174, metadata !DIExpression()), !dbg !7248
  %34 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill14, i32 0, i32 0, !dbg !7248
  store i8* %self.011, i8** %34, align 8, !dbg !7248
  %35 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill14, i32 0, i32 1, !dbg !7248
  store i64* %self.112, i64** %35, align 8, !dbg !7248
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill14, metadata !7249, metadata !DIExpression()), !dbg !7255
  %36 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill15, i32 0, i32 0, !dbg !7255
  store i8* %self.011, i8** %36, align 8, !dbg !7255
  %37 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill15, i32 0, i32 1, !dbg !7255
  store i64* %self.112, i64** %37, align 8, !dbg !7255
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill15, metadata !7257, metadata !DIExpression()), !dbg !7261
  %_37.0 = bitcast i8* %self.011 to {}*, !dbg !7261
  %_37.1 = bitcast i64* %self.112 to [3 x i64]*, !dbg !7261
  %ptr16 = bitcast {}* %_37.0 to i8*, !dbg !7255
  store i8* %ptr16, i8** %ptr.dbg.spill, align 8, !dbg !7255
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !7263, metadata !DIExpression()), !dbg !7267
  store i8* %ptr16, i8** %pointer, align 8, !dbg !7267
  %_41 = load i8*, i8** %pointer, align 8, !dbg !7168, !nonnull !27, !noundef !27
  store i8* %_41, i8** %unique, align 8, !dbg !7168
  %self = load i8*, i8** %unique, align 8, !dbg !7162, !nonnull !27, !noundef !27
  store i8* %self, i8** %self.dbg.spill17, align 8, !dbg !7162
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !7269, metadata !DIExpression()), !dbg !7273
  store i8* %self, i8** %self.dbg.spill18, align 8, !dbg !7273
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !7275, metadata !DIExpression()), !dbg !7279
  store i8* %self, i8** %ptr.dbg.spill19, align 8, !dbg !7279
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill19, metadata !7281, metadata !DIExpression()), !dbg !7285
  store i8* %self, i8** %_15, align 8, !dbg !7285
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !7287
  %_18.0 = load i64, i64* %38, align 8, !dbg !7287
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !7287
  %_18.1 = load i64, i64* %39, align 8, !dbg !7287, !range !5681, !noundef !27
  %40 = load i8*, i8** %_15, align 8, !dbg !7288, !nonnull !27, !noundef !27
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc3b1727931ad6cc2E"(%"alloc::alloc::Global"* align 1 %alloc, i8* %40, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !7288

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !7289

cleanup:                                          ; preds = %bb7
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  %43 = extractvalue { i8*, i32 } %41, 1
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %43, i32* %45, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !7289

bb6:                                              ; preds = %bb5
  %46 = bitcast { i8*, i32 }* %2 to i8**, !dbg !7290
  %47 = load i8*, i8** %46, align 8, !dbg !7290
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !7290
  %49 = load i32, i32* %48, align 8, !dbg !7290
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0, !dbg !7290
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1, !dbg !7290
  resume { i8*, i32 } %51, !dbg !7290

bb4:                                              ; preds = %bb3
  ret void, !dbg !7291
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17hf73f8100277838deE(i64* %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !7292 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %self.dbg.spill16 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill13 = alloca i64*, align 8
  %self.dbg.spill12 = alloca i64*, align 8
  %self.dbg.spill11 = alloca i64*, align 8
  %2 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %align.dbg.spill8 = alloca i64, align 8
  %size.dbg.spill7 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill6 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64**, align 8
  %self.dbg.spill3 = alloca i64**, align 8
  %size.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill2 = alloca i64*, align 8
  %self.dbg.spill1 = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  %pointer = alloca i8*, align 8
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
  call void @llvm.dbg.declare(metadata i64** %ptr, metadata !7305, metadata !DIExpression()), !dbg !7314
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !7306, metadata !DIExpression()), !dbg !7315
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !7311, metadata !DIExpression()), !dbg !7316
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !7317, metadata !DIExpression()), !dbg !7321
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !7323, metadata !DIExpression()), !dbg !7327
  store i64** %ptr, i64*** %self.dbg.spill, align 8, !dbg !7337
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !7338, metadata !DIExpression()), !dbg !7346
  store i64** %ptr, i64*** %self.dbg.spill1, align 8, !dbg !7346
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill1, metadata !7347, metadata !DIExpression()), !dbg !7354
  %self = load i64*, i64** %ptr, align 8, !dbg !7354, !nonnull !27, !noundef !27
  store i64* %self, i64** %self.dbg.spill2, align 8, !dbg !7354
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill2, metadata !7356, metadata !DIExpression()), !dbg !7362
  %_22 = bitcast i64* %self to %"std::io::error::Custom"*, !dbg !7362
  store i64 24, i64* %4, align 8, !dbg !7364
  %size = load i64, i64* %4, align 8, !dbg !7364
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !7364
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !7307, metadata !DIExpression()), !dbg !7365
  br label %bb1, !dbg !7364

bb1:                                              ; preds = %start
  store i64** %ptr, i64*** %self.dbg.spill3, align 8, !dbg !7366
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill3, metadata !7367, metadata !DIExpression()), !dbg !7371
  store i64** %ptr, i64*** %self.dbg.spill4, align 8, !dbg !7371
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill4, metadata !7372, metadata !DIExpression()), !dbg !7376
  %self5 = load i64*, i64** %ptr, align 8, !dbg !7376, !nonnull !27, !noundef !27
  store i64* %self5, i64** %self.dbg.spill6, align 8, !dbg !7376
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill6, metadata !7378, metadata !DIExpression()), !dbg !7382
  %_26 = bitcast i64* %self5 to %"std::io::error::Custom"*, !dbg !7382
  store i64 8, i64* %3, align 8, !dbg !7384
  %align = load i64, i64* %3, align 8, !dbg !7384
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !7384
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !7309, metadata !DIExpression()), !dbg !7385
  br label %bb2, !dbg !7384

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill7, align 8, !dbg !7386
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill7, metadata !7387, metadata !DIExpression()), !dbg !7392
  store i64 %align, i64* %align.dbg.spill8, align 8, !dbg !7394
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill8, metadata !7391, metadata !DIExpression()), !dbg !7392
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !7392
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !7395, metadata !DIExpression()), !dbg !7402
  store i64 %align, i64* %2, align 8, !dbg !7402
  %_28 = load i64, i64* %2, align 8, !dbg !7402, !range !5681, !noundef !27
  br label %bb7, !dbg !7402

bb7:                                              ; preds = %bb2
  %5 = bitcast { i64, i64 }* %layout to i64*, !dbg !7392
  store i64 %size, i64* %5, align 8, !dbg !7392
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !7392
  store i64 %_28, i64* %6, align 8, !dbg !7392
  %self10 = load i64*, i64** %ptr, align 8, !dbg !7336, !nonnull !27, !noundef !27
  store i64* %self10, i64** %self.dbg.spill11, align 8, !dbg !7336
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill11, metadata !7333, metadata !DIExpression()), !dbg !7404
  store i64* %self10, i64** %self.dbg.spill12, align 8, !dbg !7404
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill12, metadata !7405, metadata !DIExpression()), !dbg !7411
  store i64* %self10, i64** %self.dbg.spill13, align 8, !dbg !7411
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill13, metadata !7413, metadata !DIExpression()), !dbg !7417
  %_37 = bitcast i64* %self10 to %"std::io::error::Custom"*, !dbg !7417
  %ptr14 = bitcast %"std::io::error::Custom"* %_37 to i8*, !dbg !7411
  store i8* %ptr14, i8** %ptr.dbg.spill, align 8, !dbg !7411
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !7419, metadata !DIExpression()), !dbg !7423
  store i8* %ptr14, i8** %pointer, align 8, !dbg !7423
  %_41 = load i8*, i8** %pointer, align 8, !dbg !7327, !nonnull !27, !noundef !27
  store i8* %_41, i8** %unique, align 8, !dbg !7327
  %self15 = load i8*, i8** %unique, align 8, !dbg !7321, !nonnull !27, !noundef !27
  store i8* %self15, i8** %self.dbg.spill16, align 8, !dbg !7321
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill16, metadata !7425, metadata !DIExpression()), !dbg !7429
  store i8* %self15, i8** %self.dbg.spill17, align 8, !dbg !7429
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !7431, metadata !DIExpression()), !dbg !7435
  store i8* %self15, i8** %ptr.dbg.spill18, align 8, !dbg !7435
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill18, metadata !7437, metadata !DIExpression()), !dbg !7441
  store i8* %self15, i8** %_15, align 8, !dbg !7441
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !7443
  %_18.0 = load i64, i64* %7, align 8, !dbg !7443
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !7443
  %_18.1 = load i64, i64* %8, align 8, !dbg !7443, !range !5681, !noundef !27
  %9 = load i8*, i8** %_15, align 8, !dbg !7444, !nonnull !27, !noundef !27
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc3b1727931ad6cc2E"(%"alloc::alloc::Global"* align 1 %alloc, i8* %9, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !7444

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !7445

cleanup:                                          ; preds = %bb7
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !7445

bb6:                                              ; preds = %bb5
  %15 = bitcast { i8*, i32 }* %1 to i8**, !dbg !7446
  %16 = load i8*, i8** %15, align 8, !dbg !7446
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !7446
  %18 = load i32, i32* %17, align 8, !dbg !7446
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0, !dbg !7446
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1, !dbg !7446
  resume { i8*, i32 } %20, !dbg !7446

bb4:                                              ; preds = %bb3
  ret void, !dbg !7447
}

; alloc::boxed::Box<T,A>::into_unique
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h5993f101f37262feE"({}* align 1 %0, [3 x i64]* align 8 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !7448 {
start:
  %reference.dbg.spill2 = alloca { {}*, [3 x i64]* }, align 8
  %reference.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %2 = alloca { i8*, i32 }, align 8
  %self.dbg.spill1 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"*, align 8
  %src.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %slot.dbg.spill = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>", align 1
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %pointer = alloca { i8*, i64* }, align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1
  %_9 = alloca i8, align 1
  %_5 = alloca { i8*, i64* }, align 8
  %3 = alloca { i8*, i64* }, align 8
  %b = alloca { {}*, [3 x i64]* }, align 8
  %4 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 0
  store {}* %0, {}** %4, align 8
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 1
  store [3 x i64]* %1, [3 x i64]** %5, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %b, metadata !7459, metadata !DIExpression()), !dbg !7462
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !7460, metadata !DIExpression()), !dbg !7463
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp, metadata !7464, metadata !DIExpression()), !dbg !7483
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %self.dbg.spill, metadata !7485, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"* %slot.dbg.spill, metadata !7493, metadata !DIExpression()), !dbg !7499
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %pointer, metadata !7501, metadata !DIExpression()), !dbg !7507
  store i8 1, i8* %_9, align 1, !dbg !7521
  %_4 = bitcast { {}*, [3 x i64]* }* %b to %"alloc::alloc::Global"*, !dbg !7522
  store %"alloc::alloc::Global"* %_4, %"alloc::alloc::Global"** %src.dbg.spill, align 8, !dbg !7522
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %src.dbg.spill, metadata !7472, metadata !DIExpression()), !dbg !7523
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp to {}*, !dbg !7524
  store %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"** %self.dbg.spill1, align 8, !dbg !7483
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"** %self.dbg.spill1, metadata !7528, metadata !DIExpression()), !dbg !7536
  %_12 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp to %"alloc::alloc::Global"*, !dbg !7536
  %7 = bitcast %"alloc::alloc::Global"* %_12 to i8*, !dbg !7483
  %8 = bitcast %"alloc::alloc::Global"* %_4 to i8*, !dbg !7483
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 0, i1 false), !dbg !7483
  br label %bb6, !dbg !7491

bb6:                                              ; preds = %start
  store i8 0, i8* %_9, align 1, !dbg !7538
  %9 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 0, !dbg !7538
  %_7.0 = load {}*, {}** %9, align 8, !dbg !7538, !nonnull !27, !align !608, !noundef !27
  %10 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 1, !dbg !7538
  %_7.1 = load [3 x i64]*, [3 x i64]** %10, align 8, !dbg !7538, !nonnull !27, !align !1193, !noundef !27
; invoke alloc::boxed::Box<T,A>::leak
  %11 = invoke { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h0f83870fddf481a3E"({}* align 1 %_7.0, [3 x i64]* align 8 %_7.1)
          to label %bb1 unwind label %cleanup, !dbg !7539

bb2:                                              ; preds = %cleanup
  br label %bb5, !dbg !7540

cleanup:                                          ; preds = %bb6
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb2

bb1:                                              ; preds = %bb6
  %reference.0 = extractvalue { {}*, [3 x i64]* } %11, 0, !dbg !7539
  %reference.1 = extractvalue { {}*, [3 x i64]* } %11, 1, !dbg !7539
  %17 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %reference.dbg.spill, i32 0, i32 0, !dbg !7539
  store {}* %reference.0, {}** %17, align 8, !dbg !7539
  %18 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %reference.dbg.spill, i32 0, i32 1, !dbg !7539
  store [3 x i64]* %reference.1, [3 x i64]** %18, align 8, !dbg !7539
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %reference.dbg.spill, metadata !7518, metadata !DIExpression()), !dbg !7541
  %19 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %reference.dbg.spill2, i32 0, i32 0, !dbg !7541
  store {}* %reference.0, {}** %19, align 8, !dbg !7541
  %20 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %reference.dbg.spill2, i32 0, i32 1, !dbg !7541
  store [3 x i64]* %reference.1, [3 x i64]** %20, align 8, !dbg !7541
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %reference.dbg.spill2, metadata !7542, metadata !DIExpression()), !dbg !7549
  %21 = bitcast { i8*, i64* }* %pointer to { {}*, [3 x i64]* }*, !dbg !7549
  %22 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %21, i32 0, i32 0, !dbg !7549
  store {}* %reference.0, {}** %22, align 8, !dbg !7549
  %23 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %21, i32 0, i32 1, !dbg !7549
  store [3 x i64]* %reference.1, [3 x i64]** %23, align 8, !dbg !7549
  %24 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %pointer, i32 0, i32 0, !dbg !7507
  %_24.0 = load i8*, i8** %24, align 8, !dbg !7507, !nonnull !27, !noundef !27
  %25 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %pointer, i32 0, i32 1, !dbg !7507
  %_24.1 = load i64*, i64** %25, align 8, !dbg !7507, !nonnull !27, !align !1193, !noundef !27
  %26 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_5, i32 0, i32 0, !dbg !7507
  store i8* %_24.0, i8** %26, align 8, !dbg !7507
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_5, i32 0, i32 1, !dbg !7507
  store i64* %_24.1, i64** %27, align 8, !dbg !7507
  %28 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_5, i32 0, i32 0, !dbg !7551
  %29 = load i8*, i8** %28, align 8, !dbg !7551, !nonnull !27, !noundef !27
  %30 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_5, i32 0, i32 1, !dbg !7551
  %31 = load i64*, i64** %30, align 8, !dbg !7551, !nonnull !27, !align !1193, !noundef !27
  %32 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0, !dbg !7551
  store i8* %29, i8** %32, align 8, !dbg !7551
  %33 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1, !dbg !7551
  store i64* %31, i64** %33, align 8, !dbg !7551
  %34 = bitcast { i8*, i64* }* %3 to i8*, !dbg !7551
  %35 = getelementptr i8, i8* %34, i64 16, !dbg !7551
  %36 = bitcast i8* %35 to %"alloc::alloc::Global"*, !dbg !7551
  %37 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0, !dbg !7552
  %38 = load i8*, i8** %37, align 8, !dbg !7552, !nonnull !27, !noundef !27
  %39 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1, !dbg !7552
  %40 = load i64*, i64** %39, align 8, !dbg !7552, !nonnull !27, !align !1193, !noundef !27
  %41 = insertvalue { i8*, i64* } undef, i8* %38, 0, !dbg !7552
  %42 = insertvalue { i8*, i64* } %41, i64* %40, 1, !dbg !7552
  ret { i8*, i64* } %42, !dbg !7552

bb5:                                              ; preds = %bb2
  %43 = load i8, i8* %_9, align 1, !dbg !7540, !range !759, !noundef !27
  %44 = trunc i8 %43 to i1, !dbg !7540
  br i1 %44, label %bb4, label %bb3, !dbg !7540

bb3:                                              ; preds = %bb4, %bb5
  %45 = bitcast { i8*, i32 }* %2 to i8**, !dbg !7553
  %46 = load i8*, i8** %45, align 8, !dbg !7553
  %47 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !7553
  %48 = load i32, i32* %47, align 8, !dbg !7553
  %49 = insertvalue { i8*, i32 } undef, i8* %46, 0, !dbg !7553
  %50 = insertvalue { i8*, i32 } %49, i32 %48, 1, !dbg !7553
  resume { i8*, i32 } %50, !dbg !7553

bb4:                                              ; preds = %bb5
; invoke core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h6a8e35d5e16ac4e8E"({ {}*, [3 x i64]* }* %b) #19
          to label %bb3 unwind label %abort, !dbg !7540

abort:                                            ; preds = %bb4
  %51 = landingpad { i8*, i32 }
          cleanup, !dbg !7553
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !7553
  unreachable, !dbg !7553
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define internal { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h0f83870fddf481a3E"({}* align 1 %b.0, [3 x i64]* align 8 %b.1) unnamed_addr #0 !dbg !7554 {
start:
  %self.dbg.spill2 = alloca { i8*, i64* }, align 8
  %self.dbg.spill1 = alloca { i8*, i64* }, align 8
  %self.dbg.spill = alloca { i8*, i64* }*, align 8
  %value.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %b.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %_9 = alloca { i8*, i64* }, align 8
  %0 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b.dbg.spill, i32 0, i32 0
  store {}* %b.0, {}** %0, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b.dbg.spill, i32 0, i32 1
  store [3 x i64]* %b.1, [3 x i64]** %1, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %b.dbg.spill, metadata !7558, metadata !DIExpression()), !dbg !7559
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %value.dbg.spill, i32 0, i32 0, !dbg !7560
  store {}* %b.0, {}** %2, align 8, !dbg !7560
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %value.dbg.spill, i32 0, i32 1, !dbg !7560
  store [3 x i64]* %b.1, [3 x i64]** %3, align 8, !dbg !7560
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %value.dbg.spill, metadata !7561, metadata !DIExpression()), !dbg !7565
  %4 = bitcast { i8*, i64* }* %_9 to { {}*, [3 x i64]* }*, !dbg !7565
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %4, i32 0, i32 0, !dbg !7565
  store {}* %b.0, {}** %5, align 8, !dbg !7565
  %6 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %4, i32 0, i32 1, !dbg !7565
  store [3 x i64]* %b.1, [3 x i64]** %6, align 8, !dbg !7565
  store { i8*, i64* }* %_9, { i8*, i64* }** %self.dbg.spill, align 8, !dbg !7566
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill, metadata !7567, metadata !DIExpression()), !dbg !7576
  %_7 = bitcast { i8*, i64* }* %_9 to { {}*, [3 x i64]* }*, !dbg !7576
  %7 = bitcast { {}*, [3 x i64]* }* %_7 to { i8*, i64* }*, !dbg !7566
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %7, i32 0, i32 0, !dbg !7566
  %self.0 = load i8*, i8** %8, align 8, !dbg !7566, !nonnull !27, !noundef !27
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %7, i32 0, i32 1, !dbg !7566
  %self.1 = load i64*, i64** %9, align 8, !dbg !7566, !nonnull !27, !align !1193, !noundef !27
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill1, i32 0, i32 0, !dbg !7566
  store i8* %self.0, i8** %10, align 8, !dbg !7566
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill1, i32 0, i32 1, !dbg !7566
  store i64* %self.1, i64** %11, align 8, !dbg !7566
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill1, metadata !7577, metadata !DIExpression()), !dbg !7583
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 0, !dbg !7583
  store i8* %self.0, i8** %12, align 8, !dbg !7583
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 1, !dbg !7583
  store i64* %self.1, i64** %13, align 8, !dbg !7583
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill2, metadata !7584, metadata !DIExpression()), !dbg !7588
  %_13.0 = bitcast i8* %self.0 to {}*, !dbg !7588
  %_13.1 = bitcast i64* %self.1 to [3 x i64]*, !dbg !7588
  %14 = insertvalue { {}*, [3 x i64]* } undef, {}* %_13.0, 0, !dbg !7590
  %15 = insertvalue { {}*, [3 x i64]* } %14, [3 x i64]* %_13.1, 1, !dbg !7590
  ret { {}*, [3 x i64]* } %15, !dbg !7590
}

; alloc::raw_vec::finish_grow
; Function Attrs: noinline nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec11finish_grow17hd809ddc74081b036E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, %"alloc::alloc::Global"* align 1 %alloc) unnamed_addr #3 !dbg !7591 {
start:
  %n.dbg.spill22 = alloca i64, align 8
  %self.dbg.spill21 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %e.dbg.spill20 = alloca { i64, i64 }, align 8
  %residual.dbg.spill17 = alloca { i64, i64 }, align 8
  %e.dbg.spill14 = alloca { i64, i64 }, align 8
  %val.dbg.spill11 = alloca { i64, i64 }, align 8
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill10 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill7 = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca {}, align 1
  %val.dbg.spill = alloca {}, align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %self6 = alloca i64, align 8
  %self5 = alloca i64, align 8
  %self4 = alloca i64, align 8
  %self3 = alloca i64, align 8
  %_58 = alloca { i64, i64 }, align 8
  %_52 = alloca { i64, i64 }, align 8
  %_49 = alloca { i64, i64 }, align 8
  %_43 = alloca i64*, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %memory = alloca { i8*, i64 }, align 8
  %residual2 = alloca { i64, i64 }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %self = alloca %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", align 8
  %new_layout = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !7614, metadata !DIExpression()), !dbg !7667
  call void @llvm.dbg.declare(metadata %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, metadata !7615, metadata !DIExpression()), !dbg !7668
  store %"alloc::alloc::Global"* %alloc, %"alloc::alloc::Global"** %alloc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %alloc.dbg.spill, metadata !7616, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !7617, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self, metadata !7671, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !7701, metadata !DIExpression()), !dbg !7711
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !7713, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual2, metadata !7743, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.declare(metadata {}* %val.dbg.spill, metadata !7651, metadata !DIExpression()), !dbg !7755
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %memory, metadata !7653, metadata !DIExpression()), !dbg !7756
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !7657, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.declare(metadata {}* %v.dbg.spill, metadata !7735, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.declare(metadata i64* %self3, metadata !7759, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.declare(metadata i64* %self4, metadata !7770, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.declare(metadata i64* %self5, metadata !7775, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.declare(metadata i64* %self6, metadata !7786, metadata !DIExpression()), !dbg !7790
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h7bb473a7b559d364E"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") %self, i64 %new_layout.0, i64 %new_layout.1), !dbg !7700
  br label %bb1, !dbg !7700

bb1:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to i64*, !dbg !7699
  %_45 = load i64, i64* %3, align 8, !dbg !7699, !range !2078, !noundef !27
  switch i64 %_45, label %bb20 [
    i64 0, label %bb21
    i64 1, label %bb19
  ], !dbg !7699

bb20:                                             ; preds = %bb1
  unreachable, !dbg !7699

bb21:                                             ; preds = %bb1
  %4 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !7699
  %5 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %4, i32 0, i32 1, !dbg !7699
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0, !dbg !7699
  %v.0 = load i64, i64* %6, align 8, !dbg !7699
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1, !dbg !7699
  %v.1 = load i64, i64* %7, align 8, !dbg !7699, !range !5681, !noundef !27
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill7, i32 0, i32 0, !dbg !7699
  store i64 %v.0, i64* %8, align 8, !dbg !7699
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill7, i32 0, i32 1, !dbg !7699
  store i64 %v.1, i64* %9, align 8, !dbg !7699
  call void @llvm.dbg.declare(metadata { i64, i64 }* %v.dbg.spill7, metadata !7693, metadata !DIExpression()), !dbg !7791
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*, !dbg !7791
  %11 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %10, i32 0, i32 1, !dbg !7791
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !7791
  store i64 %v.0, i64* %12, align 8, !dbg !7791
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !7791
  store i64 %v.1, i64* %13, align 8, !dbg !7791
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !7791
  store i64 0, i64* %14, align 8, !dbg !7791
  br label %bb2, !dbg !7699

bb19:                                             ; preds = %bb1
  %15 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !7699
  %16 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %15, i32 0, i32 1, !dbg !7699
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !7699
  %e.0 = load i64, i64* %17, align 8, !dbg !7699
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !7699
  %e.1 = load i64, i64* %18, align 8, !dbg !7699, !range !2198, !noundef !27
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !7699
  store i64 %e.0, i64* %19, align 8, !dbg !7699
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !7699
  store i64 %e.1, i64* %20, align 8, !dbg !7699
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !7696, metadata !DIExpression()), !dbg !7792
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 0, !dbg !7792
  store i64 %e.0, i64* %21, align 8, !dbg !7792
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1, !dbg !7792
  store i64 %e.1, i64* %22, align 8, !dbg !7792
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*, !dbg !7792
  %24 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %23, i32 0, i32 1, !dbg !7792
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 0, !dbg !7792
  %26 = load i64, i64* %25, align 8, !dbg !7792
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1, !dbg !7792
  %28 = load i64, i64* %27, align 8, !dbg !7792, !range !2198, !noundef !27
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 0, !dbg !7792
  store i64 %26, i64* %29, align 8, !dbg !7792
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 1, !dbg !7792
  store i64 %28, i64* %30, align 8, !dbg !7792
  %31 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !7792
  store i64 1, i64* %31, align 8, !dbg !7792
  br label %bb2, !dbg !7699

bb2:                                              ; preds = %bb21, %bb19
  %32 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !7700
  %_9 = load i64, i64* %32, align 8, !dbg !7700, !range !2078, !noundef !27
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !7700

bb4:                                              ; preds = %bb2
  unreachable, !dbg !7700

bb3:                                              ; preds = %bb2
  %33 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*, !dbg !7700
  %34 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %33, i32 0, i32 1, !dbg !7700
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0, !dbg !7700
  %val.0 = load i64, i64* %35, align 8, !dbg !7700
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1, !dbg !7700
  %val.1 = load i64, i64* %36, align 8, !dbg !7700, !range !5681, !noundef !27
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill11, i32 0, i32 0, !dbg !7700
  store i64 %val.0, i64* %37, align 8, !dbg !7700
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill11, i32 0, i32 1, !dbg !7700
  store i64 %val.1, i64* %38, align 8, !dbg !7700
  call void @llvm.dbg.declare(metadata { i64, i64 }* %val.dbg.spill11, metadata !7634, metadata !DIExpression()), !dbg !7793
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !7793
  store i64 %val.0, i64* %39, align 8, !dbg !7793
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !7793
  store i64 %val.1, i64* %40, align 8, !dbg !7793
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !7794
  store i64 -9223372036854775807, i64* %41, align 8, !dbg !7794
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !7741
  %43 = load i64, i64* %42, align 8, !dbg !7741, !range !5620, !noundef !27
  %44 = sub i64 %43, -9223372036854775807, !dbg !7741
  %45 = icmp eq i64 %44, 0, !dbg !7741
  %_55 = select i1 %45, i64 0, i64 1, !dbg !7741
  switch i64 %_55, label %bb23 [
    i64 0, label %bb24
    i64 1, label %bb22
  ], !dbg !7741

bb5:                                              ; preds = %bb2
  %46 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*, !dbg !7800
  %47 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %46, i32 0, i32 1, !dbg !7800
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %47, i32 0, i32 0, !dbg !7800
  %residual.0 = load i64, i64* %48, align 8, !dbg !7800
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %47, i32 0, i32 1, !dbg !7800
  %residual.1 = load i64, i64* %49, align 8, !dbg !7800, !range !2198, !noundef !27
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !7800
  store i64 %residual.0, i64* %50, align 8, !dbg !7800
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !7800
  store i64 %residual.1, i64* %51, align 8, !dbg !7800
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !7619, metadata !DIExpression()), !dbg !7801
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !7801
  store i64 %residual.0, i64* %52, align 8, !dbg !7801
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !7801
  store i64 %residual.1, i64* %53, align 8, !dbg !7801
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !7711
  %e.08 = load i64, i64* %54, align 8, !dbg !7711
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !7711
  %e.19 = load i64, i64* %55, align 8, !dbg !7711, !range !2198, !noundef !27
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill10, i32 0, i32 0, !dbg !7711
  store i64 %e.08, i64* %56, align 8, !dbg !7711
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill10, i32 0, i32 1, !dbg !7711
  store i64 %e.19, i64* %57, align 8, !dbg !7711
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill10, metadata !7707, metadata !DIExpression()), !dbg !7802
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0, !dbg !7802
  store i64 %e.08, i64* %58, align 8, !dbg !7802
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1, !dbg !7802
  store i64 %e.19, i64* %59, align 8, !dbg !7802
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !7803, metadata !DIExpression()), !dbg !7807
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 0, !dbg !7807
  store i64 %e.08, i64* %60, align 8, !dbg !7807
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 1, !dbg !7807
  store i64 %e.19, i64* %61, align 8, !dbg !7807
  %62 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !7802
  %63 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %62, i32 0, i32 1, !dbg !7802
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 0, !dbg !7802
  %65 = load i64, i64* %64, align 8, !dbg !7802
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 1, !dbg !7802
  %67 = load i64, i64* %66, align 8, !dbg !7802, !range !2198, !noundef !27
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %63, i32 0, i32 0, !dbg !7802
  store i64 %65, i64* %68, align 8, !dbg !7802
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %63, i32 0, i32 1, !dbg !7802
  store i64 %67, i64* %69, align 8, !dbg !7802
  %70 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !7802
  store i64 1, i64* %70, align 8, !dbg !7802
  br label %bb17, !dbg !7809

bb17:                                             ; preds = %bb25, %bb5
  br label %bb18, !dbg !7811

bb23:                                             ; preds = %bb3
  unreachable, !dbg !7741

bb24:                                             ; preds = %bb3
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !7758
  store i64 -9223372036854775807, i64* %71, align 8, !dbg !7758
  br label %bb6, !dbg !7741

bb22:                                             ; preds = %bb3
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !7741
  %e.012 = load i64, i64* %72, align 8, !dbg !7741
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !7741
  %e.113 = load i64, i64* %73, align 8, !dbg !7741, !range !2198, !noundef !27
  %74 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill14, i32 0, i32 0, !dbg !7741
  store i64 %e.012, i64* %74, align 8, !dbg !7741
  %75 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill14, i32 0, i32 1, !dbg !7741
  store i64 %e.113, i64* %75, align 8, !dbg !7741
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill14, metadata !7738, metadata !DIExpression()), !dbg !7812
  %76 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 0, !dbg !7812
  store i64 %e.012, i64* %76, align 8, !dbg !7812
  %77 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1, !dbg !7812
  store i64 %e.113, i64* %77, align 8, !dbg !7812
  %78 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 0, !dbg !7812
  %79 = load i64, i64* %78, align 8, !dbg !7812
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1, !dbg !7812
  %81 = load i64, i64* %80, align 8, !dbg !7812, !range !2198, !noundef !27
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !7812
  store i64 %79, i64* %82, align 8, !dbg !7812
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !7812
  store i64 %81, i64* %83, align 8, !dbg !7812
  br label %bb6, !dbg !7741

bb6:                                              ; preds = %bb24, %bb22
  %84 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !7742
  %85 = load i64, i64* %84, align 8, !dbg !7742, !range !5620, !noundef !27
  %86 = sub i64 %85, -9223372036854775807, !dbg !7742
  %87 = icmp eq i64 %86, 0, !dbg !7742
  %_17 = select i1 %87, i64 0, i64 1, !dbg !7742
  switch i64 %_17, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ], !dbg !7742

bb8:                                              ; preds = %bb6
  unreachable, !dbg !7742

bb7:                                              ; preds = %bb6
  %88 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, i32 0, i32 1, !dbg !7813
  %89 = load i64, i64* %88, align 8, !dbg !7813, !range !2198, !noundef !27
  %90 = icmp eq i64 %89, 0, !dbg !7813
  %_22 = select i1 %90, i64 0, i64 1, !dbg !7813
  %91 = icmp eq i64 %_22, 1, !dbg !7813
  br i1 %91, label %bb11, label %bb10, !dbg !7813

bb9:                                              ; preds = %bb6
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !7814
  %residual.015 = load i64, i64* %92, align 8, !dbg !7814
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !7814
  %residual.116 = load i64, i64* %93, align 8, !dbg !7814, !range !2198, !noundef !27
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill17, i32 0, i32 0, !dbg !7814
  store i64 %residual.015, i64* %94, align 8, !dbg !7814
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill17, i32 0, i32 1, !dbg !7814
  store i64 %residual.116, i64* %95, align 8, !dbg !7814
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill17, metadata !7636, metadata !DIExpression()), !dbg !7815
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 0, !dbg !7815
  store i64 %residual.015, i64* %96, align 8, !dbg !7815
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 1, !dbg !7815
  store i64 %residual.116, i64* %97, align 8, !dbg !7815
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 0, !dbg !7753
  %e.018 = load i64, i64* %98, align 8, !dbg !7753
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 1, !dbg !7753
  %e.119 = load i64, i64* %99, align 8, !dbg !7753, !range !2198, !noundef !27
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill20, i32 0, i32 0, !dbg !7753
  store i64 %e.018, i64* %100, align 8, !dbg !7753
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill20, i32 0, i32 1, !dbg !7753
  store i64 %e.119, i64* %101, align 8, !dbg !7753
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill20, metadata !7749, metadata !DIExpression()), !dbg !7816
; call <T as core::convert::From<T>>::from
  %102 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h11a7bfb25080e112E"(i64 %e.018, i64 %e.119), !dbg !7816
  %_61.0 = extractvalue { i64, i64 } %102, 0, !dbg !7816
  %_61.1 = extractvalue { i64, i64 } %102, 1, !dbg !7816
  br label %bb25, !dbg !7816

bb25:                                             ; preds = %bb9
  %103 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !7816
  %104 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %103, i32 0, i32 1, !dbg !7816
  %105 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %104, i32 0, i32 0, !dbg !7816
  store i64 %_61.0, i64* %105, align 8, !dbg !7816
  %106 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %104, i32 0, i32 1, !dbg !7816
  store i64 %_61.1, i64* %106, align 8, !dbg !7816
  %107 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !7816
  store i64 1, i64* %107, align 8, !dbg !7816
  br label %bb17, !dbg !7817

bb18:                                             ; preds = %bb16, %bb17
  ret void, !dbg !7811

bb11:                                             ; preds = %bb7
  %108 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !7819
  %109 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %108 to { i8*, { i64, i64 } }*, !dbg !7819
  %110 = bitcast { i8*, { i64, i64 } }* %109 to i8**, !dbg !7819
  %ptr = load i8*, i8** %110, align 8, !dbg !7819, !nonnull !27, !noundef !27
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !7819
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !7655, metadata !DIExpression()), !dbg !7819
  %111 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !7757
  %112 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %111 to { i8*, { i64, i64 } }*, !dbg !7757
  %113 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %112, i32 0, i32 1, !dbg !7757
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %113, i32 0, i32 0, !dbg !7757
  %115 = load i64, i64* %114, align 8, !dbg !7757
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %113, i32 0, i32 1, !dbg !7757
  %117 = load i64, i64* %116, align 8, !dbg !7757, !range !5681, !noundef !27
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !7757
  store i64 %115, i64* %118, align 8, !dbg !7757
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !7757
  store i64 %117, i64* %119, align 8, !dbg !7757
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill, align 8, !dbg !7769
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !7767, metadata !DIExpression()), !dbg !7820
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !7820
  %121 = load i64, i64* %120, align 8, !dbg !7820, !range !5681, !noundef !27
  store i64 %121, i64* %self4, align 8, !dbg !7820
  %_74 = load i64, i64* %self4, align 8, !dbg !7774, !range !5681, !noundef !27
  store i64 %_74, i64* %n.dbg.spill, align 8, !dbg !7774
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !7821, metadata !DIExpression()), !dbg !7828
  store i64 %_74, i64* %self3, align 8, !dbg !7828
  %_32 = load i64, i64* %self3, align 8, !dbg !7763
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill21, align 8, !dbg !7785
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill21, metadata !7783, metadata !DIExpression()), !dbg !7830
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !7830
  %123 = load i64, i64* %122, align 8, !dbg !7830, !range !5681, !noundef !27
  store i64 %123, i64* %self6, align 8, !dbg !7830
  %_80 = load i64, i64* %self6, align 8, !dbg !7790, !range !5681, !noundef !27
  store i64 %_80, i64* %n.dbg.spill22, align 8, !dbg !7790
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill22, metadata !7831, metadata !DIExpression()), !dbg !7838
  store i64 %_80, i64* %self5, align 8, !dbg !7838
  %_34 = load i64, i64* %self5, align 8, !dbg !7779
  %_31 = icmp eq i64 %_32, %_34, !dbg !7769
  call void @llvm.assume(i1 %_31), !dbg !7840
  br label %bb12, !dbg !7840

bb10:                                             ; preds = %bb7
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !7841
  %_41.0 = load i64, i64* %124, align 8, !dbg !7841
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !7841
  %_41.1 = load i64, i64* %125, align 8, !dbg !7841, !range !5681, !noundef !27
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %126 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hc12985ca999b6941E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %_41.0, i64 %_41.1), !dbg !7842
  store { i8*, i64 } %126, { i8*, i64 }* %memory, align 8, !dbg !7842
  br label %bb14, !dbg !7842

bb14:                                             ; preds = %bb10
  br label %bb15, !dbg !7843

bb15:                                             ; preds = %bb13, %bb14
  %127 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 0, !dbg !7844
  %_42.0 = load i8*, i8** %127, align 8, !dbg !7844
  %128 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 1, !dbg !7844
  %_42.1 = load i64, i64* %128, align 8, !dbg !7844
  %129 = bitcast i64** %_43 to { i64, i64 }**, !dbg !7845
  store { i64, i64 }* %new_layout, { i64, i64 }** %129, align 8, !dbg !7845
  %130 = load i64*, i64** %_43, align 8, !dbg !7844, !nonnull !27, !align !1193, !noundef !27
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h0da0f8cedc183056E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i8* %_42.0, i64 %_42.1, i64* align 8 %130), !dbg !7844
  br label %bb16, !dbg !7844

bb12:                                             ; preds = %bb11
  %131 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !7846
  %_38.0 = load i64, i64* %131, align 8, !dbg !7846
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !7846
  %_38.1 = load i64, i64* %132, align 8, !dbg !7846, !range !5681, !noundef !27
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !7847
  %_39.0 = load i64, i64* %133, align 8, !dbg !7847
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !7847
  %_39.1 = load i64, i64* %134, align 8, !dbg !7847, !range !5681, !noundef !27
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %135 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17hd6d35bed8b9eab4dE"(%"alloc::alloc::Global"* align 1 %alloc, i8* %ptr, i64 %_38.0, i64 %_38.1, i64 %_39.0, i64 %_39.1), !dbg !7848
  store { i8*, i64 } %135, { i8*, i64 }* %memory, align 8, !dbg !7848
  br label %bb13, !dbg !7848

bb13:                                             ; preds = %bb12
  br label %bb15, !dbg !7843

bb16:                                             ; preds = %bb15
  br label %bb18, !dbg !7811
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h07d6da8a7107da5bE"() unnamed_addr #0 !dbg !7849 {
start:
  %_2.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]", align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]"* %_1.dbg.spill, metadata !7853, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %_2.dbg.spill, metadata !7854, metadata !DIExpression()), !dbg !7856
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !7857
  store i64 0, i64* %1, align 8, !dbg !7857
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !7858
  %3 = load i64, i64* %2, align 8, !dbg !7858
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !7858
  %5 = load i64, i64* %4, align 8, !dbg !7858, !range !2198, !noundef !27
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !7858
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !7858
  ret { i64, i64 } %7, !dbg !7858
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h19ea93a086e7b9cdE"(i64* align 8 %0) unnamed_addr #0 !dbg !7859 {
start:
  %_2.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %_3 = alloca { i64, i64 }, align 8
  %_1 = alloca i64*, align 8
  store i64* %0, i64** %_1, align 8
  %1 = bitcast i64** %_1 to { i64, i64 }**
  %2 = load { i64, i64 }*, { i64, i64 }** %1, align 8, !nonnull !27, !align !1193, !noundef !27
  call void @llvm.dbg.declare(metadata i64** %_1, metadata !7863, metadata !DIExpression(DW_OP_deref)), !dbg !7865
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %_2.dbg.spill, metadata !7864, metadata !DIExpression()), !dbg !7866
  %3 = bitcast i64** %_1 to { i64, i64 }**, !dbg !7867
  %_5 = load { i64, i64 }*, { i64, i64 }** %3, align 8, !dbg !7867, !nonnull !27, !align !1193, !noundef !27
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0, !dbg !7867
  %_4.0 = load i64, i64* %4, align 8, !dbg !7867
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !7867
  %_4.1 = load i64, i64* %5, align 8, !dbg !7867, !range !5681, !noundef !27
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !7868
  store i64 %_4.0, i64* %6, align 8, !dbg !7868
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !7868
  store i64 %_4.1, i64* %7, align 8, !dbg !7868
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !7868
  %9 = load i64, i64* %8, align 8, !dbg !7868
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !7868
  %11 = load i64, i64* %10, align 8, !dbg !7868, !range !2198, !noundef !27
; call <T as core::convert::Into<U>>::into
  %12 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb8ac4c94ae25218fE"(i64 %9, i64 %11), !dbg !7868
  %13 = extractvalue { i64, i64 } %12, 0, !dbg !7868
  %14 = extractvalue { i64, i64 } %12, 1, !dbg !7868
  br label %bb1, !dbg !7868

bb1:                                              ; preds = %start
  %15 = insertvalue { i64, i64 } undef, i64 %13, 0, !dbg !7869
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1, !dbg !7869
  ret { i64, i64 } %16, !dbg !7869
}

; alloc::raw_vec::handle_reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec14handle_reserve17h8a1fc2a01b87d06fE(i64 %result.0, i64 %result.1) unnamed_addr #0 !dbg !7870 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %result.dbg.spill = alloca { i64, i64 }, align 8
  %_2 = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %result.dbg.spill, i32 0, i32 0
  store i64 %result.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %result.dbg.spill, i32 0, i32 1
  store i64 %result.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %result.dbg.spill, metadata !7874, metadata !DIExpression()), !dbg !7877
; call core::result::Result<T,E>::map_err
  %2 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h2db4cce6e1006803E"(i64 %result.0, i64 %result.1), !dbg !7878
  store { i64, i64 } %2, { i64, i64 }* %_2, align 8, !dbg !7878
  br label %bb1, !dbg !7878

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !7878
  %4 = load i64, i64* %3, align 8, !dbg !7878, !range !5620, !noundef !27
  %5 = sub i64 %4, -9223372036854775807, !dbg !7878
  %6 = icmp eq i64 %5, 0, !dbg !7878
  %_6 = select i1 %6, i64 0, i64 1, !dbg !7878
  switch i64 %_6, label %bb4 [
    i64 0, label %bb2
    i64 1, label %bb3
  ], !dbg !7879

bb4:                                              ; preds = %bb3, %bb1
  unreachable, !dbg !7878

bb2:                                              ; preds = %bb1
  ret void, !dbg !7880

bb3:                                              ; preds = %bb1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !7878
  %8 = load i64, i64* %7, align 8, !dbg !7878, !range !2198, !noundef !27
  %9 = icmp eq i64 %8, 0, !dbg !7878
  %_5 = select i1 %9, i64 0, i64 1, !dbg !7878
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ], !dbg !7879

bb5:                                              ; preds = %bb3
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #18, !dbg !7881
  unreachable, !dbg !7881

bb6:                                              ; preds = %bb3
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 0, !dbg !7882
  %layout.0 = load i64, i64* %10, align 8, !dbg !7882
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !7882
  %layout.1 = load i64, i64* %11, align 8, !dbg !7882, !range !5681, !noundef !27
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !7882
  store i64 %layout.0, i64* %12, align 8, !dbg !7882
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !7882
  store i64 %layout.1, i64* %13, align 8, !dbg !7882
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !7875, metadata !DIExpression()), !dbg !7883
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64 %layout.0, i64 %layout.1) #18, !dbg !7884
  unreachable, !dbg !7884
}

; alloc::raw_vec::handle_reserve::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hb761c6a74ff5d3c3E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !7885 {
start:
  %self.dbg.spill2 = alloca { i64, i64 }*, align 8
  %__self_0.dbg.spill = alloca { i64, i64 }*, align 8
  %self.dbg.spill1 = alloca { i64, i64 }*, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %2 = alloca { i64, i64 }, align 8
  %e = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %_1.dbg.spill, metadata !7890, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e, metadata !7889, metadata !DIExpression()), !dbg !7892
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill, align 8, !dbg !7893
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !7894, metadata !DIExpression()), !dbg !7901
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill1, align 8, !dbg !7901
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill1, metadata !7902, metadata !DIExpression()), !dbg !7915
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1, !dbg !7915
  %6 = load i64, i64* %5, align 8, !dbg !7915, !range !2198, !noundef !27
  %7 = icmp eq i64 %6, 0, !dbg !7915
  %_5 = select i1 %7, i64 0, i64 1, !dbg !7915
  switch i64 %_5, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !7915

bb3:                                              ; preds = %start
  unreachable, !dbg !7915

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7915
  store i64 0, i64* %8, align 8, !dbg !7915
  br label %bb1, !dbg !7915

bb2:                                              ; preds = %start
  store { i64, i64 }* %e, { i64, i64 }** %__self_0.dbg.spill, align 8, !dbg !7915
  call void @llvm.dbg.declare(metadata { i64, i64 }** %__self_0.dbg.spill, metadata !7910, metadata !DIExpression()), !dbg !7917
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill2, align 8, !dbg !7917
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill2, metadata !7918, metadata !DIExpression()), !dbg !7925
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0, !dbg !7925
  %_8.0 = load i64, i64* %9, align 8, !dbg !7925
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1, !dbg !7925
  %_8.1 = load i64, i64* %10, align 8, !dbg !7925, !range !5681, !noundef !27
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !7917
  store i64 %_8.0, i64* %11, align 8, !dbg !7917
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7917
  store i64 %_8.1, i64* %12, align 8, !dbg !7917
  br label %bb1, !dbg !7915

bb1:                                              ; preds = %bb4, %bb2
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !7927
  %14 = load i64, i64* %13, align 8, !dbg !7927
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7927
  %16 = load i64, i64* %15, align 8, !dbg !7927, !range !2198, !noundef !27
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0, !dbg !7927
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1, !dbg !7927
  ret { i64, i64 } %18, !dbg !7927
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h5f98633d17b03dfaE"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !7928 {
start:
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }*, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %self1 = alloca i64, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !7933, metadata !DIExpression()), !dbg !7936
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !7934, metadata !DIExpression()), !dbg !7937
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !7935, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.declare(metadata i64* %self1, metadata !7939, metadata !DIExpression()), !dbg !7944
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill2, align 8, !dbg !7945
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill2, metadata !7946, metadata !DIExpression()), !dbg !7951
  br i1 false, label %bb2, label %bb3, !dbg !7951

bb2:                                              ; preds = %start
  store i64 -1, i64* %self1, align 8, !dbg !7951
  br label %bb1, !dbg !7951

bb3:                                              ; preds = %start
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !7951
  %1 = load i64, i64* %0, align 8, !dbg !7951
  store i64 %1, i64* %self1, align 8, !dbg !7951
  br label %bb1, !dbg !7951

bb1:                                              ; preds = %bb2, %bb3
  store i64 %len, i64* %rhs.dbg.spill, align 8, !dbg !7952
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !7943, metadata !DIExpression()), !dbg !7944
  %_10 = load i64, i64* %self1, align 8, !dbg !7944
  %_5 = sub i64 %_10, %len, !dbg !7944
  %2 = icmp ugt i64 %additional, %_5, !dbg !7953
  ret i1 %2, !dbg !7954
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hf3a653a19cd8cfe1E"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !7955 {
start:
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill24 = alloca { i8*, i64 }, align 8
  %e.dbg.spill23 = alloca { i64, i64 }, align 8
  %residual.dbg.spill20 = alloca { i64, i64 }, align 8
  %v.dbg.spill17 = alloca { i8*, i64 }, align 8
  %e.dbg.spill16 = alloca { i64, i64 }, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %cap.dbg.spill13 = alloca i64, align 8
  %v1.dbg.spill11 = alloca i64, align 8
  %v2.dbg.spill10 = alloca i64, align 8
  %cap.dbg.spill = alloca i64, align 8
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %required_cap.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill9 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill6 = alloca i64, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca i64, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_65 = alloca { i64, i64 }, align 8
  %_55 = alloca { i64, i64 }, align 8
  %_50 = alloca { i64, i64 }, align 8
  %residual4 = alloca { i64, i64 }, align 8
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %residual = alloca { i64, i64 }, align 8
  %err = alloca { i64, i64 }, align 8
  %self2 = alloca { i64, i64 }, align 8
  %self1 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !7960, metadata !DIExpression()), !dbg !7981
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !7961, metadata !DIExpression()), !dbg !7982
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !7962, metadata !DIExpression()), !dbg !7983
  call void @llvm.dbg.declare(metadata %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1, metadata !7984, metadata !DIExpression()), !dbg !8025
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self2, metadata !8027, metadata !DIExpression()), !dbg !8037
  call void @llvm.dbg.declare(metadata { i64, i64 }* %err, metadata !8033, metadata !DIExpression()), !dbg !8037
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !8038, metadata !DIExpression()), !dbg !8048
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3, metadata !8050, metadata !DIExpression()), !dbg !8076
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual4, metadata !8078, metadata !DIExpression()), !dbg !8088
  br i1 false, label %bb1, label %bb3, !dbg !8090

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !8091
  store i64 0, i64* %1, align 8, !dbg !8091
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !8091
  %3 = load i64, i64* %2, align 8, !dbg !8091
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !8091
  %5 = load i64, i64* %4, align 8, !dbg !8091, !range !2198, !noundef !27
; call <T as core::convert::Into<U>>::into
  %6 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb8ac4c94ae25218fE"(i64 %3, i64 %5), !dbg !8091
  %_5.0 = extractvalue { i64, i64 } %6, 0, !dbg !8091
  %_5.1 = extractvalue { i64, i64 } %6, 1, !dbg !8091
  br label %bb2, !dbg !8091

bb3:                                              ; preds = %start
; call core::num::<impl usize>::checked_add
  %7 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17hc352243ed65aed56E"(i64 %len, i64 %additional), !dbg !8026
  store { i64, i64 } %7, { i64, i64 }* %self2, align 8, !dbg !8026
  br label %bb4, !dbg !8026

bb4:                                              ; preds = %bb3
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !8092
  store i64 0, i64* %8, align 8, !dbg !8092
  %9 = bitcast { i64, i64 }* %self2 to i64*, !dbg !8037
  %_42 = load i64, i64* %9, align 8, !dbg !8037, !range !2078, !noundef !27
  switch i64 %_42, label %bb20 [
    i64 0, label %bb19
    i64 1, label %bb21
  ], !dbg !8037

bb20:                                             ; preds = %bb4
  unreachable, !dbg !8037

bb19:                                             ; preds = %bb4
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 0, !dbg !8037
  %_45.0 = load i64, i64* %10, align 8, !dbg !8037
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !8037
  %_45.1 = load i64, i64* %11, align 8, !dbg !8037, !range !2198, !noundef !27
  %12 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !8037
  %13 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %12, i32 0, i32 1, !dbg !8037
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !8037
  store i64 %_45.0, i64* %14, align 8, !dbg !8037
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !8037
  store i64 %_45.1, i64* %15, align 8, !dbg !8037
  %16 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !8037
  store i64 1, i64* %16, align 8, !dbg !8037
  br label %bb22, !dbg !8037

bb21:                                             ; preds = %bb4
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 1, !dbg !8037
  %v = load i64, i64* %17, align 8, !dbg !8037
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !8037
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !8034, metadata !DIExpression()), !dbg !8093
  %18 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !8093
  %19 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %18, i32 0, i32 1, !dbg !8093
  store i64 %v, i64* %19, align 8, !dbg !8093
  %20 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !8093
  store i64 0, i64* %20, align 8, !dbg !8093
  br label %bb22, !dbg !8037

bb22:                                             ; preds = %bb19, %bb21
  %21 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !8025
  %_46 = load i64, i64* %21, align 8, !dbg !8025, !range !2078, !noundef !27
  switch i64 %_46, label %bb24 [
    i64 0, label %bb25
    i64 1, label %bb23
  ], !dbg !8025

bb24:                                             ; preds = %bb22
  unreachable, !dbg !8025

bb25:                                             ; preds = %bb22
  %22 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !8025
  %23 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %22, i32 0, i32 1, !dbg !8025
  %v5 = load i64, i64* %23, align 8, !dbg !8025
  store i64 %v5, i64* %v.dbg.spill6, align 8, !dbg !8025
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill6, metadata !8019, metadata !DIExpression()), !dbg !8094
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !8094
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %24, i32 0, i32 1, !dbg !8094
  store i64 %v5, i64* %25, align 8, !dbg !8094
  %26 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !8094
  store i64 0, i64* %26, align 8, !dbg !8094
  br label %bb5, !dbg !8025

bb23:                                             ; preds = %bb22
  %27 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !8025
  %28 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %27, i32 0, i32 1, !dbg !8025
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0, !dbg !8025
  %e.0 = load i64, i64* %29, align 8, !dbg !8025
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1, !dbg !8025
  %e.1 = load i64, i64* %30, align 8, !dbg !8025, !range !2198, !noundef !27
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !8025
  store i64 %e.0, i64* %31, align 8, !dbg !8025
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !8025
  store i64 %e.1, i64* %32, align 8, !dbg !8025
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !8022, metadata !DIExpression()), !dbg !8095
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !8095
  store i64 %e.0, i64* %33, align 8, !dbg !8095
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !8095
  store i64 %e.1, i64* %34, align 8, !dbg !8095
  %35 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !8095
  %36 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %35, i32 0, i32 1, !dbg !8095
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !8095
  %38 = load i64, i64* %37, align 8, !dbg !8095
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !8095
  %40 = load i64, i64* %39, align 8, !dbg !8095, !range !2198, !noundef !27
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 0, !dbg !8095
  store i64 %38, i64* %41, align 8, !dbg !8095
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 1, !dbg !8095
  store i64 %40, i64* %42, align 8, !dbg !8095
  %43 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !8095
  store i64 1, i64* %43, align 8, !dbg !8095
  br label %bb5, !dbg !8025

bb5:                                              ; preds = %bb25, %bb23
  %44 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !8026
  %_14 = load i64, i64* %44, align 8, !dbg !8026, !range !2078, !noundef !27
  switch i64 %_14, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !8026

bb7:                                              ; preds = %bb5
  unreachable, !dbg !8026

bb6:                                              ; preds = %bb5
  %45 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !8026
  %46 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %45, i32 0, i32 1, !dbg !8026
  %val = load i64, i64* %46, align 8, !dbg !8026
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !8026
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !7967, metadata !DIExpression()), !dbg !8096
  store i64 %val, i64* %required_cap.dbg.spill, align 8, !dbg !8096
  call void @llvm.dbg.declare(metadata i64* %required_cap.dbg.spill, metadata !7963, metadata !DIExpression()), !dbg !8097
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !8098
  %_20 = load i64, i64* %47, align 8, !dbg !8098
  %v1 = mul i64 %_20, 2, !dbg !8098
  store i64 %v1, i64* %v1.dbg.spill, align 8, !dbg !8098
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !8099, metadata !DIExpression()), !dbg !8104
  store i64 %val, i64* %v2.dbg.spill, align 8, !dbg !8106
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !8103, metadata !DIExpression()), !dbg !8104
; call core::cmp::Ord::max
  %cap = call i64 @_ZN4core3cmp3Ord3max17h3d8b339d630bc134E(i64 %v1, i64 %val), !dbg !8104
  store i64 %cap, i64* %cap.dbg.spill, align 8, !dbg !8104
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !7969, metadata !DIExpression()), !dbg !8107
  br label %bb26, !dbg !8104

bb8:                                              ; preds = %bb5
  %48 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !8108
  %49 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %48, i32 0, i32 1, !dbg !8108
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 0, !dbg !8108
  %residual.0 = load i64, i64* %50, align 8, !dbg !8108
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 1, !dbg !8108
  %residual.1 = load i64, i64* %51, align 8, !dbg !8108, !range !2198, !noundef !27
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !8108
  store i64 %residual.0, i64* %52, align 8, !dbg !8108
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !8108
  store i64 %residual.1, i64* %53, align 8, !dbg !8108
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !7965, metadata !DIExpression()), !dbg !8109
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !8109
  store i64 %residual.0, i64* %54, align 8, !dbg !8109
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !8109
  store i64 %residual.1, i64* %55, align 8, !dbg !8109
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !8048
  %e.07 = load i64, i64* %56, align 8, !dbg !8048
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !8048
  %e.18 = load i64, i64* %57, align 8, !dbg !8048, !range !2198, !noundef !27
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 0, !dbg !8048
  store i64 %e.07, i64* %58, align 8, !dbg !8048
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 1, !dbg !8048
  store i64 %e.18, i64* %59, align 8, !dbg !8048
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill9, metadata !8044, metadata !DIExpression()), !dbg !8110
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0, !dbg !8110
  store i64 %e.07, i64* %60, align 8, !dbg !8110
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1, !dbg !8110
  store i64 %e.18, i64* %61, align 8, !dbg !8110
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !8111, metadata !DIExpression()), !dbg !8115
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !8115
  store i64 %e.07, i64* %62, align 8, !dbg !8115
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !8115
  store i64 %e.18, i64* %63, align 8, !dbg !8115
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !8110
  %65 = load i64, i64* %64, align 8, !dbg !8110
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !8110
  %67 = load i64, i64* %66, align 8, !dbg !8110, !range !2198, !noundef !27
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !8110
  store i64 %65, i64* %68, align 8, !dbg !8110
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !8110
  store i64 %67, i64* %69, align 8, !dbg !8110
  br label %bb17, !dbg !8117

bb17:                                             ; preds = %bb31, %bb8
  br label %bb18, !dbg !8117

bb26:                                             ; preds = %bb6
  store i64 %cap, i64* %v2.dbg.spill10, align 8, !dbg !8119
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill10, metadata !8120, metadata !DIExpression()), !dbg !8125
  store i64 8, i64* %v1.dbg.spill11, align 8, !dbg !8126
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill11, metadata !8124, metadata !DIExpression()), !dbg !8125
; call core::cmp::Ord::max
  %cap12 = call i64 @_ZN4core3cmp3Ord3max17h3d8b339d630bc134E(i64 8, i64 %cap), !dbg !8125
  store i64 %cap12, i64* %cap.dbg.spill13, align 8, !dbg !8125
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill13, metadata !7971, metadata !DIExpression()), !dbg !8127
  br label %bb27, !dbg !8125

bb27:                                             ; preds = %bb26
; call core::alloc::layout::Layout::array
  %70 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hd3d68a432436475dE(i64 %cap12), !dbg !8128
  %new_layout.0 = extractvalue { i64, i64 } %70, 0, !dbg !8128
  %new_layout.1 = extractvalue { i64, i64 } %70, 1, !dbg !8128
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0, !dbg !8128
  store i64 %new_layout.0, i64* %71, align 8, !dbg !8128
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1, !dbg !8128
  store i64 %new_layout.1, i64* %72, align 8, !dbg !8128
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !7973, metadata !DIExpression()), !dbg !8129
  br label %bb9, !dbg !8128

bb9:                                              ; preds = %bb27
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hb676db2ab53775bbE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_30, { i8*, i64 }* align 8 %self), !dbg !8130
  br label %bb10, !dbg !8130

bb10:                                             ; preds = %bb9
  %_33 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !8131
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17hd809ddc74081b036E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %self3, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_30, %"alloc::alloc::Global"* align 1 %_33), !dbg !8077
  br label %bb11, !dbg !8077

bb11:                                             ; preds = %bb10
  %73 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to i64*, !dbg !8076
  %_61 = load i64, i64* %73, align 8, !dbg !8076, !range !2078, !noundef !27
  switch i64 %_61, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ], !dbg !8076

bb29:                                             ; preds = %bb11
  unreachable, !dbg !8076

bb30:                                             ; preds = %bb11
  %74 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*, !dbg !8076
  %75 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %74, i32 0, i32 1, !dbg !8076
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 0, !dbg !8076
  %v.0 = load i8*, i8** %76, align 8, !dbg !8076, !nonnull !27, !noundef !27
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 1, !dbg !8076
  %v.1 = load i64, i64* %77, align 8, !dbg !8076
  %78 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 0, !dbg !8076
  store i8* %v.0, i8** %78, align 8, !dbg !8076
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 1, !dbg !8076
  store i64 %v.1, i64* %79, align 8, !dbg !8076
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill17, metadata !8070, metadata !DIExpression()), !dbg !8132
  %80 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !8132
  %81 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %80, i32 0, i32 1, !dbg !8132
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 0, !dbg !8132
  store i8* %v.0, i8** %82, align 8, !dbg !8132
  %83 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 1, !dbg !8132
  store i64 %v.1, i64* %83, align 8, !dbg !8132
  %84 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !8132
  store i64 0, i64* %84, align 8, !dbg !8132
  br label %bb12, !dbg !8076

bb28:                                             ; preds = %bb11
  %85 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !8076
  %86 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %85, i32 0, i32 1, !dbg !8076
  %87 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 0, !dbg !8076
  %e.014 = load i64, i64* %87, align 8, !dbg !8076
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 1, !dbg !8076
  %e.115 = load i64, i64* %88, align 8, !dbg !8076, !range !2198, !noundef !27
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 0, !dbg !8076
  store i64 %e.014, i64* %89, align 8, !dbg !8076
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 1, !dbg !8076
  store i64 %e.115, i64* %90, align 8, !dbg !8076
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill16, metadata !8073, metadata !DIExpression()), !dbg !8133
  %91 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !8133
  store i64 %e.014, i64* %91, align 8, !dbg !8133
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !8133
  store i64 %e.115, i64* %92, align 8, !dbg !8133
  %93 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !8133
  %94 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %93, i32 0, i32 1, !dbg !8133
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !8133
  %96 = load i64, i64* %95, align 8, !dbg !8133
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !8133
  %98 = load i64, i64* %97, align 8, !dbg !8133, !range !2198, !noundef !27
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 0, !dbg !8133
  store i64 %96, i64* %99, align 8, !dbg !8133
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 1, !dbg !8133
  store i64 %98, i64* %100, align 8, !dbg !8133
  %101 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !8133
  store i64 1, i64* %101, align 8, !dbg !8133
  br label %bb12, !dbg !8076

bb12:                                             ; preds = %bb30, %bb28
  %102 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !8077
  %_34 = load i64, i64* %102, align 8, !dbg !8077, !range !2078, !noundef !27
  switch i64 %_34, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ], !dbg !8077

bb14:                                             ; preds = %bb12
  unreachable, !dbg !8077

bb13:                                             ; preds = %bb12
  %103 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !8077
  %104 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %103, i32 0, i32 1, !dbg !8077
  %105 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 0, !dbg !8077
  %val.0 = load i8*, i8** %105, align 8, !dbg !8077, !nonnull !27, !noundef !27
  %106 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 1, !dbg !8077
  %val.1 = load i64, i64* %106, align 8, !dbg !8077
  %107 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 0, !dbg !8077
  store i8* %val.0, i8** %107, align 8, !dbg !8077
  %108 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 1, !dbg !8077
  store i64 %val.1, i64* %108, align 8, !dbg !8077
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill24, metadata !7979, metadata !DIExpression()), !dbg !8134
  %109 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !8134
  store i8* %val.0, i8** %109, align 8, !dbg !8134
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !8134
  store i64 %val.1, i64* %110, align 8, !dbg !8134
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !7975, metadata !DIExpression()), !dbg !8135
; call alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h547b790299643953E"({ i8*, i64 }* align 8 %self, i8* %val.0, i64 %val.1, i64 %cap12), !dbg !8136
  br label %bb16, !dbg !8136

bb15:                                             ; preds = %bb12
  %111 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !8137
  %112 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %111, i32 0, i32 1, !dbg !8137
  %113 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 0, !dbg !8137
  %residual.018 = load i64, i64* %113, align 8, !dbg !8137
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 1, !dbg !8137
  %residual.119 = load i64, i64* %114, align 8, !dbg !8137, !range !2198, !noundef !27
  %115 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 0, !dbg !8137
  store i64 %residual.018, i64* %115, align 8, !dbg !8137
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 1, !dbg !8137
  store i64 %residual.119, i64* %116, align 8, !dbg !8137
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill20, metadata !7977, metadata !DIExpression()), !dbg !8138
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !8138
  store i64 %residual.018, i64* %117, align 8, !dbg !8138
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !8138
  store i64 %residual.119, i64* %118, align 8, !dbg !8138
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !8088
  %e.021 = load i64, i64* %119, align 8, !dbg !8088
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !8088
  %e.122 = load i64, i64* %120, align 8, !dbg !8088, !range !2198, !noundef !27
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 0, !dbg !8088
  store i64 %e.021, i64* %121, align 8, !dbg !8088
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 1, !dbg !8088
  store i64 %e.122, i64* %122, align 8, !dbg !8088
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill23, metadata !8084, metadata !DIExpression()), !dbg !8139
; call <T as core::convert::From<T>>::from
  %123 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h11a7bfb25080e112E"(i64 %e.021, i64 %e.122), !dbg !8139
  %_68.0 = extractvalue { i64, i64 } %123, 0, !dbg !8139
  %_68.1 = extractvalue { i64, i64 } %123, 1, !dbg !8139
  br label %bb31, !dbg !8139

bb31:                                             ; preds = %bb15
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !8139
  store i64 %_68.0, i64* %124, align 8, !dbg !8139
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !8139
  store i64 %_68.1, i64* %125, align 8, !dbg !8139
  br label %bb17, !dbg !8140

bb18:                                             ; preds = %bb2, %bb16, %bb17
  %126 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !8142
  %127 = load i64, i64* %126, align 8, !dbg !8142
  %128 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !8142
  %129 = load i64, i64* %128, align 8, !dbg !8142, !range !5620, !noundef !27
  %130 = insertvalue { i64, i64 } undef, i64 %127, 0, !dbg !8142
  %131 = insertvalue { i64, i64 } %130, i64 %129, 1, !dbg !8142
  ret { i64, i64 } %131, !dbg !8142

bb16:                                             ; preds = %bb13
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !8143
  store i64 -9223372036854775807, i64* %132, align 8, !dbg !8143
  br label %bb18, !dbg !8142

bb2:                                              ; preds = %bb1
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !8144
  store i64 %_5.0, i64* %133, align 8, !dbg !8144
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !8144
  store i64 %_5.1, i64* %134, align 8, !dbg !8144
  br label %bb18, !dbg !8117
}

; alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h547b790299643953E"({ i8*, i64 }* align 8 %self, i8* %ptr.0, i64 %ptr.1, i64 %cap) unnamed_addr #1 !dbg !8145 {
start:
  %ptr.dbg.spill6 = alloca i8*, align 8
  %ptr.dbg.spill5 = alloca i8*, align 8
  %ptr.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }, align 8
  %cap.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_17 = alloca i8*, align 8
  %self1 = alloca i8*, align 8
  %_4 = alloca i8*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !8149, metadata !DIExpression()), !dbg !8152
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store i8* %ptr.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !8150, metadata !DIExpression()), !dbg !8153
  store i64 %cap, i64* %cap.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !8151, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.declare(metadata i8** %self1, metadata !8155, metadata !DIExpression()), !dbg !8159
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !8160
  store i8* %ptr.0, i8** %2, align 8, !dbg !8160
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !8160
  store i64 %ptr.1, i64* %3, align 8, !dbg !8160
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill2, metadata !8161, metadata !DIExpression()), !dbg !8166
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !8166
  store i8* %ptr.0, i8** %4, align 8, !dbg !8166
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !8166
  store i64 %ptr.1, i64* %5, align 8, !dbg !8166
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !8167, metadata !DIExpression()), !dbg !8171
  %_12.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !8171
  %ptr = bitcast [0 x i8]* %_12.0 to i8*, !dbg !8166
  store i8* %ptr, i8** %ptr.dbg.spill4, align 8, !dbg !8166
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill4, metadata !8173, metadata !DIExpression()), !dbg !8177
  store i8* %ptr, i8** %self1, align 8, !dbg !8177
  %_16 = load i8*, i8** %self1, align 8, !dbg !8159
  store i8* %_16, i8** %ptr.dbg.spill5, align 8, !dbg !8159
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill5, metadata !8179, metadata !DIExpression()), !dbg !8185
  store i8* %_16, i8** %ptr.dbg.spill6, align 8, !dbg !8185
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill6, metadata !8187, metadata !DIExpression()), !dbg !8191
  store i8* %_16, i8** %_17, align 8, !dbg !8191
  %6 = load i8*, i8** %_17, align 8, !dbg !8185, !nonnull !27, !noundef !27
  store i8* %6, i8** %_4, align 8, !dbg !8185
  %7 = bitcast { i8*, i64 }* %self to i8**, !dbg !8193
  %8 = load i8*, i8** %_4, align 8, !dbg !8193, !nonnull !27, !noundef !27
  store i8* %8, i8** %7, align 8, !dbg !8193
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !8194
  store i64 %cap, i64* %9, align 8, !dbg !8194
  ret void, !dbg !8195
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hb0febb4a687731a7E"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !8196 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !8200, metadata !DIExpression()), !dbg !8203
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !8201, metadata !DIExpression()), !dbg !8204
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !8202, metadata !DIExpression()), !dbg !8205
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h5f98633d17b03dfaE"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !8206
  br label %bb1, !dbg !8206

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4, !dbg !8206

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !8207

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17ha274487d488f6a79E"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !8208
  br label %bb3, !dbg !8208

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !8209
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17ha274487d488f6a79E"({ i8*, i64 }* align 8 %slf, i64 %len, i64 %additional) unnamed_addr #6 !dbg !8210 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %slf.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %slf, { i8*, i64 }** %slf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %slf.dbg.spill, metadata !8214, metadata !DIExpression()), !dbg !8217
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !8215, metadata !DIExpression()), !dbg !8218
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !8216, metadata !DIExpression()), !dbg !8219
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hf3a653a19cd8cfe1E"({ i8*, i64 }* align 8 %slf, i64 %len, i64 %additional), !dbg !8220
  %_5.0 = extractvalue { i64, i64 } %0, 0, !dbg !8220
  %_5.1 = extractvalue { i64, i64 } %0, 1, !dbg !8220
  br label %bb1, !dbg !8220

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h8a1fc2a01b87d06fE(i64 %_5.0, i64 %_5.1), !dbg !8221
  br label %bb2, !dbg !8221

bb2:                                              ; preds = %bb1
  ret void, !dbg !8222
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc3b1727931ad6cc2E"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1) unnamed_addr #0 !dbg !8223 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca { i64, i64 }*, align 8
  %self.dbg.spill7 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %self3 = alloca i64, align 8
  %self2 = alloca i64, align 8
  %layout1 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !8227, metadata !DIExpression()), !dbg !8230
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !8228, metadata !DIExpression()), !dbg !8231
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !8229, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout1, metadata !8233, metadata !DIExpression()), !dbg !8239
  call void @llvm.dbg.declare(metadata i64* %self2, metadata !8241, metadata !DIExpression()), !dbg !8245
  call void @llvm.dbg.declare(metadata i64* %self3, metadata !8252, metadata !DIExpression()), !dbg !8256
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill4, align 8, !dbg !8257
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill4, metadata !8258, metadata !DIExpression()), !dbg !8262
  %4 = bitcast { i64, i64 }* %layout to i64*, !dbg !8262
  %_4 = load i64, i64* %4, align 8, !dbg !8262
  %5 = icmp eq i64 %_4, 0, !dbg !8257
  br i1 %5, label %bb2, label %bb1, !dbg !8257

bb2:                                              ; preds = %start
  br label %bb3, !dbg !8263

bb1:                                              ; preds = %start
  store i8* %ptr, i8** %self.dbg.spill5, align 8, !dbg !8264
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !8265, metadata !DIExpression()), !dbg !8269
  store i8* %ptr, i8** %ptr.dbg.spill6, align 8, !dbg !8269
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill6, metadata !8238, metadata !DIExpression()), !dbg !8239
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !8270
  %7 = load i64, i64* %6, align 8, !dbg !8270
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !8270
  %9 = load i64, i64* %8, align 8, !dbg !8270, !range !5681, !noundef !27
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 0, !dbg !8270
  store i64 %7, i64* %10, align 8, !dbg !8270
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !8270
  store i64 %9, i64* %11, align 8, !dbg !8270
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill7, align 8, !dbg !8239
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill7, metadata !8271, metadata !DIExpression()), !dbg !8275
  %12 = bitcast { i64, i64 }* %layout1 to i64*, !dbg !8275
  %_11 = load i64, i64* %12, align 8, !dbg !8275
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill8, align 8, !dbg !8239
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill8, metadata !8249, metadata !DIExpression()), !dbg !8277
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !8277
  %14 = load i64, i64* %13, align 8, !dbg !8277, !range !5681, !noundef !27
  store i64 %14, i64* %self3, align 8, !dbg !8277
  %_18 = load i64, i64* %self3, align 8, !dbg !8256, !range !5681, !noundef !27
  store i64 %_18, i64* %n.dbg.spill, align 8, !dbg !8256
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !8278, metadata !DIExpression()), !dbg !8285
  store i64 %_18, i64* %self2, align 8, !dbg !8285
  %_13 = load i64, i64* %self2, align 8, !dbg !8245
  call void @__rust_dealloc(i8* %ptr, i64 %_11, i64 %_13) #21, !dbg !8239
  br label %bb4, !dbg !8239

bb4:                                              ; preds = %bb1
  br label %bb3, !dbg !8263

bb3:                                              ; preds = %bb2, %bb4
  ret void, !dbg !8287
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17hd6d35bed8b9eab4dE"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #0 !dbg !8288 {
start:
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %old_layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !8292, metadata !DIExpression()), !dbg !8296
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !8293, metadata !DIExpression()), !dbg !8297
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 0
  store i64 %old_layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 1
  store i64 %old_layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout.dbg.spill, metadata !8294, metadata !DIExpression()), !dbg !8298
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !8295, metadata !DIExpression()), !dbg !8299
; call alloc::alloc::Global::grow_impl
  %4 = call { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17hf6d1afb61bd824ddE(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false), !dbg !8300
  %5 = extractvalue { i8*, i64 } %4, 0, !dbg !8300
  %6 = extractvalue { i8*, i64 } %4, 1, !dbg !8300
  br label %bb1, !dbg !8300

bb1:                                              ; preds = %start
  %7 = insertvalue { i8*, i64 } undef, i8* %5, 0, !dbg !8301
  %8 = insertvalue { i8*, i64 } %7, i64 %6, 1, !dbg !8301
  ret { i8*, i64 } %8, !dbg !8301
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hc12985ca999b6941E"(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !8302 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !8304, metadata !DIExpression()), !dbg !8306
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !8305, metadata !DIExpression()), !dbg !8307
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3b70ffcab534b8dfE(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false), !dbg !8308
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !8308
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !8308
  br label %bb1, !dbg !8308

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !8309
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !8309
  ret { i8*, i64 } %6, !dbg !8309
}

; <u8 as proc_macro::bridge::rpc::Encode<S>>::encode
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN63_$LT$u8$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h18dcaaf63bdfe937E"(i8 %self, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %_3) unnamed_addr #1 !dbg !8310 {
start:
  %_3.dbg.spill = alloca {}*, align 8
  %w.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %self.dbg.spill = alloca i8, align 1
  store i8 %self, i8* %self.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %self.dbg.spill, metadata !8315, metadata !DIExpression()), !dbg !8318
  store %"proc_macro::bridge::buffer::Buffer"* %w, %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, metadata !8316, metadata !DIExpression()), !dbg !8319
  store {}* %_3, {}** %_3.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %_3.dbg.spill, metadata !8317, metadata !DIExpression()), !dbg !8320
; call proc_macro::bridge::buffer::Buffer::push
  call void @_ZN10proc_macro6bridge6buffer6Buffer4push17h641e142eab244a8dE(%"proc_macro::bridge::buffer::Buffer"* align 8 %w, i8 %self), !dbg !8321
  br label %bb1, !dbg !8321

bb1:                                              ; preds = %start
  ret void, !dbg !8322
}

; <u32 as proc_macro::bridge::rpc::Encode<S>>::encode
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN64_$LT$u32$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h450f1f7327497954E"(i32 %self, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %_3) unnamed_addr #1 !dbg !8323 {
start:
  %self.dbg.spill3 = alloca i32, align 4
  %self.dbg.spill2 = alloca i32, align 4
  %self.dbg.spill1 = alloca i32, align 4
  %_3.dbg.spill = alloca {}*, align 8
  %w.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %self.dbg.spill = alloca i32, align 4
  %_8 = alloca [4 x i8], align 1
  store i32 %self, i32* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill, metadata !8328, metadata !DIExpression()), !dbg !8331
  store %"proc_macro::bridge::buffer::Buffer"* %w, %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, metadata !8329, metadata !DIExpression()), !dbg !8332
  store {}* %_3, {}** %_3.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %_3.dbg.spill, metadata !8330, metadata !DIExpression()), !dbg !8333
  store i32 %self, i32* %self.dbg.spill1, align 4, !dbg !8334
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill1, metadata !8335, metadata !DIExpression()), !dbg !8342
  store i32 %self, i32* %self.dbg.spill2, align 4, !dbg !8342
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill2, metadata !8343, metadata !DIExpression()), !dbg !8349
  store i32 %self, i32* %self.dbg.spill3, align 4, !dbg !8349
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill3, metadata !8351, metadata !DIExpression()), !dbg !8355
  %0 = bitcast [4 x i8]* %_8 to i32*, !dbg !8355
  store i32 %self, i32* %0, align 1, !dbg !8355
  br label %bb2, !dbg !8355

bb2:                                              ; preds = %start
; call proc_macro::bridge::buffer::Buffer::extend_from_array
  call void @_ZN10proc_macro6bridge6buffer6Buffer17extend_from_array17h2a6c1ed1be41c0e6E(%"proc_macro::bridge::buffer::Buffer"* align 8 %w, [4 x i8]* align 1 %_8), !dbg !8356
  br label %bb1, !dbg !8356

bb1:                                              ; preds = %bb2
  ret void, !dbg !8357
}

; <alloc::string::String as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17he4dfac28b3bf6b8dE"(%"alloc::string::String"* align 8 %self) unnamed_addr #0 !dbg !8358 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %len.dbg.spill3 = alloca i64, align 8
  %data.dbg.spill2 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %self.dbg.spill = alloca %"alloc::string::String"*, align 8
  %_18 = alloca { i8*, i64 }, align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store %"alloc::string::String"* %self, %"alloc::string::String"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill, metadata !8363, metadata !DIExpression()), !dbg !8364
  %_5 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*, !dbg !8365
  store %"alloc::vec::Vec<u8>"* %_5, %"alloc::vec::Vec<u8>"** %self.dbg.spill1, align 8, !dbg !8365
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill1, metadata !8366, metadata !DIExpression()), !dbg !8370
; call alloc::vec::Vec<T,A>::as_ptr
  %data = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf5c71e8a33b2e895E"(%"alloc::vec::Vec<u8>"* align 8 %_5), !dbg !8370
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !8370
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !8371, metadata !DIExpression()), !dbg !8379
  br label %bb1, !dbg !8370

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %_5, i32 0, i32 1, !dbg !8370
  %len = load i64, i64* %1, align 8, !dbg !8370
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !8370
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !8375, metadata !DIExpression()), !dbg !8379
  store i8* %data, i8** %data.dbg.spill2, align 8, !dbg !8379
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill2, metadata !8381, metadata !DIExpression()), !dbg !8386
  store i64 %len, i64* %len.dbg.spill3, align 8, !dbg !8379
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill3, metadata !8385, metadata !DIExpression()), !dbg !8386
  store i8* %data, i8** %self.dbg.spill4, align 8, !dbg !8386
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !8388, metadata !DIExpression()), !dbg !8392
  %data_address = bitcast i8* %data to {}*, !dbg !8392
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !8392
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !8394, metadata !DIExpression()), !dbg !8399
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !8386
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !8398, metadata !DIExpression()), !dbg !8399
  %2 = bitcast { i8*, i64 }* %_18 to {}**, !dbg !8399
  store {}* %data_address, {}** %2, align 8, !dbg !8399
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_18, i32 0, i32 1, !dbg !8399
  store i64 %len, i64* %3, align 8, !dbg !8399
  %4 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_17 to { i8*, i64 }*, !dbg !8399
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_18, i32 0, i32 0, !dbg !8399
  %6 = load i8*, i8** %5, align 8, !dbg !8399
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_18, i32 0, i32 1, !dbg !8399
  %8 = load i64, i64* %7, align 8, !dbg !8399
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %4, i32 0, i32 0, !dbg !8399
  store i8* %6, i8** %9, align 8, !dbg !8399
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %4, i32 0, i32 1, !dbg !8399
  store i64 %8, i64* %10, align 8, !dbg !8399
  %11 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_17 to { [0 x i8]*, i64 }*, !dbg !8399
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0, !dbg !8399
  %_10.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !dbg !8399
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1, !dbg !8399
  %_10.1 = load i64, i64* %13, align 8, !dbg !8399
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !8365
  store [0 x i8]* %_10.0, [0 x i8]** %14, align 8, !dbg !8365
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !8365
  store i64 %_10.1, i64* %15, align 8, !dbg !8365
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !8401, metadata !DIExpression()), !dbg !8405
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !8405
  store [0 x i8]* %_10.0, [0 x i8]** %16, align 8, !dbg !8405
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !8405
  store i64 %_10.1, i64* %17, align 8, !dbg !8405
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !8405
  %19 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !8405, !nonnull !27, !align !608, !noundef !27
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !8405
  %21 = load i64, i64* %20, align 8, !dbg !8405
  br label %bb2, !dbg !8405

bb2:                                              ; preds = %bb1
  %22 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %19, 0, !dbg !8407
  %23 = insertvalue { [0 x i8]*, i64 } %22, i64 %21, 1, !dbg !8407
  ret { [0 x i8]*, i64 } %23, !dbg !8407
}

; <usize as proc_macro::bridge::rpc::Encode<S>>::encode
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN66_$LT$usize$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17hd7e90b4155a30b1eE"(i64 %self, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %_3) unnamed_addr #1 !dbg !8408 {
start:
  %self.dbg.spill3 = alloca i64, align 8
  %self.dbg.spill2 = alloca i64, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %_3.dbg.spill = alloca {}*, align 8
  %w.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %self.dbg.spill = alloca i64, align 8
  %_8 = alloca [8 x i8], align 1
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !8413, metadata !DIExpression()), !dbg !8416
  store %"proc_macro::bridge::buffer::Buffer"* %w, %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, metadata !8414, metadata !DIExpression()), !dbg !8417
  store {}* %_3, {}** %_3.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %_3.dbg.spill, metadata !8415, metadata !DIExpression()), !dbg !8418
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !8419
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !8420, metadata !DIExpression()), !dbg !8426
  store i64 %self, i64* %self.dbg.spill2, align 8, !dbg !8426
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill2, metadata !8427, metadata !DIExpression()), !dbg !8433
  store i64 %self, i64* %self.dbg.spill3, align 8, !dbg !8433
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill3, metadata !8435, metadata !DIExpression()), !dbg !8439
  %0 = bitcast [8 x i8]* %_8 to i64*, !dbg !8439
  store i64 %self, i64* %0, align 1, !dbg !8439
  br label %bb2, !dbg !8439

bb2:                                              ; preds = %start
; call proc_macro::bridge::buffer::Buffer::extend_from_array
  call void @_ZN10proc_macro6bridge6buffer6Buffer17extend_from_array17h52eeff7a999f4e59E(%"proc_macro::bridge::buffer::Buffer"* align 8 %w, [8 x i8]* align 1 %_8), !dbg !8440
  br label %bb1, !dbg !8440

bb1:                                              ; preds = %bb2
  ret void, !dbg !8441
}

; <u32 as proc_macro::bridge::rpc::DecodeMut<S>>::decode
; Function Attrs: nonlazybind uwtable
define internal i32 @"_ZN67_$LT$u32$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17h02cdbdd2aee070bbE"({ [0 x i8]*, i64 }* align 8 %r, {}* align 1 %_2) unnamed_addr #1 !dbg !8442 {
start:
  %0 = alloca i32, align 4
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_2.dbg.spill = alloca {}*, align 8
  %r.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %_27 = alloca [4 x i8], align 1
  %bytes2 = alloca [4 x i8], align 1
  %_22 = alloca { i64, i64 }, align 8
  %bytes1 = alloca [4 x i8], align 1
  %bytes = alloca [4 x i8], align 1
  store { [0 x i8]*, i64 }* %r, { [0 x i8]*, i64 }** %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %r.dbg.spill, metadata !8447, metadata !DIExpression()), !dbg !8451
  store {}* %_2, {}** %_2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %_2.dbg.spill, metadata !8450, metadata !DIExpression()), !dbg !8452
  call void @llvm.dbg.declare(metadata [4 x i8]* %bytes, metadata !8448, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.declare(metadata [4 x i8]* %bytes1, metadata !8454, metadata !DIExpression()), !dbg !8460
  call void @llvm.dbg.declare(metadata [4 x i8]* %bytes2, metadata !8462, metadata !DIExpression()), !dbg !8466
  %1 = getelementptr inbounds [4 x i8], [4 x i8]* %bytes, i64 0, i64 0, !dbg !8468
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 4, i1 false), !dbg !8468
  %_5.0 = bitcast [4 x i8]* %bytes to [0 x i8]*, !dbg !8469
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %r, i32 0, i32 0, !dbg !8470
  %_18.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !dbg !8470, !nonnull !27, !align !608, !noundef !27
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %r, i32 0, i32 1, !dbg !8470
  %_18.1 = load i64, i64* %3, align 8, !dbg !8470
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !8470
  store [0 x i8]* %_18.0, [0 x i8]** %4, align 8, !dbg !8470
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !8470
  store i64 %_18.1, i64* %5, align 8, !dbg !8470
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !8471, metadata !DIExpression()), !dbg !8478
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !8478
  store [0 x i8]* %_18.0, [0 x i8]** %6, align 8, !dbg !8478
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !8478
  store i64 %_18.1, i64* %7, align 8, !dbg !8478
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !8479, metadata !DIExpression()), !dbg !8486
  %8 = bitcast { i64, i64 }* %_22 to i64*, !dbg !8486
  store i64 0, i64* %8, align 8, !dbg !8486
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_22, i32 0, i32 1, !dbg !8486
  store i64 4, i64* %9, align 8, !dbg !8486
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_22, i32 0, i32 0, !dbg !8486
  %11 = load i64, i64* %10, align 8, !dbg !8486
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_22, i32 0, i32 1, !dbg !8486
  %13 = load i64, i64* %12, align 8, !dbg !8486
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %14 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h3c5f3b3dceabe859E"(i64 %11, i64 %13, [0 x i8]* align 1 %_18.0, i64 %_18.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc226 to %"core::panic::location::Location"*)), !dbg !8486
  %_9.0 = extractvalue { [0 x i8]*, i64 } %14, 0, !dbg !8486
  %_9.1 = extractvalue { [0 x i8]*, i64 } %14, 1, !dbg !8486
  br label %bb2, !dbg !8486

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::copy_from_slice
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hfd2d90aaa2887edeE"([0 x i8]* align 1 %_5.0, i64 4, [0 x i8]* align 1 %_9.0, i64 %_9.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc226 to %"core::panic::location::Location"*)), !dbg !8469
  br label %bb1, !dbg !8469

bb1:                                              ; preds = %bb2
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %r, i32 0, i32 0, !dbg !8488
  %_19.0 = load [0 x i8]*, [0 x i8]** %15, align 8, !dbg !8488, !nonnull !27, !align !608, !noundef !27
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %r, i32 0, i32 1, !dbg !8488
  %_19.1 = load i64, i64* %16, align 8, !dbg !8488
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !8488
  store [0 x i8]* %_19.0, [0 x i8]** %17, align 8, !dbg !8488
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !8488
  store i64 %_19.1, i64* %18, align 8, !dbg !8488
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !8489, metadata !DIExpression()), !dbg !8501
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
  %19 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hb301fe5216e6dc3bE"(i64 4, [0 x i8]* align 1 %_19.0, i64 %_19.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc226 to %"core::panic::location::Location"*)), !dbg !8501
  %_14.0 = extractvalue { [0 x i8]*, i64 } %19, 0, !dbg !8501
  %_14.1 = extractvalue { [0 x i8]*, i64 } %19, 1, !dbg !8501
  br label %bb3, !dbg !8501

bb3:                                              ; preds = %bb1
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %r, i32 0, i32 0, !dbg !8502
  store [0 x i8]* %_14.0, [0 x i8]** %20, align 8, !dbg !8502
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %r, i32 0, i32 1, !dbg !8502
  store i64 %_14.1, i64* %21, align 8, !dbg !8502
  %22 = bitcast [4 x i8]* %bytes1 to i8*, !dbg !8503
  %23 = bitcast [4 x i8]* %bytes to i8*, !dbg !8503
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 4, i1 false), !dbg !8503
  %24 = bitcast [4 x i8]* %bytes2 to i8*, !dbg !8460
  %25 = bitcast [4 x i8]* %bytes1 to i8*, !dbg !8460
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %25, i64 4, i1 false), !dbg !8460
  %26 = bitcast [4 x i8]* %_27 to i8*, !dbg !8466
  %27 = bitcast [4 x i8]* %bytes2 to i8*, !dbg !8466
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %27, i64 4, i1 false), !dbg !8466
  %28 = bitcast i32* %0 to [4 x i8]*, !dbg !8466
  %29 = bitcast [4 x i8]* %28 to i8*, !dbg !8466
  %30 = bitcast [4 x i8]* %_27 to i8*, !dbg !8466
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %30, i64 4, i1 false), !dbg !8466
  %31 = load i32, i32* %0, align 4, !dbg !8466
  br label %bb4, !dbg !8466

bb4:                                              ; preds = %bb3
  ret i32 %31, !dbg !8504
}

; <&str as proc_macro::bridge::rpc::Encode<S>>::encode
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN68_$LT$$RF$str$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17hba6464c36be37697E"([0 x i8]* align 1 %self.0, i64 %self.1, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s) unnamed_addr #1 !dbg !8505 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill = alloca {}*, align 8
  %w.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !8510, metadata !DIExpression()), !dbg !8513
  store %"proc_macro::bridge::buffer::Buffer"* %w, %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, metadata !8511, metadata !DIExpression()), !dbg !8514
  store {}* %s, {}** %s.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %s.dbg.spill, metadata !8512, metadata !DIExpression()), !dbg !8515
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !8516
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8, !dbg !8516
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !8516
  store i64 %self.1, i64* %4, align 8, !dbg !8516
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !8517, metadata !DIExpression()), !dbg !8521
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !8521
  store [0 x i8]* %self.0, [0 x i8]** %5, align 8, !dbg !8521
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !8521
  store i64 %self.1, i64* %6, align 8, !dbg !8521
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !8521
  %_6.0 = load [0 x i8]*, [0 x i8]** %7, align 8, !dbg !8521, !nonnull !27, !align !608, !noundef !27
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !8521
  %_6.1 = load i64, i64* %8, align 8, !dbg !8521
  br label %bb2, !dbg !8521

bb2:                                              ; preds = %start
; call <&[u8] as proc_macro::bridge::rpc::Encode<S>>::encode
  call void @"_ZN77_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17hdf1b50c705a4a865E"([0 x i8]* align 1 %_6.0, i64 %_6.1, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s), !dbg !8516
  br label %bb1, !dbg !8516

bb1:                                              ; preds = %bb2
  ret void, !dbg !8522
}

; <() as proc_macro::bridge::rpc::Encode<S>>::encode
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN69_$LT$$LP$$RP$$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h89c64569fb1c86c5E"(%"proc_macro::bridge::buffer::Buffer"* align 8 %_2, {}* align 1 %_3) unnamed_addr #1 !dbg !8523 {
start:
  %_3.dbg.spill = alloca {}*, align 8
  %_2.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %self.dbg.spill = alloca {}, align 1
  call void @llvm.dbg.declare(metadata {}* %self.dbg.spill, metadata !8528, metadata !DIExpression()), !dbg !8531
  store %"proc_macro::bridge::buffer::Buffer"* %_2, %"proc_macro::bridge::buffer::Buffer"** %_2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %_2.dbg.spill, metadata !8529, metadata !DIExpression()), !dbg !8532
  store {}* %_3, {}** %_3.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %_3.dbg.spill, metadata !8530, metadata !DIExpression()), !dbg !8533
  ret void, !dbg !8534
}

; <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"core::ffi::c_str::CStr"*, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h56c45477f0e1c3baE"({ i8*, i64 }* align 8 %self) unnamed_addr #0 !dbg !8535 {
start:
  %bytes.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { i8*, i64 }*, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_8 = alloca { i8*, i64 }, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !8542, metadata !DIExpression()), !dbg !8543
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill1, align 8, !dbg !8544
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill1, metadata !8545, metadata !DIExpression()), !dbg !8550
  %_5 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !8550
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 0, !dbg !8550
  %_6.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !8550, !nonnull !27, !align !608, !noundef !27
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 1, !dbg !8550
  %_6.1 = load i64, i64* %1, align 8, !dbg !8550
  %2 = bitcast [0 x i8]* %_6.0 to i8*, !dbg !8550
  %_7.0 = bitcast i8* %2 to [0 x i8]*, !dbg !8550
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %bytes.dbg.spill, i32 0, i32 0, !dbg !8544
  store [0 x i8]* %_7.0, [0 x i8]** %3, align 8, !dbg !8544
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %bytes.dbg.spill, i32 0, i32 1, !dbg !8544
  store i64 %_6.1, i64* %4, align 8, !dbg !8544
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %bytes.dbg.spill, metadata !8551, metadata !DIExpression()), !dbg !8557
  %5 = bitcast { i8*, i64 }* %_8 to { [0 x i8]*, i64 }*, !dbg !8557
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0, !dbg !8557
  store [0 x i8]* %_7.0, [0 x i8]** %6, align 8, !dbg !8557
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1, !dbg !8557
  store i64 %_6.1, i64* %7, align 8, !dbg !8557
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_8, i32 0, i32 0, !dbg !8557
  %9 = load i8*, i8** %8, align 8, !dbg !8557, !nonnull !27, !align !608, !noundef !27
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_8, i32 0, i32 1, !dbg !8557
  %11 = load i64, i64* %10, align 8, !dbg !8557
; call core::intrinsics::const_eval_select
  %12 = call { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core10intrinsics17const_eval_select17h9e040f661d44916eE(i8* align 1 %9, i64 %11), !dbg !8557
  %13 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %12, 0, !dbg !8557
  %14 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %12, 1, !dbg !8557
  br label %bb1, !dbg !8557

bb1:                                              ; preds = %start
  %15 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } undef, %"core::ffi::c_str::CStr"* %13, 0, !dbg !8559
  %16 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } %15, i64 %14, 1, !dbg !8559
  ret { %"core::ffi::c_str::CStr"*, i64 } %16, !dbg !8559
}

; <proc_macro::bridge::buffer::Buffer as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN76_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf82cae4ee5e60ad4E"(%"proc_macro::bridge::buffer::Buffer"* align 8 %self) unnamed_addr #0 !dbg !8560 {
start:
  %dest.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %self.dbg.spill1 = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %self.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %_10 = alloca %"alloc::vec::Vec<u8>", align 8
  %_9 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  %_6 = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  %b = alloca %"proc_macro::bridge::buffer::Buffer", align 8
  store %"proc_macro::bridge::buffer::Buffer"* %self, %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill, metadata !8563, metadata !DIExpression()), !dbg !8566
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"* %b, metadata !8564, metadata !DIExpression()), !dbg !8567
  store %"proc_macro::bridge::buffer::Buffer"* %self, %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill1, align 8, !dbg !8568
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill1, metadata !8569, metadata !DIExpression()), !dbg !8572
  store %"proc_macro::bridge::buffer::Buffer"* %self, %"proc_macro::bridge::buffer::Buffer"** %dest.dbg.spill, align 8, !dbg !8572
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %dest.dbg.spill, metadata !8573, metadata !DIExpression()), !dbg !8577
  %_11.0 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 0), align 8, !dbg !8579, !nonnull !27, !noundef !27
  %_11.1 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 1), align 8, !dbg !8579
  %0 = bitcast %"alloc::vec::Vec<u8>"* %_10 to { i8*, i64 }*, !dbg !8579
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !8579
  store i8* %_11.0, i8** %1, align 8, !dbg !8579
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !8579
  store i64 %_11.1, i64* %2, align 8, !dbg !8579
  %3 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %_10, i32 0, i32 1, !dbg !8579
  store i64 0, i64* %3, align 8, !dbg !8579
; call <proc_macro::bridge::buffer::Buffer as core::convert::From<alloc::vec::Vec<u8>>>::from
  call void @"_ZN107_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$core..convert..From$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$4from17hae087b0765d8b4d8E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %_9, %"alloc::vec::Vec<u8>"* %_10), !dbg !8586
  br label %bb3, !dbg !8586

bb3:                                              ; preds = %start
; call core::mem::replace
  call void @_ZN4core3mem7replace17haedb1d51e20a5159E(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer") %b, %"proc_macro::bridge::buffer::Buffer"* align 8 %self, %"proc_macro::bridge::buffer::Buffer"* %_9), !dbg !8577
  br label %bb2, !dbg !8577

bb2:                                              ; preds = %bb3
  %4 = getelementptr inbounds %"proc_macro::bridge::buffer::Buffer", %"proc_macro::bridge::buffer::Buffer"* %b, i32 0, i32 4, !dbg !8587
  %_5 = load void (%"proc_macro::bridge::buffer::Buffer"*)*, void (%"proc_macro::bridge::buffer::Buffer"*)** %4, align 8, !dbg !8587, !nonnull !27, !noundef !27
  %5 = bitcast %"proc_macro::bridge::buffer::Buffer"* %_6 to i8*, !dbg !8588
  %6 = bitcast %"proc_macro::bridge::buffer::Buffer"* %b to i8*, !dbg !8588
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 40, i1 false), !dbg !8588
  call void %_5(%"proc_macro::bridge::buffer::Buffer"* byval(%"proc_macro::bridge::buffer::Buffer") %_6), !dbg !8587
  br label %bb1, !dbg !8587

bb1:                                              ; preds = %bb2
  ret void, !dbg !8589
}

; <(A,B) as proc_macro::bridge::rpc::DecodeMut<S>>::decode
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$$LP$A$C$B$RP$$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17hd565458767a4d1cdE"({ %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>", i32 }* sret({ %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>", i32 }) %0, { [0 x i8]*, i64 }* align 8 %r, {}* align 1 %s) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !8590 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %s.dbg.spill = alloca {}*, align 8
  %r.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %_3 = alloca %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>", align 4
  store { [0 x i8]*, i64 }* %r, { [0 x i8]*, i64 }** %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %r.dbg.spill, metadata !8599, metadata !DIExpression()), !dbg !8604
  store {}* %s, {}** %s.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %s.dbg.spill, metadata !8600, metadata !DIExpression()), !dbg !8605
; call <proc_macro::bridge::ExpnGlobals<Span> as proc_macro::bridge::rpc::DecodeMut<S>>::decode
  call void @"_ZN107_$LT$proc_macro..bridge..ExpnGlobals$LT$Span$GT$$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17h8296fd1bf7e4ce1dE"(%"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>"* sret(%"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>") %_3, { [0 x i8]*, i64 }* align 8 %r, {}* align 1 %s), !dbg !8606
  br label %bb1, !dbg !8606

bb1:                                              ; preds = %start
; invoke <proc_macro::bridge::client::TokenStream as proc_macro::bridge::rpc::DecodeMut<S>>::decode
  %_6 = invoke i32 @"_ZN103_$LT$proc_macro..bridge..client..TokenStream$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17he5ea93e573f0561cE"({ [0 x i8]*, i64 }* align 8 %r, {}* align 1 %s)
          to label %bb2 unwind label %cleanup, !dbg !8607, !range !642

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !8608

cleanup:                                          ; preds = %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb2:                                              ; preds = %bb1
  %7 = bitcast { %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>", i32 }* %0 to %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>"*, !dbg !8609
  %8 = bitcast %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>"* %7 to i8*, !dbg !8609
  %9 = bitcast %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>"* %_3 to i8*, !dbg !8609
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 12, i1 false), !dbg !8609
  %10 = getelementptr inbounds { %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>", i32 }, { %"proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>", i32 }* %0, i32 0, i32 1, !dbg !8609
  store i32 %_6, i32* %10, align 4, !dbg !8609
  ret void, !dbg !8610

bb4:                                              ; preds = %bb3
  %11 = bitcast { i8*, i32 }* %1 to i8**, !dbg !8611
  %12 = load i8*, i8** %11, align 8, !dbg !8611
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !8611
  %14 = load i32, i32* %13, align 8, !dbg !8611
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0, !dbg !8611
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1, !dbg !8611
  resume { i8*, i32 } %16, !dbg !8611
}

; <&[u8] as proc_macro::bridge::rpc::Encode<S>>::encode
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17hdf1b50c705a4a865E"([0 x i8]* align 1 %self.0, i64 %self.1, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s) unnamed_addr #1 !dbg !8612 {
start:
  %xs.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %s.dbg.spill = alloca {}*, align 8
  %w.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_10 = alloca i8*, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !8617, metadata !DIExpression()), !dbg !8620
  store %"proc_macro::bridge::buffer::Buffer"* %w, %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, metadata !8618, metadata !DIExpression()), !dbg !8621
  store {}* %s, {}** %s.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %s.dbg.spill, metadata !8619, metadata !DIExpression()), !dbg !8622
; call <usize as proc_macro::bridge::rpc::Encode<S>>::encode
  call void @"_ZN66_$LT$usize$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17hd7e90b4155a30b1eE"(i64 %self.1, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s), !dbg !8623
  br label %bb1, !dbg !8623

bb1:                                              ; preds = %start
  store %"proc_macro::bridge::buffer::Buffer"* %w, %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill1, align 8, !dbg !8624
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %self.dbg.spill1, metadata !8625, metadata !DIExpression()), !dbg !8633
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %xs.dbg.spill, i32 0, i32 0, !dbg !8634
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8, !dbg !8634
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %xs.dbg.spill, i32 0, i32 1, !dbg !8634
  store i64 %self.1, i64* %3, align 8, !dbg !8634
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %xs.dbg.spill, metadata !8632, metadata !DIExpression()), !dbg !8633
; call proc_macro::bridge::buffer::Buffer::extend_from_slice
  call void @_ZN10proc_macro6bridge6buffer6Buffer17extend_from_slice17hfbb611c0c268f353E(%"proc_macro::bridge::buffer::Buffer"* align 8 %w, [0 x i8]* align 1 %self.0, i64 %self.1), !dbg !8633
  br label %bb3, !dbg !8633

bb3:                                              ; preds = %bb1
  %4 = bitcast i8** %_10 to {}**, !dbg !8633
  store {}* null, {}** %4, align 8, !dbg !8633
  %5 = load i8*, i8** %_10, align 8, !dbg !8624
; call core::result::Result<T,E>::unwrap
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h15db2de438a3931eE"(i8* %5, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc228 to %"core::panic::location::Location"*)), !dbg !8624
  br label %bb2, !dbg !8624

bb2:                                              ; preds = %bb3
  ret void, !dbg !8635
}

; <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop17h61b5a34db5b5ec3eE"(i8** align 8 %self) unnamed_addr #0 !dbg !8636 {
start:
  %self.dbg.spill = alloca i8**, align 8
  %_2 = alloca %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>", align 8
  store i8** %self, i8*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill, metadata !8641, metadata !DIExpression()), !dbg !8642
  %_3 = load i8*, i8** %self, align 8, !dbg !8643, !nonnull !27, !noundef !27
; call std::io::error::repr_bitpacked::decode_repr
  call void @_ZN3std2io5error14repr_bitpacked11decode_repr17h9f34d0bc13560ddeE(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* sret(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>") %_2, i8* %_3), !dbg !8644
  br label %bb1, !dbg !8644

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>>
  call void @"_ZN4core3ptr101drop_in_place$LT$std..io..error..ErrorData$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$$GT$17hfc79006d4189c0f7E"(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_2), !dbg !8645
  br label %bb2, !dbg !8645

bb2:                                              ; preds = %bb1
  ret void, !dbg !8646
}

; <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 %"std::io::error::Custom"* @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop28_$u7b$$u7b$closure$u7d$$u7d$17h298387e370db4930E"(%"std::io::error::Custom"* %p) unnamed_addr #0 !dbg !8647 {
start:
  %ptr.dbg.spill2 = alloca %"std::io::error::Custom"*, align 8
  %ptr.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  %raw.dbg.spill1 = alloca %"std::io::error::Custom"*, align 8
  %raw.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %p.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  %_1.dbg.spill = alloca %"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]", align 1
  %_8 = alloca i64*, align 8
  %_6 = alloca i64*, align 8
  %0 = alloca %"std::io::error::Custom"*, align 8
  call void @llvm.dbg.declare(metadata %"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]"* %_1.dbg.spill, metadata !8652, metadata !DIExpression()), !dbg !8653
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %p.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %p.dbg.spill, metadata !8651, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !8655, metadata !DIExpression()), !dbg !8662
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %raw.dbg.spill, align 8, !dbg !8672
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %raw.dbg.spill, metadata !8669, metadata !DIExpression()), !dbg !8673
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %raw.dbg.spill1, align 8, !dbg !8673
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %raw.dbg.spill1, metadata !8661, metadata !DIExpression()), !dbg !8662
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %ptr.dbg.spill, align 8, !dbg !8662
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %ptr.dbg.spill, metadata !8674, metadata !DIExpression()), !dbg !8680
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %ptr.dbg.spill2, align 8, !dbg !8680
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %ptr.dbg.spill2, metadata !8682, metadata !DIExpression()), !dbg !8688
  %1 = bitcast i64** %_8 to %"std::io::error::Custom"**, !dbg !8688
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %1, align 8, !dbg !8688
  %2 = load i64*, i64** %_8, align 8, !dbg !8680, !nonnull !27, !noundef !27
  store i64* %2, i64** %_6, align 8, !dbg !8680
  %3 = bitcast %"std::io::error::Custom"** %0 to i64**, !dbg !8662
  %4 = load i64*, i64** %_6, align 8, !dbg !8662, !nonnull !27, !noundef !27
  store i64* %4, i64** %3, align 8, !dbg !8662
  %5 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %0, align 8, !dbg !8690, !nonnull !27, !align !1193, !noundef !27
  ret %"std::io::error::Custom"* %5, !dbg !8690
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53ef9a15ff82a4bE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>") %0, %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %self) unnamed_addr #0 !dbg !8691 {
start:
  %v.dbg.spill = alloca { i8*, i64 }, align 8
  %_7 = alloca %"alloc::ffi::c_str::NulError", align 8
  %_6 = alloca %"core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>::Err", align 8
  %e = alloca %"alloc::ffi::c_str::NulError", align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %self, metadata !8726, metadata !DIExpression()), !dbg !8731
  call void @llvm.dbg.declare(metadata %"alloc::ffi::c_str::NulError"* %e, metadata !8729, metadata !DIExpression()), !dbg !8732
  %1 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %self to i64*, !dbg !8733
  %_2 = load i64, i64* %1, align 8, !dbg !8733, !range !2078, !noundef !27
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !8734

bb2:                                              ; preds = %start
  unreachable, !dbg !8733

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %self to %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok"*, !dbg !8735
  %3 = getelementptr inbounds %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok", %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok"* %2, i32 0, i32 1, !dbg !8735
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !8735
  %v.0 = load i8*, i8** %4, align 8, !dbg !8735, !nonnull !27, !align !608, !noundef !27
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !8735
  %v.1 = load i64, i64* %5, align 8, !dbg !8735
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !8735
  store i8* %v.0, i8** %6, align 8, !dbg !8735
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !8735
  store i64 %v.1, i64* %7, align 8, !dbg !8735
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill, metadata !8727, metadata !DIExpression()), !dbg !8736
  %8 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>::Continue"*, !dbg !8737
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>::Continue"* %8, i32 0, i32 1, !dbg !8737
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %9, i32 0, i32 0, !dbg !8737
  store i8* %v.0, i8** %10, align 8, !dbg !8737
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %9, i32 0, i32 1, !dbg !8737
  store i64 %v.1, i64* %11, align 8, !dbg !8737
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>"* %0 to i64*, !dbg !8737
  store i64 0, i64* %12, align 8, !dbg !8737
  br label %bb4, !dbg !8738

bb1:                                              ; preds = %start
  %13 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %self to %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Err"*, !dbg !8739
  %14 = getelementptr inbounds %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Err", %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Err"* %13, i32 0, i32 1, !dbg !8739
  %15 = bitcast %"alloc::ffi::c_str::NulError"* %e to i8*, !dbg !8739
  %16 = bitcast %"alloc::ffi::c_str::NulError"* %14 to i8*, !dbg !8739
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 32, i1 false), !dbg !8739
  %17 = bitcast %"alloc::ffi::c_str::NulError"* %_7 to i8*, !dbg !8740
  %18 = bitcast %"alloc::ffi::c_str::NulError"* %e to i8*, !dbg !8740
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 32, i1 false), !dbg !8740
  %19 = bitcast %"core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>::Err"* %_6 to %"alloc::ffi::c_str::NulError"*, !dbg !8741
  %20 = bitcast %"alloc::ffi::c_str::NulError"* %19 to i8*, !dbg !8741
  %21 = bitcast %"alloc::ffi::c_str::NulError"* %_7 to i8*, !dbg !8741
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 32, i1 false), !dbg !8741
  %22 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>::Break"*, !dbg !8742
  %23 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>::Break"* %22, i32 0, i32 1, !dbg !8742
  %24 = bitcast %"core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>::Err"* %23 to i8*, !dbg !8742
  %25 = bitcast %"core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>::Err"* %_6 to i8*, !dbg !8742
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 32, i1 false), !dbg !8742
  %26 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>"* %0 to i64*, !dbg !8742
  store i64 1, i64* %26, align 8, !dbg !8742
  br label %bb4, !dbg !8743

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !8744
}

; <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h62e6844b22f4e1a1E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::CharSearcher"* align 8 %self) unnamed_addr #0 !dbg !8745 {
start:
  %other.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %index.dbg.spill23 = alloca { i64, i64 }, align 8
  %self.dbg.spill22 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill21 = alloca [4 x i8]*, align 8
  %self.dbg.spill19 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill18 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill17 = alloca { [0 x i8]*, i64 }, align 8
  %found_char.dbg.spill = alloca i64, align 8
  %index.dbg.spill16 = alloca i64, align 8
  %last_byte.dbg.spill = alloca i8, align 1
  %2 = alloca i8*, align 8
  %count.dbg.spill14 = alloca i64, align 8
  %self.dbg.spill13 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill12 = alloca i8*, align 8
  %self.dbg.spill10 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill9 = alloca i64, align 8
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill7 = alloca { [0 x i8]*, i64 }, align 8
  %bytes.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %val.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill6 = alloca { [0 x i8]*, i64 }, align 8
  %3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %residual.dbg.spill2 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %self.dbg.spill = alloca %"core::str::pattern::CharSearcher"*, align 8
  %_51 = alloca { i64, i64 }, align 8
  %index4 = alloca { i64, i64 }, align 8
  %_46 = alloca { [0 x i8]*, i64 }, align 8
  %slice = alloca { [0 x i8]*, i64 }, align 8
  %index3 = alloca { i64, i64 }, align 8
  %_34 = alloca { i8*, i64 }, align 8
  %_21 = alloca { i64, i64 }, align 8
  %index = alloca { i64, i64 }, align 8
  %self1 = alloca { i8*, i64 }, align 8
  %_3 = alloca { i8*, i64 }, align 8
  store %"core::str::pattern::CharSearcher"* %self, %"core::str::pattern::CharSearcher"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::CharSearcher"** %self.dbg.spill, metadata !8751, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self1, metadata !8778, metadata !DIExpression()), !dbg !8804
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index, metadata !8806, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !8754, metadata !DIExpression()), !dbg !8815
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill2, metadata !8816, metadata !DIExpression()), !dbg !8823
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index3, metadata !8825, metadata !DIExpression()), !dbg !8830
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice, metadata !8775, metadata !DIExpression()), !dbg !8832
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index4, metadata !8833, metadata !DIExpression()), !dbg !8840
  br label %bb1, !dbg !8842

bb1:                                              ; preds = %bb13, %start
  %4 = bitcast %"core::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !8805
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !8805
  %_55.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !dbg !8805, !nonnull !27, !align !608, !noundef !27
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !8805
  %_55.1 = load i64, i64* %6, align 8, !dbg !8805
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !8805
  store [0 x i8]* %_55.0, [0 x i8]** %7, align 8, !dbg !8805
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !8805
  store i64 %_55.1, i64* %8, align 8, !dbg !8805
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill5, metadata !8843, metadata !DIExpression()), !dbg !8847
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !8847
  store [0 x i8]* %_55.0, [0 x i8]** %9, align 8, !dbg !8847
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !8847
  store i64 %_55.1, i64* %10, align 8, !dbg !8847
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !8847
  %_6.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !8847, !nonnull !27, !align !608, !noundef !27
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !8847
  %_6.1 = load i64, i64* %12, align 8, !dbg !8847
  br label %bb17, !dbg !8847

bb17:                                             ; preds = %bb1
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 0, !dbg !8805
  store [0 x i8]* %_6.0, [0 x i8]** %13, align 8, !dbg !8805
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 1, !dbg !8805
  store i64 %_6.1, i64* %14, align 8, !dbg !8805
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill6, metadata !8812, metadata !DIExpression()), !dbg !8814
  %15 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !8848
  %_9 = load i64, i64* %15, align 8, !dbg !8848
  %16 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 2, !dbg !8849
  %_10 = load i64, i64* %16, align 8, !dbg !8849
  %17 = bitcast { i64, i64 }* %index to i64*, !dbg !8848
  store i64 %_9, i64* %17, align 8, !dbg !8848
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index, i32 0, i32 1, !dbg !8848
  store i64 %_10, i64* %18, align 8, !dbg !8848
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index, i32 0, i32 0, !dbg !8814
  %_58.0 = load i64, i64* %19, align 8, !dbg !8814
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index, i32 0, i32 1, !dbg !8814
  %_58.1 = load i64, i64* %20, align 8, !dbg !8814
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
  %21 = call { i8*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17hcac955a39670c74cE"(i64 %_58.0, i64 %_58.1, [0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !8814
  store { i8*, i64 } %21, { i8*, i64 }* %self1, align 8, !dbg !8814
  br label %bb18, !dbg !8814

bb18:                                             ; preds = %bb17
  %22 = bitcast { i8*, i64 }* %self1 to {}**, !dbg !8804
  %23 = load {}*, {}** %22, align 8, !dbg !8804
  %24 = icmp eq {}* %23, null, !dbg !8804
  %_60 = select i1 %24, i64 0, i64 1, !dbg !8804
  switch i64 %_60, label %bb20 [
    i64 0, label %bb19
    i64 1, label %bb21
  ], !dbg !8804

bb20:                                             ; preds = %bb18
  unreachable, !dbg !8804

bb19:                                             ; preds = %bb18
  %25 = bitcast { i8*, i64 }* %_3 to {}**, !dbg !8804
  store {}* null, {}** %25, align 8, !dbg !8804
  br label %bb2, !dbg !8804

bb21:                                             ; preds = %bb18
  %26 = bitcast { i8*, i64 }* %self1 to { [0 x i8]*, i64 }*, !dbg !8804
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 0, !dbg !8804
  %v.0 = load [0 x i8]*, [0 x i8]** %27, align 8, !dbg !8804, !nonnull !27, !align !608, !noundef !27
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 1, !dbg !8804
  %v.1 = load i64, i64* %28, align 8, !dbg !8804
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !8804
  store [0 x i8]* %v.0, [0 x i8]** %29, align 8, !dbg !8804
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !8804
  store i64 %v.1, i64* %30, align 8, !dbg !8804
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !8801, metadata !DIExpression()), !dbg !8850
  %31 = bitcast { i8*, i64 }* %_3 to { [0 x i8]*, i64 }*, !dbg !8850
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 0, !dbg !8850
  store [0 x i8]* %v.0, [0 x i8]** %32, align 8, !dbg !8850
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 1, !dbg !8850
  store i64 %v.1, i64* %33, align 8, !dbg !8850
  br label %bb2, !dbg !8804

bb2:                                              ; preds = %bb19, %bb21
  %34 = bitcast { i8*, i64 }* %_3 to {}**, !dbg !8805
  %35 = load {}*, {}** %34, align 8, !dbg !8805
  %36 = icmp eq {}* %35, null, !dbg !8805
  %_11 = select i1 %36, i64 1, i64 0, !dbg !8805
  switch i64 %_11, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !8805

bb4:                                              ; preds = %bb2
  unreachable, !dbg !8805

bb3:                                              ; preds = %bb2
  %37 = bitcast { i8*, i64 }* %_3 to { [0 x i8]*, i64 }*, !dbg !8805
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 0, !dbg !8805
  %val.0 = load [0 x i8]*, [0 x i8]** %38, align 8, !dbg !8805, !nonnull !27, !align !608, !noundef !27
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 1, !dbg !8805
  %val.1 = load i64, i64* %39, align 8, !dbg !8805
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 0, !dbg !8805
  store [0 x i8]* %val.0, [0 x i8]** %40, align 8, !dbg !8805
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 1, !dbg !8805
  store i64 %val.1, i64* %41, align 8, !dbg !8805
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %val.dbg.spill, metadata !8767, metadata !DIExpression()), !dbg !8851
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %bytes.dbg.spill, i32 0, i32 0, !dbg !8851
  store [0 x i8]* %val.0, [0 x i8]** %42, align 8, !dbg !8851
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %bytes.dbg.spill, i32 0, i32 1, !dbg !8851
  store i64 %val.1, i64* %43, align 8, !dbg !8851
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %bytes.dbg.spill, metadata !8752, metadata !DIExpression()), !dbg !8852
  %_18 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 5, !dbg !8853
  %self.0 = bitcast [4 x i8]* %_18 to [0 x i8]*, !dbg !8853
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !8853
  store [0 x i8]* %self.0, [0 x i8]** %44, align 8, !dbg !8853
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !8853
  store i64 4, i64* %45, align 8, !dbg !8853
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill7, metadata !8854, metadata !DIExpression()), !dbg !8863
  %46 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3, !dbg !8864
  %_20 = load i64, i64* %46, align 8, !dbg !8864
  %index8 = sub i64 %_20, 1, !dbg !8864
  store i64 %index8, i64* %index.dbg.spill, align 8, !dbg !8864
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !8860, metadata !DIExpression()), !dbg !8863
  store i64 %index8, i64* %self.dbg.spill9, align 8, !dbg !8863
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill9, metadata !8865, metadata !DIExpression()), !dbg !8882
  %47 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !8863
  store [0 x i8]* %self.0, [0 x i8]** %47, align 8, !dbg !8863
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !8863
  store i64 4, i64* %48, align 8, !dbg !8863
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !8872, metadata !DIExpression()), !dbg !8882
  %49 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill10, i32 0, i32 0, !dbg !8882
  store [0 x i8]* %self.0, [0 x i8]** %49, align 8, !dbg !8882
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill10, i32 0, i32 1, !dbg !8882
  store i64 4, i64* %50, align 8, !dbg !8882
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill10, metadata !8884, metadata !DIExpression()), !dbg !8888
  %self11 = bitcast [0 x i8]* %self.0 to i8*, !dbg !8888
  store i8* %self11, i8** %self.dbg.spill12, align 8, !dbg !8888
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill12, metadata !8890, metadata !DIExpression()), !dbg !8895
  store i64 %index8, i64* %count.dbg.spill, align 8, !dbg !8882
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !8894, metadata !DIExpression()), !dbg !8895
  store i8* %self11, i8** %self.dbg.spill13, align 8, !dbg !8895
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill13, metadata !8896, metadata !DIExpression()), !dbg !8901
  store i64 %index8, i64* %count.dbg.spill14, align 8, !dbg !8895
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill14, metadata !8900, metadata !DIExpression()), !dbg !8901
  %51 = getelementptr inbounds i8, i8* %self11, i64 %index8, !dbg !8901
  store i8* %51, i8** %2, align 8, !dbg !8901
  %_63 = load i8*, i8** %2, align 8, !dbg !8901
  br label %bb22, !dbg !8901

bb5:                                              ; preds = %bb2
  %52 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !8823
  store i64 0, i64* %52, align 8, !dbg !8823
  br label %bb16, !dbg !8903

bb16:                                             ; preds = %bb15, %bb5
  ret void, !dbg !8905

bb22:                                             ; preds = %bb3
  %last_byte = load i8, i8* %_63, align 1, !dbg !8906
  store i8 %last_byte, i8* %last_byte.dbg.spill, align 1, !dbg !8906
  call void @llvm.dbg.declare(metadata i8* %last_byte.dbg.spill, metadata !8769, metadata !DIExpression()), !dbg !8907
; call core::slice::memchr::memchr
  %53 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17h66ee0e6458792bd0E(i8 %last_byte, [0 x i8]* align 1 %val.0, i64 %val.1), !dbg !8908
  store { i64, i64 } %53, { i64, i64 }* %_21, align 8, !dbg !8908
  br label %bb6, !dbg !8908

bb6:                                              ; preds = %bb22
  %54 = bitcast { i64, i64 }* %_21 to i64*, !dbg !8909
  %_24 = load i64, i64* %54, align 8, !dbg !8909, !range !2078, !noundef !27
  %55 = icmp eq i64 %_24, 1, !dbg !8909
  br i1 %55, label %bb7, label %bb14, !dbg !8909

bb7:                                              ; preds = %bb6
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_21, i32 0, i32 1, !dbg !8910
  %index15 = load i64, i64* %56, align 8, !dbg !8910
  store i64 %index15, i64* %index.dbg.spill16, align 8, !dbg !8910
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill16, metadata !8771, metadata !DIExpression()), !dbg !8910
  %_26 = add i64 %index15, 1, !dbg !8911
  %57 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !8912
  %58 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !8912
  %59 = load i64, i64* %58, align 8, !dbg !8912
  %60 = add i64 %59, %_26, !dbg !8912
  store i64 %60, i64* %57, align 8, !dbg !8912
  %61 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !8913
  %_29 = load i64, i64* %61, align 8, !dbg !8913
  %62 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3, !dbg !8914
  %_30 = load i64, i64* %62, align 8, !dbg !8914
  %_28 = icmp uge i64 %_29, %_30, !dbg !8913
  br i1 %_28, label %bb8, label %bb13, !dbg !8913

bb14:                                             ; preds = %bb6
  %63 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 2, !dbg !8915
  %_54 = load i64, i64* %63, align 8, !dbg !8915
  %64 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !8916
  store i64 %_54, i64* %64, align 8, !dbg !8916
  %65 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !8917
  store i64 0, i64* %65, align 8, !dbg !8917
  br label %bb15, !dbg !8918

bb15:                                             ; preds = %bb10, %bb14
  br label %bb16, !dbg !8903

bb13:                                             ; preds = %bb12, %bb7
  br label %bb1, !dbg !8842

bb8:                                              ; preds = %bb7
  %66 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !8919
  %_32 = load i64, i64* %66, align 8, !dbg !8919
  %67 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3, !dbg !8920
  %_33 = load i64, i64* %67, align 8, !dbg !8920
  %found_char = sub i64 %_32, %_33, !dbg !8919
  store i64 %found_char, i64* %found_char.dbg.spill, align 8, !dbg !8919
  call void @llvm.dbg.declare(metadata i64* %found_char.dbg.spill, metadata !8773, metadata !DIExpression()), !dbg !8921
  %68 = bitcast %"core::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !8831
  %69 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 0, !dbg !8831
  %_56.0 = load [0 x i8]*, [0 x i8]** %69, align 8, !dbg !8831, !nonnull !27, !align !608, !noundef !27
  %70 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 1, !dbg !8831
  %_56.1 = load i64, i64* %70, align 8, !dbg !8831
  %71 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill17, i32 0, i32 0, !dbg !8831
  store [0 x i8]* %_56.0, [0 x i8]** %71, align 8, !dbg !8831
  %72 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill17, i32 0, i32 1, !dbg !8831
  store i64 %_56.1, i64* %72, align 8, !dbg !8831
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill17, metadata !8922, metadata !DIExpression()), !dbg !8926
  %73 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !8926
  store [0 x i8]* %_56.0, [0 x i8]** %73, align 8, !dbg !8926
  %74 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !8926
  store i64 %_56.1, i64* %74, align 8, !dbg !8926
  %75 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !8926
  %_36.0 = load [0 x i8]*, [0 x i8]** %75, align 8, !dbg !8926, !nonnull !27, !align !608, !noundef !27
  %76 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !8926
  %_36.1 = load i64, i64* %76, align 8, !dbg !8926
  br label %bb23, !dbg !8926

bb23:                                             ; preds = %bb8
  %77 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill18, i32 0, i32 0, !dbg !8831
  store [0 x i8]* %_36.0, [0 x i8]** %77, align 8, !dbg !8831
  %78 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill18, i32 0, i32 1, !dbg !8831
  store i64 %_36.1, i64* %78, align 8, !dbg !8831
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill18, metadata !8829, metadata !DIExpression()), !dbg !8830
  %79 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !8927
  %_40 = load i64, i64* %79, align 8, !dbg !8927
  %80 = bitcast { i64, i64 }* %index3 to i64*, !dbg !8928
  store i64 %found_char, i64* %80, align 8, !dbg !8928
  %81 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index3, i32 0, i32 1, !dbg !8928
  store i64 %_40, i64* %81, align 8, !dbg !8928
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index3, i32 0, i32 0, !dbg !8830
  %_77.0 = load i64, i64* %82, align 8, !dbg !8830
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index3, i32 0, i32 1, !dbg !8830
  %_77.1 = load i64, i64* %83, align 8, !dbg !8830
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
  %84 = call { i8*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17hcac955a39670c74cE"(i64 %_77.0, i64 %_77.1, [0 x i8]* align 1 %_36.0, i64 %_36.1), !dbg !8830
  store { i8*, i64 } %84, { i8*, i64 }* %_34, align 8, !dbg !8830
  br label %bb24, !dbg !8830

bb24:                                             ; preds = %bb23
  %85 = bitcast { i8*, i64 }* %_34 to {}**, !dbg !8929
  %86 = load {}*, {}** %85, align 8, !dbg !8929
  %87 = icmp eq {}* %86, null, !dbg !8929
  %_41 = select i1 %87, i64 0, i64 1, !dbg !8929
  %88 = icmp eq i64 %_41, 1, !dbg !8929
  br i1 %88, label %bb9, label %bb12, !dbg !8929

bb9:                                              ; preds = %bb24
  %89 = bitcast { i8*, i64 }* %_34 to { [0 x i8]*, i64 }*, !dbg !8832
  %90 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %89, i32 0, i32 0, !dbg !8832
  %91 = load [0 x i8]*, [0 x i8]** %90, align 8, !dbg !8832, !nonnull !27, !align !608, !noundef !27
  %92 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %89, i32 0, i32 1, !dbg !8832
  %93 = load i64, i64* %92, align 8, !dbg !8832
  %94 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 0, !dbg !8832
  store [0 x i8]* %91, [0 x i8]** %94, align 8, !dbg !8832
  %95 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 1, !dbg !8832
  store i64 %93, i64* %95, align 8, !dbg !8832
  store { [0 x i8]*, i64 }* %slice, { [0 x i8]*, i64 }** %self.dbg.spill19, align 8, !dbg !8930
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill19, metadata !8931, metadata !DIExpression()), !dbg !8942
  %self20 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 5, !dbg !8841
  store [4 x i8]* %self20, [4 x i8]** %self.dbg.spill21, align 8, !dbg !8841
  call void @llvm.dbg.declare(metadata [4 x i8]** %self.dbg.spill21, metadata !8839, metadata !DIExpression()), !dbg !8840
  %96 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3, !dbg !8943
  %_50 = load i64, i64* %96, align 8, !dbg !8943
  %97 = bitcast { i64, i64 }* %index4 to i64*, !dbg !8944
  store i64 0, i64* %97, align 8, !dbg !8944
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index4, i32 0, i32 1, !dbg !8944
  store i64 %_50, i64* %98, align 8, !dbg !8944
  %_80.0 = bitcast [4 x i8]* %self20 to [0 x i8]*, !dbg !8840
  %99 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill22, i32 0, i32 0, !dbg !8840
  store [0 x i8]* %_80.0, [0 x i8]** %99, align 8, !dbg !8840
  %100 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill22, i32 0, i32 1, !dbg !8840
  store i64 4, i64* %100, align 8, !dbg !8840
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill22, metadata !8945, metadata !DIExpression()), !dbg !8952
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index4, i32 0, i32 0, !dbg !8840
  %index.0 = load i64, i64* %101, align 8, !dbg !8840
  %102 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index4, i32 0, i32 1, !dbg !8840
  %index.1 = load i64, i64* %102, align 8, !dbg !8840
  %103 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index.dbg.spill23, i32 0, i32 0, !dbg !8840
  store i64 %index.0, i64* %103, align 8, !dbg !8840
  %104 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index.dbg.spill23, i32 0, i32 1, !dbg !8840
  store i64 %index.1, i64* %104, align 8, !dbg !8840
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index.dbg.spill23, metadata !8951, metadata !DIExpression()), !dbg !8952
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %105 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h3c5f3b3dceabe859E"(i64 %index.0, i64 %index.1, [0 x i8]* align 1 %_80.0, i64 4, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc230 to %"core::panic::location::Location"*)), !dbg !8952
  %_47.0 = extractvalue { [0 x i8]*, i64 } %105, 0, !dbg !8952
  %_47.1 = extractvalue { [0 x i8]*, i64 } %105, 1, !dbg !8952
  br label %bb25, !dbg !8952

bb12:                                             ; preds = %bb11, %bb24
  br label %bb13, !dbg !8954

bb25:                                             ; preds = %bb9
  %106 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 0, !dbg !8955
  store [0 x i8]* %_47.0, [0 x i8]** %106, align 8, !dbg !8955
  %107 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 1, !dbg !8955
  store i64 %_47.1, i64* %107, align 8, !dbg !8955
  store { [0 x i8]*, i64 }* %_46, { [0 x i8]*, i64 }** %other.dbg.spill, align 8, !dbg !8955
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %other.dbg.spill, metadata !8938, metadata !DIExpression()), !dbg !8942
  %108 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 0, !dbg !8942
  %_87.0 = load [0 x i8]*, [0 x i8]** %108, align 8, !dbg !8942, !nonnull !27, !align !608, !noundef !27
  %109 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 1, !dbg !8942
  %_87.1 = load i64, i64* %109, align 8, !dbg !8942
  %110 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 0, !dbg !8942
  %_88.0 = load [0 x i8]*, [0 x i8]** %110, align 8, !dbg !8942, !nonnull !27, !align !608, !noundef !27
  %111 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 1, !dbg !8942
  %_88.1 = load i64, i64* %111, align 8, !dbg !8942
; call core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
  %_43 = call zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17he344d24537209facE"([0 x i8]* align 1 %_87.0, i64 %_87.1, [0 x i8]* align 1 %_88.0, i64 %_88.1), !dbg !8942
  br label %bb26, !dbg !8942

bb26:                                             ; preds = %bb25
  br i1 %_43, label %bb10, label %bb11, !dbg !8930

bb11:                                             ; preds = %bb26
  br label %bb12, !dbg !8956

bb10:                                             ; preds = %bb26
  %112 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !8957
  %_53 = load i64, i64* %112, align 8, !dbg !8957
  %113 = bitcast { i64, i64 }* %_51 to i64*, !dbg !8958
  store i64 %found_char, i64* %113, align 8, !dbg !8958
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 1, !dbg !8958
  store i64 %_53, i64* %114, align 8, !dbg !8958
  %115 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !8959
  %116 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %115, i32 0, i32 1, !dbg !8959
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 0, !dbg !8959
  %118 = load i64, i64* %117, align 8, !dbg !8959
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 1, !dbg !8959
  %120 = load i64, i64* %119, align 8, !dbg !8959
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %116, i32 0, i32 0, !dbg !8959
  store i64 %118, i64* %121, align 8, !dbg !8959
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %116, i32 0, i32 1, !dbg !8959
  store i64 %120, i64* %122, align 8, !dbg !8959
  %123 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !8959
  store i64 1, i64* %123, align 8, !dbg !8959
  br label %bb15, !dbg !8960
}

; <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h1bc4f9f368d5a079E"(%"core::str::pattern::CharSearcher"* align 8 %self) unnamed_addr #0 !dbg !8962 {
start:
  %self.dbg.spill = alloca %"core::str::pattern::CharSearcher"*, align 8
  store %"core::str::pattern::CharSearcher"* %self, %"core::str::pattern::CharSearcher"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::CharSearcher"** %self.dbg.spill, metadata !8966, metadata !DIExpression()), !dbg !8967
  %0 = bitcast %"core::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !8968
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !8968
  %2 = load [0 x i8]*, [0 x i8]** %1, align 8, !dbg !8968, !nonnull !27, !align !608, !noundef !27
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !8968
  %4 = load i64, i64* %3, align 8, !dbg !8968
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0, !dbg !8969
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %4, 1, !dbg !8969
  ret { [0 x i8]*, i64 } %6, !dbg !8969
}

; <core::num::nonzero::NonZeroU32 as proc_macro::bridge::rpc::Encode<S>>::encode
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN91_$LT$core..num..nonzero..NonZeroU32$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h6eff8dc709d18f76E"(i32 %self, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s) unnamed_addr #1 !dbg !8970 {
start:
  %self.dbg.spill1 = alloca i32, align 4
  %s.dbg.spill = alloca {}*, align 8
  %w.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8
  %self.dbg.spill = alloca i32, align 4
  store i32 %self, i32* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill, metadata !8975, metadata !DIExpression()), !dbg !8978
  store %"proc_macro::bridge::buffer::Buffer"* %w, %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, metadata !8976, metadata !DIExpression()), !dbg !8979
  store {}* %s, {}** %s.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %s.dbg.spill, metadata !8977, metadata !DIExpression()), !dbg !8980
  store i32 %self, i32* %self.dbg.spill1, align 4, !dbg !8981
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill1, metadata !8982, metadata !DIExpression()), !dbg !8988
; call <u32 as proc_macro::bridge::rpc::Encode<S>>::encode
  call void @"_ZN64_$LT$u32$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h450f1f7327497954E"(i32 %self, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s), !dbg !8981
  br label %bb1, !dbg !8981

bb1:                                              ; preds = %start
  ret void, !dbg !8989
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h1d2c646529b828afE"({ i8*, i8* }* align 8 %self, i8* align 1 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !8990 {
start:
  %x.dbg.spill = alloca i8*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %2 = alloca i64, align 8
  %self.dbg.spill11 = alloca i8*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %self.dbg.spill9 = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %diff.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_28 = alloca i8*, align 8
  %_22 = alloca i8*, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %7 = alloca { i64, i64 }, align 8
  %predicate = alloca i8*, align 8
  store i8* %0, i8** %predicate, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !8997, metadata !DIExpression()), !dbg !9013
  call void @llvm.dbg.declare(metadata i8** %predicate, metadata !8998, metadata !DIExpression()), !dbg !9014
  call void @llvm.dbg.declare(metadata i64* %n, metadata !8999, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9007, metadata !DIExpression()), !dbg !9016
  %8 = bitcast { i8*, i8* }* %self to i8**, !dbg !9017
  %start1 = load i8*, i8** %8, align 8, !dbg !9017, !nonnull !27, !noundef !27
  store i8* %start1, i8** %start.dbg.spill, align 8, !dbg !9017
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !9001, metadata !DIExpression()), !dbg !9018
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !9019
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !9003, metadata !DIExpression()), !dbg !9028
  br i1 false, label %bb1, label %bb2, !dbg !9028

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !9028
  %self6 = load i8*, i8** %9, align 8, !dbg !9028
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !9028
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !9029, metadata !DIExpression()), !dbg !9033
  %10 = bitcast i64* %3 to i8**, !dbg !9033
  store i8* %self6, i8** %10, align 8, !dbg !9033
  %self8 = load i64, i64* %3, align 8, !dbg !9033
  store i64 %self8, i64* %self.dbg.spill9, align 8, !dbg !9033
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill9, metadata !9035, metadata !DIExpression()), !dbg !9040
  br label %bb18, !dbg !9033

bb2:                                              ; preds = %start
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !9028
  %self2 = load i8*, i8** %11, align 8, !dbg !9028
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !9028
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !9041, metadata !DIExpression()), !dbg !9045
  %12 = bitcast i64* %6 to i8**, !dbg !9045
  store i8* %self2, i8** %12, align 8, !dbg !9045
  %_14 = load i64, i64* %6, align 8, !dbg !9045
  br label %bb20, !dbg !9045

bb20:                                             ; preds = %bb2
  store i8* %start1, i8** %self.dbg.spill4, align 8, !dbg !9028
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !9047, metadata !DIExpression()), !dbg !9051
  store i8* %start1, i8** %self.dbg.spill5, align 8, !dbg !9051
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !9053, metadata !DIExpression()), !dbg !9059
  %13 = bitcast i64* %5 to i8**, !dbg !9059
  store i8* %start1, i8** %13, align 8, !dbg !9059
  %_16 = load i64, i64* %5, align 8, !dbg !9059
  br label %bb21, !dbg !9059

bb21:                                             ; preds = %bb20
  %14 = sub nuw i64 %_14, %_16, !dbg !9028
  store i64 %14, i64* %4, align 8, !dbg !9028
  %diff = load i64, i64* %4, align 8, !dbg !9028
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !9028
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !9005, metadata !DIExpression()), !dbg !9060
  br label %bb3, !dbg !9028

bb3:                                              ; preds = %bb21
  %15 = udiv exact i64 %diff, 1, !dbg !9060
  store i64 %15, i64* %n, align 8, !dbg !9060
  br label %bb4, !dbg !9060

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !9028

bb5:                                              ; preds = %bb19, %bb4
  store i64 0, i64* %i, align 8, !dbg !9061
  br label %bb6, !dbg !9062

bb18:                                             ; preds = %bb1
  store i8* %start1, i8** %self.dbg.spill10, align 8, !dbg !9028
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !9063, metadata !DIExpression()), !dbg !9067
  store i8* %start1, i8** %self.dbg.spill11, align 8, !dbg !9067
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill11, metadata !9069, metadata !DIExpression()), !dbg !9073
  %16 = bitcast i64* %2 to i8**, !dbg !9073
  store i8* %start1, i8** %16, align 8, !dbg !9073
  %rhs = load i64, i64* %2, align 8, !dbg !9073
  store i64 %rhs, i64* %rhs.dbg.spill, align 8, !dbg !9073
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !9039, metadata !DIExpression()), !dbg !9040
  br label %bb19, !dbg !9073

bb19:                                             ; preds = %bb18
  %17 = sub i64 %self8, %rhs, !dbg !9040
  store i64 %17, i64* %n, align 8, !dbg !9040
  br label %bb5, !dbg !9028

bb6:                                              ; preds = %bb13, %bb5
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %18 = invoke align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h49c6b49183a26f7dE"({ i8*, i8* }* align 8 %self)
          to label %bb7 unwind label %cleanup, !dbg !9074

bb16:                                             ; preds = %cleanup
  br label %bb17, !dbg !9075

cleanup:                                          ; preds = %panic, %bb8, %bb6
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  %21 = extractvalue { i8*, i32 } %19, 1
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %21, i32* %23, align 8
  br label %bb16

bb7:                                              ; preds = %bb6
  store i8* %18, i8** %_22, align 8, !dbg !9074
  %24 = bitcast i8** %_22 to {}**, !dbg !9076
  %25 = load {}*, {}** %24, align 8, !dbg !9076
  %26 = icmp eq {}* %25, null, !dbg !9076
  %_24 = select i1 %26, i64 0, i64 1, !dbg !9076
  %27 = icmp eq i64 %_24, 1, !dbg !9076
  br i1 %27, label %bb8, label %bb14, !dbg !9076

bb8:                                              ; preds = %bb7
  %x = load i8*, i8** %_22, align 8, !dbg !9077, !nonnull !27, !align !608, !noundef !27
  store i8* %x, i8** %x.dbg.spill, align 8, !dbg !9077
  call void @llvm.dbg.declare(metadata i8** %x.dbg.spill, metadata !9009, metadata !DIExpression()), !dbg !9077
  store i8* %x, i8** %_28, align 8, !dbg !9078
  %28 = load i8*, i8** %_28, align 8, !dbg !9078, !nonnull !27, !align !608, !noundef !27
; invoke core::slice::memchr::memchr::{{closure}}
  %_26 = invoke zeroext i1 @"_ZN4core5slice6memchr6memchr28_$u7b$$u7b$closure$u7d$$u7d$17h16900041becdfdacE"(i8** align 8 %predicate, i8* align 1 %28)
          to label %bb9 unwind label %cleanup, !dbg !9078

bb14:                                             ; preds = %bb7
  %29 = bitcast { i64, i64 }* %7 to i64*, !dbg !9079
  store i64 0, i64* %29, align 8, !dbg !9079
  br label %bb15, !dbg !9075

bb15:                                             ; preds = %bb11, %bb14
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !9080
  %31 = load i64, i64* %30, align 8, !dbg !9080, !range !2078, !noundef !27
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !9080
  %33 = load i64, i64* %32, align 8, !dbg !9080
  %34 = insertvalue { i64, i64 } undef, i64 %31, 0, !dbg !9080
  %35 = insertvalue { i64, i64 } %34, i64 %33, 1, !dbg !9080
  ret { i64, i64 } %35, !dbg !9080

bb9:                                              ; preds = %bb8
  br i1 %_26, label %bb10, label %bb12, !dbg !9078

bb12:                                             ; preds = %bb9
  %36 = load i64, i64* %i, align 8, !dbg !9081
  %37 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %36, i64 1), !dbg !9081
  %_35.0 = extractvalue { i64, i1 } %37, 0, !dbg !9081
  %_35.1 = extractvalue { i64, i1 } %37, 1, !dbg !9081
  %38 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !9081
  br i1 %38, label %panic, label %bb13, !dbg !9081

bb10:                                             ; preds = %bb9
  %_32 = load i64, i64* %i, align 8, !dbg !9082
  %_33 = load i64, i64* %n, align 8, !dbg !9083
  %_31 = icmp ult i64 %_32, %_33, !dbg !9082
  call void @llvm.assume(i1 %_31), !dbg !9084
  br label %bb11, !dbg !9084

bb11:                                             ; preds = %bb10
  %_34 = load i64, i64* %i, align 8, !dbg !9085
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !9086
  store i64 %_34, i64* %39, align 8, !dbg !9086
  %40 = bitcast { i64, i64 }* %7 to i64*, !dbg !9086
  store i64 1, i64* %40, align 8, !dbg !9086
  br label %bb15, !dbg !9075

bb13:                                             ; preds = %bb12
  store i64 %_35.0, i64* %i, align 8, !dbg !9081
  br label %bb6, !dbg !9062

panic:                                            ; preds = %bb12
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc232 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup, !dbg !9081

unreachable:                                      ; preds = %panic
  unreachable

bb17:                                             ; preds = %bb16
  %41 = bitcast { i8*, i32 }* %1 to i8**, !dbg !9087
  %42 = load i8*, i8** %41, align 8, !dbg !9087
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !9087
  %44 = load i32, i32* %43, align 8, !dbg !9087
  %45 = insertvalue { i8*, i32 } undef, i8* %42, 0, !dbg !9087
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1, !dbg !9087
  resume { i8*, i32 } %46, !dbg !9087
}

; <std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::get
; Function Attrs: nonlazybind uwtable
define internal { {}*, [3 x i64]* } @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17h4cad47839b91b8f4E"(%"std::panicking::begin_panic::PanicPayload<alloc::string::String>"* align 8 %self) unnamed_addr #1 !dbg !9088 {
start:
  %a.dbg.spill = alloca %"alloc::string::String"*, align 8
  %self.dbg.spill = alloca %"std::panicking::begin_panic::PanicPayload<alloc::string::String>"*, align 8
  store %"std::panicking::begin_panic::PanicPayload<alloc::string::String>"* %self, %"std::panicking::begin_panic::PanicPayload<alloc::string::String>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::panicking::begin_panic::PanicPayload<alloc::string::String>"** %self.dbg.spill, metadata !9094, metadata !DIExpression()), !dbg !9097
  %0 = bitcast %"std::panicking::begin_panic::PanicPayload<alloc::string::String>"* %self to %"core::option::Option<alloc::string::String>"*, !dbg !9098
  %1 = bitcast %"core::option::Option<alloc::string::String>"* %0 to {}**, !dbg !9098
  %2 = load {}*, {}** %1, align 8, !dbg !9098
  %3 = icmp eq {}* %2, null, !dbg !9098
  %_6 = select i1 %3, i64 0, i64 1, !dbg !9098
  switch i64 %_6, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !9099

bb2:                                              ; preds = %start
  unreachable, !dbg !9098

bb1:                                              ; preds = %start
; call std::process::abort
  call void @_ZN3std7process5abort17h30ba2cb9a1e8646dE() #18, !dbg !9100
  unreachable, !dbg !9100

bb3:                                              ; preds = %start
  %4 = bitcast %"std::panicking::begin_panic::PanicPayload<alloc::string::String>"* %self to %"core::option::Option<alloc::string::String>"*, !dbg !9101
  %5 = bitcast %"core::option::Option<alloc::string::String>"* %4 to %"core::option::Option<alloc::string::String>::Some"*, !dbg !9101
  %a = bitcast %"core::option::Option<alloc::string::String>::Some"* %5 to %"alloc::string::String"*, !dbg !9101
  store %"alloc::string::String"* %a, %"alloc::string::String"** %a.dbg.spill, align 8, !dbg !9101
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %a.dbg.spill, metadata !9095, metadata !DIExpression()), !dbg !9102
  %_5.0 = bitcast %"alloc::string::String"* %a to {}*, !dbg !9103
  %6 = insertvalue { {}*, [3 x i64]* } undef, {}* %_5.0, 0, !dbg !9104
  %7 = insertvalue { {}*, [3 x i64]* } %6, [3 x i64]* bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.6 to [3 x i64]*), 1, !dbg !9104
  ret { {}*, [3 x i64]* } %7, !dbg !9104
}

; <std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::take_box
; Function Attrs: nonlazybind uwtable
define internal { {}*, [3 x i64]* } @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17hf166ab1c4ec907f8E"(%"std::panicking::begin_panic::PanicPayload<alloc::string::String>"* align 8 %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !9105 {
start:
  %self.dbg.spill6 = alloca { i8*, i64* }, align 8
  %self.dbg.spill5 = alloca { i8*, i64* }, align 8
  %leaked.dbg.spill = alloca { i8*, i64* }, align 8
  %b.dbg.spill3 = alloca { {}*, [3 x i64]* }, align 8
  %b.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill2 = alloca %"core::option::Option<alloc::string::String>"*, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %self.dbg.spill = alloca %"std::panicking::begin_panic::PanicPayload<alloc::string::String>"*, align 8
  %_22 = alloca { i8*, i64* }, align 8
  %_17 = alloca %"core::option::Option<alloc::string::String>", align 8
  %x = alloca %"alloc::string::String", align 8
  %a = alloca %"alloc::string::String", align 8
  %_4 = alloca %"core::option::Option<alloc::string::String>", align 8
  %data = alloca { {}*, [3 x i64]* }, align 8
  store %"std::panicking::begin_panic::PanicPayload<alloc::string::String>"* %self, %"std::panicking::begin_panic::PanicPayload<alloc::string::String>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::panicking::begin_panic::PanicPayload<alloc::string::String>"** %self.dbg.spill, metadata !9109, metadata !DIExpression()), !dbg !9114
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %data, metadata !9110, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %a, metadata !9112, metadata !DIExpression()), !dbg !9116
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %x, metadata !9117, metadata !DIExpression()), !dbg !9125
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !9127, metadata !DIExpression()), !dbg !9141
  %self1 = bitcast %"std::panicking::begin_panic::PanicPayload<alloc::string::String>"* %self to %"core::option::Option<alloc::string::String>"*, !dbg !9150
  store %"core::option::Option<alloc::string::String>"* %self1, %"core::option::Option<alloc::string::String>"** %self.dbg.spill2, align 8, !dbg !9150
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::string::String>"** %self.dbg.spill2, metadata !9151, metadata !DIExpression()), !dbg !9157
  %1 = bitcast %"core::option::Option<alloc::string::String>"* %_17 to {}**, !dbg !9157
  store {}* null, {}** %1, align 8, !dbg !9157
; call core::mem::replace
  call void @_ZN4core3mem7replace17hbbfe64bd76114668E(%"core::option::Option<alloc::string::String>"* sret(%"core::option::Option<alloc::string::String>") %_4, %"core::option::Option<alloc::string::String>"* align 8 %self1, %"core::option::Option<alloc::string::String>"* %_17), !dbg !9157
  br label %bb7, !dbg !9157

bb7:                                              ; preds = %start
  %2 = bitcast %"core::option::Option<alloc::string::String>"* %_4 to {}**, !dbg !9150
  %3 = load {}*, {}** %2, align 8, !dbg !9150
  %4 = icmp eq {}* %3, null, !dbg !9150
  %_6 = select i1 %4, i64 0, i64 1, !dbg !9150
  switch i64 %_6, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !9158

bb2:                                              ; preds = %bb7
  unreachable, !dbg !9150

bb1:                                              ; preds = %bb7
; call std::process::abort
  call void @_ZN3std7process5abort17h30ba2cb9a1e8646dE() #18, !dbg !9159
  unreachable, !dbg !9159

bb3:                                              ; preds = %bb7
  %5 = bitcast %"core::option::Option<alloc::string::String>"* %_4 to %"core::option::Option<alloc::string::String>::Some"*, !dbg !9160
  %6 = bitcast %"core::option::Option<alloc::string::String>::Some"* %5 to %"alloc::string::String"*, !dbg !9160
  %7 = bitcast %"alloc::string::String"* %a to i8*, !dbg !9160
  %8 = bitcast %"alloc::string::String"* %6 to i8*, !dbg !9160
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !9160
  %9 = bitcast %"alloc::string::String"* %x to i8*, !dbg !9161
  %10 = bitcast %"alloc::string::String"* %a to i8*, !dbg !9161
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !9161
; invoke alloc::alloc::exchange_malloc
  %_20 = invoke i8* @_ZN5alloc5alloc15exchange_malloc17h4d4d724890fe9d4eE(i64 24, i64 8)
          to label %bb8 unwind label %cleanup, !dbg !9125

bb9:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"* %x) #19
          to label %bb5 unwind label %abort, !dbg !9125

cleanup:                                          ; preds = %bb3
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb9

bb8:                                              ; preds = %bb3
  %_9 = bitcast i8* %_20 to %"alloc::string::String"*, !dbg !9125
  %16 = bitcast %"alloc::string::String"* %_9 to i64*, !dbg !9125
  %_21 = bitcast i64* %16 to %"alloc::string::String"*, !dbg !9125
  %17 = bitcast %"alloc::string::String"* %_21 to i8*, !dbg !9125
  %18 = bitcast %"alloc::string::String"* %x to i8*, !dbg !9125
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false), !dbg !9125
  %19 = bitcast %"alloc::string::String"* %_9 to {}*, !dbg !9126
  %20 = bitcast {}* %19 to i8*, !dbg !9126
  %_8.0 = bitcast i8* %20 to {}*, !dbg !9126
  %21 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 0, !dbg !9126
  store {}* %_8.0, {}** %21, align 8, !dbg !9126
  %22 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 1, !dbg !9126
  store [3 x i64]* bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.6 to [3 x i64]*), [3 x i64]** %22, align 8, !dbg !9126
  %23 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 0, !dbg !9162
  %_14.0 = load {}*, {}** %23, align 8, !dbg !9162, !nonnull !27, !align !608, !noundef !27
  %24 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 1, !dbg !9162
  %_14.1 = load [3 x i64]*, [3 x i64]** %24, align 8, !dbg !9162, !nonnull !27, !align !1193, !noundef !27
  %25 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b.dbg.spill, i32 0, i32 0, !dbg !9162
  store {}* %_14.0, {}** %25, align 8, !dbg !9162
  %26 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b.dbg.spill, i32 0, i32 1, !dbg !9162
  store [3 x i64]* %_14.1, [3 x i64]** %26, align 8, !dbg !9162
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %b.dbg.spill, metadata !9147, metadata !DIExpression()), !dbg !9163
  %27 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b.dbg.spill3, i32 0, i32 0, !dbg !9163
  store {}* %_14.0, {}** %27, align 8, !dbg !9163
  %28 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b.dbg.spill3, i32 0, i32 1, !dbg !9163
  store [3 x i64]* %_14.1, [3 x i64]** %28, align 8, !dbg !9163
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %b.dbg.spill3, metadata !9138, metadata !DIExpression()), !dbg !9164
; invoke alloc::boxed::Box<T,A>::into_unique
  %29 = invoke { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h5993f101f37262feE"({}* align 1 %_14.0, [3 x i64]* align 8 %_14.1)
          to label %bb10 unwind label %cleanup4, !dbg !9164

abort:                                            ; preds = %bb6, %bb9
  %30 = landingpad { i8*, i32 }
          cleanup, !dbg !9165
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !9165
  unreachable, !dbg !9165

bb5:                                              ; preds = %bb6, %bb4, %bb9
  %31 = bitcast { i8*, i32 }* %0 to i8**, !dbg !9165
  %32 = load i8*, i8** %31, align 8, !dbg !9165
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !9165
  %34 = load i32, i32* %33, align 8, !dbg !9165
  %35 = insertvalue { i8*, i32 } undef, i8* %32, 0, !dbg !9165
  %36 = insertvalue { i8*, i32 } %35, i32 %34, 1, !dbg !9165
  resume { i8*, i32 } %36, !dbg !9165

bb4:                                              ; preds = %cleanup4
  br i1 false, label %bb6, label %bb5, !dbg !9166

cleanup4:                                         ; preds = %bb8
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  %39 = extractvalue { i8*, i32 } %37, 1
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %39, i32* %41, align 8
  br label %bb4

bb10:                                             ; preds = %bb8
  %_26.0 = extractvalue { i8*, i64* } %29, 0, !dbg !9164
  %_26.1 = extractvalue { i8*, i64* } %29, 1, !dbg !9164
  %42 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %leaked.dbg.spill, i32 0, i32 0, !dbg !9164
  store i8* %_26.0, i8** %42, align 8, !dbg !9164
  %43 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %leaked.dbg.spill, i32 0, i32 1, !dbg !9164
  store i64* %_26.1, i64** %43, align 8, !dbg !9164
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %leaked.dbg.spill, metadata !9140, metadata !DIExpression()), !dbg !9141
  %44 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill5, i32 0, i32 0, !dbg !9141
  store i8* %_26.0, i8** %44, align 8, !dbg !9141
  %45 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill5, i32 0, i32 1, !dbg !9141
  store i64* %_26.1, i64** %45, align 8, !dbg !9141
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill5, metadata !9167, metadata !DIExpression()), !dbg !9171
  %46 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill6, i32 0, i32 0, !dbg !9171
  store i8* %_26.0, i8** %46, align 8, !dbg !9171
  %47 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill6, i32 0, i32 1, !dbg !9171
  store i64* %_26.1, i64** %47, align 8, !dbg !9171
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill6, metadata !9173, metadata !DIExpression()), !dbg !9177
  %_31.0 = bitcast i8* %_26.0 to {}*, !dbg !9177
  %_31.1 = bitcast i64* %_26.1 to [3 x i64]*, !dbg !9177
  %48 = bitcast { i8*, i64* }* %_22 to { {}*, [3 x i64]* }*, !dbg !9141
  %49 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %48, i32 0, i32 0, !dbg !9141
  store {}* %_31.0, {}** %49, align 8, !dbg !9141
  %50 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %48, i32 0, i32 1, !dbg !9141
  store [3 x i64]* %_31.1, [3 x i64]** %50, align 8, !dbg !9141
  %51 = bitcast { i8*, i64* }* %_22 to { {}*, [3 x i64]* }*, !dbg !9163
  %52 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %51, i32 0, i32 0, !dbg !9163
  %_12.0 = load {}*, {}** %52, align 8, !dbg !9163
  %53 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %51, i32 0, i32 1, !dbg !9163
  %_12.1 = load [3 x i64]*, [3 x i64]** %53, align 8, !dbg !9163, !nonnull !27, !align !1193, !noundef !27
  %54 = insertvalue { {}*, [3 x i64]* } undef, {}* %_12.0, 0, !dbg !9179
  %55 = insertvalue { {}*, [3 x i64]* } %54, [3 x i64]* %_12.1, 1, !dbg !9179
  ret { {}*, [3 x i64]* } %55, !dbg !9179

bb6:                                              ; preds = %bb4
; invoke core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h6a8e35d5e16ac4e8E"({ {}*, [3 x i64]* }* %data) #19
          to label %bb5 unwind label %abort, !dbg !9166
}

; <core::num::nonzero::NonZeroU32 as proc_macro::bridge::rpc::DecodeMut<S>>::decode
; Function Attrs: nonlazybind uwtable
define internal i32 @"_ZN94_$LT$core..num..nonzero..NonZeroU32$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17h195da8d32a305c54E"({ [0 x i8]*, i64 }* align 8 %r, {}* align 1 %s) unnamed_addr #1 !dbg !9180 {
start:
  %n.dbg.spill = alloca i32, align 4
  %s.dbg.spill = alloca {}*, align 8
  %r.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %_8 = alloca i32, align 4
  %self = alloca i32, align 4
  store { [0 x i8]*, i64 }* %r, { [0 x i8]*, i64 }** %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %r.dbg.spill, metadata !9185, metadata !DIExpression()), !dbg !9187
  store {}* %s, {}** %s.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %s.dbg.spill, metadata !9186, metadata !DIExpression()), !dbg !9188
  call void @llvm.dbg.declare(metadata i32* %self, metadata !9189, metadata !DIExpression()), !dbg !9211
; call <u32 as proc_macro::bridge::rpc::DecodeMut<S>>::decode
  %n = call i32 @"_ZN67_$LT$u32$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17h02cdbdd2aee070bbE"({ [0 x i8]*, i64 }* align 8 %r, {}* align 1 %s), !dbg !9213
  store i32 %n, i32* %n.dbg.spill, align 4, !dbg !9213
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !9214, metadata !DIExpression()), !dbg !9220
  br label %bb1, !dbg !9213

bb1:                                              ; preds = %start
  %0 = icmp eq i32 %n, 0, !dbg !9220
  br i1 %0, label %bb4, label %bb3, !dbg !9220

bb4:                                              ; preds = %bb1
  store i32 0, i32* %self, align 4, !dbg !9220
  br label %bb2, !dbg !9220

bb3:                                              ; preds = %bb1
  store i32 %n, i32* %_8, align 4, !dbg !9220
  %1 = load i32, i32* %_8, align 4, !dbg !9220, !range !642, !noundef !27
  store i32 %1, i32* %self, align 4, !dbg !9220
  br label %bb2, !dbg !9220

bb2:                                              ; preds = %bb4, %bb3
  %2 = load i32, i32* %self, align 4, !dbg !9211
  %3 = icmp eq i32 %2, 0, !dbg !9211
  %_10 = select i1 %3, i64 0, i64 1, !dbg !9211
  switch i64 %_10, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ], !dbg !9211

bb6:                                              ; preds = %bb2
  unreachable, !dbg !9211

bb5:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc236 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc238 to %"core::panic::location::Location"*)) #18, !dbg !9211
  unreachable, !dbg !9211

bb7:                                              ; preds = %bb2
  %4 = load i32, i32* %self, align 4, !dbg !9211, !range !642, !noundef !27
  ret i32 %4, !dbg !9221
}

; <proc_macro::bridge::client::Span as proc_macro::bridge::rpc::DecodeMut<S>>::decode
; Function Attrs: nonlazybind uwtable
define internal i32 @"_ZN96_$LT$proc_macro..bridge..client..Span$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17h393090e286eefc6cE"({ [0 x i8]*, i64 }* align 8 %r, {}* align 1 %s) unnamed_addr #1 !dbg !9222 {
start:
  %s.dbg.spill = alloca {}*, align 8
  %r.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %0 = alloca i32, align 4
  store { [0 x i8]*, i64 }* %r, { [0 x i8]*, i64 }** %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %r.dbg.spill, metadata !9227, metadata !DIExpression()), !dbg !9229
  store {}* %s, {}** %s.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %s.dbg.spill, metadata !9228, metadata !DIExpression()), !dbg !9230
; call <core::num::nonzero::NonZeroU32 as proc_macro::bridge::rpc::DecodeMut<S>>::decode
  %_3 = call i32 @"_ZN94_$LT$core..num..nonzero..NonZeroU32$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17h195da8d32a305c54E"({ [0 x i8]*, i64 }* align 8 %r, {}* align 1 %s), !dbg !9231, !range !642
  br label %bb1, !dbg !9231

bb1:                                              ; preds = %start
  store i32 %_3, i32* %0, align 4, !dbg !9232
  %1 = load i32, i32* %0, align 4, !dbg !9233, !range !642, !noundef !27
  ret i32 %1, !dbg !9233
}

; <proc_macro::bridge::scoped_cell::RefMutL<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: nonlazybind uwtable
define internal align 8 %"proc_macro::bridge::client::BridgeState"* @"_ZN96_$LT$proc_macro..bridge..scoped_cell..RefMutL$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hb74aae393af6043eE"(i64** align 8 %self) unnamed_addr #1 !dbg !9234 {
start:
  %self.dbg.spill = alloca i64**, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !9240, metadata !DIExpression()), !dbg !9241
  %0 = bitcast i64** %self to %"proc_macro::bridge::client::BridgeState"**, !dbg !9242
  %_3 = load %"proc_macro::bridge::client::BridgeState"*, %"proc_macro::bridge::client::BridgeState"** %0, align 8, !dbg !9242, !nonnull !27, !align !1193, !noundef !27
  ret %"proc_macro::bridge::client::BridgeState"* %_3, !dbg !9243
}

; <proc_macro::bridge::rpc::PanicMessage as proc_macro::bridge::rpc::Encode<S>>::encode
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN98_$LT$proc_macro..bridge..rpc..PanicMessage$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h48e5f54ac329d40aE"(%"proc_macro::bridge::rpc::PanicMessage"* %self, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !9244 {
start:
  %0 = alloca { i8*, i32 }, align 8, !dbg !9252
  %s.dbg.spill = alloca {}*, align 8, !dbg !9252
  %w.dbg.spill = alloca %"proc_macro::bridge::buffer::Buffer"*, align 8, !dbg !9252
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::rpc::PanicMessage"* %self, metadata !9249, metadata !DIExpression()), !dbg !9252
  store %"proc_macro::bridge::buffer::Buffer"* %w, %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"proc_macro::bridge::buffer::Buffer"** %w.dbg.spill, metadata !9250, metadata !DIExpression()), !dbg !9253
  store {}* %s, {}** %s.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %s.dbg.spill, metadata !9251, metadata !DIExpression()), !dbg !9254
; invoke proc_macro::bridge::rpc::PanicMessage::as_str
  %1 = invoke { i8*, i64 } @_ZN10proc_macro6bridge3rpc12PanicMessage6as_str17h80e48df7352c014cE(%"proc_macro::bridge::rpc::PanicMessage"* align 8 %self)
          to label %bb1 unwind label %cleanup, !dbg !9255

bb4:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<proc_macro::bridge::rpc::PanicMessage>
  invoke void @"_ZN4core3ptr58drop_in_place$LT$proc_macro..bridge..rpc..PanicMessage$GT$17ha026d0b68f540484E"(%"proc_macro::bridge::rpc::PanicMessage"* %self) #19
          to label %bb5 unwind label %abort, !dbg !9256

cleanup:                                          ; preds = %bb1, %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { i8*, i64 } %1, 0, !dbg !9255
  %_5.1 = extractvalue { i8*, i64 } %1, 1, !dbg !9255
; invoke proc_macro::bridge::<impl proc_macro::bridge::rpc::Encode<S> for core::option::Option<T>>::encode
  invoke void @"_ZN10proc_macro6bridge100_$LT$impl$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$u20$for$u20$core..option..Option$LT$T$GT$$GT$6encode17h0ce7338230398f4dE"(i8* align 1 %_5.0, i64 %_5.1, %"proc_macro::bridge::buffer::Buffer"* align 8 %w, {}* align 1 %s)
          to label %bb2 unwind label %cleanup, !dbg !9255

bb2:                                              ; preds = %bb1
; call core::ptr::drop_in_place<proc_macro::bridge::rpc::PanicMessage>
  call void @"_ZN4core3ptr58drop_in_place$LT$proc_macro..bridge..rpc..PanicMessage$GT$17ha026d0b68f540484E"(%"proc_macro::bridge::rpc::PanicMessage"* %self), !dbg !9256
  br label %bb3, !dbg !9256

abort:                                            ; preds = %bb4
  %7 = landingpad { i8*, i32 }
          cleanup, !dbg !9257
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !9257
  unreachable, !dbg !9257

bb5:                                              ; preds = %bb4
  %8 = bitcast { i8*, i32 }* %0 to i8**, !dbg !9257
  %9 = load i8*, i8** %8, align 8, !dbg !9257
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !9257
  %11 = load i32, i32* %10, align 8, !dbg !9257
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0, !dbg !9257
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1, !dbg !9257
  resume { i8*, i32 } %13, !dbg !9257

bb3:                                              ; preds = %bb2
  ret void, !dbg !9258
}

; f128_input::parse
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10f128_input5parse17h7ee261afd6fa0d57E(%"alloc::string::String"* sret(%"alloc::string::String") %res, [0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !9259 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_37 = alloca [1 x { i8*, i64* }], align 8
  %_30 = alloca %"core::fmt::Arguments", align 8
  %res2 = alloca %"alloc::string::String", align 8
  %_28 = alloca %"alloc::string::String", align 8
  %_26 = alloca %"f128_internal::f128_t::f128", align 1
  %_25 = alloca [16 x i8], align 1
  %_21 = alloca [1 x { i8*, i64* }], align 8
  %_14 = alloca %"core::fmt::Arguments", align 8
  %it = alloca %"f128_internal::f128_t::f128", align 1
  %_10 = alloca %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>", align 8
  %s1 = alloca { [0 x i8]*, i64 }, align 8
  %s = alloca %"alloc::string::String", align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %res, metadata !9270, metadata !DIExpression()), !dbg !9276
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !9263, metadata !DIExpression()), !dbg !9277
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %s, metadata !9264, metadata !DIExpression()), !dbg !9278
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s1, metadata !9266, metadata !DIExpression()), !dbg !9279
  call void @llvm.dbg.declare(metadata %"f128_internal::f128_t::f128"* %it, metadata !9268, metadata !DIExpression()), !dbg !9280
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %res2, metadata !9273, metadata !DIExpression()), !dbg !9281
; call alloc::str::<impl str>::replace
  call void @"_ZN5alloc3str21_$LT$impl$u20$str$GT$7replace17h324b3cfea44dc7d1E"(%"alloc::string::String"* sret(%"alloc::string::String") %s, [0 x i8]* align 1 %s.0, i64 %s.1, i32 32, [0 x i8]* align 1 bitcast (<{}>* @alloc239 to [0 x i8]*), i64 0), !dbg !9282
  br label %bb1, !dbg !9282

bb1:                                              ; preds = %start
; invoke <alloc::string::String as core::ops::index::Index<core::ops::range::RangeFull>>::index
  %3 = invoke { [0 x i8]*, i64 } @"_ZN100_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17h5b81c5e26663cc31E"(%"alloc::string::String"* align 8 %s, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc241 to %"core::panic::location::Location"*))
          to label %bb2 unwind label %cleanup, !dbg !9283

bb18:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"* %s) #19
          to label %bb19 unwind label %abort, !dbg !9284

cleanup:                                          ; preds = %bb2, %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb18

bb2:                                              ; preds = %bb1
  %_7.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !9283
  %_7.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !9283
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s1, i32 0, i32 0, !dbg !9285
  store [0 x i8]* %_7.0, [0 x i8]** %9, align 8, !dbg !9285
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s1, i32 0, i32 1, !dbg !9285
  store i64 %_7.1, i64* %10, align 8, !dbg !9285
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s1, i32 0, i32 0, !dbg !9286
  %_11.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !9286, !nonnull !27, !align !608, !noundef !27
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s1, i32 0, i32 1, !dbg !9286
  %_11.1 = load i64, i64* %12, align 8, !dbg !9286
; invoke f128_internal::f128_t::f128::parse
  invoke void @_ZN13f128_internal6f128_t4f1285parse17hf25b7b511a1394fcE(%"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>") %_10, [0 x i8]* align 1 %_11.0, i64 %_11.1)
          to label %bb3 unwind label %cleanup, !dbg !9287

bb3:                                              ; preds = %bb2
  %13 = bitcast %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>"* %_10 to i8*, !dbg !9287
  %14 = load i8, i8* %13, align 8, !dbg !9287, !range !759, !noundef !27
  %15 = trunc i8 %14 to i1, !dbg !9287
  %_12 = zext i1 %15 to i64, !dbg !9287
  switch i64 %_12, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ], !dbg !9288

abort:                                            ; preds = %bb17, %bb16, %bb18
  %16 = landingpad { i8*, i32 }
          cleanup, !dbg !9289
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !9289
  unreachable, !dbg !9289

bb19:                                             ; preds = %bb17, %bb18
  %17 = bitcast { i8*, i32 }* %0 to i8**, !dbg !9289
  %18 = load i8*, i8** %17, align 8, !dbg !9289
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !9289
  %20 = load i32, i32* %19, align 8, !dbg !9289
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0, !dbg !9289
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1, !dbg !9289
  resume { i8*, i32 } %22, !dbg !9289

bb5:                                              ; preds = %bb3
  unreachable, !dbg !9287

bb6:                                              ; preds = %bb3
  %23 = bitcast %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>"* %_10 to %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>::Ok"*, !dbg !9290
  %24 = getelementptr inbounds %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>::Ok", %"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>::Ok"* %23, i32 0, i32 1, !dbg !9290
  %25 = bitcast %"f128_internal::f128_t::f128"* %it to i8*, !dbg !9290
  %26 = bitcast %"f128_internal::f128_t::f128"* %24 to i8*, !dbg !9290
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %26, i64 16, i1 false), !dbg !9290
  %27 = bitcast %"f128_internal::f128_t::f128"* %_26 to i8*, !dbg !9291
  %28 = bitcast %"f128_internal::f128_t::f128"* %it to i8*, !dbg !9291
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %28, i64 16, i1 false), !dbg !9291
  call void @llvm.dbg.declare(metadata %"f128_internal::f128_t::f128"* %_26, metadata !9292, metadata !DIExpression()), !dbg !9297
  %29 = bitcast %"f128_internal::f128_t::f128"* %_26 to [16 x i8]*, !dbg !9299
  %30 = bitcast [16 x i8]* %_25 to i8*, !dbg !9299
  %31 = bitcast [16 x i8]* %29 to i8*, !dbg !9299
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 16, i1 false), !dbg !9299
  br label %bb7, !dbg !9300

bb4:                                              ; preds = %bb3
; invoke core::fmt::ArgumentV1::new_debug
  %32 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV19new_debug17h881e4fa91d92a927E({ [0 x i8]*, i64 }* align 8 %s1)
          to label %bb11 unwind label %cleanup3, !dbg !9301

bb16:                                             ; preds = %cleanup3
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"* %s) #19
          to label %bb17 unwind label %abort, !dbg !9284

cleanup3:                                         ; preds = %bb9, %bb8, %bb7, %bb13, %bb12, %bb11, %bb4
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  %35 = extractvalue { i8*, i32 } %33, 1
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %34, i8** %36, align 8
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %35, i32* %37, align 8
  br label %bb16

bb11:                                             ; preds = %bb4
  %_38.0 = extractvalue { i8*, i64* } %32, 0, !dbg !9301
  %_38.1 = extractvalue { i8*, i64* } %32, 1, !dbg !9301
  %38 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_37, i64 0, i64 0, !dbg !9301
  %39 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %38, i32 0, i32 0, !dbg !9301
  store i8* %_38.0, i8** %39, align 8, !dbg !9301
  %40 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %38, i32 0, i32 1, !dbg !9301
  store i64* %_38.1, i64** %40, align 8, !dbg !9301
  %_34.0 = bitcast [1 x { i8*, i64* }]* %_37 to [0 x { i8*, i64* }]*, !dbg !9301
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h09031697824c4fd0E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_30, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc40 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_34.0, i64 1)
          to label %bb12 unwind label %cleanup3, !dbg !9301

bb12:                                             ; preds = %bb11
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h379f45c17972232bE(%"alloc::string::String"* sret(%"alloc::string::String") %res2, %"core::fmt::Arguments"* %_30)
          to label %bb13 unwind label %cleanup3, !dbg !9301

bb13:                                             ; preds = %bb12
  %41 = bitcast %"alloc::string::String"* %_28 to i8*, !dbg !9281
  %42 = bitcast %"alloc::string::String"* %res2 to i8*, !dbg !9281
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false), !dbg !9281
; invoke std::panicking::begin_panic
  invoke void @_ZN3std9panicking11begin_panic17hed299a0b07cec048E(%"alloc::string::String"* %_28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc243 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup3, !dbg !9302

unreachable:                                      ; preds = %bb13
  unreachable

bb7:                                              ; preds = %bb6
; invoke core::fmt::ArgumentV1::new_debug
  %43 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV19new_debug17h11007976e2ae55e0E([16 x i8]* align 1 %_25)
          to label %bb8 unwind label %cleanup3, !dbg !9303

bb8:                                              ; preds = %bb7
  %_22.0 = extractvalue { i8*, i64* } %43, 0, !dbg !9303
  %_22.1 = extractvalue { i8*, i64* } %43, 1, !dbg !9303
  %44 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_21, i64 0, i64 0, !dbg !9303
  %45 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %44, i32 0, i32 0, !dbg !9303
  store i8* %_22.0, i8** %45, align 8, !dbg !9303
  %46 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %44, i32 0, i32 1, !dbg !9303
  store i64* %_22.1, i64** %46, align 8, !dbg !9303
  %_18.0 = bitcast [1 x { i8*, i64* }]* %_21 to [0 x { i8*, i64* }]*, !dbg !9303
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h09031697824c4fd0E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_14, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc44 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_18.0, i64 1)
          to label %bb9 unwind label %cleanup3, !dbg !9303

bb9:                                              ; preds = %bb8
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h379f45c17972232bE(%"alloc::string::String"* sret(%"alloc::string::String") %res, %"core::fmt::Arguments"* %_14)
          to label %bb10 unwind label %cleanup3, !dbg !9303

bb10:                                             ; preds = %bb9
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"* %s)
          to label %bb14 unwind label %cleanup4, !dbg !9284

bb17:                                             ; preds = %cleanup4, %bb16
; invoke core::ptr::drop_in_place<core::result::Result<f128_internal::f128_t::f128,alloc::ffi::c_str::NulError>>
  invoke void @"_ZN4core3ptr106drop_in_place$LT$core..result..Result$LT$f128_internal..f128_t..f128$C$alloc..ffi..c_str..NulError$GT$$GT$17hc90ee8ad40ed548dE"(%"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>"* %_10) #19
          to label %bb19 unwind label %abort, !dbg !9284

cleanup4:                                         ; preds = %bb10
  %47 = landingpad { i8*, i32 }
          cleanup
  %48 = extractvalue { i8*, i32 } %47, 0
  %49 = extractvalue { i8*, i32 } %47, 1
  %50 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %48, i8** %50, align 8
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %49, i32* %51, align 8
  br label %bb17

bb14:                                             ; preds = %bb10
; call core::ptr::drop_in_place<core::result::Result<f128_internal::f128_t::f128,alloc::ffi::c_str::NulError>>
  call void @"_ZN4core3ptr106drop_in_place$LT$core..result..Result$LT$f128_internal..f128_t..f128$C$alloc..ffi..c_str..NulError$GT$$GT$17hc90ee8ad40ed548dE"(%"core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>"* %_10), !dbg !9284
  br label %bb15, !dbg !9284

bb15:                                             ; preds = %bb14
  ret void, !dbg !9304
}

; f128_input::f128_inner
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN10f128_input10f128_inner17h694766312852ec42E(i32 %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !9305 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_8 = alloca %"alloc::string::String", align 8
  %s = alloca %"alloc::string::String", align 8
  %item = alloca i32, align 4
  store i32 %0, i32* %item, align 4
  call void @llvm.dbg.declare(metadata i32* %item, metadata !9307, metadata !DIExpression()), !dbg !9310
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %s, metadata !9308, metadata !DIExpression()), !dbg !9311
; invoke <proc_macro::TokenStream as alloc::string::ToString>::to_string
  invoke void @"_ZN67_$LT$proc_macro..TokenStream$u20$as$u20$alloc..string..ToString$GT$9to_string17hdddab7d4157dc6f7E"(%"alloc::string::String"* sret(%"alloc::string::String") %s, i32* align 4 %item)
          to label %bb1 unwind label %cleanup, !dbg !9312

bb13:                                             ; preds = %bb11, %bb12, %cleanup
; invoke core::ptr::drop_in_place<proc_macro::TokenStream>
  invoke void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h5984f1a9e3d64235E"(i32* %item) #19
          to label %bb14 unwind label %abort, !dbg !9313

cleanup:                                          ; preds = %bb7, %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb13

bb1:                                              ; preds = %start
; invoke <alloc::string::String as core::ops::index::Index<core::ops::range::RangeFull>>::index
  %7 = invoke { [0 x i8]*, i64 } @"_ZN100_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17h5b81c5e26663cc31E"(%"alloc::string::String"* align 8 %s, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc245 to %"core::panic::location::Location"*))
          to label %bb2 unwind label %cleanup1, !dbg !9314

bb12:                                             ; preds = %cleanup1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"* %s) #19
          to label %bb13 unwind label %abort, !dbg !9313

cleanup1:                                         ; preds = %bb2, %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
  %_11.0 = extractvalue { [0 x i8]*, i64 } %7, 0, !dbg !9314
  %_11.1 = extractvalue { [0 x i8]*, i64 } %7, 1, !dbg !9314
; invoke f128_input::parse
  invoke void @_ZN10f128_input5parse17h7ee261afd6fa0d57E(%"alloc::string::String"* sret(%"alloc::string::String") %_8, [0 x i8]* align 1 %_11.0, i64 %_11.1)
          to label %bb3 unwind label %cleanup1, !dbg !9315

bb3:                                              ; preds = %bb2
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %13 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17he4dfac28b3bf6b8dE"(%"alloc::string::String"* align 8 %_8)
          to label %bb4 unwind label %cleanup2, !dbg !9315

abort:                                            ; preds = %bb13, %bb11, %bb10, %bb12
  %14 = landingpad { i8*, i32 }
          cleanup, !dbg !9316
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #20, !dbg !9316
  unreachable, !dbg !9316

bb10:                                             ; preds = %cleanup2
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"* %s) #19
          to label %bb11 unwind label %abort, !dbg !9313

cleanup2:                                         ; preds = %bb5, %bb4, %bb3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb10

bb4:                                              ; preds = %bb3
  %_6.0 = extractvalue { [0 x i8]*, i64 } %13, 0, !dbg !9315
  %_6.1 = extractvalue { [0 x i8]*, i64 } %13, 1, !dbg !9315
; invoke core::str::<impl str>::parse
  %20 = invoke { i32, i32 } @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h0619204c43476cdeE"([0 x i8]* align 1 %_6.0, i64 %_6.1)
          to label %bb5 unwind label %cleanup2, !dbg !9315

bb5:                                              ; preds = %bb4
  %_4.0 = extractvalue { i32, i32 } %20, 0, !dbg !9315
  %_4.1 = extractvalue { i32, i32 } %20, 1, !dbg !9315
; invoke core::result::Result<T,E>::unwrap
  %21 = invoke i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hbad39de2ad96f304E"(i32 %_4.0, i32 %_4.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc247 to %"core::panic::location::Location"*))
          to label %bb6 unwind label %cleanup2, !dbg !9315

bb6:                                              ; preds = %bb5
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"* %s)
          to label %bb7 unwind label %cleanup3, !dbg !9313

bb11:                                             ; preds = %cleanup3, %bb10
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"* %_8) #19
          to label %bb13 unwind label %abort, !dbg !9313

cleanup3:                                         ; preds = %bb6
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb11

bb7:                                              ; preds = %bb6
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"* %_8)
          to label %bb8 unwind label %cleanup, !dbg !9313

bb8:                                              ; preds = %bb7
; call core::ptr::drop_in_place<proc_macro::TokenStream>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h5984f1a9e3d64235E"(i32* %item), !dbg !9313
  br label %bb9, !dbg !9313

bb14:                                             ; preds = %bb13
  %27 = bitcast { i8*, i32 }* %1 to i8**, !dbg !9316
  %28 = load i8*, i8** %27, align 8, !dbg !9316
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !9316
  %30 = load i32, i32* %29, align 8, !dbg !9316
  %31 = insertvalue { i8*, i32 } undef, i8* %28, 0, !dbg !9316
  %32 = insertvalue { i8*, i32 } %31, i32 %30, 1, !dbg !9316
  resume { i8*, i32 } %32, !dbg !9316

bb9:                                              ; preds = %bb8
  ret i32 %21, !dbg !9317
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #7

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
declare i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf5c71e8a33b2e895E"(%"alloc::vec::Vec<u8>"* align 8) unnamed_addr #0

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
declare { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h027adc00ed696f09E"(i64, i64, [0 x i8]*, i64) unnamed_addr #0

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index22slice_index_order_fail17ha5ea6a931f940f05E(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #4

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index24slice_end_index_len_fail17hc132699ea07ad3eeE(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #4

; Function Attrs: nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #1

; core::panicking::panic_no_unwind
; Function Attrs: cold noinline noreturn nounwind nonlazybind uwtable
declare void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #9

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1, i64, %"core::panic::location::Location"* align 8) unnamed_addr #4

; <proc_macro::bridge::buffer::Buffer as core::convert::From<alloc::vec::Vec<u8>>>::from
; Function Attrs: nonlazybind uwtable
declare void @"_ZN107_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$core..convert..From$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$4from17hae087b0765d8b4d8E"(%"proc_macro::bridge::buffer::Buffer"* sret(%"proc_macro::bridge::buffer::Buffer"), %"alloc::vec::Vec<u8>"*) unnamed_addr #1

; proc_macro::bridge::symbol::Symbol::invalidate_all
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro6bridge6symbol6Symbol14invalidate_all17ha1707764c36a0d84E() unnamed_addr #1

; proc_macro::bridge::client::maybe_install_panic_hook
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro6bridge6client24maybe_install_panic_hook17hc0c60877daa0e856E(i1 zeroext) unnamed_addr #1

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"*, %"core::panic::location::Location"* align 8) unnamed_addr #4

; core::slice::iter::Iter<T>::as_slice
; Function Attrs: nonlazybind uwtable
declare { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17ha674f49ca7c71770E"({ i8*, i8* }* align 8) unnamed_addr #1

; <&T as core::convert::AsRef<U>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
declare { [0 x i8]*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h070ed05afd8b3047E"({ [0 x i8]*, i64 }* align 8) unnamed_addr #0

; alloc::ffi::c_str::CString::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN5alloc3ffi5c_str7CString3new17h0cecf027ce58c664E(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"), [0 x i8]* align 1, i64) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @strtoflt128_f(i8*) unnamed_addr #1

; core::ptr::drop_in_place<alloc::ffi::c_str::CString>
; Function Attrs: nonlazybind uwtable
declare void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h60597de3fa84e837E"({ i8*, i64 }*) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; std::sys::unix::thread_local_dtor::register_dtor
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys4unix17thread_local_dtor13register_dtor17h3a4b010953491cd9E(i8*, void (i8*)*) unnamed_addr #1

; core::ptr::drop_in_place<alloc::string::String>
; Function Attrs: nonlazybind uwtable
declare void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"*) unnamed_addr #1

; std::panicking::rust_panic_with_hook
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN3std9panicking20rust_panic_with_hook17hf1e7a1cb721a9823E({}* align 1, [3 x i64]* align 8, i64* align 8, %"core::panic::location::Location"* align 8, i1 zeroext) unnamed_addr #11

; Function Attrs: nonlazybind
define internal i32 @__rust_try(void (i8*)* %0, i8* %1, void (i8*, i8*)* %2) unnamed_addr #12 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
entry-block:
  invoke void %0(i8* %1)
          to label %then unwind label %catch

then:                                             ; preds = %entry-block
  ret i32 0

catch:                                            ; preds = %entry-block
  %3 = landingpad { i8*, i32 }
          catch i8* null
  %4 = extractvalue { i8*, i32 } %3, 0
  call void %2(i8* %1, i8* %4)
  ret i32 1
}

; std::panicking::try::cleanup
; Function Attrs: cold nonlazybind uwtable
declare { {}*, [3 x i64]* } @_ZN3std9panicking3try7cleanup17hc943fe53eebad02eE(i8*) unnamed_addr #6

; <str as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h158131d6df421a05E"([0 x i8]* align 1, i64, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::Formatter::debug_list
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3fmt9Formatter10debug_list17h2e70d1c34e8cb782E(%"core::fmt::builders::DebugList"* sret(%"core::fmt::builders::DebugList"), %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
declare { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17ha977156ac332a7d0E"([0 x i8]* align 1, i64) unnamed_addr #0

; core::fmt::builders::DebugList::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17ha896c0aa3642bf32E(%"core::fmt::builders::DebugList"* align 8) unnamed_addr #1

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h861f5ddbf758e4f9E(%"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17h437d704c417669d5E"(i8* align 1, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h21ddf2be2e6a0fd5E(%"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17h1deefbda95ae754eE"(i8* align 1, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17h2c072cd9eb854d8eE"(i8* align 1, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
declare { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h99c7c5edb85f7ec6E"(i8*, i8*) unnamed_addr #0

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
declare align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h49c6b49183a26f7dE"({ i8*, i8* }* align 8) unnamed_addr #0

; core::fmt::builders::DebugList::entry
; Function Attrs: nonlazybind uwtable
declare align 8 %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList5entry17h5007920add23274dE(%"core::fmt::builders::DebugList"* align 8, {}* align 1, [3 x i64]* align 8) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #13

; <proc_macro::bridge::rpc::PanicMessage as core::convert::From<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>>::from
; Function Attrs: nonlazybind uwtable
declare void @"_ZN155_$LT$proc_macro..bridge..rpc..PanicMessage$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$4from17hbfc4fc89b394159dE"(%"proc_macro::bridge::rpc::PanicMessage"* sret(%"proc_macro::bridge::rpc::PanicMessage"), {}* align 1, [3 x i64]* align 8) unnamed_addr #1

; core::ptr::drop_in_place<alloc::ffi::c_str::NulError>
; Function Attrs: nonlazybind uwtable
declare void @"_ZN4core3ptr48drop_in_place$LT$alloc..ffi..c_str..NulError$GT$17h298172dc09689c5bE"(%"alloc::ffi::c_str::NulError"*) unnamed_addr #1

; <proc_macro::bridge::client::TokenStream as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN81_$LT$proc_macro..bridge..client..TokenStream$u20$as$u20$core..ops..drop..Drop$GT$4drop17h221b41faa42f92beE"(i32* align 4) unnamed_addr #1

; <proc_macro::TokenStream as core::str::traits::FromStr>::from_str
; Function Attrs: nonlazybind uwtable
declare { i32, i32 } @"_ZN70_$LT$proc_macro..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str17hab35b9822424069aE"([0 x i8]* align 1, i64) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE"(i64* align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h1d19ab97b54bf162E"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17len_mismatch_fail17h19e3e22fb19335d6E"(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #4

; core::slice::memchr::memchr_general_case
; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @_ZN4core5slice6memchr19memchr_general_case17h8d14ec4c11d8af08E(i8, [0 x i8]* align 1, i64) unnamed_addr #1

; <std::thread::local::AccessError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN68_$LT$std..thread..local..AccessError$u20$as$u20$core..fmt..Debug$GT$3fmt17h3b11f678344b3b67E"(%"std::thread::local::AccessError"* align 1, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::result::unwrap_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6result13unwrap_failed17hff48f82f03d418aeE([0 x i8]* align 1, i64, {}* align 1, [3 x i64]* align 8, %"core::panic::location::Location"* align 8) unnamed_addr #4

; <std::io::error::Error as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h9412cc25832b82a2E"(i8** align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; <proc_macro::LexError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN57_$LT$proc_macro..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17ha30ce66e4b763940E"(%"proc_macro::LexError"* align 1, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #14

; core::option::Option<T>::map_or_else
; Function Attrs: inlinehint nonlazybind uwtable
declare void @"_ZN4core6option15Option$LT$T$GT$11map_or_else17h2b746e8d475aa0c8E"(%"alloc::string::String"* sret(%"alloc::string::String"), i8* align 1, i64, i64* align 8) unnamed_addr #0

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
declare i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h34c25918ba95f615E"(%"alloc::vec::Vec<u8>"* align 8) unnamed_addr #0

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64, i64) unnamed_addr #15

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #16

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc(i64, i64) unnamed_addr #16

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
declare i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hc739bec02c7381b9E"(i8*) unnamed_addr #0

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
declare void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h5a2efa16e49566acE"() unnamed_addr #1

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #17

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_realloc(i8*, i64, i64, i64) unnamed_addr #16

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() unnamed_addr #11

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
declare { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hd3d68a432436475dE(i64) unnamed_addr #0

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
declare void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hb676db2ab53775bbE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"), { i8*, i64 }* align 8) unnamed_addr #1

; Function Attrs: nounwind nonlazybind uwtable
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #16

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
declare { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h3c5f3b3dceabe859E"(i64, i64, [0 x i8]* align 1, i64, %"core::panic::location::Location"* align 8) unnamed_addr #0

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
declare { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hb301fe5216e6dc3bE"(i64, [0 x i8]* align 1, i64, %"core::panic::location::Location"* align 8) unnamed_addr #0

; core::intrinsics::const_eval_select
; Function Attrs: inlinehint nonlazybind uwtable
declare { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core10intrinsics17const_eval_select17h9e040f661d44916eE(i8* align 1, i64) unnamed_addr #0

; core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17he344d24537209facE"([0 x i8]* align 1, i64, [0 x i8]* align 1, i64) unnamed_addr #1

; std::process::abort
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN3std7process5abort17h30ba2cb9a1e8646dE() unnamed_addr #15

; proc_macro::bridge::rpc::PanicMessage::as_str
; Function Attrs: nonlazybind uwtable
declare { i8*, i64 } @_ZN10proc_macro6bridge3rpc12PanicMessage6as_str17h80e48df7352c014cE(%"proc_macro::bridge::rpc::PanicMessage"* align 8) unnamed_addr #1

; <proc_macro::TokenStream as alloc::string::ToString>::to_string
; Function Attrs: nonlazybind uwtable
declare void @"_ZN67_$LT$proc_macro..TokenStream$u20$as$u20$alloc..string..ToString$GT$9to_string17hdddab7d4157dc6f7E"(%"alloc::string::String"* sret(%"alloc::string::String"), i32* align 4) unnamed_addr #1

; proc_macro::bridge::client::HandleCounters::get
; Function Attrs: nonlazybind uwtable
declare align 8 %"proc_macro::bridge::client::HandleCounters"* @_ZN10proc_macro6bridge6client14HandleCounters3get17h671f5d76124a041eE() unnamed_addr #1

attributes #0 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #3 = { noinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #4 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #5 = { inlinehint noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #6 = { cold nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #7 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #8 = { cold noinline noreturn nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #9 = { argmemonly nofree nounwind willreturn }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #12 = { nonlazybind "target-cpu"="x86-64" }
attributes #13 = { nofree nosync nounwind readnone willreturn }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { cold noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #16 = { nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #17 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #18 = { noreturn }
attributes #19 = { noinline }
attributes #20 = { noinline noreturn nounwind }
attributes #21 = { nounwind }

!llvm.module.flags = !{!395, !396, !397, !398}
!llvm.dbg.cu = !{!399}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<std::panicking::begin_panic::PanicPayload<alloc::string::String> as core::panic::BoxMeUp>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<std::panicking::begin_panic::PanicPayload<alloc::string::String> as core::panic::BoxMeUp>::{vtable_type}", file: !2, size: 320, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !13, templateParams: !27, identifier: "7985524a3c51ce4b77a9c3b0aceb6a6")
!4 = !{!5, !8, !10, !11, !12}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 256)
!13 = !DICompositeType(tag: DW_TAG_structure_type, name: "PanicPayload<alloc::string::String>", scope: !14, file: !2, size: 192, align: 64, elements: !17, templateParams: !72, identifier: "9c605b083cb151925c83fcf695b3d34b")
!14 = !DINamespace(name: "begin_panic", scope: !15)
!15 = !DINamespace(name: "panicking", scope: !16)
!16 = !DINamespace(name: "std", scope: null)
!17 = !{!18}
!18 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !13, file: !2, baseType: !19, size: 192, align: 64)
!19 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::string::String>", scope: !20, file: !2, size: 192, align: 64, elements: !22, templateParams: !27, identifier: "e57ba4b2645742ac80028345ae3e3b7e")
!20 = !DINamespace(name: "option", scope: !21)
!21 = !DINamespace(name: "core", scope: null)
!22 = !{!23}
!23 = !DICompositeType(tag: DW_TAG_variant_part, scope: !19, file: !2, size: 192, align: 64, elements: !24, templateParams: !27, identifier: "543e21bd6ff6b14b475ba99e29f0198a", discriminator: !70)
!24 = !{!25, !66}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !23, file: !2, baseType: !26, size: 192, align: 64, extraData: i64 0)
!26 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !19, file: !2, size: 192, align: 64, elements: !27, templateParams: !28, identifier: "ec22a260f66480db9e9c99b9abc35989")
!27 = !{}
!28 = !{!29}
!29 = !DITemplateTypeParameter(name: "T", type: !30)
!30 = !DICompositeType(tag: DW_TAG_structure_type, name: "String", scope: !31, file: !2, size: 192, align: 64, elements: !33, templateParams: !27, identifier: "f9be69e76fc784402e5b8eb88fb718b5")
!31 = !DINamespace(name: "string", scope: !32)
!32 = !DINamespace(name: "alloc", scope: null)
!33 = !{!34}
!34 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !30, file: !2, baseType: !35, size: 192, align: 64)
!35 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<u8, alloc::alloc::Global>", scope: !36, file: !2, size: 192, align: 64, elements: !37, templateParams: !63, identifier: "f48a096c1ed19eb7ba15a7173429013")
!36 = !DINamespace(name: "vec", scope: !32)
!37 = !{!38, !65}
!38 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !35, file: !2, baseType: !39, size: 128, align: 64)
!39 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<u8, alloc::alloc::Global>", scope: !40, file: !2, size: 128, align: 64, elements: !41, templateParams: !63, identifier: "d09dab1a097018b9dd4dad6f3ce84c27")
!40 = !DINamespace(name: "raw_vec", scope: !32)
!41 = !{!42, !59, !60}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !39, file: !2, baseType: !43, size: 64, align: 64)
!43 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<u8>", scope: !44, file: !2, size: 64, align: 64, elements: !46, templateParams: !54, identifier: "7e72c5db004520f6d0779c7d4ace2142")
!44 = !DINamespace(name: "unique", scope: !45)
!45 = !DINamespace(name: "ptr", scope: !21)
!46 = !{!47, !56}
!47 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !43, file: !2, baseType: !48, size: 64, align: 64)
!48 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !49, file: !2, size: 64, align: 64, elements: !50, templateParams: !54, identifier: "3160283ea80cecf6149fff38a2e996de")
!49 = !DINamespace(name: "non_null", scope: !45)
!50 = !{!51}
!51 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !48, file: !2, baseType: !52, size: 64, align: 64)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !53, size: 64, align: 64, dwarfAddressSpace: 0)
!53 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!54 = !{!55}
!55 = !DITemplateTypeParameter(name: "T", type: !53)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !43, file: !2, baseType: !57, align: 8)
!57 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<u8>", scope: !58, file: !2, align: 8, elements: !27, templateParams: !54, identifier: "e338a8151f1037c76eadd10ab3c53972")
!58 = !DINamespace(name: "marker", scope: !21)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !39, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !39, file: !2, baseType: !61, align: 8)
!61 = !DICompositeType(tag: DW_TAG_structure_type, name: "Global", scope: !62, file: !2, align: 8, elements: !27, identifier: "3328ba4994ba07f4a4a3e83fae935932")
!62 = !DINamespace(name: "alloc", scope: !32)
!63 = !{!55, !64}
!64 = !DITemplateTypeParameter(name: "A", type: !61)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !35, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !23, file: !2, baseType: !67, size: 192, align: 64)
!67 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !19, file: !2, size: 192, align: 64, elements: !68, templateParams: !28, identifier: "10653187bab481cceda9c29be1112f74")
!68 = !{!69}
!69 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !67, file: !2, baseType: !30, size: 192, align: 64)
!70 = !DIDerivedType(tag: DW_TAG_member, scope: !19, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!71 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!72 = !{!73}
!73 = !DITemplateTypeParameter(name: "A", type: !30)
!74 = !DIGlobalVariableExpression(var: !75, expr: !DIExpression())
!75 = distinct !DIGlobalVariable(name: "<&u8 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !76, isLocal: true, isDefinition: true)
!76 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u8 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !77, vtableHolder: !82, templateParams: !27, identifier: "cc03c6bff4d9639024183c9c09565e2e")
!77 = !{!78, !79, !80, !81}
!78 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !76, file: !2, baseType: !6, size: 64, align: 64)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !76, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !76, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !76, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!82 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !53, size: 64, align: 64, dwarfAddressSpace: 0)
!83 = !DIGlobalVariableExpression(var: !84, expr: !DIExpression())
!84 = distinct !DIGlobalVariable(name: "<std::thread::local::AccessError as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !85, isLocal: true, isDefinition: true)
!85 = !DICompositeType(tag: DW_TAG_structure_type, name: "<std::thread::local::AccessError as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !86, vtableHolder: !91, templateParams: !27, identifier: "cc5be580cb0df255ec480aafb486f1d8")
!86 = !{!87, !88, !89, !90}
!87 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !85, file: !2, baseType: !6, size: 64, align: 64)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !85, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !85, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !85, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!91 = !DICompositeType(tag: DW_TAG_structure_type, name: "AccessError", scope: !92, file: !2, align: 8, elements: !27, identifier: "b46b3a258fa8da6295bb615e7cb8f1fa")
!92 = !DINamespace(name: "local", scope: !93)
!93 = !DINamespace(name: "thread", scope: !16)
!94 = !DIGlobalVariableExpression(var: !95, expr: !DIExpression())
!95 = distinct !DIGlobalVariable(name: "<std::io::error::Error as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !96, isLocal: true, isDefinition: true)
!96 = !DICompositeType(tag: DW_TAG_structure_type, name: "<std::io::error::Error as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !97, vtableHolder: !102, templateParams: !27, identifier: "5524bda69378138df0eaa44a0fa62936")
!97 = !{!98, !99, !100, !101}
!98 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !96, file: !2, baseType: !6, size: 64, align: 64)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !96, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !96, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !96, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!102 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !103, file: !2, size: 64, align: 64, elements: !105, templateParams: !27, identifier: "35ef22def08c837ae3878504674e366b")
!103 = !DINamespace(name: "error", scope: !104)
!104 = !DINamespace(name: "io", scope: !16)
!105 = !{!106}
!106 = !DIDerivedType(tag: DW_TAG_member, name: "repr", scope: !102, file: !2, baseType: !107, size: 64, align: 64)
!107 = !DICompositeType(tag: DW_TAG_structure_type, name: "Repr", scope: !108, file: !2, size: 64, align: 64, elements: !109, templateParams: !27, identifier: "6570f3d28135329fbed4cb7a1951e32d")
!108 = !DINamespace(name: "repr_bitpacked", scope: !103)
!109 = !{!110, !116}
!110 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !107, file: !2, baseType: !111, size: 64, align: 64)
!111 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<()>", scope: !49, file: !2, size: 64, align: 64, elements: !112, templateParams: !114, identifier: "b858013ea474e1eef5ccba3870fe353d")
!112 = !{!113}
!113 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !111, file: !2, baseType: !6, size: 64, align: 64)
!114 = !{!115}
!115 = !DITemplateTypeParameter(name: "T", type: !7)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !107, file: !2, baseType: !117, align: 8)
!117 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>>", scope: !58, file: !2, align: 8, elements: !27, templateParams: !118, identifier: "1d073321bd67e7be57d2b831b78eb78b")
!118 = !{!119}
!119 = !DITemplateTypeParameter(name: "T", type: !120)
!120 = !DICompositeType(tag: DW_TAG_structure_type, name: "ErrorData<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>", scope: !103, file: !2, size: 128, align: 64, elements: !121, templateParams: !27, identifier: "64bf9ab43a422ff7882cc64d405e6db4")
!121 = !{!122}
!122 = !DICompositeType(tag: DW_TAG_variant_part, scope: !120, file: !2, size: 128, align: 64, elements: !123, templateParams: !27, identifier: "32d46417816a4970232155829bec3de0", discriminator: !211)
!123 = !{!124, !189, !193, !207}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "Os", scope: !122, file: !2, baseType: !125, size: 128, align: 64, extraData: i64 0)
!125 = !DICompositeType(tag: DW_TAG_structure_type, name: "Os", scope: !120, file: !2, size: 128, align: 64, elements: !126, templateParams: !129, identifier: "51312ccd08399ffb43fb895d8a6353de")
!126 = !{!127}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !125, file: !2, baseType: !128, size: 32, align: 32, offset: 32)
!128 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!129 = !{!130}
!130 = !DITemplateTypeParameter(name: "C", type: !131)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>", baseType: !132, size: 64, align: 64, dwarfAddressSpace: 0)
!132 = !DICompositeType(tag: DW_TAG_structure_type, name: "Custom", scope: !103, file: !2, size: 192, align: 64, elements: !133, templateParams: !27, identifier: "387ae58cacb5ae1d4fddf7f57315f38d")
!133 = !{!134, !178}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !132, file: !2, baseType: !135, size: 8, align: 8, offset: 128)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ErrorKind", scope: !103, file: !2, baseType: !53, size: 8, align: 8, flags: DIFlagEnumClass, elements: !136)
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177}
!137 = !DIEnumerator(name: "NotFound", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "PermissionDenied", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ConnectionRefused", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ConnectionReset", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "HostUnreachable", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "NetworkUnreachable", value: 5, isUnsigned: true)
!143 = !DIEnumerator(name: "ConnectionAborted", value: 6, isUnsigned: true)
!144 = !DIEnumerator(name: "NotConnected", value: 7, isUnsigned: true)
!145 = !DIEnumerator(name: "AddrInUse", value: 8, isUnsigned: true)
!146 = !DIEnumerator(name: "AddrNotAvailable", value: 9, isUnsigned: true)
!147 = !DIEnumerator(name: "NetworkDown", value: 10, isUnsigned: true)
!148 = !DIEnumerator(name: "BrokenPipe", value: 11, isUnsigned: true)
!149 = !DIEnumerator(name: "AlreadyExists", value: 12, isUnsigned: true)
!150 = !DIEnumerator(name: "WouldBlock", value: 13, isUnsigned: true)
!151 = !DIEnumerator(name: "NotADirectory", value: 14, isUnsigned: true)
!152 = !DIEnumerator(name: "IsADirectory", value: 15, isUnsigned: true)
!153 = !DIEnumerator(name: "DirectoryNotEmpty", value: 16, isUnsigned: true)
!154 = !DIEnumerator(name: "ReadOnlyFilesystem", value: 17, isUnsigned: true)
!155 = !DIEnumerator(name: "FilesystemLoop", value: 18, isUnsigned: true)
!156 = !DIEnumerator(name: "StaleNetworkFileHandle", value: 19, isUnsigned: true)
!157 = !DIEnumerator(name: "InvalidInput", value: 20, isUnsigned: true)
!158 = !DIEnumerator(name: "InvalidData", value: 21, isUnsigned: true)
!159 = !DIEnumerator(name: "TimedOut", value: 22, isUnsigned: true)
!160 = !DIEnumerator(name: "WriteZero", value: 23, isUnsigned: true)
!161 = !DIEnumerator(name: "StorageFull", value: 24, isUnsigned: true)
!162 = !DIEnumerator(name: "NotSeekable", value: 25, isUnsigned: true)
!163 = !DIEnumerator(name: "FilesystemQuotaExceeded", value: 26, isUnsigned: true)
!164 = !DIEnumerator(name: "FileTooLarge", value: 27, isUnsigned: true)
!165 = !DIEnumerator(name: "ResourceBusy", value: 28, isUnsigned: true)
!166 = !DIEnumerator(name: "ExecutableFileBusy", value: 29, isUnsigned: true)
!167 = !DIEnumerator(name: "Deadlock", value: 30, isUnsigned: true)
!168 = !DIEnumerator(name: "CrossesDevices", value: 31, isUnsigned: true)
!169 = !DIEnumerator(name: "TooManyLinks", value: 32, isUnsigned: true)
!170 = !DIEnumerator(name: "InvalidFilename", value: 33, isUnsigned: true)
!171 = !DIEnumerator(name: "ArgumentListTooLong", value: 34, isUnsigned: true)
!172 = !DIEnumerator(name: "Interrupted", value: 35, isUnsigned: true)
!173 = !DIEnumerator(name: "Unsupported", value: 36, isUnsigned: true)
!174 = !DIEnumerator(name: "UnexpectedEof", value: 37, isUnsigned: true)
!175 = !DIEnumerator(name: "OutOfMemory", value: 38, isUnsigned: true)
!176 = !DIEnumerator(name: "Other", value: 39, isUnsigned: true)
!177 = !DIEnumerator(name: "Uncategorized", value: 40, isUnsigned: true)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !132, file: !2, baseType: !179, size: 128, align: 64)
!179 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !180, templateParams: !27, identifier: "49e1ff5efd573d092283dcd4348771ac")
!180 = !{!181, !184}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !179, file: !2, baseType: !182, size: 64, align: 64)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64, align: 64, dwarfAddressSpace: 0)
!183 = !DICompositeType(tag: DW_TAG_structure_type, name: "(dyn std::error::Error + core::marker::Send + core::marker::Sync)", file: !2, align: 8, elements: !27, identifier: "d998709730b54ebefffe35f2808c071f")
!184 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !179, file: !2, baseType: !185, size: 64, align: 64, offset: 64)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !186, size: 64, align: 64, dwarfAddressSpace: 0)
!186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 64, elements: !187)
!187 = !{!188}
!188 = !DISubrange(count: 3, lowerBound: 0)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "Simple", scope: !122, file: !2, baseType: !190, size: 128, align: 64, extraData: i64 1)
!190 = !DICompositeType(tag: DW_TAG_structure_type, name: "Simple", scope: !120, file: !2, size: 128, align: 64, elements: !191, templateParams: !129, identifier: "d6fdaf6afb7f06ba830e20c3b7cdf96a")
!191 = !{!192}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !190, file: !2, baseType: !135, size: 8, align: 8, offset: 8)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "SimpleMessage", scope: !122, file: !2, baseType: !194, size: 128, align: 64, extraData: i64 2)
!194 = !DICompositeType(tag: DW_TAG_structure_type, name: "SimpleMessage", scope: !120, file: !2, size: 128, align: 64, elements: !195, templateParams: !129, identifier: "6cf4fba8ceca59eba147622df4399a69")
!195 = !{!196}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !194, file: !2, baseType: !197, size: 64, align: 64, offset: 64)
!197 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::io::error::SimpleMessage", baseType: !198, size: 64, align: 64, dwarfAddressSpace: 0)
!198 = !DICompositeType(tag: DW_TAG_structure_type, name: "SimpleMessage", scope: !103, file: !2, size: 192, align: 64, elements: !199, templateParams: !27, identifier: "7efc891383873a5dce28ace1bc51c9d2")
!199 = !{!200, !201}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !198, file: !2, baseType: !135, size: 8, align: 8, offset: 128)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !198, file: !2, baseType: !202, size: 128, align: 64)
!202 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !203, templateParams: !27, identifier: "c603ebb2af364502ef89131a86c6ad9b")
!203 = !{!204, !206}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !202, file: !2, baseType: !205, size: 64, align: 64)
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64, align: 64, dwarfAddressSpace: 0)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !202, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "Custom", scope: !122, file: !2, baseType: !208, size: 128, align: 64, extraData: i64 3)
!208 = !DICompositeType(tag: DW_TAG_structure_type, name: "Custom", scope: !120, file: !2, size: 128, align: 64, elements: !209, templateParams: !129, identifier: "591e506d10606579798142c7aef919f4")
!209 = !{!210}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !208, file: !2, baseType: !131, size: 64, align: 64, offset: 64)
!211 = !DIDerivedType(tag: DW_TAG_member, scope: !120, file: !2, baseType: !53, size: 8, align: 8, flags: DIFlagArtificial)
!212 = !DIGlobalVariableExpression(var: !213, expr: !DIExpression())
!213 = distinct !DIGlobalVariable(name: "<proc_macro::LexError as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !214, isLocal: true, isDefinition: true)
!214 = !DICompositeType(tag: DW_TAG_structure_type, name: "<proc_macro::LexError as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !215, vtableHolder: !220, templateParams: !27, identifier: "de5d9466ee59d16cb68259c3b1ff6265")
!215 = !{!216, !217, !218, !219}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !214, file: !2, baseType: !6, size: 64, align: 64)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !214, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !214, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !214, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!220 = !DICompositeType(tag: DW_TAG_structure_type, name: "LexError", scope: !221, file: !2, align: 8, elements: !27, identifier: "561439df579bba39d27b41bb6e6d90bd")
!221 = !DINamespace(name: "proc_macro", scope: null)
!222 = !DIGlobalVariableExpression(var: !223, expr: !DIExpression())
!223 = distinct !DIGlobalVariable(name: "<alloc::string::String as core::any::Any>::{vtable}", scope: null, file: !2, type: !224, isLocal: true, isDefinition: true)
!224 = !DICompositeType(tag: DW_TAG_structure_type, name: "<alloc::string::String as core::any::Any>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !225, vtableHolder: !30, templateParams: !27, identifier: "c6324ed888f6efcb4653fbd70e377684")
!225 = !{!226, !227, !228, !229}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !224, file: !2, baseType: !6, size: 64, align: 64)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !224, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !224, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !224, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!230 = !DIGlobalVariableExpression(var: !231, expr: !DIExpression())
!231 = distinct !DIGlobalVariable(name: "_DECLS", linkageName: "__rustc_proc_macro_decls_df67d460d0c3c3a7__", scope: !232, file: !2, type: !234, isLocal: false, isDefinition: true, align: 64)
!232 = !DINamespace(name: "_", scope: !233)
!233 = !DINamespace(name: "f128_input", scope: null)
!234 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[proc_macro::bridge::client::ProcMacro]", file: !2, size: 128, align: 64, elements: !235, templateParams: !27, identifier: "f373bec6ae2e5d675b86a8e1b94caae")
!235 = !{!236, !394}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !234, file: !2, baseType: !237, size: 64, align: 64)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64, align: 64, dwarfAddressSpace: 0)
!238 = !DICompositeType(tag: DW_TAG_structure_type, name: "ProcMacro", scope: !239, file: !2, size: 448, align: 64, elements: !241, templateParams: !27, identifier: "38d3b9ee6744be26ea9712825c3539fb")
!239 = !DINamespace(name: "client", scope: !240)
!240 = !DINamespace(name: "bridge", scope: !221)
!241 = !{!242}
!242 = !DICompositeType(tag: DW_TAG_variant_part, scope: !238, file: !2, size: 448, align: 64, elements: !243, templateParams: !27, identifier: "369c11e06d1ad367f08ea7dfedca98db", discriminator: !393)
!243 = !{!244, !366, !388}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "CustomDerive", scope: !242, file: !2, baseType: !245, size: 448, align: 64, extraData: i64 0)
!245 = !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDerive", scope: !238, file: !2, size: 448, align: 64, elements: !246, templateParams: !27, identifier: "fbad7f2aa44b10cbde1d77240c9833e5")
!246 = !{!247, !248, !254}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "trait_name", scope: !245, file: !2, baseType: !202, size: 128, align: 64, offset: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !245, file: !2, baseType: !249, size: 128, align: 64, offset: 192)
!249 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !250, templateParams: !27, identifier: "120d786d314e2730a5f45c5e7e56f7d")
!250 = !{!251, !253}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !249, file: !2, baseType: !252, size: 64, align: 64)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64, align: 64, dwarfAddressSpace: 0)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !249, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "client", scope: !245, file: !2, baseType: !255, size: 128, align: 64, offset: 320)
!255 = !DICompositeType(tag: DW_TAG_structure_type, name: "Client<proc_macro::TokenStream, proc_macro::TokenStream>", scope: !239, file: !2, size: 128, align: 64, elements: !256, templateParams: !363, identifier: "ff2935b1576f1d2b2a4f64f85a027975")
!256 = !{!257, !281, !330}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "get_handle_counters", scope: !255, file: !2, baseType: !258, size: 64, align: 64)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "extern \22C\22 fn() -> &proc_macro::bridge::client::HandleCounters", baseType: !259, size: 64, align: 64, dwarfAddressSpace: 0)
!259 = !DISubroutineType(types: !260)
!260 = !{!261}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&proc_macro::bridge::client::HandleCounters", baseType: !262, size: 64, align: 64, dwarfAddressSpace: 0)
!262 = !DICompositeType(tag: DW_TAG_structure_type, name: "HandleCounters", scope: !239, file: !2, size: 384, align: 64, elements: !263, templateParams: !27, identifier: "6db19962c029e3f09ff8ad0d22ecf3dc")
!263 = !{!264, !276, !277, !278, !279, !280}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "FreeFunctions", scope: !262, file: !2, baseType: !265, size: 64, align: 64)
!265 = !DICompositeType(tag: DW_TAG_structure_type, name: "AtomicUsize", scope: !266, file: !2, size: 64, align: 64, elements: !268, templateParams: !27, identifier: "7ffec6c78d83ad83b9e8e18b9f044e78")
!266 = !DINamespace(name: "atomic", scope: !267)
!267 = !DINamespace(name: "sync", scope: !21)
!268 = !{!269}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !265, file: !2, baseType: !270, size: 64, align: 64)
!270 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeCell<usize>", scope: !271, file: !2, size: 64, align: 64, elements: !272, templateParams: !274, identifier: "1096bf4d22c004093180ac32ada74dc8")
!271 = !DINamespace(name: "cell", scope: !21)
!272 = !{!273}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !270, file: !2, baseType: !9, size: 64, align: 64)
!274 = !{!275}
!275 = !DITemplateTypeParameter(name: "T", type: !9)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "TokenStream", scope: !262, file: !2, baseType: !265, size: 64, align: 64, offset: 64)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "SourceFile", scope: !262, file: !2, baseType: !265, size: 64, align: 64, offset: 128)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "MultiSpan", scope: !262, file: !2, baseType: !265, size: 64, align: 64, offset: 192)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "Diagnostic", scope: !262, file: !2, baseType: !265, size: 64, align: 64, offset: 256)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "Span", scope: !262, file: !2, baseType: !265, size: 64, align: 64, offset: 320)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !255, file: !2, baseType: !282, size: 64, align: 64, offset: 64)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "extern \22C\22 fn(proc_macro::bridge::BridgeConfig) -> proc_macro::bridge::buffer::Buffer", baseType: !283, size: 64, align: 64, dwarfAddressSpace: 0)
!283 = !DISubroutineType(types: !284)
!284 = !{!285, !300}
!285 = !DICompositeType(tag: DW_TAG_structure_type, name: "Buffer", scope: !286, file: !2, size: 320, align: 64, elements: !287, templateParams: !27, identifier: "602fbda2600c0b836462c7307194818f")
!286 = !DINamespace(name: "buffer", scope: !240)
!287 = !{!288, !290, !291, !292, !296}
!288 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !285, file: !2, baseType: !289, size: 64, align: 64)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !53, size: 64, align: 64, dwarfAddressSpace: 0)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !285, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !285, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !285, file: !2, baseType: !293, size: 64, align: 64, offset: 192)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "extern \22C\22 fn(proc_macro::bridge::buffer::Buffer, usize) -> proc_macro::bridge::buffer::Buffer", baseType: !294, size: 64, align: 64, dwarfAddressSpace: 0)
!294 = !DISubroutineType(types: !295)
!295 = !{!285, !285, !9}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "drop", scope: !285, file: !2, baseType: !297, size: 64, align: 64, offset: 256)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "extern \22C\22 fn(proc_macro::bridge::buffer::Buffer)", baseType: !298, size: 64, align: 64, dwarfAddressSpace: 0)
!298 = !DISubroutineType(types: !299)
!299 = !{null, !285}
!300 = !DICompositeType(tag: DW_TAG_structure_type, name: "BridgeConfig", scope: !240, file: !2, size: 512, align: 64, elements: !301, templateParams: !27, identifier: "e393a279696efe6e6a43699d5cee1e76")
!301 = !{!302, !303, !323, !325}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !300, file: !2, baseType: !285, size: 320, align: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !300, file: !2, baseType: !304, size: 128, align: 64, offset: 320)
!304 = !DICompositeType(tag: DW_TAG_structure_type, name: "Closure<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::buffer::Buffer>", scope: !305, file: !2, size: 128, align: 64, elements: !306, templateParams: !320, identifier: "81bc8d741a2c2ee739cd61395b540e79")
!305 = !DINamespace(name: "closure", scope: !240)
!306 = !{!307, !313, !314}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !304, file: !2, baseType: !308, size: 64, align: 64)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "unsafe extern \22C\22 fn(*mut proc_macro::bridge::closure::Env, proc_macro::bridge::buffer::Buffer) -> proc_macro::bridge::buffer::Buffer", baseType: !309, size: 64, align: 64, dwarfAddressSpace: 0)
!309 = !DISubroutineType(types: !310)
!310 = !{!285, !311, !285}
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut proc_macro::bridge::closure::Env", baseType: !312, size: 64, align: 64, dwarfAddressSpace: 0)
!312 = !DICompositeType(tag: DW_TAG_structure_type, name: "Env", scope: !305, file: !2, align: 8, elements: !27, identifier: "9658592641be235dbd27ee1e5cf7af65")
!313 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !304, file: !2, baseType: !311, size: 64, align: 64, offset: 64)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !304, file: !2, baseType: !315, align: 8, offset: 128)
!315 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<*mut &mut ()>", scope: !58, file: !2, align: 8, elements: !27, templateParams: !316, identifier: "26601eacdb4fa3c81325244f62de1ac4")
!316 = !{!317}
!317 = !DITemplateTypeParameter(name: "T", type: !318)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &mut ()", baseType: !319, size: 64, align: 64, dwarfAddressSpace: 0)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!320 = !{!321, !322}
!321 = !DITemplateTypeParameter(name: "A", type: !285)
!322 = !DITemplateTypeParameter(name: "R", type: !285)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "force_show_panics", scope: !300, file: !2, baseType: !324, size: 8, align: 8, offset: 448)
!324 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !300, file: !2, baseType: !326, align: 8, offset: 456)
!326 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<*mut ()>", scope: !58, file: !2, align: 8, elements: !27, templateParams: !327, identifier: "18fb208f61778056185d1ea9e77c84e5")
!327 = !{!328}
!328 = !DITemplateTypeParameter(name: "T", type: !329)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !255, file: !2, baseType: !331, align: 8, offset: 128)
!331 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>", scope: !58, file: !2, align: 8, elements: !27, templateParams: !332, identifier: "10277d79c0b195dcd589b2656da817e0")
!332 = !{!333}
!333 = !DITemplateTypeParameter(name: "T", type: !334)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(proc_macro::TokenStream) -> proc_macro::TokenStream", baseType: !335, size: 64, align: 64, dwarfAddressSpace: 0)
!335 = !DISubroutineType(types: !336)
!336 = !{!337, !337}
!337 = !DICompositeType(tag: DW_TAG_structure_type, name: "TokenStream", scope: !221, file: !2, size: 32, align: 32, elements: !338, templateParams: !27, identifier: "92ca8ef9bc6e2b4863b0959f9c97216e")
!338 = !{!339}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !337, file: !2, baseType: !340, size: 32, align: 32)
!340 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<proc_macro::bridge::client::TokenStream>", scope: !20, file: !2, size: 32, align: 32, elements: !341, templateParams: !27, identifier: "8ad0b25bb8d31228302e94cee0a24034")
!341 = !{!342}
!342 = !DICompositeType(tag: DW_TAG_variant_part, scope: !340, file: !2, size: 32, align: 32, elements: !343, templateParams: !27, identifier: "74e7cf86130dadfdfb4eb9fb5d8c5ce4", discriminator: !362)
!343 = !{!344, !358}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !342, file: !2, baseType: !345, size: 32, align: 32, extraData: i64 0)
!345 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !340, file: !2, size: 32, align: 32, elements: !27, templateParams: !346, identifier: "51a5de093dc0919c17bbc4e5158ef522")
!346 = !{!347}
!347 = !DITemplateTypeParameter(name: "T", type: !348)
!348 = !DICompositeType(tag: DW_TAG_structure_type, name: "TokenStream", scope: !239, file: !2, size: 32, align: 32, elements: !349, templateParams: !27, identifier: "d9e64564679f5fcbdec22187d04d0987")
!349 = !{!350, !357}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !348, file: !2, baseType: !351, size: 32, align: 32)
!351 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonZeroU32", scope: !352, file: !2, size: 32, align: 32, elements: !354, templateParams: !27, identifier: "e46ff5734dc27d2ff94aac449842093")
!352 = !DINamespace(name: "nonzero", scope: !353)
!353 = !DINamespace(name: "num", scope: !21)
!354 = !{!355}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !351, file: !2, baseType: !356, size: 32, align: 32)
!356 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !348, file: !2, baseType: !326, align: 8)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !342, file: !2, baseType: !359, size: 32, align: 32)
!359 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !340, file: !2, size: 32, align: 32, elements: !360, templateParams: !346, identifier: "543621716dfd29ee353ce82dd9490845")
!360 = !{!361}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !359, file: !2, baseType: !348, size: 32, align: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, scope: !340, file: !2, baseType: !356, size: 32, align: 32, flags: DIFlagArtificial)
!363 = !{!364, !365}
!364 = !DITemplateTypeParameter(name: "I", type: !337)
!365 = !DITemplateTypeParameter(name: "O", type: !337)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "Attr", scope: !242, file: !2, baseType: !367, size: 448, align: 64, extraData: i64 1)
!367 = !DICompositeType(tag: DW_TAG_structure_type, name: "Attr", scope: !238, file: !2, size: 448, align: 64, elements: !368, templateParams: !27, identifier: "dc352e3c8e4cf28720a68070a7d998d2")
!368 = !{!369, !370}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !367, file: !2, baseType: !202, size: 128, align: 64, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "client", scope: !367, file: !2, baseType: !371, size: 128, align: 64, offset: 192)
!371 = !DICompositeType(tag: DW_TAG_structure_type, name: "Client<(proc_macro::TokenStream, proc_macro::TokenStream), proc_macro::TokenStream>", scope: !239, file: !2, size: 128, align: 64, elements: !372, templateParams: !386, identifier: "ada14285547462f6acbabdf1de63eec0")
!372 = !{!373, !374, !375}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "get_handle_counters", scope: !371, file: !2, baseType: !258, size: 64, align: 64)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !371, file: !2, baseType: !282, size: 64, align: 64, offset: 64)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !371, file: !2, baseType: !376, align: 8, offset: 128)
!376 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<fn((proc_macro::TokenStream, proc_macro::TokenStream)) -> proc_macro::TokenStream>", scope: !58, file: !2, align: 8, elements: !27, templateParams: !377, identifier: "2b5967d5296cf6d4ea0bbe5c0167b767")
!377 = !{!378}
!378 = !DITemplateTypeParameter(name: "T", type: !379)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn((proc_macro::TokenStream, proc_macro::TokenStream)) -> proc_macro::TokenStream", baseType: !380, size: 64, align: 64, dwarfAddressSpace: 0)
!380 = !DISubroutineType(types: !381)
!381 = !{!337, !382}
!382 = !DICompositeType(tag: DW_TAG_structure_type, name: "(proc_macro::TokenStream, proc_macro::TokenStream)", file: !2, size: 64, align: 32, elements: !383, templateParams: !27, identifier: "af8de5f6083ea7e5431ff9973c5541e2")
!383 = !{!384, !385}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !382, file: !2, baseType: !337, size: 32, align: 32)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !382, file: !2, baseType: !337, size: 32, align: 32, offset: 32)
!386 = !{!387, !365}
!387 = !DITemplateTypeParameter(name: "I", type: !382)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "Bang", scope: !242, file: !2, baseType: !389, size: 448, align: 64, extraData: i64 2)
!389 = !DICompositeType(tag: DW_TAG_structure_type, name: "Bang", scope: !238, file: !2, size: 448, align: 64, elements: !390, templateParams: !27, identifier: "d2a17108da42cd68ff239ec74328f674")
!390 = !{!391, !392}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !389, file: !2, baseType: !202, size: 128, align: 64, offset: 64)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "client", scope: !389, file: !2, baseType: !255, size: 128, align: 64, offset: 192)
!393 = !DIDerivedType(tag: DW_TAG_member, scope: !238, file: !2, baseType: !356, size: 32, align: 32, flags: DIFlagArtificial)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !234, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!395 = !{i32 7, !"PIC Level", i32 2}
!396 = !{i32 2, !"RtLibUseGOT", i32 1}
!397 = !{i32 2, !"Dwarf Version", i32 4}
!398 = !{i32 2, !"Debug Info Version", i32 3}
!399 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !400, producer: "clang LLVM (rustc version 1.65.0-nightly (d394408fb 2022-08-07))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !401, globals: !498)
!400 = !DIFile(filename: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/f128_input-0.2.1/src/lib.rs/@/f128_input.d0c3c3a7-cgu.0", directory: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/f128_input-0.2.1")
!401 = !{!402, !411, !135, !479, !485, !492}
!402 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !403, file: !2, baseType: !53, size: 8, align: 8, flags: DIFlagEnumClass, elements: !406)
!403 = !DINamespace(name: "v1", scope: !404)
!404 = !DINamespace(name: "rt", scope: !405)
!405 = !DINamespace(name: "fmt", scope: !21)
!406 = !{!407, !408, !409, !410}
!407 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!408 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!409 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!410 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!411 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ValidAlignEnum64", scope: !412, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagEnumClass, elements: !414)
!412 = !DINamespace(name: "valid_align", scope: !413)
!413 = !DINamespace(name: "mem", scope: !21)
!414 = !{!415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478}
!415 = !DIEnumerator(name: "_Align1Shl0", value: 1, isUnsigned: true)
!416 = !DIEnumerator(name: "_Align1Shl1", value: 2, isUnsigned: true)
!417 = !DIEnumerator(name: "_Align1Shl2", value: 4, isUnsigned: true)
!418 = !DIEnumerator(name: "_Align1Shl3", value: 8, isUnsigned: true)
!419 = !DIEnumerator(name: "_Align1Shl4", value: 16, isUnsigned: true)
!420 = !DIEnumerator(name: "_Align1Shl5", value: 32, isUnsigned: true)
!421 = !DIEnumerator(name: "_Align1Shl6", value: 64, isUnsigned: true)
!422 = !DIEnumerator(name: "_Align1Shl7", value: 128, isUnsigned: true)
!423 = !DIEnumerator(name: "_Align1Shl8", value: 256, isUnsigned: true)
!424 = !DIEnumerator(name: "_Align1Shl9", value: 512, isUnsigned: true)
!425 = !DIEnumerator(name: "_Align1Shl10", value: 1024, isUnsigned: true)
!426 = !DIEnumerator(name: "_Align1Shl11", value: 2048, isUnsigned: true)
!427 = !DIEnumerator(name: "_Align1Shl12", value: 4096, isUnsigned: true)
!428 = !DIEnumerator(name: "_Align1Shl13", value: 8192, isUnsigned: true)
!429 = !DIEnumerator(name: "_Align1Shl14", value: 16384, isUnsigned: true)
!430 = !DIEnumerator(name: "_Align1Shl15", value: 32768, isUnsigned: true)
!431 = !DIEnumerator(name: "_Align1Shl16", value: 65536, isUnsigned: true)
!432 = !DIEnumerator(name: "_Align1Shl17", value: 131072, isUnsigned: true)
!433 = !DIEnumerator(name: "_Align1Shl18", value: 262144, isUnsigned: true)
!434 = !DIEnumerator(name: "_Align1Shl19", value: 524288, isUnsigned: true)
!435 = !DIEnumerator(name: "_Align1Shl20", value: 1048576, isUnsigned: true)
!436 = !DIEnumerator(name: "_Align1Shl21", value: 2097152, isUnsigned: true)
!437 = !DIEnumerator(name: "_Align1Shl22", value: 4194304, isUnsigned: true)
!438 = !DIEnumerator(name: "_Align1Shl23", value: 8388608, isUnsigned: true)
!439 = !DIEnumerator(name: "_Align1Shl24", value: 16777216, isUnsigned: true)
!440 = !DIEnumerator(name: "_Align1Shl25", value: 33554432, isUnsigned: true)
!441 = !DIEnumerator(name: "_Align1Shl26", value: 67108864, isUnsigned: true)
!442 = !DIEnumerator(name: "_Align1Shl27", value: 134217728, isUnsigned: true)
!443 = !DIEnumerator(name: "_Align1Shl28", value: 268435456, isUnsigned: true)
!444 = !DIEnumerator(name: "_Align1Shl29", value: 536870912, isUnsigned: true)
!445 = !DIEnumerator(name: "_Align1Shl30", value: 1073741824, isUnsigned: true)
!446 = !DIEnumerator(name: "_Align1Shl31", value: 2147483648, isUnsigned: true)
!447 = !DIEnumerator(name: "_Align1Shl32", value: 4294967296, isUnsigned: true)
!448 = !DIEnumerator(name: "_Align1Shl33", value: 8589934592, isUnsigned: true)
!449 = !DIEnumerator(name: "_Align1Shl34", value: 17179869184, isUnsigned: true)
!450 = !DIEnumerator(name: "_Align1Shl35", value: 34359738368, isUnsigned: true)
!451 = !DIEnumerator(name: "_Align1Shl36", value: 68719476736, isUnsigned: true)
!452 = !DIEnumerator(name: "_Align1Shl37", value: 137438953472, isUnsigned: true)
!453 = !DIEnumerator(name: "_Align1Shl38", value: 274877906944, isUnsigned: true)
!454 = !DIEnumerator(name: "_Align1Shl39", value: 549755813888, isUnsigned: true)
!455 = !DIEnumerator(name: "_Align1Shl40", value: 1099511627776, isUnsigned: true)
!456 = !DIEnumerator(name: "_Align1Shl41", value: 2199023255552, isUnsigned: true)
!457 = !DIEnumerator(name: "_Align1Shl42", value: 4398046511104, isUnsigned: true)
!458 = !DIEnumerator(name: "_Align1Shl43", value: 8796093022208, isUnsigned: true)
!459 = !DIEnumerator(name: "_Align1Shl44", value: 17592186044416, isUnsigned: true)
!460 = !DIEnumerator(name: "_Align1Shl45", value: 35184372088832, isUnsigned: true)
!461 = !DIEnumerator(name: "_Align1Shl46", value: 70368744177664, isUnsigned: true)
!462 = !DIEnumerator(name: "_Align1Shl47", value: 140737488355328, isUnsigned: true)
!463 = !DIEnumerator(name: "_Align1Shl48", value: 281474976710656, isUnsigned: true)
!464 = !DIEnumerator(name: "_Align1Shl49", value: 562949953421312, isUnsigned: true)
!465 = !DIEnumerator(name: "_Align1Shl50", value: 1125899906842624, isUnsigned: true)
!466 = !DIEnumerator(name: "_Align1Shl51", value: 2251799813685248, isUnsigned: true)
!467 = !DIEnumerator(name: "_Align1Shl52", value: 4503599627370496, isUnsigned: true)
!468 = !DIEnumerator(name: "_Align1Shl53", value: 9007199254740992, isUnsigned: true)
!469 = !DIEnumerator(name: "_Align1Shl54", value: 18014398509481984, isUnsigned: true)
!470 = !DIEnumerator(name: "_Align1Shl55", value: 36028797018963968, isUnsigned: true)
!471 = !DIEnumerator(name: "_Align1Shl56", value: 72057594037927936, isUnsigned: true)
!472 = !DIEnumerator(name: "_Align1Shl57", value: 144115188075855872, isUnsigned: true)
!473 = !DIEnumerator(name: "_Align1Shl58", value: 288230376151711744, isUnsigned: true)
!474 = !DIEnumerator(name: "_Align1Shl59", value: 576460752303423488, isUnsigned: true)
!475 = !DIEnumerator(name: "_Align1Shl60", value: 1152921504606846976, isUnsigned: true)
!476 = !DIEnumerator(name: "_Align1Shl61", value: 2305843009213693952, isUnsigned: true)
!477 = !DIEnumerator(name: "_Align1Shl62", value: 4611686018427387904, isUnsigned: true)
!478 = !DIEnumerator(name: "_Align1Shl63", value: 9223372036854775808, isUnsigned: true)
!479 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DtorState", scope: !480, file: !2, baseType: !53, size: 8, align: 8, flags: DIFlagEnumClass, elements: !481)
!480 = !DINamespace(name: "fast", scope: !92)
!481 = !{!482, !483, !484}
!482 = !DIEnumerator(name: "Unregistered", value: 0, isUnsigned: true)
!483 = !DIEnumerator(name: "Registered", value: 1, isUnsigned: true)
!484 = !DIEnumerator(name: "RunningOrHasRun", value: 2, isUnsigned: true)
!485 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !486, file: !2, baseType: !487, size: 8, align: 8, flags: DIFlagEnumClass, elements: !488)
!486 = !DINamespace(name: "cmp", scope: !21)
!487 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!488 = !{!489, !490, !491}
!489 = !DIEnumerator(name: "Less", value: 255)
!490 = !DIEnumerator(name: "Equal", value: 0)
!491 = !DIEnumerator(name: "Greater", value: 1)
!492 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !493, file: !2, baseType: !53, size: 8, align: 8, flags: DIFlagEnumClass, elements: !494)
!493 = !DINamespace(name: "panicking", scope: !21)
!494 = !{!495, !496, !497}
!495 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!496 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!497 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!498 = !{!0, !74, !83, !94, !212, !222, !230}
!499 = distinct !DISubprogram(name: "index", linkageName: "_ZN100_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17h5b81c5e26663cc31E", scope: !501, file: !500, line: 2341, type: !502, scopeLine: 2341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !516)
!500 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/string.rs", directory: "", checksumkind: CSK_MD5, checksum: "e1c2cdf24b94f38a53da13b30e8aa8ef")
!501 = !DINamespace(name: "{impl#28}", scope: !31)
!502 = !DISubroutineType(types: !503)
!503 = !{!202, !504, !505, !508}
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::string::String", baseType: !30, size: 64, align: 64, dwarfAddressSpace: 0)
!505 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFull", scope: !506, file: !2, align: 8, elements: !27, identifier: "63a67109926f3a3dc00488fbc228c0f9")
!506 = !DINamespace(name: "range", scope: !507)
!507 = !DINamespace(name: "ops", scope: !21)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !509, size: 64, align: 64, dwarfAddressSpace: 0)
!509 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !510, file: !2, size: 192, align: 64, elements: !512, templateParams: !27, identifier: "ef576a844c237f54e9e75bf7bba044c0")
!510 = !DINamespace(name: "location", scope: !511)
!511 = !DINamespace(name: "panic", scope: !21)
!512 = !{!513, !514, !515}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !509, file: !2, baseType: !202, size: 128, align: 64)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !509, file: !2, baseType: !356, size: 32, align: 32, offset: 128)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !509, file: !2, baseType: !356, size: 32, align: 32, offset: 160)
!516 = !{!517, !518}
!517 = !DILocalVariable(name: "self", arg: 1, scope: !499, file: !500, line: 2341, type: !504)
!518 = !DILocalVariable(name: "_index", arg: 2, scope: !499, file: !500, line: 2341, type: !505)
!519 = !DILocation(line: 2341, column: 14, scope: !499)
!520 = !DILocation(line: 2341, column: 21, scope: !499)
!521 = !DILocation(line: 2342, column: 43, scope: !499)
!522 = !DILocalVariable(name: "self", scope: !523, file: !500, line: 2342, type: !533, align: 8)
!523 = !DILexicalBlockFile(scope: !524, file: !500, discriminator: 0)
!524 = distinct !DISubprogram(name: "deref<u8, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h609659c293a24929E", scope: !526, file: !525, line: 2531, type: !527, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !63, retainedNodes: !534)
!525 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "ccced07f4d2284e276bdff9c5cb81e82")
!526 = !DINamespace(name: "{impl#10}", scope: !36)
!527 = !DISubroutineType(types: !528)
!528 = !{!529, !533}
!529 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u8]", file: !2, size: 128, align: 64, elements: !530, templateParams: !27, identifier: "7d49e60d2ca720f66806f7375f860e2")
!530 = !{!531, !532}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !529, file: !2, baseType: !205, size: 64, align: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !529, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !35, size: 64, align: 64, dwarfAddressSpace: 0)
!534 = !{!522}
!535 = !DILocation(line: 2342, column: 43, scope: !523, inlinedAt: !521)
!536 = !DILocalVariable(name: "data", scope: !537, file: !500, line: 2342, type: !52, align: 8)
!537 = !DILexicalBlockFile(scope: !538, file: !500, discriminator: 0)
!538 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17h56ee2ae194163066E", scope: !540, file: !539, line: 90, type: !542, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !544)
!539 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "bc05ab33aeb77226885613c6dc511a0a")
!540 = !DINamespace(name: "raw", scope: !541)
!541 = !DINamespace(name: "slice", scope: !21)
!542 = !DISubroutineType(types: !543)
!543 = !{!529, !52, !9}
!544 = !{!536, !545, !546}
!545 = !DILocalVariable(name: "len", scope: !537, file: !500, line: 2342, type: !9, align: 8)
!546 = !DILocalVariable(name: "runtime", scope: !547, file: !500, line: 2342, type: !550, align: 8)
!547 = !DILexicalBlockFile(scope: !548, file: !500, discriminator: 0)
!548 = distinct !DILexicalBlock(scope: !538, file: !549, line: 2336, column: 13)
!549 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "f96ba730d7cf23ae45fdc72e7caf5f1b")
!550 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !551, file: !2, size: 128, align: 64, elements: !552, templateParams: !27, identifier: "ca6adac9bf5585e57d20f143c4c8a4b5")
!551 = !DINamespace(name: "from_raw_parts", scope: !540)
!552 = !{!553, !555}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__data", scope: !550, file: !2, baseType: !554, size: 64, align: 64)
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const u8", baseType: !52, size: 64, align: 64, dwarfAddressSpace: 0)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__len", scope: !550, file: !2, baseType: !556, size: 64, align: 64, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!557 = !DILocation(line: 2342, column: 43, scope: !537, inlinedAt: !558)
!558 = !DILocation(line: 2532, column: 18, scope: !524, inlinedAt: !521)
!559 = !DILocalVariable(name: "data", scope: !560, file: !500, line: 2342, type: !52, align: 8)
!560 = !DILexicalBlockFile(scope: !561, file: !500, discriminator: 0)
!561 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h6cf0bcc2226f7384E", scope: !45, file: !562, line: 695, type: !563, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !569)
!562 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "13c32d970b0b4dd38131a1908223a155")
!563 = !DISubroutineType(types: !564)
!564 = !{!565, !52, !9}
!565 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !2, size: 128, align: 64, elements: !566, templateParams: !27, identifier: "7b54d414f2f329e57c9aa3e4ca07f4")
!566 = !{!567, !568}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !565, file: !2, baseType: !205, size: 64, align: 64)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !565, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!569 = !{!559, !570}
!570 = !DILocalVariable(name: "len", scope: !560, file: !500, line: 2342, type: !9, align: 8)
!571 = !DILocation(line: 2342, column: 43, scope: !560, inlinedAt: !572)
!572 = !DILocation(line: 97, column: 11, scope: !538, inlinedAt: !558)
!573 = !DILocalVariable(name: "self", scope: !574, file: !500, line: 2342, type: !52, align: 8)
!574 = !DILexicalBlockFile(scope: !575, file: !500, discriminator: 0)
!575 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb0bf0b669ab1d998E", scope: !577, file: !576, line: 46, type: !579, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !582, retainedNodes: !581)
!576 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "1874e43cb83f8af3048974827047cb9c")
!577 = !DINamespace(name: "{impl#0}", scope: !578)
!578 = !DINamespace(name: "const_ptr", scope: !45)
!579 = !DISubroutineType(types: !580)
!580 = !{!6, !52}
!581 = !{!573}
!582 = !{!55, !583}
!583 = !DITemplateTypeParameter(name: "U", type: !7)
!584 = !DILocation(line: 2342, column: 43, scope: !574, inlinedAt: !585)
!585 = !DILocation(line: 696, column: 20, scope: !561, inlinedAt: !572)
!586 = !DILocalVariable(name: "data_address", scope: !587, file: !500, line: 2342, type: !6, align: 8)
!587 = !DILexicalBlockFile(scope: !588, file: !500, discriminator: 0)
!588 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h496989047ed841a4E", scope: !590, file: !589, line: 110, type: !591, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !593)
!589 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "59565ed3c34dee3e8f8928c29f8f7ce4")
!590 = !DINamespace(name: "metadata", scope: !45)
!591 = !DISubroutineType(types: !592)
!592 = !{!565, !6, !9}
!593 = !{!586, !594}
!594 = !DILocalVariable(name: "metadata", scope: !587, file: !500, line: 2342, type: !9, align: 8)
!595 = !DILocation(line: 2342, column: 43, scope: !587, inlinedAt: !596)
!596 = !DILocation(line: 696, column: 5, scope: !561, inlinedAt: !572)
!597 = !DILocalVariable(name: "v", scope: !598, file: !500, line: 2342, type: !529, align: 8)
!598 = !DILexicalBlockFile(scope: !599, file: !500, discriminator: 0)
!599 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN4core3str8converts19from_utf8_unchecked17hcd20fde6de9d471cE", scope: !601, file: !600, line: 170, type: !603, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !605)
!600 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/converts.rs", directory: "", checksumkind: CSK_MD5, checksum: "459d256946ab11c35b95264d728167a0")
!601 = !DINamespace(name: "converts", scope: !602)
!602 = !DINamespace(name: "str", scope: !21)
!603 = !DISubroutineType(types: !604)
!604 = !{!202, !529}
!605 = !{!597}
!606 = !DILocation(line: 2342, column: 18, scope: !598, inlinedAt: !607)
!607 = !DILocation(line: 2342, column: 18, scope: !499)
!608 = !{i64 1}
!609 = !DILocation(line: 2343, column: 6, scope: !499)
!610 = distinct !DISubprogram(name: "encode<()>", linkageName: "_ZN100_$LT$proc_macro..bridge..client..TokenStream$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h1c05180f801e837eE", scope: !612, file: !611, line: 67, type: !613, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !622, retainedNodes: !616)
!611 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/proc_macro/src/bridge/client.rs", directory: "", checksumkind: CSK_MD5, checksum: "29b98a70c46716230bba99b5d50c99ad")
!612 = !DINamespace(name: "{impl#26}", scope: !239)
!613 = !DISubroutineType(types: !614)
!614 = !{null, !348, !615, !319}
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut proc_macro::bridge::buffer::Buffer", baseType: !285, size: 64, align: 64, dwarfAddressSpace: 0)
!616 = !{!617, !618, !619, !620}
!617 = !DILocalVariable(name: "self", arg: 1, scope: !610, file: !611, line: 67, type: !348)
!618 = !DILocalVariable(name: "w", arg: 2, scope: !610, file: !611, line: 67, type: !615)
!619 = !DILocalVariable(name: "s", arg: 3, scope: !610, file: !611, line: 67, type: !319)
!620 = !DILocalVariable(name: "handle", scope: !621, file: !611, line: 68, type: !351, align: 4)
!621 = distinct !DILexicalBlock(scope: !610, file: !611, line: 68, column: 21)
!622 = !{!623}
!623 = !DITemplateTypeParameter(name: "S", type: !7)
!624 = !DILocation(line: 67, column: 27, scope: !610)
!625 = !DILocation(line: 67, column: 33, scope: !610)
!626 = !DILocation(line: 67, column: 49, scope: !610)
!627 = !DILocation(line: 68, column: 34, scope: !610)
!628 = !DILocation(line: 68, column: 25, scope: !621)
!629 = !DILocation(line: 70, column: 21, scope: !621)
!630 = !DILocation(line: 71, column: 18, scope: !610)
!631 = distinct !DISubprogram(name: "decode<()>", linkageName: "_ZN103_$LT$proc_macro..bridge..client..TokenStream$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17he5ea93e573f0561cE", scope: !632, file: !611, line: 122, type: !633, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !622, retainedNodes: !636)
!632 = !DINamespace(name: "{impl#33}", scope: !239)
!633 = !DISubroutineType(types: !634)
!634 = !{!348, !635, !319}
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut &[u8]", baseType: !529, size: 64, align: 64, dwarfAddressSpace: 0)
!636 = !{!637, !638}
!637 = !DILocalVariable(name: "r", arg: 1, scope: !631, file: !611, line: 122, type: !635)
!638 = !DILocalVariable(name: "s", arg: 2, scope: !631, file: !611, line: 122, type: !319)
!639 = !DILocation(line: 122, column: 27, scope: !631)
!640 = !DILocation(line: 122, column: 47, scope: !631)
!641 = !DILocation(line: 124, column: 33, scope: !631)
!642 = !{i32 1, i32 0}
!643 = !DILocation(line: 123, column: 21, scope: !631)
!644 = !DILocation(line: 127, column: 18, scope: !631)
!645 = distinct !DISubprogram(name: "get_unchecked_mut<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h6f044855ca2f8af0E", scope: !647, file: !646, line: 291, type: !649, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !661)
!646 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "22a04328eca3d78fd2bf5357f9150928")
!647 = !DINamespace(name: "{impl#3}", scope: !648)
!648 = !DINamespace(name: "index", scope: !541)
!649 = !DISubroutineType(types: !650)
!650 = !{!651, !655, !651}
!651 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [u8]", file: !2, size: 128, align: 64, elements: !652, templateParams: !27, identifier: "2081d302591cc0e6b89f57ab75a79c1e")
!652 = !{!653, !654}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !651, file: !2, baseType: !205, size: 64, align: 64)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !651, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!655 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !506, file: !2, size: 128, align: 64, elements: !656, templateParams: !659, identifier: "855eb37746b15049ea4556b174e97dd7")
!656 = !{!657, !658}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !655, file: !2, baseType: !9, size: 64, align: 64)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !655, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!659 = !{!660}
!660 = !DITemplateTypeParameter(name: "Idx", type: !9)
!661 = !{!662, !663, !664}
!662 = !DILocalVariable(name: "self", arg: 1, scope: !645, file: !646, line: 291, type: !655)
!663 = !DILocalVariable(name: "slice", arg: 2, scope: !645, file: !646, line: 291, type: !651)
!664 = !DILocalVariable(name: "runtime", scope: !665, file: !646, line: 294, type: !667, align: 8)
!665 = !DILexicalBlockFile(scope: !666, file: !646, discriminator: 0)
!666 = distinct !DILexicalBlock(scope: !645, file: !549, line: 2336, column: 13)
!667 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !668, file: !2, size: 192, align: 64, elements: !669, templateParams: !27, identifier: "28ce5b8f96862f9bf6a66e974f54fbc9")
!668 = !DINamespace(name: "get_unchecked_mut", scope: !647)
!669 = !{!670, !671, !672}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__start", scope: !667, file: !2, baseType: !556, size: 64, align: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__end", scope: !667, file: !2, baseType: !556, size: 64, align: 64, offset: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !667, file: !2, baseType: !673, size: 64, align: 64, offset: 128)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut [u8]", baseType: !651, size: 64, align: 64, dwarfAddressSpace: 0)
!674 = !DILocation(line: 291, column: 33, scope: !645)
!675 = !DILocation(line: 291, column: 39, scope: !645)
!676 = !DILocation(line: 294, column: 13, scope: !665)
!677 = !DILocation(line: 295, column: 43, scope: !645)
!678 = !DILocalVariable(name: "self", scope: !679, file: !646, line: 295, type: !651, align: 8)
!679 = !DILexicalBlockFile(scope: !680, file: !646, discriminator: 0)
!680 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7fd536a97e153cfbE", scope: !682, file: !681, line: 1778, type: !684, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !686)
!681 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "6672664af50614ec3c026afd55307af7")
!682 = !DINamespace(name: "{impl#1}", scope: !683)
!683 = !DINamespace(name: "mut_ptr", scope: !45)
!684 = !DISubroutineType(types: !685)
!685 = !{!289, !651}
!686 = !{!678}
!687 = !DILocation(line: 295, column: 43, scope: !679, inlinedAt: !677)
!688 = !DILocalVariable(name: "self", scope: !689, file: !646, line: 295, type: !289, align: 8)
!689 = !DILexicalBlockFile(scope: !690, file: !646, discriminator: 0)
!690 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hce95b2f782375a87E", scope: !691, file: !681, line: 985, type: !692, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !694)
!691 = !DINamespace(name: "{impl#0}", scope: !683)
!692 = !DISubroutineType(types: !693)
!693 = !{!289, !289, !9}
!694 = !{!688, !695}
!695 = !DILocalVariable(name: "count", scope: !689, file: !646, line: 295, type: !9, align: 8)
!696 = !DILocation(line: 295, column: 43, scope: !689, inlinedAt: !677)
!697 = !DILocation(line: 295, column: 66, scope: !645)
!698 = !DILocalVariable(name: "self", scope: !699, file: !646, line: 295, type: !289, align: 8)
!699 = !DILexicalBlockFile(scope: !700, file: !646, discriminator: 0)
!700 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h774ff863e67a55bdE", scope: !691, file: !681, line: 465, type: !701, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !704)
!701 = !DISubroutineType(types: !702)
!702 = !{!289, !289, !703}
!703 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!704 = !{!698, !705}
!705 = !DILocalVariable(name: "count", scope: !699, file: !646, line: 295, type: !703, align: 8)
!706 = !DILocation(line: 295, column: 43, scope: !699, inlinedAt: !707)
!707 = !DILocation(line: 990, column: 18, scope: !690, inlinedAt: !677)
!708 = !DILocalVariable(name: "data", scope: !709, file: !646, line: 295, type: !289, align: 8)
!709 = !DILexicalBlockFile(scope: !710, file: !646, discriminator: 0)
!710 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17ha3e4fadd5446249cE", scope: !45, file: !562, line: 727, type: !711, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !713)
!711 = !DISubroutineType(types: !712)
!712 = !{!651, !289, !9}
!713 = !{!708, !714}
!714 = !DILocalVariable(name: "len", scope: !709, file: !646, line: 295, type: !9, align: 8)
!715 = !DILocation(line: 295, column: 13, scope: !709, inlinedAt: !716)
!716 = !DILocation(line: 295, column: 13, scope: !645)
!717 = !DILocation(line: 295, column: 79, scope: !645)
!718 = !DILocalVariable(name: "self", scope: !719, file: !646, line: 295, type: !289, align: 8)
!719 = !DILexicalBlockFile(scope: !720, file: !646, discriminator: 0)
!720 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hde28230253ee19baE", scope: !691, file: !681, line: 45, type: !721, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !582, retainedNodes: !723)
!721 = !DISubroutineType(types: !722)
!722 = !{!329, !289}
!723 = !{!718}
!724 = !DILocation(line: 295, column: 13, scope: !719, inlinedAt: !725)
!725 = !DILocation(line: 728, column: 24, scope: !710, inlinedAt: !716)
!726 = !DILocalVariable(name: "data_address", scope: !727, file: !646, line: 295, type: !329, align: 8)
!727 = !DILexicalBlockFile(scope: !728, file: !646, discriminator: 0)
!728 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h56bd1c6bd84c489bE", scope: !590, file: !589, line: 127, type: !729, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !731)
!729 = !DISubroutineType(types: !730)
!730 = !{!651, !329, !9}
!731 = !{!726, !732}
!732 = !DILocalVariable(name: "metadata", scope: !727, file: !646, line: 295, type: !9, align: 8)
!733 = !DILocation(line: 295, column: 13, scope: !727, inlinedAt: !734)
!734 = !DILocation(line: 728, column: 5, scope: !710, inlinedAt: !716)
!735 = !DILocation(line: 297, column: 6, scope: !645)
!736 = distinct !DISubprogram(name: "get<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17hcac955a39670c74cE", scope: !647, file: !646, line: 258, type: !737, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !752)
!737 = !DISubroutineType(types: !738)
!738 = !{!739, !655, !529}
!739 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[u8]>", scope: !20, file: !2, size: 128, align: 64, elements: !740, templateParams: !27, identifier: "a10dd6c8cbc031c66bcb157397a8ab34")
!740 = !{!741}
!741 = !DICompositeType(tag: DW_TAG_variant_part, scope: !739, file: !2, size: 128, align: 64, elements: !742, templateParams: !27, identifier: "f5a6694eae942d8dfdfecb1108411145", discriminator: !751)
!742 = !{!743, !747}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !741, file: !2, baseType: !744, size: 128, align: 64, extraData: i64 0)
!744 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !739, file: !2, size: 128, align: 64, elements: !27, templateParams: !745, identifier: "f917b5f3e834899fdc042dd32762d34c")
!745 = !{!746}
!746 = !DITemplateTypeParameter(name: "T", type: !529)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !741, file: !2, baseType: !748, size: 128, align: 64)
!748 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !739, file: !2, size: 128, align: 64, elements: !749, templateParams: !745, identifier: "ec71ed770ec76ed84081bfa9fc187739")
!749 = !{!750}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !748, file: !2, baseType: !529, size: 128, align: 64)
!751 = !DIDerivedType(tag: DW_TAG_member, scope: !739, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!752 = !{!753, !754}
!753 = !DILocalVariable(name: "self", arg: 1, scope: !736, file: !646, line: 258, type: !655)
!754 = !DILocalVariable(name: "slice", arg: 2, scope: !736, file: !646, line: 258, type: !529)
!755 = !DILocation(line: 258, column: 12, scope: !736)
!756 = !DILocation(line: 258, column: 18, scope: !736)
!757 = !DILocation(line: 259, column: 12, scope: !736)
!758 = !DILocation(line: 259, column: 37, scope: !736)
!759 = !{i8 0, i8 2}
!760 = !DILocation(line: 263, column: 29, scope: !736)
!761 = !DILocation(line: 260, column: 13, scope: !736)
!762 = !DILocation(line: 259, column: 9, scope: !736)
!763 = !DILocation(line: 265, column: 6, scope: !736)
!764 = !DILocation(line: 263, column: 22, scope: !736)
!765 = distinct !DISubprogram(name: "index_mut<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h49eca17de111d561E", scope: !647, file: !646, line: 311, type: !766, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !772)
!766 = !DISubroutineType(types: !767)
!767 = !{!768, !655, !768, !508}
!768 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [u8]", file: !2, size: 128, align: 64, elements: !769, templateParams: !27, identifier: "188333407bebfa65121ceca786627665")
!769 = !{!770, !771}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !768, file: !2, baseType: !205, size: 64, align: 64)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !768, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!772 = !{!773, !774}
!773 = !DILocalVariable(name: "self", arg: 1, scope: !765, file: !646, line: 311, type: !655)
!774 = !DILocalVariable(name: "slice", arg: 2, scope: !765, file: !646, line: 311, type: !768)
!775 = !DILocation(line: 311, column: 18, scope: !765)
!776 = !DILocation(line: 311, column: 24, scope: !765)
!777 = !DILocation(line: 312, column: 12, scope: !765)
!778 = !DILocation(line: 314, column: 19, scope: !765)
!779 = !DILocation(line: 313, column: 13, scope: !765)
!780 = !DILocation(line: 318, column: 24, scope: !765)
!781 = !DILocation(line: 315, column: 13, scope: !765)
!782 = !DILocation(line: 319, column: 6, scope: !765)
!783 = distinct !DISubprogram(name: "decode<(), proc_macro::bridge::client::Span>", linkageName: "_ZN107_$LT$proc_macro..bridge..ExpnGlobals$LT$Span$GT$$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17h8296fd1bf7e4ce1dE", scope: !785, file: !784, line: 55, type: !786, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !802, retainedNodes: !799)
!784 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/proc_macro/src/bridge/rpc.rs", directory: "", checksumkind: CSK_MD5, checksum: "1b8c74438fc3d919e1a0fa4aa0d68687")
!785 = !DINamespace(name: "{impl#111}", scope: !240)
!786 = !DISubroutineType(types: !787)
!787 = !{!788, !635, !319}
!788 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExpnGlobals<proc_macro::bridge::client::Span>", scope: !240, file: !2, size: 96, align: 32, elements: !789, templateParams: !797, identifier: "7205b8b1d4fb5fe219093a5b3a12a7ba")
!789 = !{!790, !795, !796}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "def_site", scope: !788, file: !2, baseType: !791, size: 32, align: 32)
!791 = !DICompositeType(tag: DW_TAG_structure_type, name: "Span", scope: !239, file: !2, size: 32, align: 32, elements: !792, templateParams: !27, identifier: "8960f0fb59aa19baf9f69b5743da8a6")
!792 = !{!793, !794}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !791, file: !2, baseType: !351, size: 32, align: 32)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !791, file: !2, baseType: !326, align: 8)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "call_site", scope: !788, file: !2, baseType: !791, size: 32, align: 32, offset: 32)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "mixed_site", scope: !788, file: !2, baseType: !791, size: 32, align: 32, offset: 64)
!797 = !{!798}
!798 = !DITemplateTypeParameter(name: "Span", type: !791)
!799 = !{!800, !801}
!800 = !DILocalVariable(name: "r", arg: 1, scope: !783, file: !784, line: 55, type: !635)
!801 = !DILocalVariable(name: "s", arg: 2, scope: !783, file: !784, line: 55, type: !319)
!802 = !{!623, !798}
!803 = !DILocation(line: 55, column: 23, scope: !783)
!804 = !DILocation(line: 55, column: 43, scope: !783)
!805 = !DILocation(line: 57, column: 31, scope: !783)
!806 = !DILocation(line: 58, column: 17, scope: !783)
!807 = !DILocation(line: 56, column: 17, scope: !783)
!808 = !DILocation(line: 59, column: 14, scope: !783)
!809 = !DILocation(line: 55, column: 13, scope: !783)
!810 = distinct !DISubprogram(name: "encode<(), &str>", linkageName: "_ZN10proc_macro6bridge100_$LT$impl$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$u20$for$u20$core..option..Option$LT$T$GT$$GT$6encode17h0ce7338230398f4dE", scope: !811, file: !784, line: 64, type: !812, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !833, retainedNodes: !827)
!811 = !DINamespace(name: "{impl#61}", scope: !240)
!812 = !DISubroutineType(types: !813)
!813 = !{null, !814, !615, !319}
!814 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&str>", scope: !20, file: !2, size: 128, align: 64, elements: !815, templateParams: !27, identifier: "f0dceda904e27e7388d0262de24b6976")
!815 = !{!816}
!816 = !DICompositeType(tag: DW_TAG_variant_part, scope: !814, file: !2, size: 128, align: 64, elements: !817, templateParams: !27, identifier: "d9a20f3bc7236076b658193a0ee41dce", discriminator: !826)
!817 = !{!818, !822}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !816, file: !2, baseType: !819, size: 128, align: 64, extraData: i64 0)
!819 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !814, file: !2, size: 128, align: 64, elements: !27, templateParams: !820, identifier: "8b8f8f73f03135e6d73de6ca26c771a5")
!820 = !{!821}
!821 = !DITemplateTypeParameter(name: "T", type: !202)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !816, file: !2, baseType: !823, size: 128, align: 64)
!823 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !814, file: !2, size: 128, align: 64, elements: !824, templateParams: !820, identifier: "5f24cd570c5cc19be11f0051a0b188da")
!824 = !{!825}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !823, file: !2, baseType: !202, size: 128, align: 64)
!826 = !DIDerivedType(tag: DW_TAG_member, scope: !814, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!827 = !{!828, !829, !830, !831}
!828 = !DILocalVariable(name: "self", arg: 1, scope: !810, file: !784, line: 64, type: !814)
!829 = !DILocalVariable(name: "w", arg: 2, scope: !810, file: !784, line: 64, type: !615)
!830 = !DILocalVariable(name: "s", arg: 3, scope: !810, file: !784, line: 64, type: !319)
!831 = !DILocalVariable(name: "t", scope: !832, file: !784, line: 75, type: !202, align: 8)
!832 = distinct !DILexicalBlock(scope: !810, file: !784, line: 75, column: 23)
!833 = !{!623, !821}
!834 = !DILocation(line: 64, column: 23, scope: !810)
!835 = !DILocation(line: 64, column: 29, scope: !810)
!836 = !DILocation(line: 64, column: 45, scope: !810)
!837 = !DILocation(line: 74, column: 23, scope: !810)
!838 = !DILocation(line: 74, column: 17, scope: !810)
!839 = !DILocation(line: 76, column: 25, scope: !810)
!840 = !DILocation(line: 75, column: 42, scope: !810)
!841 = !DILocation(line: 75, column: 42, scope: !832)
!842 = !DILocation(line: 76, column: 25, scope: !832)
!843 = !DILocation(line: 78, column: 21, scope: !810)
!844 = !DILocation(line: 77, column: 27, scope: !832)
!845 = !DILocation(line: 64, column: 13, scope: !810)
!846 = !DILocation(line: 80, column: 14, scope: !810)
!847 = !DILocation(line: 75, column: 55, scope: !810)
!848 = distinct !DISubprogram(name: "encode<(), proc_macro::bridge::client::TokenStream>", linkageName: "_ZN10proc_macro6bridge100_$LT$impl$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$u20$for$u20$core..option..Option$LT$T$GT$$GT$6encode17haa31a8d681da04b6E", scope: !811, file: !784, line: 64, type: !849, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !857, retainedNodes: !851)
!849 = !DISubroutineType(types: !850)
!850 = !{null, !340, !615, !319}
!851 = !{!852, !853, !854, !855}
!852 = !DILocalVariable(name: "self", arg: 1, scope: !848, file: !784, line: 64, type: !340)
!853 = !DILocalVariable(name: "w", arg: 2, scope: !848, file: !784, line: 64, type: !615)
!854 = !DILocalVariable(name: "s", arg: 3, scope: !848, file: !784, line: 64, type: !319)
!855 = !DILocalVariable(name: "t", scope: !856, file: !784, line: 75, type: !348, align: 4)
!856 = distinct !DILexicalBlock(scope: !848, file: !784, line: 75, column: 23)
!857 = !{!623, !347}
!858 = !DILocation(line: 64, column: 23, scope: !848)
!859 = !DILocation(line: 64, column: 29, scope: !848)
!860 = !DILocation(line: 64, column: 45, scope: !848)
!861 = !DILocation(line: 75, column: 42, scope: !856)
!862 = !DILocation(line: 74, column: 23, scope: !848)
!863 = !DILocation(line: 74, column: 17, scope: !848)
!864 = !DILocation(line: 76, column: 25, scope: !848)
!865 = !DILocation(line: 75, column: 42, scope: !848)
!866 = !DILocation(line: 76, column: 25, scope: !856)
!867 = !DILocation(line: 78, column: 21, scope: !848)
!868 = !DILocation(line: 77, column: 27, scope: !856)
!869 = !DILocation(line: 64, column: 13, scope: !848)
!870 = !DILocation(line: 80, column: 14, scope: !848)
!871 = !DILocation(line: 75, column: 55, scope: !848)
!872 = distinct !DISubprogram(name: "encode<(), (), proc_macro::bridge::rpc::PanicMessage>", linkageName: "_ZN10proc_macro6bridge104_$LT$impl$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$u20$for$u20$core..result..Result$LT$T$C$E$GT$$GT$6encode17h3118e371acb46529E", scope: !873, file: !784, line: 64, type: !874, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !916, retainedNodes: !908)
!873 = !DINamespace(name: "{impl#65}", scope: !240)
!874 = !DISubroutineType(types: !875)
!875 = !{null, !876, !615, !319}
!876 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), proc_macro::bridge::rpc::PanicMessage>", scope: !877, file: !2, size: 256, align: 64, elements: !878, templateParams: !27, identifier: "9ccfc9648ef81705a5ec66a9c1389782")
!877 = !DINamespace(name: "result", scope: !21)
!878 = !{!879}
!879 = !DICompositeType(tag: DW_TAG_variant_part, scope: !876, file: !2, size: 256, align: 64, elements: !880, templateParams: !27, identifier: "66dfbabdccd4c3a996173a06de12008b", discriminator: !907)
!880 = !{!881, !903}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !879, file: !2, baseType: !882, size: 256, align: 64, extraData: i64 3)
!882 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !876, file: !2, size: 256, align: 64, elements: !883, templateParams: !885, identifier: "f41abf871d4424b9ce8927a7619bfe49")
!883 = !{!884}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !882, file: !2, baseType: !7, align: 8)
!885 = !{!115, !886}
!886 = !DITemplateTypeParameter(name: "E", type: !887)
!887 = !DICompositeType(tag: DW_TAG_structure_type, name: "PanicMessage", scope: !888, file: !2, size: 256, align: 64, elements: !889, templateParams: !27, identifier: "5a4b103add782fff8c5ebb9114cd0bcd")
!888 = !DINamespace(name: "rpc", scope: !240)
!889 = !{!890}
!890 = !DICompositeType(tag: DW_TAG_variant_part, scope: !887, file: !2, size: 256, align: 64, elements: !891, templateParams: !27, identifier: "7e213e776ece2cc097433395bc9cce1c", discriminator: !902)
!891 = !{!892, !896, !900}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "StaticStr", scope: !890, file: !2, baseType: !893, size: 256, align: 64, extraData: i64 0)
!893 = !DICompositeType(tag: DW_TAG_structure_type, name: "StaticStr", scope: !887, file: !2, size: 256, align: 64, elements: !894, templateParams: !27, identifier: "b47eeba1e64cb478f9929a43c96ce616")
!894 = !{!895}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !893, file: !2, baseType: !202, size: 128, align: 64, offset: 64)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "String", scope: !890, file: !2, baseType: !897, size: 256, align: 64, extraData: i64 1)
!897 = !DICompositeType(tag: DW_TAG_structure_type, name: "String", scope: !887, file: !2, size: 256, align: 64, elements: !898, templateParams: !27, identifier: "6f8ac1b35a4e234d454ee2d7c66ccbaa")
!898 = !{!899}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !897, file: !2, baseType: !30, size: 192, align: 64, offset: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "Unknown", scope: !890, file: !2, baseType: !901, size: 256, align: 64, extraData: i64 2)
!901 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unknown", scope: !887, file: !2, size: 256, align: 64, elements: !27, identifier: "e2d1aacb0868f1bce00e19879cc87870")
!902 = !DIDerivedType(tag: DW_TAG_member, scope: !887, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !879, file: !2, baseType: !904, size: 256, align: 64)
!904 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !876, file: !2, size: 256, align: 64, elements: !905, templateParams: !885, identifier: "8c1cea5208c7ff7aa6ce9d528a722205")
!905 = !{!906}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !904, file: !2, baseType: !887, size: 256, align: 64)
!907 = !DIDerivedType(tag: DW_TAG_member, scope: !876, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!908 = !{!909, !910, !911, !912, !914}
!909 = !DILocalVariable(name: "self", arg: 1, scope: !872, file: !784, line: 64, type: !876)
!910 = !DILocalVariable(name: "w", arg: 2, scope: !872, file: !784, line: 64, type: !615)
!911 = !DILocalVariable(name: "s", arg: 3, scope: !872, file: !784, line: 64, type: !319)
!912 = !DILocalVariable(name: "t", scope: !913, file: !784, line: 75, type: !7, align: 1)
!913 = distinct !DILexicalBlock(scope: !872, file: !784, line: 75, column: 23)
!914 = !DILocalVariable(name: "e", scope: !915, file: !784, line: 75, type: !887, align: 8)
!915 = distinct !DILexicalBlock(scope: !872, file: !784, line: 75, column: 23)
!916 = !{!623, !115, !886}
!917 = !DILocation(line: 64, column: 23, scope: !872)
!918 = !DILocation(line: 64, column: 29, scope: !872)
!919 = !DILocation(line: 64, column: 45, scope: !872)
!920 = !DILocation(line: 75, column: 42, scope: !913)
!921 = !DILocation(line: 75, column: 42, scope: !915)
!922 = !DILocation(line: 74, column: 23, scope: !872)
!923 = !{i64 0, i64 4}
!924 = !DILocation(line: 74, column: 17, scope: !872)
!925 = !DILocation(line: 75, column: 42, scope: !872)
!926 = !DILocation(line: 76, column: 25, scope: !913)
!927 = !DILocation(line: 76, column: 25, scope: !915)
!928 = !DILocation(line: 78, column: 21, scope: !872)
!929 = !DILocation(line: 77, column: 27, scope: !915)
!930 = !DILocation(line: 64, column: 13, scope: !872)
!931 = !DILocation(line: 80, column: 14, scope: !872)
!932 = !DILocation(line: 77, column: 27, scope: !913)
!933 = distinct !DISubprogram(name: "encode<(), core::option::Option<proc_macro::bridge::client::TokenStream>, ()>", linkageName: "_ZN10proc_macro6bridge104_$LT$impl$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$u20$for$u20$core..result..Result$LT$T$C$E$GT$$GT$6encode17h8ab643544b667b03E", scope: !873, file: !784, line: 64, type: !934, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !960, retainedNodes: !952)
!934 = !DISubroutineType(types: !935)
!935 = !{null, !936, !615, !319}
!936 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::option::Option<proc_macro::bridge::client::TokenStream>, ()>", scope: !877, file: !2, size: 64, align: 32, elements: !937, templateParams: !27, identifier: "4c0496071425592c74394aa139fb049d")
!937 = !{!938}
!938 = !DICompositeType(tag: DW_TAG_variant_part, scope: !936, file: !2, size: 64, align: 32, elements: !939, templateParams: !27, identifier: "90c3c0e5e910ea815b8fbe70a17ec24", discriminator: !951)
!939 = !{!940, !947}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !938, file: !2, baseType: !941, size: 64, align: 32, extraData: i64 0)
!941 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !936, file: !2, size: 64, align: 32, elements: !942, templateParams: !944, identifier: "77d21a1a66ee69506957779543d8a305")
!942 = !{!943}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !941, file: !2, baseType: !340, size: 32, align: 32, offset: 32)
!944 = !{!945, !946}
!945 = !DITemplateTypeParameter(name: "T", type: !340)
!946 = !DITemplateTypeParameter(name: "E", type: !7)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !938, file: !2, baseType: !948, size: 64, align: 32, extraData: i64 1)
!948 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !936, file: !2, size: 64, align: 32, elements: !949, templateParams: !944, identifier: "15a0d50a0dd0144e979bc4ed550ed752")
!949 = !{!950}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !948, file: !2, baseType: !7, align: 8, offset: 32)
!951 = !DIDerivedType(tag: DW_TAG_member, scope: !936, file: !2, baseType: !356, size: 32, align: 32, flags: DIFlagArtificial)
!952 = !{!953, !954, !955, !956, !958}
!953 = !DILocalVariable(name: "self", arg: 1, scope: !933, file: !784, line: 64, type: !936)
!954 = !DILocalVariable(name: "w", arg: 2, scope: !933, file: !784, line: 64, type: !615)
!955 = !DILocalVariable(name: "s", arg: 3, scope: !933, file: !784, line: 64, type: !319)
!956 = !DILocalVariable(name: "t", scope: !957, file: !784, line: 75, type: !340, align: 4)
!957 = distinct !DILexicalBlock(scope: !933, file: !784, line: 75, column: 23)
!958 = !DILocalVariable(name: "e", scope: !959, file: !784, line: 75, type: !7, align: 1)
!959 = distinct !DILexicalBlock(scope: !933, file: !784, line: 75, column: 23)
!960 = !{!623, !945, !946}
!961 = !DILocation(line: 64, column: 23, scope: !933)
!962 = !DILocation(line: 64, column: 29, scope: !933)
!963 = !DILocation(line: 64, column: 45, scope: !933)
!964 = !DILocation(line: 75, column: 42, scope: !957)
!965 = !DILocation(line: 75, column: 42, scope: !959)
!966 = !DILocation(line: 74, column: 23, scope: !933)
!967 = !{i32 0, i32 2}
!968 = !DILocation(line: 74, column: 17, scope: !933)
!969 = !DILocation(line: 75, column: 42, scope: !933)
!970 = !DILocation(line: 76, column: 25, scope: !957)
!971 = !DILocation(line: 76, column: 25, scope: !959)
!972 = !DILocation(line: 78, column: 21, scope: !933)
!973 = !DILocation(line: 77, column: 27, scope: !959)
!974 = !DILocation(line: 64, column: 13, scope: !933)
!975 = !DILocation(line: 80, column: 14, scope: !933)
!976 = !DILocation(line: 77, column: 27, scope: !957)
!977 = distinct !DISubprogram(name: "new<proc_macro::bridge::client::BridgeStateL>", linkageName: "_ZN10proc_macro6bridge11scoped_cell19ScopedCell$LT$T$GT$3new17hfe6f4b7449893b9bE", scope: !979, file: !978, line: 38, type: !1014, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1009, retainedNodes: !1016)
!978 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/proc_macro/src/bridge/scoped_cell.rs", directory: "", checksumkind: CSK_MD5, checksum: "79706c78ecbebd2ad71b350ab7f276ec")
!979 = !DICompositeType(tag: DW_TAG_structure_type, name: "ScopedCell<proc_macro::bridge::client::BridgeStateL>", scope: !980, file: !2, size: 640, align: 64, elements: !981, templateParams: !1009, identifier: "a8dfdabe3ae0a26610712bae0cf85020")
!980 = !DINamespace(name: "scoped_cell", scope: !240)
!981 = !{!982}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !979, file: !2, baseType: !983, size: 640, align: 64)
!983 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cell<proc_macro::bridge::client::BridgeState>", scope: !271, file: !2, size: 640, align: 64, elements: !984, templateParams: !1007, identifier: "4fb39712a7540bcc8797bcb28d9a543")
!984 = !{!985}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !983, file: !2, baseType: !986, size: 640, align: 64)
!986 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeCell<proc_macro::bridge::client::BridgeState>", scope: !271, file: !2, size: 640, align: 64, elements: !987, templateParams: !1007, identifier: "c065211ed7ecae80b93558113fbb9662")
!987 = !{!988}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !986, file: !2, baseType: !989, size: 640, align: 64)
!989 = !DICompositeType(tag: DW_TAG_structure_type, name: "BridgeState", scope: !239, file: !2, size: 640, align: 64, elements: !990, templateParams: !27, identifier: "5b0811a97d3e80f2b778edd152aab6b")
!990 = !{!991}
!991 = !DICompositeType(tag: DW_TAG_variant_part, scope: !989, file: !2, size: 640, align: 64, elements: !992, templateParams: !27, identifier: "d2254adf930e2b551c47804cbc574e6e", discriminator: !1006)
!992 = !{!993, !995, !1004}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "NotConnected", scope: !991, file: !2, baseType: !994, size: 640, align: 64, extraData: i64 0)
!994 = !DICompositeType(tag: DW_TAG_structure_type, name: "NotConnected", scope: !989, file: !2, size: 640, align: 64, elements: !27, identifier: "23883382dd10bcc0ceb3bf66a1379525")
!995 = !DIDerivedType(tag: DW_TAG_member, name: "Connected", scope: !991, file: !2, baseType: !996, size: 640, align: 64, extraData: i64 1)
!996 = !DICompositeType(tag: DW_TAG_structure_type, name: "Connected", scope: !989, file: !2, size: 640, align: 64, elements: !997, templateParams: !27, identifier: "ad72939c631b0079842008e1d3a2b0cc")
!997 = !{!998}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !996, file: !2, baseType: !999, size: 576, align: 64, offset: 64)
!999 = !DICompositeType(tag: DW_TAG_structure_type, name: "Bridge", scope: !239, file: !2, size: 576, align: 64, elements: !1000, templateParams: !27, identifier: "eb45a4a5b7714d6b86c0af748664179a")
!1000 = !{!1001, !1002, !1003}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "cached_buffer", scope: !999, file: !2, baseType: !285, size: 320, align: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !999, file: !2, baseType: !304, size: 128, align: 64, offset: 320)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "globals", scope: !999, file: !2, baseType: !788, size: 96, align: 32, offset: 448)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "InUse", scope: !991, file: !2, baseType: !1005, size: 640, align: 64, extraData: i64 2)
!1005 = !DICompositeType(tag: DW_TAG_structure_type, name: "InUse", scope: !989, file: !2, size: 640, align: 64, elements: !27, identifier: "3d52bbcc9d452fcc4dccbd63766b1b50")
!1006 = !DIDerivedType(tag: DW_TAG_member, scope: !989, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!1007 = !{!1008}
!1008 = !DITemplateTypeParameter(name: "T", type: !989)
!1009 = !{!1010}
!1010 = !DITemplateTypeParameter(name: "T", type: !1011)
!1011 = !DICompositeType(tag: DW_TAG_structure_type, name: "BridgeStateL", scope: !239, file: !2, align: 8, elements: !1012, templateParams: !27, identifier: "84ba2ed37e57edfdf1d800fc6f598233")
!1012 = !{!1013}
!1013 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1011, file: !2, align: 8, elements: !27, identifier: "859397a962c66557c6a5893d7a383da1")
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!979, !989}
!1016 = !{!1017}
!1017 = !DILocalVariable(name: "value", arg: 1, scope: !977, file: !978, line: 38, type: !989)
!1018 = !DILocation(line: 38, column: 22, scope: !977)
!1019 = !DILocalVariable(name: "value", scope: !1020, file: !978, line: 39, type: !989, align: 8)
!1020 = !DILexicalBlockFile(scope: !1021, file: !978, discriminator: 0)
!1021 = distinct !DISubprogram(name: "new<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core4cell13Cell$LT$T$GT$3new17h7165f4eced99e0aeE", scope: !983, file: !1022, line: 345, type: !1023, scopeLine: 345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !1025)
!1022 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/cell.rs", directory: "", checksumkind: CSK_MD5, checksum: "81027bd0ceaa41fbc0bc4e7a3fa9f759")
!1023 = !DISubroutineType(types: !1024)
!1024 = !{!983, !989}
!1025 = !{!1019}
!1026 = !DILocation(line: 39, column: 20, scope: !1020, inlinedAt: !1027)
!1027 = !DILocation(line: 39, column: 20, scope: !977)
!1028 = !DILocalVariable(name: "value", scope: !1029, file: !978, line: 39, type: !989, align: 8)
!1029 = !DILexicalBlockFile(scope: !1030, file: !978, discriminator: 0)
!1030 = distinct !DISubprogram(name: "new<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3new17hf9c8fba395047b07E", scope: !986, file: !1022, line: 1891, type: !1031, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !1033)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{!986, !989}
!1033 = !{!1028}
!1034 = !DILocation(line: 39, column: 20, scope: !1029, inlinedAt: !1035)
!1035 = !DILocation(line: 346, column: 23, scope: !1021, inlinedAt: !1027)
!1036 = !DILocation(line: 39, column: 30, scope: !977)
!1037 = !DILocation(line: 39, column: 9, scope: !977)
!1038 = !DILocation(line: 40, column: 6, scope: !977)
!1039 = distinct !DISubprogram(name: "set<proc_macro::bridge::client::BridgeStateL, (), proc_macro::bridge::client::run_client::{closure#0}::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>", linkageName: "_ZN10proc_macro6bridge11scoped_cell19ScopedCell$LT$T$GT$3set17hf32551b6ab7cf3cdE", scope: !979, file: !978, line: 78, type: !1040, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1062, retainedNodes: !1058)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{null, !1042, !989, !1043}
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>", baseType: !979, size: 64, align: 64, dwarfAddressSpace: 0)
!1043 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>", scope: !1044, file: !2, size: 192, align: 64, elements: !1047, templateParams: !27, identifier: "57a6b5998641cd5bd04cefd927906f7f")
!1044 = !DINamespace(name: "{closure#0}", scope: !1045)
!1045 = !DINamespace(name: "{closure#0}", scope: !1046)
!1046 = !DINamespace(name: "run_client", scope: !239)
!1047 = !{!1048, !1056, !1057}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1043, file: !2, baseType: !1049, size: 64, align: 64)
!1049 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>", scope: !1050, file: !2, size: 64, align: 64, elements: !1053, templateParams: !27, identifier: "33a57ea346170d928f9cad52bfb1d476")
!1050 = !DINamespace(name: "{closure#0}", scope: !1051)
!1051 = !DINamespace(name: "expand1", scope: !1052)
!1052 = !DINamespace(name: "{impl#11}", scope: !239)
!1053 = !{!1054}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__f", scope: !1049, file: !2, baseType: !1055, size: 64, align: 64)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&fn(proc_macro::TokenStream) -> proc_macro::TokenStream", baseType: !334, size: 64, align: 64, dwarfAddressSpace: 0)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !1043, file: !2, baseType: !348, size: 32, align: 32, offset: 128)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__buf", scope: !1043, file: !2, baseType: !615, size: 64, align: 64, offset: 64)
!1058 = !{!1059, !1060, !1061}
!1059 = !DILocalVariable(name: "self", arg: 1, scope: !1039, file: !978, line: 78, type: !1042)
!1060 = !DILocalVariable(name: "value", arg: 2, scope: !1039, file: !978, line: 78, type: !989)
!1061 = !DILocalVariable(name: "f", arg: 3, scope: !1039, file: !978, line: 78, type: !1043)
!1062 = !{!1010, !1063, !1064}
!1063 = !DITemplateTypeParameter(name: "R", type: !7)
!1064 = !DITemplateTypeParameter(name: "impl FnOnce() -> R", type: !1043)
!1065 = !DILocation(line: 78, column: 19, scope: !1039)
!1066 = !DILocation(line: 78, column: 26, scope: !1039)
!1067 = !DILocation(line: 78, column: 57, scope: !1039)
!1068 = !DILocation(line: 79, column: 22, scope: !1039)
!1069 = !DILocation(line: 79, column: 29, scope: !1039)
!1070 = !DILocation(line: 79, column: 9, scope: !1039)
!1071 = !DILocation(line: 80, column: 6, scope: !1039)
!1072 = distinct !DISubprogram(name: "{closure#0}<proc_macro::bridge::client::BridgeStateL, (), proc_macro::bridge::client::run_client::{closure#0}::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>", linkageName: "_ZN10proc_macro6bridge11scoped_cell19ScopedCell$LT$T$GT$3set28_$u7b$$u7b$closure$u7d$$u7d$17h1a2c85c9c6853d0fE", scope: !1073, file: !978, line: 79, type: !1075, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1062, retainedNodes: !1084)
!1073 = !DINamespace(name: "set", scope: !1074)
!1074 = !DINamespace(name: "{impl#3}", scope: !980)
!1075 = !DISubroutineType(types: !1076)
!1076 = !{null, !1077, !1080}
!1077 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<proc_macro::bridge::client::BridgeStateL, (), proc_macro::bridge::client::run_client::{closure#0}::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>", scope: !1073, file: !2, size: 192, align: 64, elements: !1078, templateParams: !27, identifier: "35ed7b3768fd14ba97a2f16e3e957d2")
!1078 = !{!1079}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1077, file: !2, baseType: !1043, size: 192, align: 64)
!1080 = !DICompositeType(tag: DW_TAG_structure_type, name: "RefMutL<proc_macro::bridge::client::BridgeStateL>", scope: !980, file: !2, size: 64, align: 64, elements: !1081, templateParams: !1009, identifier: "3c13818abbc67b2153a8a82d5ed1669")
!1081 = !{!1082}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1080, file: !2, baseType: !1083, size: 64, align: 64)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut proc_macro::bridge::client::BridgeState", baseType: !989, size: 64, align: 64, dwarfAddressSpace: 0)
!1084 = !{!1085, !1086}
!1085 = !DILocalVariable(name: "f", scope: !1072, file: !978, line: 78, type: !1043, align: 8)
!1086 = !DILocalVariable(arg: 2, scope: !1072, file: !978, line: 79, type: !1080)
!1087 = !DILocation(line: 78, column: 57, scope: !1072)
!1088 = !DILocation(line: 79, column: 30, scope: !1072)
!1089 = !DILocation(line: 79, column: 33, scope: !1072)
!1090 = !DILocation(line: 79, column: 32, scope: !1072)
!1091 = distinct !DISubprogram(name: "replace<proc_macro::bridge::client::BridgeStateL, (), proc_macro::bridge::scoped_cell::{impl#3}::set::{closure_env#0}<proc_macro::bridge::client::BridgeStateL, (), proc_macro::bridge::client::run_client::{closure#0}::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>", linkageName: "_ZN10proc_macro6bridge11scoped_cell19ScopedCell$LT$T$GT$7replace17h464957909ae8eab9E", scope: !979, file: !978, line: 46, type: !1092, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1118, retainedNodes: !1094)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{null, !1042, !989, !1077}
!1094 = !{!1095, !1096, !1097, !1098, !1116}
!1095 = !DILocalVariable(name: "self", arg: 1, scope: !1091, file: !978, line: 47, type: !1042)
!1096 = !DILocalVariable(name: "replacement", arg: 2, scope: !1091, file: !978, line: 48, type: !989)
!1097 = !DILocalVariable(name: "f", arg: 3, scope: !1091, file: !978, line: 49, type: !1077)
!1098 = !DILocalVariable(name: "put_back_on_drop", scope: !1099, file: !978, line: 65, type: !1100, align: 8)
!1099 = distinct !DILexicalBlock(scope: !1091, file: !978, line: 65, column: 9)
!1100 = !DICompositeType(tag: DW_TAG_structure_type, name: "PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>", scope: !1101, file: !2, size: 704, align: 64, elements: !1102, templateParams: !1009, identifier: "16474644a3dd641a292c1fcc527ec279")
!1101 = !DINamespace(name: "replace", scope: !1074)
!1102 = !{!1103, !1104}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "cell", scope: !1100, file: !2, baseType: !1042, size: 64, align: 64)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1100, file: !2, baseType: !1105, size: 640, align: 64, offset: 64)
!1105 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<proc_macro::bridge::client::BridgeState>", scope: !20, file: !2, size: 640, align: 64, elements: !1106, templateParams: !27, identifier: "454fe59971b4c09fc19a0bb6c3be260c")
!1106 = !{!1107}
!1107 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1105, file: !2, size: 640, align: 64, elements: !1108, templateParams: !27, identifier: "39958c76a2210ad8187fa961b92f1a1e", discriminator: !1115)
!1108 = !{!1109, !1111}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1107, file: !2, baseType: !1110, size: 640, align: 64, extraData: i64 3)
!1110 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1105, file: !2, size: 640, align: 64, elements: !27, templateParams: !1007, identifier: "16917629429619491a40b5af7aa18972")
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1107, file: !2, baseType: !1112, size: 640, align: 64)
!1112 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1105, file: !2, size: 640, align: 64, elements: !1113, templateParams: !1007, identifier: "4c986067604b074c151b8a88120ba66f")
!1113 = !{!1114}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1112, file: !2, baseType: !989, size: 640, align: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, scope: !1105, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!1116 = !DILocalVariable(name: "erased", scope: !1117, file: !978, line: 68, type: !989, align: 8)
!1117 = distinct !DILexicalBlock(scope: !1091, file: !978, line: 68, column: 17)
!1118 = !{!1010, !1063, !1119}
!1119 = !DITemplateTypeParameter(name: "impl for<'b, 'c> FnOnce(RefMutL<'b, 'c, T>) -> R", type: !1077)
!1120 = !DILocation(line: 47, column: 9, scope: !1091)
!1121 = !DILocation(line: 48, column: 9, scope: !1091)
!1122 = !DILocation(line: 49, column: 9, scope: !1091)
!1123 = !DILocation(line: 65, column: 13, scope: !1099)
!1124 = !DILocation(line: 68, column: 21, scope: !1117)
!1125 = !DILocalVariable(name: "t", scope: !1126, file: !978, line: 69, type: !989, align: 8)
!1126 = !DILexicalBlockFile(scope: !1127, file: !978, discriminator: 0)
!1127 = distinct !DISubprogram(name: "forget<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem6forget17h5b16c61b5b4bf1f2E", scope: !413, file: !1128, line: 154, type: !1129, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !1131)
!1128 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "27c8869548c9dcb65186c5584c2586f6")
!1129 = !DISubroutineType(types: !1130)
!1130 = !{null, !989}
!1131 = !{!1125}
!1132 = !DILocation(line: 69, column: 17, scope: !1126, inlinedAt: !1133)
!1133 = !DILocation(line: 69, column: 17, scope: !1117)
!1134 = !DILocalVariable(name: "self", scope: !1135, file: !978, line: 74, type: !1138, align: 8)
!1135 = !DILexicalBlockFile(scope: !1136, file: !978, discriminator: 0)
!1136 = distinct !DISubprogram(name: "unwrap<&mut proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17h8f1cda026cd430b8E", scope: !1138, file: !1137, line: 772, type: !1151, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1144, retainedNodes: !1153)
!1137 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "86a5483c3993f03690545387e943de77")
!1138 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&mut proc_macro::bridge::client::BridgeState>", scope: !20, file: !2, size: 64, align: 64, elements: !1139, templateParams: !27, identifier: "ded6caa5c9708c2c3149ccb901d811b3")
!1139 = !{!1140}
!1140 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1138, file: !2, size: 64, align: 64, elements: !1141, templateParams: !27, identifier: "bddc72ed2091b5597b5c537cb8bf20e4", discriminator: !1150)
!1141 = !{!1142, !1146}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1140, file: !2, baseType: !1143, size: 64, align: 64, extraData: i64 0)
!1143 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1138, file: !2, size: 64, align: 64, elements: !27, templateParams: !1144, identifier: "9607740674540092c32b77c6511a218")
!1144 = !{!1145}
!1145 = !DITemplateTypeParameter(name: "T", type: !1083)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1140, file: !2, baseType: !1147, size: 64, align: 64)
!1147 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1138, file: !2, size: 64, align: 64, elements: !1148, templateParams: !1144, identifier: "364aeef8b86925bdae0690555c0a9f62")
!1148 = !{!1149}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1147, file: !2, baseType: !1083, size: 64, align: 64)
!1150 = !DIDerivedType(tag: DW_TAG_member, scope: !1138, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!1083, !1138, !508}
!1153 = !{!1134, !1154}
!1154 = !DILocalVariable(name: "val", scope: !1155, file: !978, line: 74, type: !1083, align: 8)
!1155 = !DILexicalBlockFile(scope: !1156, file: !978, discriminator: 0)
!1156 = distinct !DILexicalBlock(scope: !1136, file: !1137, line: 774, column: 13)
!1157 = !DILocation(line: 74, column: 19, scope: !1135, inlinedAt: !1158)
!1158 = !DILocation(line: 74, column: 19, scope: !1099)
!1159 = !DILocalVariable(name: "value", scope: !1160, file: !978, line: 69, type: !989, align: 8)
!1160 = !DILexicalBlockFile(scope: !1161, file: !978, discriminator: 0)
!1161 = distinct !DISubprogram(name: "new<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17he874ac80ff22d9c2E", scope: !1163, file: !1162, line: 70, type: !1167, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !1169)
!1162 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "a34f39f0c1c25c8378cd3f4ec0bf00c3")
!1163 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<proc_macro::bridge::client::BridgeState>", scope: !1164, file: !2, size: 640, align: 64, elements: !1165, templateParams: !1007, identifier: "3f5ce5d614db19d2335e742e45f3eac2")
!1164 = !DINamespace(name: "manually_drop", scope: !413)
!1165 = !{!1166}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1163, file: !2, baseType: !989, size: 640, align: 64)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!1163, !989}
!1169 = !{!1159}
!1170 = !DILocation(line: 69, column: 17, scope: !1160, inlinedAt: !1171)
!1171 = !DILocation(line: 155, column: 13, scope: !1127, inlinedAt: !1133)
!1172 = !DILocation(line: 65, column: 13, scope: !1091)
!1173 = !DILocation(line: 67, column: 25, scope: !1091)
!1174 = !DILocation(line: 68, column: 30, scope: !1091)
!1175 = !DILocation(line: 75, column: 5, scope: !1091)
!1176 = !DILocation(line: 69, column: 29, scope: !1117)
!1177 = !DILocation(line: 70, column: 17, scope: !1117)
!1178 = !DILocation(line: 67, column: 20, scope: !1091)
!1179 = !DILocation(line: 65, column: 36, scope: !1091)
!1180 = !DILocation(line: 74, column: 9, scope: !1099)
!1181 = !DILocalVariable(name: "self", scope: !1182, file: !978, line: 74, type: !1186, align: 8)
!1182 = !DILexicalBlockFile(scope: !1183, file: !978, discriminator: 0)
!1183 = distinct !DISubprogram(name: "as_mut<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core6option15Option$LT$T$GT$6as_mut17hfd849f415aa1f0ceE", scope: !1105, file: !1137, line: 648, type: !1184, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !1187)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{!1138, !1186}
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::Option<proc_macro::bridge::client::BridgeState>", baseType: !1105, size: 64, align: 64, dwarfAddressSpace: 0)
!1187 = !{!1181, !1188}
!1188 = !DILocalVariable(name: "x", scope: !1189, file: !978, line: 74, type: !1083, align: 8)
!1189 = !DILexicalBlockFile(scope: !1190, file: !978, discriminator: 0)
!1190 = distinct !DILexicalBlock(scope: !1183, file: !1137, line: 650, column: 13)
!1191 = !DILocation(line: 74, column: 19, scope: !1182, inlinedAt: !1158)
!1192 = !DILocation(line: 74, column: 19, scope: !1189, inlinedAt: !1158)
!1193 = !{i64 8}
!1194 = !DILocation(line: 74, column: 19, scope: !1155, inlinedAt: !1158)
!1195 = !DILocation(line: 74, column: 11, scope: !1099)
!1196 = !DILocation(line: 74, column: 60, scope: !1099)
!1197 = !DILocation(line: 75, column: 6, scope: !1091)
!1198 = !DILocation(line: 46, column: 5, scope: !1091)
!1199 = distinct !DISubprogram(name: "replace<proc_macro::bridge::client::BridgeStateL, proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::{impl#7}::with::{closure#0}::{closure_env#0}<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::{impl#8}::with::{closure_env#0}<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::run_client::{closure#0}::{closure#0}::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>>", linkageName: "_ZN10proc_macro6bridge11scoped_cell19ScopedCell$LT$T$GT$7replace17heea85a70599103bbE", scope: !979, file: !978, line: 46, type: !1200, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1223, retainedNodes: !1215)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!285, !1042, !989, !1202}
!1202 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::{impl#8}::with::{closure_env#0}<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::run_client::{closure#0}::{closure#0}::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>", scope: !1203, file: !2, align: 8, elements: !1206, templateParams: !27, identifier: "e255a80433096f1d253460d1c6c14093")
!1203 = !DINamespace(name: "{closure#0}", scope: !1204)
!1204 = !DINamespace(name: "with", scope: !1205)
!1205 = !DINamespace(name: "{impl#7}", scope: !239)
!1206 = !{!1207}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1202, file: !2, baseType: !1208, align: 8)
!1208 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::run_client::{closure#0}::{closure#0}::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>", scope: !1209, file: !2, align: 8, elements: !1211, templateParams: !27, identifier: "dcac2cecad94e5be4ffad3df590d3d04")
!1209 = !DINamespace(name: "with", scope: !1210)
!1210 = !DINamespace(name: "{impl#8}", scope: !239)
!1211 = !{!1212}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1208, file: !2, baseType: !1213, align: 8)
!1213 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>", scope: !1214, file: !2, align: 8, elements: !27, identifier: "32d9f298f9d1759f7e7223faaada6d69")
!1214 = !DINamespace(name: "{closure#0}", scope: !1044)
!1215 = !{!1216, !1217, !1218, !1219, !1221}
!1216 = !DILocalVariable(name: "self", arg: 1, scope: !1199, file: !978, line: 47, type: !1042)
!1217 = !DILocalVariable(name: "replacement", arg: 2, scope: !1199, file: !978, line: 48, type: !989)
!1218 = !DILocalVariable(name: "f", arg: 3, scope: !1199, file: !978, line: 49, type: !1202)
!1219 = !DILocalVariable(name: "put_back_on_drop", scope: !1220, file: !978, line: 65, type: !1100, align: 8)
!1220 = distinct !DILexicalBlock(scope: !1199, file: !978, line: 65, column: 9)
!1221 = !DILocalVariable(name: "erased", scope: !1222, file: !978, line: 68, type: !989, align: 8)
!1222 = distinct !DILexicalBlock(scope: !1199, file: !978, line: 68, column: 17)
!1223 = !{!1010, !322, !1224}
!1224 = !DITemplateTypeParameter(name: "impl for<'b, 'c> FnOnce(RefMutL<'b, 'c, T>) -> R", type: !1202)
!1225 = !DILocation(line: 47, column: 9, scope: !1199)
!1226 = !DILocation(line: 48, column: 9, scope: !1199)
!1227 = !DILocation(line: 49, column: 9, scope: !1199)
!1228 = !DILocation(line: 65, column: 13, scope: !1220)
!1229 = !DILocation(line: 68, column: 21, scope: !1222)
!1230 = !DILocalVariable(name: "t", scope: !1231, file: !978, line: 69, type: !989, align: 8)
!1231 = !DILexicalBlockFile(scope: !1232, file: !978, discriminator: 0)
!1232 = distinct !DISubprogram(name: "forget<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem6forget17h5b16c61b5b4bf1f2E", scope: !413, file: !1128, line: 154, type: !1129, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !1233)
!1233 = !{!1230}
!1234 = !DILocation(line: 69, column: 17, scope: !1231, inlinedAt: !1235)
!1235 = !DILocation(line: 69, column: 17, scope: !1222)
!1236 = !DILocalVariable(name: "self", scope: !1237, file: !978, line: 74, type: !1138, align: 8)
!1237 = !DILexicalBlockFile(scope: !1238, file: !978, discriminator: 0)
!1238 = distinct !DISubprogram(name: "unwrap<&mut proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17h8f1cda026cd430b8E", scope: !1138, file: !1137, line: 772, type: !1151, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1144, retainedNodes: !1239)
!1239 = !{!1236, !1240}
!1240 = !DILocalVariable(name: "val", scope: !1241, file: !978, line: 74, type: !1083, align: 8)
!1241 = !DILexicalBlockFile(scope: !1242, file: !978, discriminator: 0)
!1242 = distinct !DILexicalBlock(scope: !1238, file: !1137, line: 774, column: 13)
!1243 = !DILocation(line: 74, column: 19, scope: !1237, inlinedAt: !1244)
!1244 = !DILocation(line: 74, column: 19, scope: !1220)
!1245 = !DILocalVariable(name: "value", scope: !1246, file: !978, line: 69, type: !989, align: 8)
!1246 = !DILexicalBlockFile(scope: !1247, file: !978, discriminator: 0)
!1247 = distinct !DISubprogram(name: "new<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17he874ac80ff22d9c2E", scope: !1163, file: !1162, line: 70, type: !1167, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !1248)
!1248 = !{!1245}
!1249 = !DILocation(line: 69, column: 17, scope: !1246, inlinedAt: !1250)
!1250 = !DILocation(line: 155, column: 13, scope: !1232, inlinedAt: !1235)
!1251 = !DILocation(line: 65, column: 13, scope: !1199)
!1252 = !DILocation(line: 67, column: 25, scope: !1199)
!1253 = !DILocation(line: 68, column: 30, scope: !1199)
!1254 = !DILocation(line: 75, column: 5, scope: !1199)
!1255 = !DILocation(line: 69, column: 29, scope: !1222)
!1256 = !DILocation(line: 70, column: 17, scope: !1222)
!1257 = !DILocation(line: 67, column: 20, scope: !1199)
!1258 = !DILocation(line: 65, column: 36, scope: !1199)
!1259 = !DILocation(line: 74, column: 9, scope: !1220)
!1260 = !DILocalVariable(name: "self", scope: !1261, file: !978, line: 74, type: !1186, align: 8)
!1261 = !DILexicalBlockFile(scope: !1262, file: !978, discriminator: 0)
!1262 = distinct !DISubprogram(name: "as_mut<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core6option15Option$LT$T$GT$6as_mut17hfd849f415aa1f0ceE", scope: !1105, file: !1137, line: 648, type: !1184, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !1263)
!1263 = !{!1260, !1264}
!1264 = !DILocalVariable(name: "x", scope: !1265, file: !978, line: 74, type: !1083, align: 8)
!1265 = !DILexicalBlockFile(scope: !1266, file: !978, discriminator: 0)
!1266 = distinct !DILexicalBlock(scope: !1262, file: !1137, line: 650, column: 13)
!1267 = !DILocation(line: 74, column: 19, scope: !1261, inlinedAt: !1244)
!1268 = !DILocation(line: 74, column: 19, scope: !1265, inlinedAt: !1244)
!1269 = !DILocation(line: 74, column: 19, scope: !1241, inlinedAt: !1244)
!1270 = !DILocation(line: 74, column: 11, scope: !1220)
!1271 = !DILocation(line: 74, column: 60, scope: !1220)
!1272 = !DILocation(line: 75, column: 6, scope: !1199)
!1273 = !DILocation(line: 46, column: 5, scope: !1199)
!1274 = distinct !DISubprogram(name: "wrapper<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::{impl#11}::expand1::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>", linkageName: "_ZN10proc_macro6bridge14selfless_reify31reify_to_extern_c_fn_hrt_bridge7wrapper17h42ad000de5b43883E", scope: !1276, file: !1275, line: 55, type: !283, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1285, retainedNodes: !1278)
!1275 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/proc_macro/src/bridge/selfless_reify.rs", directory: "", checksumkind: CSK_MD5, checksum: "5332788d13715c85c887fca886e9f153")
!1276 = !DINamespace(name: "reify_to_extern_c_fn_hrt_bridge", scope: !1277)
!1277 = !DINamespace(name: "selfless_reify", scope: !240)
!1278 = !{!1279, !1280}
!1279 = !DILocalVariable(name: "bridge", arg: 1, scope: !1274, file: !1275, line: 58, type: !300)
!1280 = !DILocalVariable(name: "f", scope: !1281, file: !1275, line: 59, type: !1282, align: 1)
!1281 = distinct !DILexicalBlock(scope: !1274, file: !1275, line: 59, column: 17)
!1282 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>", scope: !1051, file: !2, align: 8, elements: !1283, templateParams: !27, identifier: "d471c695774eca8b9f18a4dc5f76e72e")
!1283 = !{!1284}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1282, file: !2, baseType: !334, align: 8)
!1285 = !{!322, !1286}
!1286 = !DITemplateTypeParameter(name: "F", type: !1282)
!1287 = !DILocation(line: 58, column: 17, scope: !1274)
!1288 = !DILocation(line: 59, column: 21, scope: !1281)
!1289 = !DILocalVariable(name: "self", scope: !1290, file: !1275, line: 62, type: !1293, align: 1)
!1290 = !DILexicalBlockFile(scope: !1291, file: !1275, discriminator: 0)
!1291 = distinct !DISubprogram(name: "assume_init<proc_macro::bridge::client::{impl#11}::expand1::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h5b951272b9ebc652E", scope: !1293, file: !1292, line: 629, type: !1303, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1301, retainedNodes: !1305)
!1292 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "d75c93d9a93fe65ef19edc0e8e272278")
!1293 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<proc_macro::bridge::client::{impl#11}::expand1::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>", scope: !1294, file: !2, align: 8, elements: !1295, templateParams: !1301, identifier: "703fd0c770721e3dcb03937181052f49")
!1294 = !DINamespace(name: "maybe_uninit", scope: !413)
!1295 = !{!1296, !1297}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1293, file: !2, baseType: !7, align: 8)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1293, file: !2, baseType: !1298, align: 8)
!1298 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<proc_macro::bridge::client::{impl#11}::expand1::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>", scope: !1164, file: !2, align: 8, elements: !1299, templateParams: !1301, identifier: "2b44c915fa6da2cf720bdbf4f9eee10f")
!1299 = !{!1300}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1298, file: !2, baseType: !1282, align: 8)
!1301 = !{!1302}
!1302 = !DITemplateTypeParameter(name: "T", type: !1282)
!1303 = !DISubroutineType(types: !1304)
!1304 = !{null, !1293, !508}
!1305 = !{!1289}
!1306 = !DILocation(line: 62, column: 21, scope: !1290, inlinedAt: !1307)
!1307 = !DILocation(line: 62, column: 21, scope: !1274)
!1308 = !DILocalVariable(name: "slot", scope: !1309, file: !1275, line: 62, type: !1298, align: 1)
!1309 = !DILexicalBlockFile(scope: !1310, file: !1275, discriminator: 0)
!1310 = distinct !DISubprogram(name: "into_inner<proc_macro::bridge::client::{impl#11}::expand1::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h7d64f3cae8b55f88E", scope: !1298, file: !1162, line: 88, type: !1311, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1301, retainedNodes: !1313)
!1311 = !DISubroutineType(types: !1312)
!1312 = !{null, !1298}
!1313 = !{!1308}
!1314 = !DILocation(line: 62, column: 21, scope: !1309, inlinedAt: !1315)
!1315 = !DILocation(line: 634, column: 13, scope: !1291, inlinedAt: !1307)
!1316 = !DILocation(line: 59, column: 21, scope: !1274)
!1317 = !DILocation(line: 62, column: 21, scope: !1318, inlinedAt: !1307)
!1318 = !DILexicalBlockFile(scope: !1319, file: !1275, discriminator: 0)
!1319 = distinct !DISubprogram(name: "uninit<proc_macro::bridge::client::{impl#11}::expand1::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h00a5ca5c41701dc1E", scope: !1293, file: !1292, line: 320, type: !1320, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1301, retainedNodes: !27)
!1320 = !DISubroutineType(types: !1321)
!1321 = !{null}
!1322 = !DILocation(line: 64, column: 21, scope: !1281)
!1323 = !DILocation(line: 64, column: 17, scope: !1281)
!1324 = !DILocation(line: 65, column: 13, scope: !1274)
!1325 = !DILocation(line: 65, column: 14, scope: !1274)
!1326 = !DILocation(line: 55, column: 15, scope: !1274)
!1327 = distinct !DISubprogram(name: "extend_from_array<4>", linkageName: "_ZN10proc_macro6bridge6buffer6Buffer17extend_from_array17h2a6c1ed1be41c0e6E", scope: !285, file: !1328, line: 63, type: !1329, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !1335)
!1328 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/proc_macro/src/bridge/buffer.rs", directory: "", checksumkind: CSK_MD5, checksum: "06c95dc65df4e7ccaeaff0f780eea297")
!1329 = !DISubroutineType(types: !1330)
!1330 = !{null, !615, !1331}
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[u8; 4]", baseType: !1332, size: 64, align: 64, dwarfAddressSpace: 0)
!1332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 32, align: 8, elements: !1333)
!1333 = !{!1334}
!1334 = !DISubrange(count: 4, lowerBound: 0)
!1335 = !{!1336, !1337, !1338}
!1336 = !DILocalVariable(name: "self", arg: 1, scope: !1327, file: !1328, line: 63, type: !615)
!1337 = !DILocalVariable(name: "xs", arg: 2, scope: !1327, file: !1328, line: 63, type: !1331)
!1338 = !DILocalVariable(name: "b", scope: !1339, file: !1328, line: 65, type: !285, align: 8)
!1339 = distinct !DILexicalBlock(scope: !1327, file: !1328, line: 65, column: 13)
!1340 = !DILocation(line: 63, column: 53, scope: !1327)
!1341 = !DILocation(line: 63, column: 64, scope: !1327)
!1342 = !DILocation(line: 65, column: 17, scope: !1339)
!1343 = !DILocalVariable(name: "runtime", scope: !1344, file: !1328, line: 69, type: !1355, align: 8)
!1344 = !DILexicalBlockFile(scope: !1345, file: !1328, discriminator: 0)
!1345 = distinct !DILexicalBlock(scope: !1346, file: !549, line: 2336, column: 13)
!1346 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17ha3d50afd39c4aa62E", scope: !1347, file: !549, line: 2458, type: !1348, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1350)
!1347 = !DINamespace(name: "intrinsics", scope: !21)
!1348 = !DISubroutineType(types: !1349)
!1349 = !{null, !52, !289, !9}
!1350 = !{!1351, !1353, !1354, !1343}
!1351 = !DILocalVariable(name: "src", scope: !1352, file: !1328, line: 69, type: !52, align: 8)
!1352 = !DILexicalBlockFile(scope: !1346, file: !1328, discriminator: 0)
!1353 = !DILocalVariable(name: "dst", scope: !1352, file: !1328, line: 69, type: !289, align: 8)
!1354 = !DILocalVariable(name: "count", scope: !1352, file: !1328, line: 69, type: !9, align: 8)
!1355 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !1356, file: !2, size: 192, align: 64, elements: !1357, templateParams: !27, identifier: "fb5d8c4998ddcc045cba0da9a8307400")
!1356 = !DINamespace(name: "copy_nonoverlapping", scope: !1347)
!1357 = !{!1358, !1359, !1361}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__src", scope: !1355, file: !2, baseType: !554, size: 64, align: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__dst", scope: !1355, file: !2, baseType: !1360, size: 64, align: 64, offset: 64)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut u8", baseType: !289, size: 64, align: 64, dwarfAddressSpace: 0)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__count", scope: !1355, file: !2, baseType: !556, size: 64, align: 64, offset: 128)
!1362 = !DILocation(line: 69, column: 13, scope: !1344, inlinedAt: !1363)
!1363 = !DILocation(line: 1243, column: 18, scope: !1364, inlinedAt: !1370)
!1364 = distinct !DISubprogram(name: "copy_to_nonoverlapping<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17h2b9275aebd98240eE", scope: !577, file: !576, line: 1238, type: !1348, scopeLine: 1238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1365)
!1365 = !{!1366, !1368, !1369}
!1366 = !DILocalVariable(name: "self", scope: !1367, file: !1328, line: 69, type: !52, align: 8)
!1367 = !DILexicalBlockFile(scope: !1364, file: !1328, discriminator: 0)
!1368 = !DILocalVariable(name: "dest", scope: !1367, file: !1328, line: 69, type: !289, align: 8)
!1369 = !DILocalVariable(name: "count", scope: !1367, file: !1328, line: 69, type: !9, align: 8)
!1370 = !DILocation(line: 69, column: 13, scope: !1327)
!1371 = !DILocation(line: 64, column: 12, scope: !1327)
!1372 = !DILocation(line: 64, column: 24, scope: !1327)
!1373 = !DILocation(line: 64, column: 40, scope: !1327)
!1374 = !DILocation(line: 64, column: 23, scope: !1327)
!1375 = !DILocalVariable(name: "self", scope: !1376, file: !1328, line: 69, type: !529, align: 8)
!1376 = !DILexicalBlockFile(scope: !1377, file: !1328, discriminator: 0)
!1377 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h06daf2116dc3c858E", scope: !1379, file: !1378, line: 476, type: !1380, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1382)
!1378 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "7e4712ab5341970456c5be6b0829b712")
!1379 = !DINamespace(name: "{impl#0}", scope: !541)
!1380 = !DISubroutineType(types: !1381)
!1381 = !{!52, !529}
!1382 = !{!1375}
!1383 = !DILocation(line: 69, column: 13, scope: !1376, inlinedAt: !1370)
!1384 = !DILocation(line: 69, column: 13, scope: !1367, inlinedAt: !1370)
!1385 = !DILocation(line: 69, column: 48, scope: !1327)
!1386 = !DILocalVariable(name: "self", scope: !1387, file: !1328, line: 69, type: !289, align: 8)
!1387 = !DILexicalBlockFile(scope: !1388, file: !1328, discriminator: 0)
!1388 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hce95b2f782375a87E", scope: !691, file: !681, line: 985, type: !692, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1389)
!1389 = !{!1386, !1390}
!1390 = !DILocalVariable(name: "count", scope: !1387, file: !1328, line: 69, type: !9, align: 8)
!1391 = !DILocation(line: 69, column: 48, scope: !1387, inlinedAt: !1385)
!1392 = !DILocation(line: 69, column: 62, scope: !1327)
!1393 = !DILocalVariable(name: "self", scope: !1394, file: !1328, line: 69, type: !289, align: 8)
!1394 = !DILexicalBlockFile(scope: !1395, file: !1328, discriminator: 0)
!1395 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h774ff863e67a55bdE", scope: !691, file: !681, line: 465, type: !701, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1396)
!1396 = !{!1393, !1397}
!1397 = !DILocalVariable(name: "count", scope: !1394, file: !1328, line: 69, type: !703, align: 8)
!1398 = !DILocation(line: 69, column: 48, scope: !1394, inlinedAt: !1399)
!1399 = !DILocation(line: 990, column: 18, scope: !1388, inlinedAt: !1385)
!1400 = !DILocation(line: 65, column: 21, scope: !1327)
!1401 = !DILocalVariable(name: "self", scope: !1402, file: !1328, line: 65, type: !615, align: 8)
!1402 = distinct !DISubprogram(name: "take", linkageName: "_ZN10proc_macro6bridge6buffer6Buffer4take17hc25bad77c7a5c746E", scope: !285, file: !1328, line: 54, type: !1403, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !1405)
!1403 = !DISubroutineType(types: !1404)
!1404 = !{!285, !615}
!1405 = !{!1401}
!1406 = !DILocation(line: 65, column: 21, scope: !1402, inlinedAt: !1400)
!1407 = !DILocalVariable(name: "dest", scope: !1408, file: !1328, line: 65, type: !615, align: 8)
!1408 = !DILexicalBlockFile(scope: !1409, file: !1328, discriminator: 0)
!1409 = distinct !DISubprogram(name: "take<proc_macro::bridge::buffer::Buffer>", linkageName: "_ZN4core3mem4take17hbac851b2c93f1939E", scope: !413, file: !1128, line: 846, type: !1403, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1411, retainedNodes: !1410)
!1410 = !{!1407}
!1411 = !{!1412}
!1412 = !DITemplateTypeParameter(name: "T", type: !285)
!1413 = !DILocation(line: 65, column: 21, scope: !1408, inlinedAt: !1414)
!1414 = !DILocation(line: 55, column: 9, scope: !1402, inlinedAt: !1400)
!1415 = !DILocation(line: 65, column: 21, scope: !1416, inlinedAt: !1420)
!1416 = !DILexicalBlockFile(scope: !1417, file: !1328, discriminator: 0)
!1417 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17h94f1cc63c2616b42E", scope: !35, file: !525, line: 424, type: !1418, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !27)
!1418 = !DISubroutineType(types: !1419)
!1419 = !{!35}
!1420 = !DILocation(line: 44, column: 36, scope: !1421, inlinedAt: !1427)
!1421 = !DILexicalBlockFile(scope: !1423, file: !1422, discriminator: 0)
!1422 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "01273458e8d6db9c7d8d25445bca74ed")
!1423 = distinct !DISubprogram(name: "default", linkageName: "_ZN77_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$core..default..Default$GT$7default17hdcc1a6b029a7393aE", scope: !1424, file: !1328, line: 22, type: !1425, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !27)
!1424 = !DINamespace(name: "{impl#2}", scope: !286)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!285}
!1427 = !DILocation(line: 847, column: 19, scope: !1409, inlinedAt: !1414)
!1428 = !DILocation(line: 65, column: 21, scope: !1423, inlinedAt: !1427)
!1429 = !DILocation(line: 66, column: 21, scope: !1339)
!1430 = !DILocation(line: 66, column: 33, scope: !1339)
!1431 = !DILocation(line: 66, column: 36, scope: !1339)
!1432 = !DILocalVariable(name: "self", scope: !1433, file: !1328, line: 66, type: !529, align: 8)
!1433 = !DILexicalBlockFile(scope: !1434, file: !1328, discriminator: 0)
!1434 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17he90819c7f3b579f5E", scope: !1379, file: !1378, line: 129, type: !1435, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1437)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!9, !529}
!1437 = !{!1432}
!1438 = !DILocation(line: 66, column: 36, scope: !1433, inlinedAt: !1431)
!1439 = !DILocation(line: 66, column: 44, scope: !1339)
!1440 = !DILocation(line: 66, column: 13, scope: !1339)
!1441 = !DILocation(line: 63, column: 5, scope: !1327)
!1442 = !DILocation(line: 64, column: 9, scope: !1327)
!1443 = !DILocation(line: 69, column: 73, scope: !1327)
!1444 = !DILocation(line: 69, column: 13, scope: !1352, inlinedAt: !1363)
!1445 = !DILocation(line: 70, column: 25, scope: !1327)
!1446 = !DILocation(line: 70, column: 13, scope: !1327)
!1447 = !DILocation(line: 72, column: 6, scope: !1327)
!1448 = distinct !DISubprogram(name: "extend_from_array<8>", linkageName: "_ZN10proc_macro6bridge6buffer6Buffer17extend_from_array17h52eeff7a999f4e59E", scope: !285, file: !1328, line: 63, type: !1449, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !1455)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{null, !615, !1451}
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[u8; 8]", baseType: !1452, size: 64, align: 64, dwarfAddressSpace: 0)
!1452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 64, align: 8, elements: !1453)
!1453 = !{!1454}
!1454 = !DISubrange(count: 8, lowerBound: 0)
!1455 = !{!1456, !1457, !1458}
!1456 = !DILocalVariable(name: "self", arg: 1, scope: !1448, file: !1328, line: 63, type: !615)
!1457 = !DILocalVariable(name: "xs", arg: 2, scope: !1448, file: !1328, line: 63, type: !1451)
!1458 = !DILocalVariable(name: "b", scope: !1459, file: !1328, line: 65, type: !285, align: 8)
!1459 = distinct !DILexicalBlock(scope: !1448, file: !1328, line: 65, column: 13)
!1460 = !DILocation(line: 63, column: 53, scope: !1448)
!1461 = !DILocation(line: 63, column: 64, scope: !1448)
!1462 = !DILocation(line: 65, column: 17, scope: !1459)
!1463 = !DILocalVariable(name: "runtime", scope: !1464, file: !1328, line: 69, type: !1355, align: 8)
!1464 = !DILexicalBlockFile(scope: !1465, file: !1328, discriminator: 0)
!1465 = distinct !DILexicalBlock(scope: !1466, file: !549, line: 2336, column: 13)
!1466 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17ha3d50afd39c4aa62E", scope: !1347, file: !549, line: 2458, type: !1348, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1467)
!1467 = !{!1468, !1470, !1471, !1463}
!1468 = !DILocalVariable(name: "src", scope: !1469, file: !1328, line: 69, type: !52, align: 8)
!1469 = !DILexicalBlockFile(scope: !1466, file: !1328, discriminator: 0)
!1470 = !DILocalVariable(name: "dst", scope: !1469, file: !1328, line: 69, type: !289, align: 8)
!1471 = !DILocalVariable(name: "count", scope: !1469, file: !1328, line: 69, type: !9, align: 8)
!1472 = !DILocation(line: 69, column: 13, scope: !1464, inlinedAt: !1473)
!1473 = !DILocation(line: 1243, column: 18, scope: !1474, inlinedAt: !1480)
!1474 = distinct !DISubprogram(name: "copy_to_nonoverlapping<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17h2b9275aebd98240eE", scope: !577, file: !576, line: 1238, type: !1348, scopeLine: 1238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1475)
!1475 = !{!1476, !1478, !1479}
!1476 = !DILocalVariable(name: "self", scope: !1477, file: !1328, line: 69, type: !52, align: 8)
!1477 = !DILexicalBlockFile(scope: !1474, file: !1328, discriminator: 0)
!1478 = !DILocalVariable(name: "dest", scope: !1477, file: !1328, line: 69, type: !289, align: 8)
!1479 = !DILocalVariable(name: "count", scope: !1477, file: !1328, line: 69, type: !9, align: 8)
!1480 = !DILocation(line: 69, column: 13, scope: !1448)
!1481 = !DILocation(line: 64, column: 12, scope: !1448)
!1482 = !DILocation(line: 64, column: 24, scope: !1448)
!1483 = !DILocation(line: 64, column: 40, scope: !1448)
!1484 = !DILocation(line: 64, column: 23, scope: !1448)
!1485 = !DILocalVariable(name: "self", scope: !1486, file: !1328, line: 69, type: !529, align: 8)
!1486 = !DILexicalBlockFile(scope: !1487, file: !1328, discriminator: 0)
!1487 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h06daf2116dc3c858E", scope: !1379, file: !1378, line: 476, type: !1380, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1488)
!1488 = !{!1485}
!1489 = !DILocation(line: 69, column: 13, scope: !1486, inlinedAt: !1480)
!1490 = !DILocation(line: 69, column: 13, scope: !1477, inlinedAt: !1480)
!1491 = !DILocation(line: 69, column: 48, scope: !1448)
!1492 = !DILocalVariable(name: "self", scope: !1493, file: !1328, line: 69, type: !289, align: 8)
!1493 = !DILexicalBlockFile(scope: !1494, file: !1328, discriminator: 0)
!1494 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hce95b2f782375a87E", scope: !691, file: !681, line: 985, type: !692, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1495)
!1495 = !{!1492, !1496}
!1496 = !DILocalVariable(name: "count", scope: !1493, file: !1328, line: 69, type: !9, align: 8)
!1497 = !DILocation(line: 69, column: 48, scope: !1493, inlinedAt: !1491)
!1498 = !DILocation(line: 69, column: 62, scope: !1448)
!1499 = !DILocalVariable(name: "self", scope: !1500, file: !1328, line: 69, type: !289, align: 8)
!1500 = !DILexicalBlockFile(scope: !1501, file: !1328, discriminator: 0)
!1501 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h774ff863e67a55bdE", scope: !691, file: !681, line: 465, type: !701, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1502)
!1502 = !{!1499, !1503}
!1503 = !DILocalVariable(name: "count", scope: !1500, file: !1328, line: 69, type: !703, align: 8)
!1504 = !DILocation(line: 69, column: 48, scope: !1500, inlinedAt: !1505)
!1505 = !DILocation(line: 990, column: 18, scope: !1494, inlinedAt: !1491)
!1506 = !DILocation(line: 65, column: 21, scope: !1448)
!1507 = !DILocalVariable(name: "self", scope: !1508, file: !1328, line: 65, type: !615, align: 8)
!1508 = distinct !DISubprogram(name: "take", linkageName: "_ZN10proc_macro6bridge6buffer6Buffer4take17hc25bad77c7a5c746E", scope: !285, file: !1328, line: 54, type: !1403, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !1509)
!1509 = !{!1507}
!1510 = !DILocation(line: 65, column: 21, scope: !1508, inlinedAt: !1506)
!1511 = !DILocalVariable(name: "dest", scope: !1512, file: !1328, line: 65, type: !615, align: 8)
!1512 = !DILexicalBlockFile(scope: !1513, file: !1328, discriminator: 0)
!1513 = distinct !DISubprogram(name: "take<proc_macro::bridge::buffer::Buffer>", linkageName: "_ZN4core3mem4take17hbac851b2c93f1939E", scope: !413, file: !1128, line: 846, type: !1403, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1411, retainedNodes: !1514)
!1514 = !{!1511}
!1515 = !DILocation(line: 65, column: 21, scope: !1512, inlinedAt: !1516)
!1516 = !DILocation(line: 55, column: 9, scope: !1508, inlinedAt: !1506)
!1517 = !DILocation(line: 65, column: 21, scope: !1518, inlinedAt: !1520)
!1518 = !DILexicalBlockFile(scope: !1519, file: !1328, discriminator: 0)
!1519 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17h94f1cc63c2616b42E", scope: !35, file: !525, line: 424, type: !1418, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !27)
!1520 = !DILocation(line: 44, column: 36, scope: !1521, inlinedAt: !1523)
!1521 = !DILexicalBlockFile(scope: !1522, file: !1422, discriminator: 0)
!1522 = distinct !DISubprogram(name: "default", linkageName: "_ZN77_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$core..default..Default$GT$7default17hdcc1a6b029a7393aE", scope: !1424, file: !1328, line: 22, type: !1425, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !27)
!1523 = !DILocation(line: 847, column: 19, scope: !1513, inlinedAt: !1516)
!1524 = !DILocation(line: 65, column: 21, scope: !1522, inlinedAt: !1523)
!1525 = !DILocation(line: 66, column: 21, scope: !1459)
!1526 = !DILocation(line: 66, column: 33, scope: !1459)
!1527 = !DILocation(line: 66, column: 36, scope: !1459)
!1528 = !DILocalVariable(name: "self", scope: !1529, file: !1328, line: 66, type: !529, align: 8)
!1529 = !DILexicalBlockFile(scope: !1530, file: !1328, discriminator: 0)
!1530 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17he90819c7f3b579f5E", scope: !1379, file: !1378, line: 129, type: !1435, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1531)
!1531 = !{!1528}
!1532 = !DILocation(line: 66, column: 36, scope: !1529, inlinedAt: !1527)
!1533 = !DILocation(line: 66, column: 44, scope: !1459)
!1534 = !DILocation(line: 66, column: 13, scope: !1459)
!1535 = !DILocation(line: 63, column: 5, scope: !1448)
!1536 = !DILocation(line: 64, column: 9, scope: !1448)
!1537 = !DILocation(line: 69, column: 73, scope: !1448)
!1538 = !DILocation(line: 69, column: 13, scope: !1469, inlinedAt: !1473)
!1539 = !DILocation(line: 70, column: 25, scope: !1448)
!1540 = !DILocation(line: 70, column: 13, scope: !1448)
!1541 = !DILocation(line: 72, column: 6, scope: !1448)
!1542 = distinct !DISubprogram(name: "extend_from_slice", linkageName: "_ZN10proc_macro6bridge6buffer6Buffer17extend_from_slice17hfbb611c0c268f353E", scope: !285, file: !1328, line: 75, type: !1543, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !1545)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{null, !615, !529}
!1545 = !{!1546, !1547, !1548}
!1546 = !DILocalVariable(name: "self", arg: 1, scope: !1542, file: !1328, line: 75, type: !615)
!1547 = !DILocalVariable(name: "xs", arg: 2, scope: !1542, file: !1328, line: 75, type: !529)
!1548 = !DILocalVariable(name: "b", scope: !1549, file: !1328, line: 77, type: !285, align: 8)
!1549 = distinct !DILexicalBlock(scope: !1542, file: !1328, line: 77, column: 13)
!1550 = !DILocation(line: 75, column: 37, scope: !1542)
!1551 = !DILocation(line: 75, column: 48, scope: !1542)
!1552 = !DILocation(line: 77, column: 17, scope: !1549)
!1553 = !DILocalVariable(name: "runtime", scope: !1554, file: !1328, line: 81, type: !1355, align: 8)
!1554 = !DILexicalBlockFile(scope: !1555, file: !1328, discriminator: 0)
!1555 = distinct !DILexicalBlock(scope: !1556, file: !549, line: 2336, column: 13)
!1556 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17ha3d50afd39c4aa62E", scope: !1347, file: !549, line: 2458, type: !1348, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1557)
!1557 = !{!1558, !1560, !1561, !1553}
!1558 = !DILocalVariable(name: "src", scope: !1559, file: !1328, line: 81, type: !52, align: 8)
!1559 = !DILexicalBlockFile(scope: !1556, file: !1328, discriminator: 0)
!1560 = !DILocalVariable(name: "dst", scope: !1559, file: !1328, line: 81, type: !289, align: 8)
!1561 = !DILocalVariable(name: "count", scope: !1559, file: !1328, line: 81, type: !9, align: 8)
!1562 = !DILocation(line: 81, column: 13, scope: !1554, inlinedAt: !1563)
!1563 = !DILocation(line: 1243, column: 18, scope: !1564, inlinedAt: !1570)
!1564 = distinct !DISubprogram(name: "copy_to_nonoverlapping<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17h2b9275aebd98240eE", scope: !577, file: !576, line: 1238, type: !1348, scopeLine: 1238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1565)
!1565 = !{!1566, !1568, !1569}
!1566 = !DILocalVariable(name: "self", scope: !1567, file: !1328, line: 81, type: !52, align: 8)
!1567 = !DILexicalBlockFile(scope: !1564, file: !1328, discriminator: 0)
!1568 = !DILocalVariable(name: "dest", scope: !1567, file: !1328, line: 81, type: !289, align: 8)
!1569 = !DILocalVariable(name: "count", scope: !1567, file: !1328, line: 81, type: !9, align: 8)
!1570 = !DILocation(line: 81, column: 13, scope: !1542)
!1571 = !DILocation(line: 76, column: 24, scope: !1542)
!1572 = !DILocation(line: 76, column: 40, scope: !1542)
!1573 = !DILocation(line: 76, column: 23, scope: !1542)
!1574 = !DILocation(line: 76, column: 12, scope: !1542)
!1575 = !DILocalVariable(name: "self", scope: !1576, file: !1328, line: 81, type: !529, align: 8)
!1576 = !DILexicalBlockFile(scope: !1577, file: !1328, discriminator: 0)
!1577 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h06daf2116dc3c858E", scope: !1379, file: !1378, line: 476, type: !1380, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1578)
!1578 = !{!1575}
!1579 = !DILocation(line: 81, column: 13, scope: !1576, inlinedAt: !1570)
!1580 = !DILocation(line: 81, column: 13, scope: !1567, inlinedAt: !1570)
!1581 = !DILocation(line: 81, column: 48, scope: !1542)
!1582 = !DILocalVariable(name: "self", scope: !1583, file: !1328, line: 81, type: !289, align: 8)
!1583 = !DILexicalBlockFile(scope: !1584, file: !1328, discriminator: 0)
!1584 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hce95b2f782375a87E", scope: !691, file: !681, line: 985, type: !692, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1585)
!1585 = !{!1582, !1586}
!1586 = !DILocalVariable(name: "count", scope: !1583, file: !1328, line: 81, type: !9, align: 8)
!1587 = !DILocation(line: 81, column: 48, scope: !1583, inlinedAt: !1581)
!1588 = !DILocation(line: 81, column: 62, scope: !1542)
!1589 = !DILocalVariable(name: "self", scope: !1590, file: !1328, line: 81, type: !289, align: 8)
!1590 = !DILexicalBlockFile(scope: !1591, file: !1328, discriminator: 0)
!1591 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h774ff863e67a55bdE", scope: !691, file: !681, line: 465, type: !701, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1592)
!1592 = !{!1589, !1593}
!1593 = !DILocalVariable(name: "count", scope: !1590, file: !1328, line: 81, type: !703, align: 8)
!1594 = !DILocation(line: 81, column: 48, scope: !1590, inlinedAt: !1595)
!1595 = !DILocation(line: 990, column: 18, scope: !1584, inlinedAt: !1581)
!1596 = !DILocation(line: 77, column: 21, scope: !1542)
!1597 = !DILocalVariable(name: "self", scope: !1598, file: !1328, line: 77, type: !615, align: 8)
!1598 = distinct !DISubprogram(name: "take", linkageName: "_ZN10proc_macro6bridge6buffer6Buffer4take17hc25bad77c7a5c746E", scope: !285, file: !1328, line: 54, type: !1403, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !1599)
!1599 = !{!1597}
!1600 = !DILocation(line: 77, column: 21, scope: !1598, inlinedAt: !1596)
!1601 = !DILocalVariable(name: "dest", scope: !1602, file: !1328, line: 77, type: !615, align: 8)
!1602 = !DILexicalBlockFile(scope: !1603, file: !1328, discriminator: 0)
!1603 = distinct !DISubprogram(name: "take<proc_macro::bridge::buffer::Buffer>", linkageName: "_ZN4core3mem4take17hbac851b2c93f1939E", scope: !413, file: !1128, line: 846, type: !1403, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1411, retainedNodes: !1604)
!1604 = !{!1601}
!1605 = !DILocation(line: 77, column: 21, scope: !1602, inlinedAt: !1606)
!1606 = !DILocation(line: 55, column: 9, scope: !1598, inlinedAt: !1596)
!1607 = !DILocation(line: 77, column: 21, scope: !1608, inlinedAt: !1610)
!1608 = !DILexicalBlockFile(scope: !1609, file: !1328, discriminator: 0)
!1609 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17h94f1cc63c2616b42E", scope: !35, file: !525, line: 424, type: !1418, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !27)
!1610 = !DILocation(line: 44, column: 36, scope: !1611, inlinedAt: !1613)
!1611 = !DILexicalBlockFile(scope: !1612, file: !1422, discriminator: 0)
!1612 = distinct !DISubprogram(name: "default", linkageName: "_ZN77_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$core..default..Default$GT$7default17hdcc1a6b029a7393aE", scope: !1424, file: !1328, line: 22, type: !1425, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !27)
!1613 = !DILocation(line: 847, column: 19, scope: !1603, inlinedAt: !1606)
!1614 = !DILocation(line: 77, column: 21, scope: !1612, inlinedAt: !1613)
!1615 = !DILocation(line: 78, column: 21, scope: !1549)
!1616 = !DILocation(line: 78, column: 33, scope: !1549)
!1617 = !DILocation(line: 78, column: 36, scope: !1549)
!1618 = !DILocalVariable(name: "self", scope: !1619, file: !1328, line: 78, type: !529, align: 8)
!1619 = !DILexicalBlockFile(scope: !1620, file: !1328, discriminator: 0)
!1620 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17he90819c7f3b579f5E", scope: !1379, file: !1378, line: 129, type: !1435, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1621)
!1621 = !{!1618}
!1622 = !DILocation(line: 78, column: 36, scope: !1619, inlinedAt: !1617)
!1623 = !DILocation(line: 78, column: 44, scope: !1549)
!1624 = !DILocation(line: 78, column: 13, scope: !1549)
!1625 = !DILocation(line: 75, column: 5, scope: !1542)
!1626 = !DILocation(line: 76, column: 9, scope: !1542)
!1627 = !DILocation(line: 81, column: 73, scope: !1542)
!1628 = !DILocation(line: 81, column: 13, scope: !1559, inlinedAt: !1563)
!1629 = !DILocation(line: 82, column: 13, scope: !1542)
!1630 = !DILocation(line: 84, column: 6, scope: !1542)
!1631 = distinct !DISubprogram(name: "push", linkageName: "_ZN10proc_macro6bridge6buffer6Buffer4push17h641e142eab244a8dE", scope: !285, file: !1328, line: 87, type: !1632, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !1634)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{null, !615, !53}
!1634 = !{!1635, !1636, !1637}
!1635 = !DILocalVariable(name: "self", arg: 1, scope: !1631, file: !1328, line: 87, type: !615)
!1636 = !DILocalVariable(name: "v", arg: 2, scope: !1631, file: !1328, line: 87, type: !53)
!1637 = !DILocalVariable(name: "b", scope: !1638, file: !1328, line: 92, type: !285, align: 8)
!1638 = distinct !DILexicalBlock(scope: !1631, file: !1328, line: 92, column: 13)
!1639 = !DILocation(line: 87, column: 24, scope: !1631)
!1640 = !DILocation(line: 87, column: 35, scope: !1631)
!1641 = !DILocation(line: 92, column: 17, scope: !1638)
!1642 = !DILocation(line: 91, column: 12, scope: !1631)
!1643 = !DILocation(line: 91, column: 24, scope: !1631)
!1644 = !DILocation(line: 96, column: 14, scope: !1631)
!1645 = !DILocalVariable(name: "self", scope: !1646, file: !1328, line: 96, type: !289, align: 8)
!1646 = !DILexicalBlockFile(scope: !1647, file: !1328, discriminator: 0)
!1647 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hce95b2f782375a87E", scope: !691, file: !681, line: 985, type: !692, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1648)
!1648 = !{!1645, !1649}
!1649 = !DILocalVariable(name: "count", scope: !1646, file: !1328, line: 96, type: !9, align: 8)
!1650 = !DILocation(line: 96, column: 14, scope: !1646, inlinedAt: !1644)
!1651 = !DILocation(line: 96, column: 28, scope: !1631)
!1652 = !DILocalVariable(name: "self", scope: !1653, file: !1328, line: 96, type: !289, align: 8)
!1653 = !DILexicalBlockFile(scope: !1654, file: !1328, discriminator: 0)
!1654 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h774ff863e67a55bdE", scope: !691, file: !681, line: 465, type: !701, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1655)
!1655 = !{!1652, !1656}
!1656 = !DILocalVariable(name: "count", scope: !1653, file: !1328, line: 96, type: !703, align: 8)
!1657 = !DILocation(line: 96, column: 14, scope: !1653, inlinedAt: !1658)
!1658 = !DILocation(line: 990, column: 18, scope: !1647, inlinedAt: !1644)
!1659 = !DILocation(line: 92, column: 21, scope: !1631)
!1660 = !DILocalVariable(name: "self", scope: !1661, file: !1328, line: 92, type: !615, align: 8)
!1661 = distinct !DISubprogram(name: "take", linkageName: "_ZN10proc_macro6bridge6buffer6Buffer4take17hc25bad77c7a5c746E", scope: !285, file: !1328, line: 54, type: !1403, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !1662)
!1662 = !{!1660}
!1663 = !DILocation(line: 92, column: 21, scope: !1661, inlinedAt: !1659)
!1664 = !DILocalVariable(name: "dest", scope: !1665, file: !1328, line: 92, type: !615, align: 8)
!1665 = !DILexicalBlockFile(scope: !1666, file: !1328, discriminator: 0)
!1666 = distinct !DISubprogram(name: "take<proc_macro::bridge::buffer::Buffer>", linkageName: "_ZN4core3mem4take17hbac851b2c93f1939E", scope: !413, file: !1128, line: 846, type: !1403, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1411, retainedNodes: !1667)
!1667 = !{!1664}
!1668 = !DILocation(line: 92, column: 21, scope: !1665, inlinedAt: !1669)
!1669 = !DILocation(line: 55, column: 9, scope: !1661, inlinedAt: !1659)
!1670 = !DILocation(line: 92, column: 21, scope: !1671, inlinedAt: !1673)
!1671 = !DILexicalBlockFile(scope: !1672, file: !1328, discriminator: 0)
!1672 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17h94f1cc63c2616b42E", scope: !35, file: !525, line: 424, type: !1418, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !27)
!1673 = !DILocation(line: 44, column: 36, scope: !1674, inlinedAt: !1676)
!1674 = !DILexicalBlockFile(scope: !1675, file: !1422, discriminator: 0)
!1675 = distinct !DISubprogram(name: "default", linkageName: "_ZN77_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$core..default..Default$GT$7default17hdcc1a6b029a7393aE", scope: !1424, file: !1328, line: 22, type: !1425, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !27)
!1676 = !DILocation(line: 847, column: 19, scope: !1666, inlinedAt: !1669)
!1677 = !DILocation(line: 92, column: 21, scope: !1675, inlinedAt: !1676)
!1678 = !DILocation(line: 93, column: 21, scope: !1638)
!1679 = !DILocation(line: 93, column: 33, scope: !1638)
!1680 = !DILocation(line: 93, column: 13, scope: !1638)
!1681 = !DILocation(line: 87, column: 5, scope: !1631)
!1682 = !DILocation(line: 91, column: 9, scope: !1631)
!1683 = !DILocation(line: 96, column: 13, scope: !1631)
!1684 = !DILocation(line: 97, column: 13, scope: !1631)
!1685 = !DILocation(line: 99, column: 6, scope: !1631)
!1686 = distinct !DISubprogram(name: "run_client<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>", linkageName: "_ZN10proc_macro6bridge6client10run_client17h655ca071f1606824E", scope: !239, file: !611, line: 380, type: !1687, scopeLine: 380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1696, retainedNodes: !1689)
!1687 = !DISubroutineType(types: !1688)
!1688 = !{!285, !300, !1049}
!1689 = !{!1690, !1691, !1692, !1694, !1695}
!1690 = !DILocalVariable(name: "config", arg: 1, scope: !1686, file: !611, line: 381, type: !300)
!1691 = !DILocalVariable(name: "f", arg: 2, scope: !1686, file: !611, line: 382, type: !1049)
!1692 = !DILocalVariable(name: "buf", scope: !1693, file: !611, line: 384, type: !285, align: 8)
!1693 = distinct !DILexicalBlock(scope: !1686, file: !611, line: 384, column: 5)
!1694 = !DILocalVariable(name: "dispatch", scope: !1693, file: !611, line: 384, type: !304, align: 8)
!1695 = !DILocalVariable(name: "force_show_panics", scope: !1693, file: !611, line: 384, type: !324, align: 1)
!1696 = !{!1697, !1698, !1699}
!1697 = !DITemplateTypeParameter(name: "A", type: !348)
!1698 = !DITemplateTypeParameter(name: "R", type: !340)
!1699 = !DITemplateTypeParameter(name: "impl FnOnce(A) -> R", type: !1049)
!1700 = !DILocation(line: 384, column: 31, scope: !1693)
!1701 = !DILocation(line: 381, column: 5, scope: !1686)
!1702 = !DILocation(line: 382, column: 5, scope: !1686)
!1703 = !DILocation(line: 384, column: 50, scope: !1693)
!1704 = !DILocation(line: 384, column: 31, scope: !1686)
!1705 = !DILocation(line: 384, column: 40, scope: !1686)
!1706 = !DILocation(line: 384, column: 40, scope: !1693)
!1707 = !DILocation(line: 384, column: 50, scope: !1686)
!1708 = !DILocation(line: 386, column: 49, scope: !1693)
!1709 = !DILocation(line: 386, column: 25, scope: !1693)
!1710 = !DILocation(line: 386, column: 5, scope: !1693)
!1711 = !DILocation(line: 430, column: 1, scope: !1686)
!1712 = !DILocation(line: 421, column: 21, scope: !1693)
!1713 = !DILocation(line: 428, column: 5, scope: !1693)
!1714 = !DILocation(line: 430, column: 2, scope: !1686)
!1715 = !DILocation(line: 380, column: 1, scope: !1686)
!1716 = distinct !DISubprogram(name: "{closure#1}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>", linkageName: "_ZN10proc_macro6bridge6client10run_client28_$u7b$$u7b$closure$u7d$$u7d$17h7bb2dd194cb78232E", scope: !1046, file: !611, line: 421, type: !1717, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1696, retainedNodes: !1722)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{null, !1719, !887}
!1719 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>", scope: !1046, file: !2, size: 64, align: 64, elements: !1720, templateParams: !27, identifier: "14031cd4c621acfdd093f9fa9452224d")
!1720 = !{!1721}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__buf", scope: !1719, file: !2, baseType: !615, size: 64, align: 64)
!1722 = !{!1723, !1724}
!1723 = !DILocalVariable(name: "e", arg: 2, scope: !1716, file: !611, line: 421, type: !887)
!1724 = !DILocalVariable(name: "buf", scope: !1716, file: !611, line: 384, type: !285, align: 8)
!1725 = !DILocation(line: 384, column: 31, scope: !1716)
!1726 = !DILocation(line: 421, column: 22, scope: !1716)
!1727 = !DILocation(line: 422, column: 9, scope: !1716)
!1728 = !DILocalVariable(name: "self", scope: !1729, file: !611, line: 422, type: !615, align: 8)
!1729 = !DILexicalBlockFile(scope: !1730, file: !611, discriminator: 0)
!1730 = distinct !DISubprogram(name: "clear", linkageName: "_ZN10proc_macro6bridge6buffer6Buffer5clear17h675adba105654680E", scope: !285, file: !1328, line: 49, type: !1731, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !1733)
!1731 = !DISubroutineType(types: !1732)
!1732 = !{null, !615}
!1733 = !{!1728}
!1734 = !DILocation(line: 422, column: 9, scope: !1729, inlinedAt: !1727)
!1735 = !DILocation(line: 423, column: 22, scope: !1716)
!1736 = !DILocation(line: 423, column: 9, scope: !1716)
!1737 = !DILocation(line: 423, column: 32, scope: !1716)
!1738 = !DILocation(line: 424, column: 5, scope: !1716)
!1739 = !DILocation(line: 421, column: 24, scope: !1716)
!1740 = !DILocation(line: 421, column: 21, scope: !1716)
!1741 = distinct !DISubprogram(name: "{closure#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>", linkageName: "_ZN10proc_macro6bridge6client10run_client28_$u7b$$u7b$closure$u7d$$u7d$17hebaacc5d58c41ba4E", scope: !1046, file: !611, line: 386, type: !1742, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1696, retainedNodes: !1751)
!1742 = !DISubroutineType(types: !1743)
!1743 = !{null, !1744}
!1744 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>", scope: !1046, file: !2, size: 320, align: 64, elements: !1745, templateParams: !27, identifier: "19e56a2eaf99a5e8daaf975b171414ae")
!1745 = !{!1746, !1748, !1749, !1750}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__force_show_panics", scope: !1744, file: !2, baseType: !1747, size: 64, align: 64)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bool", baseType: !324, size: 64, align: 64, dwarfAddressSpace: 0)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__buf", scope: !1744, file: !2, baseType: !615, size: 64, align: 64, offset: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !1744, file: !2, baseType: !304, size: 128, align: 64, offset: 128)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1744, file: !2, baseType: !1049, size: 64, align: 64, offset: 256)
!1751 = !{!1752, !1753, !1754, !1755, !1756, !1758, !1760, !1761}
!1752 = !DILocalVariable(name: "force_show_panics", scope: !1741, file: !611, line: 384, type: !324, align: 1)
!1753 = !DILocalVariable(name: "buf", scope: !1741, file: !611, line: 384, type: !285, align: 8)
!1754 = !DILocalVariable(name: "dispatch", scope: !1741, file: !611, line: 384, type: !304, align: 8)
!1755 = !DILocalVariable(name: "f", scope: !1741, file: !611, line: 382, type: !1049, align: 8)
!1756 = !DILocalVariable(name: "reader", scope: !1757, file: !611, line: 392, type: !635, align: 8)
!1757 = distinct !DILexicalBlock(scope: !1741, file: !611, line: 392, column: 9)
!1758 = !DILocalVariable(name: "globals", scope: !1759, file: !611, line: 393, type: !788, align: 4)
!1759 = distinct !DILexicalBlock(scope: !1757, file: !611, line: 393, column: 9)
!1760 = !DILocalVariable(name: "input", scope: !1759, file: !611, line: 393, type: !348, align: 4)
!1761 = !DILocalVariable(name: "new_state", scope: !1762, file: !611, line: 396, type: !989, align: 8)
!1762 = distinct !DILexicalBlock(scope: !1759, file: !611, line: 396, column: 9)
!1763 = !DILocation(line: 384, column: 50, scope: !1741)
!1764 = !DILocation(line: 384, column: 31, scope: !1741)
!1765 = !DILocation(line: 384, column: 40, scope: !1741)
!1766 = !DILocation(line: 382, column: 5, scope: !1741)
!1767 = !DILocalVariable(name: "index", scope: !1768, file: !611, line: 392, type: !505, align: 1)
!1768 = !DILexicalBlockFile(scope: !1769, file: !611, discriminator: 0)
!1769 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFull>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hc9640f19441b2f23E", scope: !1770, file: !646, line: 17, type: !1771, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1775, retainedNodes: !1773)
!1770 = !DINamespace(name: "{impl#0}", scope: !648)
!1771 = !DISubroutineType(types: !1772)
!1772 = !{!529, !529, !505, !508}
!1773 = !{!1774, !1767}
!1774 = !DILocalVariable(name: "self", scope: !1768, file: !611, line: 392, type: !529, align: 8)
!1775 = !{!55, !1776}
!1776 = !DITemplateTypeParameter(name: "I", type: !505)
!1777 = !DILocation(line: 392, column: 28, scope: !1768, inlinedAt: !1778)
!1778 = !DILocation(line: 392, column: 28, scope: !1741)
!1779 = !DILocation(line: 393, column: 14, scope: !1759)
!1780 = !DILocation(line: 393, column: 23, scope: !1759)
!1781 = !DILocation(line: 396, column: 13, scope: !1762)
!1782 = !DILocalVariable(name: "self", scope: !1783, file: !611, line: 392, type: !505, align: 1)
!1783 = !DILexicalBlockFile(scope: !1784, file: !611, discriminator: 0)
!1784 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h551c18f76d8ef7aeE", scope: !1785, file: !646, line: 432, type: !1786, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1788)
!1785 = !DINamespace(name: "{impl#6}", scope: !648)
!1786 = !DISubroutineType(types: !1787)
!1787 = !{!529, !505, !529, !508}
!1788 = !{!1782, !1789}
!1789 = !DILocalVariable(name: "slice", scope: !1783, file: !611, line: 392, type: !529, align: 8)
!1790 = !DILocation(line: 392, column: 28, scope: !1783, inlinedAt: !1791)
!1791 = !DILocation(line: 18, column: 9, scope: !1769, inlinedAt: !1778)
!1792 = !DILocation(line: 387, column: 9, scope: !1741)
!1793 = !DILocation(line: 387, column: 34, scope: !1741)
!1794 = !DILocation(line: 419, column: 5, scope: !1741)
!1795 = !DILocation(line: 390, column: 9, scope: !1741)
!1796 = !DILocalVariable(name: "self", scope: !1797, file: !611, line: 392, type: !1802, align: 8)
!1797 = !DILexicalBlockFile(scope: !1798, file: !611, discriminator: 0)
!1798 = distinct !DISubprogram(name: "deref", linkageName: "_ZN78_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$core..ops..deref..Deref$GT$5deref17h457856dfa1650ed2E", scope: !1799, file: !1328, line: 30, type: !1800, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !1803)
!1799 = !DINamespace(name: "{impl#3}", scope: !286)
!1800 = !DISubroutineType(types: !1801)
!1801 = !{!529, !1802}
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&proc_macro::bridge::buffer::Buffer", baseType: !285, size: 64, align: 64, dwarfAddressSpace: 0)
!1803 = !{!1796}
!1804 = !DILocation(line: 392, column: 28, scope: !1797, inlinedAt: !1778)
!1805 = !DILocalVariable(name: "data", scope: !1806, file: !611, line: 392, type: !52, align: 8)
!1806 = !DILexicalBlockFile(scope: !1807, file: !611, discriminator: 0)
!1807 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17h56ee2ae194163066E", scope: !540, file: !539, line: 90, type: !542, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1808)
!1808 = !{!1805, !1809, !1810}
!1809 = !DILocalVariable(name: "len", scope: !1806, file: !611, line: 392, type: !9, align: 8)
!1810 = !DILocalVariable(name: "runtime", scope: !1811, file: !611, line: 392, type: !550, align: 8)
!1811 = !DILexicalBlockFile(scope: !1812, file: !611, discriminator: 0)
!1812 = distinct !DILexicalBlock(scope: !1807, file: !549, line: 2336, column: 13)
!1813 = !DILocation(line: 392, column: 28, scope: !1806, inlinedAt: !1814)
!1814 = !DILocation(line: 31, column: 18, scope: !1798, inlinedAt: !1778)
!1815 = !DILocalVariable(name: "data", scope: !1816, file: !611, line: 392, type: !52, align: 8)
!1816 = !DILexicalBlockFile(scope: !1817, file: !611, discriminator: 0)
!1817 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h6cf0bcc2226f7384E", scope: !45, file: !562, line: 695, type: !563, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1818)
!1818 = !{!1815, !1819}
!1819 = !DILocalVariable(name: "len", scope: !1816, file: !611, line: 392, type: !9, align: 8)
!1820 = !DILocation(line: 392, column: 28, scope: !1816, inlinedAt: !1821)
!1821 = !DILocation(line: 97, column: 11, scope: !1807, inlinedAt: !1814)
!1822 = !DILocalVariable(name: "self", scope: !1823, file: !611, line: 392, type: !52, align: 8)
!1823 = !DILexicalBlockFile(scope: !1824, file: !611, discriminator: 0)
!1824 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb0bf0b669ab1d998E", scope: !577, file: !576, line: 46, type: !579, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !582, retainedNodes: !1825)
!1825 = !{!1822}
!1826 = !DILocation(line: 392, column: 28, scope: !1823, inlinedAt: !1827)
!1827 = !DILocation(line: 696, column: 20, scope: !1817, inlinedAt: !1821)
!1828 = !DILocalVariable(name: "data_address", scope: !1829, file: !611, line: 392, type: !6, align: 8)
!1829 = !DILexicalBlockFile(scope: !1830, file: !611, discriminator: 0)
!1830 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h496989047ed841a4E", scope: !590, file: !589, line: 110, type: !591, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !1831)
!1831 = !{!1828, !1832}
!1832 = !DILocalVariable(name: "metadata", scope: !1829, file: !611, line: 392, type: !9, align: 8)
!1833 = !DILocation(line: 392, column: 28, scope: !1829, inlinedAt: !1834)
!1834 = !DILocation(line: 696, column: 5, scope: !1817, inlinedAt: !1821)
!1835 = !DILocation(line: 392, column: 27, scope: !1741)
!1836 = !DILocation(line: 392, column: 22, scope: !1741)
!1837 = !DILocation(line: 392, column: 13, scope: !1757)
!1838 = !DILocation(line: 393, column: 32, scope: !1757)
!1839 = !DILocation(line: 393, column: 14, scope: !1757)
!1840 = !DILocation(line: 393, column: 23, scope: !1757)
!1841 = !DILocation(line: 397, column: 60, scope: !1759)
!1842 = !DILocalVariable(name: "self", scope: !1843, file: !611, line: 397, type: !615, align: 8)
!1843 = !DILexicalBlockFile(scope: !1844, file: !611, discriminator: 0)
!1844 = distinct !DISubprogram(name: "take", linkageName: "_ZN10proc_macro6bridge6buffer6Buffer4take17hc25bad77c7a5c746E", scope: !285, file: !1328, line: 54, type: !1403, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !1845)
!1845 = !{!1842}
!1846 = !DILocation(line: 397, column: 60, scope: !1843, inlinedAt: !1841)
!1847 = !DILocalVariable(name: "dest", scope: !1848, file: !611, line: 397, type: !615, align: 8)
!1848 = !DILexicalBlockFile(scope: !1849, file: !611, discriminator: 0)
!1849 = distinct !DISubprogram(name: "take<proc_macro::bridge::buffer::Buffer>", linkageName: "_ZN4core3mem4take17hbac851b2c93f1939E", scope: !413, file: !1128, line: 846, type: !1403, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1411, retainedNodes: !1850)
!1850 = !{!1847}
!1851 = !DILocation(line: 397, column: 60, scope: !1848, inlinedAt: !1852)
!1852 = !DILocation(line: 55, column: 9, scope: !1844, inlinedAt: !1841)
!1853 = !DILocation(line: 397, column: 60, scope: !1854, inlinedAt: !1856)
!1854 = !DILexicalBlockFile(scope: !1855, file: !611, discriminator: 0)
!1855 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17h94f1cc63c2616b42E", scope: !35, file: !525, line: 424, type: !1418, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !27)
!1856 = !DILocation(line: 44, column: 36, scope: !1857, inlinedAt: !1859)
!1857 = !DILexicalBlockFile(scope: !1858, file: !1422, discriminator: 0)
!1858 = distinct !DISubprogram(name: "default", linkageName: "_ZN77_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$core..default..Default$GT$7default17hdcc1a6b029a7393aE", scope: !1424, file: !1328, line: 22, type: !1425, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !27)
!1859 = !DILocation(line: 847, column: 19, scope: !1849, inlinedAt: !1852)
!1860 = !DILocation(line: 397, column: 60, scope: !1861, inlinedAt: !1859)
!1861 = !DILexicalBlockFile(scope: !1858, file: !611, discriminator: 0)
!1862 = !DILocation(line: 419, column: 5, scope: !1757)
!1863 = !DILocation(line: 397, column: 72, scope: !1759)
!1864 = !DILocation(line: 397, column: 82, scope: !1759)
!1865 = !DILocation(line: 397, column: 36, scope: !1759)
!1866 = !DILocation(line: 397, column: 13, scope: !1759)
!1867 = !DILocation(line: 399, column: 27, scope: !1762)
!1868 = !DILocation(line: 399, column: 9, scope: !1762)
!1869 = !DILocation(line: 386, column: 51, scope: !1741)
!1870 = !DILocation(line: 386, column: 49, scope: !1741)
!1871 = distinct !DISubprogram(name: "{closure#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>", linkageName: "_ZN10proc_macro6bridge6client10run_client28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hb080680d2449079fE", scope: !1045, file: !611, line: 399, type: !1872, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1696, retainedNodes: !1880)
!1872 = !DISubroutineType(types: !1873)
!1873 = !{null, !1874, !1042}
!1874 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>", scope: !1045, file: !2, size: 832, align: 64, elements: !1875, templateParams: !27, identifier: "b78e075087833c2b7a895cbc5997531d")
!1875 = !{!1876, !1877, !1878, !1879}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "new_state", scope: !1874, file: !2, baseType: !989, size: 640, align: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1874, file: !2, baseType: !1049, size: 64, align: 64, offset: 640)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !1874, file: !2, baseType: !348, size: 32, align: 32, offset: 768)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__buf", scope: !1874, file: !2, baseType: !615, size: 64, align: 64, offset: 704)
!1880 = !{!1881, !1882, !1883, !1884, !1885}
!1881 = !DILocalVariable(name: "state", arg: 2, scope: !1871, file: !611, line: 399, type: !1042)
!1882 = !DILocalVariable(name: "new_state", scope: !1871, file: !611, line: 396, type: !989, align: 8)
!1883 = !DILocalVariable(name: "f", scope: !1871, file: !611, line: 382, type: !1049, align: 8)
!1884 = !DILocalVariable(name: "input", scope: !1871, file: !611, line: 393, type: !348, align: 4)
!1885 = !DILocalVariable(name: "buf", scope: !1871, file: !611, line: 384, type: !285, align: 8)
!1886 = !DILocation(line: 396, column: 13, scope: !1871)
!1887 = !DILocation(line: 382, column: 5, scope: !1871)
!1888 = !DILocation(line: 393, column: 23, scope: !1871)
!1889 = !DILocation(line: 384, column: 31, scope: !1871)
!1890 = !DILocation(line: 399, column: 28, scope: !1871)
!1891 = !DILocation(line: 400, column: 23, scope: !1871)
!1892 = !DILocation(line: 400, column: 34, scope: !1871)
!1893 = !DILocation(line: 400, column: 13, scope: !1871)
!1894 = !DILocation(line: 399, column: 34, scope: !1871)
!1895 = distinct !DISubprogram(name: "{closure#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>", linkageName: "_ZN10proc_macro6bridge6client10run_client28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h2884d7662d45a5aeE", scope: !1044, file: !611, line: 400, type: !1896, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1696, retainedNodes: !1898)
!1896 = !DISubroutineType(types: !1897)
!1897 = !{null, !1043}
!1898 = !{!1899, !1900, !1901, !1902}
!1899 = !DILocalVariable(name: "f", scope: !1895, file: !611, line: 382, type: !1049, align: 8)
!1900 = !DILocalVariable(name: "input", scope: !1895, file: !611, line: 393, type: !348, align: 4)
!1901 = !DILocalVariable(name: "buf", scope: !1895, file: !611, line: 384, type: !285, align: 8)
!1902 = !DILocalVariable(name: "output", scope: !1903, file: !611, line: 401, type: !340, align: 4)
!1903 = distinct !DILexicalBlock(scope: !1895, file: !611, line: 401, column: 17)
!1904 = !DILocation(line: 382, column: 5, scope: !1895)
!1905 = !DILocation(line: 393, column: 23, scope: !1895)
!1906 = !DILocation(line: 384, column: 31, scope: !1895)
!1907 = !DILocation(line: 401, column: 21, scope: !1903)
!1908 = !DILocation(line: 401, column: 30, scope: !1895)
!1909 = !DILocation(line: 401, column: 32, scope: !1895)
!1910 = !DILocation(line: 401, column: 37, scope: !1895)
!1911 = !DILocation(line: 404, column: 23, scope: !1903)
!1912 = !DILocation(line: 417, column: 13, scope: !1895)
!1913 = !DILocation(line: 404, column: 17, scope: !1903)
!1914 = !DILocation(line: 404, column: 72, scope: !1903)
!1915 = !DILocation(line: 415, column: 17, scope: !1903)
!1916 = !DILocalVariable(name: "self", scope: !1917, file: !611, line: 415, type: !615, align: 8)
!1917 = !DILexicalBlockFile(scope: !1918, file: !611, discriminator: 0)
!1918 = distinct !DISubprogram(name: "clear", linkageName: "_ZN10proc_macro6bridge6buffer6Buffer5clear17h675adba105654680E", scope: !285, file: !1328, line: 49, type: !1731, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !1919)
!1919 = !{!1916}
!1920 = !DILocation(line: 415, column: 17, scope: !1917, inlinedAt: !1915)
!1921 = !DILocation(line: 416, column: 29, scope: !1903)
!1922 = !DILocation(line: 416, column: 17, scope: !1903)
!1923 = !DILocation(line: 416, column: 44, scope: !1903)
!1924 = !DILocation(line: 400, column: 36, scope: !1895)
!1925 = !DILocation(line: 400, column: 34, scope: !1895)
!1926 = distinct !DISubprogram(name: "{closure#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>", linkageName: "_ZN10proc_macro6bridge6client10run_client28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h534d15f39f4c9324E", scope: !1214, file: !611, line: 404, type: !1927, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1696, retainedNodes: !1930)
!1927 = !DISubroutineType(types: !1928)
!1928 = !{!285, !1213, !1929}
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut proc_macro::bridge::client::Bridge", baseType: !999, size: 64, align: 64, dwarfAddressSpace: 0)
!1930 = !{!1931, !1932}
!1931 = !DILocalVariable(name: "bridge", arg: 2, scope: !1926, file: !611, line: 404, type: !1929)
!1932 = !DILocalVariable(arg: 1, scope: !1926, file: !611, line: 404, type: !1213)
!1933 = !DILocation(line: 404, column: 36, scope: !1926)
!1934 = !DILocation(line: 404, column: 37, scope: !1926)
!1935 = !DILocation(line: 404, column: 45, scope: !1926)
!1936 = !DILocalVariable(name: "self", scope: !1937, file: !611, line: 404, type: !615, align: 8)
!1937 = !DILexicalBlockFile(scope: !1938, file: !611, discriminator: 0)
!1938 = distinct !DISubprogram(name: "take", linkageName: "_ZN10proc_macro6bridge6buffer6Buffer4take17hc25bad77c7a5c746E", scope: !285, file: !1328, line: 54, type: !1403, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !1939)
!1939 = !{!1936}
!1940 = !DILocation(line: 404, column: 45, scope: !1937, inlinedAt: !1935)
!1941 = !DILocalVariable(name: "dest", scope: !1942, file: !611, line: 404, type: !615, align: 8)
!1942 = !DILexicalBlockFile(scope: !1943, file: !611, discriminator: 0)
!1943 = distinct !DISubprogram(name: "take<proc_macro::bridge::buffer::Buffer>", linkageName: "_ZN4core3mem4take17hbac851b2c93f1939E", scope: !413, file: !1128, line: 846, type: !1403, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1411, retainedNodes: !1944)
!1944 = !{!1941}
!1945 = !DILocation(line: 404, column: 45, scope: !1942, inlinedAt: !1946)
!1946 = !DILocation(line: 55, column: 9, scope: !1938, inlinedAt: !1935)
!1947 = !DILocation(line: 404, column: 45, scope: !1948, inlinedAt: !1950)
!1948 = !DILexicalBlockFile(scope: !1949, file: !611, discriminator: 0)
!1949 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17h94f1cc63c2616b42E", scope: !35, file: !525, line: 424, type: !1418, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !27)
!1950 = !DILocation(line: 44, column: 36, scope: !1951, inlinedAt: !1953)
!1951 = !DILexicalBlockFile(scope: !1952, file: !1422, discriminator: 0)
!1952 = distinct !DISubprogram(name: "default", linkageName: "_ZN77_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$core..default..Default$GT$7default17hdcc1a6b029a7393aE", scope: !1424, file: !1328, line: 22, type: !1425, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !27)
!1953 = !DILocation(line: 847, column: 19, scope: !1943, inlinedAt: !1946)
!1954 = !DILocation(line: 404, column: 45, scope: !1955, inlinedAt: !1953)
!1955 = !DILexicalBlockFile(scope: !1952, file: !611, discriminator: 0)
!1956 = !DILocation(line: 404, column: 44, scope: !1926)
!1957 = distinct !DISubprogram(name: "with<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::{impl#8}::with::{closure_env#0}<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::run_client::{closure#0}::{closure#0}::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>", linkageName: "_ZN10proc_macro6bridge6client11BridgeState4with17h3dcb91e7dbd02b8fE", scope: !989, file: !611, line: 299, type: !1958, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1962, retainedNodes: !1960)
!1958 = !DISubroutineType(types: !1959)
!1959 = !{!285, !1208}
!1960 = !{!1961}
!1961 = !DILocalVariable(name: "f", arg: 1, scope: !1957, file: !611, line: 299, type: !1208)
!1962 = !{!322, !1963}
!1963 = !DITemplateTypeParameter(name: "impl FnOnce(&mut BridgeState<'_>) -> R", type: !1208)
!1964 = !DILocation(line: 299, column: 16, scope: !1957)
!1965 = !DILocation(line: 300, column: 27, scope: !1957)
!1966 = !DILocation(line: 300, column: 9, scope: !1957)
!1967 = !DILocation(line: 306, column: 6, scope: !1957)
!1968 = distinct !DISubprogram(name: "{closure#0}<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::{impl#8}::with::{closure_env#0}<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::run_client::{closure#0}::{closure#0}::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>", linkageName: "_ZN10proc_macro6bridge6client11BridgeState4with28_$u7b$$u7b$closure$u7d$$u7d$17hfd48522897f9ccadE", scope: !1204, file: !611, line: 300, type: !1969, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1962, retainedNodes: !1974)
!1969 = !DISubroutineType(types: !1970)
!1970 = !{!285, !1971, !1042}
!1971 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::{impl#8}::with::{closure_env#0}<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::run_client::{closure#0}::{closure#0}::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>", scope: !1204, file: !2, align: 8, elements: !1972, templateParams: !27, identifier: "7c4eed4f087a8f991d3a24c02b931e14")
!1972 = !{!1973}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1971, file: !2, baseType: !1208, align: 8)
!1974 = !{!1975, !1976}
!1975 = !DILocalVariable(name: "state", arg: 2, scope: !1968, file: !611, line: 300, type: !1042)
!1976 = !DILocalVariable(name: "f", scope: !1968, file: !611, line: 299, type: !1208, align: 1)
!1977 = !DILocation(line: 299, column: 16, scope: !1968)
!1978 = !DILocation(line: 300, column: 28, scope: !1968)
!1979 = !DILocation(line: 301, column: 27, scope: !1968)
!1980 = !DILocation(line: 301, column: 47, scope: !1968)
!1981 = !DILocation(line: 301, column: 13, scope: !1968)
!1982 = !DILocation(line: 300, column: 34, scope: !1968)
!1983 = distinct !DISubprogram(name: "{closure#0}<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::{impl#8}::with::{closure_env#0}<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::run_client::{closure#0}::{closure#0}::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>", linkageName: "_ZN10proc_macro6bridge6client11BridgeState4with28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hc8c1d915ee284f69E", scope: !1203, file: !611, line: 301, type: !1984, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1962, retainedNodes: !1986)
!1984 = !DISubroutineType(types: !1985)
!1985 = !{!285, !1202, !1080}
!1986 = !{!1987, !1988}
!1987 = !DILocalVariable(name: "state", arg: 2, scope: !1983, file: !611, line: 301, type: !1080)
!1988 = !DILocalVariable(name: "f", scope: !1983, file: !611, line: 299, type: !1208, align: 1)
!1989 = !DILocation(line: 299, column: 16, scope: !1983)
!1990 = !DILocation(line: 301, column: 48, scope: !1983)
!1991 = !DILocation(line: 303, column: 17, scope: !1983)
!1992 = !DILocation(line: 303, column: 24, scope: !1983)
!1993 = !DILocation(line: 303, column: 30, scope: !1983)
!1994 = !DILocation(line: 301, column: 58, scope: !1983)
!1995 = !DILocation(line: 301, column: 47, scope: !1983)
!1996 = distinct !DISubprogram(name: "__getit", linkageName: "_ZN10proc_macro6bridge6client12BRIDGE_STATE7__getit17hcbe55ff2dc409fbfE", scope: !1998, file: !1997, line: 318, type: !1999, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !2041)
!1997 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/thread/local.rs", directory: "", checksumkind: CSK_MD5, checksum: "09a480d3ff99b6a06356d8c51c76c786")
!1998 = !DINamespace(name: "BRIDGE_STATE", scope: !239)
!1999 = !DISubroutineType(types: !2000)
!2000 = !{!2001, !2014}
!2001 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", scope: !20, file: !2, size: 64, align: 64, elements: !2002, templateParams: !27, identifier: "2e6c81ef4e3c6aba36015cf37e299fc9")
!2002 = !{!2003}
!2003 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2001, file: !2, size: 64, align: 64, elements: !2004, templateParams: !27, identifier: "fd0b232734a1af0fae23898649465c38", discriminator: !2013)
!2004 = !{!2005, !2009}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2003, file: !2, baseType: !2006, size: 64, align: 64, extraData: i64 0)
!2006 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2001, file: !2, size: 64, align: 64, elements: !27, templateParams: !2007, identifier: "f9e957fece1d7598c72ab5509828c5b6")
!2007 = !{!2008}
!2008 = !DITemplateTypeParameter(name: "T", type: !1042)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2003, file: !2, baseType: !2010, size: 64, align: 64)
!2010 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2001, file: !2, size: 64, align: 64, elements: !2011, templateParams: !2007, identifier: "9478aacaa0b86b4bc44035bc53e2a4e0")
!2011 = !{!2012}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2010, file: !2, baseType: !1042, size: 64, align: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, scope: !2001, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!2014 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&mut core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", scope: !20, file: !2, size: 64, align: 64, elements: !2015, templateParams: !27, identifier: "c80e405e9ab96108fc78339fe420fca1")
!2015 = !{!2016}
!2016 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2014, file: !2, size: 64, align: 64, elements: !2017, templateParams: !27, identifier: "5a2e4773674e4ed4eed3115b43b0c2f", discriminator: !2040)
!2017 = !{!2018, !2036}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2016, file: !2, baseType: !2019, size: 64, align: 64, extraData: i64 0)
!2019 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2014, file: !2, size: 64, align: 64, elements: !27, templateParams: !2020, identifier: "8e9db16721d239871e4fecdc2f60d2c0")
!2020 = !{!2021}
!2021 = !DITemplateTypeParameter(name: "T", type: !2022)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", baseType: !2023, size: 64, align: 64, dwarfAddressSpace: 0)
!2023 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", scope: !20, file: !2, size: 704, align: 64, elements: !2024, templateParams: !27, identifier: "eee2c7c8c7dfba2cdf745ca58ea0edc2")
!2024 = !{!2025}
!2025 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2023, file: !2, size: 704, align: 64, elements: !2026, templateParams: !27, identifier: "7db53445457bfbd7acab72e709c74366", discriminator: !2035)
!2026 = !{!2027, !2031}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2025, file: !2, baseType: !2028, size: 704, align: 64, extraData: i64 0)
!2028 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2023, file: !2, size: 704, align: 64, elements: !27, templateParams: !2029, identifier: "6dbe20fc751ec89199a096590c365aa7")
!2029 = !{!2030}
!2030 = !DITemplateTypeParameter(name: "T", type: !979)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2025, file: !2, baseType: !2032, size: 704, align: 64, extraData: i64 1)
!2032 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2023, file: !2, size: 704, align: 64, elements: !2033, templateParams: !2029, identifier: "ddff187e54dbdbb07982c4811d5323be")
!2033 = !{!2034}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2032, file: !2, baseType: !979, size: 640, align: 64, offset: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, scope: !2023, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2016, file: !2, baseType: !2037, size: 64, align: 64)
!2037 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2014, file: !2, size: 64, align: 64, elements: !2038, templateParams: !2020, identifier: "2f76933c1731c6b8d1f8a3186f57d52")
!2038 = !{!2039}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2037, file: !2, baseType: !2022, size: 64, align: 64)
!2040 = !DIDerivedType(tag: DW_TAG_member, scope: !2014, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!2041 = !{!2042}
!2042 = !DILocalVariable(name: "init", arg: 1, scope: !1996, file: !1997, line: 319, type: !2014)
!2043 = !DILocation(line: 319, column: 17, scope: !1996)
!2044 = !DILocation(line: 345, column: 31, scope: !1996)
!2045 = !DILocation(line: 345, column: 21, scope: !1996)
!2046 = !DILocation(line: 356, column: 14, scope: !1996)
!2047 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10proc_macro6bridge6client12BRIDGE_STATE7__getit28_$u7b$$u7b$closure$u7d$$u7d$17h88635db59fb9f3bbE", scope: !2048, file: !1997, line: 345, type: !2049, scopeLine: 345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !2054)
!2048 = !DINamespace(name: "__getit", scope: !1998)
!2049 = !DISubroutineType(types: !2050)
!2050 = !{!979, !2051}
!2051 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !2048, file: !2, size: 64, align: 64, elements: !2052, templateParams: !27, identifier: "d58aa8b91cf7efa6ece17a1bdc55aaac")
!2052 = !{!2053}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2051, file: !2, baseType: !2014, size: 64, align: 64)
!2054 = !{!2055, !2056, !2058}
!2055 = !DILocalVariable(name: "init", scope: !2047, file: !1997, line: 319, type: !2014, align: 8)
!2056 = !DILocalVariable(name: "init", scope: !2057, file: !1997, line: 346, type: !2022, align: 8)
!2057 = distinct !DILexicalBlock(scope: !2047, file: !1997, line: 346, column: 74)
!2058 = !DILocalVariable(name: "value", scope: !2059, file: !1997, line: 347, type: !979, align: 8)
!2059 = distinct !DILexicalBlock(scope: !2057, file: !1997, line: 347, column: 86)
!2060 = !DILocation(line: 319, column: 17, scope: !2047)
!2061 = !DILocation(line: 347, column: 65, scope: !2059)
!2062 = !DILocation(line: 346, column: 32, scope: !2057)
!2063 = !DILocation(line: 346, column: 61, scope: !2057)
!2064 = !DILocation(line: 347, column: 74, scope: !2059)
!2065 = !DILocalVariable(name: "self", scope: !2066, file: !1997, line: 347, type: !2022, align: 8)
!2066 = !DILexicalBlockFile(scope: !2067, file: !1997, discriminator: 0)
!2067 = distinct !DISubprogram(name: "take<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17h62175e7635208b0fE", scope: !2023, file: !1137, line: 1574, type: !2068, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2029, retainedNodes: !2070)
!2068 = !DISubroutineType(types: !2069)
!2069 = !{!2023, !2022}
!2070 = !{!2065}
!2071 = !DILocation(line: 347, column: 74, scope: !2066, inlinedAt: !2064)
!2072 = !DILocation(line: 353, column: 25, scope: !2073, inlinedAt: !2076)
!2073 = distinct !DISubprogram(name: "__init", linkageName: "_ZN10proc_macro6bridge6client12BRIDGE_STATE6__init17h01112383314fe597E", scope: !1998, file: !1997, line: 293, type: !2074, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !27)
!2074 = !DISubroutineType(types: !2075)
!2075 = !{!979}
!2076 = !DILocation(line: 353, column: 25, scope: !2047)
!2077 = !DILocation(line: 347, column: 36, scope: !2059)
!2078 = !{i64 0, i64 2}
!2079 = !DILocation(line: 348, column: 40, scope: !2059)
!2080 = !DILocation(line: 345, column: 38, scope: !2047)
!2081 = !DILocation(line: 352, column: 25, scope: !2057)
!2082 = !DILocation(line: 346, column: 25, scope: !2047)
!2083 = !DILocation(line: 293, column: 40, scope: !2047)
!2084 = distinct !DISubprogram(name: "{closure#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>", linkageName: "_ZN10proc_macro6bridge6client63Client$LT$proc_macro..TokenStream$C$proc_macro..TokenStream$GT$7expand128_$u7b$$u7b$closure$u7d$$u7d$17h67025ea0df26fe70E", scope: !1051, file: !611, line: 436, type: !2085, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2091, retainedNodes: !2088)
!2085 = !DISubroutineType(types: !2086)
!2086 = !{!285, !2087, !300}
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&proc_macro::bridge::client::{impl#11}::expand1::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>", baseType: !1282, size: 64, align: 64, dwarfAddressSpace: 0)
!2088 = !{!2089, !2090}
!2089 = !DILocalVariable(name: "bridge", arg: 2, scope: !2084, file: !611, line: 436, type: !300)
!2090 = !DILocalVariable(name: "f", scope: !2084, file: !611, line: 433, type: !334, align: 1)
!2091 = !{!2092}
!2092 = !DITemplateTypeParameter(name: "impl Fn(crate::TokenStream) -> crate::TokenStream + Copy", type: !334)
!2093 = !DILocation(line: 433, column: 26, scope: !2084)
!2094 = !DILocation(line: 436, column: 79, scope: !2084)
!2095 = !DILocation(line: 437, column: 28, scope: !2084)
!2096 = !DILocation(line: 437, column: 36, scope: !2084)
!2097 = !DILocation(line: 437, column: 17, scope: !2084)
!2098 = !DILocation(line: 436, column: 86, scope: !2084)
!2099 = distinct !DISubprogram(name: "{closure#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>", linkageName: "_ZN10proc_macro6bridge6client63Client$LT$proc_macro..TokenStream$C$proc_macro..TokenStream$GT$7expand128_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h12dd0c2eeb73f56dE", scope: !1050, file: !611, line: 437, type: !2100, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2091, retainedNodes: !2102)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{!340, !1049, !348}
!2102 = !{!2103, !2104}
!2103 = !DILocalVariable(name: "input", arg: 2, scope: !2099, file: !611, line: 437, type: !348)
!2104 = !DILocalVariable(name: "f", scope: !2099, file: !611, line: 433, type: !334, align: 1)
!2105 = !DILocation(line: 433, column: 26, scope: !2099)
!2106 = !DILocation(line: 437, column: 37, scope: !2099)
!2107 = !DILocation(line: 437, column: 44, scope: !2099)
!2108 = !DILocation(line: 437, column: 65, scope: !2099)
!2109 = !DILocation(line: 437, column: 46, scope: !2099)
!2110 = !DILocation(line: 437, column: 43, scope: !2099)
!2111 = distinct !DISubprogram(name: "with<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::run_client::{closure#0}::{closure#0}::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>", linkageName: "_ZN10proc_macro6bridge6client6Bridge4with17h422274e9a3f3c3feE", scope: !999, file: !611, line: 310, type: !2112, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2116, retainedNodes: !2114)
!2112 = !DISubroutineType(types: !2113)
!2113 = !{!285, !1213}
!2114 = !{!2115}
!2115 = !DILocalVariable(name: "f", arg: 1, scope: !2111, file: !611, line: 310, type: !1213)
!2116 = !{!322, !2117}
!2117 = !DITemplateTypeParameter(name: "impl FnOnce(&mut Bridge<'_>) -> R", type: !1213)
!2118 = !DILocation(line: 310, column: 16, scope: !2111)
!2119 = !DILocation(line: 311, column: 27, scope: !2111)
!2120 = !DILocation(line: 311, column: 9, scope: !2111)
!2121 = !DILocation(line: 320, column: 6, scope: !2111)
!2122 = distinct !DISubprogram(name: "{closure#0}<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::run_client::{closure#0}::{closure#0}::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>", linkageName: "_ZN10proc_macro6bridge6client6Bridge4with28_$u7b$$u7b$closure$u7d$$u7d$17h93f2913f9087a582E", scope: !1209, file: !611, line: 311, type: !2123, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2116, retainedNodes: !2125)
!2123 = !DISubroutineType(types: !2124)
!2124 = !{!285, !1208, !1083}
!2125 = !{!2126, !2127, !2128}
!2126 = !DILocalVariable(name: "state", arg: 2, scope: !2122, file: !611, line: 311, type: !1083)
!2127 = !DILocalVariable(name: "f", scope: !2122, file: !611, line: 310, type: !1213, align: 1)
!2128 = !DILocalVariable(name: "bridge", scope: !2129, file: !611, line: 318, type: !1929, align: 8)
!2129 = distinct !DILexicalBlock(scope: !2122, file: !611, line: 318, column: 13)
!2130 = !DILocation(line: 310, column: 16, scope: !2122)
!2131 = !DILocation(line: 311, column: 28, scope: !2122)
!2132 = !DILocation(line: 311, column: 41, scope: !2122)
!2133 = !{i64 0, i64 3}
!2134 = !DILocation(line: 311, column: 35, scope: !2122)
!2135 = !DILocation(line: 313, column: 17, scope: !2122)
!2136 = !DILocation(line: 318, column: 36, scope: !2122)
!2137 = !DILocation(line: 318, column: 36, scope: !2129)
!2138 = !DILocation(line: 318, column: 47, scope: !2129)
!2139 = !DILocation(line: 316, column: 17, scope: !2122)
!2140 = !DILocation(line: 319, column: 9, scope: !2122)
!2141 = !DILocation(line: 311, column: 34, scope: !2122)
!2142 = !DILocation(line: 311, column: 27, scope: !2122)
!2143 = distinct !DISubprogram(name: "call_once<(), proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>", linkageName: "_ZN115_$LT$core..panic..unwind_safe..AssertUnwindSafe$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$$LP$$RP$$GT$$GT$9call_once17h0f824571ee362855E", scope: !2145, file: !2144, line: 270, type: !2147, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2157, retainedNodes: !2154)
!2144 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/panic/unwind_safe.rs", directory: "", checksumkind: CSK_MD5, checksum: "f6e32efdfaa89203cd1fd8ae6c2473fd")
!2145 = !DINamespace(name: "{impl#23}", scope: !2146)
!2146 = !DINamespace(name: "unwind_safe", scope: !511)
!2147 = !DISubroutineType(types: !2148)
!2148 = !{null, !2149}
!2149 = !DICompositeType(tag: DW_TAG_structure_type, name: "AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>", scope: !2146, file: !2, size: 320, align: 64, elements: !2150, templateParams: !2152, identifier: "e8cc4ccbd8448b683361c1641d73cd41")
!2150 = !{!2151}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2149, file: !2, baseType: !1744, size: 320, align: 64)
!2152 = !{!2153}
!2153 = !DITemplateTypeParameter(name: "T", type: !1744)
!2154 = !{!2155, !2156}
!2155 = !DILocalVariable(name: "self", arg: 1, scope: !2143, file: !2144, line: 270, type: !2149)
!2156 = !DILocalVariable(name: "_args", arg: 2, scope: !2143, file: !2144, line: 270, type: !7)
!2157 = !{!1063, !2158}
!2158 = !DITemplateTypeParameter(name: "F", type: !1744)
!2159 = !DILocation(line: 270, column: 37, scope: !2143)
!2160 = !DILocation(line: 270, column: 43, scope: !2143)
!2161 = !DILocation(line: 271, column: 9, scope: !2143)
!2162 = !DILocation(line: 272, column: 6, scope: !2143)
!2163 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h4602960108bdc8f3E", scope: !2165, file: !2164, line: 116, type: !2167, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !2193)
!2164 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/collections/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "9cfb71cd3b32f7eb830f45a756b00675")
!2165 = !DINamespace(name: "{impl#1}", scope: !2166)
!2166 = !DINamespace(name: "collections", scope: !32)
!2167 = !DISubroutineType(types: !2168)
!2168 = !{!2169, !2172}
!2169 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveError", scope: !2166, file: !2, size: 128, align: 64, elements: !2170, templateParams: !27, identifier: "9329beb58cfce2a468bff9d53d352901")
!2170 = !{!2171}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !2169, file: !2, baseType: !2172, size: 128, align: 64)
!2172 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveErrorKind", scope: !2166, file: !2, size: 128, align: 64, elements: !2173, templateParams: !27, identifier: "b80f03a2018170445eea4dcb9e8ba251")
!2173 = !{!2174}
!2174 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2172, file: !2, size: 128, align: 64, elements: !2175, templateParams: !27, identifier: "dd437972ee979c0cb5a8f1e81729b7e4", discriminator: !2192)
!2175 = !{!2176, !2178}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "CapacityOverflow", scope: !2174, file: !2, baseType: !2177, size: 128, align: 64, extraData: i64 0)
!2177 = !DICompositeType(tag: DW_TAG_structure_type, name: "CapacityOverflow", scope: !2172, file: !2, size: 128, align: 64, elements: !27, identifier: "9b997f4b8909a73a8576324b89f9b258")
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "AllocError", scope: !2174, file: !2, baseType: !2179, size: 128, align: 64)
!2179 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !2172, file: !2, size: 128, align: 64, elements: !2180, templateParams: !27, identifier: "43ad075de287371ebe4e53de3e5ecf3d")
!2180 = !{!2181, !2191}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !2179, file: !2, baseType: !2182, size: 128, align: 64)
!2182 = !DICompositeType(tag: DW_TAG_structure_type, name: "Layout", scope: !2183, file: !2, size: 128, align: 64, elements: !2185, templateParams: !27, identifier: "6727bf1318ffccbbbfc5e6dc0dfc8722")
!2183 = !DINamespace(name: "layout", scope: !2184)
!2184 = !DINamespace(name: "alloc", scope: !21)
!2185 = !{!2186, !2187}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2182, file: !2, baseType: !9, size: 64, align: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2182, file: !2, baseType: !2188, size: 64, align: 64, offset: 64)
!2188 = !DICompositeType(tag: DW_TAG_structure_type, name: "ValidAlign", scope: !412, file: !2, size: 64, align: 64, elements: !2189, templateParams: !27, identifier: "e392ecbcb8f7df9e6beb2b20857b4b5a")
!2189 = !{!2190}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2188, file: !2, baseType: !411, size: 64, align: 64)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "non_exhaustive", scope: !2179, file: !2, baseType: !7, align: 8)
!2192 = !DIDerivedType(tag: DW_TAG_member, scope: !2172, file: !2, baseType: !71, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!2193 = !{!2194}
!2194 = !DILocalVariable(name: "kind", arg: 1, scope: !2163, file: !2164, line: 116, type: !2172)
!2195 = !DILocation(line: 116, column: 13, scope: !2163)
!2196 = !DILocation(line: 117, column: 9, scope: !2163)
!2197 = !DILocation(line: 118, column: 6, scope: !2163)
!2198 = !{i64 0, i64 -9223372036854775807}
!2199 = distinct !DISubprogram(name: "drop<proc_macro::bridge::client::BridgeStateL>", linkageName: "_ZN127_$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$T$GT$..replace..PutBackOnDrop$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb7b021722ea6eeaeE", scope: !2200, file: !978, line: 60, type: !2201, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1009, retainedNodes: !2204)
!2200 = !DINamespace(name: "{impl#0}", scope: !1101)
!2201 = !DISubroutineType(types: !2202)
!2202 = !{null, !2203}
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut proc_macro::bridge::scoped_cell::{impl#3}::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>", baseType: !1100, size: 64, align: 64, dwarfAddressSpace: 0)
!2204 = !{!2205}
!2205 = !DILocalVariable(name: "self", arg: 1, scope: !2199, file: !978, line: 60, type: !2203)
!2206 = !DILocation(line: 60, column: 21, scope: !2199)
!2207 = !DILocalVariable(name: "val", scope: !2208, file: !978, line: 61, type: !989, align: 8)
!2208 = !DILexicalBlockFile(scope: !2209, file: !978, discriminator: 0)
!2209 = distinct !DILexicalBlock(scope: !2210, file: !1137, line: 774, column: 13)
!2210 = distinct !DISubprogram(name: "unwrap<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17hfde968a162685538E", scope: !1105, file: !1137, line: 772, type: !2211, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !2213)
!2211 = !DISubroutineType(types: !2212)
!2212 = !{!989, !1105, !508}
!2213 = !{!2214, !2207}
!2214 = !DILocalVariable(name: "self", scope: !2215, file: !978, line: 61, type: !1105, align: 8)
!2215 = !DILexicalBlockFile(scope: !2210, file: !978, discriminator: 0)
!2216 = !DILocation(line: 61, column: 33, scope: !2208, inlinedAt: !2217)
!2217 = !DILocation(line: 61, column: 33, scope: !2199)
!2218 = !DILocalVariable(name: "val", scope: !2219, file: !978, line: 61, type: !989, align: 8)
!2219 = !DILexicalBlockFile(scope: !2220, file: !978, discriminator: 0)
!2220 = distinct !DISubprogram(name: "set<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core4cell13Cell$LT$T$GT$3set17h29c0716de85cef01E", scope: !983, file: !1022, line: 362, type: !2221, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !2224)
!2221 = !DISubroutineType(types: !2222)
!2222 = !{null, !2223, !989}
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::cell::Cell<proc_macro::bridge::client::BridgeState>", baseType: !983, size: 64, align: 64, dwarfAddressSpace: 0)
!2224 = !{!2225, !2218, !2226}
!2225 = !DILocalVariable(name: "self", scope: !2219, file: !978, line: 61, type: !2223, align: 8)
!2226 = !DILocalVariable(name: "old", scope: !2227, file: !978, line: 61, type: !989, align: 8)
!2227 = !DILexicalBlockFile(scope: !2228, file: !978, discriminator: 0)
!2228 = distinct !DILexicalBlock(scope: !2220, file: !1022, line: 363, column: 9)
!2229 = !DILocation(line: 61, column: 17, scope: !2219, inlinedAt: !2230)
!2230 = !DILocation(line: 61, column: 17, scope: !2199)
!2231 = !DILocation(line: 61, column: 33, scope: !2215, inlinedAt: !2217)
!2232 = !DILocation(line: 61, column: 17, scope: !2227, inlinedAt: !2230)
!2233 = !DILocalVariable(name: "_x", scope: !2234, file: !978, line: 61, type: !989, align: 8)
!2234 = !DILexicalBlockFile(scope: !2235, file: !978, discriminator: 0)
!2235 = distinct !DISubprogram(name: "drop<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem4drop17h22aa177fd69fccc5E", scope: !413, file: !1128, line: 988, type: !1129, scopeLine: 988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !2236)
!2236 = !{!2233}
!2237 = !DILocation(line: 61, column: 17, scope: !2234, inlinedAt: !2238)
!2238 = !DILocation(line: 364, column: 9, scope: !2228, inlinedAt: !2230)
!2239 = !DILocalVariable(name: "self", scope: !2240, file: !978, line: 61, type: !1186, align: 8)
!2240 = !DILexicalBlockFile(scope: !2241, file: !978, discriminator: 0)
!2241 = distinct !DISubprogram(name: "take<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17h11ba3470ffecd327E", scope: !1105, file: !1137, line: 1574, type: !2242, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !2244)
!2242 = !DISubroutineType(types: !2243)
!2243 = !{!1105, !1186}
!2244 = !{!2239}
!2245 = !DILocation(line: 61, column: 33, scope: !2240, inlinedAt: !2217)
!2246 = !DILocation(line: 62, column: 14, scope: !2199)
!2247 = distinct !DISubprogram(name: "spec_extend<u8, alloc::alloc::Global>", linkageName: "_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17hafc0c5ca4454b3a5E", scope: !2249, file: !2248, line: 83, type: !2251, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !63, retainedNodes: !2263)
!2248 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/spec_extend.rs", directory: "", checksumkind: CSK_MD5, checksum: "f621a160b67dfe2bb567901fc380da7e")
!2249 = !DINamespace(name: "{impl#4}", scope: !2250)
!2250 = !DINamespace(name: "spec_extend", scope: !36)
!2251 = !DISubroutineType(types: !2252)
!2252 = !{null, !2253, !2254}
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !35, size: 64, align: 64, dwarfAddressSpace: 0)
!2254 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<u8>", scope: !2255, file: !2, size: 128, align: 64, elements: !2256, templateParams: !54, identifier: "604c1441eac6ad793aa852936f7a8030")
!2255 = !DINamespace(name: "iter", scope: !541)
!2256 = !{!2257, !2258, !2259}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2254, file: !2, baseType: !48, size: 64, align: 64)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2254, file: !2, baseType: !52, size: 64, align: 64, offset: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !2254, file: !2, baseType: !2260, align: 8)
!2260 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&u8>", scope: !58, file: !2, align: 8, elements: !27, templateParams: !2261, identifier: "4e2102ee614de7ec94ba265c486b9c89")
!2261 = !{!2262}
!2262 = !DITemplateTypeParameter(name: "T", type: !82)
!2263 = !{!2264, !2265, !2266}
!2264 = !DILocalVariable(name: "self", arg: 1, scope: !2247, file: !2248, line: 83, type: !2253)
!2265 = !DILocalVariable(name: "iterator", arg: 2, scope: !2247, file: !2248, line: 83, type: !2254)
!2266 = !DILocalVariable(name: "slice", scope: !2267, file: !2248, line: 84, type: !529, align: 8)
!2267 = distinct !DILexicalBlock(scope: !2247, file: !2248, line: 84, column: 9)
!2268 = !DILocation(line: 83, column: 20, scope: !2247)
!2269 = !DILocation(line: 83, column: 31, scope: !2247)
!2270 = !DILocation(line: 84, column: 21, scope: !2247)
!2271 = !DILocation(line: 84, column: 13, scope: !2267)
!2272 = !DILocation(line: 85, column: 18, scope: !2267)
!2273 = !DILocation(line: 86, column: 6, scope: !2247)
!2274 = distinct !DISubprogram(name: "parse<&str>", linkageName: "_ZN13f128_internal6f128_t4f1285parse17hf25b7b511a1394fcE", scope: !2276, file: !2275, line: 230, type: !2284, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !820, retainedNodes: !2308)
!2275 = !DIFile(filename: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/f128_internal-0.2.2/src/f128_t.rs", directory: "", checksumkind: CSK_MD5, checksum: "eec7f5b35a3217960a2aa39a9f68e650")
!2276 = !DICompositeType(tag: DW_TAG_structure_type, name: "f128", scope: !2277, file: !2, size: 128, align: 8, elements: !2279, templateParams: !27, identifier: "28631f457d6ea86b5cdf0afd2e10880f")
!2277 = !DINamespace(name: "f128_t", scope: !2278)
!2278 = !DINamespace(name: "f128_internal", scope: null)
!2279 = !{!2280}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2276, file: !2, baseType: !2281, size: 128, align: 8)
!2281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 128, align: 8, elements: !2282)
!2282 = !{!2283}
!2283 = !DISubrange(count: 16, lowerBound: 0)
!2284 = !DISubroutineType(types: !2285)
!2285 = !{!2286, !202}
!2286 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>", scope: !877, file: !2, size: 320, align: 64, elements: !2287, templateParams: !27, identifier: "7c4aebd8bb1d9e166dfc3e2b7848ab33")
!2287 = !{!2288}
!2288 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2286, file: !2, size: 320, align: 64, elements: !2289, templateParams: !27, identifier: "5c3ee299164a888b78eafd8cd9b96aa6", discriminator: !2307)
!2289 = !{!2290, !2303}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2288, file: !2, baseType: !2291, size: 320, align: 64, extraData: i64 0)
!2291 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2286, file: !2, size: 320, align: 64, elements: !2292, templateParams: !2294, identifier: "36c9576e544bbd9074164b00d475cff1")
!2292 = !{!2293}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2291, file: !2, baseType: !2276, size: 128, align: 8, offset: 8)
!2294 = !{!2295, !2296}
!2295 = !DITemplateTypeParameter(name: "T", type: !2276)
!2296 = !DITemplateTypeParameter(name: "E", type: !2297)
!2297 = !DICompositeType(tag: DW_TAG_structure_type, name: "NulError", scope: !2298, file: !2, size: 256, align: 64, elements: !2300, templateParams: !27, identifier: "f0b155880f0e8602fd0be3023df941a4")
!2298 = !DINamespace(name: "c_str", scope: !2299)
!2299 = !DINamespace(name: "ffi", scope: !32)
!2300 = !{!2301, !2302}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2297, file: !2, baseType: !9, size: 64, align: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !2297, file: !2, baseType: !35, size: 192, align: 64, offset: 64)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2288, file: !2, baseType: !2304, size: 320, align: 64, extraData: i64 1)
!2304 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2286, file: !2, size: 320, align: 64, elements: !2305, templateParams: !2294, identifier: "ca221f5ed0e1a47421acb5b74549a64e")
!2305 = !{!2306}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2304, file: !2, baseType: !2297, size: 256, align: 64, offset: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, scope: !2286, file: !2, baseType: !53, size: 8, align: 8, flags: DIFlagArtificial)
!2308 = !{!2309, !2310, !2319, !2339}
!2309 = !DILocalVariable(name: "s", arg: 1, scope: !2274, file: !2275, line: 230, type: !202)
!2310 = !DILocalVariable(name: "cstr", scope: !2311, file: !2275, line: 231, type: !2312, align: 8)
!2311 = distinct !DILexicalBlock(scope: !2274, file: !2275, line: 231, column: 9)
!2312 = !DICompositeType(tag: DW_TAG_structure_type, name: "CString", scope: !2298, file: !2, size: 128, align: 64, elements: !2313, templateParams: !27, identifier: "a4dcbb113228472ac833458ca2f5ee8d")
!2313 = !{!2314}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !2312, file: !2, baseType: !2315, size: 128, align: 64)
!2315 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<[u8], alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !2316, templateParams: !27, identifier: "e783b0825321c11fc908377d145707b4")
!2316 = !{!2317, !2318}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2315, file: !2, baseType: !205, size: 64, align: 64)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2315, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2319 = !DILocalVariable(name: "residual", scope: !2320, file: !2275, line: 231, type: !2321, align: 8)
!2320 = distinct !DILexicalBlock(scope: !2274, file: !2275, line: 231, column: 44)
!2321 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::ffi::c_str::NulError>", scope: !877, file: !2, size: 256, align: 64, elements: !2322, templateParams: !27, identifier: "cf238678704d7f5154dbd9fcead3eaba")
!2322 = !{!2323}
!2323 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2321, file: !2, size: 256, align: 64, elements: !2324, templateParams: !27, identifier: "3480b24a8a41e679665d486dc29ffa0a")
!2324 = !{!2325, !2335}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2323, file: !2, baseType: !2326, size: 256, align: 64)
!2326 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2321, file: !2, size: 256, align: 64, elements: !2327, templateParams: !2333, identifier: "79e596b36fe820ad8839085a220119fa")
!2327 = !{!2328}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2326, file: !2, baseType: !2329, align: 8)
!2329 = !DICompositeType(tag: DW_TAG_structure_type, name: "Infallible", scope: !2330, file: !2, align: 8, elements: !2331, templateParams: !27, identifier: "54da939063c7c2baf203c9f582cd0995")
!2330 = !DINamespace(name: "convert", scope: !21)
!2331 = !{!2332}
!2332 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2329, file: !2, align: 8, elements: !27, identifier: "8a046f69014feadb4a5e941e4277afe9")
!2333 = !{!2334, !2296}
!2334 = !DITemplateTypeParameter(name: "T", type: !2329)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2323, file: !2, baseType: !2336, size: 256, align: 64)
!2336 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2321, file: !2, size: 256, align: 64, elements: !2337, templateParams: !2333, identifier: "975fce146da8c155dc711afa7553e01")
!2337 = !{!2338}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2336, file: !2, baseType: !2297, size: 256, align: 64)
!2339 = !DILocalVariable(name: "val", scope: !2340, file: !2275, line: 231, type: !2312, align: 8)
!2340 = distinct !DILexicalBlock(scope: !2274, file: !2275, line: 231, column: 20)
!2341 = !DILocation(line: 230, column: 33, scope: !2274)
!2342 = !DILocation(line: 231, column: 13, scope: !2311)
!2343 = !DILocation(line: 231, column: 44, scope: !2320)
!2344 = !DILocation(line: 231, column: 33, scope: !2274)
!2345 = !DILocation(line: 234, column: 5, scope: !2274)
!2346 = !DILocation(line: 231, column: 20, scope: !2274)
!2347 = !DILocation(line: 231, column: 20, scope: !2340)
!2348 = !DILocation(line: 233, column: 35, scope: !2311)
!2349 = !DILocation(line: 231, column: 44, scope: !2274)
!2350 = !DILocation(line: 231, column: 20, scope: !2320)
!2351 = !DILocation(line: 231, column: 45, scope: !2274)
!2352 = !DILocation(line: 234, column: 6, scope: !2274)
!2353 = !DILocation(line: 233, column: 21, scope: !2311)
!2354 = !DILocation(line: 233, column: 9, scope: !2311)
!2355 = !DILocation(line: 230, column: 5, scope: !2274)
!2356 = distinct !DISubprogram(name: "from_residual<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError, alloc::ffi::c_str::NulError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h848244b9b10820a9E", scope: !2358, file: !2357, line: 2132, type: !2359, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2365, retainedNodes: !2361)
!2357 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "376d3f50f2b6d030dde9244768e6c6e1")
!2358 = !DINamespace(name: "{impl#28}", scope: !877)
!2359 = !DISubroutineType(types: !2360)
!2360 = !{!2286, !2321, !508}
!2361 = !{!2362, !2363}
!2362 = !DILocalVariable(name: "residual", arg: 1, scope: !2356, file: !2357, line: 2132, type: !2321)
!2363 = !DILocalVariable(name: "e", scope: !2364, file: !2357, line: 2134, type: !2297, align: 8)
!2364 = distinct !DILexicalBlock(scope: !2356, file: !2357, line: 2134, column: 13)
!2365 = !{!2295, !2296, !2366}
!2366 = !DITemplateTypeParameter(name: "F", type: !2297)
!2367 = !DILocation(line: 2132, column: 22, scope: !2356)
!2368 = !DILocation(line: 2134, column: 17, scope: !2364)
!2369 = !DILocation(line: 2134, column: 17, scope: !2356)
!2370 = !DILocation(line: 2134, column: 38, scope: !2364)
!2371 = !DILocation(line: 2134, column: 27, scope: !2364)
!2372 = !DILocation(line: 2134, column: 23, scope: !2364)
!2373 = !DILocation(line: 2136, column: 6, scope: !2356)
!2374 = distinct !DISubprogram(name: "type_id<alloc::string::String>", linkageName: "_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h85c59b930058df08E", scope: !2376, file: !2375, line: 204, type: !2378, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !28, retainedNodes: !2383)
!2375 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/any.rs", directory: "", checksumkind: CSK_MD5, checksum: "8c95b9b465e95854f6a6816cb7f04cf7")
!2376 = !DINamespace(name: "{impl#0}", scope: !2377)
!2377 = !DINamespace(name: "any", scope: !21)
!2378 = !DISubroutineType(types: !2379)
!2379 = !{!2380, !504}
!2380 = !DICompositeType(tag: DW_TAG_structure_type, name: "TypeId", scope: !2377, file: !2, size: 64, align: 64, elements: !2381, templateParams: !27, identifier: "8137b7c0b96416657d8bdbd44ad2982e")
!2381 = !{!2382}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !2380, file: !2, baseType: !71, size: 64, align: 64)
!2383 = !{!2384}
!2384 = !DILocalVariable(name: "self", arg: 1, scope: !2374, file: !2375, line: 204, type: !504)
!2385 = !DILocation(line: 204, column: 16, scope: !2374)
!2386 = !DILocation(line: 205, column: 9, scope: !2374)
!2387 = !DILocation(line: 206, column: 6, scope: !2374)
!2388 = distinct !DISubprogram(name: "__rust_end_short_backtrace<std::panicking::begin_panic::{closure_env#0}<alloc::string::String>, !>", linkageName: "_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17h24620aa2f97a02d9E", scope: !2390, file: !2389, line: 134, type: !2392, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2403, retainedNodes: !2398)
!2389 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/sys_common/backtrace.rs", directory: "", checksumkind: CSK_MD5, checksum: "f7c76d4902bfcea1d96ffad8fbde919d")
!2390 = !DINamespace(name: "backtrace", scope: !2391)
!2391 = !DINamespace(name: "sys_common", scope: !16)
!2392 = !DISubroutineType(types: !2393)
!2393 = !{null, !2394}
!2394 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::string::String>", scope: !14, file: !2, size: 256, align: 64, elements: !2395, templateParams: !27, identifier: "9a6919cbefdf4b77f2a29427f4db2dc")
!2395 = !{!2396, !2397}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !2394, file: !2, baseType: !30, size: 192, align: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2394, file: !2, baseType: !508, size: 64, align: 64, offset: 192)
!2398 = !{!2399, !2400}
!2399 = !DILocalVariable(name: "f", arg: 1, scope: !2388, file: !2389, line: 134, type: !2394)
!2400 = !DILocalVariable(name: "result", scope: !2401, file: !2389, line: 138, type: !2402, align: 1)
!2401 = distinct !DILexicalBlock(scope: !2388, file: !2389, line: 138, column: 5)
!2402 = !DIBasicType(name: "!", encoding: DW_ATE_unsigned)
!2403 = !{!2404, !2405}
!2404 = !DITemplateTypeParameter(name: "F", type: !2394)
!2405 = !DITemplateTypeParameter(name: "T", type: !2402)
!2406 = !DILocation(line: 138, column: 9, scope: !2401)
!2407 = !DILocation(line: 134, column: 41, scope: !2388)
!2408 = !DILocalVariable(name: "dummy", scope: !2409, file: !2389, line: 141, type: !7, align: 1)
!2409 = !DILexicalBlockFile(scope: !2410, file: !2389, discriminator: 0)
!2410 = distinct !DISubprogram(name: "black_box<()>", linkageName: "_ZN4core4hint9black_box17h7716bf6b713372c0E", scope: !2412, file: !2411, line: 225, type: !2413, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !114, retainedNodes: !2415)
!2411 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/hint.rs", directory: "", checksumkind: CSK_MD5, checksum: "b50bd4586a98539d3cdc821cfaa5e2e7")
!2412 = !DINamespace(name: "hint", scope: !21)
!2413 = !DISubroutineType(types: !2414)
!2414 = !{null, !7}
!2415 = !{!2408}
!2416 = !DILocation(line: 141, column: 5, scope: !2409, inlinedAt: !2417)
!2417 = !DILocation(line: 141, column: 5, scope: !2401)
!2418 = !DILocation(line: 138, column: 18, scope: !2388)
!2419 = !{i32 3341445}
!2420 = !DILocation(line: 144, column: 2, scope: !2388)
!2421 = !DILocation(line: 144, column: 1, scope: !2388)
!2422 = !DILocation(line: 134, column: 1, scope: !2388)
!2423 = distinct !DISubprogram(name: "decode_repr<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>, std::io::error::repr_bitpacked::{impl#3}::drop::{closure_env#0}>", linkageName: "_ZN3std2io5error14repr_bitpacked11decode_repr17h9f34d0bc13560ddeE", scope: !108, file: !2424, line: 246, type: !2425, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2444, retainedNodes: !2430)
!2424 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/io/error/repr_bitpacked.rs", directory: "", checksumkind: CSK_MD5, checksum: "e17233472f13704c087dcc380c33a3a0")
!2425 = !DISubroutineType(types: !2426)
!2426 = !{!120, !111, !2427}
!2427 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !2428, file: !2, align: 8, elements: !27, identifier: "610ee771576d0a55639d49be016d65a1")
!2428 = !DINamespace(name: "drop", scope: !2429)
!2429 = !DINamespace(name: "{impl#3}", scope: !108)
!2430 = !{!2431, !2432, !2433, !2435, !2437, !2439, !2441}
!2431 = !DILocalVariable(name: "ptr", arg: 1, scope: !2423, file: !2424, line: 246, type: !111)
!2432 = !DILocalVariable(name: "make_custom", arg: 2, scope: !2423, file: !2424, line: 246, type: !2427)
!2433 = !DILocalVariable(name: "bits", scope: !2434, file: !2424, line: 250, type: !9, align: 8)
!2434 = distinct !DILexicalBlock(scope: !2423, file: !2424, line: 250, column: 5)
!2435 = !DILocalVariable(name: "code", scope: !2436, file: !2424, line: 253, type: !128, align: 4)
!2436 = distinct !DILexicalBlock(scope: !2434, file: !2424, line: 253, column: 13)
!2437 = !DILocalVariable(name: "kind_bits", scope: !2438, file: !2424, line: 257, type: !356, align: 4)
!2438 = distinct !DILexicalBlock(scope: !2434, file: !2424, line: 257, column: 13)
!2439 = !DILocalVariable(name: "kind", scope: !2440, file: !2424, line: 258, type: !135, align: 1)
!2440 = distinct !DILexicalBlock(scope: !2438, file: !2424, line: 258, column: 13)
!2441 = !DILocalVariable(name: "custom", scope: !2442, file: !2424, line: 275, type: !2443, align: 8)
!2442 = distinct !DILexicalBlock(scope: !2434, file: !2424, line: 275, column: 13)
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::Custom", baseType: !132, size: 64, align: 64, dwarfAddressSpace: 0)
!2444 = !{!130, !2445}
!2445 = !DITemplateTypeParameter(name: "F", type: !2427)
!2446 = !DILocation(line: 246, column: 29, scope: !2423)
!2447 = !DILocation(line: 246, column: 47, scope: !2423)
!2448 = !DILocation(line: 250, column: 9, scope: !2434)
!2449 = !DILocation(line: 258, column: 17, scope: !2440)
!2450 = !DILocalVariable(name: "self", scope: !2451, file: !2424, line: 258, type: !2453, align: 1)
!2451 = !DILexicalBlockFile(scope: !2452, file: !2424, discriminator: 0)
!2452 = distinct !DISubprogram(name: "unwrap_or_else<std::io::error::ErrorKind, std::io::error::repr_bitpacked::decode_repr::{closure_env#0}<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>, std::io::error::repr_bitpacked::{impl#3}::drop::{closure_env#0}>>", linkageName: "_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h523d9454c414d4afE", scope: !2453, file: !1137, line: 818, type: !2466, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2477, retainedNodes: !2472)
!2453 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<std::io::error::ErrorKind>", scope: !20, file: !2, size: 8, align: 8, elements: !2454, templateParams: !27, identifier: "f008ee61be46854a7146e8cd367a9c41")
!2454 = !{!2455}
!2455 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2453, file: !2, size: 8, align: 8, elements: !2456, templateParams: !27, identifier: "57371e63685fc53e1770b74a14fa7c4e", discriminator: !2465)
!2456 = !{!2457, !2461}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2455, file: !2, baseType: !2458, size: 8, align: 8, extraData: i64 41)
!2458 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2453, file: !2, size: 8, align: 8, elements: !27, templateParams: !2459, identifier: "dc4f5ca2cdd686c78cf5aa9b6f1b5afb")
!2459 = !{!2460}
!2460 = !DITemplateTypeParameter(name: "T", type: !135)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2455, file: !2, baseType: !2462, size: 8, align: 8)
!2462 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2453, file: !2, size: 8, align: 8, elements: !2463, templateParams: !2459, identifier: "371d975942017656b9ce37c5d29bb9bc")
!2463 = !{!2464}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2462, file: !2, baseType: !135, size: 8, align: 8)
!2465 = !DIDerivedType(tag: DW_TAG_member, scope: !2453, file: !2, baseType: !53, size: 8, align: 8, flags: DIFlagArtificial)
!2466 = !DISubroutineType(types: !2467)
!2467 = !{!135, !2453, !2468}
!2468 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>, std::io::error::repr_bitpacked::{impl#3}::drop::{closure_env#0}>", scope: !2469, file: !2, size: 64, align: 64, elements: !2470, templateParams: !27, identifier: "cb6fd5a9825e024949e7d472a6b7447b")
!2469 = !DINamespace(name: "decode_repr", scope: !108)
!2470 = !{!2471}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__bits", scope: !2468, file: !2, baseType: !556, size: 64, align: 64)
!2472 = !{!2450, !2473, !2474}
!2473 = !DILocalVariable(name: "f", scope: !2451, file: !2424, line: 258, type: !2468, align: 8)
!2474 = !DILocalVariable(name: "x", scope: !2475, file: !2424, line: 258, type: !135, align: 1)
!2475 = !DILexicalBlockFile(scope: !2476, file: !2424, discriminator: 0)
!2476 = distinct !DILexicalBlock(scope: !2452, file: !1137, line: 824, column: 13)
!2477 = !{!2460, !2478}
!2478 = !DITemplateTypeParameter(name: "F", type: !2468)
!2479 = !DILocation(line: 258, column: 24, scope: !2451, inlinedAt: !2480)
!2480 = !DILocation(line: 258, column: 24, scope: !2438)
!2481 = !DILocalVariable(name: "self", scope: !2482, file: !2424, line: 270, type: !2485, align: 8)
!2482 = !DILexicalBlockFile(scope: !2483, file: !2424, discriminator: 0)
!2483 = distinct !DISubprogram(name: "as_ptr<std::io::error::SimpleMessage>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5534d464b4ba1e67E", scope: !2485, file: !2484, line: 330, type: !2491, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2489, retainedNodes: !2494)
!2484 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "856acc92efd7925b83dd1e3c577ddbdc")
!2485 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<std::io::error::SimpleMessage>", scope: !49, file: !2, size: 64, align: 64, elements: !2486, templateParams: !2489, identifier: "bed3f7a42953e913be084d257c107f75")
!2486 = !{!2487}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2485, file: !2, baseType: !2488, size: 64, align: 64)
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const std::io::error::SimpleMessage", baseType: !198, size: 64, align: 64, dwarfAddressSpace: 0)
!2489 = !{!2490}
!2490 = !DITemplateTypeParameter(name: "T", type: !198)
!2491 = !DISubroutineType(types: !2492)
!2492 = !{!2493, !2485}
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::SimpleMessage", baseType: !198, size: 64, align: 64, dwarfAddressSpace: 0)
!2494 = !{!2481}
!2495 = !DILocation(line: 270, column: 58, scope: !2482, inlinedAt: !2496)
!2496 = !DILocation(line: 270, column: 58, scope: !2434)
!2497 = !DILocation(line: 250, column: 9, scope: !2423)
!2498 = !DILocation(line: 250, column: 16, scope: !2423)
!2499 = !DILocalVariable(name: "self", scope: !2500, file: !2424, line: 250, type: !111, align: 8)
!2500 = !DILexicalBlockFile(scope: !2501, file: !2424, discriminator: 0)
!2501 = distinct !DISubprogram(name: "as_ptr<()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd27a0b405adc342bE", scope: !111, file: !2484, line: 330, type: !2502, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !114, retainedNodes: !2504)
!2502 = !DISubroutineType(types: !2503)
!2503 = !{!329, !111}
!2504 = !{!2499}
!2505 = !DILocation(line: 250, column: 16, scope: !2500, inlinedAt: !2498)
!2506 = !DILocalVariable(name: "self", scope: !2507, file: !2424, line: 250, type: !329, align: 8)
!2507 = !DILexicalBlockFile(scope: !2508, file: !2424, discriminator: 0)
!2508 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hd04e43cf4930aa9fE", scope: !691, file: !681, line: 184, type: !2509, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !114, retainedNodes: !2511)
!2509 = !DISubroutineType(types: !2510)
!2510 = !{!9, !329}
!2511 = !{!2506}
!2512 = !DILocation(line: 250, column: 16, scope: !2507, inlinedAt: !2498)
!2513 = !DILocation(line: 251, column: 11, scope: !2434)
!2514 = !DILocation(line: 251, column: 5, scope: !2434)
!2515 = !DILocation(line: 280, column: 13, scope: !2434)
!2516 = !DILocation(line: 253, column: 26, scope: !2434)
!2517 = !DILocation(line: 253, column: 24, scope: !2434)
!2518 = !DILocation(line: 253, column: 17, scope: !2436)
!2519 = !DILocation(line: 254, column: 13, scope: !2436)
!2520 = !DILocation(line: 255, column: 9, scope: !2434)
!2521 = !DILocation(line: 257, column: 30, scope: !2434)
!2522 = !DILocation(line: 257, column: 29, scope: !2434)
!2523 = !DILocation(line: 257, column: 17, scope: !2438)
!2524 = !{i8 0, i8 42}
!2525 = !DILocalVariable(name: "self", scope: !2526, file: !2424, line: 270, type: !111, align: 8)
!2526 = !DILexicalBlockFile(scope: !2527, file: !2424, discriminator: 0)
!2527 = distinct !DISubprogram(name: "cast<(), std::io::error::SimpleMessage>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h2a36022b700aa53bE", scope: !111, file: !2484, line: 453, type: !2528, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2531, retainedNodes: !2530)
!2528 = !DISubroutineType(types: !2529)
!2529 = !{!2485, !111}
!2530 = !{!2525}
!2531 = !{!115, !2532}
!2532 = !DITemplateTypeParameter(name: "U", type: !198)
!2533 = !DILocation(line: 270, column: 58, scope: !2526, inlinedAt: !2496)
!2534 = !DILocalVariable(name: "self", scope: !2535, file: !2424, line: 270, type: !111, align: 8)
!2535 = !DILexicalBlockFile(scope: !2536, file: !2424, discriminator: 0)
!2536 = distinct !DISubprogram(name: "as_ptr<()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd27a0b405adc342bE", scope: !111, file: !2484, line: 330, type: !2502, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !114, retainedNodes: !2537)
!2537 = !{!2534}
!2538 = !DILocation(line: 270, column: 58, scope: !2535, inlinedAt: !2539)
!2539 = !DILocation(line: 455, column: 41, scope: !2527, inlinedAt: !2496)
!2540 = !DILocalVariable(name: "ptr", scope: !2541, file: !2424, line: 270, type: !2493, align: 8)
!2541 = !DILexicalBlockFile(scope: !2542, file: !2424, discriminator: 0)
!2542 = distinct !DISubprogram(name: "new_unchecked<std::io::error::SimpleMessage>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hdcb15f243af76bdaE", scope: !2485, file: !2484, line: 196, type: !2543, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2489, retainedNodes: !2545)
!2543 = !DISubroutineType(types: !2544)
!2544 = !{!2485, !2493}
!2545 = !{!2540}
!2546 = !DILocation(line: 270, column: 58, scope: !2541, inlinedAt: !2547)
!2547 = !DILocation(line: 455, column: 18, scope: !2527, inlinedAt: !2496)
!2548 = !DILocation(line: 270, column: 31, scope: !2434)
!2549 = !DILocation(line: 270, column: 94, scope: !2434)
!2550 = !DILocation(line: 275, column: 26, scope: !2434)
!2551 = !DILocalVariable(name: "self", scope: !2552, file: !2424, line: 275, type: !111, align: 8)
!2552 = !DILexicalBlockFile(scope: !2553, file: !2424, discriminator: 0)
!2553 = distinct !DISubprogram(name: "as_ptr<()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd27a0b405adc342bE", scope: !111, file: !2484, line: 330, type: !2502, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !114, retainedNodes: !2554)
!2554 = !{!2551}
!2555 = !DILocation(line: 275, column: 26, scope: !2552, inlinedAt: !2550)
!2556 = !DILocalVariable(name: "self", scope: !2557, file: !2424, line: 275, type: !329, align: 8)
!2557 = !DILexicalBlockFile(scope: !2558, file: !2424, discriminator: 0)
!2558 = distinct !DISubprogram(name: "cast<(), u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hfdffeb1802350f65E", scope: !691, file: !681, line: 45, type: !2559, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2562, retainedNodes: !2561)
!2559 = !DISubroutineType(types: !2560)
!2560 = !{!289, !329}
!2561 = !{!2556}
!2562 = !{!115, !2563}
!2563 = !DITemplateTypeParameter(name: "U", type: !53)
!2564 = !DILocation(line: 275, column: 26, scope: !2557, inlinedAt: !2550)
!2565 = !DILocalVariable(name: "self", scope: !2566, file: !2424, line: 275, type: !289, align: 8)
!2566 = !DILexicalBlockFile(scope: !2567, file: !2424, discriminator: 0)
!2567 = distinct !DISubprogram(name: "wrapping_sub<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$12wrapping_sub17h4381d49939a442d0E", scope: !691, file: !681, line: 1236, type: !692, scopeLine: 1236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !2568)
!2568 = !{!2565, !2569}
!2569 = !DILocalVariable(name: "count", scope: !2566, file: !2424, line: 275, type: !9, align: 8)
!2570 = !DILocation(line: 275, column: 26, scope: !2566, inlinedAt: !2550)
!2571 = !DILocalVariable(name: "self", scope: !2572, file: !2424, line: 275, type: !289, align: 8)
!2572 = !DILexicalBlockFile(scope: !2573, file: !2424, discriminator: 0)
!2573 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$15wrapping_offset17h09514be0090863c8E", scope: !691, file: !681, line: 549, type: !701, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !2574)
!2574 = !{!2571, !2575}
!2575 = !DILocalVariable(name: "count", scope: !2572, file: !2424, line: 275, type: !703, align: 8)
!2576 = !DILocation(line: 275, column: 26, scope: !2572, inlinedAt: !2577)
!2577 = !DILocation(line: 1240, column: 9, scope: !2567, inlinedAt: !2550)
!2578 = !DILocation(line: 283, column: 1, scope: !2423)
!2579 = !DILocalVariable(name: "self", scope: !2580, file: !2424, line: 275, type: !289, align: 8)
!2580 = !DILexicalBlockFile(scope: !2581, file: !2424, discriminator: 0)
!2581 = distinct !DISubprogram(name: "cast<u8, std::io::error::Custom>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h7066c96b179f5a77E", scope: !691, file: !681, line: 45, type: !2582, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2585, retainedNodes: !2584)
!2582 = !DISubroutineType(types: !2583)
!2583 = !{!2443, !289}
!2584 = !{!2579}
!2585 = !{!55, !2586}
!2586 = !DITemplateTypeParameter(name: "U", type: !132)
!2587 = !DILocation(line: 275, column: 26, scope: !2580, inlinedAt: !2550)
!2588 = !DILocation(line: 275, column: 17, scope: !2442)
!2589 = !DILocation(line: 276, column: 31, scope: !2442)
!2590 = !DILocation(line: 276, column: 13, scope: !2442)
!2591 = !DILocation(line: 277, column: 9, scope: !2434)
!2592 = !DILocation(line: 258, column: 65, scope: !2438)
!2593 = !{i8 0, i8 41}
!2594 = !DILocation(line: 258, column: 24, scope: !2475, inlinedAt: !2480)
!2595 = !DILocation(line: 268, column: 31, scope: !2440)
!2596 = !DILocation(line: 268, column: 13, scope: !2440)
!2597 = !DILocation(line: 269, column: 9, scope: !2434)
!2598 = !DILocation(line: 246, column: 1, scope: !2423)
!2599 = !DILocation(line: 283, column: 2, scope: !2423)
!2600 = distinct !DISubprogram(name: "{closure#0}<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>, std::io::error::repr_bitpacked::{impl#3}::drop::{closure_env#0}>", linkageName: "_ZN3std2io5error14repr_bitpacked11decode_repr28_$u7b$$u7b$closure$u7d$$u7d$17hf8e0e9c8e659377bE", scope: !2469, file: !2424, line: 258, type: !2601, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2444, retainedNodes: !2603)
!2601 = !DISubroutineType(types: !2602)
!2602 = !{!135, !2468}
!2603 = !{!2604}
!2604 = !DILocalVariable(name: "bits", scope: !2600, file: !2424, line: 250, type: !9, align: 8)
!2605 = !DILocation(line: 250, column: 9, scope: !2600)
!2606 = !DILocalVariable(name: "_unsafe_arg", scope: !2607, file: !2424, line: 259, type: !2719, align: 1)
!2607 = !DILexicalBlockFile(scope: !2608, file: !2424, discriminator: 0)
!2608 = distinct !DISubprogram(name: "new_v1_formatted", linkageName: "_ZN4core3fmt9Arguments16new_v1_formatted17hc86cdd5ed3402d34E", scope: !2610, file: !2609, line: 410, type: !2717, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !2722)
!2609 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "18dcc19de419985ae78d2bd8ed07e5dc")
!2610 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !405, file: !2, size: 384, align: 64, elements: !2611, templateParams: !27, identifier: "7e7034295abae01651800c8eb0e9b712")
!2611 = !{!2612, !2613, !2659}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !2610, file: !2, baseType: !249, size: 128, align: 64)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !2610, file: !2, baseType: !2614, size: 128, align: 64, offset: 128)
!2614 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::v1::Argument]>", scope: !20, file: !2, size: 128, align: 64, elements: !2615, templateParams: !27, identifier: "bb69cbb99024f47dbb54317ba8130317")
!2615 = !{!2616}
!2616 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2614, file: !2, size: 128, align: 64, elements: !2617, templateParams: !27, identifier: "ce02297fe7dbf35f547cc88f131a39b4", discriminator: !2658)
!2617 = !{!2618, !2654}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2616, file: !2, baseType: !2619, size: 128, align: 64, extraData: i64 0)
!2619 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2614, file: !2, size: 128, align: 64, elements: !27, templateParams: !2620, identifier: "742dbe7e160661d8ca36fcfff2574850")
!2620 = !{!2621}
!2621 = !DITemplateTypeParameter(name: "T", type: !2622)
!2622 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::v1::Argument]", file: !2, size: 128, align: 64, elements: !2623, templateParams: !27, identifier: "5ac19a4b2fedc0a38075c82d3d698a2e")
!2623 = !{!2624, !2653}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2622, file: !2, baseType: !2625, size: 64, align: 64)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 64, align: 64, dwarfAddressSpace: 0)
!2626 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !403, file: !2, size: 448, align: 64, elements: !2627, templateParams: !27, identifier: "fbba22b504f631aebebe5f9a731b4661")
!2627 = !{!2628, !2629}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !2626, file: !2, baseType: !9, size: 64, align: 64)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2626, file: !2, baseType: !2630, size: 384, align: 64, offset: 64)
!2630 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormatSpec", scope: !403, file: !2, size: 384, align: 64, elements: !2631, templateParams: !27, identifier: "a89ae7a13a1def66296bab98052f520a")
!2631 = !{!2632, !2634, !2635, !2636, !2652}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !2630, file: !2, baseType: !2633, size: 32, align: 32, offset: 256)
!2633 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2630, file: !2, baseType: !402, size: 8, align: 8, offset: 320)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2630, file: !2, baseType: !356, size: 32, align: 32, offset: 288)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !2630, file: !2, baseType: !2637, size: 128, align: 64)
!2637 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !403, file: !2, size: 128, align: 64, elements: !2638, templateParams: !27, identifier: "41c6e2a1db95b605a371a090678c1fd8")
!2638 = !{!2639}
!2639 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2637, file: !2, size: 128, align: 64, elements: !2640, templateParams: !27, identifier: "eff7cdccebc4ba23639a28669cbce86", discriminator: !2651)
!2640 = !{!2641, !2645, !2649}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !2639, file: !2, baseType: !2642, size: 128, align: 64, extraData: i64 0)
!2642 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !2637, file: !2, size: 128, align: 64, elements: !2643, templateParams: !27, identifier: "927d86c22d9994b767e51a58b20493")
!2643 = !{!2644}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2642, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !2639, file: !2, baseType: !2646, size: 128, align: 64, extraData: i64 1)
!2646 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !2637, file: !2, size: 128, align: 64, elements: !2647, templateParams: !27, identifier: "ce4b8bb3a4200a86c4c06a7570d8ee71")
!2647 = !{!2648}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2646, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !2639, file: !2, baseType: !2650, size: 128, align: 64, extraData: i64 2)
!2650 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !2637, file: !2, size: 128, align: 64, elements: !27, identifier: "b155566b9bd0239ef48aa3b8bcdef75b")
!2651 = !DIDerivedType(tag: DW_TAG_member, scope: !2637, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2630, file: !2, baseType: !2637, size: 128, align: 64, offset: 128)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2622, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2616, file: !2, baseType: !2655, size: 128, align: 64)
!2655 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2614, file: !2, size: 128, align: 64, elements: !2656, templateParams: !2620, identifier: "17f2fc106094349c7673abca4839c97a")
!2656 = !{!2657}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2655, file: !2, baseType: !2622, size: 128, align: 64)
!2658 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2610, file: !2, baseType: !2660, size: 128, align: 64, offset: 256)
!2660 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::ArgumentV1]", file: !2, size: 128, align: 64, elements: !2661, templateParams: !27, identifier: "c78588d5439c4eaa18fbaab99f079cbf")
!2661 = !{!2662, !2716}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2660, file: !2, baseType: !2663, size: 64, align: 64)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 64, align: 64, dwarfAddressSpace: 0)
!2664 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArgumentV1", scope: !405, file: !2, size: 128, align: 64, elements: !2665, templateParams: !27, identifier: "753c369e46bf484710f4d769a3fba395")
!2665 = !{!2666, !2670}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2664, file: !2, baseType: !2667, size: 64, align: 64)
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::{extern#0}::Opaque", baseType: !2668, size: 64, align: 64, dwarfAddressSpace: 0)
!2668 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", scope: !2669, file: !2, align: 8, elements: !27, identifier: "83e8d27b51d2e55ae9422e57e00c6cd7")
!2669 = !DINamespace(name: "{extern#0}", scope: !405)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !2664, file: !2, baseType: !2671, size: 64, align: 64, offset: 64)
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::{extern#0}::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !2672, size: 64, align: 64, dwarfAddressSpace: 0)
!2672 = !DISubroutineType(types: !2673)
!2673 = !{!2674, !2667, !2690}
!2674 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !877, file: !2, size: 8, align: 8, elements: !2675, templateParams: !27, identifier: "d239d58a8e95223cd52e3ad2c36d40d7")
!2675 = !{!2676}
!2676 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2674, file: !2, size: 8, align: 8, elements: !2677, templateParams: !27, identifier: "1fa2591b965a13cd50e38802b1727ca", discriminator: !2689)
!2677 = !{!2678, !2685}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2676, file: !2, baseType: !2679, size: 8, align: 8, extraData: i64 0)
!2679 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2674, file: !2, size: 8, align: 8, elements: !2680, templateParams: !2682, identifier: "cea751326735c343faf647063a65ad14")
!2680 = !{!2681}
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2679, file: !2, baseType: !7, align: 8, offset: 8)
!2682 = !{!115, !2683}
!2683 = !DITemplateTypeParameter(name: "E", type: !2684)
!2684 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !405, file: !2, align: 8, elements: !27, identifier: "87e319c059f1d372f32b0a49f33ec3cc")
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2676, file: !2, baseType: !2686, size: 8, align: 8, extraData: i64 1)
!2686 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2674, file: !2, size: 8, align: 8, elements: !2687, templateParams: !2682, identifier: "6c6eb84ed910506586b60ba90dbaa2c")
!2687 = !{!2688}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2686, file: !2, baseType: !2684, align: 8, offset: 8)
!2689 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2, baseType: !53, size: 8, align: 8, flags: DIFlagArtificial)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !2691, size: 64, align: 64, dwarfAddressSpace: 0)
!2691 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !405, file: !2, size: 512, align: 64, elements: !2692, templateParams: !27, identifier: "6e9ffaec9b89ebb810272bb66e7b2042")
!2692 = !{!2693, !2694, !2695, !2696, !2708, !2709}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2691, file: !2, baseType: !356, size: 32, align: 32, offset: 384)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !2691, file: !2, baseType: !2633, size: 32, align: 32, offset: 416)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2691, file: !2, baseType: !402, size: 8, align: 8, offset: 448)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2691, file: !2, baseType: !2697, size: 128, align: 64)
!2697 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !20, file: !2, size: 128, align: 64, elements: !2698, templateParams: !27, identifier: "5190463b0687da274ab794ccaf9d1fd8")
!2698 = !{!2699}
!2699 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2697, file: !2, size: 128, align: 64, elements: !2700, templateParams: !27, identifier: "db59d501e5f76645f4edce4cdbfeb328", discriminator: !2707)
!2700 = !{!2701, !2703}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2699, file: !2, baseType: !2702, size: 128, align: 64, extraData: i64 0)
!2702 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2697, file: !2, size: 128, align: 64, elements: !27, templateParams: !274, identifier: "a1c5f3dead8f24ccdada7bc2feedd145")
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2699, file: !2, baseType: !2704, size: 128, align: 64, extraData: i64 1)
!2704 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2697, file: !2, size: 128, align: 64, elements: !2705, templateParams: !274, identifier: "3ad875242c049b8143d7577f4eb10d1a")
!2705 = !{!2706}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2704, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2707 = !DIDerivedType(tag: DW_TAG_member, scope: !2697, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !2691, file: !2, baseType: !2697, size: 128, align: 64, offset: 128)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2691, file: !2, baseType: !2710, size: 128, align: 64, offset: 256)
!2710 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !2711, templateParams: !27, identifier: "3d4f80cd5361aaff4f795dd09efb8db1")
!2711 = !{!2712, !2715}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2710, file: !2, baseType: !2713, size: 64, align: 64)
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 64, align: 64, dwarfAddressSpace: 0)
!2714 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !27, identifier: "abb712b259efc5e79bb67900edf24920")
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !2710, file: !2, baseType: !185, size: 64, align: 64, offset: 64)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2660, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2717 = !DISubroutineType(types: !2718)
!2718 = !{!2610, !249, !2660, !2622, !2719}
!2719 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeArg", scope: !405, file: !2, align: 8, elements: !2720, templateParams: !27, identifier: "5672b6012e25576f721c1f767a829851")
!2720 = !{!2721}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !2719, file: !2, baseType: !7, align: 8)
!2722 = !{!2723, !2724, !2725, !2606}
!2723 = !DILocalVariable(name: "pieces", scope: !2607, file: !2424, line: 259, type: !249, align: 8)
!2724 = !DILocalVariable(name: "args", scope: !2607, file: !2424, line: 259, type: !2660, align: 8)
!2725 = !DILocalVariable(name: "fmt", scope: !2607, file: !2424, line: 259, type: !2622, align: 8)
!2726 = !DILocation(line: 259, column: 17, scope: !2607, inlinedAt: !2727)
!2727 = !DILocation(line: 57, column: 38, scope: !2728)
!2728 = !DILexicalBlockFile(scope: !2600, file: !2729, discriminator: 0)
!2729 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/panic.rs", directory: "", checksumkind: CSK_MD5, checksum: "fdc6e43203342ea3dc7947f5f0419604")
!2730 = !DILocation(line: 266, column: 17, scope: !2731, inlinedAt: !2733)
!2731 = !DILexicalBlockFile(scope: !2732, file: !2424, discriminator: 0)
!2732 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h1dd216e2b0f4e4baE", scope: !2412, file: !2411, line: 100, type: !1320, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !27)
!2733 = !DILocation(line: 266, column: 17, scope: !2600)
!2734 = distinct !DISubprogram(name: "kind_from_prim", linkageName: "_ZN3std2io5error14repr_bitpacked14kind_from_prim17hb64baca91718389bE", scope: !108, file: !2424, line: 289, type: !2735, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !2737)
!2735 = !DISubroutineType(types: !2736)
!2736 = !{!2453, !356}
!2737 = !{!2738, !2739, !2741, !2743, !2745, !2746, !2748, !2749, !2751, !2752, !2754, !2755, !2757, !2758, !2760, !2761, !2763, !2764, !2766, !2767, !2769, !2770, !2772, !2773, !2775, !2776, !2778, !2779, !2781, !2782, !2784, !2785, !2787, !2788, !2790, !2791, !2793, !2794, !2796, !2797, !2799, !2800, !2802, !2803, !2805, !2806, !2808, !2809, !2811, !2812, !2814, !2815, !2817, !2818, !2820, !2821, !2823, !2824, !2826, !2827, !2829, !2830, !2832, !2833, !2835, !2836, !2838, !2839, !2841, !2842, !2844, !2845, !2847, !2848, !2850, !2851, !2853, !2854, !2856, !2857, !2859, !2860, !2862}
!2738 = !DILocalVariable(name: "ek", arg: 1, scope: !2734, file: !2424, line: 289, type: !356)
!2739 = !DILocalVariable(name: "v", scope: !2740, file: !2424, line: 302, type: !356, align: 4)
!2740 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2741 = !DILocalVariable(name: "v", scope: !2740, file: !2424, line: 302, type: !2742, align: 8)
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u32", baseType: !356, size: 64, align: 64, dwarfAddressSpace: 0)
!2743 = !DILocalVariable(name: "v", scope: !2744, file: !2424, line: 302, type: !356, align: 4)
!2744 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2745 = !DILocalVariable(name: "v", scope: !2744, file: !2424, line: 302, type: !2742, align: 8)
!2746 = !DILocalVariable(name: "v", scope: !2747, file: !2424, line: 302, type: !356, align: 4)
!2747 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2748 = !DILocalVariable(name: "v", scope: !2747, file: !2424, line: 302, type: !2742, align: 8)
!2749 = !DILocalVariable(name: "v", scope: !2750, file: !2424, line: 302, type: !356, align: 4)
!2750 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2751 = !DILocalVariable(name: "v", scope: !2750, file: !2424, line: 302, type: !2742, align: 8)
!2752 = !DILocalVariable(name: "v", scope: !2753, file: !2424, line: 302, type: !356, align: 4)
!2753 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2754 = !DILocalVariable(name: "v", scope: !2753, file: !2424, line: 302, type: !2742, align: 8)
!2755 = !DILocalVariable(name: "v", scope: !2756, file: !2424, line: 302, type: !356, align: 4)
!2756 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2757 = !DILocalVariable(name: "v", scope: !2756, file: !2424, line: 302, type: !2742, align: 8)
!2758 = !DILocalVariable(name: "v", scope: !2759, file: !2424, line: 302, type: !356, align: 4)
!2759 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2760 = !DILocalVariable(name: "v", scope: !2759, file: !2424, line: 302, type: !2742, align: 8)
!2761 = !DILocalVariable(name: "v", scope: !2762, file: !2424, line: 302, type: !356, align: 4)
!2762 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2763 = !DILocalVariable(name: "v", scope: !2762, file: !2424, line: 302, type: !2742, align: 8)
!2764 = !DILocalVariable(name: "v", scope: !2765, file: !2424, line: 302, type: !356, align: 4)
!2765 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2766 = !DILocalVariable(name: "v", scope: !2765, file: !2424, line: 302, type: !2742, align: 8)
!2767 = !DILocalVariable(name: "v", scope: !2768, file: !2424, line: 302, type: !356, align: 4)
!2768 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2769 = !DILocalVariable(name: "v", scope: !2768, file: !2424, line: 302, type: !2742, align: 8)
!2770 = !DILocalVariable(name: "v", scope: !2771, file: !2424, line: 302, type: !356, align: 4)
!2771 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2772 = !DILocalVariable(name: "v", scope: !2771, file: !2424, line: 302, type: !2742, align: 8)
!2773 = !DILocalVariable(name: "v", scope: !2774, file: !2424, line: 302, type: !356, align: 4)
!2774 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2775 = !DILocalVariable(name: "v", scope: !2774, file: !2424, line: 302, type: !2742, align: 8)
!2776 = !DILocalVariable(name: "v", scope: !2777, file: !2424, line: 302, type: !356, align: 4)
!2777 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2778 = !DILocalVariable(name: "v", scope: !2777, file: !2424, line: 302, type: !2742, align: 8)
!2779 = !DILocalVariable(name: "v", scope: !2780, file: !2424, line: 302, type: !356, align: 4)
!2780 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2781 = !DILocalVariable(name: "v", scope: !2780, file: !2424, line: 302, type: !2742, align: 8)
!2782 = !DILocalVariable(name: "v", scope: !2783, file: !2424, line: 302, type: !356, align: 4)
!2783 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2784 = !DILocalVariable(name: "v", scope: !2783, file: !2424, line: 302, type: !2742, align: 8)
!2785 = !DILocalVariable(name: "v", scope: !2786, file: !2424, line: 302, type: !356, align: 4)
!2786 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2787 = !DILocalVariable(name: "v", scope: !2786, file: !2424, line: 302, type: !2742, align: 8)
!2788 = !DILocalVariable(name: "v", scope: !2789, file: !2424, line: 302, type: !356, align: 4)
!2789 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2790 = !DILocalVariable(name: "v", scope: !2789, file: !2424, line: 302, type: !2742, align: 8)
!2791 = !DILocalVariable(name: "v", scope: !2792, file: !2424, line: 302, type: !356, align: 4)
!2792 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2793 = !DILocalVariable(name: "v", scope: !2792, file: !2424, line: 302, type: !2742, align: 8)
!2794 = !DILocalVariable(name: "v", scope: !2795, file: !2424, line: 302, type: !356, align: 4)
!2795 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2796 = !DILocalVariable(name: "v", scope: !2795, file: !2424, line: 302, type: !2742, align: 8)
!2797 = !DILocalVariable(name: "v", scope: !2798, file: !2424, line: 302, type: !356, align: 4)
!2798 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2799 = !DILocalVariable(name: "v", scope: !2798, file: !2424, line: 302, type: !2742, align: 8)
!2800 = !DILocalVariable(name: "v", scope: !2801, file: !2424, line: 302, type: !356, align: 4)
!2801 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2802 = !DILocalVariable(name: "v", scope: !2801, file: !2424, line: 302, type: !2742, align: 8)
!2803 = !DILocalVariable(name: "v", scope: !2804, file: !2424, line: 302, type: !356, align: 4)
!2804 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2805 = !DILocalVariable(name: "v", scope: !2804, file: !2424, line: 302, type: !2742, align: 8)
!2806 = !DILocalVariable(name: "v", scope: !2807, file: !2424, line: 302, type: !356, align: 4)
!2807 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2808 = !DILocalVariable(name: "v", scope: !2807, file: !2424, line: 302, type: !2742, align: 8)
!2809 = !DILocalVariable(name: "v", scope: !2810, file: !2424, line: 302, type: !356, align: 4)
!2810 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2811 = !DILocalVariable(name: "v", scope: !2810, file: !2424, line: 302, type: !2742, align: 8)
!2812 = !DILocalVariable(name: "v", scope: !2813, file: !2424, line: 302, type: !356, align: 4)
!2813 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2814 = !DILocalVariable(name: "v", scope: !2813, file: !2424, line: 302, type: !2742, align: 8)
!2815 = !DILocalVariable(name: "v", scope: !2816, file: !2424, line: 302, type: !356, align: 4)
!2816 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2817 = !DILocalVariable(name: "v", scope: !2816, file: !2424, line: 302, type: !2742, align: 8)
!2818 = !DILocalVariable(name: "v", scope: !2819, file: !2424, line: 302, type: !356, align: 4)
!2819 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2820 = !DILocalVariable(name: "v", scope: !2819, file: !2424, line: 302, type: !2742, align: 8)
!2821 = !DILocalVariable(name: "v", scope: !2822, file: !2424, line: 302, type: !356, align: 4)
!2822 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2823 = !DILocalVariable(name: "v", scope: !2822, file: !2424, line: 302, type: !2742, align: 8)
!2824 = !DILocalVariable(name: "v", scope: !2825, file: !2424, line: 302, type: !356, align: 4)
!2825 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2826 = !DILocalVariable(name: "v", scope: !2825, file: !2424, line: 302, type: !2742, align: 8)
!2827 = !DILocalVariable(name: "v", scope: !2828, file: !2424, line: 302, type: !356, align: 4)
!2828 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2829 = !DILocalVariable(name: "v", scope: !2828, file: !2424, line: 302, type: !2742, align: 8)
!2830 = !DILocalVariable(name: "v", scope: !2831, file: !2424, line: 302, type: !356, align: 4)
!2831 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2832 = !DILocalVariable(name: "v", scope: !2831, file: !2424, line: 302, type: !2742, align: 8)
!2833 = !DILocalVariable(name: "v", scope: !2834, file: !2424, line: 302, type: !356, align: 4)
!2834 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2835 = !DILocalVariable(name: "v", scope: !2834, file: !2424, line: 302, type: !2742, align: 8)
!2836 = !DILocalVariable(name: "v", scope: !2837, file: !2424, line: 302, type: !356, align: 4)
!2837 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2838 = !DILocalVariable(name: "v", scope: !2837, file: !2424, line: 302, type: !2742, align: 8)
!2839 = !DILocalVariable(name: "v", scope: !2840, file: !2424, line: 302, type: !356, align: 4)
!2840 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2841 = !DILocalVariable(name: "v", scope: !2840, file: !2424, line: 302, type: !2742, align: 8)
!2842 = !DILocalVariable(name: "v", scope: !2843, file: !2424, line: 302, type: !356, align: 4)
!2843 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2844 = !DILocalVariable(name: "v", scope: !2843, file: !2424, line: 302, type: !2742, align: 8)
!2845 = !DILocalVariable(name: "v", scope: !2846, file: !2424, line: 302, type: !356, align: 4)
!2846 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2847 = !DILocalVariable(name: "v", scope: !2846, file: !2424, line: 302, type: !2742, align: 8)
!2848 = !DILocalVariable(name: "v", scope: !2849, file: !2424, line: 302, type: !356, align: 4)
!2849 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2850 = !DILocalVariable(name: "v", scope: !2849, file: !2424, line: 302, type: !2742, align: 8)
!2851 = !DILocalVariable(name: "v", scope: !2852, file: !2424, line: 302, type: !356, align: 4)
!2852 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2853 = !DILocalVariable(name: "v", scope: !2852, file: !2424, line: 302, type: !2742, align: 8)
!2854 = !DILocalVariable(name: "v", scope: !2855, file: !2424, line: 302, type: !356, align: 4)
!2855 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2856 = !DILocalVariable(name: "v", scope: !2855, file: !2424, line: 302, type: !2742, align: 8)
!2857 = !DILocalVariable(name: "v", scope: !2858, file: !2424, line: 302, type: !356, align: 4)
!2858 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2859 = !DILocalVariable(name: "v", scope: !2858, file: !2424, line: 302, type: !2742, align: 8)
!2860 = !DILocalVariable(name: "v", scope: !2861, file: !2424, line: 302, type: !356, align: 4)
!2861 = distinct !DILexicalBlock(scope: !2734, file: !2424, line: 297, column: 19)
!2862 = !DILocalVariable(name: "v", scope: !2861, file: !2424, line: 302, type: !2742, align: 8)
!2863 = !DILocation(line: 289, column: 19, scope: !2734)
!2864 = !DILocation(line: 302, column: 5, scope: !2734)
!2865 = !DILocation(line: 302, column: 5, scope: !2740)
!2866 = !DILocation(line: 302, column: 5, scope: !2744)
!2867 = !DILocation(line: 345, column: 2, scope: !2734)
!2868 = !DILocation(line: 302, column: 5, scope: !2747)
!2869 = !DILocation(line: 302, column: 5, scope: !2750)
!2870 = !DILocation(line: 302, column: 5, scope: !2753)
!2871 = !DILocation(line: 302, column: 5, scope: !2756)
!2872 = !DILocation(line: 302, column: 5, scope: !2759)
!2873 = !DILocation(line: 302, column: 5, scope: !2762)
!2874 = !DILocation(line: 302, column: 5, scope: !2765)
!2875 = !DILocation(line: 302, column: 5, scope: !2768)
!2876 = !DILocation(line: 302, column: 5, scope: !2771)
!2877 = !DILocation(line: 302, column: 5, scope: !2774)
!2878 = !DILocation(line: 302, column: 5, scope: !2777)
!2879 = !DILocation(line: 302, column: 5, scope: !2780)
!2880 = !DILocation(line: 302, column: 5, scope: !2783)
!2881 = !DILocation(line: 302, column: 5, scope: !2786)
!2882 = !DILocation(line: 302, column: 5, scope: !2789)
!2883 = !DILocation(line: 302, column: 5, scope: !2792)
!2884 = !DILocation(line: 302, column: 5, scope: !2795)
!2885 = !DILocation(line: 302, column: 5, scope: !2798)
!2886 = !DILocation(line: 302, column: 5, scope: !2801)
!2887 = !DILocation(line: 302, column: 5, scope: !2804)
!2888 = !DILocation(line: 302, column: 5, scope: !2807)
!2889 = !DILocation(line: 302, column: 5, scope: !2810)
!2890 = !DILocation(line: 302, column: 5, scope: !2813)
!2891 = !DILocation(line: 302, column: 5, scope: !2816)
!2892 = !DILocation(line: 302, column: 5, scope: !2819)
!2893 = !DILocation(line: 302, column: 5, scope: !2822)
!2894 = !DILocation(line: 302, column: 5, scope: !2825)
!2895 = !DILocation(line: 302, column: 5, scope: !2828)
!2896 = !DILocation(line: 302, column: 5, scope: !2831)
!2897 = !DILocation(line: 302, column: 5, scope: !2834)
!2898 = !DILocation(line: 302, column: 5, scope: !2837)
!2899 = !DILocation(line: 302, column: 5, scope: !2840)
!2900 = !DILocation(line: 302, column: 5, scope: !2843)
!2901 = !DILocation(line: 302, column: 5, scope: !2846)
!2902 = !DILocation(line: 302, column: 5, scope: !2849)
!2903 = !DILocation(line: 302, column: 5, scope: !2852)
!2904 = !DILocation(line: 302, column: 5, scope: !2855)
!2905 = !DILocation(line: 302, column: 5, scope: !2858)
!2906 = !DILocation(line: 302, column: 5, scope: !2861)
!2907 = distinct !DISubprogram(name: "catch_unwind<core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>, ()>", linkageName: "_ZN3std5panic12catch_unwind17h4585c9830b5c7ae1E", scope: !2909, file: !2908, line: 136, type: !2910, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2935, retainedNodes: !2933)
!2908 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/panic.rs", directory: "", checksumkind: CSK_MD5, checksum: "443beb753a45951a5cc529fe2f22a9c0")
!2909 = !DINamespace(name: "panic", scope: !16)
!2910 = !DISubroutineType(types: !2911)
!2911 = !{!2912, !2149}
!2912 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", scope: !877, file: !2, size: 128, align: 64, elements: !2913, templateParams: !27, identifier: "ff7327f4f565d57f588d410e9ddea48d")
!2913 = !{!2914}
!2914 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2912, file: !2, size: 128, align: 64, elements: !2915, templateParams: !27, identifier: "52bcafea47fdc093a89ce382e6a95700", discriminator: !2932)
!2915 = !{!2916, !2928}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2914, file: !2, baseType: !2917, size: 128, align: 64, extraData: i64 0)
!2917 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2912, file: !2, size: 128, align: 64, elements: !2918, templateParams: !2920, identifier: "4fc298a15573157ccb7e81565fdf9685")
!2918 = !{!2919}
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2917, file: !2, baseType: !7, align: 8)
!2920 = !{!115, !2921}
!2921 = !DITemplateTypeParameter(name: "E", type: !2922)
!2922 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !2923, templateParams: !27, identifier: "f0f31b23b3f69bd76438b25fe58ed04b")
!2923 = !{!2924, !2927}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2922, file: !2, baseType: !2925, size: 64, align: 64)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 64, align: 64, dwarfAddressSpace: 0)
!2926 = !DICompositeType(tag: DW_TAG_structure_type, name: "(dyn core::any::Any + core::marker::Send)", file: !2, align: 8, elements: !27, identifier: "eca8f7fd02b6d6b94d3c92b23b660554")
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !2922, file: !2, baseType: !185, size: 64, align: 64, offset: 64)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2914, file: !2, baseType: !2929, size: 128, align: 64)
!2929 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2912, file: !2, size: 128, align: 64, elements: !2930, templateParams: !2920, identifier: "9346a086afab40dd9cdea7a7983c393c")
!2930 = !{!2931}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2929, file: !2, baseType: !2922, size: 128, align: 64)
!2932 = !DIDerivedType(tag: DW_TAG_member, scope: !2912, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!2933 = !{!2934}
!2934 = !DILocalVariable(name: "f", arg: 1, scope: !2907, file: !2908, line: 136, type: !2149)
!2935 = !{!2936, !1063}
!2936 = !DITemplateTypeParameter(name: "F", type: !2149)
!2937 = !DILocation(line: 136, column: 55, scope: !2907)
!2938 = !DILocation(line: 137, column: 31, scope: !2907)
!2939 = !DILocation(line: 137, column: 14, scope: !2907)
!2940 = !DILocation(line: 138, column: 2, scope: !2907)
!2941 = distinct !DISubprogram(name: "with<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>, proc_macro::bridge::client::{impl#7}::with::{closure_env#0}<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::{impl#8}::with::{closure_env#0}<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::run_client::{closure#0}::{closure#0}::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>, proc_macro::bridge::buffer::Buffer>", linkageName: "_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h5ac37a28d5c34d15E", scope: !2942, file: !1997, line: 417, type: !2946, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2952, retainedNodes: !2949)
!2942 = !DICompositeType(tag: DW_TAG_structure_type, name: "LocalKey<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", scope: !92, file: !2, size: 64, align: 64, elements: !2943, templateParams: !2029, identifier: "41f73c0bbf35d1261f7d418ab0589c8e")
!2943 = !{!2944}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !2942, file: !2, baseType: !2945, size: 64, align: 64)
!2945 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "unsafe fn(core::option::Option<&mut core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>) -> core::option::Option<&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", baseType: !1999, size: 64, align: 64, dwarfAddressSpace: 0)
!2946 = !DISubroutineType(types: !2947)
!2947 = !{!285, !2948, !1971}
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::thread::local::LocalKey<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", baseType: !2942, size: 64, align: 64, dwarfAddressSpace: 0)
!2949 = !{!2950, !2951}
!2950 = !DILocalVariable(name: "self", arg: 1, scope: !2941, file: !1997, line: 417, type: !2948)
!2951 = !DILocalVariable(name: "f", arg: 2, scope: !2941, file: !1997, line: 417, type: !1971)
!2952 = !{!2030, !2953, !322}
!2953 = !DITemplateTypeParameter(name: "F", type: !1971)
!2954 = !DILocation(line: 417, column: 23, scope: !2941)
!2955 = !DILocation(line: 417, column: 38, scope: !2941)
!2956 = !DILocation(line: 421, column: 9, scope: !2941)
!2957 = !DILocation(line: 425, column: 6, scope: !2941)
!2958 = distinct !DISubprogram(name: "with<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>, proc_macro::bridge::client::run_client::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>, ()>", linkageName: "_ZN3std6thread5local17LocalKey$LT$T$GT$4with17had1af13dedc69e39E", scope: !2942, file: !1997, line: 417, type: !2959, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2964, retainedNodes: !2961)
!2959 = !DISubroutineType(types: !2960)
!2960 = !{null, !2948, !1874}
!2961 = !{!2962, !2963}
!2962 = !DILocalVariable(name: "self", arg: 1, scope: !2958, file: !1997, line: 417, type: !2948)
!2963 = !DILocalVariable(name: "f", arg: 2, scope: !2958, file: !1997, line: 417, type: !1874)
!2964 = !{!2030, !2965, !1063}
!2965 = !DITemplateTypeParameter(name: "F", type: !1874)
!2966 = !DILocation(line: 417, column: 23, scope: !2958)
!2967 = !DILocation(line: 417, column: 38, scope: !2958)
!2968 = !DILocation(line: 421, column: 23, scope: !2958)
!2969 = !DILocation(line: 421, column: 9, scope: !2958)
!2970 = !DILocation(line: 425, column: 6, scope: !2958)
!2971 = distinct !DISubprogram(name: "try_with<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>, proc_macro::bridge::client::run_client::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>, ()>", linkageName: "_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h0e0fb7125d5016c5E", scope: !2942, file: !1997, line: 439, type: !2972, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2964, retainedNodes: !2989)
!2972 = !DISubroutineType(types: !2973)
!2973 = !{!2974, !2948, !1874}
!2974 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), std::thread::local::AccessError>", scope: !877, file: !2, size: 8, align: 8, elements: !2975, templateParams: !27, identifier: "d36d6f8a3f65f615fa3ba1de8782b36c")
!2975 = !{!2976}
!2976 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2974, file: !2, size: 8, align: 8, elements: !2977, templateParams: !27, identifier: "798764f0aaf225dcf6e851654b687835", discriminator: !2988)
!2977 = !{!2978, !2984}
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2976, file: !2, baseType: !2979, size: 8, align: 8, extraData: i64 0)
!2979 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2974, file: !2, size: 8, align: 8, elements: !2980, templateParams: !2982, identifier: "c91c46ca17b77c63304672d0c3d387c9")
!2980 = !{!2981}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2979, file: !2, baseType: !7, align: 8, offset: 8)
!2982 = !{!115, !2983}
!2983 = !DITemplateTypeParameter(name: "E", type: !91)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2976, file: !2, baseType: !2985, size: 8, align: 8, extraData: i64 1)
!2985 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2974, file: !2, size: 8, align: 8, elements: !2986, templateParams: !2982, identifier: "342583d9e1a7113caac0f2d8d8ac0cdb")
!2986 = !{!2987}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2985, file: !2, baseType: !91, align: 8, offset: 8)
!2988 = !DIDerivedType(tag: DW_TAG_member, scope: !2974, file: !2, baseType: !53, size: 8, align: 8, flags: DIFlagArtificial)
!2989 = !{!2990, !2991, !2992, !2994, !3009}
!2990 = !DILocalVariable(name: "self", arg: 1, scope: !2971, file: !1997, line: 439, type: !2948)
!2991 = !DILocalVariable(name: "f", arg: 2, scope: !2971, file: !1997, line: 439, type: !1874)
!2992 = !DILocalVariable(name: "thread_local", scope: !2993, file: !1997, line: 444, type: !1042, align: 8)
!2993 = distinct !DILexicalBlock(scope: !2971, file: !1997, line: 444, column: 13)
!2994 = !DILocalVariable(name: "residual", scope: !2995, file: !1997, line: 444, type: !2996, align: 1)
!2995 = distinct !DILexicalBlock(scope: !2971, file: !1997, line: 444, column: 69)
!2996 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, std::thread::local::AccessError>", scope: !877, file: !2, align: 8, elements: !2997, templateParams: !27, identifier: "47927b8c949d0b8864645484062f13c6")
!2997 = !{!2998}
!2998 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2996, file: !2, align: 8, elements: !2999, templateParams: !27, identifier: "2f149469a7f77977fad9c66f5405fc97")
!2999 = !{!3000, !3005}
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2998, file: !2, baseType: !3001, align: 8)
!3001 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2996, file: !2, align: 8, elements: !3002, templateParams: !3004, identifier: "7baee2b44cb0972872b0dbd71b307ebf")
!3002 = !{!3003}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3001, file: !2, baseType: !2329, align: 8)
!3004 = !{!2334, !2983}
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2998, file: !2, baseType: !3006, align: 8)
!3006 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2996, file: !2, align: 8, elements: !3007, templateParams: !3004, identifier: "141d2a44c0c57f8edc569df424e0f0c4")
!3007 = !{!3008}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3006, file: !2, baseType: !91, align: 8)
!3009 = !DILocalVariable(name: "val", scope: !3010, file: !1997, line: 444, type: !1042, align: 8)
!3010 = distinct !DILexicalBlock(scope: !2971, file: !1997, line: 444, column: 32)
!3011 = !DILocation(line: 439, column: 27, scope: !2971)
!3012 = !DILocation(line: 439, column: 42, scope: !2971)
!3013 = !DILocalVariable(name: "self", scope: !3014, file: !1997, line: 444, type: !3036, align: 8)
!3014 = !DILexicalBlockFile(scope: !3015, file: !1997, discriminator: 0)
!3015 = distinct !DISubprogram(name: "branch<&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>, std::thread::local::AccessError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hbfb823c756412629E", scope: !3016, file: !2357, line: 2117, type: !3017, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3044, retainedNodes: !3050)
!3016 = !DINamespace(name: "{impl#27}", scope: !877)
!3017 = !DISubroutineType(types: !3018)
!3018 = !{!3019, !3036}
!3019 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", scope: !3020, file: !2, size: 64, align: 64, elements: !3021, templateParams: !27, identifier: "2010c4f4331d879f3f48c68e680d52c2")
!3020 = !DINamespace(name: "control_flow", scope: !507)
!3021 = !{!3022}
!3022 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3019, file: !2, size: 64, align: 64, elements: !3023, templateParams: !27, identifier: "da989934cc874caf50ab6c71fcb7129f", discriminator: !3035)
!3023 = !{!3024, !3031}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3022, file: !2, baseType: !3025, size: 64, align: 64)
!3025 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3019, file: !2, size: 64, align: 64, elements: !3026, templateParams: !3028, identifier: "2c77da080a9040cc5a6e22acc3cacf5a")
!3026 = !{!3027}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3025, file: !2, baseType: !1042, size: 64, align: 64)
!3028 = !{!3029, !3030}
!3029 = !DITemplateTypeParameter(name: "B", type: !2996)
!3030 = !DITemplateTypeParameter(name: "C", type: !1042)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3022, file: !2, baseType: !3032, size: 64, align: 64, extraData: i64 0)
!3032 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3019, file: !2, size: 64, align: 64, elements: !3033, templateParams: !3028, identifier: "8069e31c9141089e1759ebb4bad38ae9")
!3033 = !{!3034}
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3032, file: !2, baseType: !2996, align: 8)
!3035 = !DIDerivedType(tag: DW_TAG_member, scope: !3019, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!3036 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>, std::thread::local::AccessError>", scope: !877, file: !2, size: 64, align: 64, elements: !3037, templateParams: !27, identifier: "8f17295bcf33e3ca634c6d6dab0cdd85")
!3037 = !{!3038}
!3038 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3036, file: !2, size: 64, align: 64, elements: !3039, templateParams: !27, identifier: "57fe7445097532e7f9f89796b574da02", discriminator: !3049)
!3039 = !{!3040, !3045}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !3038, file: !2, baseType: !3041, size: 64, align: 64)
!3041 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !3036, file: !2, size: 64, align: 64, elements: !3042, templateParams: !3044, identifier: "657817a19ff588e2229c60b6e9b44f5b")
!3042 = !{!3043}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3041, file: !2, baseType: !1042, size: 64, align: 64)
!3044 = !{!2008, !2983}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !3038, file: !2, baseType: !3046, size: 64, align: 64, extraData: i64 0)
!3046 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !3036, file: !2, size: 64, align: 64, elements: !3047, templateParams: !3044, identifier: "fc260dc9176d24a74129eee1bbb0e05e")
!3047 = !{!3048}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3046, file: !2, baseType: !91, align: 8)
!3049 = !DIDerivedType(tag: DW_TAG_member, scope: !3036, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!3050 = !{!3013, !3051, !3054}
!3051 = !DILocalVariable(name: "v", scope: !3052, file: !1997, line: 444, type: !1042, align: 8)
!3052 = !DILexicalBlockFile(scope: !3053, file: !1997, discriminator: 0)
!3053 = distinct !DILexicalBlock(scope: !3015, file: !2357, line: 2119, column: 13)
!3054 = !DILocalVariable(name: "e", scope: !3055, file: !1997, line: 444, type: !91, align: 1)
!3055 = !DILexicalBlockFile(scope: !3056, file: !1997, discriminator: 0)
!3056 = distinct !DILexicalBlock(scope: !3015, file: !2357, line: 2120, column: 13)
!3057 = !DILocation(line: 444, column: 32, scope: !3014, inlinedAt: !3058)
!3058 = !DILocation(line: 444, column: 32, scope: !2971)
!3059 = !DILocalVariable(name: "self", scope: !3060, file: !1997, line: 444, type: !2001, align: 8)
!3060 = !DILexicalBlockFile(scope: !3061, file: !1997, discriminator: 0)
!3061 = distinct !DISubprogram(name: "ok_or<&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>, std::thread::local::AccessError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h8614303e6035cce2E", scope: !2001, file: !1137, line: 1051, type: !3062, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3044, retainedNodes: !3064)
!3062 = !DISubroutineType(types: !3063)
!3063 = !{!3036, !2001, !91}
!3064 = !{!3059, !3065, !3066}
!3065 = !DILocalVariable(name: "err", scope: !3060, file: !1997, line: 444, type: !91, align: 1)
!3066 = !DILocalVariable(name: "v", scope: !3067, file: !1997, line: 444, type: !1042, align: 8)
!3067 = !DILexicalBlockFile(scope: !3068, file: !1997, discriminator: 0)
!3068 = distinct !DILexicalBlock(scope: !3061, file: !1137, line: 1056, column: 13)
!3069 = !DILocation(line: 444, column: 32, scope: !3060, inlinedAt: !3058)
!3070 = !DILocation(line: 444, column: 69, scope: !2995)
!3071 = !DILocalVariable(name: "residual", scope: !3072, file: !1997, line: 444, type: !2996, align: 1)
!3072 = !DILexicalBlockFile(scope: !3073, file: !1997, discriminator: 0)
!3073 = distinct !DISubprogram(name: "from_residual<(), std::thread::local::AccessError, std::thread::local::AccessError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h95c3e85a3c5bea53E", scope: !2358, file: !2357, line: 2132, type: !3074, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3080, retainedNodes: !3076)
!3074 = !DISubroutineType(types: !3075)
!3075 = !{!2974, !2996, !508}
!3076 = !{!3071, !3077}
!3077 = !DILocalVariable(name: "e", scope: !3078, file: !1997, line: 444, type: !91, align: 1)
!3078 = !DILexicalBlockFile(scope: !3079, file: !1997, discriminator: 0)
!3079 = distinct !DILexicalBlock(scope: !3073, file: !2357, line: 2134, column: 13)
!3080 = !{!115, !2983, !3081}
!3081 = !DITemplateTypeParameter(name: "F", type: !91)
!3082 = !DILocation(line: 444, column: 32, scope: !3072, inlinedAt: !3083)
!3083 = !DILocation(line: 444, column: 32, scope: !2995)
!3084 = !DILocation(line: 444, column: 32, scope: !3055, inlinedAt: !3058)
!3085 = !DILocation(line: 444, column: 32, scope: !3078, inlinedAt: !3083)
!3086 = !DILocation(line: 444, column: 17, scope: !2971)
!3087 = !DILocation(line: 444, column: 45, scope: !2971)
!3088 = !DILocation(line: 447, column: 5, scope: !2971)
!3089 = !DILocation(line: 444, column: 32, scope: !3067, inlinedAt: !3058)
!3090 = !DILocation(line: 444, column: 32, scope: !3052, inlinedAt: !3058)
!3091 = !DILocation(line: 444, column: 32, scope: !3010)
!3092 = !DILocation(line: 444, column: 17, scope: !2993)
!3093 = !DILocation(line: 445, column: 16, scope: !2993)
!3094 = !DILocation(line: 447, column: 6, scope: !2971)
!3095 = !DILocation(line: 445, column: 13, scope: !2993)
!3096 = !DILocation(line: 439, column: 5, scope: !2971)
!3097 = distinct !DISubprogram(name: "try_with<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>, proc_macro::bridge::client::{impl#7}::with::{closure_env#0}<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::{impl#8}::with::{closure_env#0}<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::client::run_client::{closure#0}::{closure#0}::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>, proc_macro::bridge::buffer::Buffer>", linkageName: "_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h192ef2285605c32bE", scope: !2942, file: !1997, line: 439, type: !3098, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2952, retainedNodes: !3114)
!3098 = !DISubroutineType(types: !3099)
!3099 = !{!3100, !2948, !1971}
!3100 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>", scope: !877, file: !2, size: 320, align: 64, elements: !3101, templateParams: !27, identifier: "4f47aaffdcda62bdc47934cb597608fb")
!3101 = !{!3102}
!3102 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3100, file: !2, size: 320, align: 64, elements: !3103, templateParams: !27, identifier: "488757f9012a9687d449f22250f329c8", discriminator: !3113)
!3103 = !{!3104, !3109}
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !3102, file: !2, baseType: !3105, size: 320, align: 64)
!3105 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !3100, file: !2, size: 320, align: 64, elements: !3106, templateParams: !3108, identifier: "82d021d50a4765713f81d3f686e4b1a")
!3106 = !{!3107}
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3105, file: !2, baseType: !285, size: 320, align: 64)
!3108 = !{!1412, !2983}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !3102, file: !2, baseType: !3110, size: 320, align: 64, extraData: i64 0)
!3110 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !3100, file: !2, size: 320, align: 64, elements: !3111, templateParams: !3108, identifier: "88e568d6cc61c06596799b739233840")
!3111 = !{!3112}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3110, file: !2, baseType: !91, align: 8)
!3113 = !DIDerivedType(tag: DW_TAG_member, scope: !3100, file: !2, baseType: !71, size: 64, align: 64, offset: 192, flags: DIFlagArtificial)
!3114 = !{!3115, !3116, !3117, !3119, !3121}
!3115 = !DILocalVariable(name: "self", arg: 1, scope: !3097, file: !1997, line: 439, type: !2948)
!3116 = !DILocalVariable(name: "f", arg: 2, scope: !3097, file: !1997, line: 439, type: !1971)
!3117 = !DILocalVariable(name: "thread_local", scope: !3118, file: !1997, line: 444, type: !1042, align: 8)
!3118 = distinct !DILexicalBlock(scope: !3097, file: !1997, line: 444, column: 13)
!3119 = !DILocalVariable(name: "residual", scope: !3120, file: !1997, line: 444, type: !2996, align: 1)
!3120 = distinct !DILexicalBlock(scope: !3097, file: !1997, line: 444, column: 69)
!3121 = !DILocalVariable(name: "val", scope: !3122, file: !1997, line: 444, type: !1042, align: 8)
!3122 = distinct !DILexicalBlock(scope: !3097, file: !1997, line: 444, column: 32)
!3123 = !DILocation(line: 439, column: 27, scope: !3097)
!3124 = !DILocation(line: 439, column: 42, scope: !3097)
!3125 = !DILocalVariable(name: "self", scope: !3126, file: !1997, line: 444, type: !3036, align: 8)
!3126 = !DILexicalBlockFile(scope: !3127, file: !1997, discriminator: 0)
!3127 = distinct !DISubprogram(name: "branch<&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>, std::thread::local::AccessError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hbfb823c756412629E", scope: !3016, file: !2357, line: 2117, type: !3017, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3044, retainedNodes: !3128)
!3128 = !{!3125, !3129, !3132}
!3129 = !DILocalVariable(name: "v", scope: !3130, file: !1997, line: 444, type: !1042, align: 8)
!3130 = !DILexicalBlockFile(scope: !3131, file: !1997, discriminator: 0)
!3131 = distinct !DILexicalBlock(scope: !3127, file: !2357, line: 2119, column: 13)
!3132 = !DILocalVariable(name: "e", scope: !3133, file: !1997, line: 444, type: !91, align: 1)
!3133 = !DILexicalBlockFile(scope: !3134, file: !1997, discriminator: 0)
!3134 = distinct !DILexicalBlock(scope: !3127, file: !2357, line: 2120, column: 13)
!3135 = !DILocation(line: 444, column: 32, scope: !3126, inlinedAt: !3136)
!3136 = !DILocation(line: 444, column: 32, scope: !3097)
!3137 = !DILocalVariable(name: "self", scope: !3138, file: !1997, line: 444, type: !2001, align: 8)
!3138 = !DILexicalBlockFile(scope: !3139, file: !1997, discriminator: 0)
!3139 = distinct !DISubprogram(name: "ok_or<&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>, std::thread::local::AccessError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h8614303e6035cce2E", scope: !2001, file: !1137, line: 1051, type: !3062, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3044, retainedNodes: !3140)
!3140 = !{!3137, !3141, !3142}
!3141 = !DILocalVariable(name: "err", scope: !3138, file: !1997, line: 444, type: !91, align: 1)
!3142 = !DILocalVariable(name: "v", scope: !3143, file: !1997, line: 444, type: !1042, align: 8)
!3143 = !DILexicalBlockFile(scope: !3144, file: !1997, discriminator: 0)
!3144 = distinct !DILexicalBlock(scope: !3139, file: !1137, line: 1056, column: 13)
!3145 = !DILocation(line: 444, column: 32, scope: !3138, inlinedAt: !3136)
!3146 = !DILocation(line: 444, column: 69, scope: !3120)
!3147 = !DILocalVariable(name: "residual", scope: !3148, file: !1997, line: 444, type: !2996, align: 1)
!3148 = !DILexicalBlockFile(scope: !3149, file: !1997, discriminator: 0)
!3149 = distinct !DISubprogram(name: "from_residual<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError, std::thread::local::AccessError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf80e4acdc18576bcE", scope: !2358, file: !2357, line: 2132, type: !3150, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3156, retainedNodes: !3152)
!3150 = !DISubroutineType(types: !3151)
!3151 = !{!3100, !2996, !508}
!3152 = !{!3147, !3153}
!3153 = !DILocalVariable(name: "e", scope: !3154, file: !1997, line: 444, type: !91, align: 1)
!3154 = !DILexicalBlockFile(scope: !3155, file: !1997, discriminator: 0)
!3155 = distinct !DILexicalBlock(scope: !3149, file: !2357, line: 2134, column: 13)
!3156 = !{!1412, !2983, !3081}
!3157 = !DILocation(line: 444, column: 32, scope: !3148, inlinedAt: !3158)
!3158 = !DILocation(line: 444, column: 32, scope: !3120)
!3159 = !DILocation(line: 444, column: 32, scope: !3133, inlinedAt: !3136)
!3160 = !DILocation(line: 444, column: 32, scope: !3154, inlinedAt: !3158)
!3161 = !DILocation(line: 444, column: 17, scope: !3097)
!3162 = !DILocation(line: 444, column: 45, scope: !3097)
!3163 = !DILocation(line: 447, column: 5, scope: !3097)
!3164 = !DILocation(line: 444, column: 32, scope: !3143, inlinedAt: !3136)
!3165 = !DILocation(line: 444, column: 32, scope: !3130, inlinedAt: !3136)
!3166 = !DILocation(line: 444, column: 32, scope: !3122)
!3167 = !DILocation(line: 444, column: 17, scope: !3118)
!3168 = !DILocation(line: 445, column: 16, scope: !3118)
!3169 = !DILocation(line: 447, column: 6, scope: !3097)
!3170 = !DILocation(line: 445, column: 13, scope: !3118)
!3171 = !DILocation(line: 439, column: 5, scope: !3097)
!3172 = distinct !DISubprogram(name: "try_initialize<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>, proc_macro::bridge::client::BRIDGE_STATE::__getit::{closure_env#0}>", linkageName: "_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h4332ab060d92dd2cE", scope: !3173, file: !1997, line: 983, type: !3194, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3200, retainedNodes: !3197)
!3173 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", scope: !480, file: !2, size: 768, align: 64, elements: !3174, templateParams: !2029, identifier: "3bcc6e82a21fc16fb1b7a5991fcef78")
!3174 = !{!3175, !3185}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !3173, file: !2, baseType: !3176, size: 704, align: 64)
!3176 = !DICompositeType(tag: DW_TAG_structure_type, name: "LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", scope: !3177, file: !2, size: 704, align: 64, elements: !3178, templateParams: !2029, identifier: "ec8ca70df4e696d27f13b0bb551eed78")
!3177 = !DINamespace(name: "lazy", scope: !92)
!3178 = !{!3179}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !3176, file: !2, baseType: !3180, size: 704, align: 64)
!3180 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", scope: !271, file: !2, size: 704, align: 64, elements: !3181, templateParams: !3183, identifier: "68664136b279db3e3346a8d6eac05782")
!3181 = !{!3182}
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3180, file: !2, baseType: !2023, size: 704, align: 64)
!3183 = !{!3184}
!3184 = !DITemplateTypeParameter(name: "T", type: !2023)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "dtor_state", scope: !3173, file: !2, baseType: !3186, size: 8, align: 8, offset: 704)
!3186 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cell<std::thread::local::fast::DtorState>", scope: !271, file: !2, size: 8, align: 8, elements: !3187, templateParams: !3192, identifier: "87eb1b2404fc1cdd7bfc595bab05d10f")
!3187 = !{!3188}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3186, file: !2, baseType: !3189, size: 8, align: 8)
!3189 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeCell<std::thread::local::fast::DtorState>", scope: !271, file: !2, size: 8, align: 8, elements: !3190, templateParams: !3192, identifier: "5f2aa13b3ae4fbf767687644bde83bd7")
!3190 = !{!3191}
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3189, file: !2, baseType: !479, size: 8, align: 8)
!3192 = !{!3193}
!3193 = !DITemplateTypeParameter(name: "T", type: !479)
!3194 = !DISubroutineType(types: !3195)
!3195 = !{!2001, !3196, !2051}
!3196 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", baseType: !3173, size: 64, align: 64, dwarfAddressSpace: 0)
!3197 = !{!3198, !3199}
!3198 = !DILocalVariable(name: "self", arg: 1, scope: !3172, file: !1997, line: 983, type: !3196)
!3199 = !DILocalVariable(name: "init", arg: 2, scope: !3172, file: !1997, line: 983, type: !2051)
!3200 = !{!2030, !3201}
!3201 = !DITemplateTypeParameter(name: "F", type: !2051)
!3202 = !DILocation(line: 983, column: 52, scope: !3172)
!3203 = !DILocation(line: 983, column: 59, scope: !3172)
!3204 = !DILocation(line: 985, column: 16, scope: !3172)
!3205 = !DILocation(line: 985, column: 17, scope: !3206, inlinedAt: !3210)
!3206 = !DILexicalBlockFile(scope: !3207, file: !1997, discriminator: 0)
!3207 = distinct !DISubprogram(name: "needs_drop<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", linkageName: "_ZN4core3mem10needs_drop17hf5e9158bcf255c63E", scope: !413, file: !1128, line: 599, type: !3208, scopeLine: 599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2029, retainedNodes: !27)
!3208 = !DISubroutineType(types: !3209)
!3209 = !{!324}
!3210 = !DILocation(line: 985, column: 17, scope: !3172)
!3211 = !DILocation(line: 985, column: 52, scope: !3172)
!3212 = !DILocation(line: 991, column: 9, scope: !3172)
!3213 = !DILocation(line: 989, column: 17, scope: !3172)
!3214 = !DILocation(line: 985, column: 13, scope: !3172)
!3215 = !DILocation(line: 987, column: 31, scope: !3172)
!3216 = !DILocation(line: 987, column: 53, scope: !3172)
!3217 = !DILocation(line: 987, column: 17, scope: !3172)
!3218 = !DILocation(line: 983, column: 9, scope: !3172)
!3219 = !DILocation(line: 991, column: 10, scope: !3172)
!3220 = distinct !DISubprogram(name: "try_register_dtor<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", linkageName: "_ZN3std6thread5local4fast12Key$LT$T$GT$17try_register_dtor17h84fb030e3aa96ebbE", scope: !3173, file: !1997, line: 996, type: !3221, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2029, retainedNodes: !3223)
!3221 = !DISubroutineType(types: !3222)
!3222 = !{!324, !3196}
!3223 = !{!3224}
!3224 = !DILocalVariable(name: "self", arg: 1, scope: !3220, file: !1997, line: 996, type: !3196)
!3225 = !DILocation(line: 996, column: 37, scope: !3220)
!3226 = !DILocation(line: 997, column: 19, scope: !3220)
!3227 = !DILocalVariable(name: "self", scope: !3228, file: !1997, line: 997, type: !3232, align: 8)
!3228 = !DILexicalBlockFile(scope: !3229, file: !1997, discriminator: 0)
!3229 = distinct !DISubprogram(name: "get<std::thread::local::fast::DtorState>", linkageName: "_ZN4core4cell13Cell$LT$T$GT$3get17h2b396781a1665cedE", scope: !3186, file: !1022, line: 448, type: !3230, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3192, retainedNodes: !3233)
!3230 = !DISubroutineType(types: !3231)
!3231 = !{!479, !3232}
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::cell::Cell<std::thread::local::fast::DtorState>", baseType: !3186, size: 64, align: 64, dwarfAddressSpace: 0)
!3233 = !{!3227}
!3234 = !DILocation(line: 997, column: 19, scope: !3228, inlinedAt: !3226)
!3235 = !DILocalVariable(name: "self", scope: !3236, file: !1997, line: 997, type: !3241, align: 8)
!3236 = !DILexicalBlockFile(scope: !3237, file: !1997, discriminator: 0)
!3237 = distinct !DISubprogram(name: "get<std::thread::local::fast::DtorState>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h61f031b803bd9714E", scope: !3189, file: !1022, line: 1934, type: !3238, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3192, retainedNodes: !3242)
!3238 = !DISubroutineType(types: !3239)
!3239 = !{!3240, !3241}
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::thread::local::fast::DtorState", baseType: !479, size: 64, align: 64, dwarfAddressSpace: 0)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::cell::UnsafeCell<std::thread::local::fast::DtorState>", baseType: !3189, size: 64, align: 64, dwarfAddressSpace: 0)
!3242 = !{!3235}
!3243 = !DILocation(line: 997, column: 19, scope: !3236, inlinedAt: !3244)
!3244 = !DILocation(line: 451, column: 19, scope: !3229, inlinedAt: !3226)
!3245 = !{i8 0, i8 3}
!3246 = !DILocation(line: 997, column: 13, scope: !3220)
!3247 = !DILocation(line: 1004, column: 44, scope: !3220)
!3248 = !DILocation(line: 1004, column: 30, scope: !3220)
!3249 = !DILocation(line: 1010, column: 21, scope: !3220)
!3250 = !DILocation(line: 1012, column: 47, scope: !3220)
!3251 = !DILocation(line: 1014, column: 10, scope: !3220)
!3252 = !DILocation(line: 1005, column: 21, scope: !3220)
!3253 = !DILocalVariable(name: "self", scope: !3254, file: !1997, line: 1005, type: !3232, align: 8)
!3254 = !DILexicalBlockFile(scope: !3255, file: !1997, discriminator: 0)
!3255 = distinct !DISubprogram(name: "set<std::thread::local::fast::DtorState>", linkageName: "_ZN4core4cell13Cell$LT$T$GT$3set17hfa003e83e12ae994E", scope: !3186, file: !1022, line: 362, type: !3256, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3192, retainedNodes: !3258)
!3256 = !DISubroutineType(types: !3257)
!3257 = !{null, !3232, !479}
!3258 = !{!3253, !3259, !3260}
!3259 = !DILocalVariable(name: "val", scope: !3254, file: !1997, line: 1005, type: !479, align: 1)
!3260 = !DILocalVariable(name: "old", scope: !3261, file: !1997, line: 1005, type: !479, align: 1)
!3261 = !DILexicalBlockFile(scope: !3262, file: !1997, discriminator: 0)
!3262 = distinct !DILexicalBlock(scope: !3255, file: !1022, line: 363, column: 9)
!3263 = !DILocation(line: 1005, column: 21, scope: !3254, inlinedAt: !3252)
!3264 = !DILocation(line: 1005, column: 21, scope: !3261, inlinedAt: !3252)
!3265 = !DILocation(line: 1006, column: 21, scope: !3220)
!3266 = distinct !DISubprogram(name: "get<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>, proc_macro::bridge::client::BRIDGE_STATE::__getit::{closure_env#0}>", linkageName: "_ZN3std6thread5local4fast12Key$LT$T$GT$3get17hec36f08b67c44b0bE", scope: !3173, file: !1997, line: 959, type: !3194, scopeLine: 959, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3200, retainedNodes: !3267)
!3267 = !{!3268, !3269, !3270}
!3268 = !DILocalVariable(name: "self", arg: 1, scope: !3266, file: !1997, line: 959, type: !3196)
!3269 = !DILocalVariable(name: "init", arg: 2, scope: !3266, file: !1997, line: 959, type: !2051)
!3270 = !DILocalVariable(name: "val", scope: !3271, file: !1997, line: 969, type: !1042, align: 8)
!3271 = distinct !DILexicalBlock(scope: !3266, file: !1997, line: 969, column: 21)
!3272 = !DILocation(line: 959, column: 45, scope: !3266)
!3273 = !DILocation(line: 959, column: 52, scope: !3266)
!3274 = !DILocation(line: 968, column: 23, scope: !3266)
!3275 = !DILocation(line: 973, column: 9, scope: !3266)
!3276 = !DILocation(line: 968, column: 17, scope: !3266)
!3277 = !DILocation(line: 970, column: 49, scope: !3266)
!3278 = !DILocation(line: 970, column: 29, scope: !3266)
!3279 = !DILocation(line: 969, column: 26, scope: !3266)
!3280 = !DILocation(line: 969, column: 26, scope: !3271)
!3281 = !DILocation(line: 969, column: 34, scope: !3271)
!3282 = !DILocation(line: 969, column: 42, scope: !3266)
!3283 = !DILocation(line: 970, column: 53, scope: !3266)
!3284 = !DILocation(line: 959, column: 9, scope: !3266)
!3285 = !DILocation(line: 973, column: 10, scope: !3266)
!3286 = distinct !DISubprogram(name: "destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", linkageName: "_ZN3std6thread5local4fast13destroy_value17h9e2a9ba8c1278b5aE", scope: !480, file: !1997, line: 1017, type: !3287, scopeLine: 1017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2029, retainedNodes: !3289)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{null, !289}
!3289 = !{!3290, !3291, !3294}
!3290 = !DILocalVariable(name: "ptr", arg: 1, scope: !3286, file: !1997, line: 1017, type: !289)
!3291 = !DILocalVariable(name: "ptr", scope: !3292, file: !1997, line: 1018, type: !3293, align: 8)
!3292 = distinct !DILexicalBlock(scope: !3286, file: !1997, line: 1018, column: 9)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::thread::local::fast::Key<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", baseType: !3173, size: 64, align: 64, dwarfAddressSpace: 0)
!3294 = !DILocalVariable(name: "value", scope: !3295, file: !1997, line: 1031, type: !2023, align: 8)
!3295 = distinct !DILexicalBlock(scope: !3292, file: !1997, line: 1031, column: 13)
!3296 = !DILocation(line: 1017, column: 43, scope: !3286)
!3297 = !DILocation(line: 1031, column: 17, scope: !3295)
!3298 = !DILocalVariable(name: "_x", scope: !3299, file: !1997, line: 1033, type: !2023, align: 8)
!3299 = !DILexicalBlockFile(scope: !3300, file: !1997, discriminator: 0)
!3300 = distinct !DISubprogram(name: "drop<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", linkageName: "_ZN4core3mem4drop17h1109192aab46221aE", scope: !413, file: !1128, line: 988, type: !3301, scopeLine: 988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3183, retainedNodes: !3303)
!3301 = !DISubroutineType(types: !3302)
!3302 = !{null, !2023}
!3303 = !{!3298}
!3304 = !DILocation(line: 1033, column: 13, scope: !3299, inlinedAt: !3305)
!3305 = !DILocation(line: 1033, column: 13, scope: !3295)
!3306 = !DILocation(line: 1018, column: 19, scope: !3286)
!3307 = !DILocation(line: 1018, column: 13, scope: !3292)
!3308 = !DILocation(line: 1031, column: 25, scope: !3292)
!3309 = !DILocation(line: 1017, column: 5, scope: !3286)
!3310 = !DILocation(line: 1032, column: 13, scope: !3295)
!3311 = !DILocalVariable(name: "self", scope: !3312, file: !1997, line: 1032, type: !3232, align: 8)
!3312 = !DILexicalBlockFile(scope: !3313, file: !1997, discriminator: 0)
!3313 = distinct !DISubprogram(name: "set<std::thread::local::fast::DtorState>", linkageName: "_ZN4core4cell13Cell$LT$T$GT$3set17hfa003e83e12ae994E", scope: !3186, file: !1022, line: 362, type: !3256, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3192, retainedNodes: !3314)
!3314 = !{!3311, !3315, !3316}
!3315 = !DILocalVariable(name: "val", scope: !3312, file: !1997, line: 1032, type: !479, align: 1)
!3316 = !DILocalVariable(name: "old", scope: !3317, file: !1997, line: 1032, type: !479, align: 1)
!3317 = !DILexicalBlockFile(scope: !3318, file: !1997, discriminator: 0)
!3318 = distinct !DILexicalBlock(scope: !3313, file: !1022, line: 363, column: 9)
!3319 = !DILocation(line: 1032, column: 13, scope: !3312, inlinedAt: !3310)
!3320 = !DILocation(line: 1032, column: 13, scope: !3317, inlinedAt: !3310)
!3321 = !DILocation(line: 1033, column: 18, scope: !3295)
!3322 = !DILocation(line: 1035, column: 6, scope: !3286)
!3323 = distinct !DISubprogram(name: "initialize<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>, proc_macro::bridge::client::BRIDGE_STATE::__getit::{closure_env#0}>", linkageName: "_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$10initialize17hb4145435b005afdcE", scope: !3176, file: !1997, line: 806, type: !3324, scopeLine: 806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3200, retainedNodes: !3327)
!3324 = !DISubroutineType(types: !3325)
!3325 = !{!1042, !3326, !2051}
!3326 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", baseType: !3176, size: 64, align: 64, dwarfAddressSpace: 0)
!3327 = !{!3328, !3329, !3330, !3332, !3335}
!3328 = !DILocalVariable(name: "self", arg: 1, scope: !3323, file: !1997, line: 806, type: !3326)
!3329 = !DILocalVariable(name: "init", arg: 2, scope: !3323, file: !1997, line: 806, type: !2051)
!3330 = !DILocalVariable(name: "value", scope: !3331, file: !1997, line: 809, type: !979, align: 8)
!3331 = distinct !DILexicalBlock(scope: !3323, file: !1997, line: 809, column: 13)
!3332 = !DILocalVariable(name: "ptr", scope: !3333, file: !1997, line: 810, type: !3334, align: 8)
!3333 = distinct !DILexicalBlock(scope: !3331, file: !1997, line: 810, column: 13)
!3334 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", baseType: !2023, size: 64, align: 64, dwarfAddressSpace: 0)
!3335 = !DILocalVariable(name: "x", scope: !3336, file: !1997, line: 843, type: !1042, align: 8)
!3336 = distinct !DILexicalBlock(scope: !3333, file: !1997, line: 843, column: 21)
!3337 = !DILocation(line: 806, column: 52, scope: !3323)
!3338 = !DILocation(line: 806, column: 59, scope: !3323)
!3339 = !DILocation(line: 809, column: 17, scope: !3331)
!3340 = !DILocation(line: 809, column: 25, scope: !3323)
!3341 = !DILocation(line: 810, column: 23, scope: !3331)
!3342 = !DILocalVariable(name: "self", scope: !3343, file: !1997, line: 810, type: !3347, align: 8)
!3343 = !DILexicalBlockFile(scope: !3344, file: !1997, discriminator: 0)
!3344 = distinct !DISubprogram(name: "get<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h4dc94d980651d673E", scope: !3180, file: !1022, line: 1934, type: !3345, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3183, retainedNodes: !3348)
!3345 = !DISubroutineType(types: !3346)
!3346 = !{!3334, !3347}
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::cell::UnsafeCell<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", baseType: !3180, size: 64, align: 64, dwarfAddressSpace: 0)
!3348 = !{!3342}
!3349 = !DILocation(line: 810, column: 23, scope: !3343, inlinedAt: !3341)
!3350 = !DILocation(line: 810, column: 17, scope: !3333)
!3351 = !DILocation(line: 830, column: 54, scope: !3333)
!3352 = !DILocation(line: 830, column: 49, scope: !3333)
!3353 = !DILocation(line: 830, column: 25, scope: !3333)
!3354 = !DILocation(line: 847, column: 9, scope: !3323)
!3355 = !DILocation(line: 830, column: 61, scope: !3333)
!3356 = !DILocation(line: 842, column: 23, scope: !3333)
!3357 = !DILocation(line: 842, column: 17, scope: !3333)
!3358 = !DILocation(line: 806, column: 9, scope: !3323)
!3359 = !DILocation(line: 844, column: 29, scope: !3360, inlinedAt: !3362)
!3360 = !DILexicalBlockFile(scope: !3361, file: !1997, discriminator: 0)
!3361 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h1dd216e2b0f4e4baE", scope: !2412, file: !2411, line: 100, type: !1320, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !27)
!3362 = !DILocation(line: 844, column: 29, scope: !3333)
!3363 = !DILocation(line: 843, column: 26, scope: !3333)
!3364 = !DILocation(line: 843, column: 26, scope: !3336)
!3365 = !DILocation(line: 847, column: 10, scope: !3323)
!3366 = distinct !DISubprogram(name: "get<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", linkageName: "_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$3get17h30901762845eb534E", scope: !3176, file: !1997, line: 796, type: !3367, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2029, retainedNodes: !3369)
!3367 = !DISubroutineType(types: !3368)
!3368 = !{!2001, !3326}
!3369 = !{!3370}
!3370 = !DILocalVariable(name: "self", arg: 1, scope: !3366, file: !1997, line: 796, type: !3326)
!3371 = !DILocation(line: 796, column: 27, scope: !3366)
!3372 = !DILocation(line: 801, column: 24, scope: !3366)
!3373 = !DILocalVariable(name: "self", scope: !3374, file: !1997, line: 801, type: !3347, align: 8)
!3374 = !DILexicalBlockFile(scope: !3375, file: !1997, discriminator: 0)
!3375 = distinct !DISubprogram(name: "get<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h4dc94d980651d673E", scope: !3180, file: !1022, line: 1934, type: !3345, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3183, retainedNodes: !3376)
!3376 = !{!3373}
!3377 = !DILocation(line: 801, column: 24, scope: !3374, inlinedAt: !3372)
!3378 = !DILocation(line: 801, column: 22, scope: !3366)
!3379 = !DILocalVariable(name: "self", scope: !3380, file: !1997, line: 801, type: !3384, align: 8)
!3380 = !DILexicalBlockFile(scope: !3381, file: !1997, discriminator: 0)
!3381 = distinct !DISubprogram(name: "as_ref<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", linkageName: "_ZN4core6option15Option$LT$T$GT$6as_ref17hfc8c8dc02fcd9d16E", scope: !2023, file: !1137, line: 626, type: !3382, scopeLine: 626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2029, retainedNodes: !3385)
!3382 = !DISubroutineType(types: !3383)
!3383 = !{!2001, !3384}
!3384 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", baseType: !2023, size: 64, align: 64, dwarfAddressSpace: 0)
!3385 = !{!3379, !3386}
!3386 = !DILocalVariable(name: "x", scope: !3387, file: !1997, line: 801, type: !1042, align: 8)
!3387 = !DILexicalBlockFile(scope: !3388, file: !1997, discriminator: 0)
!3388 = distinct !DILexicalBlock(scope: !3381, file: !1137, line: 628, column: 13)
!3389 = !DILocation(line: 801, column: 22, scope: !3380, inlinedAt: !3378)
!3390 = !DILocation(line: 801, column: 22, scope: !3387, inlinedAt: !3378)
!3391 = !DILocation(line: 802, column: 10, scope: !3366)
!3392 = distinct !DISubprogram(name: "take<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", linkageName: "_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$4take17h63535b62087b3b82E", scope: !3176, file: !1997, line: 853, type: !3393, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2029, retainedNodes: !3396)
!3393 = !DISubroutineType(types: !3394)
!3394 = !{!2023, !3395}
!3395 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", baseType: !3176, size: 64, align: 64, dwarfAddressSpace: 0)
!3396 = !{!3397}
!3397 = !DILocalVariable(name: "self", arg: 1, scope: !3392, file: !1997, line: 853, type: !3395)
!3398 = !DILocation(line: 853, column: 28, scope: !3392)
!3399 = !DILocation(line: 855, column: 24, scope: !3392)
!3400 = !DILocalVariable(name: "self", scope: !3401, file: !1997, line: 855, type: !3347, align: 8)
!3401 = !DILexicalBlockFile(scope: !3402, file: !1997, discriminator: 0)
!3402 = distinct !DISubprogram(name: "get<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h4dc94d980651d673E", scope: !3180, file: !1022, line: 1934, type: !3345, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3183, retainedNodes: !3403)
!3403 = !{!3400}
!3404 = !DILocation(line: 855, column: 24, scope: !3401, inlinedAt: !3399)
!3405 = !DILocation(line: 855, column: 22, scope: !3392)
!3406 = !DILocalVariable(name: "self", scope: !3407, file: !1997, line: 855, type: !2022, align: 8)
!3407 = !DILexicalBlockFile(scope: !3408, file: !1997, discriminator: 0)
!3408 = distinct !DISubprogram(name: "take<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17h62175e7635208b0fE", scope: !2023, file: !1137, line: 1574, type: !2068, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2029, retainedNodes: !3409)
!3409 = !{!3406}
!3410 = !DILocation(line: 855, column: 22, scope: !3407, inlinedAt: !3405)
!3411 = !DILocation(line: 856, column: 10, scope: !3392)
!3412 = distinct !DISubprogram(name: "begin_panic<alloc::string::String>", linkageName: "_ZN3std9panicking11begin_panic17hed299a0b07cec048E", scope: !15, file: !3413, line: 610, type: !3414, scopeLine: 610, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3420, retainedNodes: !3416)
!3413 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/panicking.rs", directory: "", checksumkind: CSK_MD5, checksum: "458921563954eb00514d12aed6f47a06")
!3414 = !DISubroutineType(types: !3415)
!3415 = !{null, !30, !508}
!3416 = !{!3417, !3418}
!3417 = !DILocalVariable(name: "msg", arg: 1, scope: !3412, file: !3413, line: 610, type: !30)
!3418 = !DILocalVariable(name: "loc", scope: !3419, file: !3413, line: 615, type: !508, align: 8)
!3419 = distinct !DILexicalBlock(scope: !3412, file: !3413, line: 615, column: 5)
!3420 = !{!3421}
!3421 = !DITemplateTypeParameter(name: "M", type: !30)
!3422 = !DILocation(line: 610, column: 41, scope: !3412)
!3423 = !DILocation(line: 611, column: 5, scope: !3412)
!3424 = !DILocation(line: 615, column: 15, scope: !3425, inlinedAt: !3430)
!3425 = !DILexicalBlockFile(scope: !3426, file: !3413, discriminator: 0)
!3426 = distinct !DISubprogram(name: "caller", linkageName: "_ZN4core5panic8location8Location6caller17h4e183f0e54f45ad3E", scope: !509, file: !3427, line: 87, type: !3428, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !27)
!3427 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/panic/location.rs", directory: "", checksumkind: CSK_MD5, checksum: "231a628cd3f0fd4f225c41bb55e2fc7d")
!3428 = !DISubroutineType(types: !3429)
!3429 = !{!508, !508}
!3430 = !DILocation(line: 615, column: 15, scope: !3412)
!3431 = !DILocation(line: 615, column: 9, scope: !3419)
!3432 = !DILocation(line: 616, column: 69, scope: !3419)
!3433 = !DILocation(line: 616, column: 12, scope: !3419)
!3434 = !DILocation(line: 651, column: 1, scope: !3412)
!3435 = !DILocation(line: 610, column: 1, scope: !3412)
!3436 = distinct !DISubprogram(name: "new<alloc::string::String>", linkageName: "_ZN3std9panicking11begin_panic21PanicPayload$LT$A$GT$3new17h47c4a722f0a2b18fE", scope: !13, file: !3413, line: 625, type: !3437, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !72, retainedNodes: !3439)
!3437 = !DISubroutineType(types: !3438)
!3438 = !{!13, !30}
!3439 = !{!3440}
!3440 = !DILocalVariable(name: "inner", arg: 1, scope: !3436, file: !3413, line: 625, type: !30)
!3441 = !DILocation(line: 625, column: 16, scope: !3436)
!3442 = !DILocation(line: 626, column: 40, scope: !3436)
!3443 = !DILocation(line: 626, column: 35, scope: !3436)
!3444 = !DILocation(line: 626, column: 13, scope: !3436)
!3445 = !DILocation(line: 627, column: 10, scope: !3436)
!3446 = distinct !DISubprogram(name: "{closure#0}<alloc::string::String>", linkageName: "_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17h9299bb9144d5d9faE", scope: !14, file: !3413, line: 616, type: !2392, scopeLine: 616, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3420, retainedNodes: !3447)
!3447 = !{!3448, !3449}
!3448 = !DILocalVariable(name: "msg", scope: !3446, file: !3413, line: 610, type: !30, align: 8)
!3449 = !DILocalVariable(name: "loc", scope: !3446, file: !3413, line: 615, type: !508, align: 8)
!3450 = !DILocation(line: 610, column: 41, scope: !3446)
!3451 = !DILocation(line: 615, column: 9, scope: !3446)
!3452 = !DILocation(line: 617, column: 53, scope: !3446)
!3453 = !DILocation(line: 617, column: 35, scope: !3446)
!3454 = !DILocation(line: 617, column: 30, scope: !3446)
!3455 = !DILocation(line: 617, column: 59, scope: !3446)
!3456 = !DILocation(line: 617, column: 65, scope: !3446)
!3457 = !DILocation(line: 617, column: 9, scope: !3446)
!3458 = !DILocation(line: 618, column: 5, scope: !3446)
!3459 = !DILocation(line: 616, column: 69, scope: !3446)
!3460 = distinct !DISubprogram(name: "try<(), core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>", linkageName: "_ZN3std9panicking3try17h047ed4ea129d31ccE", scope: !15, file: !3413, line: 412, type: !2910, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3486, retainedNodes: !3461)
!3461 = !{!3462, !3463, !3484}
!3462 = !DILocalVariable(name: "f", arg: 1, scope: !3460, file: !3413, line: 412, type: !2149)
!3463 = !DILocalVariable(name: "data", scope: !3464, file: !3413, line: 443, type: !3465, align: 8)
!3464 = distinct !DILexicalBlock(scope: !3460, file: !3413, line: 443, column: 5)
!3465 = !DICompositeType(tag: DW_TAG_union_type, name: "Data<core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>, ()>", scope: !3466, file: !2, size: 320, align: 64, elements: !3467, templateParams: !2935, identifier: "166fbd7167d081f64024fb29cc900303")
!3466 = !DINamespace(name: "try", scope: !15)
!3467 = !{!3468, !3474, !3478}
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3465, file: !2, baseType: !3469, size: 320, align: 64)
!3469 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>", scope: !1164, file: !2, size: 320, align: 64, elements: !3470, templateParams: !3472, identifier: "19b8f9a333683848b3f47d2623f5fd5c")
!3470 = !{!3471}
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3469, file: !2, baseType: !2149, size: 320, align: 64)
!3472 = !{!3473}
!3473 = !DITemplateTypeParameter(name: "T", type: !2149)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3465, file: !2, baseType: !3475, align: 8)
!3475 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<()>", scope: !1164, file: !2, align: 8, elements: !3476, templateParams: !114, identifier: "2332d344a4f847ff5ab962c871b62adc")
!3476 = !{!3477}
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3475, file: !2, baseType: !7, align: 8)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3465, file: !2, baseType: !3479, size: 128, align: 64)
!3479 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", scope: !1164, file: !2, size: 128, align: 64, elements: !3480, templateParams: !3482, identifier: "f9931835db7a14cbc337c31c6ef49cd3")
!3480 = !{!3481}
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3479, file: !2, baseType: !2922, size: 128, align: 64)
!3482 = !{!3483}
!3483 = !DITemplateTypeParameter(name: "T", type: !2922)
!3484 = !DILocalVariable(name: "data_ptr", scope: !3485, file: !3413, line: 445, type: !289, align: 8)
!3485 = distinct !DILexicalBlock(scope: !3464, file: !3413, line: 445, column: 5)
!3486 = !{!1063, !2936}
!3487 = !DILocation(line: 412, column: 42, scope: !3460)
!3488 = !DILocation(line: 443, column: 9, scope: !3464)
!3489 = !DILocalVariable(name: "value", scope: !3490, file: !3413, line: 443, type: !2149, align: 8)
!3490 = !DILexicalBlockFile(scope: !3491, file: !3413, discriminator: 0)
!3491 = distinct !DISubprogram(name: "new<core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h3446a21ca5d9d023E", scope: !3469, file: !1162, line: 70, type: !3492, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3472, retainedNodes: !3494)
!3492 = !DISubroutineType(types: !3493)
!3493 = !{!3469, !2149}
!3494 = !{!3489}
!3495 = !DILocation(line: 443, column: 30, scope: !3490, inlinedAt: !3496)
!3496 = !DILocation(line: 443, column: 30, scope: !3460)
!3497 = !DILocalVariable(name: "slot", scope: !3498, file: !3413, line: 457, type: !3475, align: 1)
!3498 = !DILexicalBlockFile(scope: !3499, file: !3413, discriminator: 0)
!3499 = distinct !DISubprogram(name: "into_inner<()>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hc9d7b20021afa9a2E", scope: !3475, file: !1162, line: 88, type: !3500, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !114, retainedNodes: !3502)
!3500 = !DISubroutineType(types: !3501)
!3501 = !{null, !3475}
!3502 = !{!3497}
!3503 = !DILocation(line: 457, column: 16, scope: !3498, inlinedAt: !3504)
!3504 = !DILocation(line: 457, column: 16, scope: !3485)
!3505 = !DILocation(line: 443, column: 48, scope: !3460)
!3506 = !DILocation(line: 443, column: 20, scope: !3460)
!3507 = !DILocation(line: 445, column: 20, scope: !3464)
!3508 = !DILocation(line: 445, column: 9, scope: !3485)
!3509 = !DILocation(line: 456, column: 19, scope: !3485)
!3510 = !DILocation(line: 457, column: 13, scope: !3485)
!3511 = !DILocation(line: 456, column: 16, scope: !3485)
!3512 = !DILocation(line: 459, column: 42, scope: !3485)
!3513 = !DILocalVariable(name: "slot", scope: !3514, file: !3413, line: 459, type: !3479, align: 8)
!3514 = !DILexicalBlockFile(scope: !3515, file: !3413, discriminator: 0)
!3515 = distinct !DISubprogram(name: "into_inner<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h4f8ab381b5f876acE", scope: !3479, file: !1162, line: 88, type: !3516, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3482, retainedNodes: !3518)
!3516 = !DISubroutineType(types: !3517)
!3517 = !{!2922, !3479}
!3518 = !{!3513}
!3519 = !DILocation(line: 459, column: 17, scope: !3514, inlinedAt: !3520)
!3520 = !DILocation(line: 459, column: 17, scope: !3485)
!3521 = !DILocation(line: 459, column: 13, scope: !3485)
!3522 = !DILocation(line: 521, column: 2, scope: !3460)
!3523 = distinct !DISubprogram(name: "do_call<core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>, ()>", linkageName: "_ZN3std9panicking3try7do_call17hb50dabacbcc9832eE", scope: !3466, file: !3413, line: 486, type: !3287, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2935, retainedNodes: !3524)
!3524 = !{!3525, !3526, !3529, !3532}
!3525 = !DILocalVariable(name: "data", arg: 1, scope: !3523, file: !3413, line: 486, type: !289)
!3526 = !DILocalVariable(name: "data", scope: !3527, file: !3413, line: 489, type: !3528, align: 8)
!3527 = distinct !DILexicalBlock(scope: !3523, file: !3413, line: 489, column: 13)
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>, ()>", baseType: !3465, size: 64, align: 64, dwarfAddressSpace: 0)
!3529 = !DILocalVariable(name: "data", scope: !3530, file: !3413, line: 490, type: !3531, align: 8)
!3530 = distinct !DILexicalBlock(scope: !3527, file: !3413, line: 490, column: 13)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>, ()>", baseType: !3465, size: 64, align: 64, dwarfAddressSpace: 0)
!3532 = !DILocalVariable(name: "f", scope: !3533, file: !3413, line: 491, type: !2149, align: 8)
!3533 = distinct !DILexicalBlock(scope: !3530, file: !3413, line: 491, column: 13)
!3534 = !DILocation(line: 486, column: 37, scope: !3523)
!3535 = !DILocation(line: 491, column: 17, scope: !3533)
!3536 = !DILocalVariable(name: "value", scope: !3537, file: !3413, line: 492, type: !7, align: 1)
!3537 = !DILexicalBlockFile(scope: !3538, file: !3413, discriminator: 0)
!3538 = distinct !DISubprogram(name: "new<()>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hab9416e80b48861fE", scope: !3475, file: !1162, line: 70, type: !2413, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !114, retainedNodes: !3539)
!3539 = !{!3536}
!3540 = !DILocation(line: 492, column: 22, scope: !3537, inlinedAt: !3541)
!3541 = !DILocation(line: 492, column: 22, scope: !3533)
!3542 = !DILocalVariable(name: "tmp", scope: !3543, file: !3413, line: 491, type: !3552, align: 8)
!3543 = !DILexicalBlockFile(scope: !3544, file: !3413, discriminator: 0)
!3544 = distinct !DILexicalBlock(scope: !3545, file: !562, line: 1107, column: 5)
!3545 = distinct !DISubprogram(name: "read<core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>", linkageName: "_ZN4core3ptr4read17hc0d31940ee7e0483E", scope: !45, file: !562, line: 1099, type: !3546, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3472, retainedNodes: !3549)
!3546 = !DISubroutineType(types: !3547)
!3547 = !{!2149, !3548}
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>", baseType: !2149, size: 64, align: 64, dwarfAddressSpace: 0)
!3549 = !{!3550, !3542}
!3550 = !DILocalVariable(name: "src", scope: !3551, file: !3413, line: 491, type: !3548, align: 8)
!3551 = !DILexicalBlockFile(scope: !3545, file: !3413, discriminator: 0)
!3552 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>", scope: !1294, file: !2, size: 320, align: 64, elements: !3553, templateParams: !3472, identifier: "8f8133f88cfa8d149d3d88840e8d649b")
!3553 = !{!3554, !3555}
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !3552, file: !2, baseType: !7, align: 8)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3552, file: !2, baseType: !3469, size: 320, align: 64)
!3556 = !DILocation(line: 491, column: 21, scope: !3543, inlinedAt: !3557)
!3557 = !DILocation(line: 113, column: 18, scope: !3558, inlinedAt: !3565)
!3558 = distinct !DISubprogram(name: "take<core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$4take17h8240d9ef12c402b8E", scope: !3469, file: !1162, line: 110, type: !3559, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3472, retainedNodes: !3562)
!3559 = !DISubroutineType(types: !3560)
!3560 = !{!2149, !3561}
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>", baseType: !3469, size: 64, align: 64, dwarfAddressSpace: 0)
!3562 = !{!3563}
!3563 = !DILocalVariable(name: "slot", scope: !3564, file: !3413, line: 491, type: !3561, align: 8)
!3564 = !DILexicalBlockFile(scope: !3558, file: !3413, discriminator: 0)
!3565 = !DILocation(line: 491, column: 21, scope: !3530)
!3566 = !DILocalVariable(name: "self", scope: !3567, file: !3413, line: 491, type: !3552, align: 8)
!3567 = !DILexicalBlockFile(scope: !3568, file: !3413, discriminator: 0)
!3568 = distinct !DISubprogram(name: "assume_init<core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hb87ce6f5771370ceE", scope: !3552, file: !1292, line: 629, type: !3569, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3472, retainedNodes: !3571)
!3569 = !DISubroutineType(types: !3570)
!3570 = !{!2149, !3552, !508}
!3571 = !{!3566}
!3572 = !DILocation(line: 491, column: 21, scope: !3567, inlinedAt: !3573)
!3573 = !DILocation(line: 1116, column: 9, scope: !3544, inlinedAt: !3557)
!3574 = !DILocalVariable(name: "slot", scope: !3575, file: !3413, line: 491, type: !3469, align: 8)
!3575 = !DILexicalBlockFile(scope: !3576, file: !3413, discriminator: 0)
!3576 = distinct !DISubprogram(name: "into_inner<core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h3d729485a272c364E", scope: !3469, file: !1162, line: 88, type: !3577, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3472, retainedNodes: !3579)
!3577 = !DISubroutineType(types: !3578)
!3578 = !{!2149, !3469}
!3579 = !{!3574}
!3580 = !DILocation(line: 491, column: 21, scope: !3575, inlinedAt: !3581)
!3581 = !DILocation(line: 634, column: 13, scope: !3568, inlinedAt: !3573)
!3582 = !DILocation(line: 489, column: 24, scope: !3523)
!3583 = !DILocation(line: 489, column: 17, scope: !3527)
!3584 = !DILocation(line: 490, column: 24, scope: !3527)
!3585 = !DILocation(line: 490, column: 17, scope: !3530)
!3586 = !DILocation(line: 491, column: 40, scope: !3530)
!3587 = !DILocation(line: 491, column: 21, scope: !3564, inlinedAt: !3565)
!3588 = !DILocation(line: 491, column: 21, scope: !3551, inlinedAt: !3557)
!3589 = !DILocation(line: 491, column: 21, scope: !3590, inlinedAt: !3594)
!3590 = !DILexicalBlockFile(scope: !3591, file: !3413, discriminator: 0)
!3591 = distinct !DISubprogram(name: "uninit<core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h45949f7b1b020291E", scope: !3552, file: !1292, line: 320, type: !3592, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3472, retainedNodes: !27)
!3592 = !DISubroutineType(types: !3593)
!3593 = !{!3552}
!3594 = !DILocation(line: 1107, column: 19, scope: !3545, inlinedAt: !3557)
!3595 = !DILocalVariable(name: "self", scope: !3596, file: !3413, line: 491, type: !3601, align: 8)
!3596 = !DILexicalBlockFile(scope: !3597, file: !3413, discriminator: 0)
!3597 = distinct !DISubprogram(name: "as_mut_ptr<core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hc729e05ecf9f3f40E", scope: !3552, file: !1292, line: 574, type: !3598, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3472, retainedNodes: !3602)
!3598 = !DISubroutineType(types: !3599)
!3599 = !{!3600, !3601}
!3600 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>", baseType: !2149, size: 64, align: 64, dwarfAddressSpace: 0)
!3601 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>", baseType: !3552, size: 64, align: 64, dwarfAddressSpace: 0)
!3602 = !{!3595}
!3603 = !DILocation(line: 491, column: 21, scope: !3596, inlinedAt: !3604)
!3604 = !DILocation(line: 1115, column: 34, scope: !3544, inlinedAt: !3557)
!3605 = !DILocation(line: 492, column: 40, scope: !3533)
!3606 = !DILocation(line: 492, column: 13, scope: !3533)
!3607 = !DILocation(line: 494, column: 6, scope: !3523)
!3608 = distinct !DISubprogram(name: "do_catch<core::panic::unwind_safe::AssertUnwindSafe<proc_macro::bridge::client::run_client::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>, ()>", linkageName: "_ZN3std9panicking3try8do_catch17h5a46316d0e807170E", scope: !3466, file: !3413, line: 508, type: !3609, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2935, retainedNodes: !3611)
!3609 = !DISubroutineType(types: !3610)
!3610 = !{null, !289, !289}
!3611 = !{!3612, !3613, !3614, !3616, !3618}
!3612 = !DILocalVariable(name: "data", arg: 1, scope: !3608, file: !3413, line: 508, type: !289)
!3613 = !DILocalVariable(name: "payload", arg: 2, scope: !3608, file: !3413, line: 508, type: !289)
!3614 = !DILocalVariable(name: "data", scope: !3615, file: !3413, line: 515, type: !3528, align: 8)
!3615 = distinct !DILexicalBlock(scope: !3608, file: !3413, line: 515, column: 13)
!3616 = !DILocalVariable(name: "data", scope: !3617, file: !3413, line: 516, type: !3531, align: 8)
!3617 = distinct !DILexicalBlock(scope: !3615, file: !3413, line: 516, column: 13)
!3618 = !DILocalVariable(name: "obj", scope: !3619, file: !3413, line: 517, type: !2922, align: 8)
!3619 = distinct !DILexicalBlock(scope: !3617, file: !3413, line: 517, column: 13)
!3620 = !DILocation(line: 508, column: 38, scope: !3608)
!3621 = !DILocation(line: 508, column: 53, scope: !3608)
!3622 = !DILocation(line: 515, column: 24, scope: !3608)
!3623 = !DILocation(line: 515, column: 17, scope: !3615)
!3624 = !DILocation(line: 516, column: 24, scope: !3615)
!3625 = !DILocation(line: 516, column: 17, scope: !3617)
!3626 = !DILocation(line: 517, column: 23, scope: !3617)
!3627 = !DILocation(line: 517, column: 17, scope: !3619)
!3628 = !DILocation(line: 518, column: 40, scope: !3619)
!3629 = !DILocalVariable(name: "value", scope: !3630, file: !3413, line: 518, type: !2922, align: 8)
!3630 = !DILexicalBlockFile(scope: !3631, file: !3413, discriminator: 0)
!3631 = distinct !DISubprogram(name: "new<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hb5dae1c4aff282a8E", scope: !3479, file: !1162, line: 70, type: !3632, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3482, retainedNodes: !3634)
!3632 = !DISubroutineType(types: !3633)
!3633 = !{!3479, !2922}
!3634 = !{!3629}
!3635 = !DILocation(line: 518, column: 22, scope: !3630, inlinedAt: !3636)
!3636 = !DILocation(line: 518, column: 22, scope: !3619)
!3637 = !DILocation(line: 518, column: 13, scope: !3619)
!3638 = !DILocation(line: 520, column: 6, scope: !3608)
!3639 = distinct !DISubprogram(name: "fmt<str>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h1f515c5ffdd0d64bE", scope: !3640, file: !2609, line: 2361, type: !3641, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !3644)
!3640 = !DINamespace(name: "{impl#59}", scope: !405)
!3641 = !DISubroutineType(types: !3642)
!3642 = !{!2674, !3643, !2690}
!3643 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&str", baseType: !202, size: 64, align: 64, dwarfAddressSpace: 0)
!3644 = !{!3645, !3646}
!3645 = !DILocalVariable(name: "self", arg: 1, scope: !3639, file: !2609, line: 2361, type: !3643)
!3646 = !DILocalVariable(name: "f", arg: 2, scope: !3639, file: !2609, line: 2361, type: !2690)
!3647 = !DILocation(line: 2361, column: 20, scope: !3639)
!3648 = !DILocation(line: 2361, column: 27, scope: !3639)
!3649 = !DILocation(line: 2361, column: 71, scope: !3639)
!3650 = !DILocation(line: 2361, column: 62, scope: !3639)
!3651 = !DILocation(line: 2361, column: 84, scope: !3639)
!3652 = distinct !DISubprogram(name: "fmt<u8>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbc18d34cc4cf18f7E", scope: !3640, file: !2609, line: 2361, type: !3653, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !3656)
!3653 = !DISubroutineType(types: !3654)
!3654 = !{!2674, !3655, !2690}
!3655 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&u8", baseType: !82, size: 64, align: 64, dwarfAddressSpace: 0)
!3656 = !{!3657, !3658}
!3657 = !DILocalVariable(name: "self", arg: 1, scope: !3652, file: !2609, line: 2361, type: !3655)
!3658 = !DILocalVariable(name: "f", arg: 2, scope: !3652, file: !2609, line: 2361, type: !2690)
!3659 = !DILocation(line: 2361, column: 20, scope: !3652)
!3660 = !DILocation(line: 2361, column: 27, scope: !3652)
!3661 = !DILocation(line: 2361, column: 71, scope: !3652)
!3662 = !DILocation(line: 2361, column: 62, scope: !3652)
!3663 = !DILocation(line: 2361, column: 84, scope: !3652)
!3664 = distinct !DISubprogram(name: "fmt<[u8]>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he718d28ed36feac2E", scope: !3640, file: !2609, line: 2361, type: !3665, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !3668)
!3665 = !DISubroutineType(types: !3666)
!3666 = !{!2674, !3667, !2690}
!3667 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&[u8]", baseType: !529, size: 64, align: 64, dwarfAddressSpace: 0)
!3668 = !{!3669, !3670}
!3669 = !DILocalVariable(name: "self", arg: 1, scope: !3664, file: !2609, line: 2361, type: !3667)
!3670 = !DILocalVariable(name: "f", arg: 2, scope: !3664, file: !2609, line: 2361, type: !2690)
!3671 = !DILocation(line: 2361, column: 20, scope: !3664)
!3672 = !DILocation(line: 2361, column: 27, scope: !3664)
!3673 = !DILocation(line: 2361, column: 71, scope: !3664)
!3674 = !DILocation(line: 2361, column: 62, scope: !3664)
!3675 = !DILocation(line: 2361, column: 84, scope: !3664)
!3676 = distinct !DISubprogram(name: "fmt<u8>", linkageName: "_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17hae625f7e4cf7709aE", scope: !3677, file: !2609, line: 2586, type: !3678, scopeLine: 2586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !3680)
!3677 = !DINamespace(name: "{impl#26}", scope: !405)
!3678 = !DISubroutineType(types: !3679)
!3679 = !{!2674, !529, !2690}
!3680 = !{!3681, !3682}
!3681 = !DILocalVariable(name: "self", arg: 1, scope: !3676, file: !2609, line: 2586, type: !529)
!3682 = !DILocalVariable(name: "f", arg: 2, scope: !3676, file: !2609, line: 2586, type: !2690)
!3683 = !DILocation(line: 2586, column: 12, scope: !3676)
!3684 = !DILocation(line: 2586, column: 19, scope: !3676)
!3685 = !DILocation(line: 2587, column: 9, scope: !3676)
!3686 = !DILocation(line: 2587, column: 32, scope: !3676)
!3687 = !DILocalVariable(name: "self", scope: !3688, file: !2609, line: 2587, type: !529, align: 8)
!3688 = !DILexicalBlockFile(scope: !3689, file: !2609, discriminator: 0)
!3689 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hba0218594868f161E", scope: !1379, file: !1378, line: 734, type: !3690, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !3692)
!3690 = !DISubroutineType(types: !3691)
!3691 = !{!2254, !529}
!3692 = !{!3687}
!3693 = !DILocation(line: 2587, column: 32, scope: !3688, inlinedAt: !3686)
!3694 = !DILocation(line: 2588, column: 6, scope: !3676)
!3695 = distinct !DISubprogram(name: "of<alloc::string::String>", linkageName: "_ZN4core3any6TypeId2of17hf6117aa77346b9f4E", scope: !2380, file: !2375, line: 693, type: !3696, scopeLine: 693, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !28, retainedNodes: !27)
!3696 = !DISubroutineType(types: !3697)
!3697 = !{!2380}
!3698 = !DILocation(line: 694, column: 21, scope: !3695)
!3699 = !DILocation(line: 694, column: 9, scope: !3695)
!3700 = !DILocation(line: 695, column: 6, scope: !3695)
!3701 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3Ord3max17h3d8b339d630bc134E", scope: !3703, file: !3702, line: 800, type: !3704, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3709, retainedNodes: !3706)
!3702 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "381f61764ec5ac4111e955260ff27c96")
!3703 = !DINamespace(name: "Ord", scope: !486)
!3704 = !DISubroutineType(types: !3705)
!3705 = !{!9, !9, !9}
!3706 = !{!3707, !3708}
!3707 = !DILocalVariable(name: "self", arg: 1, scope: !3701, file: !3702, line: 800, type: !9)
!3708 = !DILocalVariable(name: "other", arg: 2, scope: !3701, file: !3702, line: 800, type: !9)
!3709 = !{!3710}
!3710 = !DITemplateTypeParameter(name: "Self", type: !9)
!3711 = !DILocation(line: 800, column: 12, scope: !3701)
!3712 = !DILocation(line: 800, column: 18, scope: !3701)
!3713 = !DILocation(line: 808, column: 15, scope: !3701)
!3714 = !{i8 -1, i8 2}
!3715 = !DILocation(line: 812, column: 5, scope: !3701)
!3716 = !DILocation(line: 808, column: 9, scope: !3701)
!3717 = !DILocation(line: 809, column: 49, scope: !3701)
!3718 = !DILocation(line: 810, column: 34, scope: !3701)
!3719 = !DILocation(line: 800, column: 5, scope: !3701)
!3720 = !DILocation(line: 812, column: 6, scope: !3701)
!3721 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h698f6b872abea088E", scope: !3722, file: !3702, line: 1436, type: !3724, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !3726)
!3722 = !DINamespace(name: "{impl#55}", scope: !3723)
!3723 = !DINamespace(name: "impls", scope: !486)
!3724 = !DISubroutineType(types: !3725)
!3725 = !{!485, !556, !556}
!3726 = !{!3727, !3728}
!3727 = !DILocalVariable(name: "self", arg: 1, scope: !3721, file: !3702, line: 1436, type: !556)
!3728 = !DILocalVariable(name: "other", arg: 2, scope: !3721, file: !3702, line: 1436, type: !556)
!3729 = !DILocation(line: 1436, column: 24, scope: !3721)
!3730 = !DILocation(line: 1436, column: 31, scope: !3721)
!3731 = !DILocation(line: 1439, column: 24, scope: !3721)
!3732 = !DILocation(line: 1439, column: 32, scope: !3721)
!3733 = !DILocation(line: 1440, column: 29, scope: !3721)
!3734 = !DILocation(line: 1440, column: 38, scope: !3721)
!3735 = !DILocation(line: 1439, column: 41, scope: !3721)
!3736 = !DILocation(line: 1439, column: 21, scope: !3721)
!3737 = !DILocation(line: 1442, column: 18, scope: !3721)
!3738 = !DILocation(line: 1441, column: 28, scope: !3721)
!3739 = !DILocation(line: 1440, column: 26, scope: !3721)
!3740 = !DILocation(line: 1440, column: 47, scope: !3721)
!3741 = distinct !DISubprogram(name: "as_ptr", linkageName: "_ZN4core3ffi5c_str4CStr6as_ptr17h49ea30813ca2b85dE", scope: !3743, file: !3742, line: 475, type: !3748, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !3756)
!3742 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ffi/c_str.rs", directory: "", checksumkind: CSK_MD5, checksum: "a50c941e663797b3cd132afeffc32d87")
!3743 = !DICompositeType(tag: DW_TAG_structure_type, name: "CStr", scope: !3744, file: !2, align: 8, elements: !3746, templateParams: !27, identifier: "2da013c6b133655882cf6258a2093276")
!3744 = !DINamespace(name: "c_str", scope: !3745)
!3745 = !DINamespace(name: "ffi", scope: !21)
!3746 = !{!3747}
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !3743, file: !2, baseType: !487, align: 8)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{!3750, !3751}
!3750 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const i8", baseType: !487, size: 64, align: 64, dwarfAddressSpace: 0)
!3751 = !DICompositeType(tag: DW_TAG_structure_type, name: "&core::ffi::c_str::CStr", file: !2, size: 128, align: 64, elements: !3752, templateParams: !27, identifier: "9a691f075a9e4b9c7e7049abca5ed1fb")
!3752 = !{!3753, !3755}
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3751, file: !2, baseType: !3754, size: 64, align: 64)
!3754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64, align: 64, dwarfAddressSpace: 0)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3751, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3756 = !{!3757}
!3757 = !DILocalVariable(name: "self", arg: 1, scope: !3741, file: !3742, line: 475, type: !3751)
!3758 = !DILocation(line: 475, column: 25, scope: !3741)
!3759 = !DILocation(line: 476, column: 9, scope: !3741)
!3760 = !DILocalVariable(name: "self", scope: !3761, file: !3742, line: 476, type: !3765, align: 8)
!3761 = !DILexicalBlockFile(scope: !3762, file: !3742, discriminator: 0)
!3762 = distinct !DISubprogram(name: "as_ptr<i8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17ha75e80aec10d0eecE", scope: !1379, file: !1378, line: 476, type: !3763, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3771, retainedNodes: !3770)
!3763 = !DISubroutineType(types: !3764)
!3764 = !{!3750, !3765}
!3765 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[i8]", file: !2, size: 128, align: 64, elements: !3766, templateParams: !27, identifier: "cc2ad320ed202ac3c13bb57e7e44d101")
!3766 = !{!3767, !3769}
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3765, file: !2, baseType: !3768, size: 64, align: 64)
!3768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64, align: 64, dwarfAddressSpace: 0)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3765, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3770 = !{!3760}
!3771 = !{!3772}
!3772 = !DITemplateTypeParameter(name: "T", type: !487)
!3773 = !DILocation(line: 476, column: 9, scope: !3761, inlinedAt: !3759)
!3774 = !DILocation(line: 477, column: 6, scope: !3741)
!3775 = distinct !DISubprogram(name: "new_debug<[u8; 16]>", linkageName: "_ZN4core3fmt10ArgumentV19new_debug17h11007976e2ae55e0E", scope: !2664, file: !2609, line: 318, type: !3776, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3781, retainedNodes: !3779)
!3776 = !DISubroutineType(types: !3777)
!3777 = !{!2664, !3778}
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[u8; 16]", baseType: !2281, size: 64, align: 64, dwarfAddressSpace: 0)
!3779 = !{!3780}
!3780 = !DILocalVariable(name: "x", arg: 1, scope: !3775, file: !2609, line: 318, type: !3778)
!3781 = !{!3782}
!3782 = !DITemplateTypeParameter(name: "T", type: !2281)
!3783 = !DILocation(line: 318, column: 30, scope: !3775)
!3784 = !DILocation(line: 319, column: 23, scope: !3775)
!3785 = !DILocalVariable(name: "x", scope: !3786, file: !2609, line: 319, type: !3778, align: 8)
!3786 = distinct !DISubprogram(name: "new<[u8; 16]>", linkageName: "_ZN4core3fmt10ArgumentV13new17h7824a759c4ce60a5E", scope: !2664, file: !2609, line: 329, type: !3787, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3781, retainedNodes: !3792)
!3787 = !DISubroutineType(types: !3788)
!3788 = !{!2664, !3778, !3789}
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&[u8; 16], &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !3790, size: 64, align: 64, dwarfAddressSpace: 0)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{!2674, !3778, !2690}
!3792 = !{!3785, !3793}
!3793 = !DILocalVariable(name: "f", scope: !3786, file: !2609, line: 319, type: !3789, align: 8)
!3794 = !DILocation(line: 319, column: 13, scope: !3786, inlinedAt: !3795)
!3795 = !DILocation(line: 319, column: 13, scope: !3775)
!3796 = !DILocation(line: 319, column: 26, scope: !3775)
!3797 = !DILocation(line: 320, column: 10, scope: !3775)
!3798 = distinct !DISubprogram(name: "new_debug<&str>", linkageName: "_ZN4core3fmt10ArgumentV19new_debug17h881e4fa91d92a927E", scope: !2664, file: !2609, line: 318, type: !3799, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !820, retainedNodes: !3801)
!3799 = !DISubroutineType(types: !3800)
!3800 = !{!2664, !3643}
!3801 = !{!3802}
!3802 = !DILocalVariable(name: "x", arg: 1, scope: !3798, file: !2609, line: 318, type: !3643)
!3803 = !DILocation(line: 318, column: 30, scope: !3798)
!3804 = !DILocation(line: 319, column: 23, scope: !3798)
!3805 = !DILocalVariable(name: "x", scope: !3806, file: !2609, line: 319, type: !3643, align: 8)
!3806 = distinct !DISubprogram(name: "new<&str>", linkageName: "_ZN4core3fmt10ArgumentV13new17h5bb8ed9c55361597E", scope: !2664, file: !2609, line: 329, type: !3807, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !820, retainedNodes: !3810)
!3807 = !DISubroutineType(types: !3808)
!3808 = !{!2664, !3643, !3809}
!3809 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&&str, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !3641, size: 64, align: 64, dwarfAddressSpace: 0)
!3810 = !{!3805, !3811}
!3811 = !DILocalVariable(name: "f", scope: !3806, file: !2609, line: 319, type: !3809, align: 8)
!3812 = !DILocation(line: 319, column: 13, scope: !3806, inlinedAt: !3813)
!3813 = !DILocation(line: 319, column: 13, scope: !3798)
!3814 = !DILocation(line: 319, column: 26, scope: !3798)
!3815 = !DILocation(line: 320, column: 10, scope: !3798)
!3816 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h2b57816d96c16d29E", scope: !3818, file: !3817, line: 185, type: !3820, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !3822)
!3817 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "6661e46781fcd4293e0f5caf32f3d8ca")
!3818 = !DINamespace(name: "{impl#84}", scope: !3819)
!3819 = !DINamespace(name: "num", scope: !405)
!3820 = !DISubroutineType(types: !3821)
!3821 = !{!2674, !82, !2690}
!3822 = !{!3823, !3824}
!3823 = !DILocalVariable(name: "self", arg: 1, scope: !3816, file: !3817, line: 185, type: !82)
!3824 = !DILocalVariable(name: "f", arg: 2, scope: !3816, file: !3817, line: 185, type: !2690)
!3825 = !DILocation(line: 185, column: 20, scope: !3816)
!3826 = !DILocation(line: 185, column: 27, scope: !3816)
!3827 = !DILocation(line: 186, column: 20, scope: !3816)
!3828 = !DILocation(line: 188, column: 27, scope: !3816)
!3829 = !DILocation(line: 187, column: 21, scope: !3816)
!3830 = !DILocation(line: 186, column: 17, scope: !3816)
!3831 = !DILocation(line: 193, column: 14, scope: !3816)
!3832 = !DILocation(line: 191, column: 21, scope: !3816)
!3833 = !DILocation(line: 189, column: 21, scope: !3816)
!3834 = !DILocation(line: 188, column: 24, scope: !3816)
!3835 = distinct !DISubprogram(name: "entries<&u8, core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3fmt8builders9DebugList7entries17h1f4181b7f26d85aeE", scope: !3837, file: !3836, line: 637, type: !3846, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3856, retainedNodes: !3849)
!3836 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/builders.rs", directory: "", checksumkind: CSK_MD5, checksum: "e84d8f928a38ea86b324aa7d6aa80df8")
!3837 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugList", scope: !3838, file: !2, size: 128, align: 64, elements: !3839, templateParams: !27, identifier: "ae111038d86e71a88d7f5c91efdbb7c8")
!3838 = !DINamespace(name: "builders", scope: !405)
!3839 = !{!3840}
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !3837, file: !2, baseType: !3841, size: 128, align: 64)
!3841 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugInner", scope: !3838, file: !2, size: 128, align: 64, elements: !3842, templateParams: !27, identifier: "a1aef014c36393c5f380a5492df722f1")
!3842 = !{!3843, !3844, !3845}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3841, file: !2, baseType: !2690, size: 64, align: 64)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !3841, file: !2, baseType: !2674, size: 8, align: 8, offset: 64)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "has_fields", scope: !3841, file: !2, baseType: !324, size: 8, align: 8, offset: 72)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!3848, !3848, !2254}
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::builders::DebugList", baseType: !3837, size: 64, align: 64, dwarfAddressSpace: 0)
!3849 = !{!3850, !3851, !3852, !3854}
!3850 = !DILocalVariable(name: "self", arg: 1, scope: !3835, file: !3836, line: 637, type: !3848)
!3851 = !DILocalVariable(name: "entries", arg: 2, scope: !3835, file: !3836, line: 637, type: !2254)
!3852 = !DILocalVariable(name: "iter", scope: !3853, file: !3836, line: 642, type: !2254, align: 8)
!3853 = distinct !DILexicalBlock(scope: !3835, file: !3836, line: 642, column: 9)
!3854 = !DILocalVariable(name: "entry", scope: !3855, file: !3836, line: 642, type: !82, align: 8)
!3855 = distinct !DILexicalBlock(scope: !3853, file: !3836, line: 642, column: 30)
!3856 = !{!3857, !3858}
!3857 = !DITemplateTypeParameter(name: "D", type: !82)
!3858 = !DITemplateTypeParameter(name: "I", type: !2254)
!3859 = !DILocation(line: 637, column: 26, scope: !3835)
!3860 = !DILocation(line: 637, column: 37, scope: !3835)
!3861 = !DILocation(line: 642, column: 22, scope: !3853)
!3862 = !DILocation(line: 642, column: 13, scope: !3855)
!3863 = !DILocation(line: 642, column: 22, scope: !3835)
!3864 = !DILocation(line: 642, column: 9, scope: !3853)
!3865 = !DILocation(line: 642, column: 9, scope: !3835)
!3866 = !DILocation(line: 642, column: 13, scope: !3853)
!3867 = !DILocation(line: 643, column: 24, scope: !3855)
!3868 = !DILocation(line: 643, column: 13, scope: !3855)
!3869 = !DILocation(line: 644, column: 9, scope: !3853)
!3870 = !DILocation(line: 637, column: 5, scope: !3835)
!3871 = !DILocation(line: 646, column: 6, scope: !3835)
!3872 = distinct !DISubprogram(name: "as_str", linkageName: "_ZN4core3fmt9Arguments6as_str17hd9dd9a590817d817E", scope: !2610, file: !2609, line: 512, type: !3873, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !3876)
!3873 = !DISubroutineType(types: !3874)
!3874 = !{!814, !3875}
!3875 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::Arguments", baseType: !2610, size: 64, align: 64, dwarfAddressSpace: 0)
!3876 = !{!3877, !3878}
!3877 = !DILocalVariable(name: "self", arg: 1, scope: !3872, file: !2609, line: 512, type: !3875)
!3878 = !DILocalVariable(name: "s", scope: !3879, file: !2609, line: 515, type: !3643, align: 8)
!3879 = distinct !DILexicalBlock(scope: !3872, file: !2609, line: 515, column: 13)
!3880 = !DILocation(line: 512, column: 25, scope: !3872)
!3881 = !DILocation(line: 513, column: 16, scope: !3872)
!3882 = !DILocation(line: 513, column: 29, scope: !3872)
!3883 = !DILocation(line: 513, column: 15, scope: !3872)
!3884 = !DILocation(line: 514, column: 14, scope: !3872)
!3885 = !DILocation(line: 515, column: 14, scope: !3872)
!3886 = !DILocation(line: 514, column: 18, scope: !3872)
!3887 = !DILocation(line: 516, column: 18, scope: !3872)
!3888 = !DILocation(line: 514, column: 25, scope: !3872)
!3889 = !DILocation(line: 514, column: 32, scope: !3872)
!3890 = !DILocation(line: 518, column: 6, scope: !3872)
!3891 = !DILocation(line: 515, column: 19, scope: !3872)
!3892 = !DILocation(line: 515, column: 15, scope: !3872)
!3893 = !DILocation(line: 515, column: 15, scope: !3879)
!3894 = !DILocation(line: 515, column: 31, scope: !3879)
!3895 = !DILocation(line: 515, column: 26, scope: !3879)
!3896 = !DILocation(line: 515, column: 32, scope: !3872)
!3897 = distinct !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117h09031697824c4fd0E", scope: !2610, file: !2609, line: 390, type: !3898, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !3900)
!3898 = !DISubroutineType(types: !3899)
!3899 = !{!2610, !249, !2660}
!3900 = !{!3901, !3902}
!3901 = !DILocalVariable(name: "pieces", arg: 1, scope: !3897, file: !2609, line: 390, type: !249)
!3902 = !DILocalVariable(name: "args", arg: 2, scope: !3897, file: !2609, line: 390, type: !2660)
!3903 = !DILocation(line: 390, column: 25, scope: !3897)
!3904 = !DILocation(line: 390, column: 53, scope: !3897)
!3905 = !DILocation(line: 391, column: 12, scope: !3897)
!3906 = !DILocation(line: 391, column: 56, scope: !3897)
!3907 = !DILocation(line: 391, column: 41, scope: !3897)
!3908 = !DILocation(line: 394, column: 34, scope: !3897)
!3909 = !DILocation(line: 394, column: 9, scope: !3897)
!3910 = !DILocation(line: 395, column: 6, scope: !3897)
!3911 = !DILocation(line: 392, column: 13, scope: !3897)
!3912 = distinct !DISubprogram(name: "transmute_copy<proc_macro::bridge::client::BridgeState, proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem14transmute_copy17h2e6e4585588377faE", scope: !413, file: !1128, line: 1056, type: !3913, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3918, retainedNodes: !3916)
!3913 = !DISubroutineType(types: !3914)
!3914 = !{!989, !3915}
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&proc_macro::bridge::client::BridgeState", baseType: !989, size: 64, align: 64, dwarfAddressSpace: 0)
!3916 = !{!3917}
!3917 = !DILocalVariable(name: "src", arg: 1, scope: !3912, file: !1128, line: 1056, type: !3915)
!3918 = !{!1008, !3919}
!3919 = !DITemplateTypeParameter(name: "U", type: !989)
!3920 = !DILocation(line: 1056, column: 42, scope: !3912)
!3921 = !DILocalVariable(name: "tmp", scope: !3922, file: !1128, line: 1068, type: !3931, align: 8)
!3922 = !DILexicalBlockFile(scope: !3923, file: !1128, discriminator: 0)
!3923 = distinct !DILexicalBlock(scope: !3924, file: !562, line: 1107, column: 5)
!3924 = distinct !DISubprogram(name: "read<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3ptr4read17h0982be64a3ad310aE", scope: !45, file: !562, line: 1099, type: !3925, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !3928)
!3925 = !DISubroutineType(types: !3926)
!3926 = !{!989, !3927}
!3927 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const proc_macro::bridge::client::BridgeState", baseType: !989, size: 64, align: 64, dwarfAddressSpace: 0)
!3928 = !{!3929, !3921}
!3929 = !DILocalVariable(name: "src", scope: !3930, file: !1128, line: 1068, type: !3927, align: 8)
!3930 = !DILexicalBlockFile(scope: !3924, file: !1128, discriminator: 0)
!3931 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<proc_macro::bridge::client::BridgeState>", scope: !1294, file: !2, size: 640, align: 64, elements: !3932, templateParams: !1007, identifier: "1e7768cff2c1e6831083fd5d84adef")
!3932 = !{!3933, !3934}
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !3931, file: !2, baseType: !7, align: 8)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3931, file: !2, baseType: !1163, size: 640, align: 64)
!3935 = !DILocation(line: 1068, column: 18, scope: !3922, inlinedAt: !3936)
!3936 = !DILocation(line: 1068, column: 18, scope: !3912)
!3937 = !DILocalVariable(name: "self", scope: !3938, file: !1128, line: 1068, type: !3931, align: 8)
!3938 = !DILexicalBlockFile(scope: !3939, file: !1128, discriminator: 0)
!3939 = distinct !DISubprogram(name: "assume_init<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h740e608e959e23bcE", scope: !3931, file: !1292, line: 629, type: !3940, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !3942)
!3940 = !DISubroutineType(types: !3941)
!3941 = !{!989, !3931, !508}
!3942 = !{!3937}
!3943 = !DILocation(line: 1068, column: 18, scope: !3938, inlinedAt: !3944)
!3944 = !DILocation(line: 1116, column: 9, scope: !3923, inlinedAt: !3936)
!3945 = !DILocalVariable(name: "slot", scope: !3946, file: !1128, line: 1068, type: !1163, align: 8)
!3946 = !DILexicalBlockFile(scope: !3947, file: !1128, discriminator: 0)
!3947 = distinct !DISubprogram(name: "into_inner<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hea4926354331a9c5E", scope: !1163, file: !1162, line: 88, type: !3948, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !3950)
!3948 = !DISubroutineType(types: !3949)
!3949 = !{!989, !1163}
!3950 = !{!3945}
!3951 = !DILocation(line: 1068, column: 18, scope: !3946, inlinedAt: !3952)
!3952 = !DILocation(line: 634, column: 13, scope: !3939, inlinedAt: !3944)
!3953 = !DILocation(line: 1057, column: 5, scope: !3912)
!3954 = !DILocation(line: 1060, column: 8, scope: !3912)
!3955 = !DILocation(line: 1068, column: 28, scope: !3912)
!3956 = !DILocation(line: 1068, column: 18, scope: !3930, inlinedAt: !3936)
!3957 = !DILocation(line: 1068, column: 18, scope: !3958, inlinedAt: !3962)
!3958 = !DILexicalBlockFile(scope: !3959, file: !1128, discriminator: 0)
!3959 = distinct !DISubprogram(name: "uninit<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h501ed40f2d31f040E", scope: !3931, file: !1292, line: 320, type: !3960, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !27)
!3960 = !DISubroutineType(types: !3961)
!3961 = !{!3931}
!3962 = !DILocation(line: 1107, column: 19, scope: !3924, inlinedAt: !3936)
!3963 = !DILocalVariable(name: "self", scope: !3964, file: !1128, line: 1068, type: !3969, align: 8)
!3964 = !DILexicalBlockFile(scope: !3965, file: !1128, discriminator: 0)
!3965 = distinct !DISubprogram(name: "as_mut_ptr<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hf0b63566c84fd744E", scope: !3931, file: !1292, line: 574, type: !3966, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !3970)
!3966 = !DISubroutineType(types: !3967)
!3967 = !{!3968, !3969}
!3968 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut proc_macro::bridge::client::BridgeState", baseType: !989, size: 64, align: 64, dwarfAddressSpace: 0)
!3969 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::client::BridgeState>", baseType: !3931, size: 64, align: 64, dwarfAddressSpace: 0)
!3970 = !{!3963}
!3971 = !DILocation(line: 1068, column: 18, scope: !3964, inlinedAt: !3972)
!3972 = !DILocation(line: 1115, column: 34, scope: !3923, inlinedAt: !3936)
!3973 = !DILocation(line: 1063, column: 18, scope: !3912)
!3974 = !DILocation(line: 1060, column: 5, scope: !3912)
!3975 = !DILocation(line: 1070, column: 2, scope: !3912)
!3976 = distinct !DISubprogram(name: "replace<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", linkageName: "_ZN4core3mem7replace17h5a00048dad880c23E", scope: !413, file: !1128, line: 913, type: !3977, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3183, retainedNodes: !3979)
!3977 = !DISubroutineType(types: !3978)
!3978 = !{!2023, !2022, !2023}
!3979 = !{!3980, !3981, !3982}
!3980 = !DILocalVariable(name: "dest", arg: 1, scope: !3976, file: !1128, line: 913, type: !2022)
!3981 = !DILocalVariable(name: "src", arg: 2, scope: !3976, file: !1128, line: 913, type: !2023)
!3982 = !DILocalVariable(name: "result", scope: !3983, file: !1128, line: 918, type: !2023, align: 8)
!3983 = distinct !DILexicalBlock(scope: !3976, file: !1128, line: 918, column: 9)
!3984 = !DILocation(line: 918, column: 13, scope: !3983)
!3985 = !DILocation(line: 913, column: 25, scope: !3976)
!3986 = !DILocation(line: 913, column: 39, scope: !3976)
!3987 = !DILocalVariable(name: "src", scope: !3988, file: !1128, line: 919, type: !2023, align: 8)
!3988 = !DILexicalBlockFile(scope: !3989, file: !1128, discriminator: 0)
!3989 = distinct !DISubprogram(name: "write<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", linkageName: "_ZN4core3ptr5write17hfabd21d4391dfdd2E", scope: !45, file: !562, line: 1296, type: !3990, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3183, retainedNodes: !3992)
!3990 = !DISubroutineType(types: !3991)
!3991 = !{null, !3334, !2023}
!3992 = !{!3993, !3987}
!3993 = !DILocalVariable(name: "dst", scope: !3988, file: !1128, line: 919, type: !3334, align: 8)
!3994 = !DILocation(line: 919, column: 9, scope: !3988, inlinedAt: !3995)
!3995 = !DILocation(line: 919, column: 9, scope: !3983)
!3996 = !DILocalVariable(name: "tmp", scope: !3997, file: !1128, line: 918, type: !4006, align: 8)
!3997 = !DILexicalBlockFile(scope: !3998, file: !1128, discriminator: 0)
!3998 = distinct !DILexicalBlock(scope: !3999, file: !562, line: 1107, column: 5)
!3999 = distinct !DISubprogram(name: "read<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", linkageName: "_ZN4core3ptr4read17haf92712b664f2995E", scope: !45, file: !562, line: 1099, type: !4000, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3183, retainedNodes: !4003)
!4000 = !DISubroutineType(types: !4001)
!4001 = !{!2023, !4002}
!4002 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", baseType: !2023, size: 64, align: 64, dwarfAddressSpace: 0)
!4003 = !{!4004, !3996}
!4004 = !DILocalVariable(name: "src", scope: !4005, file: !1128, line: 918, type: !4002, align: 8)
!4005 = !DILexicalBlockFile(scope: !3999, file: !1128, discriminator: 0)
!4006 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", scope: !1294, file: !2, size: 704, align: 64, elements: !4007, templateParams: !3183, identifier: "55d915add1cdc90c431e6cea7432c127")
!4007 = !{!4008, !4009}
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !4006, file: !2, baseType: !7, align: 8)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4006, file: !2, baseType: !4010, size: 704, align: 64)
!4010 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", scope: !1164, file: !2, size: 704, align: 64, elements: !4011, templateParams: !3183, identifier: "1387101b62570424d1f7f207087e08a3")
!4011 = !{!4012}
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4010, file: !2, baseType: !2023, size: 704, align: 64)
!4013 = !DILocation(line: 918, column: 22, scope: !3997, inlinedAt: !4014)
!4014 = !DILocation(line: 918, column: 22, scope: !3976)
!4015 = !DILocalVariable(name: "self", scope: !4016, file: !1128, line: 918, type: !4006, align: 8)
!4016 = !DILexicalBlockFile(scope: !4017, file: !1128, discriminator: 0)
!4017 = distinct !DISubprogram(name: "assume_init<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h91920b8761e0905fE", scope: !4006, file: !1292, line: 629, type: !4018, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3183, retainedNodes: !4020)
!4018 = !DISubroutineType(types: !4019)
!4019 = !{!2023, !4006, !508}
!4020 = !{!4015}
!4021 = !DILocation(line: 918, column: 22, scope: !4016, inlinedAt: !4022)
!4022 = !DILocation(line: 1116, column: 9, scope: !3998, inlinedAt: !4014)
!4023 = !DILocalVariable(name: "slot", scope: !4024, file: !1128, line: 918, type: !4010, align: 8)
!4024 = !DILexicalBlockFile(scope: !4025, file: !1128, discriminator: 0)
!4025 = distinct !DISubprogram(name: "into_inner<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hb4ba91098df5b1e6E", scope: !4010, file: !1162, line: 88, type: !4026, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3183, retainedNodes: !4028)
!4026 = !DISubroutineType(types: !4027)
!4027 = !{!2023, !4010}
!4028 = !{!4023}
!4029 = !DILocation(line: 918, column: 22, scope: !4024, inlinedAt: !4030)
!4030 = !DILocation(line: 634, column: 13, scope: !4017, inlinedAt: !4022)
!4031 = !DILocation(line: 918, column: 32, scope: !3976)
!4032 = !DILocation(line: 918, column: 22, scope: !4005, inlinedAt: !4014)
!4033 = !DILocation(line: 918, column: 22, scope: !4034, inlinedAt: !4038)
!4034 = !DILexicalBlockFile(scope: !4035, file: !1128, discriminator: 0)
!4035 = distinct !DISubprogram(name: "uninit<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hda7629ad2b43c5acE", scope: !4006, file: !1292, line: 320, type: !4036, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3183, retainedNodes: !27)
!4036 = !DISubroutineType(types: !4037)
!4037 = !{!4006}
!4038 = !DILocation(line: 1107, column: 19, scope: !3999, inlinedAt: !4014)
!4039 = !DILocalVariable(name: "self", scope: !4040, file: !1128, line: 918, type: !4044, align: 8)
!4040 = !DILexicalBlockFile(scope: !4041, file: !1128, discriminator: 0)
!4041 = distinct !DISubprogram(name: "as_mut_ptr<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hc9a58d7fb0b6250aE", scope: !4006, file: !1292, line: 574, type: !4042, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3183, retainedNodes: !4045)
!4042 = !DISubroutineType(types: !4043)
!4043 = !{!3334, !4044}
!4044 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", baseType: !4006, size: 64, align: 64, dwarfAddressSpace: 0)
!4045 = !{!4039}
!4046 = !DILocation(line: 918, column: 22, scope: !4040, inlinedAt: !4047)
!4047 = !DILocation(line: 1115, column: 34, scope: !3998, inlinedAt: !4014)
!4048 = !DILocation(line: 919, column: 20, scope: !3983)
!4049 = !DILocation(line: 919, column: 26, scope: !3983)
!4050 = !DILocation(line: 922, column: 2, scope: !3976)
!4051 = !DILocation(line: 922, column: 1, scope: !3976)
!4052 = !DILocation(line: 913, column: 1, scope: !3976)
!4053 = distinct !DISubprogram(name: "replace<std::thread::local::fast::DtorState>", linkageName: "_ZN4core3mem7replace17h7376dcee016dc44dE", scope: !413, file: !1128, line: 913, type: !4054, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3192, retainedNodes: !4057)
!4054 = !DISubroutineType(types: !4055)
!4055 = !{!479, !4056, !479}
!4056 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::thread::local::fast::DtorState", baseType: !479, size: 64, align: 64, dwarfAddressSpace: 0)
!4057 = !{!4058, !4059, !4060}
!4058 = !DILocalVariable(name: "dest", arg: 1, scope: !4053, file: !1128, line: 913, type: !4056)
!4059 = !DILocalVariable(name: "src", arg: 2, scope: !4053, file: !1128, line: 913, type: !479)
!4060 = !DILocalVariable(name: "result", scope: !4061, file: !1128, line: 918, type: !479, align: 1)
!4061 = distinct !DILexicalBlock(scope: !4053, file: !1128, line: 918, column: 9)
!4062 = !DILocation(line: 913, column: 25, scope: !4053)
!4063 = !DILocation(line: 913, column: 39, scope: !4053)
!4064 = !DILocalVariable(name: "src", scope: !4065, file: !1128, line: 919, type: !479, align: 1)
!4065 = !DILexicalBlockFile(scope: !4066, file: !1128, discriminator: 0)
!4066 = distinct !DISubprogram(name: "write<std::thread::local::fast::DtorState>", linkageName: "_ZN4core3ptr5write17ha55c3fcd3671912cE", scope: !45, file: !562, line: 1296, type: !4067, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3192, retainedNodes: !4069)
!4067 = !DISubroutineType(types: !4068)
!4068 = !{null, !3240, !479}
!4069 = !{!4070, !4064}
!4070 = !DILocalVariable(name: "dst", scope: !4065, file: !1128, line: 919, type: !3240, align: 8)
!4071 = !DILocation(line: 919, column: 9, scope: !4065, inlinedAt: !4072)
!4072 = !DILocation(line: 919, column: 9, scope: !4061)
!4073 = !DILocalVariable(name: "tmp", scope: !4074, file: !1128, line: 918, type: !4083, align: 1)
!4074 = !DILexicalBlockFile(scope: !4075, file: !1128, discriminator: 0)
!4075 = distinct !DILexicalBlock(scope: !4076, file: !562, line: 1107, column: 5)
!4076 = distinct !DISubprogram(name: "read<std::thread::local::fast::DtorState>", linkageName: "_ZN4core3ptr4read17h55227c18efc406f0E", scope: !45, file: !562, line: 1099, type: !4077, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3192, retainedNodes: !4080)
!4077 = !DISubroutineType(types: !4078)
!4078 = !{!479, !4079}
!4079 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const std::thread::local::fast::DtorState", baseType: !479, size: 64, align: 64, dwarfAddressSpace: 0)
!4080 = !{!4081, !4073}
!4081 = !DILocalVariable(name: "src", scope: !4082, file: !1128, line: 918, type: !4079, align: 8)
!4082 = !DILexicalBlockFile(scope: !4076, file: !1128, discriminator: 0)
!4083 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<std::thread::local::fast::DtorState>", scope: !1294, file: !2, size: 8, align: 8, elements: !4084, templateParams: !3192, identifier: "94d7601700235226338f3bb00b8d1b8a")
!4084 = !{!4085, !4086}
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !4083, file: !2, baseType: !7, align: 8)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4083, file: !2, baseType: !4087, size: 8, align: 8)
!4087 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<std::thread::local::fast::DtorState>", scope: !1164, file: !2, size: 8, align: 8, elements: !4088, templateParams: !3192, identifier: "4f2545a544158b8b842b9e255f6a68af")
!4088 = !{!4089}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4087, file: !2, baseType: !479, size: 8, align: 8)
!4090 = !DILocation(line: 918, column: 22, scope: !4074, inlinedAt: !4091)
!4091 = !DILocation(line: 918, column: 22, scope: !4053)
!4092 = !DILocation(line: 918, column: 32, scope: !4053)
!4093 = !DILocation(line: 918, column: 22, scope: !4082, inlinedAt: !4091)
!4094 = !DILocation(line: 918, column: 22, scope: !4095, inlinedAt: !4099)
!4095 = !DILexicalBlockFile(scope: !4096, file: !1128, discriminator: 0)
!4096 = distinct !DISubprogram(name: "uninit<std::thread::local::fast::DtorState>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17haae2dafbea7adf54E", scope: !4083, file: !1292, line: 320, type: !4097, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3192, retainedNodes: !27)
!4097 = !DISubroutineType(types: !4098)
!4098 = !{!4083}
!4099 = !DILocation(line: 1107, column: 19, scope: !4076, inlinedAt: !4091)
!4100 = !DILocalVariable(name: "self", scope: !4101, file: !1128, line: 918, type: !4105, align: 8)
!4101 = !DILexicalBlockFile(scope: !4102, file: !1128, discriminator: 0)
!4102 = distinct !DISubprogram(name: "as_mut_ptr<std::thread::local::fast::DtorState>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hd07234c60af432fbE", scope: !4083, file: !1292, line: 574, type: !4103, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3192, retainedNodes: !4106)
!4103 = !DISubroutineType(types: !4104)
!4104 = !{!3240, !4105}
!4105 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<std::thread::local::fast::DtorState>", baseType: !4083, size: 64, align: 64, dwarfAddressSpace: 0)
!4106 = !{!4100}
!4107 = !DILocation(line: 918, column: 22, scope: !4101, inlinedAt: !4108)
!4108 = !DILocation(line: 1115, column: 34, scope: !4075, inlinedAt: !4091)
!4109 = !DILocalVariable(name: "self", scope: !4110, file: !1128, line: 918, type: !4083, align: 1)
!4110 = !DILexicalBlockFile(scope: !4111, file: !1128, discriminator: 0)
!4111 = distinct !DISubprogram(name: "assume_init<std::thread::local::fast::DtorState>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h9fc2d849896224bfE", scope: !4083, file: !1292, line: 629, type: !4112, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3192, retainedNodes: !4114)
!4112 = !DISubroutineType(types: !4113)
!4113 = !{!479, !4083, !508}
!4114 = !{!4109}
!4115 = !DILocation(line: 918, column: 22, scope: !4110, inlinedAt: !4116)
!4116 = !DILocation(line: 1116, column: 9, scope: !4075, inlinedAt: !4091)
!4117 = !DILocalVariable(name: "slot", scope: !4118, file: !1128, line: 918, type: !4087, align: 1)
!4118 = !DILexicalBlockFile(scope: !4119, file: !1128, discriminator: 0)
!4119 = distinct !DISubprogram(name: "into_inner<std::thread::local::fast::DtorState>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h2d49f8fdee2a9ef4E", scope: !4087, file: !1162, line: 88, type: !4120, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3192, retainedNodes: !4122)
!4120 = !DISubroutineType(types: !4121)
!4121 = !{!479, !4087}
!4122 = !{!4117}
!4123 = !DILocation(line: 918, column: 22, scope: !4118, inlinedAt: !4124)
!4124 = !DILocation(line: 634, column: 13, scope: !4111, inlinedAt: !4116)
!4125 = !DILocation(line: 918, column: 13, scope: !4061)
!4126 = !DILocation(line: 919, column: 20, scope: !4061)
!4127 = !DILocation(line: 919, column: 26, scope: !4061)
!4128 = !DILocation(line: 922, column: 2, scope: !4053)
!4129 = !DILocation(line: 922, column: 1, scope: !4053)
!4130 = !DILocation(line: 913, column: 1, scope: !4053)
!4131 = distinct !DISubprogram(name: "replace<core::option::Option<proc_macro::bridge::client::BridgeState>>", linkageName: "_ZN4core3mem7replace17h9cc864aff5afd957E", scope: !413, file: !1128, line: 913, type: !4132, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4139, retainedNodes: !4134)
!4132 = !DISubroutineType(types: !4133)
!4133 = !{!1105, !1186, !1105}
!4134 = !{!4135, !4136, !4137}
!4135 = !DILocalVariable(name: "dest", arg: 1, scope: !4131, file: !1128, line: 913, type: !1186)
!4136 = !DILocalVariable(name: "src", arg: 2, scope: !4131, file: !1128, line: 913, type: !1105)
!4137 = !DILocalVariable(name: "result", scope: !4138, file: !1128, line: 918, type: !1105, align: 8)
!4138 = distinct !DILexicalBlock(scope: !4131, file: !1128, line: 918, column: 9)
!4139 = !{!4140}
!4140 = !DITemplateTypeParameter(name: "T", type: !1105)
!4141 = !DILocation(line: 918, column: 13, scope: !4138)
!4142 = !DILocation(line: 913, column: 25, scope: !4131)
!4143 = !DILocation(line: 913, column: 39, scope: !4131)
!4144 = !DILocalVariable(name: "src", scope: !4145, file: !1128, line: 919, type: !1105, align: 8)
!4145 = !DILexicalBlockFile(scope: !4146, file: !1128, discriminator: 0)
!4146 = distinct !DISubprogram(name: "write<core::option::Option<proc_macro::bridge::client::BridgeState>>", linkageName: "_ZN4core3ptr5write17hc70cfa84e2e2197aE", scope: !45, file: !562, line: 1296, type: !4147, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4139, retainedNodes: !4150)
!4147 = !DISubroutineType(types: !4148)
!4148 = !{null, !4149, !1105}
!4149 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<proc_macro::bridge::client::BridgeState>", baseType: !1105, size: 64, align: 64, dwarfAddressSpace: 0)
!4150 = !{!4151, !4144}
!4151 = !DILocalVariable(name: "dst", scope: !4145, file: !1128, line: 919, type: !4149, align: 8)
!4152 = !DILocation(line: 919, column: 9, scope: !4145, inlinedAt: !4153)
!4153 = !DILocation(line: 919, column: 9, scope: !4138)
!4154 = !DILocalVariable(name: "tmp", scope: !4155, file: !1128, line: 918, type: !4164, align: 8)
!4155 = !DILexicalBlockFile(scope: !4156, file: !1128, discriminator: 0)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !562, line: 1107, column: 5)
!4157 = distinct !DISubprogram(name: "read<core::option::Option<proc_macro::bridge::client::BridgeState>>", linkageName: "_ZN4core3ptr4read17he98f8b29d88b037aE", scope: !45, file: !562, line: 1099, type: !4158, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4139, retainedNodes: !4161)
!4158 = !DISubroutineType(types: !4159)
!4159 = !{!1105, !4160}
!4160 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::option::Option<proc_macro::bridge::client::BridgeState>", baseType: !1105, size: 64, align: 64, dwarfAddressSpace: 0)
!4161 = !{!4162, !4154}
!4162 = !DILocalVariable(name: "src", scope: !4163, file: !1128, line: 918, type: !4160, align: 8)
!4163 = !DILexicalBlockFile(scope: !4157, file: !1128, discriminator: 0)
!4164 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::option::Option<proc_macro::bridge::client::BridgeState>>", scope: !1294, file: !2, size: 640, align: 64, elements: !4165, templateParams: !4139, identifier: "70e9c84f89b0dda227c5b97b5ef8dac8")
!4165 = !{!4166, !4167}
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !4164, file: !2, baseType: !7, align: 8)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4164, file: !2, baseType: !4168, size: 640, align: 64)
!4168 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::option::Option<proc_macro::bridge::client::BridgeState>>", scope: !1164, file: !2, size: 640, align: 64, elements: !4169, templateParams: !4139, identifier: "eb7f6e305450d03ec3abdb7324789394")
!4169 = !{!4170}
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4168, file: !2, baseType: !1105, size: 640, align: 64)
!4171 = !DILocation(line: 918, column: 22, scope: !4155, inlinedAt: !4172)
!4172 = !DILocation(line: 918, column: 22, scope: !4131)
!4173 = !DILocalVariable(name: "self", scope: !4174, file: !1128, line: 918, type: !4164, align: 8)
!4174 = !DILexicalBlockFile(scope: !4175, file: !1128, discriminator: 0)
!4175 = distinct !DISubprogram(name: "assume_init<core::option::Option<proc_macro::bridge::client::BridgeState>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17he974b4c262bfc390E", scope: !4164, file: !1292, line: 629, type: !4176, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4139, retainedNodes: !4178)
!4176 = !DISubroutineType(types: !4177)
!4177 = !{!1105, !4164, !508}
!4178 = !{!4173}
!4179 = !DILocation(line: 918, column: 22, scope: !4174, inlinedAt: !4180)
!4180 = !DILocation(line: 1116, column: 9, scope: !4156, inlinedAt: !4172)
!4181 = !DILocalVariable(name: "slot", scope: !4182, file: !1128, line: 918, type: !4168, align: 8)
!4182 = !DILexicalBlockFile(scope: !4183, file: !1128, discriminator: 0)
!4183 = distinct !DISubprogram(name: "into_inner<core::option::Option<proc_macro::bridge::client::BridgeState>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hac5bba792a36f10bE", scope: !4168, file: !1162, line: 88, type: !4184, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4139, retainedNodes: !4186)
!4184 = !DISubroutineType(types: !4185)
!4185 = !{!1105, !4168}
!4186 = !{!4181}
!4187 = !DILocation(line: 918, column: 22, scope: !4182, inlinedAt: !4188)
!4188 = !DILocation(line: 634, column: 13, scope: !4175, inlinedAt: !4180)
!4189 = !DILocation(line: 918, column: 32, scope: !4131)
!4190 = !DILocation(line: 918, column: 22, scope: !4163, inlinedAt: !4172)
!4191 = !DILocation(line: 918, column: 22, scope: !4192, inlinedAt: !4196)
!4192 = !DILexicalBlockFile(scope: !4193, file: !1128, discriminator: 0)
!4193 = distinct !DISubprogram(name: "uninit<core::option::Option<proc_macro::bridge::client::BridgeState>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h6ba729b9be5948c7E", scope: !4164, file: !1292, line: 320, type: !4194, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4139, retainedNodes: !27)
!4194 = !DISubroutineType(types: !4195)
!4195 = !{!4164}
!4196 = !DILocation(line: 1107, column: 19, scope: !4157, inlinedAt: !4172)
!4197 = !DILocalVariable(name: "self", scope: !4198, file: !1128, line: 918, type: !4202, align: 8)
!4198 = !DILexicalBlockFile(scope: !4199, file: !1128, discriminator: 0)
!4199 = distinct !DISubprogram(name: "as_mut_ptr<core::option::Option<proc_macro::bridge::client::BridgeState>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h9ce3ec721fbf5896E", scope: !4164, file: !1292, line: 574, type: !4200, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4139, retainedNodes: !4203)
!4200 = !DISubroutineType(types: !4201)
!4201 = !{!4149, !4202}
!4202 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::bridge::client::BridgeState>>", baseType: !4164, size: 64, align: 64, dwarfAddressSpace: 0)
!4203 = !{!4197}
!4204 = !DILocation(line: 918, column: 22, scope: !4198, inlinedAt: !4205)
!4205 = !DILocation(line: 1115, column: 34, scope: !4156, inlinedAt: !4172)
!4206 = !DILocation(line: 919, column: 20, scope: !4138)
!4207 = !DILocation(line: 919, column: 26, scope: !4138)
!4208 = !DILocation(line: 922, column: 2, scope: !4131)
!4209 = !DILocation(line: 922, column: 1, scope: !4131)
!4210 = !DILocation(line: 913, column: 1, scope: !4131)
!4211 = distinct !DISubprogram(name: "replace<proc_macro::bridge::buffer::Buffer>", linkageName: "_ZN4core3mem7replace17haedb1d51e20a5159E", scope: !413, file: !1128, line: 913, type: !4212, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1411, retainedNodes: !4214)
!4212 = !DISubroutineType(types: !4213)
!4213 = !{!285, !615, !285}
!4214 = !{!4215, !4216, !4217}
!4215 = !DILocalVariable(name: "dest", arg: 1, scope: !4211, file: !1128, line: 913, type: !615)
!4216 = !DILocalVariable(name: "src", arg: 2, scope: !4211, file: !1128, line: 913, type: !285)
!4217 = !DILocalVariable(name: "result", scope: !4218, file: !1128, line: 918, type: !285, align: 8)
!4218 = distinct !DILexicalBlock(scope: !4211, file: !1128, line: 918, column: 9)
!4219 = !DILocation(line: 918, column: 13, scope: !4218)
!4220 = !DILocation(line: 913, column: 25, scope: !4211)
!4221 = !DILocation(line: 913, column: 39, scope: !4211)
!4222 = !DILocalVariable(name: "src", scope: !4223, file: !1128, line: 919, type: !285, align: 8)
!4223 = !DILexicalBlockFile(scope: !4224, file: !1128, discriminator: 0)
!4224 = distinct !DISubprogram(name: "write<proc_macro::bridge::buffer::Buffer>", linkageName: "_ZN4core3ptr5write17hb740c37ed615a7bfE", scope: !45, file: !562, line: 1296, type: !4225, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1411, retainedNodes: !4228)
!4225 = !DISubroutineType(types: !4226)
!4226 = !{null, !4227, !285}
!4227 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut proc_macro::bridge::buffer::Buffer", baseType: !285, size: 64, align: 64, dwarfAddressSpace: 0)
!4228 = !{!4229, !4222}
!4229 = !DILocalVariable(name: "dst", scope: !4223, file: !1128, line: 919, type: !4227, align: 8)
!4230 = !DILocation(line: 919, column: 9, scope: !4223, inlinedAt: !4231)
!4231 = !DILocation(line: 919, column: 9, scope: !4218)
!4232 = !DILocalVariable(name: "tmp", scope: !4233, file: !1128, line: 918, type: !4242, align: 8)
!4233 = !DILexicalBlockFile(scope: !4234, file: !1128, discriminator: 0)
!4234 = distinct !DILexicalBlock(scope: !4235, file: !562, line: 1107, column: 5)
!4235 = distinct !DISubprogram(name: "read<proc_macro::bridge::buffer::Buffer>", linkageName: "_ZN4core3ptr4read17h72a7ab74bd35a093E", scope: !45, file: !562, line: 1099, type: !4236, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1411, retainedNodes: !4239)
!4236 = !DISubroutineType(types: !4237)
!4237 = !{!285, !4238}
!4238 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const proc_macro::bridge::buffer::Buffer", baseType: !285, size: 64, align: 64, dwarfAddressSpace: 0)
!4239 = !{!4240, !4232}
!4240 = !DILocalVariable(name: "src", scope: !4241, file: !1128, line: 918, type: !4238, align: 8)
!4241 = !DILexicalBlockFile(scope: !4235, file: !1128, discriminator: 0)
!4242 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<proc_macro::bridge::buffer::Buffer>", scope: !1294, file: !2, size: 320, align: 64, elements: !4243, templateParams: !1411, identifier: "2bba5a45cd67186e39e70cbe5637b017")
!4243 = !{!4244, !4245}
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !4242, file: !2, baseType: !7, align: 8)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4242, file: !2, baseType: !4246, size: 320, align: 64)
!4246 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<proc_macro::bridge::buffer::Buffer>", scope: !1164, file: !2, size: 320, align: 64, elements: !4247, templateParams: !1411, identifier: "a8e847a5a7c7602a9cbc60e9c589a1ca")
!4247 = !{!4248}
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4246, file: !2, baseType: !285, size: 320, align: 64)
!4249 = !DILocation(line: 918, column: 22, scope: !4233, inlinedAt: !4250)
!4250 = !DILocation(line: 918, column: 22, scope: !4211)
!4251 = !DILocalVariable(name: "self", scope: !4252, file: !1128, line: 918, type: !4242, align: 8)
!4252 = !DILexicalBlockFile(scope: !4253, file: !1128, discriminator: 0)
!4253 = distinct !DISubprogram(name: "assume_init<proc_macro::bridge::buffer::Buffer>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h6995b6e387ebc569E", scope: !4242, file: !1292, line: 629, type: !4254, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1411, retainedNodes: !4256)
!4254 = !DISubroutineType(types: !4255)
!4255 = !{!285, !4242, !508}
!4256 = !{!4251}
!4257 = !DILocation(line: 918, column: 22, scope: !4252, inlinedAt: !4258)
!4258 = !DILocation(line: 1116, column: 9, scope: !4234, inlinedAt: !4250)
!4259 = !DILocalVariable(name: "slot", scope: !4260, file: !1128, line: 918, type: !4246, align: 8)
!4260 = !DILexicalBlockFile(scope: !4261, file: !1128, discriminator: 0)
!4261 = distinct !DISubprogram(name: "into_inner<proc_macro::bridge::buffer::Buffer>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hff565ba8e17e0e8dE", scope: !4246, file: !1162, line: 88, type: !4262, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1411, retainedNodes: !4264)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{!285, !4246}
!4264 = !{!4259}
!4265 = !DILocation(line: 918, column: 22, scope: !4260, inlinedAt: !4266)
!4266 = !DILocation(line: 634, column: 13, scope: !4253, inlinedAt: !4258)
!4267 = !DILocation(line: 918, column: 32, scope: !4211)
!4268 = !DILocation(line: 918, column: 22, scope: !4241, inlinedAt: !4250)
!4269 = !DILocation(line: 918, column: 22, scope: !4270, inlinedAt: !4274)
!4270 = !DILexicalBlockFile(scope: !4271, file: !1128, discriminator: 0)
!4271 = distinct !DISubprogram(name: "uninit<proc_macro::bridge::buffer::Buffer>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hef059505fe0bd34eE", scope: !4242, file: !1292, line: 320, type: !4272, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1411, retainedNodes: !27)
!4272 = !DISubroutineType(types: !4273)
!4273 = !{!4242}
!4274 = !DILocation(line: 1107, column: 19, scope: !4235, inlinedAt: !4250)
!4275 = !DILocalVariable(name: "self", scope: !4276, file: !1128, line: 918, type: !4280, align: 8)
!4276 = !DILexicalBlockFile(scope: !4277, file: !1128, discriminator: 0)
!4277 = distinct !DISubprogram(name: "as_mut_ptr<proc_macro::bridge::buffer::Buffer>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hc04fc61d8835f400E", scope: !4242, file: !1292, line: 574, type: !4278, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1411, retainedNodes: !4281)
!4278 = !DISubroutineType(types: !4279)
!4279 = !{!4227, !4280}
!4280 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<proc_macro::bridge::buffer::Buffer>", baseType: !4242, size: 64, align: 64, dwarfAddressSpace: 0)
!4281 = !{!4275}
!4282 = !DILocation(line: 918, column: 22, scope: !4276, inlinedAt: !4283)
!4283 = !DILocation(line: 1115, column: 34, scope: !4234, inlinedAt: !4250)
!4284 = !DILocation(line: 919, column: 20, scope: !4218)
!4285 = !DILocation(line: 919, column: 26, scope: !4218)
!4286 = !DILocation(line: 922, column: 2, scope: !4211)
!4287 = !DILocation(line: 922, column: 1, scope: !4211)
!4288 = !DILocation(line: 913, column: 1, scope: !4211)
!4289 = distinct !DISubprogram(name: "replace<core::option::Option<alloc::string::String>>", linkageName: "_ZN4core3mem7replace17hbbfe64bd76114668E", scope: !413, file: !1128, line: 913, type: !4290, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4298, retainedNodes: !4293)
!4290 = !DISubroutineType(types: !4291)
!4291 = !{!19, !4292, !19}
!4292 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::Option<alloc::string::String>", baseType: !19, size: 64, align: 64, dwarfAddressSpace: 0)
!4293 = !{!4294, !4295, !4296}
!4294 = !DILocalVariable(name: "dest", arg: 1, scope: !4289, file: !1128, line: 913, type: !4292)
!4295 = !DILocalVariable(name: "src", arg: 2, scope: !4289, file: !1128, line: 913, type: !19)
!4296 = !DILocalVariable(name: "result", scope: !4297, file: !1128, line: 918, type: !19, align: 8)
!4297 = distinct !DILexicalBlock(scope: !4289, file: !1128, line: 918, column: 9)
!4298 = !{!4299}
!4299 = !DITemplateTypeParameter(name: "T", type: !19)
!4300 = !DILocation(line: 918, column: 13, scope: !4297)
!4301 = !DILocation(line: 913, column: 25, scope: !4289)
!4302 = !DILocation(line: 913, column: 39, scope: !4289)
!4303 = !DILocalVariable(name: "src", scope: !4304, file: !1128, line: 919, type: !19, align: 8)
!4304 = !DILexicalBlockFile(scope: !4305, file: !1128, discriminator: 0)
!4305 = distinct !DISubprogram(name: "write<core::option::Option<alloc::string::String>>", linkageName: "_ZN4core3ptr5write17h27cb14dcf4fe5844E", scope: !45, file: !562, line: 1296, type: !4306, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4298, retainedNodes: !4309)
!4306 = !DISubroutineType(types: !4307)
!4307 = !{null, !4308, !19}
!4308 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<alloc::string::String>", baseType: !19, size: 64, align: 64, dwarfAddressSpace: 0)
!4309 = !{!4310, !4303}
!4310 = !DILocalVariable(name: "dst", scope: !4304, file: !1128, line: 919, type: !4308, align: 8)
!4311 = !DILocation(line: 919, column: 9, scope: !4304, inlinedAt: !4312)
!4312 = !DILocation(line: 919, column: 9, scope: !4297)
!4313 = !DILocalVariable(name: "tmp", scope: !4314, file: !1128, line: 918, type: !4323, align: 8)
!4314 = !DILexicalBlockFile(scope: !4315, file: !1128, discriminator: 0)
!4315 = distinct !DILexicalBlock(scope: !4316, file: !562, line: 1107, column: 5)
!4316 = distinct !DISubprogram(name: "read<core::option::Option<alloc::string::String>>", linkageName: "_ZN4core3ptr4read17h9779b81bbc758b0fE", scope: !45, file: !562, line: 1099, type: !4317, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4298, retainedNodes: !4320)
!4317 = !DISubroutineType(types: !4318)
!4318 = !{!19, !4319}
!4319 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::option::Option<alloc::string::String>", baseType: !19, size: 64, align: 64, dwarfAddressSpace: 0)
!4320 = !{!4321, !4313}
!4321 = !DILocalVariable(name: "src", scope: !4322, file: !1128, line: 918, type: !4319, align: 8)
!4322 = !DILexicalBlockFile(scope: !4316, file: !1128, discriminator: 0)
!4323 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::option::Option<alloc::string::String>>", scope: !1294, file: !2, size: 192, align: 64, elements: !4324, templateParams: !4298, identifier: "c68e0f9523433ba52d8b982f765c71a3")
!4324 = !{!4325, !4326}
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !4323, file: !2, baseType: !7, align: 8)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4323, file: !2, baseType: !4327, size: 192, align: 64)
!4327 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::option::Option<alloc::string::String>>", scope: !1164, file: !2, size: 192, align: 64, elements: !4328, templateParams: !4298, identifier: "f5993fc698f9f4ff441d48f1001897d2")
!4328 = !{!4329}
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4327, file: !2, baseType: !19, size: 192, align: 64)
!4330 = !DILocation(line: 918, column: 22, scope: !4314, inlinedAt: !4331)
!4331 = !DILocation(line: 918, column: 22, scope: !4289)
!4332 = !DILocalVariable(name: "self", scope: !4333, file: !1128, line: 918, type: !4323, align: 8)
!4333 = !DILexicalBlockFile(scope: !4334, file: !1128, discriminator: 0)
!4334 = distinct !DISubprogram(name: "assume_init<core::option::Option<alloc::string::String>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h4380b22a0d1945edE", scope: !4323, file: !1292, line: 629, type: !4335, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4298, retainedNodes: !4337)
!4335 = !DISubroutineType(types: !4336)
!4336 = !{!19, !4323, !508}
!4337 = !{!4332}
!4338 = !DILocation(line: 918, column: 22, scope: !4333, inlinedAt: !4339)
!4339 = !DILocation(line: 1116, column: 9, scope: !4315, inlinedAt: !4331)
!4340 = !DILocalVariable(name: "slot", scope: !4341, file: !1128, line: 918, type: !4327, align: 8)
!4341 = !DILexicalBlockFile(scope: !4342, file: !1128, discriminator: 0)
!4342 = distinct !DISubprogram(name: "into_inner<core::option::Option<alloc::string::String>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hfaaaf3c58b592ea4E", scope: !4327, file: !1162, line: 88, type: !4343, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4298, retainedNodes: !4345)
!4343 = !DISubroutineType(types: !4344)
!4344 = !{!19, !4327}
!4345 = !{!4340}
!4346 = !DILocation(line: 918, column: 22, scope: !4341, inlinedAt: !4347)
!4347 = !DILocation(line: 634, column: 13, scope: !4334, inlinedAt: !4339)
!4348 = !DILocation(line: 918, column: 32, scope: !4289)
!4349 = !DILocation(line: 918, column: 22, scope: !4322, inlinedAt: !4331)
!4350 = !DILocation(line: 918, column: 22, scope: !4351, inlinedAt: !4355)
!4351 = !DILexicalBlockFile(scope: !4352, file: !1128, discriminator: 0)
!4352 = distinct !DISubprogram(name: "uninit<core::option::Option<alloc::string::String>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h45c984768e144b14E", scope: !4323, file: !1292, line: 320, type: !4353, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4298, retainedNodes: !27)
!4353 = !DISubroutineType(types: !4354)
!4354 = !{!4323}
!4355 = !DILocation(line: 1107, column: 19, scope: !4316, inlinedAt: !4331)
!4356 = !DILocalVariable(name: "self", scope: !4357, file: !1128, line: 918, type: !4361, align: 8)
!4357 = !DILexicalBlockFile(scope: !4358, file: !1128, discriminator: 0)
!4358 = distinct !DISubprogram(name: "as_mut_ptr<core::option::Option<alloc::string::String>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hc20ef23e53f36213E", scope: !4323, file: !1292, line: 574, type: !4359, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4298, retainedNodes: !4362)
!4359 = !DISubroutineType(types: !4360)
!4360 = !{!4308, !4361}
!4361 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::string::String>>", baseType: !4323, size: 64, align: 64, dwarfAddressSpace: 0)
!4362 = !{!4356}
!4363 = !DILocation(line: 918, column: 22, scope: !4357, inlinedAt: !4364)
!4364 = !DILocation(line: 1115, column: 34, scope: !4315, inlinedAt: !4331)
!4365 = !DILocation(line: 919, column: 20, scope: !4297)
!4366 = !DILocation(line: 919, column: 26, scope: !4297)
!4367 = !DILocation(line: 922, column: 2, scope: !4289)
!4368 = !DILocation(line: 922, column: 1, scope: !4289)
!4369 = !DILocation(line: 913, column: 1, scope: !4289)
!4370 = distinct !DISubprogram(name: "replace<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem7replace17hd0fb35326f122d1aE", scope: !413, file: !1128, line: 913, type: !4371, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !4373)
!4371 = !DISubroutineType(types: !4372)
!4372 = !{!989, !1083, !989}
!4373 = !{!4374, !4375, !4376}
!4374 = !DILocalVariable(name: "dest", arg: 1, scope: !4370, file: !1128, line: 913, type: !1083)
!4375 = !DILocalVariable(name: "src", arg: 2, scope: !4370, file: !1128, line: 913, type: !989)
!4376 = !DILocalVariable(name: "result", scope: !4377, file: !1128, line: 918, type: !989, align: 8)
!4377 = distinct !DILexicalBlock(scope: !4370, file: !1128, line: 918, column: 9)
!4378 = !DILocation(line: 918, column: 13, scope: !4377)
!4379 = !DILocation(line: 913, column: 25, scope: !4370)
!4380 = !DILocation(line: 913, column: 39, scope: !4370)
!4381 = !DILocalVariable(name: "src", scope: !4382, file: !1128, line: 919, type: !989, align: 8)
!4382 = !DILexicalBlockFile(scope: !4383, file: !1128, discriminator: 0)
!4383 = distinct !DISubprogram(name: "write<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3ptr5write17h257f5b1342347751E", scope: !45, file: !562, line: 1296, type: !4384, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !4386)
!4384 = !DISubroutineType(types: !4385)
!4385 = !{null, !3968, !989}
!4386 = !{!4387, !4381}
!4387 = !DILocalVariable(name: "dst", scope: !4382, file: !1128, line: 919, type: !3968, align: 8)
!4388 = !DILocation(line: 919, column: 9, scope: !4382, inlinedAt: !4389)
!4389 = !DILocation(line: 919, column: 9, scope: !4377)
!4390 = !DILocalVariable(name: "tmp", scope: !4391, file: !1128, line: 918, type: !3931, align: 8)
!4391 = !DILexicalBlockFile(scope: !4392, file: !1128, discriminator: 0)
!4392 = distinct !DILexicalBlock(scope: !4393, file: !562, line: 1107, column: 5)
!4393 = distinct !DISubprogram(name: "read<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3ptr4read17h0982be64a3ad310aE", scope: !45, file: !562, line: 1099, type: !3925, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !4394)
!4394 = !{!4395, !4390}
!4395 = !DILocalVariable(name: "src", scope: !4396, file: !1128, line: 918, type: !3927, align: 8)
!4396 = !DILexicalBlockFile(scope: !4393, file: !1128, discriminator: 0)
!4397 = !DILocation(line: 918, column: 22, scope: !4391, inlinedAt: !4398)
!4398 = !DILocation(line: 918, column: 22, scope: !4370)
!4399 = !DILocalVariable(name: "self", scope: !4400, file: !1128, line: 918, type: !3931, align: 8)
!4400 = !DILexicalBlockFile(scope: !4401, file: !1128, discriminator: 0)
!4401 = distinct !DISubprogram(name: "assume_init<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h740e608e959e23bcE", scope: !3931, file: !1292, line: 629, type: !3940, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !4402)
!4402 = !{!4399}
!4403 = !DILocation(line: 918, column: 22, scope: !4400, inlinedAt: !4404)
!4404 = !DILocation(line: 1116, column: 9, scope: !4392, inlinedAt: !4398)
!4405 = !DILocalVariable(name: "slot", scope: !4406, file: !1128, line: 918, type: !1163, align: 8)
!4406 = !DILexicalBlockFile(scope: !4407, file: !1128, discriminator: 0)
!4407 = distinct !DISubprogram(name: "into_inner<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hea4926354331a9c5E", scope: !1163, file: !1162, line: 88, type: !3948, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !4408)
!4408 = !{!4405}
!4409 = !DILocation(line: 918, column: 22, scope: !4406, inlinedAt: !4410)
!4410 = !DILocation(line: 634, column: 13, scope: !4401, inlinedAt: !4404)
!4411 = !DILocation(line: 918, column: 32, scope: !4370)
!4412 = !DILocation(line: 918, column: 22, scope: !4396, inlinedAt: !4398)
!4413 = !DILocation(line: 918, column: 22, scope: !4414, inlinedAt: !4416)
!4414 = !DILexicalBlockFile(scope: !4415, file: !1128, discriminator: 0)
!4415 = distinct !DISubprogram(name: "uninit<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h501ed40f2d31f040E", scope: !3931, file: !1292, line: 320, type: !3960, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !27)
!4416 = !DILocation(line: 1107, column: 19, scope: !4393, inlinedAt: !4398)
!4417 = !DILocalVariable(name: "self", scope: !4418, file: !1128, line: 918, type: !3969, align: 8)
!4418 = !DILexicalBlockFile(scope: !4419, file: !1128, discriminator: 0)
!4419 = distinct !DISubprogram(name: "as_mut_ptr<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hf0b63566c84fd744E", scope: !3931, file: !1292, line: 574, type: !3966, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !4420)
!4420 = !{!4417}
!4421 = !DILocation(line: 918, column: 22, scope: !4418, inlinedAt: !4422)
!4422 = !DILocation(line: 1115, column: 34, scope: !4392, inlinedAt: !4398)
!4423 = !DILocation(line: 919, column: 20, scope: !4377)
!4424 = !DILocation(line: 919, column: 26, scope: !4377)
!4425 = !DILocation(line: 922, column: 2, scope: !4370)
!4426 = !DILocation(line: 922, column: 1, scope: !4370)
!4427 = !DILocation(line: 913, column: 1, scope: !4370)
!4428 = distinct !DISubprogram(name: "checked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17hc352243ed65aed56E", scope: !4430, file: !4429, line: 438, type: !4431, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !4433)
!4429 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "510cfe98475d713af9de72a29146058c")
!4430 = !DINamespace(name: "{impl#11}", scope: !353)
!4431 = !DISubroutineType(types: !4432)
!4432 = !{!2697, !9, !9}
!4433 = !{!4434, !4435, !4436, !4438}
!4434 = !DILocalVariable(name: "self", arg: 1, scope: !4428, file: !4429, line: 438, type: !9)
!4435 = !DILocalVariable(name: "rhs", arg: 2, scope: !4428, file: !4429, line: 438, type: !9)
!4436 = !DILocalVariable(name: "a", scope: !4437, file: !4429, line: 439, type: !9, align: 8)
!4437 = distinct !DILexicalBlock(scope: !4428, file: !4429, line: 439, column: 13)
!4438 = !DILocalVariable(name: "b", scope: !4437, file: !4429, line: 439, type: !324, align: 1)
!4439 = !DILocation(line: 438, column: 34, scope: !4428)
!4440 = !DILocation(line: 438, column: 40, scope: !4428)
!4441 = !DILocation(line: 439, column: 26, scope: !4428)
!4442 = !DILocalVariable(name: "self", scope: !4443, file: !4429, line: 439, type: !9, align: 8)
!4443 = distinct !DISubprogram(name: "overflowing_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17he3f36ecce9400a82E", scope: !4430, file: !4429, line: 1506, type: !4444, scopeLine: 1506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !4450)
!4444 = !DISubroutineType(types: !4445)
!4445 = !{!4446, !9, !9}
!4446 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !4447, templateParams: !27, identifier: "23309350ccb628a7900e37caa17b1249")
!4447 = !{!4448, !4449}
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4446, file: !2, baseType: !9, size: 64, align: 64)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !4446, file: !2, baseType: !324, size: 8, align: 8, offset: 64)
!4450 = !{!4442, !4451, !4452, !4454}
!4451 = !DILocalVariable(name: "rhs", scope: !4443, file: !4429, line: 439, type: !9, align: 8)
!4452 = !DILocalVariable(name: "a", scope: !4453, file: !4429, line: 439, type: !71, align: 8)
!4453 = distinct !DILexicalBlock(scope: !4443, file: !4429, line: 1507, column: 13)
!4454 = !DILocalVariable(name: "b", scope: !4453, file: !4429, line: 439, type: !324, align: 1)
!4455 = !DILocation(line: 439, column: 26, scope: !4443, inlinedAt: !4441)
!4456 = !DILocation(line: 439, column: 47, scope: !4428)
!4457 = !DILocation(line: 439, column: 26, scope: !4453, inlinedAt: !4441)
!4458 = !DILocation(line: 439, column: 18, scope: !4428)
!4459 = !DILocation(line: 439, column: 18, scope: !4437)
!4460 = !DILocation(line: 439, column: 21, scope: !4428)
!4461 = !DILocation(line: 439, column: 21, scope: !4437)
!4462 = !DILocation(line: 440, column: 16, scope: !4437)
!4463 = !DILocation(line: 440, column: 42, scope: !4437)
!4464 = !DILocation(line: 440, column: 13, scope: !4437)
!4465 = !DILocation(line: 440, column: 30, scope: !4437)
!4466 = !DILocation(line: 441, column: 10, scope: !4428)
!4467 = distinct !DISubprogram(name: "call<fn(proc_macro::TokenStream) -> proc_macro::TokenStream, (proc_macro::TokenStream)>", linkageName: "_ZN4core3ops8function2Fn4call17h0000b40ff0727754E", scope: !4469, file: !4468, line: 77, type: !4471, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4480, retainedNodes: !4473)
!4468 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "3100065230267ed2a3b8753c70d752a6")
!4469 = !DINamespace(name: "Fn", scope: !4470)
!4470 = !DINamespace(name: "function", scope: !507)
!4471 = !DISubroutineType(types: !4472)
!4472 = !{!337, !1055, !337}
!4473 = !{!4474, !4476}
!4474 = !DILocalVariable(arg: 1, scope: !4467, file: !4468, line: 77, type: !4475)
!4475 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const fn(proc_macro::TokenStream) -> proc_macro::TokenStream", baseType: !334, size: 64, align: 64, dwarfAddressSpace: 0)
!4476 = !DILocalVariable(arg: 2, scope: !4467, file: !4468, line: 77, type: !4477)
!4477 = !DICompositeType(tag: DW_TAG_structure_type, name: "(proc_macro::TokenStream)", file: !2, size: 32, align: 32, elements: !4478, templateParams: !27, identifier: "562e7a135236a703748d4bc333522217")
!4478 = !{!4479}
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4477, file: !2, baseType: !337, size: 32, align: 32)
!4480 = !{!4481, !4482}
!4481 = !DITemplateTypeParameter(name: "Self", type: !334)
!4482 = !DITemplateTypeParameter(name: "Args", type: !4477)
!4483 = !DILocation(line: 77, column: 5, scope: !4467)
!4484 = distinct !DISubprogram(name: "call_once<fn(alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>) -> proc_macro::bridge::rpc::PanicMessage, (alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>)>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hb89f075583d92ce7E", scope: !4485, file: !4468, line: 248, type: !4486, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4497, retainedNodes: !4491)
!4485 = !DINamespace(name: "FnOnce", scope: !4470)
!4486 = !DISubroutineType(types: !4487)
!4487 = !{!887, !4488, !2922}
!4488 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>) -> proc_macro::bridge::rpc::PanicMessage", baseType: !4489, size: 64, align: 64, dwarfAddressSpace: 0)
!4489 = !DISubroutineType(types: !4490)
!4490 = !{!887, !2922}
!4491 = !{!4492, !4493}
!4492 = !DILocalVariable(arg: 1, scope: !4484, file: !4468, line: 248, type: !4488)
!4493 = !DILocalVariable(arg: 2, scope: !4484, file: !4468, line: 248, type: !4494)
!4494 = !DICompositeType(tag: DW_TAG_structure_type, name: "(alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>)", file: !2, size: 128, align: 64, elements: !4495, templateParams: !27, identifier: "95c0475e0be3af9869e634657a40d5a9")
!4495 = !{!4496}
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4494, file: !2, baseType: !2922, size: 128, align: 64)
!4497 = !{!4498, !4499}
!4498 = !DITemplateTypeParameter(name: "Self", type: !4488)
!4499 = !DITemplateTypeParameter(name: "Args", type: !4494)
!4500 = !DILocation(line: 248, column: 5, scope: !4484)
!4501 = distinct !DISubprogram(name: "drop_in_place<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>>", linkageName: "_ZN4core3ptr101drop_in_place$LT$std..io..error..ErrorData$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$$GT$17hfc79006d4189c0f7E", scope: !45, file: !562, line: 487, type: !4502, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !118, retainedNodes: !4505)
!4502 = !DISubroutineType(types: !4503)
!4503 = !{null, !4504}
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>", baseType: !120, size: 64, align: 64, dwarfAddressSpace: 0)
!4505 = !{!4506}
!4506 = !DILocalVariable(arg: 1, scope: !4501, file: !562, line: 487, type: !4504)
!4507 = !DILocation(line: 487, column: 1, scope: !4501)
!4508 = !{i8 0, i8 4}
!4509 = distinct !DISubprogram(name: "drop_in_place<core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>>", linkageName: "_ZN4core3ptr106drop_in_place$LT$core..result..Result$LT$f128_internal..f128_t..f128$C$alloc..ffi..c_str..NulError$GT$$GT$17hc90ee8ad40ed548dE", scope: !45, file: !562, line: 487, type: !4510, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4515, retainedNodes: !4513)
!4510 = !DISubroutineType(types: !4511)
!4511 = !{null, !4512}
!4512 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::result::Result<f128_internal::f128_t::f128, alloc::ffi::c_str::NulError>", baseType: !2286, size: 64, align: 64, dwarfAddressSpace: 0)
!4513 = !{!4514}
!4514 = !DILocalVariable(arg: 1, scope: !4509, file: !562, line: 487, type: !4512)
!4515 = !{!4516}
!4516 = !DITemplateTypeParameter(name: "T", type: !2286)
!4517 = !DILocation(line: 487, column: 1, scope: !4509)
!4518 = distinct !DISubprogram(name: "drop_in_place<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>", linkageName: "_ZN4core3ptr112drop_in_place$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$proc_macro..bridge..client..BridgeStateL$GT$$GT$17h9170cc61345a158bE", scope: !45, file: !562, line: 487, type: !4519, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2029, retainedNodes: !4522)
!4519 = !DISubroutineType(types: !4520)
!4520 = !{null, !4521}
!4521 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>", baseType: !979, size: 64, align: 64, dwarfAddressSpace: 0)
!4522 = !{!4523}
!4523 = !DILocalVariable(arg: 1, scope: !4518, file: !562, line: 487, type: !4521)
!4524 = !DILocation(line: 487, column: 1, scope: !4518)
!4525 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h94fbd8a246bc56ccE", scope: !45, file: !562, line: 487, type: !4526, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4531, retainedNodes: !4529)
!4526 = !DISubroutineType(types: !4527)
!4527 = !{null, !4528}
!4528 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", baseType: !179, size: 64, align: 64, dwarfAddressSpace: 0)
!4529 = !{!4530}
!4530 = !DILocalVariable(arg: 1, scope: !4525, file: !562, line: 487, type: !4528)
!4531 = !{!4532}
!4532 = !DITemplateTypeParameter(name: "T", type: !179)
!4533 = !DILocation(line: 487, column: 1, scope: !4525)
!4534 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>", linkageName: "_ZN4core3ptr140drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$proc_macro..bridge..client..BridgeStateL$GT$$GT$$GT$17he92c14df81bac4fdE", scope: !45, file: !562, line: 487, type: !4535, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3183, retainedNodes: !4537)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{null, !3334}
!4537 = !{!4538}
!4538 = !DILocalVariable(arg: 1, scope: !4534, file: !562, line: 487, type: !3334)
!4539 = !DILocation(line: 487, column: 1, scope: !4534)
!4540 = distinct !DISubprogram(name: "drop_in_place<proc_macro::bridge::scoped_cell::{impl#3}::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>>", linkageName: "_ZN4core3ptr145drop_in_place$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$T$GT$..replace..PutBackOnDrop$LT$proc_macro..bridge..client..BridgeStateL$GT$$GT$17h4f995b6b6f582f16E", scope: !45, file: !562, line: 487, type: !4541, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4546, retainedNodes: !4544)
!4541 = !DISubroutineType(types: !4542)
!4542 = !{null, !4543}
!4543 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut proc_macro::bridge::scoped_cell::{impl#3}::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>", baseType: !1100, size: 64, align: 64, dwarfAddressSpace: 0)
!4544 = !{!4545}
!4545 = !DILocalVariable(arg: 1, scope: !4540, file: !562, line: 487, type: !4543)
!4546 = !{!4547}
!4547 = !DITemplateTypeParameter(name: "T", type: !1100)
!4548 = !DILocation(line: 487, column: 1, scope: !4540)
!4549 = distinct !DISubprogram(name: "read_unaligned<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3ptr14read_unaligned17h6bf55fba9e0be37fE", scope: !45, file: !562, line: 1199, type: !3925, scopeLine: 1199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !4550)
!4550 = !{!4551, !4552}
!4551 = !DILocalVariable(name: "src", arg: 1, scope: !4549, file: !562, line: 1199, type: !3927)
!4552 = !DILocalVariable(name: "tmp", scope: !4553, file: !562, line: 1200, type: !3931, align: 8)
!4553 = distinct !DILexicalBlock(scope: !4549, file: !562, line: 1200, column: 5)
!4554 = !DILocation(line: 1199, column: 39, scope: !4549)
!4555 = !DILocation(line: 1200, column: 9, scope: !4553)
!4556 = !DILocalVariable(name: "self", scope: !4557, file: !562, line: 1209, type: !3931, align: 8)
!4557 = !DILexicalBlockFile(scope: !4558, file: !562, discriminator: 0)
!4558 = distinct !DISubprogram(name: "assume_init<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h740e608e959e23bcE", scope: !3931, file: !1292, line: 629, type: !3940, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !4559)
!4559 = !{!4556}
!4560 = !DILocation(line: 1209, column: 9, scope: !4557, inlinedAt: !4561)
!4561 = !DILocation(line: 1209, column: 9, scope: !4553)
!4562 = !DILocalVariable(name: "runtime", scope: !4563, file: !562, line: 1208, type: !1355, align: 8)
!4563 = !DILexicalBlockFile(scope: !4564, file: !562, discriminator: 0)
!4564 = distinct !DILexicalBlock(scope: !4565, file: !549, line: 2336, column: 13)
!4565 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17ha3d50afd39c4aa62E", scope: !1347, file: !549, line: 2458, type: !1348, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !4566)
!4566 = !{!4567, !4569, !4570, !4562}
!4567 = !DILocalVariable(name: "src", scope: !4568, file: !562, line: 1208, type: !52, align: 8)
!4568 = !DILexicalBlockFile(scope: !4565, file: !562, discriminator: 0)
!4569 = !DILocalVariable(name: "dst", scope: !4568, file: !562, line: 1208, type: !289, align: 8)
!4570 = !DILocalVariable(name: "count", scope: !4568, file: !562, line: 1208, type: !9, align: 8)
!4571 = !DILocation(line: 1208, column: 9, scope: !4563, inlinedAt: !4572)
!4572 = !DILocation(line: 1208, column: 9, scope: !4553)
!4573 = !DILocalVariable(name: "slot", scope: !4574, file: !562, line: 1209, type: !1163, align: 8)
!4574 = !DILexicalBlockFile(scope: !4575, file: !562, discriminator: 0)
!4575 = distinct !DISubprogram(name: "into_inner<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hea4926354331a9c5E", scope: !1163, file: !1162, line: 88, type: !3948, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !4576)
!4576 = !{!4573}
!4577 = !DILocation(line: 1209, column: 9, scope: !4574, inlinedAt: !4578)
!4578 = !DILocation(line: 634, column: 13, scope: !4558, inlinedAt: !4561)
!4579 = !DILocation(line: 1200, column: 19, scope: !4580, inlinedAt: !4582)
!4580 = !DILexicalBlockFile(scope: !4581, file: !562, discriminator: 0)
!4581 = distinct !DISubprogram(name: "uninit<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h501ed40f2d31f040E", scope: !3931, file: !1292, line: 320, type: !3960, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !27)
!4582 = !DILocation(line: 1200, column: 19, scope: !4549)
!4583 = !DILocation(line: 1208, column: 29, scope: !4553)
!4584 = !DILocation(line: 1208, column: 9, scope: !4568, inlinedAt: !4572)
!4585 = !DILocation(line: 1208, column: 47, scope: !4553)
!4586 = !DILocalVariable(name: "self", scope: !4587, file: !562, line: 1208, type: !3969, align: 8)
!4587 = !DILexicalBlockFile(scope: !4588, file: !562, discriminator: 0)
!4588 = distinct !DISubprogram(name: "as_mut_ptr<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hf0b63566c84fd744E", scope: !3931, file: !1292, line: 574, type: !3966, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !4589)
!4589 = !{!4586}
!4590 = !DILocation(line: 1208, column: 47, scope: !4587, inlinedAt: !4585)
!4591 = !DILocation(line: 1208, column: 76, scope: !4592, inlinedAt: !4596)
!4592 = !DILexicalBlockFile(scope: !4593, file: !562, discriminator: 0)
!4593 = distinct !DISubprogram(name: "size_of<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3mem7size_of17h4e0910bf8669660cE", scope: !413, file: !1128, line: 314, type: !4594, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !27)
!4594 = !DISubroutineType(types: !4595)
!4595 = !{!9}
!4596 = !DILocation(line: 1208, column: 76, scope: !4553)
!4597 = !DILocation(line: 1211, column: 2, scope: !4549)
!4598 = distinct !DISubprogram(name: "drop_in_place<&u8>", linkageName: "_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h3aab73b83e147934E", scope: !45, file: !562, line: 487, type: !4599, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2261, retainedNodes: !4602)
!4599 = !DISubroutineType(types: !4600)
!4600 = !{null, !4601}
!4601 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u8", baseType: !82, size: 64, align: 64, dwarfAddressSpace: 0)
!4602 = !{!4603}
!4603 = !DILocalVariable(arg: 1, scope: !4598, file: !562, line: 487, type: !4601)
!4604 = !DILocation(line: 487, column: 1, scope: !4598)
!4605 = distinct !DISubprogram(name: "drop_in_place<proc_macro::LexError>", linkageName: "_ZN4core3ptr41drop_in_place$LT$proc_macro..LexError$GT$17h3cebe70310e60f92E", scope: !45, file: !562, line: 487, type: !4606, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4611, retainedNodes: !4609)
!4606 = !DISubroutineType(types: !4607)
!4607 = !{null, !4608}
!4608 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut proc_macro::LexError", baseType: !220, size: 64, align: 64, dwarfAddressSpace: 0)
!4609 = !{!4610}
!4610 = !DILocalVariable(arg: 1, scope: !4605, file: !562, line: 487, type: !4608)
!4611 = !{!4612}
!4612 = !DITemplateTypeParameter(name: "T", type: !220)
!4613 = !DILocation(line: 487, column: 1, scope: !4605)
!4614 = distinct !DISubprogram(name: "drop_in_place<proc_macro::bridge::client::run_client::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>", linkageName: "_ZN4core3ptr425drop_in_place$LT$proc_macro..bridge..client..run_client$LT$proc_macro..bridge..client..TokenStream$C$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$C$proc_macro..bridge..client..Client$LT$proc_macro..TokenStream$C$proc_macro..TokenStream$GT$..expand1$LT$f128_input..f128_inner$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hcc80abe9357577ffE", scope: !45, file: !562, line: 487, type: !4615, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4620, retainedNodes: !4618)
!4615 = !DISubroutineType(types: !4616)
!4616 = !{null, !4617}
!4617 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut proc_macro::bridge::client::run_client::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>", baseType: !1874, size: 64, align: 64, dwarfAddressSpace: 0)
!4618 = !{!4619}
!4619 = !DILocalVariable(arg: 1, scope: !4614, file: !562, line: 487, type: !4617)
!4620 = !{!4621}
!4621 = !DITemplateTypeParameter(name: "T", type: !1874)
!4622 = !DILocation(line: 487, column: 1, scope: !4614)
!4623 = distinct !DISubprogram(name: "drop_in_place<std::io::error::Error>", linkageName: "_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h32c7df30d12904acE", scope: !45, file: !562, line: 487, type: !4624, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4629, retainedNodes: !4627)
!4624 = !DISubroutineType(types: !4625)
!4625 = !{null, !4626}
!4626 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::Error", baseType: !102, size: 64, align: 64, dwarfAddressSpace: 0)
!4627 = !{!4628}
!4628 = !DILocalVariable(arg: 1, scope: !4623, file: !562, line: 487, type: !4626)
!4629 = !{!4630}
!4630 = !DITemplateTypeParameter(name: "T", type: !102)
!4631 = !DILocation(line: 487, column: 1, scope: !4623)
!4632 = distinct !DISubprogram(name: "drop_in_place<std::io::error::Custom>", linkageName: "_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17hce32a6c323cc4fcaE", scope: !45, file: !562, line: 487, type: !4633, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4637, retainedNodes: !4635)
!4633 = !DISubroutineType(types: !4634)
!4634 = !{null, !2443}
!4635 = !{!4636}
!4636 = !DILocalVariable(arg: 1, scope: !4632, file: !562, line: 487, type: !2443)
!4637 = !{!4638}
!4638 = !DITemplateTypeParameter(name: "T", type: !132)
!4639 = !DILocation(line: 487, column: 1, scope: !4632)
!4640 = distinct !DISubprogram(name: "drop_in_place<proc_macro::TokenStream>", linkageName: "_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h5984f1a9e3d64235E", scope: !45, file: !562, line: 487, type: !4641, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4646, retainedNodes: !4644)
!4641 = !DISubroutineType(types: !4642)
!4642 = !{null, !4643}
!4643 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut proc_macro::TokenStream", baseType: !337, size: 64, align: 64, dwarfAddressSpace: 0)
!4644 = !{!4645}
!4645 = !DILocalVariable(arg: 1, scope: !4640, file: !562, line: 487, type: !4643)
!4646 = !{!4647}
!4647 = !DITemplateTypeParameter(name: "T", type: !337)
!4648 = !DILocation(line: 487, column: 1, scope: !4640)
!4649 = distinct !DISubprogram(name: "drop_in_place<proc_macro::bridge::client::run_client::{closure#0}::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>", linkageName: "_ZN4core3ptr454drop_in_place$LT$proc_macro..bridge..client..run_client$LT$proc_macro..bridge..client..TokenStream$C$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$C$proc_macro..bridge..client..Client$LT$proc_macro..TokenStream$C$proc_macro..TokenStream$GT$..expand1$LT$f128_input..f128_inner$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h0bff0144d6fd8481E", scope: !45, file: !562, line: 487, type: !4650, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4655, retainedNodes: !4653)
!4650 = !DISubroutineType(types: !4651)
!4651 = !{null, !4652}
!4652 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut proc_macro::bridge::client::run_client::{closure#0}::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>", baseType: !1043, size: 64, align: 64, dwarfAddressSpace: 0)
!4653 = !{!4654}
!4654 = !DILocalVariable(arg: 1, scope: !4649, file: !562, line: 487, type: !4652)
!4655 = !{!4656}
!4656 = !DITemplateTypeParameter(name: "T", type: !1043)
!4657 = !DILocation(line: 487, column: 1, scope: !4649)
!4658 = distinct !DISubprogram(name: "drop_in_place<std::thread::local::AccessError>", linkageName: "_ZN4core3ptr52drop_in_place$LT$std..thread..local..AccessError$GT$17h6c4dc30a4bf43b0aE", scope: !45, file: !562, line: 487, type: !4659, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4664, retainedNodes: !4662)
!4659 = !DISubroutineType(types: !4660)
!4660 = !{null, !4661}
!4661 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::thread::local::AccessError", baseType: !91, size: 64, align: 64, dwarfAddressSpace: 0)
!4662 = !{!4663}
!4663 = !DILocalVariable(arg: 1, scope: !4658, file: !562, line: 487, type: !4661)
!4664 = !{!4665}
!4665 = !DITemplateTypeParameter(name: "T", type: !91)
!4666 = !DILocation(line: 487, column: 1, scope: !4658)
!4667 = distinct !DISubprogram(name: "drop_in_place<proc_macro::bridge::BridgeConfig>", linkageName: "_ZN4core3ptr53drop_in_place$LT$proc_macro..bridge..BridgeConfig$GT$17hddb41ec64c3227ecE", scope: !45, file: !562, line: 487, type: !4668, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4673, retainedNodes: !4671)
!4668 = !DISubroutineType(types: !4669)
!4669 = !{null, !4670}
!4670 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut proc_macro::bridge::BridgeConfig", baseType: !300, size: 64, align: 64, dwarfAddressSpace: 0)
!4671 = !{!4672}
!4672 = !DILocalVariable(arg: 1, scope: !4667, file: !562, line: 487, type: !4670)
!4673 = !{!4674}
!4674 = !DITemplateTypeParameter(name: "T", type: !300)
!4675 = !DILocation(line: 487, column: 1, scope: !4667)
!4676 = distinct !DISubprogram(name: "drop_in_place<proc_macro::bridge::buffer::Buffer>", linkageName: "_ZN4core3ptr55drop_in_place$LT$proc_macro..bridge..buffer..Buffer$GT$17ha3af9902afa5dfbfE", scope: !45, file: !562, line: 487, type: !4677, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1411, retainedNodes: !4679)
!4677 = !DISubroutineType(types: !4678)
!4678 = !{null, !4227}
!4679 = !{!4680}
!4680 = !DILocalVariable(arg: 1, scope: !4676, file: !562, line: 487, type: !4227)
!4681 = !DILocation(line: 487, column: 1, scope: !4676)
!4682 = distinct !DISubprogram(name: "drop_in_place<proc_macro::bridge::client::Bridge>", linkageName: "_ZN4core3ptr55drop_in_place$LT$proc_macro..bridge..client..Bridge$GT$17h57aa75f72680a884E", scope: !45, file: !562, line: 487, type: !4683, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4688, retainedNodes: !4686)
!4683 = !DISubroutineType(types: !4684)
!4684 = !{null, !4685}
!4685 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut proc_macro::bridge::client::Bridge", baseType: !999, size: 64, align: 64, dwarfAddressSpace: 0)
!4686 = !{!4687}
!4687 = !DILocalVariable(arg: 1, scope: !4682, file: !562, line: 487, type: !4685)
!4688 = !{!4689}
!4689 = !DITemplateTypeParameter(name: "T", type: !999)
!4690 = !DILocation(line: 487, column: 1, scope: !4682)
!4691 = distinct !DISubprogram(name: "drop_in_place<std::io::error::repr_bitpacked::Repr>", linkageName: "_ZN4core3ptr57drop_in_place$LT$std..io..error..repr_bitpacked..Repr$GT$17he7a0fa55eb80c664E", scope: !45, file: !562, line: 487, type: !4692, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4697, retainedNodes: !4695)
!4692 = !DISubroutineType(types: !4693)
!4693 = !{null, !4694}
!4694 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::repr_bitpacked::Repr", baseType: !107, size: 64, align: 64, dwarfAddressSpace: 0)
!4695 = !{!4696}
!4696 = !DILocalVariable(arg: 1, scope: !4691, file: !562, line: 487, type: !4694)
!4697 = !{!4698}
!4698 = !DITemplateTypeParameter(name: "T", type: !107)
!4699 = !DILocation(line: 487, column: 1, scope: !4691)
!4700 = distinct !DISubprogram(name: "drop_in_place<proc_macro::bridge::rpc::PanicMessage>", linkageName: "_ZN4core3ptr58drop_in_place$LT$proc_macro..bridge..rpc..PanicMessage$GT$17ha026d0b68f540484E", scope: !45, file: !562, line: 487, type: !4701, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4706, retainedNodes: !4704)
!4701 = !DISubroutineType(types: !4702)
!4702 = !{null, !4703}
!4703 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut proc_macro::bridge::rpc::PanicMessage", baseType: !887, size: 64, align: 64, dwarfAddressSpace: 0)
!4704 = !{!4705}
!4705 = !DILocalVariable(arg: 1, scope: !4700, file: !562, line: 487, type: !4703)
!4706 = !{!4707}
!4707 = !DITemplateTypeParameter(name: "T", type: !887)
!4708 = !DILocation(line: 487, column: 1, scope: !4700)
!4709 = distinct !DISubprogram(name: "drop_in_place<proc_macro::bridge::scoped_cell::{impl#3}::set::{closure_env#0}<proc_macro::bridge::client::BridgeStateL, (), proc_macro::bridge::client::run_client::{closure#0}::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>>", linkageName: "_ZN4core3ptr598drop_in_place$LT$proc_macro..bridge..scoped_cell..ScopedCell$LT$proc_macro..bridge..client..BridgeStateL$GT$..set$LT$$LP$$RP$$C$proc_macro..bridge..client..run_client$LT$proc_macro..bridge..client..TokenStream$C$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$C$proc_macro..bridge..client..Client$LT$proc_macro..TokenStream$C$proc_macro..TokenStream$GT$..expand1$LT$f128_input..f128_inner$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hb875581cfeba128dE", scope: !45, file: !562, line: 487, type: !4710, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4715, retainedNodes: !4713)
!4710 = !DISubroutineType(types: !4711)
!4711 = !{null, !4712}
!4712 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut proc_macro::bridge::scoped_cell::{impl#3}::set::{closure_env#0}<proc_macro::bridge::client::BridgeStateL, (), proc_macro::bridge::client::run_client::{closure#0}::{closure#0}::{closure_env#0}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>", baseType: !1077, size: 64, align: 64, dwarfAddressSpace: 0)
!4713 = !{!4714}
!4714 = !DILocalVariable(arg: 1, scope: !4709, file: !562, line: 487, type: !4712)
!4715 = !{!4716}
!4716 = !DITemplateTypeParameter(name: "T", type: !1077)
!4717 = !DILocation(line: 487, column: 1, scope: !4709)
!4718 = distinct !DISubprogram(name: "drop_in_place<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..BridgeState$GT$17haf8a3b6b03ea9458E", scope: !45, file: !562, line: 487, type: !4719, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !4721)
!4719 = !DISubroutineType(types: !4720)
!4720 = !{null, !3968}
!4721 = !{!4722}
!4722 = !DILocalVariable(arg: 1, scope: !4718, file: !562, line: 487, type: !3968)
!4723 = !DILocation(line: 487, column: 1, scope: !4718)
!4724 = distinct !DISubprogram(name: "drop_in_place<proc_macro::bridge::client::TokenStream>", linkageName: "_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..TokenStream$GT$17h6e4ae08084020ae3E", scope: !45, file: !562, line: 487, type: !4725, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !346, retainedNodes: !4728)
!4725 = !DISubroutineType(types: !4726)
!4726 = !{null, !4727}
!4727 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut proc_macro::bridge::client::TokenStream", baseType: !348, size: 64, align: 64, dwarfAddressSpace: 0)
!4728 = !{!4729}
!4729 = !DILocalVariable(arg: 1, scope: !4724, file: !562, line: 487, type: !4727)
!4730 = !DILocation(line: 487, column: 1, scope: !4724)
!4731 = distinct !DISubprogram(name: "drop_in_place<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr66drop_in_place$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$17hb707766d9eb55aafE", scope: !45, file: !562, line: 487, type: !4732, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4740, retainedNodes: !4738)
!4732 = !DISubroutineType(types: !4733)
!4733 = !{null, !4734}
!4734 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut (dyn core::any::Any + core::marker::Send)", file: !2, size: 128, align: 64, elements: !4735, templateParams: !27, identifier: "1a17a9ff407bf60ef76f10cb3f5d05bd")
!4735 = !{!4736, !4737}
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4734, file: !2, baseType: !2925, size: 64, align: 64)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !4734, file: !2, baseType: !185, size: 64, align: 64, offset: 64)
!4738 = !{!4739}
!4739 = !DILocalVariable(arg: 1, scope: !4731, file: !562, line: 487, type: !4734)
!4740 = !{!4741}
!4741 = !DITemplateTypeParameter(name: "T", type: !2926)
!4742 = !DILocation(line: 487, column: 1, scope: !4731)
!4743 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17h241b2fa8b6d90117E", scope: !45, file: !562, line: 487, type: !4744, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4749, retainedNodes: !4747)
!4744 = !DISubroutineType(types: !4745)
!4745 = !{null, !4746}
!4746 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>", baseType: !131, size: 64, align: 64, dwarfAddressSpace: 0)
!4747 = !{!4748}
!4748 = !DILocalVariable(arg: 1, scope: !4743, file: !562, line: 487, type: !4746)
!4749 = !{!4750}
!4750 = !DITemplateTypeParameter(name: "T", type: !131)
!4751 = !DILocation(line: 487, column: 1, scope: !4743)
!4752 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<alloc::string::String>>", linkageName: "_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h59c5944dd0f7c63fE", scope: !45, file: !562, line: 487, type: !4753, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4298, retainedNodes: !4755)
!4753 = !DISubroutineType(types: !4754)
!4754 = !{null, !4308}
!4755 = !{!4756}
!4756 = !DILocalVariable(arg: 1, scope: !4752, file: !562, line: 487, type: !4308)
!4757 = !DILocation(line: 487, column: 1, scope: !4752)
!4758 = distinct !DISubprogram(name: "drop_in_place<core::cell::Cell<proc_macro::bridge::client::BridgeState>>", linkageName: "_ZN4core3ptr84drop_in_place$LT$core..cell..Cell$LT$proc_macro..bridge..client..BridgeState$GT$$GT$17h4d75a05ec6061b5cE", scope: !45, file: !562, line: 487, type: !4759, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4764, retainedNodes: !4762)
!4759 = !DISubroutineType(types: !4760)
!4760 = !{null, !4761}
!4761 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::cell::Cell<proc_macro::bridge::client::BridgeState>", baseType: !983, size: 64, align: 64, dwarfAddressSpace: 0)
!4762 = !{!4763}
!4763 = !DILocalVariable(arg: 1, scope: !4758, file: !562, line: 487, type: !4761)
!4764 = !{!4765}
!4765 = !DITemplateTypeParameter(name: "T", type: !983)
!4766 = !DILocation(line: 487, column: 1, scope: !4758)
!4767 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<proc_macro::bridge::client::BridgeState>>", linkageName: "_ZN4core3ptr88drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..client..BridgeState$GT$$GT$17hcd4d70fee93d206cE", scope: !45, file: !562, line: 487, type: !4768, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4139, retainedNodes: !4770)
!4768 = !DISubroutineType(types: !4769)
!4769 = !{null, !4149}
!4770 = !{!4771}
!4771 = !DILocalVariable(arg: 1, scope: !4767, file: !562, line: 487, type: !4149)
!4772 = !DILocation(line: 487, column: 1, scope: !4767)
!4773 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<proc_macro::bridge::client::TokenStream>>", linkageName: "_ZN4core3ptr88drop_in_place$LT$core..option..Option$LT$proc_macro..bridge..client..TokenStream$GT$$GT$17h0d2fe3aa7bb6e441E", scope: !45, file: !562, line: 487, type: !4774, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4779, retainedNodes: !4777)
!4774 = !DISubroutineType(types: !4775)
!4775 = !{null, !4776}
!4776 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<proc_macro::bridge::client::TokenStream>", baseType: !340, size: 64, align: 64, dwarfAddressSpace: 0)
!4777 = !{!4778}
!4778 = !DILocalVariable(arg: 1, scope: !4773, file: !562, line: 487, type: !4776)
!4779 = !{!945}
!4780 = !DILocation(line: 487, column: 1, scope: !4773)
!4781 = distinct !DISubprogram(name: "drop_in_place<core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>>", linkageName: "_ZN4core3ptr90drop_in_place$LT$core..cell..UnsafeCell$LT$proc_macro..bridge..client..BridgeState$GT$$GT$17hc8529c697a384335E", scope: !45, file: !562, line: 487, type: !4782, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4787, retainedNodes: !4785)
!4782 = !DISubroutineType(types: !4783)
!4783 = !{null, !4784}
!4784 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>", baseType: !986, size: 64, align: 64, dwarfAddressSpace: 0)
!4785 = !{!4786}
!4786 = !DILocalVariable(arg: 1, scope: !4781, file: !562, line: 487, type: !4784)
!4787 = !{!4788}
!4788 = !DITemplateTypeParameter(name: "T", type: !986)
!4789 = !DILocation(line: 487, column: 1, scope: !4781)
!4790 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", linkageName: "_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h6a8e35d5e16ac4e8E", scope: !45, file: !562, line: 487, type: !4791, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3482, retainedNodes: !4794)
!4791 = !DISubroutineType(types: !4792)
!4792 = !{null, !4793}
!4793 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", baseType: !2922, size: 64, align: 64, dwarfAddressSpace: 0)
!4794 = !{!4795}
!4795 = !DILocalVariable(arg: 1, scope: !4790, file: !562, line: 487, type: !4793)
!4796 = !DILocation(line: 487, column: 1, scope: !4790)
!4797 = distinct !DISubprogram(name: "drop_in_place<std::panicking::begin_panic::PanicPayload<alloc::string::String>>", linkageName: "_ZN4core3ptr91drop_in_place$LT$std..panicking..begin_panic..PanicPayload$LT$alloc..string..String$GT$$GT$17hdb31efc448dc26bcE", scope: !45, file: !562, line: 487, type: !4798, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4803, retainedNodes: !4801)
!4798 = !DISubroutineType(types: !4799)
!4799 = !{null, !4800}
!4800 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::panicking::begin_panic::PanicPayload<alloc::string::String>", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!4801 = !{!4802}
!4802 = !DILocalVariable(arg: 1, scope: !4797, file: !562, line: 487, type: !4800)
!4803 = !{!4804}
!4804 = !DITemplateTypeParameter(name: "T", type: !13)
!4805 = !DILocation(line: 487, column: 1, scope: !4797)
!4806 = distinct !DISubprogram(name: "drop_in_place<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr92drop_in_place$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$17h297f13f5d1085cddE", scope: !45, file: !562, line: 487, type: !4807, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4815, retainedNodes: !4813)
!4807 = !DISubroutineType(types: !4808)
!4808 = !{null, !4809}
!4809 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut (dyn std::error::Error + core::marker::Send + core::marker::Sync)", file: !2, size: 128, align: 64, elements: !4810, templateParams: !27, identifier: "aa2475956521b5aed2a4396f47ad888b")
!4810 = !{!4811, !4812}
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4809, file: !2, baseType: !182, size: 64, align: 64)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !4809, file: !2, baseType: !185, size: 64, align: 64, offset: 64)
!4813 = !{!4814}
!4814 = !DILocalVariable(arg: 1, scope: !4806, file: !562, line: 487, type: !4809)
!4815 = !{!4816}
!4816 = !DITemplateTypeParameter(name: "T", type: !183)
!4817 = !DILocation(line: 487, column: 1, scope: !4806)
!4818 = distinct !DISubprogram(name: "parse<proc_macro::TokenStream>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h0619204c43476cdeE", scope: !4820, file: !4819, line: 2336, type: !4821, scopeLine: 2336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4840, retainedNodes: !4838)
!4819 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "dd49fcee40af5f348df1f9868b20cc92")
!4820 = !DINamespace(name: "{impl#0}", scope: !602)
!4821 = !DISubroutineType(types: !4822)
!4822 = !{!4823, !202}
!4823 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<proc_macro::TokenStream, proc_macro::LexError>", scope: !877, file: !2, size: 64, align: 32, elements: !4824, templateParams: !27, identifier: "d79076d275d4caaaeefc70d867b7da69")
!4824 = !{!4825}
!4825 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4823, file: !2, size: 64, align: 32, elements: !4826, templateParams: !27, identifier: "580bd1887f7d4601b26eef10ad55c49", discriminator: !4837)
!4826 = !{!4827, !4833}
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !4825, file: !2, baseType: !4828, size: 64, align: 32, extraData: i64 0)
!4828 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !4823, file: !2, size: 64, align: 32, elements: !4829, templateParams: !4831, identifier: "ad1018121d1305c2334bc25d4e855df0")
!4829 = !{!4830}
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4828, file: !2, baseType: !337, size: 32, align: 32, offset: 32)
!4831 = !{!4647, !4832}
!4832 = !DITemplateTypeParameter(name: "E", type: !220)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !4825, file: !2, baseType: !4834, size: 64, align: 32, extraData: i64 1)
!4834 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !4823, file: !2, size: 64, align: 32, elements: !4835, templateParams: !4831, identifier: "a939f23bf08df823e1bbda4bb6a3909a")
!4835 = !{!4836}
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4834, file: !2, baseType: !220, align: 8, offset: 32)
!4837 = !DIDerivedType(tag: DW_TAG_member, scope: !4823, file: !2, baseType: !356, size: 32, align: 32, flags: DIFlagArtificial)
!4838 = !{!4839}
!4839 = !DILocalVariable(name: "self", arg: 1, scope: !4818, file: !4819, line: 2336, type: !202)
!4840 = !{!4841}
!4841 = !DITemplateTypeParameter(name: "F", type: !337)
!4842 = !DILocation(line: 2336, column: 30, scope: !4818)
!4843 = !DILocation(line: 2337, column: 9, scope: !4818)
!4844 = !DILocation(line: 2338, column: 6, scope: !4818)
!4845 = distinct !DISubprogram(name: "{closure#0}<char>", linkageName: "_ZN4core3str4iter29MatchIndicesInternal$LT$P$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h69c42f6f0e091974E", scope: !4847, file: !4846, line: 995, type: !4850, scopeLine: 995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4879, retainedNodes: !4873)
!4846 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "94cf8b13d76879430c291e9ed66f42eb")
!4847 = !DINamespace(name: "next", scope: !4848)
!4848 = !DINamespace(name: "{impl#27}", scope: !4849)
!4849 = !DINamespace(name: "iter", scope: !602)
!4850 = !DISubroutineType(types: !4851)
!4851 = !{!4852, !4856, !4869}
!4852 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, &str)", file: !2, size: 192, align: 64, elements: !4853, templateParams: !27, identifier: "237ac559ae5fb044466d595d6998791b")
!4853 = !{!4854, !4855}
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4852, file: !2, baseType: !9, size: 64, align: 64)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !4852, file: !2, baseType: !202, size: 128, align: 64, offset: 64)
!4856 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char>", scope: !4847, file: !2, size: 64, align: 64, elements: !4857, templateParams: !27, identifier: "55896e315b4140344032c29ae9597e0c")
!4857 = !{!4858}
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__0", scope: !4856, file: !2, baseType: !4859, size: 64, align: 64)
!4859 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::pattern::CharSearcher", baseType: !4860, size: 64, align: 64, dwarfAddressSpace: 0)
!4860 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharSearcher", scope: !4861, file: !2, size: 384, align: 64, elements: !4862, templateParams: !27, identifier: "66a3a53d70287c37d9a0ad7f46c288ce")
!4861 = !DINamespace(name: "pattern", scope: !602)
!4862 = !{!4863, !4864, !4865, !4866, !4867, !4868}
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "haystack", scope: !4860, file: !2, baseType: !202, size: 128, align: 64)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "finger", scope: !4860, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "finger_back", scope: !4860, file: !2, baseType: !9, size: 64, align: 64, offset: 192)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "needle", scope: !4860, file: !2, baseType: !2633, size: 32, align: 32, offset: 320)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_size", scope: !4860, file: !2, baseType: !9, size: 64, align: 64, offset: 256)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_encoded", scope: !4860, file: !2, baseType: !1332, size: 32, align: 8, offset: 352)
!4869 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, usize)", file: !2, size: 128, align: 64, elements: !4870, templateParams: !27, identifier: "105266767139aa3a5d0ea4c0b52d55d0")
!4870 = !{!4871, !4872}
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4869, file: !2, baseType: !9, size: 64, align: 64)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !4869, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4873 = !{!4874, !4875, !4877, !4878}
!4874 = !DILocalVariable(name: "self__0", scope: !4845, file: !4846, line: 991, type: !4860, align: 8)
!4875 = !DILocalVariable(name: "start", scope: !4876, file: !4846, line: 995, type: !9, align: 8)
!4876 = distinct !DILexicalBlock(scope: !4845, file: !4846, line: 995, column: 33)
!4877 = !DILocalVariable(name: "end", scope: !4876, file: !4846, line: 995, type: !9, align: 8)
!4878 = !DILocalVariable(arg: 2, scope: !4845, file: !4846, line: 995, type: !4869)
!4879 = !{!4880}
!4880 = !DITemplateTypeParameter(name: "P", type: !2633)
!4881 = !DILocation(line: 991, column: 13, scope: !4845)
!4882 = !DILocation(line: 995, column: 19, scope: !4845)
!4883 = !DILocalVariable(name: "i", scope: !4884, file: !4846, line: 995, type: !655, align: 8)
!4884 = !DILexicalBlockFile(scope: !4885, file: !4846, discriminator: 0)
!4885 = distinct !DISubprogram(name: "get_unchecked<core::ops::range::Range<usize>>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h0c10beb9d4b5d5eeE", scope: !4820, file: !4819, line: 505, type: !4886, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4890, retainedNodes: !4888)
!4886 = !DISubroutineType(types: !4887)
!4887 = !{!202, !202, !655}
!4888 = !{!4889, !4883}
!4889 = !DILocalVariable(name: "self", scope: !4884, file: !4846, line: 995, type: !202, align: 8)
!4890 = !{!4891}
!4891 = !DITemplateTypeParameter(name: "I", type: !655)
!4892 = !DILocation(line: 995, column: 50, scope: !4884, inlinedAt: !4893)
!4893 = !DILocation(line: 995, column: 50, scope: !4876)
!4894 = !DILocation(line: 995, column: 20, scope: !4845)
!4895 = !DILocation(line: 995, column: 20, scope: !4876)
!4896 = !DILocation(line: 995, column: 27, scope: !4845)
!4897 = !DILocation(line: 995, column: 27, scope: !4876)
!4898 = !DILocation(line: 995, column: 82, scope: !4876)
!4899 = !DILocation(line: 995, column: 42, scope: !4876)
!4900 = !DILocation(line: 995, column: 32, scope: !4845)
!4901 = distinct !DISubprogram(name: "get_unchecked", linkageName: "_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h6c0b377acac096abE", scope: !4903, file: !4902, line: 197, type: !4905, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !4911)
!4902 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/traits.rs", directory: "", checksumkind: CSK_MD5, checksum: "fe011983167a64afa5cd9b7538fc9cef")
!4903 = !DINamespace(name: "{impl#7}", scope: !4904)
!4904 = !DINamespace(name: "traits", scope: !602)
!4905 = !DISubroutineType(types: !4906)
!4906 = !{!4907, !655, !4907}
!4907 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const str", file: !2, size: 128, align: 64, elements: !4908, templateParams: !27, identifier: "c0e5994a8e99afccd68a87827900070")
!4908 = !{!4909, !4910}
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !4907, file: !2, baseType: !205, size: 64, align: 64)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4907, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4911 = !{!4912, !4913, !4914, !4916, !4918}
!4912 = !DILocalVariable(name: "self", arg: 1, scope: !4901, file: !4902, line: 197, type: !655)
!4913 = !DILocalVariable(name: "slice", arg: 2, scope: !4901, file: !4902, line: 197, type: !4907)
!4914 = !DILocalVariable(name: "slice", scope: !4915, file: !4902, line: 198, type: !565, align: 8)
!4915 = distinct !DILexicalBlock(scope: !4901, file: !4902, line: 198, column: 9)
!4916 = !DILocalVariable(name: "ptr", scope: !4917, file: !4902, line: 201, type: !52, align: 8)
!4917 = distinct !DILexicalBlock(scope: !4915, file: !4902, line: 201, column: 9)
!4918 = !DILocalVariable(name: "len", scope: !4919, file: !4902, line: 202, type: !9, align: 8)
!4919 = distinct !DILexicalBlock(scope: !4917, file: !4902, line: 202, column: 9)
!4920 = !DILocation(line: 197, column: 29, scope: !4901)
!4921 = !DILocation(line: 197, column: 35, scope: !4901)
!4922 = !DILocation(line: 198, column: 21, scope: !4901)
!4923 = !DILocation(line: 198, column: 13, scope: !4915)
!4924 = !DILocation(line: 201, column: 28, scope: !4915)
!4925 = !DILocalVariable(name: "self", scope: !4926, file: !4902, line: 201, type: !565, align: 8)
!4926 = !DILexicalBlockFile(scope: !4927, file: !4902, discriminator: 0)
!4927 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hdfcda9380c75b2a2E", scope: !4928, file: !576, line: 1385, type: !4929, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !4931)
!4928 = !DINamespace(name: "{impl#1}", scope: !578)
!4929 = !DISubroutineType(types: !4930)
!4930 = !{!52, !565}
!4931 = !{!4925}
!4932 = !DILocation(line: 201, column: 28, scope: !4926, inlinedAt: !4924)
!4933 = !DILocalVariable(name: "self", scope: !4934, file: !4902, line: 201, type: !52, align: 8)
!4934 = !DILexicalBlockFile(scope: !4935, file: !4902, discriminator: 0)
!4935 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17he468d58b556a7d79E", scope: !577, file: !576, line: 871, type: !4936, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !4938)
!4936 = !DISubroutineType(types: !4937)
!4937 = !{!52, !52, !9}
!4938 = !{!4933, !4939}
!4939 = !DILocalVariable(name: "count", scope: !4934, file: !4902, line: 201, type: !9, align: 8)
!4940 = !DILocation(line: 201, column: 28, scope: !4934, inlinedAt: !4924)
!4941 = !DILocation(line: 201, column: 47, scope: !4915)
!4942 = !DILocalVariable(name: "self", scope: !4943, file: !4902, line: 201, type: !52, align: 8)
!4943 = !DILexicalBlockFile(scope: !4944, file: !4902, discriminator: 0)
!4944 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h278b42c8a200d991E", scope: !577, file: !576, line: 453, type: !4945, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !4947)
!4945 = !DISubroutineType(types: !4946)
!4946 = !{!52, !52, !703}
!4947 = !{!4942, !4948}
!4948 = !DILocalVariable(name: "count", scope: !4943, file: !4902, line: 201, type: !703, align: 8)
!4949 = !DILocation(line: 201, column: 28, scope: !4943, inlinedAt: !4950)
!4950 = !DILocation(line: 876, column: 18, scope: !4935, inlinedAt: !4924)
!4951 = !DILocation(line: 201, column: 13, scope: !4917)
!4952 = !DILocation(line: 202, column: 19, scope: !4917)
!4953 = !DILocation(line: 202, column: 13, scope: !4919)
!4954 = !DILocation(line: 203, column: 35, scope: !4919)
!4955 = !DILocalVariable(name: "data", scope: !4956, file: !4902, line: 203, type: !52, align: 8)
!4956 = !DILexicalBlockFile(scope: !4957, file: !4902, discriminator: 0)
!4957 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h6cf0bcc2226f7384E", scope: !45, file: !562, line: 695, type: !563, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !4958)
!4958 = !{!4955, !4959}
!4959 = !DILocalVariable(name: "len", scope: !4956, file: !4902, line: 203, type: !9, align: 8)
!4960 = !DILocation(line: 203, column: 9, scope: !4956, inlinedAt: !4961)
!4961 = !DILocation(line: 203, column: 9, scope: !4919)
!4962 = !DILocation(line: 203, column: 40, scope: !4919)
!4963 = !DILocalVariable(name: "self", scope: !4964, file: !4902, line: 203, type: !52, align: 8)
!4964 = !DILexicalBlockFile(scope: !4965, file: !4902, discriminator: 0)
!4965 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb0bf0b669ab1d998E", scope: !577, file: !576, line: 46, type: !579, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !582, retainedNodes: !4966)
!4966 = !{!4963}
!4967 = !DILocation(line: 203, column: 9, scope: !4964, inlinedAt: !4968)
!4968 = !DILocation(line: 696, column: 20, scope: !4957, inlinedAt: !4961)
!4969 = !DILocalVariable(name: "data_address", scope: !4970, file: !4902, line: 203, type: !6, align: 8)
!4970 = !DILexicalBlockFile(scope: !4971, file: !4902, discriminator: 0)
!4971 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h496989047ed841a4E", scope: !590, file: !589, line: 110, type: !591, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !4972)
!4972 = !{!4969, !4973}
!4973 = !DILocalVariable(name: "metadata", scope: !4970, file: !4902, line: 203, type: !9, align: 8)
!4974 = !DILocation(line: 203, column: 9, scope: !4970, inlinedAt: !4975)
!4975 = !DILocation(line: 696, column: 5, scope: !4957, inlinedAt: !4961)
!4976 = !DILocation(line: 204, column: 6, scope: !4901)
!4977 = distinct !DISubprogram(name: "replace<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core4cell13Cell$LT$T$GT$7replace17h0488958ed4ddb4e1E", scope: !983, file: !1022, line: 409, type: !4978, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !4980)
!4978 = !DISubroutineType(types: !4979)
!4979 = !{!989, !2223, !989}
!4980 = !{!4981, !4982}
!4981 = !DILocalVariable(name: "self", arg: 1, scope: !4977, file: !1022, line: 409, type: !2223)
!4982 = !DILocalVariable(name: "val", arg: 2, scope: !4977, file: !1022, line: 409, type: !989)
!4983 = !DILocation(line: 409, column: 20, scope: !4977)
!4984 = !DILocation(line: 409, column: 27, scope: !4977)
!4985 = !DILocation(line: 412, column: 37, scope: !4977)
!4986 = !DILocalVariable(name: "self", scope: !4987, file: !1022, line: 412, type: !4990, align: 8)
!4987 = distinct !DISubprogram(name: "get<proc_macro::bridge::client::BridgeState>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h8452082637a4ee25E", scope: !986, file: !1022, line: 1934, type: !4988, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1007, retainedNodes: !4991)
!4988 = !DISubroutineType(types: !4989)
!4989 = !{!3968, !4990}
!4990 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>", baseType: !986, size: 64, align: 64, dwarfAddressSpace: 0)
!4991 = !{!4986}
!4992 = !DILocation(line: 412, column: 37, scope: !4987, inlinedAt: !4985)
!4993 = !DILocation(line: 412, column: 57, scope: !4977)
!4994 = !DILocation(line: 412, column: 9, scope: !4977)
!4995 = !DILocation(line: 413, column: 5, scope: !4977)
!4996 = !DILocation(line: 413, column: 6, scope: !4977)
!4997 = !DILocation(line: 409, column: 5, scope: !4977)
!4998 = distinct !DISubprogram(name: "replace<std::thread::local::fast::DtorState>", linkageName: "_ZN4core4cell13Cell$LT$T$GT$7replace17h6b32ba01a72e7e1eE", scope: !3186, file: !1022, line: 409, type: !4999, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3192, retainedNodes: !5001)
!4999 = !DISubroutineType(types: !5000)
!5000 = !{!479, !3232, !479}
!5001 = !{!5002, !5003}
!5002 = !DILocalVariable(name: "self", arg: 1, scope: !4998, file: !1022, line: 409, type: !3232)
!5003 = !DILocalVariable(name: "val", arg: 2, scope: !4998, file: !1022, line: 409, type: !479)
!5004 = !DILocation(line: 409, column: 20, scope: !4998)
!5005 = !DILocation(line: 409, column: 27, scope: !4998)
!5006 = !DILocation(line: 412, column: 37, scope: !4998)
!5007 = !DILocalVariable(name: "self", scope: !5008, file: !1022, line: 412, type: !3241, align: 8)
!5008 = distinct !DISubprogram(name: "get<std::thread::local::fast::DtorState>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h61f031b803bd9714E", scope: !3189, file: !1022, line: 1934, type: !3238, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3192, retainedNodes: !5009)
!5009 = !{!5007}
!5010 = !DILocation(line: 412, column: 37, scope: !5008, inlinedAt: !5006)
!5011 = !DILocation(line: 412, column: 9, scope: !4998)
!5012 = !DILocation(line: 413, column: 5, scope: !4998)
!5013 = !DILocation(line: 413, column: 6, scope: !4998)
!5014 = !DILocation(line: 409, column: 5, scope: !4998)
!5015 = distinct !DISubprogram(name: "encode_utf8_raw", linkageName: "_ZN4core4char7methods15encode_utf8_raw17h113a3882029519ffE", scope: !5017, file: !5016, line: 1675, type: !5019, scopeLine: 1675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5021)
!5016 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/char/methods.rs", directory: "", checksumkind: CSK_MD5, checksum: "f022f296c6d29fd4ac1963268a3eecbc")
!5017 = !DINamespace(name: "methods", scope: !5018)
!5018 = !DINamespace(name: "char", scope: !21)
!5019 = !DISubroutineType(types: !5020)
!5020 = !{!768, !356, !768}
!5021 = !{!5022, !5023, !5024, !5026, !5029, !5031, !5032, !5034, !5035, !5036, !5038, !5039, !5040}
!5022 = !DILocalVariable(name: "code", arg: 1, scope: !5015, file: !5016, line: 1675, type: !356)
!5023 = !DILocalVariable(name: "dst", arg: 2, scope: !5015, file: !5016, line: 1675, type: !768)
!5024 = !DILocalVariable(name: "len", scope: !5025, file: !5016, line: 1676, type: !9, align: 8)
!5025 = distinct !DILexicalBlock(scope: !5015, file: !5016, line: 1676, column: 5)
!5026 = !DILocalVariable(name: "a", scope: !5027, file: !5016, line: 1678, type: !5028, align: 8)
!5027 = distinct !DILexicalBlock(scope: !5025, file: !5016, line: 1678, column: 9)
!5028 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut u8", baseType: !53, size: 64, align: 64, dwarfAddressSpace: 0)
!5029 = !DILocalVariable(name: "a", scope: !5030, file: !5016, line: 1681, type: !5028, align: 8)
!5030 = distinct !DILexicalBlock(scope: !5025, file: !5016, line: 1681, column: 9)
!5031 = !DILocalVariable(name: "b", scope: !5030, file: !5016, line: 1681, type: !5028, align: 8)
!5032 = !DILocalVariable(name: "a", scope: !5033, file: !5016, line: 1685, type: !5028, align: 8)
!5033 = distinct !DILexicalBlock(scope: !5025, file: !5016, line: 1685, column: 9)
!5034 = !DILocalVariable(name: "b", scope: !5033, file: !5016, line: 1685, type: !5028, align: 8)
!5035 = !DILocalVariable(name: "c", scope: !5033, file: !5016, line: 1685, type: !5028, align: 8)
!5036 = !DILocalVariable(name: "a", scope: !5037, file: !5016, line: 1690, type: !5028, align: 8)
!5037 = distinct !DILexicalBlock(scope: !5025, file: !5016, line: 1690, column: 9)
!5038 = !DILocalVariable(name: "b", scope: !5037, file: !5016, line: 1690, type: !5028, align: 8)
!5039 = !DILocalVariable(name: "c", scope: !5037, file: !5016, line: 1690, type: !5028, align: 8)
!5040 = !DILocalVariable(name: "d", scope: !5037, file: !5016, line: 1690, type: !5028, align: 8)
!5041 = !DILocation(line: 1675, column: 24, scope: !5015)
!5042 = !DILocation(line: 1675, column: 35, scope: !5015)
!5043 = !DILocation(line: 1676, column: 9, scope: !5025)
!5044 = !DILocalVariable(name: "index", scope: !5045, file: !5016, line: 1677, type: !505, align: 1)
!5045 = !DILexicalBlockFile(scope: !5046, file: !5016, discriminator: 0)
!5046 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::RangeFull>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h22073cff8c3e38e1E", scope: !5047, file: !646, line: 29, type: !5048, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1775, retainedNodes: !5050)
!5047 = !DINamespace(name: "{impl#1}", scope: !648)
!5048 = !DISubroutineType(types: !5049)
!5049 = !{!768, !768, !505, !508}
!5050 = !{!5051, !5044}
!5051 = !DILocalVariable(name: "self", scope: !5045, file: !5016, line: 1677, type: !768, align: 8)
!5052 = !DILocation(line: 1677, column: 22, scope: !5045, inlinedAt: !5053)
!5053 = !DILocation(line: 1677, column: 22, scope: !5025)
!5054 = !DILocalVariable(name: "index", scope: !5055, file: !5016, line: 1703, type: !5059, align: 8)
!5055 = !DILexicalBlockFile(scope: !5056, file: !5016, discriminator: 0)
!5056 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h4e80946c374c663bE", scope: !5047, file: !646, line: 29, type: !5057, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5064, retainedNodes: !5062)
!5057 = !DISubroutineType(types: !5058)
!5058 = !{!768, !768, !5059, !508}
!5059 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !506, file: !2, size: 64, align: 64, elements: !5060, templateParams: !659, identifier: "e254bd9803ca1fe3c70093646958bde2")
!5060 = !{!5061}
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5059, file: !2, baseType: !9, size: 64, align: 64)
!5062 = !{!5063, !5054}
!5063 = !DILocalVariable(name: "self", scope: !5055, file: !5016, line: 1703, type: !768, align: 8)
!5064 = !{!55, !5065}
!5065 = !DITemplateTypeParameter(name: "I", type: !5059)
!5066 = !DILocation(line: 1703, column: 10, scope: !5055, inlinedAt: !5067)
!5067 = !DILocation(line: 1703, column: 10, scope: !5025)
!5068 = !DILocalVariable(name: "self", scope: !5069, file: !5016, line: 1677, type: !505, align: 1)
!5069 = !DILexicalBlockFile(scope: !5070, file: !5016, discriminator: 0)
!5070 = distinct !DISubprogram(name: "index_mut<u8>", linkageName: "_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hfb1b705895f59838E", scope: !1785, file: !646, line: 437, type: !5071, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !5073)
!5071 = !DISubroutineType(types: !5072)
!5072 = !{!768, !505, !768, !508}
!5073 = !{!5068, !5074}
!5074 = !DILocalVariable(name: "slice", scope: !5069, file: !5016, line: 1677, type: !768, align: 8)
!5075 = !DILocation(line: 1677, column: 22, scope: !5069, inlinedAt: !5076)
!5076 = !DILocation(line: 30, column: 9, scope: !5046, inlinedAt: !5053)
!5077 = !DILocation(line: 1676, column: 24, scope: !5015)
!5078 = !DILocation(line: 1676, column: 15, scope: !5015)
!5079 = !DILocation(line: 1677, column: 12, scope: !5025)
!5080 = !DILocation(line: 1677, column: 11, scope: !5025)
!5081 = !DILocation(line: 1677, column: 5, scope: !5025)
!5082 = !DILocation(line: 1696, column: 14, scope: !5025)
!5083 = !DILocalVariable(name: "x", scope: !5084, file: !5016, line: 1696, type: !556, align: 8)
!5084 = !DILexicalBlockFile(scope: !5085, file: !5016, discriminator: 0)
!5085 = distinct !DISubprogram(name: "new_display<usize>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17hc9388ccaeaed3d47E", scope: !2664, file: !2609, line: 318, type: !5086, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !274, retainedNodes: !5088)
!5086 = !DISubroutineType(types: !5087)
!5087 = !{!2664, !556}
!5088 = !{!5083}
!5089 = !DILocation(line: 1696, column: 14, scope: !5084, inlinedAt: !5090)
!5090 = !DILocation(line: 1698, column: 13, scope: !5025)
!5091 = !DILocalVariable(name: "x", scope: !5092, file: !5016, line: 1696, type: !556, align: 8)
!5092 = !DILexicalBlockFile(scope: !5093, file: !5016, discriminator: 0)
!5093 = distinct !DISubprogram(name: "new<usize>", linkageName: "_ZN4core3fmt10ArgumentV13new17h9f1fe38e671da982E", scope: !2664, file: !2609, line: 329, type: !5094, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !274, retainedNodes: !5099)
!5094 = !DISubroutineType(types: !5095)
!5095 = !{!2664, !556, !5096}
!5096 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&usize, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !5097, size: 64, align: 64, dwarfAddressSpace: 0)
!5097 = !DISubroutineType(types: !5098)
!5098 = !{!2674, !556, !2690}
!5099 = !{!5091, !5100}
!5100 = !DILocalVariable(name: "f", scope: !5092, file: !5016, line: 1696, type: !5096, align: 8)
!5101 = !DILocation(line: 1696, column: 14, scope: !5092, inlinedAt: !5102)
!5102 = !DILocation(line: 319, column: 13, scope: !5085, inlinedAt: !5090)
!5103 = !DILocation(line: 1678, column: 13, scope: !5025)
!5104 = !DILocation(line: 1681, column: 13, scope: !5025)
!5105 = !DILocation(line: 1685, column: 13, scope: !5025)
!5106 = !DILocation(line: 1690, column: 13, scope: !5025)
!5107 = !DILocation(line: 1690, column: 14, scope: !5025)
!5108 = !DILocation(line: 1690, column: 14, scope: !5037)
!5109 = !DILocation(line: 1690, column: 17, scope: !5025)
!5110 = !DILocation(line: 1690, column: 17, scope: !5037)
!5111 = !DILocation(line: 1690, column: 20, scope: !5025)
!5112 = !DILocation(line: 1690, column: 20, scope: !5037)
!5113 = !DILocation(line: 1690, column: 23, scope: !5025)
!5114 = !DILocation(line: 1690, column: 23, scope: !5037)
!5115 = !DILocation(line: 1691, column: 19, scope: !5037)
!5116 = !DILocation(line: 1691, column: 18, scope: !5037)
!5117 = !DILocation(line: 1691, column: 13, scope: !5037)
!5118 = !DILocation(line: 1692, column: 19, scope: !5037)
!5119 = !DILocation(line: 1692, column: 18, scope: !5037)
!5120 = !DILocation(line: 1692, column: 13, scope: !5037)
!5121 = !DILocation(line: 1693, column: 19, scope: !5037)
!5122 = !DILocation(line: 1693, column: 18, scope: !5037)
!5123 = !DILocation(line: 1693, column: 13, scope: !5037)
!5124 = !DILocation(line: 1694, column: 19, scope: !5037)
!5125 = !DILocation(line: 1694, column: 18, scope: !5037)
!5126 = !DILocation(line: 1694, column: 13, scope: !5037)
!5127 = !DILocation(line: 1695, column: 9, scope: !5025)
!5128 = !DILocation(line: 1703, column: 16, scope: !5025)
!5129 = !DILocation(line: 1703, column: 14, scope: !5025)
!5130 = !DILocalVariable(name: "self", scope: !5131, file: !5016, line: 1703, type: !5059, align: 8)
!5131 = !DILexicalBlockFile(scope: !5132, file: !5016, discriminator: 0)
!5132 = distinct !DISubprogram(name: "index_mut<u8>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h0cfe497a2af580dbE", scope: !5133, file: !646, line: 355, type: !5134, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !5136)
!5133 = !DINamespace(name: "{impl#4}", scope: !648)
!5134 = !DISubroutineType(types: !5135)
!5135 = !{!768, !5059, !768, !508}
!5136 = !{!5130, !5137}
!5137 = !DILocalVariable(name: "slice", scope: !5131, file: !5016, line: 1703, type: !768, align: 8)
!5138 = !DILocation(line: 1703, column: 10, scope: !5131, inlinedAt: !5139)
!5139 = !DILocation(line: 30, column: 9, scope: !5056, inlinedAt: !5067)
!5140 = !DILocation(line: 1685, column: 14, scope: !5025)
!5141 = !DILocation(line: 1685, column: 14, scope: !5033)
!5142 = !DILocation(line: 1685, column: 17, scope: !5025)
!5143 = !DILocation(line: 1685, column: 17, scope: !5033)
!5144 = !DILocation(line: 1685, column: 20, scope: !5025)
!5145 = !DILocation(line: 1685, column: 20, scope: !5033)
!5146 = !DILocation(line: 1686, column: 19, scope: !5033)
!5147 = !DILocation(line: 1686, column: 18, scope: !5033)
!5148 = !DILocation(line: 1686, column: 13, scope: !5033)
!5149 = !DILocation(line: 1687, column: 19, scope: !5033)
!5150 = !DILocation(line: 1687, column: 18, scope: !5033)
!5151 = !DILocation(line: 1687, column: 13, scope: !5033)
!5152 = !DILocation(line: 1688, column: 19, scope: !5033)
!5153 = !DILocation(line: 1688, column: 18, scope: !5033)
!5154 = !DILocation(line: 1688, column: 13, scope: !5033)
!5155 = !DILocation(line: 1689, column: 9, scope: !5025)
!5156 = !DILocation(line: 1681, column: 14, scope: !5025)
!5157 = !DILocation(line: 1681, column: 14, scope: !5030)
!5158 = !DILocation(line: 1681, column: 17, scope: !5025)
!5159 = !DILocation(line: 1681, column: 17, scope: !5030)
!5160 = !DILocation(line: 1682, column: 19, scope: !5030)
!5161 = !DILocation(line: 1682, column: 18, scope: !5030)
!5162 = !DILocation(line: 1682, column: 13, scope: !5030)
!5163 = !DILocation(line: 1683, column: 19, scope: !5030)
!5164 = !DILocation(line: 1683, column: 18, scope: !5030)
!5165 = !DILocation(line: 1683, column: 13, scope: !5030)
!5166 = !DILocation(line: 1684, column: 9, scope: !5025)
!5167 = !DILocation(line: 1678, column: 14, scope: !5025)
!5168 = !DILocation(line: 1678, column: 14, scope: !5027)
!5169 = !DILocation(line: 1679, column: 18, scope: !5027)
!5170 = !DILocation(line: 1679, column: 13, scope: !5027)
!5171 = !DILocation(line: 1680, column: 9, scope: !5025)
!5172 = !DILocation(line: 1704, column: 2, scope: !5015)
!5173 = !DILocalVariable(name: "x", scope: !5174, file: !5016, line: 1696, type: !2742, align: 8)
!5174 = !DILexicalBlockFile(scope: !5175, file: !5016, discriminator: 0)
!5175 = distinct !DISubprogram(name: "new_upper_hex<u32>", linkageName: "_ZN4core3fmt10ArgumentV113new_upper_hex17h88dc4512c78c9916E", scope: !2664, file: !2609, line: 318, type: !5176, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5179, retainedNodes: !5178)
!5176 = !DISubroutineType(types: !5177)
!5177 = !{!2664, !2742}
!5178 = !{!5173}
!5179 = !{!5180}
!5180 = !DITemplateTypeParameter(name: "T", type: !356)
!5181 = !DILocation(line: 1696, column: 14, scope: !5174, inlinedAt: !5182)
!5182 = !DILocation(line: 1699, column: 13, scope: !5025)
!5183 = !DILocalVariable(name: "x", scope: !5184, file: !5016, line: 1696, type: !2742, align: 8)
!5184 = !DILexicalBlockFile(scope: !5185, file: !5016, discriminator: 0)
!5185 = distinct !DISubprogram(name: "new<u32>", linkageName: "_ZN4core3fmt10ArgumentV13new17h11d7a3da2da161e0E", scope: !2664, file: !2609, line: 329, type: !5186, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5179, retainedNodes: !5191)
!5186 = !DISubroutineType(types: !5187)
!5187 = !{!2664, !2742, !5188}
!5188 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&u32, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !5189, size: 64, align: 64, dwarfAddressSpace: 0)
!5189 = !DISubroutineType(types: !5190)
!5190 = !{!2674, !2742, !2690}
!5191 = !{!5183, !5192}
!5192 = !DILocalVariable(name: "f", scope: !5184, file: !5016, line: 1696, type: !5188, align: 8)
!5193 = !DILocation(line: 1696, column: 14, scope: !5184, inlinedAt: !5194)
!5194 = !DILocation(line: 319, column: 13, scope: !5175, inlinedAt: !5182)
!5195 = !DILocation(line: 1700, column: 13, scope: !5025)
!5196 = !DILocalVariable(name: "x", scope: !5197, file: !5016, line: 1696, type: !556, align: 8)
!5197 = !DILexicalBlockFile(scope: !5198, file: !5016, discriminator: 0)
!5198 = distinct !DISubprogram(name: "new_display<usize>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17hc9388ccaeaed3d47E", scope: !2664, file: !2609, line: 318, type: !5086, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !274, retainedNodes: !5199)
!5199 = !{!5196}
!5200 = !DILocation(line: 1696, column: 14, scope: !5197, inlinedAt: !5195)
!5201 = !DILocalVariable(name: "x", scope: !5202, file: !5016, line: 1696, type: !556, align: 8)
!5202 = !DILexicalBlockFile(scope: !5203, file: !5016, discriminator: 0)
!5203 = distinct !DISubprogram(name: "new<usize>", linkageName: "_ZN4core3fmt10ArgumentV13new17h9f1fe38e671da982E", scope: !2664, file: !2609, line: 329, type: !5094, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !274, retainedNodes: !5204)
!5204 = !{!5201, !5205}
!5205 = !DILocalVariable(name: "f", scope: !5202, file: !5016, line: 1696, type: !5096, align: 8)
!5206 = !DILocation(line: 1696, column: 14, scope: !5202, inlinedAt: !5207)
!5207 = !DILocation(line: 319, column: 13, scope: !5198, inlinedAt: !5195)
!5208 = distinct !DISubprogram(name: "len_utf8", linkageName: "_ZN4core4char7methods8len_utf817h14434f0c82b1c7ddE", scope: !5017, file: !5016, line: 1647, type: !5209, scopeLine: 1647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5211)
!5209 = !DISubroutineType(types: !5210)
!5210 = !{!9, !356}
!5211 = !{!5212}
!5212 = !DILocalVariable(name: "code", arg: 1, scope: !5208, file: !5016, line: 1647, type: !356)
!5213 = !DILocation(line: 1647, column: 19, scope: !5208)
!5214 = !DILocation(line: 1648, column: 8, scope: !5208)
!5215 = !DILocation(line: 1650, column: 15, scope: !5208)
!5216 = !DILocation(line: 1649, column: 9, scope: !5208)
!5217 = !DILocation(line: 1648, column: 5, scope: !5208)
!5218 = !DILocation(line: 1657, column: 2, scope: !5208)
!5219 = !DILocation(line: 1652, column: 15, scope: !5208)
!5220 = !DILocation(line: 1651, column: 9, scope: !5208)
!5221 = !DILocation(line: 1650, column: 12, scope: !5208)
!5222 = !DILocation(line: 1655, column: 9, scope: !5208)
!5223 = !DILocation(line: 1652, column: 12, scope: !5208)
!5224 = !DILocation(line: 1653, column: 9, scope: !5208)
!5225 = distinct !DISubprogram(name: "fmt<u8, 16>", linkageName: "_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17h26f7dc4fb55d5aa1E", scope: !5227, file: !5226, line: 251, type: !3790, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !5229)
!5226 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/array/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e237aff39bff30ac55984ee183267020")
!5227 = !DINamespace(name: "{impl#12}", scope: !5228)
!5228 = !DINamespace(name: "array", scope: !21)
!5229 = !{!5230, !5231}
!5230 = !DILocalVariable(name: "self", arg: 1, scope: !5225, file: !5226, line: 251, type: !3778)
!5231 = !DILocalVariable(name: "f", arg: 2, scope: !5225, file: !5226, line: 251, type: !2690)
!5232 = !DILocation(line: 251, column: 12, scope: !5225)
!5233 = !DILocation(line: 251, column: 19, scope: !5225)
!5234 = !DILocalVariable(name: "index", scope: !5235, file: !5226, line: 252, type: !505, align: 1)
!5235 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFull, 16>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hf9d230c4d02121caE", scope: !5236, file: !5226, line: 285, type: !5237, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1775, retainedNodes: !5239)
!5236 = !DINamespace(name: "{impl#15}", scope: !5228)
!5237 = !DISubroutineType(types: !5238)
!5238 = !{!529, !3778, !505, !508}
!5239 = !{!5240, !5234}
!5240 = !DILocalVariable(name: "self", scope: !5235, file: !5226, line: 252, type: !3778, align: 8)
!5241 = !DILocation(line: 252, column: 27, scope: !5235, inlinedAt: !5242)
!5242 = !DILocation(line: 252, column: 27, scope: !5225)
!5243 = !DILocalVariable(name: "index", scope: !5244, file: !5226, line: 252, type: !505, align: 1)
!5244 = !DILexicalBlockFile(scope: !5245, file: !5226, discriminator: 0)
!5245 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFull>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hc9640f19441b2f23E", scope: !1770, file: !646, line: 17, type: !1771, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1775, retainedNodes: !5246)
!5246 = !{!5247, !5243}
!5247 = !DILocalVariable(name: "self", scope: !5244, file: !5226, line: 252, type: !529, align: 8)
!5248 = !DILocation(line: 252, column: 27, scope: !5244, inlinedAt: !5249)
!5249 = !DILocation(line: 286, column: 9, scope: !5235, inlinedAt: !5242)
!5250 = !DILocalVariable(name: "self", scope: !5251, file: !5226, line: 252, type: !505, align: 1)
!5251 = !DILexicalBlockFile(scope: !5252, file: !5226, discriminator: 0)
!5252 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h551c18f76d8ef7aeE", scope: !1785, file: !646, line: 432, type: !1786, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !5253)
!5253 = !{!5250, !5254}
!5254 = !DILocalVariable(name: "slice", scope: !5251, file: !5226, line: 252, type: !529, align: 8)
!5255 = !DILocation(line: 252, column: 27, scope: !5251, inlinedAt: !5256)
!5256 = !DILocation(line: 18, column: 9, scope: !5245, inlinedAt: !5249)
!5257 = !DILocation(line: 252, column: 26, scope: !5225)
!5258 = !DILocation(line: 252, column: 9, scope: !5225)
!5259 = !DILocation(line: 253, column: 6, scope: !5225)
!5260 = distinct !DISubprogram(name: "copy_from_slice<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hfd2d90aaa2887edeE", scope: !1379, file: !1378, line: 3214, type: !5261, scopeLine: 3214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !5263)
!5261 = !DISubroutineType(types: !5262)
!5262 = !{null, !768, !529, !508}
!5263 = !{!5264, !5265}
!5264 = !DILocalVariable(name: "self", arg: 1, scope: !5260, file: !1378, line: 3214, type: !768)
!5265 = !DILocalVariable(name: "src", arg: 2, scope: !5260, file: !1378, line: 3214, type: !529)
!5266 = !DILocation(line: 3214, column: 28, scope: !5260)
!5267 = !DILocation(line: 3214, column: 39, scope: !5260)
!5268 = !DILocalVariable(name: "runtime", scope: !5269, file: !1378, line: 3238, type: !1355, align: 8)
!5269 = !DILexicalBlockFile(scope: !5270, file: !1378, discriminator: 0)
!5270 = distinct !DILexicalBlock(scope: !5271, file: !549, line: 2336, column: 13)
!5271 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17ha3d50afd39c4aa62E", scope: !1347, file: !549, line: 2458, type: !1348, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !5272)
!5272 = !{!5273, !5275, !5276, !5268}
!5273 = !DILocalVariable(name: "src", scope: !5274, file: !1378, line: 3238, type: !52, align: 8)
!5274 = !DILexicalBlockFile(scope: !5271, file: !1378, discriminator: 0)
!5275 = !DILocalVariable(name: "dst", scope: !5274, file: !1378, line: 3238, type: !289, align: 8)
!5276 = !DILocalVariable(name: "count", scope: !5274, file: !1378, line: 3238, type: !9, align: 8)
!5277 = !DILocation(line: 3238, column: 13, scope: !5269, inlinedAt: !5278)
!5278 = !DILocation(line: 3238, column: 13, scope: !5260)
!5279 = !DILocation(line: 3230, column: 12, scope: !5260)
!5280 = !DILocation(line: 3238, column: 38, scope: !5260)
!5281 = !DILocalVariable(name: "self", scope: !5282, file: !1378, line: 3238, type: !529, align: 8)
!5282 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h06daf2116dc3c858E", scope: !1379, file: !1378, line: 476, type: !1380, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !5283)
!5283 = !{!5281}
!5284 = !DILocation(line: 3238, column: 38, scope: !5282, inlinedAt: !5280)
!5285 = !DILocation(line: 3238, column: 13, scope: !5274, inlinedAt: !5278)
!5286 = !DILocation(line: 3238, column: 52, scope: !5260)
!5287 = !DILocalVariable(name: "self", scope: !5288, file: !1378, line: 3238, type: !768, align: 8)
!5288 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17he1bead3ba556669aE", scope: !1379, file: !1378, line: 506, type: !5289, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !5291)
!5289 = !DISubroutineType(types: !5290)
!5290 = !{!289, !768}
!5291 = !{!5287}
!5292 = !DILocation(line: 3238, column: 52, scope: !5288, inlinedAt: !5286)
!5293 = !DILocation(line: 3238, column: 71, scope: !5260)
!5294 = !DILocation(line: 3240, column: 6, scope: !5260)
!5295 = !DILocation(line: 3231, column: 13, scope: !5260)
!5296 = distinct !DISubprogram(name: "memchr", linkageName: "_ZN4core5slice6memchr6memchr17h66ee0e6458792bd0E", scope: !5298, file: !5297, line: 38, type: !5299, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5301)
!5297 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/memchr.rs", directory: "", checksumkind: CSK_MD5, checksum: "065f1e34afe7661a69ed38e528fd9ddb")
!5298 = !DINamespace(name: "memchr", scope: !541)
!5299 = !DISubroutineType(types: !5300)
!5300 = !{!2697, !53, !529}
!5301 = !{!5302, !5303}
!5302 = !DILocalVariable(name: "x", arg: 1, scope: !5296, file: !5297, line: 38, type: !53)
!5303 = !DILocalVariable(name: "text", arg: 2, scope: !5296, file: !5297, line: 38, type: !529)
!5304 = !DILocation(line: 38, column: 15, scope: !5296)
!5305 = !DILocation(line: 38, column: 22, scope: !5296)
!5306 = !DILocation(line: 40, column: 8, scope: !5296)
!5307 = !DILocation(line: 44, column: 25, scope: !5296)
!5308 = !DILocation(line: 44, column: 5, scope: !5296)
!5309 = !DILocation(line: 41, column: 16, scope: !5296)
!5310 = !DILocalVariable(name: "self", scope: !5311, file: !5297, line: 41, type: !529, align: 8)
!5311 = !DILexicalBlockFile(scope: !5312, file: !5297, discriminator: 0)
!5312 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hba0218594868f161E", scope: !1379, file: !1378, line: 734, type: !3690, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !5313)
!5313 = !{!5310}
!5314 = !DILocation(line: 41, column: 16, scope: !5311, inlinedAt: !5309)
!5315 = !DILocation(line: 41, column: 37, scope: !5296)
!5316 = !DILocation(line: 45, column: 2, scope: !5296)
!5317 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN4core5slice6memchr6memchr28_$u7b$$u7b$closure$u7d$$u7d$17h16900041becdfdacE", scope: !5318, file: !5297, line: 41, type: !5319, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5325)
!5318 = !DINamespace(name: "memchr", scope: !5298)
!5319 = !DISubroutineType(types: !5320)
!5320 = !{!324, !5321, !82}
!5321 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::memchr::memchr::{closure_env#0}", baseType: !5322, size: 64, align: 64, dwarfAddressSpace: 0)
!5322 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !5318, file: !2, size: 64, align: 64, elements: !5323, templateParams: !27, identifier: "b00955afa1c965f699a759ca804d52c1")
!5323 = !{!5324}
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__x", scope: !5322, file: !2, baseType: !82, size: 64, align: 64)
!5325 = !{!5326, !5327}
!5326 = !DILocalVariable(name: "elt", arg: 2, scope: !5317, file: !5297, line: 41, type: !82)
!5327 = !DILocalVariable(name: "x", scope: !5317, file: !5297, line: 38, type: !53, align: 1)
!5328 = !DILocation(line: 38, column: 15, scope: !5317)
!5329 = !DILocation(line: 41, column: 38, scope: !5317)
!5330 = !DILocation(line: 41, column: 43, scope: !5317)
!5331 = !DILocation(line: 41, column: 51, scope: !5317)
!5332 = !DILocation(line: 41, column: 42, scope: !5317)
!5333 = distinct !DISubprogram(name: "map<(usize, usize), (usize, &str), core::str::iter::{impl#27}::next::{closure_env#0}<char>>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h5352ef7e5719a803E", scope: !5334, file: !1137, line: 923, type: !5347, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5367, retainedNodes: !5362)
!5334 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(usize, usize)>", scope: !20, file: !2, size: 192, align: 64, elements: !5335, templateParams: !27, identifier: "990abf00db42140b4c63b9dd480f48ae")
!5335 = !{!5336}
!5336 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5334, file: !2, size: 192, align: 64, elements: !5337, templateParams: !27, identifier: "ca2e0d050d24abac5af96d6fe9066cdf", discriminator: !5346)
!5337 = !{!5338, !5342}
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !5336, file: !2, baseType: !5339, size: 192, align: 64, extraData: i64 0)
!5339 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !5334, file: !2, size: 192, align: 64, elements: !27, templateParams: !5340, identifier: "1e0ff27580c54e441adf9fae1bbc4c81")
!5340 = !{!5341}
!5341 = !DITemplateTypeParameter(name: "T", type: !4869)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !5336, file: !2, baseType: !5343, size: 192, align: 64, extraData: i64 1)
!5343 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !5334, file: !2, size: 192, align: 64, elements: !5344, templateParams: !5340, identifier: "e19a3496fbff9c108ae2a0b8a3495600")
!5344 = !{!5345}
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5343, file: !2, baseType: !4869, size: 128, align: 64, offset: 64)
!5346 = !DIDerivedType(tag: DW_TAG_member, scope: !5334, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!5347 = !DISubroutineType(types: !5348)
!5348 = !{!5349, !5334, !4856}
!5349 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(usize, &str)>", scope: !20, file: !2, size: 192, align: 64, elements: !5350, templateParams: !27, identifier: "c4c64a2f12545a69a99d12ffe2a7aa0a")
!5350 = !{!5351}
!5351 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5349, file: !2, size: 192, align: 64, elements: !5352, templateParams: !27, identifier: "4db5841638563c1f17d8569f616a1b72", discriminator: !5361)
!5352 = !{!5353, !5357}
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !5351, file: !2, baseType: !5354, size: 192, align: 64, extraData: i64 0)
!5354 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !5349, file: !2, size: 192, align: 64, elements: !27, templateParams: !5355, identifier: "3172262305ae062779ddba9da4d2858d")
!5355 = !{!5356}
!5356 = !DITemplateTypeParameter(name: "T", type: !4852)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !5351, file: !2, baseType: !5358, size: 192, align: 64)
!5358 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !5349, file: !2, size: 192, align: 64, elements: !5359, templateParams: !5355, identifier: "5c04f08bb7bef10f29dc1c08d5ee33f4")
!5359 = !{!5360}
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5358, file: !2, baseType: !4852, size: 192, align: 64)
!5361 = !DIDerivedType(tag: DW_TAG_member, scope: !5349, file: !2, baseType: !71, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!5362 = !{!5363, !5364, !5365}
!5363 = !DILocalVariable(name: "self", arg: 1, scope: !5333, file: !1137, line: 923, type: !5334)
!5364 = !DILocalVariable(name: "f", arg: 2, scope: !5333, file: !1137, line: 923, type: !4856)
!5365 = !DILocalVariable(name: "x", scope: !5366, file: !1137, line: 929, type: !4869, align: 8)
!5366 = distinct !DILexicalBlock(scope: !5333, file: !1137, line: 929, column: 13)
!5367 = !{!5341, !5368, !5369}
!5368 = !DITemplateTypeParameter(name: "U", type: !4852)
!5369 = !DITemplateTypeParameter(name: "F", type: !4856)
!5370 = !DILocation(line: 923, column: 28, scope: !5333)
!5371 = !DILocation(line: 923, column: 34, scope: !5333)
!5372 = !DILocation(line: 928, column: 15, scope: !5333)
!5373 = !DILocation(line: 928, column: 9, scope: !5333)
!5374 = !DILocation(line: 930, column: 21, scope: !5333)
!5375 = !DILocation(line: 929, column: 18, scope: !5333)
!5376 = !DILocation(line: 929, column: 18, scope: !5366)
!5377 = !DILocation(line: 929, column: 29, scope: !5366)
!5378 = !DILocation(line: 929, column: 24, scope: !5366)
!5379 = !DILocation(line: 929, column: 33, scope: !5333)
!5380 = !DILocation(line: 932, column: 5, scope: !5333)
!5381 = !DILocation(line: 932, column: 6, scope: !5333)
!5382 = distinct !DISubprogram(name: "unwrap_or_else<(), proc_macro::bridge::rpc::PanicMessage, proc_macro::bridge::client::run_client::{closure_env#1}<proc_macro::bridge::client::TokenStream, core::option::Option<proc_macro::bridge::client::TokenStream>, proc_macro::bridge::client::{impl#11}::expand1::{closure#0}::{closure_env#0}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hb6b1d8dc2e2d1c2bE", scope: !876, file: !2357, line: 1490, type: !5383, scopeLine: 1490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5392, retainedNodes: !5385)
!5383 = !DISubroutineType(types: !5384)
!5384 = !{null, !876, !1719}
!5385 = !{!5386, !5387, !5388, !5390}
!5386 = !DILocalVariable(name: "self", arg: 1, scope: !5382, file: !2357, line: 1490, type: !876)
!5387 = !DILocalVariable(name: "op", arg: 2, scope: !5382, file: !2357, line: 1490, type: !1719)
!5388 = !DILocalVariable(name: "t", scope: !5389, file: !2357, line: 1492, type: !7, align: 1)
!5389 = distinct !DILexicalBlock(scope: !5382, file: !2357, line: 1492, column: 13)
!5390 = !DILocalVariable(name: "e", scope: !5391, file: !2357, line: 1493, type: !887, align: 8)
!5391 = distinct !DILexicalBlock(scope: !5382, file: !2357, line: 1493, column: 13)
!5392 = !{!115, !886, !5393}
!5393 = !DITemplateTypeParameter(name: "F", type: !1719)
!5394 = !DILocation(line: 1490, column: 46, scope: !5382)
!5395 = !DILocation(line: 1490, column: 52, scope: !5382)
!5396 = !DILocation(line: 1492, column: 16, scope: !5389)
!5397 = !DILocation(line: 1493, column: 17, scope: !5391)
!5398 = !DILocation(line: 1491, column: 15, scope: !5382)
!5399 = !DILocation(line: 1491, column: 9, scope: !5382)
!5400 = !DILocation(line: 1492, column: 22, scope: !5382)
!5401 = !DILocation(line: 1493, column: 17, scope: !5382)
!5402 = !DILocation(line: 1493, column: 23, scope: !5391)
!5403 = !DILocation(line: 1493, column: 26, scope: !5391)
!5404 = !DILocation(line: 1493, column: 27, scope: !5382)
!5405 = !DILocation(line: 1495, column: 5, scope: !5382)
!5406 = !DILocation(line: 1495, column: 6, scope: !5382)
!5407 = distinct !DISubprogram(name: "expect<(), std::thread::local::AccessError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6expect17h3040be500976e412E", scope: !2974, file: !2357, line: 1058, type: !5408, scopeLine: 1058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !2982, retainedNodes: !5410)
!5408 = !DISubroutineType(types: !5409)
!5409 = !{null, !2974, !202, !508}
!5410 = !{!5411, !5412, !5413, !5415}
!5411 = !DILocalVariable(name: "self", arg: 1, scope: !5407, file: !2357, line: 1058, type: !2974)
!5412 = !DILocalVariable(name: "msg", arg: 2, scope: !5407, file: !2357, line: 1058, type: !202)
!5413 = !DILocalVariable(name: "t", scope: !5414, file: !2357, line: 1063, type: !7, align: 1)
!5414 = distinct !DILexicalBlock(scope: !5407, file: !2357, line: 1063, column: 13)
!5415 = !DILocalVariable(name: "e", scope: !5416, file: !2357, line: 1064, type: !91, align: 1)
!5416 = distinct !DILexicalBlock(scope: !5407, file: !2357, line: 1064, column: 13)
!5417 = !DILocation(line: 1063, column: 16, scope: !5414)
!5418 = !DILocation(line: 1058, column: 19, scope: !5407)
!5419 = !DILocation(line: 1058, column: 25, scope: !5407)
!5420 = !DILocation(line: 1064, column: 17, scope: !5416)
!5421 = !DILocation(line: 1062, column: 15, scope: !5407)
!5422 = !DILocation(line: 1062, column: 9, scope: !5407)
!5423 = !DILocation(line: 1066, column: 6, scope: !5407)
!5424 = !DILocation(line: 1064, column: 42, scope: !5416)
!5425 = !DILocation(line: 1064, column: 23, scope: !5416)
!5426 = !DILocation(line: 1064, column: 44, scope: !5407)
!5427 = !DILocation(line: 1058, column: 5, scope: !5407)
!5428 = distinct !DISubprogram(name: "expect<proc_macro::bridge::buffer::Buffer, std::thread::local::AccessError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6expect17h952c80a6ae6ce946E", scope: !3100, file: !2357, line: 1058, type: !5429, scopeLine: 1058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3108, retainedNodes: !5431)
!5429 = !DISubroutineType(types: !5430)
!5430 = !{!285, !3100, !202, !508}
!5431 = !{!5432, !5433, !5434, !5436}
!5432 = !DILocalVariable(name: "self", arg: 1, scope: !5428, file: !2357, line: 1058, type: !3100)
!5433 = !DILocalVariable(name: "msg", arg: 2, scope: !5428, file: !2357, line: 1058, type: !202)
!5434 = !DILocalVariable(name: "t", scope: !5435, file: !2357, line: 1063, type: !285, align: 8)
!5435 = distinct !DILexicalBlock(scope: !5428, file: !2357, line: 1063, column: 13)
!5436 = !DILocalVariable(name: "e", scope: !5437, file: !2357, line: 1064, type: !91, align: 1)
!5437 = distinct !DILexicalBlock(scope: !5428, file: !2357, line: 1064, column: 13)
!5438 = !DILocation(line: 1063, column: 16, scope: !5435)
!5439 = !DILocation(line: 1058, column: 19, scope: !5428)
!5440 = !DILocation(line: 1058, column: 25, scope: !5428)
!5441 = !DILocation(line: 1064, column: 17, scope: !5437)
!5442 = !DILocation(line: 1062, column: 15, scope: !5428)
!5443 = !DILocation(line: 1062, column: 9, scope: !5428)
!5444 = !DILocation(line: 1063, column: 16, scope: !5428)
!5445 = !DILocation(line: 1066, column: 6, scope: !5428)
!5446 = !DILocation(line: 1064, column: 42, scope: !5437)
!5447 = !DILocation(line: 1064, column: 23, scope: !5437)
!5448 = !DILocation(line: 1064, column: 44, scope: !5428)
!5449 = !DILocation(line: 1058, column: 5, scope: !5428)
!5450 = distinct !DISubprogram(name: "unwrap<(), std::io::error::Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h15db2de438a3931eE", scope: !5451, file: !2357, line: 1101, type: !5466, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5459, retainedNodes: !5468)
!5451 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), std::io::error::Error>", scope: !877, file: !2, size: 64, align: 64, elements: !5452, templateParams: !27, identifier: "c7eb0b1781b547f7e08c561bec01ff32")
!5452 = !{!5453}
!5453 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5451, file: !2, size: 64, align: 64, elements: !5454, templateParams: !27, identifier: "1f891dc836e2f2e1e0bef4f104fa5614", discriminator: !5465)
!5454 = !{!5455, !5461}
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5453, file: !2, baseType: !5456, size: 64, align: 64, extraData: i64 0)
!5456 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5451, file: !2, size: 64, align: 64, elements: !5457, templateParams: !5459, identifier: "a4f638f11f3ea760de81f708fc6e1fd")
!5457 = !{!5458}
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5456, file: !2, baseType: !7, align: 8)
!5459 = !{!115, !5460}
!5460 = !DITemplateTypeParameter(name: "E", type: !102)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5453, file: !2, baseType: !5462, size: 64, align: 64)
!5462 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5451, file: !2, size: 64, align: 64, elements: !5463, templateParams: !5459, identifier: "9e5d2ed67b9bb407b415e43834c79d35")
!5463 = !{!5464}
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5462, file: !2, baseType: !102, size: 64, align: 64)
!5465 = !DIDerivedType(tag: DW_TAG_member, scope: !5451, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!5466 = !DISubroutineType(types: !5467)
!5467 = !{null, !5451, !508}
!5468 = !{!5469, !5470, !5472}
!5469 = !DILocalVariable(name: "self", arg: 1, scope: !5450, file: !2357, line: 1101, type: !5451)
!5470 = !DILocalVariable(name: "t", scope: !5471, file: !2357, line: 1106, type: !7, align: 1)
!5471 = distinct !DILexicalBlock(scope: !5450, file: !2357, line: 1106, column: 13)
!5472 = !DILocalVariable(name: "e", scope: !5473, file: !2357, line: 1107, type: !102, align: 8)
!5473 = distinct !DILexicalBlock(scope: !5450, file: !2357, line: 1107, column: 13)
!5474 = !DILocation(line: 1106, column: 16, scope: !5471)
!5475 = !DILocation(line: 1101, column: 19, scope: !5450)
!5476 = !DILocation(line: 1107, column: 17, scope: !5473)
!5477 = !DILocation(line: 1105, column: 15, scope: !5450)
!5478 = !DILocation(line: 1105, column: 9, scope: !5450)
!5479 = !DILocation(line: 1109, column: 6, scope: !5450)
!5480 = !DILocation(line: 1107, column: 17, scope: !5450)
!5481 = !DILocation(line: 1107, column: 84, scope: !5473)
!5482 = !DILocation(line: 1107, column: 23, scope: !5473)
!5483 = !DILocation(line: 1107, column: 86, scope: !5450)
!5484 = !DILocation(line: 1101, column: 5, scope: !5450)
!5485 = distinct !DISubprogram(name: "unwrap<proc_macro::TokenStream, proc_macro::LexError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hbad39de2ad96f304E", scope: !4823, file: !2357, line: 1101, type: !5486, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4831, retainedNodes: !5488)
!5486 = !DISubroutineType(types: !5487)
!5487 = !{!337, !4823, !508}
!5488 = !{!5489, !5490, !5492}
!5489 = !DILocalVariable(name: "self", arg: 1, scope: !5485, file: !2357, line: 1101, type: !4823)
!5490 = !DILocalVariable(name: "t", scope: !5491, file: !2357, line: 1106, type: !337, align: 4)
!5491 = distinct !DILexicalBlock(scope: !5485, file: !2357, line: 1106, column: 13)
!5492 = !DILocalVariable(name: "e", scope: !5493, file: !2357, line: 1107, type: !220, align: 1)
!5493 = distinct !DILexicalBlock(scope: !5485, file: !2357, line: 1107, column: 13)
!5494 = !DILocation(line: 1101, column: 19, scope: !5485)
!5495 = !DILocation(line: 1107, column: 17, scope: !5493)
!5496 = !DILocation(line: 1105, column: 15, scope: !5485)
!5497 = !DILocation(line: 1105, column: 9, scope: !5485)
!5498 = !DILocation(line: 1106, column: 16, scope: !5485)
!5499 = !DILocation(line: 1106, column: 16, scope: !5491)
!5500 = !DILocation(line: 1109, column: 6, scope: !5485)
!5501 = !DILocation(line: 1107, column: 84, scope: !5493)
!5502 = !DILocation(line: 1107, column: 23, scope: !5493)
!5503 = !DILocation(line: 1107, column: 86, scope: !5485)
!5504 = !DILocation(line: 1101, column: 5, scope: !5485)
!5505 = distinct !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveError, alloc::raw_vec::finish_grow::{closure_env#1}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h0da0f8cedc183056E", scope: !5506, file: !2357, line: 852, type: !5526, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5555, retainedNodes: !5548)
!5506 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", scope: !877, file: !2, size: 128, align: 64, elements: !5507, templateParams: !27, identifier: "326c2eceea8ace7e7c754e4033de99df")
!5507 = !{!5508}
!5508 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5506, file: !2, size: 128, align: 64, elements: !5509, templateParams: !27, identifier: "55535437789a1bb6b6e72f8531454ed7", discriminator: !5525)
!5509 = !{!5510, !5521}
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5508, file: !2, baseType: !5511, size: 128, align: 64)
!5511 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5506, file: !2, size: 128, align: 64, elements: !5512, templateParams: !5517, identifier: "ba797c89d5b07ad053fbf7cf4701a55")
!5512 = !{!5513}
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5511, file: !2, baseType: !5514, size: 128, align: 64)
!5514 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8]>", scope: !49, file: !2, size: 128, align: 64, elements: !5515, templateParams: !54, identifier: "5fc58ef498feac33c505ded838596228")
!5515 = !{!5516}
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !5514, file: !2, baseType: !565, size: 128, align: 64)
!5517 = !{!5518, !5519}
!5518 = !DITemplateTypeParameter(name: "T", type: !5514)
!5519 = !DITemplateTypeParameter(name: "E", type: !5520)
!5520 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !2184, file: !2, align: 8, elements: !27, identifier: "34d6c5a45c099706becbbcb30500973a")
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5508, file: !2, baseType: !5522, size: 128, align: 64, extraData: i64 0)
!5522 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5506, file: !2, size: 128, align: 64, elements: !5523, templateParams: !5517, identifier: "136305b53d5a9b78b331b3b0fa91ec26")
!5523 = !{!5524}
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5522, file: !2, baseType: !5520, align: 8)
!5525 = !DIDerivedType(tag: DW_TAG_member, scope: !5506, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!5526 = !DISubroutineType(types: !5527)
!5527 = !{!5528, !5506, !5543}
!5528 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", scope: !877, file: !2, size: 192, align: 64, elements: !5529, templateParams: !27, identifier: "601fd7588d09095b28b20a9eb093c288")
!5529 = !{!5530}
!5530 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5528, file: !2, size: 192, align: 64, elements: !5531, templateParams: !27, identifier: "3025750a6e319fc619c06f01e4832005", discriminator: !5542)
!5531 = !{!5532, !5538}
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5530, file: !2, baseType: !5533, size: 192, align: 64, extraData: i64 0)
!5533 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5528, file: !2, size: 192, align: 64, elements: !5534, templateParams: !5536, identifier: "c3a563ea9d0ebe44c356aab410dc20ec")
!5534 = !{!5535}
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5533, file: !2, baseType: !5514, size: 128, align: 64, offset: 64)
!5536 = !{!5518, !5537}
!5537 = !DITemplateTypeParameter(name: "E", type: !2169)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5530, file: !2, baseType: !5539, size: 192, align: 64, extraData: i64 1)
!5539 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5528, file: !2, size: 192, align: 64, elements: !5540, templateParams: !5536, identifier: "b98766a8ef41cfa7c1a20700f8c2ac67")
!5540 = !{!5541}
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5539, file: !2, baseType: !2169, size: 128, align: 64, offset: 64)
!5542 = !DIDerivedType(tag: DW_TAG_member, scope: !5528, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!5543 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<alloc::alloc::Global>", scope: !5544, file: !2, size: 64, align: 64, elements: !5545, templateParams: !27, identifier: "d5ca5ecf61bc300819ddcb9ae83470a1")
!5544 = !DINamespace(name: "finish_grow", scope: !40)
!5545 = !{!5546}
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__new_layout", scope: !5543, file: !2, baseType: !5547, size: 64, align: 64)
!5547 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::alloc::layout::Layout", baseType: !2182, size: 64, align: 64, dwarfAddressSpace: 0)
!5548 = !{!5549, !5550, !5551, !5553}
!5549 = !DILocalVariable(name: "self", arg: 1, scope: !5505, file: !2357, line: 852, type: !5506)
!5550 = !DILocalVariable(name: "op", arg: 2, scope: !5505, file: !2357, line: 852, type: !5543)
!5551 = !DILocalVariable(name: "t", scope: !5552, file: !2357, line: 854, type: !5514, align: 8)
!5552 = distinct !DILexicalBlock(scope: !5505, file: !2357, line: 854, column: 13)
!5553 = !DILocalVariable(name: "e", scope: !5554, file: !2357, line: 855, type: !5520, align: 1)
!5554 = distinct !DILexicalBlock(scope: !5505, file: !2357, line: 855, column: 13)
!5555 = !{!5518, !5519, !5556, !5557}
!5556 = !DITemplateTypeParameter(name: "F", type: !2169)
!5557 = !DITemplateTypeParameter(name: "O", type: !5543)
!5558 = !DILocation(line: 852, column: 42, scope: !5505)
!5559 = !DILocation(line: 852, column: 48, scope: !5505)
!5560 = !DILocation(line: 855, column: 17, scope: !5554)
!5561 = !DILocation(line: 853, column: 15, scope: !5505)
!5562 = !DILocation(line: 853, column: 9, scope: !5505)
!5563 = !DILocation(line: 854, column: 16, scope: !5505)
!5564 = !DILocation(line: 854, column: 16, scope: !5552)
!5565 = !DILocation(line: 854, column: 22, scope: !5552)
!5566 = !DILocation(line: 854, column: 26, scope: !5505)
!5567 = !DILocation(line: 855, column: 27, scope: !5554)
!5568 = !DILocation(line: 855, column: 23, scope: !5554)
!5569 = !DILocation(line: 855, column: 32, scope: !5505)
!5570 = !DILocation(line: 857, column: 5, scope: !5505)
!5571 = !DILocation(line: 857, column: 6, scope: !5505)
!5572 = distinct !DISubprogram(name: "map_err<(), alloc::collections::TryReserveError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::handle_reserve::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h2db4cce6e1006803E", scope: !5573, file: !2357, line: 852, type: !5587, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5613, retainedNodes: !5606)
!5573 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveError>", scope: !877, file: !2, size: 128, align: 64, elements: !5574, templateParams: !27, identifier: "4b89620c7f2c166f553026a950f3f2d2")
!5574 = !{!5575}
!5575 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5573, file: !2, size: 128, align: 64, elements: !5576, templateParams: !27, identifier: "7cb265f2a07c8821328b46cc3c388b7f", discriminator: !5586)
!5576 = !{!5577, !5582}
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5575, file: !2, baseType: !5578, size: 128, align: 64, extraData: i64 -9223372036854775807)
!5578 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5573, file: !2, size: 128, align: 64, elements: !5579, templateParams: !5581, identifier: "fdce6ff40bcf3f7ab3b51ba04b7afc44")
!5579 = !{!5580}
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5578, file: !2, baseType: !7, align: 8)
!5581 = !{!115, !5537}
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5575, file: !2, baseType: !5583, size: 128, align: 64)
!5583 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5573, file: !2, size: 128, align: 64, elements: !5584, templateParams: !5581, identifier: "d84ca0f977a325112ceaab4e30797620")
!5584 = !{!5585}
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5583, file: !2, baseType: !2169, size: 128, align: 64)
!5586 = !DIDerivedType(tag: DW_TAG_member, scope: !5573, file: !2, baseType: !71, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!5587 = !DISubroutineType(types: !5588)
!5588 = !{!5589, !5573, !5604}
!5589 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveErrorKind>", scope: !877, file: !2, size: 128, align: 64, elements: !5590, templateParams: !27, identifier: "cdc62e1ada228a0a3eeb1363cc168dd1")
!5590 = !{!5591}
!5591 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5589, file: !2, size: 128, align: 64, elements: !5592, templateParams: !27, identifier: "c07cde87a483df02fa92a38d58df4905", discriminator: !5603)
!5592 = !{!5593, !5599}
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5591, file: !2, baseType: !5594, size: 128, align: 64, extraData: i64 -9223372036854775807)
!5594 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5589, file: !2, size: 128, align: 64, elements: !5595, templateParams: !5597, identifier: "ef69269b9f8a8dcfd892b17f0cd69f3b")
!5595 = !{!5596}
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5594, file: !2, baseType: !7, align: 8)
!5597 = !{!115, !5598}
!5598 = !DITemplateTypeParameter(name: "E", type: !2172)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5591, file: !2, baseType: !5600, size: 128, align: 64)
!5600 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5589, file: !2, size: 128, align: 64, elements: !5601, templateParams: !5597, identifier: "d1e764ecae8c88012ac4b46bb3413624")
!5601 = !{!5602}
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5600, file: !2, baseType: !2172, size: 128, align: 64)
!5603 = !DIDerivedType(tag: DW_TAG_member, scope: !5589, file: !2, baseType: !71, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!5604 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !5605, file: !2, align: 8, elements: !27, identifier: "38662dde61d7b1e78dacba2cb2773d17")
!5605 = !DINamespace(name: "handle_reserve", scope: !40)
!5606 = !{!5607, !5608, !5609, !5611}
!5607 = !DILocalVariable(name: "self", arg: 1, scope: !5572, file: !2357, line: 852, type: !5573)
!5608 = !DILocalVariable(name: "op", arg: 2, scope: !5572, file: !2357, line: 852, type: !5604)
!5609 = !DILocalVariable(name: "t", scope: !5610, file: !2357, line: 854, type: !7, align: 1)
!5610 = distinct !DILexicalBlock(scope: !5572, file: !2357, line: 854, column: 13)
!5611 = !DILocalVariable(name: "e", scope: !5612, file: !2357, line: 855, type: !2169, align: 8)
!5612 = distinct !DILexicalBlock(scope: !5572, file: !2357, line: 855, column: 13)
!5613 = !{!115, !5537, !5614, !5615}
!5614 = !DITemplateTypeParameter(name: "F", type: !2172)
!5615 = !DITemplateTypeParameter(name: "O", type: !5604)
!5616 = !DILocation(line: 852, column: 42, scope: !5572)
!5617 = !DILocation(line: 852, column: 48, scope: !5572)
!5618 = !DILocation(line: 854, column: 16, scope: !5610)
!5619 = !DILocation(line: 853, column: 15, scope: !5572)
!5620 = !{i64 0, i64 -9223372036854775806}
!5621 = !DILocation(line: 853, column: 9, scope: !5572)
!5622 = !DILocation(line: 854, column: 22, scope: !5610)
!5623 = !DILocation(line: 854, column: 26, scope: !5572)
!5624 = !DILocation(line: 855, column: 17, scope: !5572)
!5625 = !DILocation(line: 855, column: 17, scope: !5612)
!5626 = !DILocation(line: 855, column: 27, scope: !5612)
!5627 = !DILocation(line: 855, column: 23, scope: !5612)
!5628 = !DILocation(line: 855, column: 32, scope: !5572)
!5629 = !DILocation(line: 857, column: 5, scope: !5572)
!5630 = !DILocation(line: 857, column: 6, scope: !5572)
!5631 = distinct !DISubprogram(name: "map_err<core::alloc::layout::Layout, core::alloc::layout::LayoutError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::finish_grow::{closure_env#0}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h7bb473a7b559d364E", scope: !5632, file: !2357, line: 852, type: !5649, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5673, retainedNodes: !5666)
!5632 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", scope: !877, file: !2, size: 128, align: 64, elements: !5633, templateParams: !27, identifier: "61ed90a3a60bf5c9da25fda9753d7b5")
!5633 = !{!5634}
!5634 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5632, file: !2, size: 128, align: 64, elements: !5635, templateParams: !27, identifier: "e7bb3560bfa0d3445ee2359cfbf9e5fe", discriminator: !5648)
!5635 = !{!5636, !5644}
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5634, file: !2, baseType: !5637, size: 128, align: 64)
!5637 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5632, file: !2, size: 128, align: 64, elements: !5638, templateParams: !5640, identifier: "1efd2a987c8fa52528b02bba0275d8c7")
!5638 = !{!5639}
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5637, file: !2, baseType: !2182, size: 128, align: 64)
!5640 = !{!5641, !5642}
!5641 = !DITemplateTypeParameter(name: "T", type: !2182)
!5642 = !DITemplateTypeParameter(name: "E", type: !5643)
!5643 = !DICompositeType(tag: DW_TAG_structure_type, name: "LayoutError", scope: !2183, file: !2, align: 8, elements: !27, identifier: "6e89e1d1b17d37435f7b87cb1d5cb26d")
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5634, file: !2, baseType: !5645, size: 128, align: 64, extraData: i64 0)
!5645 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5632, file: !2, size: 128, align: 64, elements: !5646, templateParams: !5640, identifier: "9488fb9df60d2b7e722ab2cffead9e28")
!5646 = !{!5647}
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5645, file: !2, baseType: !5643, align: 8)
!5648 = !DIDerivedType(tag: DW_TAG_member, scope: !5632, file: !2, baseType: !71, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!5649 = !DISubroutineType(types: !5650)
!5650 = !{!5651, !5632, !5665}
!5651 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", scope: !877, file: !2, size: 192, align: 64, elements: !5652, templateParams: !27, identifier: "b9de8b8c009cd0becb59806c6ce8cc5f")
!5652 = !{!5653}
!5653 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5651, file: !2, size: 192, align: 64, elements: !5654, templateParams: !27, identifier: "2c02efbe3ea4d75026f025a2705c6c96", discriminator: !5664)
!5654 = !{!5655, !5660}
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5653, file: !2, baseType: !5656, size: 192, align: 64, extraData: i64 0)
!5656 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5651, file: !2, size: 192, align: 64, elements: !5657, templateParams: !5659, identifier: "d52268884abf5d8c9a943cd013eaf021")
!5657 = !{!5658}
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5656, file: !2, baseType: !2182, size: 128, align: 64, offset: 64)
!5659 = !{!5641, !5598}
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5653, file: !2, baseType: !5661, size: 192, align: 64, extraData: i64 1)
!5661 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5651, file: !2, size: 192, align: 64, elements: !5662, templateParams: !5659, identifier: "8793f3a2507382c45ebef37ef1c4bc40")
!5662 = !{!5663}
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5661, file: !2, baseType: !2172, size: 128, align: 64, offset: 64)
!5664 = !DIDerivedType(tag: DW_TAG_member, scope: !5651, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!5665 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::alloc::Global>", scope: !5544, file: !2, align: 8, elements: !27, identifier: "f2bae2d168b0d8fd3c59ff569110796d")
!5666 = !{!5667, !5668, !5669, !5671}
!5667 = !DILocalVariable(name: "self", arg: 1, scope: !5631, file: !2357, line: 852, type: !5632)
!5668 = !DILocalVariable(name: "op", arg: 2, scope: !5631, file: !2357, line: 852, type: !5665)
!5669 = !DILocalVariable(name: "t", scope: !5670, file: !2357, line: 854, type: !2182, align: 8)
!5670 = distinct !DILexicalBlock(scope: !5631, file: !2357, line: 854, column: 13)
!5671 = !DILocalVariable(name: "e", scope: !5672, file: !2357, line: 855, type: !5643, align: 1)
!5672 = distinct !DILexicalBlock(scope: !5631, file: !2357, line: 855, column: 13)
!5673 = !{!5641, !5642, !5614, !5674}
!5674 = !DITemplateTypeParameter(name: "O", type: !5665)
!5675 = !DILocation(line: 852, column: 42, scope: !5631)
!5676 = !DILocation(line: 852, column: 48, scope: !5631)
!5677 = !DILocation(line: 855, column: 17, scope: !5672)
!5678 = !DILocation(line: 853, column: 15, scope: !5631)
!5679 = !DILocation(line: 853, column: 9, scope: !5631)
!5680 = !DILocation(line: 854, column: 16, scope: !5631)
!5681 = !{i64 1, i64 -9223372036854775807}
!5682 = !DILocation(line: 854, column: 16, scope: !5670)
!5683 = !DILocation(line: 854, column: 22, scope: !5670)
!5684 = !DILocation(line: 854, column: 26, scope: !5631)
!5685 = !DILocation(line: 855, column: 27, scope: !5672)
!5686 = !DILocation(line: 855, column: 23, scope: !5672)
!5687 = !DILocation(line: 855, column: 32, scope: !5631)
!5688 = !DILocation(line: 857, column: 5, scope: !5631)
!5689 = !DILocation(line: 857, column: 6, scope: !5631)
!5690 = distinct !DISubprogram(name: "map_err<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>, proc_macro::bridge::rpc::PanicMessage, fn(alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>) -> proc_macro::bridge::rpc::PanicMessage>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha3fa06a25fa3eb8fE", scope: !2912, file: !2357, line: 852, type: !5691, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5700, retainedNodes: !5693)
!5691 = !DISubroutineType(types: !5692)
!5692 = !{!876, !2912, !4488}
!5693 = !{!5694, !5695, !5696, !5698}
!5694 = !DILocalVariable(name: "self", arg: 1, scope: !5690, file: !2357, line: 852, type: !2912)
!5695 = !DILocalVariable(name: "op", arg: 2, scope: !5690, file: !2357, line: 852, type: !4488)
!5696 = !DILocalVariable(name: "t", scope: !5697, file: !2357, line: 854, type: !7, align: 1)
!5697 = distinct !DILexicalBlock(scope: !5690, file: !2357, line: 854, column: 13)
!5698 = !DILocalVariable(name: "e", scope: !5699, file: !2357, line: 855, type: !2922, align: 8)
!5699 = distinct !DILexicalBlock(scope: !5690, file: !2357, line: 855, column: 13)
!5700 = !{!115, !2921, !5701, !5702}
!5701 = !DITemplateTypeParameter(name: "F", type: !887)
!5702 = !DITemplateTypeParameter(name: "O", type: !4488)
!5703 = !DILocation(line: 852, column: 42, scope: !5690)
!5704 = !DILocation(line: 852, column: 48, scope: !5690)
!5705 = !DILocation(line: 854, column: 16, scope: !5697)
!5706 = !DILocation(line: 853, column: 15, scope: !5690)
!5707 = !DILocation(line: 853, column: 9, scope: !5690)
!5708 = !DILocation(line: 854, column: 22, scope: !5697)
!5709 = !DILocation(line: 854, column: 26, scope: !5690)
!5710 = !DILocation(line: 855, column: 17, scope: !5690)
!5711 = !DILocation(line: 855, column: 17, scope: !5699)
!5712 = !DILocation(line: 855, column: 27, scope: !5699)
!5713 = !DILocation(line: 855, column: 23, scope: !5699)
!5714 = !DILocation(line: 855, column: 32, scope: !5690)
!5715 = !DILocation(line: 857, column: 5, scope: !5690)
!5716 = !DILocation(line: 857, column: 6, scope: !5690)
!5717 = distinct !DISubprogram(name: "from<alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h11a7bfb25080e112E", scope: !5719, file: !5718, line: 559, type: !5720, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5724, retainedNodes: !5722)
!5718 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e9a22d2b51b4cfd278a09c9d531e27c4")
!5719 = !DINamespace(name: "{impl#4}", scope: !2330)
!5720 = !DISubroutineType(types: !5721)
!5721 = !{!2169, !2169}
!5722 = !{!5723}
!5723 = !DILocalVariable(name: "t", arg: 1, scope: !5717, file: !5718, line: 559, type: !2169)
!5724 = !{!5725}
!5725 = !DITemplateTypeParameter(name: "T", type: !2169)
!5726 = !DILocation(line: 559, column: 13, scope: !5717)
!5727 = !DILocation(line: 561, column: 6, scope: !5717)
!5728 = distinct !DISubprogram(name: "from<std::thread::local::AccessError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h552284ca564a009eE", scope: !5719, file: !5718, line: 559, type: !5729, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4664, retainedNodes: !5731)
!5729 = !DISubroutineType(types: !5730)
!5730 = !{null, !91}
!5731 = !{!5732}
!5732 = !DILocalVariable(name: "t", arg: 1, scope: !5728, file: !5718, line: 559, type: !91)
!5733 = !DILocation(line: 559, column: 13, scope: !5728)
!5734 = !DILocation(line: 561, column: 6, scope: !5728)
!5735 = distinct !DISubprogram(name: "from<alloc::ffi::c_str::NulError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hb839e2439fd86ed6E", scope: !5719, file: !5718, line: 559, type: !5736, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5740, retainedNodes: !5738)
!5736 = !DISubroutineType(types: !5737)
!5737 = !{!2297, !2297}
!5738 = !{!5739}
!5739 = !DILocalVariable(name: "t", arg: 1, scope: !5735, file: !5718, line: 559, type: !2297)
!5740 = !{!5741}
!5741 = !DITemplateTypeParameter(name: "T", type: !2297)
!5742 = !DILocation(line: 559, column: 13, scope: !5735)
!5743 = !DILocation(line: 560, column: 9, scope: !5735)
!5744 = !DILocation(line: 561, column: 6, scope: !5735)
!5745 = distinct !DISubprogram(name: "into<alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb8ac4c94ae25218fE", scope: !5746, file: !5718, line: 549, type: !2167, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5749, retainedNodes: !5747)
!5746 = !DINamespace(name: "{impl#3}", scope: !2330)
!5747 = !{!5748}
!5748 = !DILocalVariable(name: "self", arg: 1, scope: !5745, file: !5718, line: 549, type: !2172)
!5749 = !{!5750, !5751}
!5750 = !DITemplateTypeParameter(name: "T", type: !2172)
!5751 = !DITemplateTypeParameter(name: "U", type: !2169)
!5752 = !DILocation(line: 549, column: 13, scope: !5745)
!5753 = !DILocation(line: 550, column: 9, scope: !5745)
!5754 = !DILocation(line: 551, column: 6, scope: !5745)
!5755 = distinct !DISubprogram(name: "into_searcher", linkageName: "_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hdfdbcaa7bb72fa07E", scope: !5757, file: !5756, line: 542, type: !5758, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5760)
!5756 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/pattern.rs", directory: "", checksumkind: CSK_MD5, checksum: "4413c12c327e63807a1a57fa4d03df68")
!5757 = !DINamespace(name: "{impl#3}", scope: !4861)
!5758 = !DISubroutineType(types: !5759)
!5759 = !{!4860, !2633, !202}
!5760 = !{!5761, !5762, !5763, !5765}
!5761 = !DILocalVariable(name: "self", arg: 1, scope: !5755, file: !5756, line: 542, type: !2633)
!5762 = !DILocalVariable(name: "haystack", arg: 2, scope: !5755, file: !5756, line: 542, type: !202)
!5763 = !DILocalVariable(name: "utf8_encoded", scope: !5764, file: !5756, line: 543, type: !1332, align: 1)
!5764 = distinct !DILexicalBlock(scope: !5755, file: !5756, line: 543, column: 9)
!5765 = !DILocalVariable(name: "utf8_size", scope: !5766, file: !5756, line: 544, type: !9, align: 8)
!5766 = distinct !DILexicalBlock(scope: !5764, file: !5756, line: 544, column: 9)
!5767 = !DILocation(line: 542, column: 22, scope: !5755)
!5768 = !DILocation(line: 542, column: 28, scope: !5755)
!5769 = !DILocation(line: 543, column: 13, scope: !5764)
!5770 = !DILocation(line: 543, column: 32, scope: !5755)
!5771 = !DILocation(line: 544, column: 25, scope: !5764)
!5772 = !DILocalVariable(name: "self", scope: !5773, file: !5756, line: 544, type: !2633, align: 4)
!5773 = !DILexicalBlockFile(scope: !5774, file: !5756, discriminator: 0)
!5774 = distinct !DISubprogram(name: "encode_utf8", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817he799fd6615d44bd4E", scope: !5775, file: !5016, line: 656, type: !5776, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5782)
!5775 = !DINamespace(name: "{impl#0}", scope: !5017)
!5776 = !DISubroutineType(types: !5777)
!5777 = !{!5778, !2633, !768}
!5778 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut str", file: !2, size: 128, align: 64, elements: !5779, templateParams: !27, identifier: "444dcbb816eb7ea8fc9a04d7bc4f81ac")
!5779 = !{!5780, !5781}
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !5778, file: !2, baseType: !205, size: 64, align: 64)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5778, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!5782 = !{!5772, !5783}
!5783 = !DILocalVariable(name: "dst", scope: !5773, file: !5756, line: 544, type: !768, align: 8)
!5784 = !DILocation(line: 544, column: 25, scope: !5773, inlinedAt: !5771)
!5785 = !DILocation(line: 544, column: 42, scope: !5764)
!5786 = !DILocalVariable(name: "v", scope: !5787, file: !5756, line: 544, type: !768, align: 8)
!5787 = !DILexicalBlockFile(scope: !5788, file: !5756, discriminator: 0)
!5788 = distinct !DISubprogram(name: "from_utf8_unchecked_mut", linkageName: "_ZN4core3str8converts23from_utf8_unchecked_mut17h4ad3dfcbe751c7b7E", scope: !601, file: !600, line: 197, type: !5789, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5791)
!5789 = !DISubroutineType(types: !5790)
!5790 = !{!5778, !768}
!5791 = !{!5786}
!5792 = !DILocation(line: 544, column: 25, scope: !5787, inlinedAt: !5793)
!5793 = !DILocation(line: 658, column: 18, scope: !5774, inlinedAt: !5771)
!5794 = !DILocalVariable(name: "self", scope: !5795, file: !5756, line: 544, type: !202, align: 8)
!5795 = !DILexicalBlockFile(scope: !5796, file: !5756, discriminator: 0)
!5796 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hab2b14778b624533E", scope: !4820, file: !4819, line: 157, type: !5797, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5799)
!5797 = !DISubroutineType(types: !5798)
!5798 = !{!9, !202}
!5799 = !{!5794}
!5800 = !DILocation(line: 544, column: 25, scope: !5795, inlinedAt: !5771)
!5801 = !DILocalVariable(name: "self", scope: !5802, file: !5756, line: 544, type: !202, align: 8)
!5802 = !DILexicalBlockFile(scope: !5803, file: !5756, discriminator: 0)
!5803 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4820, file: !4819, line: 323, type: !5804, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5806)
!5804 = !DISubroutineType(types: !5805)
!5805 = !{!529, !202}
!5806 = !{!5801}
!5807 = !DILocation(line: 544, column: 25, scope: !5802, inlinedAt: !5808)
!5808 = !DILocation(line: 158, column: 9, scope: !5796, inlinedAt: !5771)
!5809 = !DILocation(line: 544, column: 13, scope: !5766)
!5810 = !DILocation(line: 548, column: 26, scope: !5766)
!5811 = !DILocalVariable(name: "self", scope: !5812, file: !5756, line: 548, type: !202, align: 8)
!5812 = !DILexicalBlockFile(scope: !5813, file: !5756, discriminator: 0)
!5813 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hab2b14778b624533E", scope: !4820, file: !4819, line: 157, type: !5797, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5814)
!5814 = !{!5811}
!5815 = !DILocation(line: 548, column: 26, scope: !5812, inlinedAt: !5810)
!5816 = !DILocalVariable(name: "self", scope: !5817, file: !5756, line: 548, type: !202, align: 8)
!5817 = !DILexicalBlockFile(scope: !5818, file: !5756, discriminator: 0)
!5818 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4820, file: !4819, line: 323, type: !5804, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5819)
!5819 = !{!5816}
!5820 = !DILocation(line: 548, column: 26, scope: !5817, inlinedAt: !5821)
!5821 = !DILocation(line: 158, column: 9, scope: !5813, inlinedAt: !5810)
!5822 = !DILocation(line: 551, column: 13, scope: !5766)
!5823 = !DILocation(line: 545, column: 9, scope: !5766)
!5824 = !DILocation(line: 553, column: 6, scope: !5755)
!5825 = distinct !DISubprogram(name: "format", linkageName: "_ZN5alloc3fmt6format17h379f45c17972232bE", scope: !5827, file: !5826, line: 608, type: !5828, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5830)
!5826 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/fmt.rs", directory: "", checksumkind: CSK_MD5, checksum: "5cf4c81759cfd6af80611f9a04f1c150")
!5827 = !DINamespace(name: "fmt", scope: !32)
!5828 = !DISubroutineType(types: !5829)
!5829 = !{!30, !2610}
!5830 = !{!5831}
!5831 = !DILocalVariable(name: "args", arg: 1, scope: !5825, file: !5826, line: 608, type: !2610)
!5832 = !DILocation(line: 608, column: 15, scope: !5825)
!5833 = !DILocation(line: 616, column: 5, scope: !5825)
!5834 = !DILocation(line: 616, column: 31, scope: !5825)
!5835 = !DILocation(line: 617, column: 2, scope: !5825)
!5836 = distinct !DISubprogram(name: "replace<char>", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$7replace17h324b3cfea44dc7d1E", scope: !5838, file: !5837, line: 289, type: !5840, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4879, retainedNodes: !5842)
!5837 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/str.rs", directory: "", checksumkind: CSK_MD5, checksum: "f5a4e60b6f1008960143e2fa483df20f")
!5838 = !DINamespace(name: "{impl#5}", scope: !5839)
!5839 = !DINamespace(name: "str", scope: !32)
!5840 = !DISubroutineType(types: !5841)
!5841 = !{!30, !202, !2633, !202}
!5842 = !{!5843, !5844, !5845, !5846, !5848, !5850, !5858, !5860}
!5843 = !DILocalVariable(name: "self", arg: 1, scope: !5836, file: !5837, line: 289, type: !202)
!5844 = !DILocalVariable(name: "from", arg: 2, scope: !5836, file: !5837, line: 289, type: !2633)
!5845 = !DILocalVariable(name: "to", arg: 3, scope: !5836, file: !5837, line: 289, type: !202)
!5846 = !DILocalVariable(name: "result", scope: !5847, file: !5837, line: 290, type: !30, align: 8)
!5847 = distinct !DILexicalBlock(scope: !5836, file: !5837, line: 290, column: 9)
!5848 = !DILocalVariable(name: "last_end", scope: !5849, file: !5837, line: 291, type: !9, align: 8)
!5849 = distinct !DILexicalBlock(scope: !5847, file: !5837, line: 291, column: 9)
!5850 = !DILocalVariable(name: "iter", scope: !5851, file: !5837, line: 292, type: !5852, align: 8)
!5851 = distinct !DILexicalBlock(scope: !5849, file: !5837, line: 292, column: 9)
!5852 = !DICompositeType(tag: DW_TAG_structure_type, name: "MatchIndices<char>", scope: !4849, file: !2, size: 384, align: 64, elements: !5853, templateParams: !4879, identifier: "5c7fb3e768969da04c0f43aa1a7ccaa0")
!5853 = !{!5854}
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5852, file: !2, baseType: !5855, size: 384, align: 64)
!5855 = !DICompositeType(tag: DW_TAG_structure_type, name: "MatchIndicesInternal<char>", scope: !4849, file: !2, size: 384, align: 64, elements: !5856, templateParams: !4879, identifier: "37636b6a2ed749057106a3de45ac468e")
!5856 = !{!5857}
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5855, file: !2, baseType: !4860, size: 384, align: 64)
!5858 = !DILocalVariable(name: "start", scope: !5859, file: !5837, line: 292, type: !9, align: 8)
!5859 = distinct !DILexicalBlock(scope: !5851, file: !5837, line: 292, column: 55)
!5860 = !DILocalVariable(name: "part", scope: !5859, file: !5837, line: 292, type: !202, align: 8)
!5861 = !DILocation(line: 290, column: 13, scope: !5847)
!5862 = !DILocation(line: 289, column: 40, scope: !5836)
!5863 = !DILocation(line: 289, column: 50, scope: !5836)
!5864 = !DILocation(line: 289, column: 59, scope: !5836)
!5865 = !DILocation(line: 291, column: 13, scope: !5849)
!5866 = !DILocalVariable(name: "self", scope: !5867, file: !5837, line: 292, type: !5852, align: 8)
!5867 = !DILexicalBlockFile(scope: !5868, file: !5837, discriminator: 0)
!5868 = distinct !DISubprogram(name: "into_iter<core::str::iter::MatchIndices<char>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hecfd5cde9b15fbb5E", scope: !5870, file: !5869, line: 271, type: !5874, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5877, retainedNodes: !5876)
!5869 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "73b4070628f6fcec74cccccb11afa9ef")
!5870 = !DINamespace(name: "{impl#0}", scope: !5871)
!5871 = !DINamespace(name: "collect", scope: !5872)
!5872 = !DINamespace(name: "traits", scope: !5873)
!5873 = !DINamespace(name: "iter", scope: !21)
!5874 = !DISubroutineType(types: !5875)
!5875 = !{!5852, !5852}
!5876 = !{!5866}
!5877 = !{!5878}
!5878 = !DITemplateTypeParameter(name: "I", type: !5852)
!5879 = !DILocation(line: 292, column: 30, scope: !5867, inlinedAt: !5880)
!5880 = !DILocation(line: 292, column: 30, scope: !5849)
!5881 = !DILocation(line: 292, column: 30, scope: !5851)
!5882 = !DILocalVariable(name: "i", scope: !5883, file: !5837, line: 293, type: !655, align: 8)
!5883 = !DILexicalBlockFile(scope: !5884, file: !5837, discriminator: 0)
!5884 = distinct !DISubprogram(name: "get_unchecked<core::ops::range::Range<usize>>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h0c10beb9d4b5d5eeE", scope: !4820, file: !4819, line: 505, type: !4886, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4890, retainedNodes: !5885)
!5885 = !{!5886, !5882}
!5886 = !DILocalVariable(name: "self", scope: !5883, file: !5837, line: 293, type: !202, align: 8)
!5887 = !DILocation(line: 293, column: 38, scope: !5883, inlinedAt: !5888)
!5888 = !DILocation(line: 293, column: 38, scope: !5859)
!5889 = !DILocalVariable(name: "i", scope: !5890, file: !5837, line: 297, type: !655, align: 8)
!5890 = !DILexicalBlockFile(scope: !5891, file: !5837, discriminator: 0)
!5891 = distinct !DISubprogram(name: "get_unchecked<core::ops::range::Range<usize>>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h0c10beb9d4b5d5eeE", scope: !4820, file: !4819, line: 505, type: !4886, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4890, retainedNodes: !5892)
!5892 = !{!5893, !5889}
!5893 = !DILocalVariable(name: "self", scope: !5890, file: !5837, line: 297, type: !202, align: 8)
!5894 = !DILocation(line: 297, column: 34, scope: !5890, inlinedAt: !5895)
!5895 = !DILocation(line: 297, column: 34, scope: !5849)
!5896 = !DILocation(line: 290, column: 26, scope: !5897, inlinedAt: !5899)
!5897 = !DILexicalBlockFile(scope: !5898, file: !5837, discriminator: 0)
!5898 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17h94f1cc63c2616b42E", scope: !35, file: !525, line: 424, type: !1418, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !27)
!5899 = !DILocation(line: 455, column: 23, scope: !5900, inlinedAt: !5903)
!5900 = distinct !DISubprogram(name: "new", linkageName: "_ZN5alloc6string6String3new17h014ea2cc8352d7c9E", scope: !30, file: !500, line: 454, type: !5901, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !27)
!5901 = !DISubroutineType(types: !5902)
!5902 = !{!30}
!5903 = !DILocation(line: 290, column: 26, scope: !5836)
!5904 = !DILocation(line: 290, column: 26, scope: !5905, inlinedAt: !5903)
!5905 = !DILexicalBlockFile(scope: !5900, file: !5837, discriminator: 0)
!5906 = !DILocation(line: 291, column: 28, scope: !5847)
!5907 = !DILocalVariable(name: "self", scope: !5908, file: !5837, line: 292, type: !202, align: 8)
!5908 = !DILexicalBlockFile(scope: !5909, file: !5837, discriminator: 0)
!5909 = distinct !DISubprogram(name: "match_indices<char>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$13match_indices17hc0af1e0b10954c18E", scope: !4820, file: !4819, line: 1783, type: !5910, scopeLine: 1783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4879, retainedNodes: !5912)
!5910 = !DISubroutineType(types: !5911)
!5911 = !{!5852, !202, !2633}
!5912 = !{!5907, !5913}
!5913 = !DILocalVariable(name: "pat", scope: !5908, file: !5837, line: 292, type: !2633, align: 4)
!5914 = !DILocation(line: 292, column: 30, scope: !5908, inlinedAt: !5880)
!5915 = !DILocation(line: 292, column: 49, scope: !5849)
!5916 = !DILocation(line: 299, column: 5, scope: !5836)
!5917 = !DILocation(line: 292, column: 9, scope: !5851)
!5918 = !DILocalVariable(name: "self", scope: !5919, file: !5837, line: 292, type: !5924, align: 8)
!5919 = !DILexicalBlockFile(scope: !5920, file: !5837, discriminator: 0)
!5920 = distinct !DISubprogram(name: "next<char>", linkageName: "_ZN97_$LT$core..str..iter..MatchIndices$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hbc9b15aaabd030b8E", scope: !5921, file: !4846, line: 456, type: !5922, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4879, retainedNodes: !5925)
!5921 = !DINamespace(name: "{impl#90}", scope: !4849)
!5922 = !DISubroutineType(types: !5923)
!5923 = !{!5349, !5924}
!5924 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::MatchIndices<char>", baseType: !5852, size: 64, align: 64, dwarfAddressSpace: 0)
!5925 = !{!5918}
!5926 = !DILocation(line: 292, column: 30, scope: !5919, inlinedAt: !5881)
!5927 = !DILocalVariable(name: "self", scope: !5928, file: !5837, line: 292, type: !5932, align: 8)
!5928 = !DILexicalBlockFile(scope: !5929, file: !5837, discriminator: 0)
!5929 = distinct !DISubprogram(name: "next<char>", linkageName: "_ZN4core3str4iter29MatchIndicesInternal$LT$P$GT$4next17had6b768848e27253E", scope: !5855, file: !4846, line: 991, type: !5930, scopeLine: 991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4879, retainedNodes: !5933)
!5930 = !DISubroutineType(types: !5931)
!5931 = !{!5349, !5932}
!5932 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::MatchIndicesInternal<char>", baseType: !5855, size: 64, align: 64, dwarfAddressSpace: 0)
!5933 = !{!5927}
!5934 = !DILocation(line: 292, column: 30, scope: !5928, inlinedAt: !5935)
!5935 = !DILocation(line: 457, column: 17, scope: !5920, inlinedAt: !5881)
!5936 = !DILocation(line: 292, column: 9, scope: !5849)
!5937 = !DILocation(line: 292, column: 14, scope: !5851)
!5938 = !DILocation(line: 292, column: 14, scope: !5859)
!5939 = !DILocation(line: 292, column: 21, scope: !5851)
!5940 = !DILocation(line: 292, column: 21, scope: !5859)
!5941 = !DILocation(line: 293, column: 13, scope: !5859)
!5942 = !DILocalVariable(name: "self", scope: !5943, file: !5837, line: 293, type: !5947, align: 8)
!5943 = !DILexicalBlockFile(scope: !5944, file: !5837, discriminator: 0)
!5944 = distinct !DISubprogram(name: "push_str", linkageName: "_ZN5alloc6string6String8push_str17h0a576c4395933b60E", scope: !30, file: !500, line: 924, type: !5945, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5948)
!5945 = !DISubroutineType(types: !5946)
!5946 = !{null, !5947, !202}
!5947 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::String", baseType: !30, size: 64, align: 64, dwarfAddressSpace: 0)
!5948 = !{!5942, !5949}
!5949 = !DILocalVariable(name: "string", scope: !5943, file: !5837, line: 293, type: !202, align: 8)
!5950 = !DILocation(line: 293, column: 13, scope: !5943, inlinedAt: !5941)
!5951 = !DILocation(line: 293, column: 57, scope: !5859)
!5952 = !DILocalVariable(name: "self", scope: !5953, file: !5837, line: 293, type: !202, align: 8)
!5953 = !DILexicalBlockFile(scope: !5954, file: !5837, discriminator: 0)
!5954 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4820, file: !4819, line: 323, type: !5804, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5955)
!5955 = !{!5952}
!5956 = !DILocation(line: 293, column: 13, scope: !5953, inlinedAt: !5957)
!5957 = !DILocation(line: 925, column: 36, scope: !5944, inlinedAt: !5941)
!5958 = !DILocation(line: 294, column: 13, scope: !5859)
!5959 = !DILocalVariable(name: "self", scope: !5960, file: !5837, line: 294, type: !5947, align: 8)
!5960 = !DILexicalBlockFile(scope: !5961, file: !5837, discriminator: 0)
!5961 = distinct !DISubprogram(name: "push_str", linkageName: "_ZN5alloc6string6String8push_str17h0a576c4395933b60E", scope: !30, file: !500, line: 924, type: !5945, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5962)
!5962 = !{!5959, !5963}
!5963 = !DILocalVariable(name: "string", scope: !5960, file: !5837, line: 294, type: !202, align: 8)
!5964 = !DILocation(line: 294, column: 13, scope: !5960, inlinedAt: !5958)
!5965 = !DILocation(line: 294, column: 29, scope: !5859)
!5966 = !DILocalVariable(name: "self", scope: !5967, file: !5837, line: 294, type: !202, align: 8)
!5967 = !DILexicalBlockFile(scope: !5968, file: !5837, discriminator: 0)
!5968 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4820, file: !4819, line: 323, type: !5804, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5969)
!5969 = !{!5966}
!5970 = !DILocation(line: 294, column: 13, scope: !5967, inlinedAt: !5971)
!5971 = !DILocation(line: 925, column: 36, scope: !5961, inlinedAt: !5958)
!5972 = !DILocation(line: 295, column: 32, scope: !5859)
!5973 = !DILocalVariable(name: "self", scope: !5974, file: !5837, line: 295, type: !202, align: 8)
!5974 = !DILexicalBlockFile(scope: !5975, file: !5837, discriminator: 0)
!5975 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hab2b14778b624533E", scope: !4820, file: !4819, line: 157, type: !5797, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5976)
!5976 = !{!5973}
!5977 = !DILocation(line: 295, column: 32, scope: !5974, inlinedAt: !5972)
!5978 = !DILocalVariable(name: "self", scope: !5979, file: !5837, line: 295, type: !202, align: 8)
!5979 = !DILexicalBlockFile(scope: !5980, file: !5837, discriminator: 0)
!5980 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4820, file: !4819, line: 323, type: !5804, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5981)
!5981 = !{!5978}
!5982 = !DILocation(line: 295, column: 32, scope: !5979, inlinedAt: !5983)
!5983 = !DILocation(line: 158, column: 9, scope: !5975, inlinedAt: !5972)
!5984 = !DILocation(line: 295, column: 13, scope: !5859)
!5985 = !DILocation(line: 297, column: 9, scope: !5849)
!5986 = !DILocalVariable(name: "self", scope: !5987, file: !5837, line: 297, type: !5947, align: 8)
!5987 = !DILexicalBlockFile(scope: !5988, file: !5837, discriminator: 0)
!5988 = distinct !DISubprogram(name: "push_str", linkageName: "_ZN5alloc6string6String8push_str17h0a576c4395933b60E", scope: !30, file: !500, line: 924, type: !5945, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5989)
!5989 = !{!5986, !5990}
!5990 = !DILocalVariable(name: "string", scope: !5987, file: !5837, line: 297, type: !202, align: 8)
!5991 = !DILocation(line: 297, column: 9, scope: !5987, inlinedAt: !5985)
!5992 = !DILocation(line: 297, column: 53, scope: !5849)
!5993 = !DILocation(line: 297, column: 63, scope: !5849)
!5994 = !DILocalVariable(name: "self", scope: !5995, file: !5837, line: 297, type: !202, align: 8)
!5995 = !DILexicalBlockFile(scope: !5996, file: !5837, discriminator: 0)
!5996 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hab2b14778b624533E", scope: !4820, file: !4819, line: 157, type: !5797, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !5997)
!5997 = !{!5994}
!5998 = !DILocation(line: 297, column: 63, scope: !5995, inlinedAt: !5993)
!5999 = !DILocalVariable(name: "self", scope: !6000, file: !5837, line: 297, type: !202, align: 8)
!6000 = !DILexicalBlockFile(scope: !6001, file: !5837, discriminator: 0)
!6001 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4820, file: !4819, line: 323, type: !5804, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6002)
!6002 = !{!5999}
!6003 = !DILocation(line: 297, column: 63, scope: !6000, inlinedAt: !6004)
!6004 = !DILocation(line: 158, column: 9, scope: !5996, inlinedAt: !5993)
!6005 = !DILocalVariable(name: "self", scope: !6006, file: !5837, line: 297, type: !202, align: 8)
!6006 = !DILexicalBlockFile(scope: !6007, file: !5837, discriminator: 0)
!6007 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4820, file: !4819, line: 323, type: !5804, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6008)
!6008 = !{!6005}
!6009 = !DILocation(line: 297, column: 9, scope: !6006, inlinedAt: !6010)
!6010 = !DILocation(line: 925, column: 36, scope: !5988, inlinedAt: !5985)
!6011 = !DILocation(line: 299, column: 6, scope: !5836)
!6012 = !DILocation(line: 289, column: 5, scope: !5836)
!6013 = distinct !DISubprogram(name: "append_elements<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17hbbe26f4fc28a9322E", scope: !35, file: !525, line: 1832, type: !6014, scopeLine: 1832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !63, retainedNodes: !6016)
!6014 = !DISubroutineType(types: !6015)
!6015 = !{null, !2253, !565}
!6016 = !{!6017, !6018, !6019, !6021}
!6017 = !DILocalVariable(name: "self", arg: 1, scope: !6013, file: !525, line: 1832, type: !2253)
!6018 = !DILocalVariable(name: "other", arg: 2, scope: !6013, file: !525, line: 1832, type: !565)
!6019 = !DILocalVariable(name: "count", scope: !6020, file: !525, line: 1833, type: !9, align: 8)
!6020 = distinct !DILexicalBlock(scope: !6013, file: !525, line: 1833, column: 9)
!6021 = !DILocalVariable(name: "len", scope: !6022, file: !525, line: 1835, type: !9, align: 8)
!6022 = distinct !DILexicalBlock(scope: !6020, file: !525, line: 1835, column: 9)
!6023 = !DILocation(line: 1832, column: 31, scope: !6013)
!6024 = !DILocation(line: 1832, column: 42, scope: !6013)
!6025 = !DILocalVariable(name: "runtime", scope: !6026, file: !525, line: 1836, type: !1355, align: 8)
!6026 = !DILexicalBlockFile(scope: !6027, file: !525, discriminator: 0)
!6027 = distinct !DILexicalBlock(scope: !6028, file: !549, line: 2336, column: 13)
!6028 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17ha3d50afd39c4aa62E", scope: !1347, file: !549, line: 2458, type: !1348, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6029)
!6029 = !{!6030, !6032, !6033, !6025}
!6030 = !DILocalVariable(name: "src", scope: !6031, file: !525, line: 1836, type: !52, align: 8)
!6031 = !DILexicalBlockFile(scope: !6028, file: !525, discriminator: 0)
!6032 = !DILocalVariable(name: "dst", scope: !6031, file: !525, line: 1836, type: !289, align: 8)
!6033 = !DILocalVariable(name: "count", scope: !6031, file: !525, line: 1836, type: !9, align: 8)
!6034 = !DILocation(line: 1836, column: 18, scope: !6026, inlinedAt: !6035)
!6035 = !DILocation(line: 1836, column: 18, scope: !6022)
!6036 = !DILocation(line: 1833, column: 30, scope: !6013)
!6037 = !DILocation(line: 1833, column: 13, scope: !6020)
!6038 = !DILocation(line: 1834, column: 9, scope: !6020)
!6039 = !DILocation(line: 1835, column: 19, scope: !6020)
!6040 = !DILocalVariable(name: "self", scope: !6041, file: !525, line: 1835, type: !533, align: 8)
!6041 = distinct !DISubprogram(name: "len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hf298e2182d869efcE", scope: !35, file: !525, line: 1945, type: !6042, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !63, retainedNodes: !6044)
!6042 = !DISubroutineType(types: !6043)
!6043 = !{!9, !533}
!6044 = !{!6040}
!6045 = !DILocation(line: 1835, column: 19, scope: !6041, inlinedAt: !6039)
!6046 = !DILocation(line: 1835, column: 13, scope: !6022)
!6047 = !DILocation(line: 1836, column: 43, scope: !6022)
!6048 = !DILocation(line: 1836, column: 18, scope: !6031, inlinedAt: !6035)
!6049 = !DILocation(line: 1836, column: 62, scope: !6022)
!6050 = !DILocalVariable(name: "self", scope: !6051, file: !525, line: 1836, type: !289, align: 8)
!6051 = !DILexicalBlockFile(scope: !6052, file: !525, discriminator: 0)
!6052 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hce95b2f782375a87E", scope: !691, file: !681, line: 985, type: !692, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6053)
!6053 = !{!6050, !6054}
!6054 = !DILocalVariable(name: "count", scope: !6051, file: !525, line: 1836, type: !9, align: 8)
!6055 = !DILocation(line: 1836, column: 62, scope: !6051, inlinedAt: !6049)
!6056 = !DILocation(line: 1836, column: 84, scope: !6022)
!6057 = !DILocalVariable(name: "self", scope: !6058, file: !525, line: 1836, type: !289, align: 8)
!6058 = !DILexicalBlockFile(scope: !6059, file: !525, discriminator: 0)
!6059 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h774ff863e67a55bdE", scope: !691, file: !681, line: 465, type: !701, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6060)
!6060 = !{!6057, !6061}
!6061 = !DILocalVariable(name: "count", scope: !6058, file: !525, line: 1836, type: !703, align: 8)
!6062 = !DILocation(line: 1836, column: 62, scope: !6058, inlinedAt: !6063)
!6063 = !DILocation(line: 990, column: 18, scope: !6052, inlinedAt: !6049)
!6064 = !DILocation(line: 1836, column: 90, scope: !6022)
!6065 = !DILocation(line: 1837, column: 9, scope: !6022)
!6066 = !DILocation(line: 1838, column: 6, scope: !6013)
!6067 = distinct !DISubprogram(name: "extend_from_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17hc5e9896bf59240d0E", scope: !35, file: !525, line: 2282, type: !6068, scopeLine: 2282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !63, retainedNodes: !6070)
!6068 = !DISubroutineType(types: !6069)
!6069 = !{null, !2253, !529}
!6070 = !{!6071, !6072}
!6071 = !DILocalVariable(name: "self", arg: 1, scope: !6067, file: !525, line: 2282, type: !2253)
!6072 = !DILocalVariable(name: "other", arg: 2, scope: !6067, file: !525, line: 2282, type: !529)
!6073 = !DILocation(line: 2282, column: 30, scope: !6067)
!6074 = !DILocation(line: 2282, column: 41, scope: !6067)
!6075 = !DILocation(line: 2283, column: 26, scope: !6067)
!6076 = !DILocalVariable(name: "self", scope: !6077, file: !525, line: 2283, type: !529, align: 8)
!6077 = !DILexicalBlockFile(scope: !6078, file: !525, discriminator: 0)
!6078 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hba0218594868f161E", scope: !1379, file: !1378, line: 734, type: !3690, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6079)
!6079 = !{!6076}
!6080 = !DILocation(line: 2283, column: 26, scope: !6077, inlinedAt: !6075)
!6081 = !DILocation(line: 2283, column: 9, scope: !6067)
!6082 = !DILocation(line: 2284, column: 6, scope: !6067)
!6083 = distinct !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hc547be82121339caE", scope: !35, file: !525, line: 840, type: !6084, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !63, retainedNodes: !6086)
!6084 = !DISubroutineType(types: !6085)
!6085 = !{null, !2253, !9}
!6086 = !{!6087, !6088}
!6087 = !DILocalVariable(name: "self", arg: 1, scope: !6083, file: !525, line: 840, type: !2253)
!6088 = !DILocalVariable(name: "additional", arg: 2, scope: !6083, file: !525, line: 840, type: !9)
!6089 = !DILocation(line: 840, column: 20, scope: !6083)
!6090 = !DILocation(line: 840, column: 31, scope: !6083)
!6091 = !DILocation(line: 841, column: 9, scope: !6083)
!6092 = !DILocation(line: 841, column: 26, scope: !6083)
!6093 = !DILocation(line: 842, column: 6, scope: !6083)
!6094 = distinct !DISubprogram(name: "exchange_malloc", linkageName: "_ZN5alloc5alloc15exchange_malloc17h4d4d724890fe9d4eE", scope: !62, file: !6095, line: 324, type: !6096, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6098)
!6095 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/alloc.rs", directory: "", checksumkind: CSK_MD5, checksum: "b6c7758b12bd6b7f0705d9bc90e671ea")
!6096 = !DISubroutineType(types: !6097)
!6097 = !{!289, !9, !9}
!6098 = !{!6099, !6100, !6101, !6103}
!6099 = !DILocalVariable(name: "size", arg: 1, scope: !6094, file: !6095, line: 324, type: !9)
!6100 = !DILocalVariable(name: "align", arg: 2, scope: !6094, file: !6095, line: 324, type: !9)
!6101 = !DILocalVariable(name: "layout", scope: !6102, file: !6095, line: 325, type: !2182, align: 8)
!6102 = distinct !DILexicalBlock(scope: !6094, file: !6095, line: 325, column: 5)
!6103 = !DILocalVariable(name: "ptr", scope: !6104, file: !6095, line: 327, type: !5514, align: 8)
!6104 = distinct !DILexicalBlock(scope: !6102, file: !6095, line: 327, column: 9)
!6105 = !DILocation(line: 324, column: 27, scope: !6094)
!6106 = !DILocation(line: 324, column: 40, scope: !6094)
!6107 = !DILocation(line: 325, column: 9, scope: !6102)
!6108 = !DILocalVariable(name: "self", scope: !6109, file: !6095, line: 327, type: !48, align: 8)
!6109 = !DILexicalBlockFile(scope: !6110, file: !6095, discriminator: 0)
!6110 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he85ce89b0e21db75E", scope: !48, file: !2484, line: 330, type: !6111, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6113)
!6111 = !DISubroutineType(types: !6112)
!6112 = !{!289, !48}
!6113 = !{!6108}
!6114 = !DILocation(line: 327, column: 20, scope: !6109, inlinedAt: !6115)
!6115 = !DILocation(line: 553, column: 9, scope: !6116, inlinedAt: !6122)
!6116 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h7d4d907f970324d3E", scope: !5514, file: !2484, line: 552, type: !6117, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6119)
!6117 = !DISubroutineType(types: !6118)
!6118 = !{!289, !5514}
!6119 = !{!6120}
!6120 = !DILocalVariable(name: "self", scope: !6121, file: !6095, line: 327, type: !5514, align: 8)
!6121 = !DILexicalBlockFile(scope: !6116, file: !6095, discriminator: 0)
!6122 = !DILocation(line: 327, column: 20, scope: !6104)
!6123 = !DILocation(line: 325, column: 61, scope: !6094)
!6124 = !DILocalVariable(name: "size", scope: !6125, file: !6095, line: 325, type: !9, align: 8)
!6125 = !DILexicalBlockFile(scope: !6126, file: !6095, discriminator: 0)
!6126 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hc32ed4c20a004031E", scope: !2182, file: !6127, line: 110, type: !6128, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6130)
!6127 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/alloc/layout.rs", directory: "", checksumkind: CSK_MD5, checksum: "2d0ac208ee70c69b94b07d38255a5525")
!6128 = !DISubroutineType(types: !6129)
!6129 = !{!2182, !9, !9}
!6130 = !{!6124, !6131}
!6131 = !DILocalVariable(name: "align", scope: !6125, file: !6095, line: 325, type: !9, align: 8)
!6132 = !DILocation(line: 325, column: 27, scope: !6125, inlinedAt: !6133)
!6133 = !DILocation(line: 325, column: 27, scope: !6094)
!6134 = !DILocation(line: 325, column: 67, scope: !6094)
!6135 = !DILocalVariable(name: "align", scope: !6136, file: !6095, line: 325, type: !9, align: 8)
!6136 = !DILexicalBlockFile(scope: !6137, file: !6095, discriminator: 0)
!6137 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h109247ecbc3664f8E", scope: !2188, file: !6138, line: 29, type: !6139, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6141)
!6138 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/valid_align.rs", directory: "", checksumkind: CSK_MD5, checksum: "681d44917f5a26aec3d3954431def51e")
!6139 = !DISubroutineType(types: !6140)
!6140 = !{!2188, !9}
!6141 = !{!6135, !6142}
!6142 = !DILocalVariable(name: "runtime", scope: !6143, file: !6095, line: 325, type: !6145, align: 8)
!6143 = !DILexicalBlockFile(scope: !6144, file: !6095, discriminator: 0)
!6144 = distinct !DILexicalBlock(scope: !6137, file: !549, line: 2336, column: 13)
!6145 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !6146, file: !2, size: 64, align: 64, elements: !6148, templateParams: !27, identifier: "a24236e50785a0359acaebf14a869a84")
!6146 = !DINamespace(name: "new_unchecked", scope: !6147)
!6147 = !DINamespace(name: "{impl#0}", scope: !412)
!6148 = !{!6149}
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__align", scope: !6145, file: !2, baseType: !556, size: 64, align: 64)
!6150 = !DILocation(line: 325, column: 27, scope: !6136, inlinedAt: !6151)
!6151 = !DILocation(line: 112, column: 40, scope: !6126, inlinedAt: !6133)
!6152 = !DILocation(line: 326, column: 11, scope: !6102)
!6153 = !DILocalVariable(name: "self", scope: !6154, file: !6095, line: 326, type: !6158, align: 8)
!6154 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hc12985ca999b6941E", scope: !6155, file: !6095, line: 236, type: !6156, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6159)
!6155 = !DINamespace(name: "{impl#1}", scope: !62)
!6156 = !DISubroutineType(types: !6157)
!6157 = !{!5506, !6158, !2182}
!6158 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::alloc::Global", baseType: !61, size: 64, align: 64, dwarfAddressSpace: 0)
!6159 = !{!6153, !6160}
!6160 = !DILocalVariable(name: "layout", scope: !6154, file: !6095, line: 326, type: !2182, align: 8)
!6161 = !DILocation(line: 326, column: 11, scope: !6154, inlinedAt: !6152)
!6162 = !DILocation(line: 326, column: 27, scope: !6102)
!6163 = !DILocation(line: 326, column: 5, scope: !6102)
!6164 = !DILocation(line: 327, column: 12, scope: !6102)
!6165 = !DILocation(line: 327, column: 12, scope: !6104)
!6166 = !DILocation(line: 327, column: 20, scope: !6121, inlinedAt: !6122)
!6167 = !DILocalVariable(name: "self", scope: !6168, file: !6095, line: 327, type: !5514, align: 8)
!6168 = !DILexicalBlockFile(scope: !6169, file: !6095, discriminator: 0)
!6169 = distinct !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h772ff93423a83c15E", scope: !5514, file: !2484, line: 532, type: !6170, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6172)
!6170 = !DISubroutineType(types: !6171)
!6171 = !{!48, !5514}
!6172 = !{!6167}
!6173 = !DILocation(line: 327, column: 20, scope: !6168, inlinedAt: !6115)
!6174 = !DILocalVariable(name: "self", scope: !6175, file: !6095, line: 327, type: !5514, align: 8)
!6175 = !DILexicalBlockFile(scope: !6176, file: !6095, discriminator: 0)
!6176 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h85f1687421c7872aE", scope: !5514, file: !2484, line: 330, type: !6177, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6179)
!6177 = !DISubroutineType(types: !6178)
!6178 = !{!651, !5514}
!6179 = !{!6174}
!6180 = !DILocation(line: 327, column: 20, scope: !6175, inlinedAt: !6181)
!6181 = !DILocation(line: 534, column: 41, scope: !6169, inlinedAt: !6115)
!6182 = !DILocalVariable(name: "self", scope: !6183, file: !6095, line: 327, type: !651, align: 8)
!6183 = !DILexicalBlockFile(scope: !6184, file: !6095, discriminator: 0)
!6184 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7fd536a97e153cfbE", scope: !682, file: !681, line: 1778, type: !684, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6185)
!6185 = !{!6182}
!6186 = !DILocation(line: 327, column: 20, scope: !6183, inlinedAt: !6181)
!6187 = !DILocalVariable(name: "ptr", scope: !6188, file: !6095, line: 327, type: !289, align: 8)
!6188 = !DILexicalBlockFile(scope: !6189, file: !6095, discriminator: 0)
!6189 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h834e2f92abdb0d2bE", scope: !48, file: !2484, line: 196, type: !6190, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6192)
!6190 = !DISubroutineType(types: !6191)
!6191 = !{!48, !289}
!6192 = !{!6187}
!6193 = !DILocation(line: 327, column: 20, scope: !6188, inlinedAt: !6194)
!6194 = !DILocation(line: 534, column: 18, scope: !6169, inlinedAt: !6115)
!6195 = !DILocation(line: 330, column: 2, scope: !6094)
!6196 = !DILocation(line: 328, column: 38, scope: !6102)
!6197 = !DILocation(line: 328, column: 19, scope: !6102)
!6198 = distinct !DISubprogram(name: "alloc_impl", linkageName: "_ZN5alloc5alloc6Global10alloc_impl17h3b70ffcab534b8dfE", scope: !61, file: !6095, line: 172, type: !6199, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6201)
!6199 = !DISubroutineType(types: !6200)
!6200 = !{!5506, !6158, !2182, !324}
!6201 = !{!6202, !6203, !6204, !6205, !6207, !6209, !6211, !6226}
!6202 = !DILocalVariable(name: "self", arg: 1, scope: !6198, file: !6095, line: 172, type: !6158)
!6203 = !DILocalVariable(name: "layout", arg: 2, scope: !6198, file: !6095, line: 172, type: !2182)
!6204 = !DILocalVariable(name: "zeroed", arg: 3, scope: !6198, file: !6095, line: 172, type: !324)
!6205 = !DILocalVariable(name: "size", scope: !6206, file: !6095, line: 176, type: !9, align: 8)
!6206 = distinct !DILexicalBlock(scope: !6198, file: !6095, line: 176, column: 13)
!6207 = !DILocalVariable(name: "raw_ptr", scope: !6208, file: !6095, line: 177, type: !289, align: 8)
!6208 = distinct !DILexicalBlock(scope: !6206, file: !6095, line: 177, column: 17)
!6209 = !DILocalVariable(name: "ptr", scope: !6210, file: !6095, line: 178, type: !48, align: 8)
!6210 = distinct !DILexicalBlock(scope: !6208, file: !6095, line: 178, column: 17)
!6211 = !DILocalVariable(name: "residual", scope: !6212, file: !6095, line: 178, type: !6213, align: 1)
!6212 = distinct !DILexicalBlock(scope: !6208, file: !6095, line: 178, column: 66)
!6213 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::AllocError>", scope: !877, file: !2, align: 8, elements: !6214, templateParams: !27, identifier: "572d358f2a12b97961cfb71e38e53f04")
!6214 = !{!6215}
!6215 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6213, file: !2, align: 8, elements: !6216, templateParams: !27, identifier: "88663002e18d2fe1148d606c86c1d5ff")
!6216 = !{!6217, !6222}
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !6215, file: !2, baseType: !6218, align: 8)
!6218 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !6213, file: !2, align: 8, elements: !6219, templateParams: !6221, identifier: "be577e6defde51b29863ecc8d4e2e22a")
!6219 = !{!6220}
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6218, file: !2, baseType: !2329, align: 8)
!6221 = !{!2334, !5519}
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !6215, file: !2, baseType: !6223, align: 8)
!6223 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !6213, file: !2, align: 8, elements: !6224, templateParams: !6221, identifier: "1bce49b0456cc0581bfad8a74808f72")
!6224 = !{!6225}
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6223, file: !2, baseType: !5520, align: 8)
!6226 = !DILocalVariable(name: "val", scope: !6227, file: !6095, line: 178, type: !48, align: 8)
!6227 = distinct !DILexicalBlock(scope: !6208, file: !6095, line: 178, column: 27)
!6228 = !DILocation(line: 172, column: 19, scope: !6198)
!6229 = !DILocation(line: 172, column: 26, scope: !6198)
!6230 = !DILocation(line: 172, column: 42, scope: !6198)
!6231 = !DILocalVariable(name: "data", scope: !6232, file: !6095, line: 174, type: !48, align: 8)
!6232 = !DILexicalBlockFile(scope: !6233, file: !6095, discriminator: 0)
!6233 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17he0c29b4771e7cc99E", scope: !5514, file: !2484, line: 487, type: !6234, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6236)
!6234 = !DISubroutineType(types: !6235)
!6235 = !{!5514, !48, !9}
!6236 = !{!6231, !6237}
!6237 = !DILocalVariable(name: "len", scope: !6232, file: !6095, line: 174, type: !9, align: 8)
!6238 = !DILocation(line: 174, column: 21, scope: !6232, inlinedAt: !6239)
!6239 = !DILocation(line: 174, column: 21, scope: !6198)
!6240 = !DILocation(line: 177, column: 21, scope: !6208)
!6241 = !DILocalVariable(name: "layout", scope: !6242, file: !6095, line: 177, type: !2182, align: 8)
!6242 = distinct !DISubprogram(name: "alloc_zeroed", linkageName: "_ZN5alloc5alloc12alloc_zeroed17h9639a27c48d1b831E", scope: !62, file: !6095, line: 165, type: !6243, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6245)
!6243 = !DISubroutineType(types: !6244)
!6244 = !{!289, !2182}
!6245 = !{!6241}
!6246 = !DILocation(line: 177, column: 43, scope: !6242, inlinedAt: !6247)
!6247 = !DILocation(line: 177, column: 43, scope: !6206)
!6248 = !DILocalVariable(name: "layout", scope: !6249, file: !6095, line: 177, type: !2182, align: 8)
!6249 = distinct !DISubprogram(name: "alloc", linkageName: "_ZN5alloc5alloc5alloc17h49d73e566e30f050E", scope: !62, file: !6095, line: 94, type: !6243, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6250)
!6250 = !{!6248}
!6251 = !DILocation(line: 177, column: 73, scope: !6249, inlinedAt: !6252)
!6252 = !DILocation(line: 177, column: 73, scope: !6206)
!6253 = !DILocalVariable(name: "self", scope: !6254, file: !6095, line: 178, type: !6274, align: 8)
!6254 = !DILexicalBlockFile(scope: !6255, file: !6095, discriminator: 0)
!6255 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h95a08431af53734cE", scope: !3016, file: !2357, line: 2117, type: !6256, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !6282, retainedNodes: !6289)
!6256 = !DISubroutineType(types: !6257)
!6257 = !{!6258, !6274}
!6258 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>", scope: !3020, file: !2, size: 64, align: 64, elements: !6259, templateParams: !27, identifier: "7f8c65b25026163a60482c903b940372")
!6259 = !{!6260}
!6260 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6258, file: !2, size: 64, align: 64, elements: !6261, templateParams: !27, identifier: "a5a8c50ac5e6502472acbdda15ae7613", discriminator: !6273)
!6261 = !{!6262, !6269}
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !6260, file: !2, baseType: !6263, size: 64, align: 64)
!6263 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !6258, file: !2, size: 64, align: 64, elements: !6264, templateParams: !6266, identifier: "d2ac067f6845ce1e8a08fbb330350406")
!6264 = !{!6265}
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6263, file: !2, baseType: !48, size: 64, align: 64)
!6266 = !{!6267, !6268}
!6267 = !DITemplateTypeParameter(name: "B", type: !6213)
!6268 = !DITemplateTypeParameter(name: "C", type: !48)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !6260, file: !2, baseType: !6270, size: 64, align: 64, extraData: i64 0)
!6270 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !6258, file: !2, size: 64, align: 64, elements: !6271, templateParams: !6266, identifier: "81bddfbc89a9f0c5cc1c72e49b9ff534")
!6271 = !{!6272}
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6270, file: !2, baseType: !6213, align: 8)
!6273 = !DIDerivedType(tag: DW_TAG_member, scope: !6258, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!6274 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", scope: !877, file: !2, size: 64, align: 64, elements: !6275, templateParams: !27, identifier: "e71566aa277061ca8abc5a83ae5b9729")
!6275 = !{!6276}
!6276 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6274, file: !2, size: 64, align: 64, elements: !6277, templateParams: !27, identifier: "4a74327c407a883ea599f67b3290ba83", discriminator: !6288)
!6277 = !{!6278, !6284}
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !6276, file: !2, baseType: !6279, size: 64, align: 64)
!6279 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !6274, file: !2, size: 64, align: 64, elements: !6280, templateParams: !6282, identifier: "71a196ee6c186d8bac41245f54989593")
!6280 = !{!6281}
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6279, file: !2, baseType: !48, size: 64, align: 64)
!6282 = !{!6283, !5519}
!6283 = !DITemplateTypeParameter(name: "T", type: !48)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !6276, file: !2, baseType: !6285, size: 64, align: 64, extraData: i64 0)
!6285 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !6274, file: !2, size: 64, align: 64, elements: !6286, templateParams: !6282, identifier: "fc861602d066f2f1f51a40a0537349e6")
!6286 = !{!6287}
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6285, file: !2, baseType: !5520, align: 8)
!6288 = !DIDerivedType(tag: DW_TAG_member, scope: !6274, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!6289 = !{!6253, !6290, !6293}
!6290 = !DILocalVariable(name: "v", scope: !6291, file: !6095, line: 178, type: !48, align: 8)
!6291 = !DILexicalBlockFile(scope: !6292, file: !6095, discriminator: 0)
!6292 = distinct !DILexicalBlock(scope: !6255, file: !2357, line: 2119, column: 13)
!6293 = !DILocalVariable(name: "e", scope: !6294, file: !6095, line: 178, type: !5520, align: 1)
!6294 = !DILexicalBlockFile(scope: !6295, file: !6095, discriminator: 0)
!6295 = distinct !DILexicalBlock(scope: !6255, file: !2357, line: 2120, column: 13)
!6296 = !DILocation(line: 178, column: 27, scope: !6254, inlinedAt: !6297)
!6297 = !DILocation(line: 178, column: 27, scope: !6208)
!6298 = !DILocalVariable(name: "self", scope: !6299, file: !6095, line: 178, type: !6301, align: 8)
!6299 = !DILexicalBlockFile(scope: !6300, file: !6095, discriminator: 0)
!6300 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h6ddc34e536d349d4E", scope: !6301, file: !1137, line: 1051, type: !6313, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !6282, retainedNodes: !6315)
!6301 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::ptr::non_null::NonNull<u8>>", scope: !20, file: !2, size: 64, align: 64, elements: !6302, templateParams: !27, identifier: "73e5c906163f964bd09052518b6d2dc5")
!6302 = !{!6303}
!6303 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6301, file: !2, size: 64, align: 64, elements: !6304, templateParams: !27, identifier: "60204c6c6496841dbff7e7ec5dea5282", discriminator: !6312)
!6304 = !{!6305, !6308}
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6303, file: !2, baseType: !6306, size: 64, align: 64, extraData: i64 0)
!6306 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6301, file: !2, size: 64, align: 64, elements: !27, templateParams: !6307, identifier: "b393050474aeb0631755d975367153e1")
!6307 = !{!6283}
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6303, file: !2, baseType: !6309, size: 64, align: 64)
!6309 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6301, file: !2, size: 64, align: 64, elements: !6310, templateParams: !6307, identifier: "a01a0b695bfd5d94759ea5c77533b9ea")
!6310 = !{!6311}
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6309, file: !2, baseType: !48, size: 64, align: 64)
!6312 = !DIDerivedType(tag: DW_TAG_member, scope: !6301, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!6313 = !DISubroutineType(types: !6314)
!6314 = !{!6274, !6301, !5520}
!6315 = !{!6298, !6316, !6317}
!6316 = !DILocalVariable(name: "err", scope: !6299, file: !6095, line: 178, type: !5520, align: 1)
!6317 = !DILocalVariable(name: "v", scope: !6318, file: !6095, line: 178, type: !48, align: 8)
!6318 = !DILexicalBlockFile(scope: !6319, file: !6095, discriminator: 0)
!6319 = distinct !DILexicalBlock(scope: !6300, file: !1137, line: 1056, column: 13)
!6320 = !DILocation(line: 178, column: 27, scope: !6299, inlinedAt: !6297)
!6321 = !DILocation(line: 178, column: 66, scope: !6212)
!6322 = !DILocalVariable(name: "residual", scope: !6323, file: !6095, line: 178, type: !6213, align: 1)
!6323 = !DILexicalBlockFile(scope: !6324, file: !6095, discriminator: 0)
!6324 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc2393e7b735b05edE", scope: !2358, file: !2357, line: 2132, type: !6325, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !6331, retainedNodes: !6327)
!6325 = !DISubroutineType(types: !6326)
!6326 = !{!5506, !6213, !508}
!6327 = !{!6322, !6328}
!6328 = !DILocalVariable(name: "e", scope: !6329, file: !6095, line: 178, type: !5520, align: 1)
!6329 = !DILexicalBlockFile(scope: !6330, file: !6095, discriminator: 0)
!6330 = distinct !DILexicalBlock(scope: !6324, file: !2357, line: 2134, column: 13)
!6331 = !{!5518, !5519, !6332}
!6332 = !DITemplateTypeParameter(name: "F", type: !5520)
!6333 = !DILocation(line: 178, column: 27, scope: !6323, inlinedAt: !6334)
!6334 = !DILocation(line: 178, column: 27, scope: !6212)
!6335 = !DILocalVariable(name: "self", scope: !6336, file: !6095, line: 174, type: !6339, align: 8)
!6336 = !DILexicalBlockFile(scope: !6337, file: !6095, discriminator: 0)
!6337 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h927976e8eacb929eE", scope: !6339, file: !6338, line: 82, type: !6342, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6344)
!6338 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/nonzero.rs", directory: "", checksumkind: CSK_MD5, checksum: "f51cb88dd069db0b7fcd2123d03b69c9")
!6339 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonZeroUsize", scope: !352, file: !2, size: 64, align: 64, elements: !6340, templateParams: !27, identifier: "c6c54dffb7a9517405cc55666c804e7")
!6340 = !{!6341}
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6339, file: !2, baseType: !9, size: 64, align: 64)
!6342 = !DISubroutineType(types: !6343)
!6343 = !{!9, !6339}
!6344 = !{!6335}
!6345 = !DILocation(line: 174, column: 51, scope: !6336, inlinedAt: !6346)
!6346 = !DILocation(line: 131, column: 9, scope: !6347, inlinedAt: !6353)
!6347 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h7ebff2317e765fc5E", scope: !2182, file: !6127, line: 130, type: !6348, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6350)
!6348 = !DISubroutineType(types: !6349)
!6349 = !{!9, !5547}
!6350 = !{!6351}
!6351 = !DILocalVariable(name: "self", scope: !6352, file: !6095, line: 174, type: !5547, align: 8)
!6352 = !DILexicalBlockFile(scope: !6347, file: !6095, discriminator: 0)
!6353 = !DILocation(line: 205, column: 71, scope: !6354, inlinedAt: !6360)
!6354 = distinct !DISubprogram(name: "dangling", linkageName: "_ZN4core5alloc6layout6Layout8dangling17h215f95e48c1da970E", scope: !2182, file: !6127, line: 203, type: !6355, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6357)
!6355 = !DISubroutineType(types: !6356)
!6356 = !{!48, !5547}
!6357 = !{!6358}
!6358 = !DILocalVariable(name: "self", scope: !6359, file: !6095, line: 174, type: !5547, align: 8)
!6359 = !DILexicalBlockFile(scope: !6354, file: !6095, discriminator: 0)
!6360 = !DILocation(line: 174, column: 51, scope: !6198)
!6361 = !DILocalVariable(name: "self", scope: !6362, file: !6095, line: 174, type: !2188, align: 8)
!6362 = !DILexicalBlockFile(scope: !6363, file: !6095, discriminator: 0)
!6363 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h2c6ab0fa33443001E", scope: !2188, file: !6138, line: 39, type: !6364, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6366)
!6364 = !DISubroutineType(types: !6365)
!6365 = !{!6339, !2188}
!6366 = !{!6361}
!6367 = !DILocation(line: 174, column: 51, scope: !6362, inlinedAt: !6346)
!6368 = !DILocalVariable(name: "self", scope: !6369, file: !6095, line: 177, type: !6339, align: 8)
!6369 = !DILexicalBlockFile(scope: !6370, file: !6095, discriminator: 0)
!6370 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h927976e8eacb929eE", scope: !6339, file: !6338, line: 82, type: !6342, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6371)
!6371 = !{!6368}
!6372 = !DILocation(line: 177, column: 43, scope: !6369, inlinedAt: !6373)
!6373 = !DILocation(line: 131, column: 9, scope: !6374, inlinedAt: !6378)
!6374 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h7ebff2317e765fc5E", scope: !2182, file: !6127, line: 130, type: !6348, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6375)
!6375 = !{!6376}
!6376 = !DILocalVariable(name: "self", scope: !6377, file: !6095, line: 177, type: !5547, align: 8)
!6377 = !DILexicalBlockFile(scope: !6374, file: !6095, discriminator: 0)
!6378 = !DILocation(line: 166, column: 49, scope: !6242, inlinedAt: !6247)
!6379 = !DILocalVariable(name: "self", scope: !6380, file: !6095, line: 177, type: !2188, align: 8)
!6380 = !DILexicalBlockFile(scope: !6381, file: !6095, discriminator: 0)
!6381 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h2c6ab0fa33443001E", scope: !2188, file: !6138, line: 39, type: !6364, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6382)
!6382 = !{!6379}
!6383 = !DILocation(line: 177, column: 43, scope: !6380, inlinedAt: !6373)
!6384 = !DILocalVariable(name: "self", scope: !6385, file: !6095, line: 177, type: !6339, align: 8)
!6385 = !DILexicalBlockFile(scope: !6386, file: !6095, discriminator: 0)
!6386 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h927976e8eacb929eE", scope: !6339, file: !6338, line: 82, type: !6342, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6387)
!6387 = !{!6384}
!6388 = !DILocation(line: 177, column: 73, scope: !6385, inlinedAt: !6389)
!6389 = !DILocation(line: 131, column: 9, scope: !6390, inlinedAt: !6394)
!6390 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h7ebff2317e765fc5E", scope: !2182, file: !6127, line: 130, type: !6348, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6391)
!6391 = !{!6392}
!6392 = !DILocalVariable(name: "self", scope: !6393, file: !6095, line: 177, type: !5547, align: 8)
!6393 = !DILexicalBlockFile(scope: !6390, file: !6095, discriminator: 0)
!6394 = !DILocation(line: 95, column: 42, scope: !6249, inlinedAt: !6252)
!6395 = !DILocalVariable(name: "self", scope: !6396, file: !6095, line: 177, type: !2188, align: 8)
!6396 = !DILexicalBlockFile(scope: !6397, file: !6095, discriminator: 0)
!6397 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h2c6ab0fa33443001E", scope: !2188, file: !6138, line: 39, type: !6364, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6398)
!6398 = !{!6395}
!6399 = !DILocation(line: 177, column: 73, scope: !6396, inlinedAt: !6389)
!6400 = !DILocation(line: 178, column: 27, scope: !6294, inlinedAt: !6297)
!6401 = !DILocation(line: 178, column: 27, scope: !6329, inlinedAt: !6334)
!6402 = !DILocation(line: 173, column: 15, scope: !6198)
!6403 = !DILocalVariable(name: "self", scope: !6404, file: !6095, line: 173, type: !5547, align: 8)
!6404 = !DILexicalBlockFile(scope: !6405, file: !6095, discriminator: 0)
!6405 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hb122e82487c9b5ecE", scope: !2182, file: !6127, line: 120, type: !6348, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6406)
!6406 = !{!6403}
!6407 = !DILocation(line: 173, column: 15, scope: !6404, inlinedAt: !6402)
!6408 = !DILocation(line: 173, column: 9, scope: !6198)
!6409 = !DILocation(line: 174, column: 51, scope: !6359, inlinedAt: !6360)
!6410 = !DILocation(line: 174, column: 51, scope: !6352, inlinedAt: !6353)
!6411 = !DILocalVariable(name: "n", scope: !6412, file: !6095, line: 174, type: !9, align: 8)
!6412 = !DILexicalBlockFile(scope: !6413, file: !6095, discriminator: 0)
!6413 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17haa5ebe932de09af5E", scope: !6339, file: !6338, line: 56, type: !6414, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6416)
!6414 = !DISubroutineType(types: !6415)
!6415 = !{!6339, !9}
!6416 = !{!6411, !6417}
!6417 = !DILocalVariable(name: "runtime", scope: !6418, file: !6095, line: 174, type: !6420, align: 8)
!6418 = !DILexicalBlockFile(scope: !6419, file: !6095, discriminator: 0)
!6419 = distinct !DILexicalBlock(scope: !6413, file: !549, line: 2336, column: 13)
!6420 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !6421, file: !2, size: 64, align: 64, elements: !6423, templateParams: !27, identifier: "cbed2d88a1ec7b20c4ad53e8c9863d89")
!6421 = !DINamespace(name: "new_unchecked", scope: !6422)
!6422 = !DINamespace(name: "{impl#35}", scope: !352)
!6423 = !{!6424}
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__n", scope: !6420, file: !2, baseType: !556, size: 64, align: 64)
!6425 = !DILocation(line: 174, column: 51, scope: !6412, inlinedAt: !6426)
!6426 = !DILocation(line: 41, column: 18, scope: !6363, inlinedAt: !6346)
!6427 = !DILocalVariable(name: "addr", scope: !6428, file: !6095, line: 174, type: !9, align: 8)
!6428 = !DILexicalBlockFile(scope: !6429, file: !6095, discriminator: 0)
!6429 = distinct !DISubprogram(name: "invalid_mut<u8>", linkageName: "_ZN4core3ptr11invalid_mut17hffa81a5c88b69200E", scope: !45, file: !562, line: 569, type: !6430, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6432)
!6430 = !DISubroutineType(types: !6431)
!6431 = !{!289, !9}
!6432 = !{!6427}
!6433 = !DILocation(line: 174, column: 51, scope: !6428, inlinedAt: !6434)
!6434 = !DILocation(line: 205, column: 41, scope: !6354, inlinedAt: !6360)
!6435 = !DILocalVariable(name: "ptr", scope: !6436, file: !6095, line: 174, type: !289, align: 8)
!6436 = !DILexicalBlockFile(scope: !6437, file: !6095, discriminator: 0)
!6437 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h834e2f92abdb0d2bE", scope: !48, file: !2484, line: 196, type: !6190, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6438)
!6438 = !{!6435}
!6439 = !DILocation(line: 174, column: 51, scope: !6436, inlinedAt: !6440)
!6440 = !DILocation(line: 205, column: 18, scope: !6354, inlinedAt: !6360)
!6441 = !DILocation(line: 176, column: 13, scope: !6198)
!6442 = !DILocation(line: 176, column: 13, scope: !6206)
!6443 = !DILocation(line: 177, column: 34, scope: !6206)
!6444 = !DILocation(line: 177, column: 79, scope: !6206)
!6445 = !DILocalVariable(name: "self", scope: !6446, file: !6095, line: 177, type: !5547, align: 8)
!6446 = !DILexicalBlockFile(scope: !6447, file: !6095, discriminator: 0)
!6447 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hb122e82487c9b5ecE", scope: !2182, file: !6127, line: 120, type: !6348, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6448)
!6448 = !{!6445}
!6449 = !DILocation(line: 177, column: 73, scope: !6446, inlinedAt: !6450)
!6450 = !DILocation(line: 95, column: 27, scope: !6249, inlinedAt: !6252)
!6451 = !DILocation(line: 177, column: 73, scope: !6393, inlinedAt: !6394)
!6452 = !DILocalVariable(name: "n", scope: !6453, file: !6095, line: 177, type: !9, align: 8)
!6453 = !DILexicalBlockFile(scope: !6454, file: !6095, discriminator: 0)
!6454 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17haa5ebe932de09af5E", scope: !6339, file: !6338, line: 56, type: !6414, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6455)
!6455 = !{!6452, !6456}
!6456 = !DILocalVariable(name: "runtime", scope: !6457, file: !6095, line: 177, type: !6420, align: 8)
!6457 = !DILexicalBlockFile(scope: !6458, file: !6095, discriminator: 0)
!6458 = distinct !DILexicalBlock(scope: !6454, file: !549, line: 2336, column: 13)
!6459 = !DILocation(line: 177, column: 73, scope: !6453, inlinedAt: !6460)
!6460 = !DILocation(line: 41, column: 18, scope: !6397, inlinedAt: !6389)
!6461 = !DILocation(line: 177, column: 56, scope: !6206)
!6462 = !DILocalVariable(name: "self", scope: !6463, file: !6095, line: 177, type: !5547, align: 8)
!6463 = !DILexicalBlockFile(scope: !6464, file: !6095, discriminator: 0)
!6464 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hb122e82487c9b5ecE", scope: !2182, file: !6127, line: 120, type: !6348, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6465)
!6465 = !{!6462}
!6466 = !DILocation(line: 177, column: 43, scope: !6463, inlinedAt: !6467)
!6467 = !DILocation(line: 166, column: 34, scope: !6242, inlinedAt: !6247)
!6468 = !DILocation(line: 177, column: 43, scope: !6377, inlinedAt: !6378)
!6469 = !DILocalVariable(name: "n", scope: !6470, file: !6095, line: 177, type: !9, align: 8)
!6470 = !DILexicalBlockFile(scope: !6471, file: !6095, discriminator: 0)
!6471 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17haa5ebe932de09af5E", scope: !6339, file: !6338, line: 56, type: !6414, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6472)
!6472 = !{!6469, !6473}
!6473 = !DILocalVariable(name: "runtime", scope: !6474, file: !6095, line: 177, type: !6420, align: 8)
!6474 = !DILexicalBlockFile(scope: !6475, file: !6095, discriminator: 0)
!6475 = distinct !DILexicalBlock(scope: !6471, file: !549, line: 2336, column: 13)
!6476 = !DILocation(line: 177, column: 43, scope: !6470, inlinedAt: !6477)
!6477 = !DILocation(line: 41, column: 18, scope: !6381, inlinedAt: !6373)
!6478 = !DILocation(line: 177, column: 31, scope: !6206)
!6479 = !DILocation(line: 178, column: 40, scope: !6208)
!6480 = !DILocation(line: 178, column: 27, scope: !6318, inlinedAt: !6297)
!6481 = !DILocation(line: 178, column: 27, scope: !6291, inlinedAt: !6297)
!6482 = !DILocation(line: 178, column: 27, scope: !6227)
!6483 = !DILocation(line: 178, column: 21, scope: !6210)
!6484 = !DILocation(line: 179, column: 50, scope: !6210)
!6485 = !DILocalVariable(name: "data", scope: !6486, file: !6095, line: 179, type: !48, align: 8)
!6486 = !DILexicalBlockFile(scope: !6487, file: !6095, discriminator: 0)
!6487 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17he0c29b4771e7cc99E", scope: !5514, file: !2484, line: 487, type: !6234, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6488)
!6488 = !{!6485, !6489}
!6489 = !DILocalVariable(name: "len", scope: !6486, file: !6095, line: 179, type: !9, align: 8)
!6490 = !DILocation(line: 179, column: 20, scope: !6486, inlinedAt: !6491)
!6491 = !DILocation(line: 179, column: 20, scope: !6210)
!6492 = !DILocation(line: 179, column: 55, scope: !6210)
!6493 = !DILocalVariable(name: "self", scope: !6494, file: !6095, line: 179, type: !48, align: 8)
!6494 = !DILexicalBlockFile(scope: !6495, file: !6095, discriminator: 0)
!6495 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he85ce89b0e21db75E", scope: !48, file: !2484, line: 330, type: !6111, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6496)
!6496 = !{!6493}
!6497 = !DILocation(line: 179, column: 20, scope: !6494, inlinedAt: !6498)
!6498 = !DILocation(line: 489, column: 70, scope: !6487, inlinedAt: !6491)
!6499 = !DILocalVariable(name: "data", scope: !6500, file: !6095, line: 179, type: !289, align: 8)
!6500 = !DILexicalBlockFile(scope: !6501, file: !6095, discriminator: 0)
!6501 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17ha3e4fadd5446249cE", scope: !45, file: !562, line: 727, type: !711, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6502)
!6502 = !{!6499, !6503}
!6503 = !DILocalVariable(name: "len", scope: !6500, file: !6095, line: 179, type: !9, align: 8)
!6504 = !DILocation(line: 179, column: 20, scope: !6500, inlinedAt: !6505)
!6505 = !DILocation(line: 489, column: 38, scope: !6487, inlinedAt: !6491)
!6506 = !DILocalVariable(name: "self", scope: !6507, file: !6095, line: 179, type: !289, align: 8)
!6507 = !DILexicalBlockFile(scope: !6508, file: !6095, discriminator: 0)
!6508 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hde28230253ee19baE", scope: !691, file: !681, line: 45, type: !721, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !582, retainedNodes: !6509)
!6509 = !{!6506}
!6510 = !DILocation(line: 179, column: 20, scope: !6507, inlinedAt: !6511)
!6511 = !DILocation(line: 728, column: 24, scope: !6501, inlinedAt: !6505)
!6512 = !DILocalVariable(name: "data_address", scope: !6513, file: !6095, line: 179, type: !329, align: 8)
!6513 = !DILexicalBlockFile(scope: !6514, file: !6095, discriminator: 0)
!6514 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h56bd1c6bd84c489bE", scope: !590, file: !589, line: 127, type: !729, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6515)
!6515 = !{!6512, !6516}
!6516 = !DILocalVariable(name: "metadata", scope: !6513, file: !6095, line: 179, type: !9, align: 8)
!6517 = !DILocation(line: 179, column: 20, scope: !6513, inlinedAt: !6518)
!6518 = !DILocation(line: 728, column: 5, scope: !6501, inlinedAt: !6505)
!6519 = !DILocalVariable(name: "ptr", scope: !6520, file: !6095, line: 179, type: !651, align: 8)
!6520 = !DILexicalBlockFile(scope: !6521, file: !6095, discriminator: 0)
!6521 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h0772a5553ed15ec1E", scope: !5514, file: !2484, line: 196, type: !6522, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6524)
!6522 = !DISubroutineType(types: !6523)
!6523 = !{!5514, !651}
!6524 = !{!6519}
!6525 = !DILocation(line: 179, column: 20, scope: !6520, inlinedAt: !6526)
!6526 = !DILocation(line: 489, column: 18, scope: !6487, inlinedAt: !6491)
!6527 = !DILocation(line: 179, column: 17, scope: !6210)
!6528 = !DILocation(line: 180, column: 13, scope: !6198)
!6529 = !DILocation(line: 182, column: 6, scope: !6198)
!6530 = !DILocalVariable(name: "self", scope: !6531, file: !6095, line: 174, type: !48, align: 8)
!6531 = !DILexicalBlockFile(scope: !6532, file: !6095, discriminator: 0)
!6532 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he85ce89b0e21db75E", scope: !48, file: !2484, line: 330, type: !6111, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6533)
!6533 = !{!6530}
!6534 = !DILocation(line: 174, column: 21, scope: !6531, inlinedAt: !6535)
!6535 = !DILocation(line: 489, column: 70, scope: !6233, inlinedAt: !6239)
!6536 = !DILocalVariable(name: "data", scope: !6537, file: !6095, line: 174, type: !289, align: 8)
!6537 = !DILexicalBlockFile(scope: !6538, file: !6095, discriminator: 0)
!6538 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17ha3e4fadd5446249cE", scope: !45, file: !562, line: 727, type: !711, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6539)
!6539 = !{!6536, !6540}
!6540 = !DILocalVariable(name: "len", scope: !6537, file: !6095, line: 174, type: !9, align: 8)
!6541 = !DILocation(line: 174, column: 21, scope: !6537, inlinedAt: !6542)
!6542 = !DILocation(line: 489, column: 38, scope: !6233, inlinedAt: !6239)
!6543 = !DILocalVariable(name: "self", scope: !6544, file: !6095, line: 174, type: !289, align: 8)
!6544 = !DILexicalBlockFile(scope: !6545, file: !6095, discriminator: 0)
!6545 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hde28230253ee19baE", scope: !691, file: !681, line: 45, type: !721, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !582, retainedNodes: !6546)
!6546 = !{!6543}
!6547 = !DILocation(line: 174, column: 21, scope: !6544, inlinedAt: !6548)
!6548 = !DILocation(line: 728, column: 24, scope: !6538, inlinedAt: !6542)
!6549 = !DILocalVariable(name: "data_address", scope: !6550, file: !6095, line: 174, type: !329, align: 8)
!6550 = !DILexicalBlockFile(scope: !6551, file: !6095, discriminator: 0)
!6551 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h56bd1c6bd84c489bE", scope: !590, file: !589, line: 127, type: !729, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6552)
!6552 = !{!6549, !6553}
!6553 = !DILocalVariable(name: "metadata", scope: !6550, file: !6095, line: 174, type: !9, align: 8)
!6554 = !DILocation(line: 174, column: 21, scope: !6550, inlinedAt: !6555)
!6555 = !DILocation(line: 728, column: 5, scope: !6538, inlinedAt: !6542)
!6556 = !DILocalVariable(name: "ptr", scope: !6557, file: !6095, line: 174, type: !651, align: 8)
!6557 = !DILexicalBlockFile(scope: !6558, file: !6095, discriminator: 0)
!6558 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h0772a5553ed15ec1E", scope: !5514, file: !2484, line: 196, type: !6522, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6559)
!6559 = !{!6556}
!6560 = !DILocation(line: 174, column: 21, scope: !6557, inlinedAt: !6561)
!6561 = !DILocation(line: 489, column: 18, scope: !6233, inlinedAt: !6239)
!6562 = !DILocation(line: 174, column: 18, scope: !6198)
!6563 = !DILocation(line: 174, column: 72, scope: !6198)
!6564 = distinct !DISubprogram(name: "grow_impl", linkageName: "_ZN5alloc5alloc6Global9grow_impl17hf6d1afb61bd824ddE", scope: !61, file: !6095, line: 186, type: !6565, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6567)
!6565 = !DISubroutineType(types: !6566)
!6566 = !{!5506, !6158, !48, !2182, !2182, !324}
!6567 = !{!6568, !6569, !6570, !6571, !6572, !6573, !6575, !6576, !6578, !6580, !6582, !6584, !6586, !6588, !6590, !6592}
!6568 = !DILocalVariable(name: "self", arg: 1, scope: !6564, file: !6095, line: 187, type: !6158)
!6569 = !DILocalVariable(name: "ptr", arg: 2, scope: !6564, file: !6095, line: 188, type: !48)
!6570 = !DILocalVariable(name: "old_layout", arg: 3, scope: !6564, file: !6095, line: 189, type: !2182)
!6571 = !DILocalVariable(name: "new_layout", arg: 4, scope: !6564, file: !6095, line: 190, type: !2182)
!6572 = !DILocalVariable(name: "zeroed", arg: 5, scope: !6564, file: !6095, line: 191, type: !324)
!6573 = !DILocalVariable(name: "old_size", scope: !6574, file: !6095, line: 203, type: !9, align: 8)
!6574 = distinct !DILexicalBlock(scope: !6564, file: !6095, line: 203, column: 13)
!6575 = !DILocalVariable(name: "old_size", scope: !6574, file: !6095, line: 203, type: !556, align: 8)
!6576 = !DILocalVariable(name: "new_size", scope: !6577, file: !6095, line: 204, type: !9, align: 8)
!6577 = distinct !DILexicalBlock(scope: !6574, file: !6095, line: 204, column: 17)
!6578 = !DILocalVariable(name: "raw_ptr", scope: !6579, file: !6095, line: 209, type: !289, align: 8)
!6579 = distinct !DILexicalBlock(scope: !6577, file: !6095, line: 209, column: 17)
!6580 = !DILocalVariable(name: "ptr", scope: !6581, file: !6095, line: 210, type: !48, align: 8)
!6581 = distinct !DILexicalBlock(scope: !6579, file: !6095, line: 210, column: 17)
!6582 = !DILocalVariable(name: "residual", scope: !6583, file: !6095, line: 210, type: !6213, align: 1)
!6583 = distinct !DILexicalBlock(scope: !6579, file: !6095, line: 210, column: 66)
!6584 = !DILocalVariable(name: "val", scope: !6585, file: !6095, line: 210, type: !48, align: 8)
!6585 = distinct !DILexicalBlock(scope: !6579, file: !6095, line: 210, column: 27)
!6586 = !DILocalVariable(name: "old_size", scope: !6587, file: !6095, line: 222, type: !9, align: 8)
!6587 = distinct !DILexicalBlock(scope: !6564, file: !6095, line: 222, column: 13)
!6588 = !DILocalVariable(name: "new_ptr", scope: !6589, file: !6095, line: 223, type: !5514, align: 8)
!6589 = distinct !DILexicalBlock(scope: !6587, file: !6095, line: 223, column: 17)
!6590 = !DILocalVariable(name: "residual", scope: !6591, file: !6095, line: 223, type: !6213, align: 1)
!6591 = distinct !DILexicalBlock(scope: !6587, file: !6095, line: 223, column: 66)
!6592 = !DILocalVariable(name: "val", scope: !6593, file: !6095, line: 223, type: !5514, align: 8)
!6593 = distinct !DILexicalBlock(scope: !6587, file: !6095, line: 223, column: 31)
!6594 = !DILocation(line: 187, column: 9, scope: !6564)
!6595 = !DILocation(line: 188, column: 9, scope: !6564)
!6596 = !DILocation(line: 189, column: 9, scope: !6564)
!6597 = !DILocation(line: 190, column: 9, scope: !6564)
!6598 = !DILocation(line: 191, column: 9, scope: !6564)
!6599 = !DILocalVariable(name: "layout", scope: !6600, file: !6095, line: 209, type: !2182, align: 8)
!6600 = distinct !DISubprogram(name: "realloc", linkageName: "_ZN5alloc5alloc7realloc17h042c47182fb92774E", scope: !62, file: !6095, line: 131, type: !6601, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6603)
!6601 = !DISubroutineType(types: !6602)
!6602 = !{!289, !289, !2182, !9}
!6603 = !{!6604, !6599, !6605}
!6604 = !DILocalVariable(name: "ptr", scope: !6600, file: !6095, line: 209, type: !289, align: 8)
!6605 = !DILocalVariable(name: "new_size", scope: !6600, file: !6095, line: 209, type: !9, align: 8)
!6606 = !DILocation(line: 209, column: 31, scope: !6600, inlinedAt: !6607)
!6607 = !DILocation(line: 209, column: 31, scope: !6577)
!6608 = !DILocalVariable(name: "self", scope: !6609, file: !6095, line: 210, type: !6274, align: 8)
!6609 = !DILexicalBlockFile(scope: !6610, file: !6095, discriminator: 0)
!6610 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h95a08431af53734cE", scope: !3016, file: !2357, line: 2117, type: !6256, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !6282, retainedNodes: !6611)
!6611 = !{!6608, !6612, !6615}
!6612 = !DILocalVariable(name: "v", scope: !6613, file: !6095, line: 210, type: !48, align: 8)
!6613 = !DILexicalBlockFile(scope: !6614, file: !6095, discriminator: 0)
!6614 = distinct !DILexicalBlock(scope: !6610, file: !2357, line: 2119, column: 13)
!6615 = !DILocalVariable(name: "e", scope: !6616, file: !6095, line: 210, type: !5520, align: 1)
!6616 = !DILexicalBlockFile(scope: !6617, file: !6095, discriminator: 0)
!6617 = distinct !DILexicalBlock(scope: !6610, file: !2357, line: 2120, column: 13)
!6618 = !DILocation(line: 210, column: 27, scope: !6609, inlinedAt: !6619)
!6619 = !DILocation(line: 210, column: 27, scope: !6579)
!6620 = !DILocalVariable(name: "self", scope: !6621, file: !6095, line: 210, type: !6301, align: 8)
!6621 = !DILexicalBlockFile(scope: !6622, file: !6095, discriminator: 0)
!6622 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h6ddc34e536d349d4E", scope: !6301, file: !1137, line: 1051, type: !6313, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !6282, retainedNodes: !6623)
!6623 = !{!6620, !6624, !6625}
!6624 = !DILocalVariable(name: "err", scope: !6621, file: !6095, line: 210, type: !5520, align: 1)
!6625 = !DILocalVariable(name: "v", scope: !6626, file: !6095, line: 210, type: !48, align: 8)
!6626 = !DILexicalBlockFile(scope: !6627, file: !6095, discriminator: 0)
!6627 = distinct !DILexicalBlock(scope: !6622, file: !1137, line: 1056, column: 13)
!6628 = !DILocation(line: 210, column: 27, scope: !6621, inlinedAt: !6619)
!6629 = !DILocation(line: 210, column: 66, scope: !6583)
!6630 = !DILocalVariable(name: "residual", scope: !6631, file: !6095, line: 210, type: !6213, align: 1)
!6631 = !DILexicalBlockFile(scope: !6632, file: !6095, discriminator: 0)
!6632 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc2393e7b735b05edE", scope: !2358, file: !2357, line: 2132, type: !6325, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !6331, retainedNodes: !6633)
!6633 = !{!6630, !6634}
!6634 = !DILocalVariable(name: "e", scope: !6635, file: !6095, line: 210, type: !5520, align: 1)
!6635 = !DILexicalBlockFile(scope: !6636, file: !6095, discriminator: 0)
!6636 = distinct !DILexicalBlock(scope: !6632, file: !2357, line: 2134, column: 13)
!6637 = !DILocation(line: 210, column: 27, scope: !6631, inlinedAt: !6638)
!6638 = !DILocation(line: 210, column: 27, scope: !6583)
!6639 = !DILocalVariable(name: "self", scope: !6640, file: !6095, line: 223, type: !5506, align: 8)
!6640 = !DILexicalBlockFile(scope: !6641, file: !6095, discriminator: 0)
!6641 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h28830cdac36a4ec6E", scope: !3016, file: !2357, line: 2117, type: !6642, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5517, retainedNodes: !6659)
!6642 = !DISubroutineType(types: !6643)
!6643 = !{!6644, !5506}
!6644 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>", scope: !3020, file: !2, size: 128, align: 64, elements: !6645, templateParams: !27, identifier: "742106b60153cc66c591376c04358a32")
!6645 = !{!6646}
!6646 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6644, file: !2, size: 128, align: 64, elements: !6647, templateParams: !27, identifier: "51e560db12d8945267902f7758889ab2", discriminator: !6658)
!6647 = !{!6648, !6654}
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !6646, file: !2, baseType: !6649, size: 128, align: 64)
!6649 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !6644, file: !2, size: 128, align: 64, elements: !6650, templateParams: !6652, identifier: "7a7db6f08dd8181ffbc0406581832086")
!6650 = !{!6651}
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6649, file: !2, baseType: !5514, size: 128, align: 64)
!6652 = !{!6267, !6653}
!6653 = !DITemplateTypeParameter(name: "C", type: !5514)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !6646, file: !2, baseType: !6655, size: 128, align: 64, extraData: i64 0)
!6655 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !6644, file: !2, size: 128, align: 64, elements: !6656, templateParams: !6652, identifier: "520e4a70aaf12c465e959335c5fb5ede")
!6656 = !{!6657}
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6655, file: !2, baseType: !6213, align: 8)
!6658 = !DIDerivedType(tag: DW_TAG_member, scope: !6644, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!6659 = !{!6639, !6660, !6663}
!6660 = !DILocalVariable(name: "v", scope: !6661, file: !6095, line: 223, type: !5514, align: 8)
!6661 = !DILexicalBlockFile(scope: !6662, file: !6095, discriminator: 0)
!6662 = distinct !DILexicalBlock(scope: !6641, file: !2357, line: 2119, column: 13)
!6663 = !DILocalVariable(name: "e", scope: !6664, file: !6095, line: 223, type: !5520, align: 1)
!6664 = !DILexicalBlockFile(scope: !6665, file: !6095, discriminator: 0)
!6665 = distinct !DILexicalBlock(scope: !6641, file: !2357, line: 2120, column: 13)
!6666 = !DILocation(line: 223, column: 31, scope: !6640, inlinedAt: !6667)
!6667 = !DILocation(line: 223, column: 31, scope: !6587)
!6668 = !DILocation(line: 223, column: 66, scope: !6591)
!6669 = !DILocalVariable(name: "residual", scope: !6670, file: !6095, line: 223, type: !6213, align: 1)
!6670 = !DILexicalBlockFile(scope: !6671, file: !6095, discriminator: 0)
!6671 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc2393e7b735b05edE", scope: !2358, file: !2357, line: 2132, type: !6325, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !6331, retainedNodes: !6672)
!6672 = !{!6669, !6673}
!6673 = !DILocalVariable(name: "e", scope: !6674, file: !6095, line: 223, type: !5520, align: 1)
!6674 = !DILexicalBlockFile(scope: !6675, file: !6095, discriminator: 0)
!6675 = distinct !DILexicalBlock(scope: !6671, file: !2357, line: 2134, column: 13)
!6676 = !DILocation(line: 223, column: 31, scope: !6670, inlinedAt: !6677)
!6677 = !DILocation(line: 223, column: 31, scope: !6591)
!6678 = !DILocalVariable(name: "self", scope: !6679, file: !6095, line: 203, type: !6339, align: 8)
!6679 = !DILexicalBlockFile(scope: !6680, file: !6095, discriminator: 0)
!6680 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h927976e8eacb929eE", scope: !6339, file: !6338, line: 82, type: !6342, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6681)
!6681 = !{!6678}
!6682 = !DILocation(line: 203, column: 25, scope: !6679, inlinedAt: !6683)
!6683 = !DILocation(line: 131, column: 9, scope: !6684, inlinedAt: !6688)
!6684 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h7ebff2317e765fc5E", scope: !2182, file: !6127, line: 130, type: !6348, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6685)
!6685 = !{!6686}
!6686 = !DILocalVariable(name: "self", scope: !6687, file: !6095, line: 203, type: !5547, align: 8)
!6687 = !DILexicalBlockFile(scope: !6684, file: !6095, discriminator: 0)
!6688 = !DILocation(line: 203, column: 25, scope: !6564)
!6689 = !DILocalVariable(name: "self", scope: !6690, file: !6095, line: 203, type: !2188, align: 8)
!6690 = !DILexicalBlockFile(scope: !6691, file: !6095, discriminator: 0)
!6691 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h2c6ab0fa33443001E", scope: !2188, file: !6138, line: 39, type: !6364, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6692)
!6692 = !{!6689}
!6693 = !DILocation(line: 203, column: 25, scope: !6690, inlinedAt: !6683)
!6694 = !DILocalVariable(name: "self", scope: !6695, file: !6095, line: 203, type: !6339, align: 8)
!6695 = !DILexicalBlockFile(scope: !6696, file: !6095, discriminator: 0)
!6696 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h927976e8eacb929eE", scope: !6339, file: !6338, line: 82, type: !6342, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6697)
!6697 = !{!6694}
!6698 = !DILocation(line: 203, column: 47, scope: !6695, inlinedAt: !6699)
!6699 = !DILocation(line: 131, column: 9, scope: !6700, inlinedAt: !6704)
!6700 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h7ebff2317e765fc5E", scope: !2182, file: !6127, line: 130, type: !6348, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6701)
!6701 = !{!6702}
!6702 = !DILocalVariable(name: "self", scope: !6703, file: !6095, line: 203, type: !5547, align: 8)
!6703 = !DILexicalBlockFile(scope: !6700, file: !6095, discriminator: 0)
!6704 = !DILocation(line: 203, column: 47, scope: !6564)
!6705 = !DILocalVariable(name: "self", scope: !6706, file: !6095, line: 203, type: !2188, align: 8)
!6706 = !DILexicalBlockFile(scope: !6707, file: !6095, discriminator: 0)
!6707 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h2c6ab0fa33443001E", scope: !2188, file: !6138, line: 39, type: !6364, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6708)
!6708 = !{!6705}
!6709 = !DILocation(line: 203, column: 47, scope: !6706, inlinedAt: !6699)
!6710 = !DILocalVariable(name: "self", scope: !6711, file: !6095, line: 209, type: !6339, align: 8)
!6711 = !DILexicalBlockFile(scope: !6712, file: !6095, discriminator: 0)
!6712 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h927976e8eacb929eE", scope: !6339, file: !6338, line: 82, type: !6342, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6713)
!6713 = !{!6710}
!6714 = !DILocation(line: 209, column: 31, scope: !6711, inlinedAt: !6715)
!6715 = !DILocation(line: 131, column: 9, scope: !6716, inlinedAt: !6720)
!6716 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h7ebff2317e765fc5E", scope: !2182, file: !6127, line: 130, type: !6348, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6717)
!6717 = !{!6718}
!6718 = !DILocalVariable(name: "self", scope: !6719, file: !6095, line: 209, type: !5547, align: 8)
!6719 = !DILexicalBlockFile(scope: !6716, file: !6095, discriminator: 0)
!6720 = !DILocation(line: 132, column: 49, scope: !6600, inlinedAt: !6607)
!6721 = !DILocalVariable(name: "self", scope: !6722, file: !6095, line: 209, type: !2188, align: 8)
!6722 = !DILexicalBlockFile(scope: !6723, file: !6095, discriminator: 0)
!6723 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h2c6ab0fa33443001E", scope: !2188, file: !6138, line: 39, type: !6364, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6724)
!6724 = !{!6721}
!6725 = !DILocation(line: 209, column: 31, scope: !6722, inlinedAt: !6715)
!6726 = !DILocation(line: 210, column: 27, scope: !6616, inlinedAt: !6619)
!6727 = !DILocation(line: 210, column: 27, scope: !6635, inlinedAt: !6638)
!6728 = !DILocation(line: 223, column: 31, scope: !6664, inlinedAt: !6667)
!6729 = !DILocation(line: 223, column: 31, scope: !6674, inlinedAt: !6677)
!6730 = !DILocalVariable(name: "self", scope: !6731, file: !6095, line: 224, type: !48, align: 8)
!6731 = !DILexicalBlockFile(scope: !6732, file: !6095, discriminator: 0)
!6732 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he85ce89b0e21db75E", scope: !48, file: !2484, line: 330, type: !6111, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6733)
!6733 = !{!6730}
!6734 = !DILocation(line: 224, column: 56, scope: !6731, inlinedAt: !6735)
!6735 = !DILocation(line: 553, column: 9, scope: !6736, inlinedAt: !6740)
!6736 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h7d4d907f970324d3E", scope: !5514, file: !2484, line: 552, type: !6117, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6737)
!6737 = !{!6738}
!6738 = !DILocalVariable(name: "self", scope: !6739, file: !6095, line: 224, type: !5514, align: 8)
!6739 = !DILexicalBlockFile(scope: !6736, file: !6095, discriminator: 0)
!6740 = !DILocation(line: 224, column: 56, scope: !6589)
!6741 = !DILocalVariable(name: "runtime", scope: !6742, file: !6095, line: 224, type: !1355, align: 8)
!6742 = !DILexicalBlockFile(scope: !6743, file: !6095, discriminator: 0)
!6743 = distinct !DILexicalBlock(scope: !6744, file: !549, line: 2336, column: 13)
!6744 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17ha3d50afd39c4aa62E", scope: !1347, file: !549, line: 2458, type: !1348, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6745)
!6745 = !{!6746, !6748, !6749, !6741}
!6746 = !DILocalVariable(name: "src", scope: !6747, file: !6095, line: 224, type: !52, align: 8)
!6747 = !DILexicalBlockFile(scope: !6744, file: !6095, discriminator: 0)
!6748 = !DILocalVariable(name: "dst", scope: !6747, file: !6095, line: 224, type: !289, align: 8)
!6749 = !DILocalVariable(name: "count", scope: !6747, file: !6095, line: 224, type: !9, align: 8)
!6750 = !DILocation(line: 224, column: 17, scope: !6742, inlinedAt: !6751)
!6751 = !DILocation(line: 224, column: 17, scope: !6589)
!6752 = !DILocation(line: 198, column: 15, scope: !6564)
!6753 = !DILocalVariable(name: "self", scope: !6754, file: !6095, line: 198, type: !5547, align: 8)
!6754 = !DILexicalBlockFile(scope: !6755, file: !6095, discriminator: 0)
!6755 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hb122e82487c9b5ecE", scope: !2182, file: !6127, line: 120, type: !6348, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6756)
!6756 = !{!6753}
!6757 = !DILocation(line: 198, column: 15, scope: !6754, inlinedAt: !6752)
!6758 = !DILocation(line: 198, column: 9, scope: !6564)
!6759 = !DILocation(line: 199, column: 34, scope: !6564)
!6760 = !DILocation(line: 199, column: 18, scope: !6564)
!6761 = !DILocation(line: 203, column: 25, scope: !6687, inlinedAt: !6688)
!6762 = !DILocalVariable(name: "n", scope: !6763, file: !6095, line: 203, type: !9, align: 8)
!6763 = !DILexicalBlockFile(scope: !6764, file: !6095, discriminator: 0)
!6764 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17haa5ebe932de09af5E", scope: !6339, file: !6338, line: 56, type: !6414, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6765)
!6765 = !{!6762, !6766}
!6766 = !DILocalVariable(name: "runtime", scope: !6767, file: !6095, line: 203, type: !6420, align: 8)
!6767 = !DILexicalBlockFile(scope: !6768, file: !6095, discriminator: 0)
!6768 = distinct !DILexicalBlock(scope: !6764, file: !549, line: 2336, column: 13)
!6769 = !DILocation(line: 203, column: 25, scope: !6763, inlinedAt: !6770)
!6770 = !DILocation(line: 41, column: 18, scope: !6691, inlinedAt: !6683)
!6771 = !DILocation(line: 203, column: 47, scope: !6703, inlinedAt: !6704)
!6772 = !DILocalVariable(name: "n", scope: !6773, file: !6095, line: 203, type: !9, align: 8)
!6773 = !DILexicalBlockFile(scope: !6774, file: !6095, discriminator: 0)
!6774 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17haa5ebe932de09af5E", scope: !6339, file: !6338, line: 56, type: !6414, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6775)
!6775 = !{!6772, !6776}
!6776 = !DILocalVariable(name: "runtime", scope: !6777, file: !6095, line: 203, type: !6420, align: 8)
!6777 = !DILexicalBlockFile(scope: !6778, file: !6095, discriminator: 0)
!6778 = distinct !DILexicalBlock(scope: !6774, file: !549, line: 2336, column: 13)
!6779 = !DILocation(line: 203, column: 47, scope: !6773, inlinedAt: !6780)
!6780 = !DILocation(line: 41, column: 18, scope: !6707, inlinedAt: !6699)
!6781 = !DILocation(line: 222, column: 13, scope: !6564)
!6782 = !DILocation(line: 222, column: 13, scope: !6587)
!6783 = !DILocation(line: 223, column: 47, scope: !6587)
!6784 = !DILocation(line: 203, column: 13, scope: !6564)
!6785 = !DILocation(line: 203, column: 13, scope: !6574)
!6786 = !DILocation(line: 204, column: 32, scope: !6574)
!6787 = !DILocalVariable(name: "self", scope: !6788, file: !6095, line: 204, type: !5547, align: 8)
!6788 = !DILexicalBlockFile(scope: !6789, file: !6095, discriminator: 0)
!6789 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hb122e82487c9b5ecE", scope: !2182, file: !6127, line: 120, type: !6348, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6790)
!6790 = !{!6787}
!6791 = !DILocation(line: 204, column: 32, scope: !6788, inlinedAt: !6786)
!6792 = !DILocation(line: 204, column: 21, scope: !6577)
!6793 = !DILocation(line: 207, column: 48, scope: !6577)
!6794 = !DILocalVariable(name: "self", scope: !6795, file: !6095, line: 207, type: !5547, align: 8)
!6795 = !DILexicalBlockFile(scope: !6796, file: !6095, discriminator: 0)
!6796 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hb122e82487c9b5ecE", scope: !2182, file: !6127, line: 120, type: !6348, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6797)
!6797 = !{!6794}
!6798 = !DILocation(line: 207, column: 48, scope: !6795, inlinedAt: !6793)
!6799 = !DILocation(line: 207, column: 36, scope: !6577)
!6800 = !DILocation(line: 207, column: 17, scope: !6577)
!6801 = !DILocation(line: 209, column: 39, scope: !6577)
!6802 = !DILocalVariable(name: "self", scope: !6803, file: !6095, line: 209, type: !48, align: 8)
!6803 = !DILexicalBlockFile(scope: !6804, file: !6095, discriminator: 0)
!6804 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he85ce89b0e21db75E", scope: !48, file: !2484, line: 330, type: !6111, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6805)
!6805 = !{!6802}
!6806 = !DILocation(line: 209, column: 39, scope: !6803, inlinedAt: !6801)
!6807 = !DILocation(line: 209, column: 53, scope: !6577)
!6808 = !DILocation(line: 209, column: 65, scope: !6577)
!6809 = !DILocalVariable(name: "self", scope: !6810, file: !6095, line: 209, type: !5547, align: 8)
!6810 = !DILexicalBlockFile(scope: !6811, file: !6095, discriminator: 0)
!6811 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hb122e82487c9b5ecE", scope: !2182, file: !6127, line: 120, type: !6348, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6812)
!6812 = !{!6809}
!6813 = !DILocation(line: 209, column: 31, scope: !6810, inlinedAt: !6814)
!6814 = !DILocation(line: 132, column: 34, scope: !6600, inlinedAt: !6607)
!6815 = !DILocation(line: 209, column: 31, scope: !6719, inlinedAt: !6720)
!6816 = !DILocalVariable(name: "n", scope: !6817, file: !6095, line: 209, type: !9, align: 8)
!6817 = !DILexicalBlockFile(scope: !6818, file: !6095, discriminator: 0)
!6818 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17haa5ebe932de09af5E", scope: !6339, file: !6338, line: 56, type: !6414, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !6819)
!6819 = !{!6816, !6820}
!6820 = !DILocalVariable(name: "runtime", scope: !6821, file: !6095, line: 209, type: !6420, align: 8)
!6821 = !DILexicalBlockFile(scope: !6822, file: !6095, discriminator: 0)
!6822 = distinct !DILexicalBlock(scope: !6818, file: !549, line: 2336, column: 13)
!6823 = !DILocation(line: 209, column: 31, scope: !6817, inlinedAt: !6824)
!6824 = !DILocation(line: 41, column: 18, scope: !6723, inlinedAt: !6715)
!6825 = !DILocation(line: 209, column: 21, scope: !6579)
!6826 = !DILocation(line: 210, column: 27, scope: !6626, inlinedAt: !6619)
!6827 = !DILocation(line: 210, column: 27, scope: !6613, inlinedAt: !6619)
!6828 = !DILocation(line: 210, column: 27, scope: !6585)
!6829 = !DILocation(line: 210, column: 21, scope: !6581)
!6830 = !DILocation(line: 211, column: 20, scope: !6581)
!6831 = !DILocation(line: 1, column: 1, scope: !6832)
!6832 = !DILexicalBlockFile(scope: !6564, file: !6833, discriminator: 0)
!6833 = !DIFile(filename: "src/lib.rs", directory: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/f128_input-0.2.1", checksumkind: CSK_MD5, checksum: "8ea9df254d27f8f042c03ac34c952fd7")
!6834 = !DILocation(line: 229, column: 6, scope: !6564)
!6835 = !DILocation(line: 214, column: 50, scope: !6581)
!6836 = !DILocalVariable(name: "data", scope: !6837, file: !6095, line: 214, type: !48, align: 8)
!6837 = !DILexicalBlockFile(scope: !6838, file: !6095, discriminator: 0)
!6838 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17he0c29b4771e7cc99E", scope: !5514, file: !2484, line: 487, type: !6234, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6839)
!6839 = !{!6836, !6840}
!6840 = !DILocalVariable(name: "len", scope: !6837, file: !6095, line: 214, type: !9, align: 8)
!6841 = !DILocation(line: 214, column: 20, scope: !6837, inlinedAt: !6842)
!6842 = !DILocation(line: 214, column: 20, scope: !6581)
!6843 = !DILocation(line: 214, column: 55, scope: !6581)
!6844 = !DILocalVariable(name: "self", scope: !6845, file: !6095, line: 214, type: !48, align: 8)
!6845 = !DILexicalBlockFile(scope: !6846, file: !6095, discriminator: 0)
!6846 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he85ce89b0e21db75E", scope: !48, file: !2484, line: 330, type: !6111, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6847)
!6847 = !{!6844}
!6848 = !DILocation(line: 214, column: 20, scope: !6845, inlinedAt: !6849)
!6849 = !DILocation(line: 489, column: 70, scope: !6838, inlinedAt: !6842)
!6850 = !DILocalVariable(name: "data", scope: !6851, file: !6095, line: 214, type: !289, align: 8)
!6851 = !DILexicalBlockFile(scope: !6852, file: !6095, discriminator: 0)
!6852 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17ha3e4fadd5446249cE", scope: !45, file: !562, line: 727, type: !711, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6853)
!6853 = !{!6850, !6854}
!6854 = !DILocalVariable(name: "len", scope: !6851, file: !6095, line: 214, type: !9, align: 8)
!6855 = !DILocation(line: 214, column: 20, scope: !6851, inlinedAt: !6856)
!6856 = !DILocation(line: 489, column: 38, scope: !6838, inlinedAt: !6842)
!6857 = !DILocalVariable(name: "self", scope: !6858, file: !6095, line: 214, type: !289, align: 8)
!6858 = !DILexicalBlockFile(scope: !6859, file: !6095, discriminator: 0)
!6859 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hde28230253ee19baE", scope: !691, file: !681, line: 45, type: !721, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !582, retainedNodes: !6860)
!6860 = !{!6857}
!6861 = !DILocation(line: 214, column: 20, scope: !6858, inlinedAt: !6862)
!6862 = !DILocation(line: 728, column: 24, scope: !6852, inlinedAt: !6856)
!6863 = !DILocalVariable(name: "data_address", scope: !6864, file: !6095, line: 214, type: !329, align: 8)
!6864 = !DILexicalBlockFile(scope: !6865, file: !6095, discriminator: 0)
!6865 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h56bd1c6bd84c489bE", scope: !590, file: !589, line: 127, type: !729, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6866)
!6866 = !{!6863, !6867}
!6867 = !DILocalVariable(name: "metadata", scope: !6864, file: !6095, line: 214, type: !9, align: 8)
!6868 = !DILocation(line: 214, column: 20, scope: !6864, inlinedAt: !6869)
!6869 = !DILocation(line: 728, column: 5, scope: !6852, inlinedAt: !6856)
!6870 = !DILocalVariable(name: "ptr", scope: !6871, file: !6095, line: 214, type: !651, align: 8)
!6871 = !DILexicalBlockFile(scope: !6872, file: !6095, discriminator: 0)
!6872 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h0772a5553ed15ec1E", scope: !5514, file: !2484, line: 196, type: !6522, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6873)
!6873 = !{!6870}
!6874 = !DILocation(line: 214, column: 20, scope: !6871, inlinedAt: !6875)
!6875 = !DILocation(line: 489, column: 18, scope: !6838, inlinedAt: !6842)
!6876 = !DILocation(line: 214, column: 17, scope: !6581)
!6877 = !DILocation(line: 215, column: 13, scope: !6564)
!6878 = !DILocation(line: 212, column: 21, scope: !6581)
!6879 = !DILocalVariable(name: "self", scope: !6880, file: !6095, line: 212, type: !289, align: 8)
!6880 = !DILexicalBlockFile(scope: !6881, file: !6095, discriminator: 0)
!6881 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hce95b2f782375a87E", scope: !691, file: !681, line: 985, type: !692, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6882)
!6882 = !{!6879, !6883}
!6883 = !DILocalVariable(name: "count", scope: !6880, file: !6095, line: 212, type: !9, align: 8)
!6884 = !DILocation(line: 212, column: 21, scope: !6880, inlinedAt: !6878)
!6885 = !DILocation(line: 212, column: 33, scope: !6581)
!6886 = !DILocalVariable(name: "self", scope: !6887, file: !6095, line: 212, type: !289, align: 8)
!6887 = !DILexicalBlockFile(scope: !6888, file: !6095, discriminator: 0)
!6888 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h774ff863e67a55bdE", scope: !691, file: !681, line: 465, type: !701, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6889)
!6889 = !{!6886, !6890}
!6890 = !DILocalVariable(name: "count", scope: !6887, file: !6095, line: 212, type: !703, align: 8)
!6891 = !DILocation(line: 212, column: 21, scope: !6887, inlinedAt: !6892)
!6892 = !DILocation(line: 990, column: 18, scope: !6881, inlinedAt: !6878)
!6893 = !DILocalVariable(name: "self", scope: !6894, file: !6095, line: 212, type: !289, align: 8)
!6894 = !DILexicalBlockFile(scope: !6895, file: !6095, discriminator: 0)
!6895 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17h93940c8863ba9501E", scope: !691, file: !681, line: 1441, type: !6896, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6898)
!6896 = !DISubroutineType(types: !6897)
!6897 = !{null, !289, !53, !9}
!6898 = !{!6893, !6899, !6900}
!6899 = !DILocalVariable(name: "val", scope: !6894, file: !6095, line: 212, type: !53, align: 1)
!6900 = !DILocalVariable(name: "count", scope: !6894, file: !6095, line: 212, type: !9, align: 8)
!6901 = !DILocation(line: 212, column: 21, scope: !6894, inlinedAt: !6878)
!6902 = !DILocation(line: 212, column: 58, scope: !6581)
!6903 = !DILocalVariable(name: "dst", scope: !6904, file: !6095, line: 212, type: !289, align: 8)
!6904 = !DILexicalBlockFile(scope: !6905, file: !6095, discriminator: 0)
!6905 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core10intrinsics11write_bytes17hedfede3e1aed0b01E", scope: !1347, file: !549, line: 2613, type: !6896, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6906)
!6906 = !{!6903, !6907, !6908, !6909}
!6907 = !DILocalVariable(name: "val", scope: !6904, file: !6095, line: 212, type: !53, align: 1)
!6908 = !DILocalVariable(name: "count", scope: !6904, file: !6095, line: 212, type: !9, align: 8)
!6909 = !DILocalVariable(name: "runtime", scope: !6910, file: !6095, line: 212, type: !6912, align: 8)
!6910 = !DILexicalBlockFile(scope: !6911, file: !6095, discriminator: 0)
!6911 = distinct !DILexicalBlock(scope: !6905, file: !549, line: 2336, column: 13)
!6912 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !6913, file: !2, size: 64, align: 64, elements: !6914, templateParams: !27, identifier: "6002da543977e8e7318dc1c6e6a51af")
!6913 = !DINamespace(name: "write_bytes", scope: !1347)
!6914 = !{!6915}
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__dst", scope: !6912, file: !2, baseType: !1360, size: 64, align: 64)
!6916 = !DILocation(line: 212, column: 21, scope: !6904, inlinedAt: !6917)
!6917 = !DILocation(line: 1446, column: 18, scope: !6895, inlinedAt: !6878)
!6918 = !DILocation(line: 211, column: 17, scope: !6581)
!6919 = !DILocation(line: 223, column: 31, scope: !6661, inlinedAt: !6667)
!6920 = !DILocation(line: 223, column: 31, scope: !6593)
!6921 = !DILocation(line: 223, column: 21, scope: !6589)
!6922 = !DILocation(line: 224, column: 42, scope: !6589)
!6923 = !DILocalVariable(name: "self", scope: !6924, file: !6095, line: 224, type: !48, align: 8)
!6924 = !DILexicalBlockFile(scope: !6925, file: !6095, discriminator: 0)
!6925 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he85ce89b0e21db75E", scope: !48, file: !2484, line: 330, type: !6111, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6926)
!6926 = !{!6923}
!6927 = !DILocation(line: 224, column: 42, scope: !6924, inlinedAt: !6922)
!6928 = !DILocation(line: 224, column: 17, scope: !6747, inlinedAt: !6751)
!6929 = !DILocation(line: 224, column: 56, scope: !6739, inlinedAt: !6740)
!6930 = !DILocalVariable(name: "self", scope: !6931, file: !6095, line: 224, type: !5514, align: 8)
!6931 = !DILexicalBlockFile(scope: !6932, file: !6095, discriminator: 0)
!6932 = distinct !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h772ff93423a83c15E", scope: !5514, file: !2484, line: 532, type: !6170, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6933)
!6933 = !{!6930}
!6934 = !DILocation(line: 224, column: 56, scope: !6931, inlinedAt: !6735)
!6935 = !DILocalVariable(name: "self", scope: !6936, file: !6095, line: 224, type: !5514, align: 8)
!6936 = !DILexicalBlockFile(scope: !6937, file: !6095, discriminator: 0)
!6937 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h85f1687421c7872aE", scope: !5514, file: !2484, line: 330, type: !6177, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6938)
!6938 = !{!6935}
!6939 = !DILocation(line: 224, column: 56, scope: !6936, inlinedAt: !6940)
!6940 = !DILocation(line: 534, column: 41, scope: !6932, inlinedAt: !6735)
!6941 = !DILocalVariable(name: "self", scope: !6942, file: !6095, line: 224, type: !651, align: 8)
!6942 = !DILexicalBlockFile(scope: !6943, file: !6095, discriminator: 0)
!6943 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7fd536a97e153cfbE", scope: !682, file: !681, line: 1778, type: !684, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6944)
!6944 = !{!6941}
!6945 = !DILocation(line: 224, column: 56, scope: !6942, inlinedAt: !6940)
!6946 = !DILocalVariable(name: "ptr", scope: !6947, file: !6095, line: 224, type: !289, align: 8)
!6947 = !DILexicalBlockFile(scope: !6948, file: !6095, discriminator: 0)
!6948 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h834e2f92abdb0d2bE", scope: !48, file: !2484, line: 196, type: !6190, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6949)
!6949 = !{!6946}
!6950 = !DILocation(line: 224, column: 56, scope: !6947, inlinedAt: !6951)
!6951 = !DILocation(line: 534, column: 18, scope: !6932, inlinedAt: !6735)
!6952 = !DILocation(line: 224, column: 78, scope: !6589)
!6953 = !DILocation(line: 225, column: 38, scope: !6589)
!6954 = !DILocation(line: 225, column: 17, scope: !6589)
!6955 = !DILocation(line: 226, column: 17, scope: !6589)
!6956 = !DILocation(line: 227, column: 13, scope: !6564)
!6957 = !DILocation(line: 199, column: 52, scope: !6564)
!6958 = distinct !DISubprogram(name: "box_free<(dyn std::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17hab31e7a1212a3b5dE", scope: !62, file: !6095, line: 340, type: !6959, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !6982, retainedNodes: !6973)
!6959 = !DISubroutineType(types: !6960)
!6960 = !{null, !6961, !61}
!6961 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", scope: !44, file: !2, size: 128, align: 64, elements: !6962, templateParams: !4815, identifier: "63fff1a9ae0f9cab44e4779ad80822b")
!6962 = !{!6963, !6971}
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !6961, file: !2, baseType: !6964, size: 128, align: 64)
!6964 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", scope: !49, file: !2, size: 128, align: 64, elements: !6965, templateParams: !4815, identifier: "95cfe13953bd00298c7689aed1482ec")
!6965 = !{!6966}
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !6964, file: !2, baseType: !6967, size: 128, align: 64)
!6967 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const (dyn std::error::Error + core::marker::Send + core::marker::Sync)", file: !2, size: 128, align: 64, elements: !6968, templateParams: !27, identifier: "21116f06b2f8717ed9296c860aef0d85")
!6968 = !{!6969, !6970}
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !6967, file: !2, baseType: !182, size: 64, align: 64)
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !6967, file: !2, baseType: !185, size: 64, align: 64, offset: 64)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !6961, file: !2, baseType: !6972, align: 8)
!6972 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", scope: !58, file: !2, align: 8, elements: !27, templateParams: !4815, identifier: "3639c19c90b91409f3c0ea8292b2817d")
!6973 = !{!6974, !6975, !6976, !6978, !6980}
!6974 = !DILocalVariable(name: "ptr", arg: 1, scope: !6958, file: !6095, line: 341, type: !6961)
!6975 = !DILocalVariable(name: "alloc", arg: 2, scope: !6958, file: !6095, line: 342, type: !61)
!6976 = !DILocalVariable(name: "size", scope: !6977, file: !6095, line: 345, type: !9, align: 8)
!6977 = distinct !DILexicalBlock(scope: !6958, file: !6095, line: 345, column: 9)
!6978 = !DILocalVariable(name: "align", scope: !6979, file: !6095, line: 346, type: !9, align: 8)
!6979 = distinct !DILexicalBlock(scope: !6977, file: !6095, line: 346, column: 9)
!6980 = !DILocalVariable(name: "layout", scope: !6981, file: !6095, line: 347, type: !2182, align: 8)
!6981 = distinct !DILexicalBlock(scope: !6979, file: !6095, line: 347, column: 9)
!6982 = !{!4816, !64}
!6983 = !DILocation(line: 341, column: 5, scope: !6958)
!6984 = !DILocation(line: 342, column: 5, scope: !6958)
!6985 = !DILocation(line: 347, column: 13, scope: !6981)
!6986 = !DILocalVariable(name: "unique", scope: !6987, file: !6095, line: 348, type: !43, align: 8)
!6987 = !DILexicalBlockFile(scope: !6988, file: !6095, discriminator: 0)
!6988 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17hd5d28fb461c84be2E", scope: !6989, file: !2484, line: 770, type: !6990, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !6992)
!6989 = !DINamespace(name: "{impl#16}", scope: !49)
!6990 = !DISubroutineType(types: !6991)
!6991 = !{!48, !43}
!6992 = !{!6986}
!6993 = !DILocation(line: 348, column: 26, scope: !6987, inlinedAt: !6994)
!6994 = !DILocation(line: 348, column: 26, scope: !6981)
!6995 = !DILocalVariable(name: "pointer", scope: !6996, file: !6095, line: 348, type: !48, align: 8)
!6996 = !DILexicalBlockFile(scope: !6997, file: !6095, discriminator: 0)
!6997 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h014fcd2ff25ff813E", scope: !6999, file: !6998, line: 190, type: !7000, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !7002)
!6998 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/unique.rs", directory: "", checksumkind: CSK_MD5, checksum: "acdefab5f14df6e5aef1141fd6b768c9")
!6999 = !DINamespace(name: "{impl#11}", scope: !44)
!7000 = !DISubroutineType(types: !7001)
!7001 = !{!43, !48}
!7002 = !{!6995}
!7003 = !DILocation(line: 348, column: 37, scope: !6996, inlinedAt: !7004)
!7004 = !DILocation(line: 137, column: 9, scope: !7005, inlinedAt: !7012)
!7005 = distinct !DISubprogram(name: "cast<(dyn std::error::Error + core::marker::Send + core::marker::Sync), u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h6fdd83a635d8ba9aE", scope: !6961, file: !6998, line: 136, type: !7006, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7011, retainedNodes: !7008)
!7006 = !DISubroutineType(types: !7007)
!7007 = !{!43, !6961}
!7008 = !{!7009}
!7009 = !DILocalVariable(name: "self", scope: !7010, file: !6095, line: 348, type: !6961, align: 8)
!7010 = !DILexicalBlockFile(scope: !7005, file: !6095, discriminator: 0)
!7011 = !{!4816, !2563}
!7012 = !DILocation(line: 348, column: 37, scope: !6981)
!7013 = !DILocation(line: 345, column: 32, scope: !6958)
!7014 = !DILocalVariable(name: "self", scope: !7015, file: !6095, line: 345, type: !7023, align: 8)
!7015 = !DILexicalBlockFile(scope: !7016, file: !6095, discriminator: 0)
!7016 = distinct !DISubprogram(name: "as_ref<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h8096b4218ddda913E", scope: !6961, file: !6998, line: 114, type: !7017, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4815, retainedNodes: !7024)
!7017 = !DISubroutineType(types: !7018)
!7018 = !{!7019, !7023}
!7019 = !DICompositeType(tag: DW_TAG_structure_type, name: "&(dyn std::error::Error + core::marker::Send + core::marker::Sync)", file: !2, size: 128, align: 64, elements: !7020, templateParams: !27, identifier: "acb9b04c18bec29a64f42cc13969440")
!7020 = !{!7021, !7022}
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !7019, file: !2, baseType: !182, size: 64, align: 64)
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !7019, file: !2, baseType: !185, size: 64, align: 64, offset: 64)
!7023 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", baseType: !6961, size: 64, align: 64, dwarfAddressSpace: 0)
!7024 = !{!7014}
!7025 = !DILocation(line: 345, column: 32, scope: !7015, inlinedAt: !7013)
!7026 = !DILocalVariable(name: "self", scope: !7027, file: !6095, line: 345, type: !7031, align: 8)
!7027 = !DILexicalBlockFile(scope: !7028, file: !6095, discriminator: 0)
!7028 = distinct !DISubprogram(name: "as_ref<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hdbad228cf9918544E", scope: !6964, file: !2484, line: 378, type: !7029, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4815, retainedNodes: !7032)
!7029 = !DISubroutineType(types: !7030)
!7030 = !{!7019, !7031}
!7031 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", baseType: !6964, size: 64, align: 64, dwarfAddressSpace: 0)
!7032 = !{!7026}
!7033 = !DILocation(line: 345, column: 32, scope: !7027, inlinedAt: !7034)
!7034 = !DILocation(line: 117, column: 18, scope: !7016, inlinedAt: !7013)
!7035 = !DILocalVariable(name: "self", scope: !7036, file: !6095, line: 345, type: !6964, align: 8)
!7036 = !DILexicalBlockFile(scope: !7037, file: !6095, discriminator: 0)
!7037 = distinct !DISubprogram(name: "as_ptr<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17haf87149d72805eb3E", scope: !6964, file: !2484, line: 330, type: !7038, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4815, retainedNodes: !7040)
!7038 = !DISubroutineType(types: !7039)
!7039 = !{!4809, !6964}
!7040 = !{!7035}
!7041 = !DILocation(line: 345, column: 32, scope: !7036, inlinedAt: !7042)
!7042 = !DILocation(line: 381, column: 20, scope: !7028, inlinedAt: !7034)
!7043 = !DILocation(line: 345, column: 20, scope: !6958)
!7044 = !{i64 1, i64 0}
!7045 = !DILocation(line: 345, column: 13, scope: !6977)
!7046 = !DILocation(line: 346, column: 38, scope: !6977)
!7047 = !DILocalVariable(name: "self", scope: !7048, file: !6095, line: 346, type: !7023, align: 8)
!7048 = !DILexicalBlockFile(scope: !7049, file: !6095, discriminator: 0)
!7049 = distinct !DISubprogram(name: "as_ref<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h8096b4218ddda913E", scope: !6961, file: !6998, line: 114, type: !7017, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4815, retainedNodes: !7050)
!7050 = !{!7047}
!7051 = !DILocation(line: 346, column: 38, scope: !7048, inlinedAt: !7046)
!7052 = !DILocalVariable(name: "self", scope: !7053, file: !6095, line: 346, type: !7031, align: 8)
!7053 = !DILexicalBlockFile(scope: !7054, file: !6095, discriminator: 0)
!7054 = distinct !DISubprogram(name: "as_ref<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hdbad228cf9918544E", scope: !6964, file: !2484, line: 378, type: !7029, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4815, retainedNodes: !7055)
!7055 = !{!7052}
!7056 = !DILocation(line: 346, column: 38, scope: !7053, inlinedAt: !7057)
!7057 = !DILocation(line: 117, column: 18, scope: !7049, inlinedAt: !7046)
!7058 = !DILocalVariable(name: "self", scope: !7059, file: !6095, line: 346, type: !6964, align: 8)
!7059 = !DILexicalBlockFile(scope: !7060, file: !6095, discriminator: 0)
!7060 = distinct !DISubprogram(name: "as_ptr<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17haf87149d72805eb3E", scope: !6964, file: !2484, line: 330, type: !7038, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4815, retainedNodes: !7061)
!7061 = !{!7058}
!7062 = !DILocation(line: 346, column: 38, scope: !7059, inlinedAt: !7063)
!7063 = !DILocation(line: 381, column: 20, scope: !7054, inlinedAt: !7057)
!7064 = !DILocation(line: 346, column: 21, scope: !6977)
!7065 = !DILocation(line: 346, column: 13, scope: !6979)
!7066 = !DILocation(line: 347, column: 56, scope: !6979)
!7067 = !DILocalVariable(name: "size", scope: !7068, file: !6095, line: 347, type: !9, align: 8)
!7068 = !DILexicalBlockFile(scope: !7069, file: !6095, discriminator: 0)
!7069 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hc32ed4c20a004031E", scope: !2182, file: !6127, line: 110, type: !6128, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7070)
!7070 = !{!7067, !7071}
!7071 = !DILocalVariable(name: "align", scope: !7068, file: !6095, line: 347, type: !9, align: 8)
!7072 = !DILocation(line: 347, column: 22, scope: !7068, inlinedAt: !7073)
!7073 = !DILocation(line: 347, column: 22, scope: !6979)
!7074 = !DILocation(line: 347, column: 62, scope: !6979)
!7075 = !DILocalVariable(name: "align", scope: !7076, file: !6095, line: 347, type: !9, align: 8)
!7076 = !DILexicalBlockFile(scope: !7077, file: !6095, discriminator: 0)
!7077 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h109247ecbc3664f8E", scope: !2188, file: !6138, line: 29, type: !6139, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7078)
!7078 = !{!7075, !7079}
!7079 = !DILocalVariable(name: "runtime", scope: !7080, file: !6095, line: 347, type: !6145, align: 8)
!7080 = !DILexicalBlockFile(scope: !7081, file: !6095, discriminator: 0)
!7081 = distinct !DILexicalBlock(scope: !7077, file: !549, line: 2336, column: 13)
!7082 = !DILocation(line: 347, column: 22, scope: !7076, inlinedAt: !7083)
!7083 = !DILocation(line: 112, column: 40, scope: !7069, inlinedAt: !7073)
!7084 = !DILocation(line: 348, column: 37, scope: !7010, inlinedAt: !7012)
!7085 = !DILocalVariable(name: "self", scope: !7086, file: !6095, line: 348, type: !6964, align: 8)
!7086 = !DILexicalBlockFile(scope: !7087, file: !6095, discriminator: 0)
!7087 = distinct !DISubprogram(name: "cast<(dyn std::error::Error + core::marker::Send + core::marker::Sync), u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h88e446bf06ee9601E", scope: !6964, file: !2484, line: 453, type: !7088, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7011, retainedNodes: !7090)
!7088 = !DISubroutineType(types: !7089)
!7089 = !{!48, !6964}
!7090 = !{!7085}
!7091 = !DILocation(line: 348, column: 37, scope: !7086, inlinedAt: !7092)
!7092 = !DILocation(line: 137, column: 22, scope: !7005, inlinedAt: !7012)
!7093 = !DILocalVariable(name: "self", scope: !7094, file: !6095, line: 348, type: !6964, align: 8)
!7094 = !DILexicalBlockFile(scope: !7095, file: !6095, discriminator: 0)
!7095 = distinct !DISubprogram(name: "as_ptr<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17haf87149d72805eb3E", scope: !6964, file: !2484, line: 330, type: !7038, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4815, retainedNodes: !7096)
!7096 = !{!7093}
!7097 = !DILocation(line: 348, column: 37, scope: !7094, inlinedAt: !7098)
!7098 = !DILocation(line: 455, column: 41, scope: !7087, inlinedAt: !7092)
!7099 = !DILocalVariable(name: "ptr", scope: !7100, file: !6095, line: 348, type: !289, align: 8)
!7100 = !DILexicalBlockFile(scope: !7101, file: !6095, discriminator: 0)
!7101 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h834e2f92abdb0d2bE", scope: !48, file: !2484, line: 196, type: !6190, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !7102)
!7102 = !{!7099}
!7103 = !DILocation(line: 348, column: 37, scope: !7100, inlinedAt: !7104)
!7104 = !DILocation(line: 455, column: 18, scope: !7087, inlinedAt: !7092)
!7105 = !DILocalVariable(name: "self", scope: !7106, file: !6095, line: 348, type: !43, align: 8)
!7106 = !DILexicalBlockFile(scope: !7107, file: !6095, discriminator: 0)
!7107 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf0c3ca0c0a8512cfE", scope: !43, file: !6998, line: 103, type: !7108, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !7110)
!7108 = !DISubroutineType(types: !7109)
!7109 = !{!289, !43}
!7110 = !{!7105}
!7111 = !DILocation(line: 348, column: 26, scope: !7106, inlinedAt: !7112)
!7112 = !DILocation(line: 773, column: 41, scope: !6988, inlinedAt: !6994)
!7113 = !DILocalVariable(name: "self", scope: !7114, file: !6095, line: 348, type: !48, align: 8)
!7114 = !DILexicalBlockFile(scope: !7115, file: !6095, discriminator: 0)
!7115 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he85ce89b0e21db75E", scope: !48, file: !2484, line: 330, type: !6111, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !7116)
!7116 = !{!7113}
!7117 = !DILocation(line: 348, column: 26, scope: !7114, inlinedAt: !7118)
!7118 = !DILocation(line: 104, column: 9, scope: !7107, inlinedAt: !7112)
!7119 = !DILocalVariable(name: "ptr", scope: !7120, file: !6095, line: 348, type: !289, align: 8)
!7120 = !DILexicalBlockFile(scope: !7121, file: !6095, discriminator: 0)
!7121 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h834e2f92abdb0d2bE", scope: !48, file: !2484, line: 196, type: !6190, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !7122)
!7122 = !{!7119}
!7123 = !DILocation(line: 348, column: 26, scope: !7120, inlinedAt: !7124)
!7124 = !DILocation(line: 773, column: 18, scope: !6988, inlinedAt: !6994)
!7125 = !DILocation(line: 348, column: 50, scope: !6981)
!7126 = !DILocation(line: 348, column: 9, scope: !6981)
!7127 = !DILocation(line: 350, column: 1, scope: !6958)
!7128 = !DILocation(line: 340, column: 1, scope: !6958)
!7129 = !DILocation(line: 350, column: 2, scope: !6958)
!7130 = distinct !DISubprogram(name: "box_free<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17hc2dac458e5db55ffE", scope: !62, file: !6095, line: 340, type: !7131, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7154, retainedNodes: !7145)
!7131 = !DISubroutineType(types: !7132)
!7132 = !{null, !7133, !61}
!7133 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<(dyn core::any::Any + core::marker::Send)>", scope: !44, file: !2, size: 128, align: 64, elements: !7134, templateParams: !4740, identifier: "d5bf4cea644a703366ddd9c587d0eed7")
!7134 = !{!7135, !7143}
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !7133, file: !2, baseType: !7136, size: 128, align: 64)
!7136 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<(dyn core::any::Any + core::marker::Send)>", scope: !49, file: !2, size: 128, align: 64, elements: !7137, templateParams: !4740, identifier: "1473389a7f21e9adf89c306872b2243")
!7137 = !{!7138}
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !7136, file: !2, baseType: !7139, size: 128, align: 64)
!7139 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const (dyn core::any::Any + core::marker::Send)", file: !2, size: 128, align: 64, elements: !7140, templateParams: !27, identifier: "2fc2519c89599ea6a74664ccb7671789")
!7140 = !{!7141, !7142}
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !7139, file: !2, baseType: !2925, size: 64, align: 64)
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !7139, file: !2, baseType: !185, size: 64, align: 64, offset: 64)
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !7133, file: !2, baseType: !7144, align: 8)
!7144 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<(dyn core::any::Any + core::marker::Send)>", scope: !58, file: !2, align: 8, elements: !27, templateParams: !4740, identifier: "8c372e2356275a3d79ab89d80166510a")
!7145 = !{!7146, !7147, !7148, !7150, !7152}
!7146 = !DILocalVariable(name: "ptr", arg: 1, scope: !7130, file: !6095, line: 341, type: !7133)
!7147 = !DILocalVariable(name: "alloc", arg: 2, scope: !7130, file: !6095, line: 342, type: !61)
!7148 = !DILocalVariable(name: "size", scope: !7149, file: !6095, line: 345, type: !9, align: 8)
!7149 = distinct !DILexicalBlock(scope: !7130, file: !6095, line: 345, column: 9)
!7150 = !DILocalVariable(name: "align", scope: !7151, file: !6095, line: 346, type: !9, align: 8)
!7151 = distinct !DILexicalBlock(scope: !7149, file: !6095, line: 346, column: 9)
!7152 = !DILocalVariable(name: "layout", scope: !7153, file: !6095, line: 347, type: !2182, align: 8)
!7153 = distinct !DILexicalBlock(scope: !7151, file: !6095, line: 347, column: 9)
!7154 = !{!4741, !64}
!7155 = !DILocation(line: 341, column: 5, scope: !7130)
!7156 = !DILocation(line: 342, column: 5, scope: !7130)
!7157 = !DILocation(line: 347, column: 13, scope: !7153)
!7158 = !DILocalVariable(name: "unique", scope: !7159, file: !6095, line: 348, type: !43, align: 8)
!7159 = !DILexicalBlockFile(scope: !7160, file: !6095, discriminator: 0)
!7160 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17hd5d28fb461c84be2E", scope: !6989, file: !2484, line: 770, type: !6990, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !7161)
!7161 = !{!7158}
!7162 = !DILocation(line: 348, column: 26, scope: !7159, inlinedAt: !7163)
!7163 = !DILocation(line: 348, column: 26, scope: !7153)
!7164 = !DILocalVariable(name: "pointer", scope: !7165, file: !6095, line: 348, type: !48, align: 8)
!7165 = !DILexicalBlockFile(scope: !7166, file: !6095, discriminator: 0)
!7166 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h014fcd2ff25ff813E", scope: !6999, file: !6998, line: 190, type: !7000, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !7167)
!7167 = !{!7164}
!7168 = !DILocation(line: 348, column: 37, scope: !7165, inlinedAt: !7169)
!7169 = !DILocation(line: 137, column: 9, scope: !7170, inlinedAt: !7177)
!7170 = distinct !DISubprogram(name: "cast<(dyn core::any::Any + core::marker::Send), u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hcbd392440c7d0ae8E", scope: !7133, file: !6998, line: 136, type: !7171, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7176, retainedNodes: !7173)
!7171 = !DISubroutineType(types: !7172)
!7172 = !{!43, !7133}
!7173 = !{!7174}
!7174 = !DILocalVariable(name: "self", scope: !7175, file: !6095, line: 348, type: !7133, align: 8)
!7175 = !DILexicalBlockFile(scope: !7170, file: !6095, discriminator: 0)
!7176 = !{!4741, !2563}
!7177 = !DILocation(line: 348, column: 37, scope: !7153)
!7178 = !DILocation(line: 345, column: 32, scope: !7130)
!7179 = !DILocalVariable(name: "self", scope: !7180, file: !6095, line: 345, type: !7188, align: 8)
!7180 = !DILexicalBlockFile(scope: !7181, file: !6095, discriminator: 0)
!7181 = distinct !DISubprogram(name: "as_ref<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hf105b37176c5175fE", scope: !7133, file: !6998, line: 114, type: !7182, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4740, retainedNodes: !7189)
!7182 = !DISubroutineType(types: !7183)
!7183 = !{!7184, !7188}
!7184 = !DICompositeType(tag: DW_TAG_structure_type, name: "&(dyn core::any::Any + core::marker::Send)", file: !2, size: 128, align: 64, elements: !7185, templateParams: !27, identifier: "5974d5915604a996fe707ddabeb5f60f")
!7185 = !{!7186, !7187}
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !7184, file: !2, baseType: !2925, size: 64, align: 64)
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !7184, file: !2, baseType: !185, size: 64, align: 64, offset: 64)
!7188 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<(dyn core::any::Any + core::marker::Send)>", baseType: !7133, size: 64, align: 64, dwarfAddressSpace: 0)
!7189 = !{!7179}
!7190 = !DILocation(line: 345, column: 32, scope: !7180, inlinedAt: !7178)
!7191 = !DILocalVariable(name: "self", scope: !7192, file: !6095, line: 345, type: !7196, align: 8)
!7192 = !DILexicalBlockFile(scope: !7193, file: !6095, discriminator: 0)
!7193 = distinct !DISubprogram(name: "as_ref<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h8d1e560a48901788E", scope: !7136, file: !2484, line: 378, type: !7194, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4740, retainedNodes: !7197)
!7194 = !DISubroutineType(types: !7195)
!7195 = !{!7184, !7196}
!7196 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<(dyn core::any::Any + core::marker::Send)>", baseType: !7136, size: 64, align: 64, dwarfAddressSpace: 0)
!7197 = !{!7191}
!7198 = !DILocation(line: 345, column: 32, scope: !7192, inlinedAt: !7199)
!7199 = !DILocation(line: 117, column: 18, scope: !7181, inlinedAt: !7178)
!7200 = !DILocalVariable(name: "self", scope: !7201, file: !6095, line: 345, type: !7136, align: 8)
!7201 = !DILexicalBlockFile(scope: !7202, file: !6095, discriminator: 0)
!7202 = distinct !DISubprogram(name: "as_ptr<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h3c416757b48d700aE", scope: !7136, file: !2484, line: 330, type: !7203, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4740, retainedNodes: !7205)
!7203 = !DISubroutineType(types: !7204)
!7204 = !{!4734, !7136}
!7205 = !{!7200}
!7206 = !DILocation(line: 345, column: 32, scope: !7201, inlinedAt: !7207)
!7207 = !DILocation(line: 381, column: 20, scope: !7193, inlinedAt: !7199)
!7208 = !DILocation(line: 345, column: 20, scope: !7130)
!7209 = !DILocation(line: 345, column: 13, scope: !7149)
!7210 = !DILocation(line: 346, column: 38, scope: !7149)
!7211 = !DILocalVariable(name: "self", scope: !7212, file: !6095, line: 346, type: !7188, align: 8)
!7212 = !DILexicalBlockFile(scope: !7213, file: !6095, discriminator: 0)
!7213 = distinct !DISubprogram(name: "as_ref<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hf105b37176c5175fE", scope: !7133, file: !6998, line: 114, type: !7182, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4740, retainedNodes: !7214)
!7214 = !{!7211}
!7215 = !DILocation(line: 346, column: 38, scope: !7212, inlinedAt: !7210)
!7216 = !DILocalVariable(name: "self", scope: !7217, file: !6095, line: 346, type: !7196, align: 8)
!7217 = !DILexicalBlockFile(scope: !7218, file: !6095, discriminator: 0)
!7218 = distinct !DISubprogram(name: "as_ref<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h8d1e560a48901788E", scope: !7136, file: !2484, line: 378, type: !7194, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4740, retainedNodes: !7219)
!7219 = !{!7216}
!7220 = !DILocation(line: 346, column: 38, scope: !7217, inlinedAt: !7221)
!7221 = !DILocation(line: 117, column: 18, scope: !7213, inlinedAt: !7210)
!7222 = !DILocalVariable(name: "self", scope: !7223, file: !6095, line: 346, type: !7136, align: 8)
!7223 = !DILexicalBlockFile(scope: !7224, file: !6095, discriminator: 0)
!7224 = distinct !DISubprogram(name: "as_ptr<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h3c416757b48d700aE", scope: !7136, file: !2484, line: 330, type: !7203, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4740, retainedNodes: !7225)
!7225 = !{!7222}
!7226 = !DILocation(line: 346, column: 38, scope: !7223, inlinedAt: !7227)
!7227 = !DILocation(line: 381, column: 20, scope: !7218, inlinedAt: !7221)
!7228 = !DILocation(line: 346, column: 21, scope: !7149)
!7229 = !DILocation(line: 346, column: 13, scope: !7151)
!7230 = !DILocation(line: 347, column: 56, scope: !7151)
!7231 = !DILocalVariable(name: "size", scope: !7232, file: !6095, line: 347, type: !9, align: 8)
!7232 = !DILexicalBlockFile(scope: !7233, file: !6095, discriminator: 0)
!7233 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hc32ed4c20a004031E", scope: !2182, file: !6127, line: 110, type: !6128, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7234)
!7234 = !{!7231, !7235}
!7235 = !DILocalVariable(name: "align", scope: !7232, file: !6095, line: 347, type: !9, align: 8)
!7236 = !DILocation(line: 347, column: 22, scope: !7232, inlinedAt: !7237)
!7237 = !DILocation(line: 347, column: 22, scope: !7151)
!7238 = !DILocation(line: 347, column: 62, scope: !7151)
!7239 = !DILocalVariable(name: "align", scope: !7240, file: !6095, line: 347, type: !9, align: 8)
!7240 = !DILexicalBlockFile(scope: !7241, file: !6095, discriminator: 0)
!7241 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h109247ecbc3664f8E", scope: !2188, file: !6138, line: 29, type: !6139, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7242)
!7242 = !{!7239, !7243}
!7243 = !DILocalVariable(name: "runtime", scope: !7244, file: !6095, line: 347, type: !6145, align: 8)
!7244 = !DILexicalBlockFile(scope: !7245, file: !6095, discriminator: 0)
!7245 = distinct !DILexicalBlock(scope: !7241, file: !549, line: 2336, column: 13)
!7246 = !DILocation(line: 347, column: 22, scope: !7240, inlinedAt: !7247)
!7247 = !DILocation(line: 112, column: 40, scope: !7233, inlinedAt: !7237)
!7248 = !DILocation(line: 348, column: 37, scope: !7175, inlinedAt: !7177)
!7249 = !DILocalVariable(name: "self", scope: !7250, file: !6095, line: 348, type: !7136, align: 8)
!7250 = !DILexicalBlockFile(scope: !7251, file: !6095, discriminator: 0)
!7251 = distinct !DISubprogram(name: "cast<(dyn core::any::Any + core::marker::Send), u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hca780772dd69ae44E", scope: !7136, file: !2484, line: 453, type: !7252, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7176, retainedNodes: !7254)
!7252 = !DISubroutineType(types: !7253)
!7253 = !{!48, !7136}
!7254 = !{!7249}
!7255 = !DILocation(line: 348, column: 37, scope: !7250, inlinedAt: !7256)
!7256 = !DILocation(line: 137, column: 22, scope: !7170, inlinedAt: !7177)
!7257 = !DILocalVariable(name: "self", scope: !7258, file: !6095, line: 348, type: !7136, align: 8)
!7258 = !DILexicalBlockFile(scope: !7259, file: !6095, discriminator: 0)
!7259 = distinct !DISubprogram(name: "as_ptr<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h3c416757b48d700aE", scope: !7136, file: !2484, line: 330, type: !7203, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4740, retainedNodes: !7260)
!7260 = !{!7257}
!7261 = !DILocation(line: 348, column: 37, scope: !7258, inlinedAt: !7262)
!7262 = !DILocation(line: 455, column: 41, scope: !7251, inlinedAt: !7256)
!7263 = !DILocalVariable(name: "ptr", scope: !7264, file: !6095, line: 348, type: !289, align: 8)
!7264 = !DILexicalBlockFile(scope: !7265, file: !6095, discriminator: 0)
!7265 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h834e2f92abdb0d2bE", scope: !48, file: !2484, line: 196, type: !6190, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !7266)
!7266 = !{!7263}
!7267 = !DILocation(line: 348, column: 37, scope: !7264, inlinedAt: !7268)
!7268 = !DILocation(line: 455, column: 18, scope: !7251, inlinedAt: !7256)
!7269 = !DILocalVariable(name: "self", scope: !7270, file: !6095, line: 348, type: !43, align: 8)
!7270 = !DILexicalBlockFile(scope: !7271, file: !6095, discriminator: 0)
!7271 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf0c3ca0c0a8512cfE", scope: !43, file: !6998, line: 103, type: !7108, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !7272)
!7272 = !{!7269}
!7273 = !DILocation(line: 348, column: 26, scope: !7270, inlinedAt: !7274)
!7274 = !DILocation(line: 773, column: 41, scope: !7160, inlinedAt: !7163)
!7275 = !DILocalVariable(name: "self", scope: !7276, file: !6095, line: 348, type: !48, align: 8)
!7276 = !DILexicalBlockFile(scope: !7277, file: !6095, discriminator: 0)
!7277 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he85ce89b0e21db75E", scope: !48, file: !2484, line: 330, type: !6111, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !7278)
!7278 = !{!7275}
!7279 = !DILocation(line: 348, column: 26, scope: !7276, inlinedAt: !7280)
!7280 = !DILocation(line: 104, column: 9, scope: !7271, inlinedAt: !7274)
!7281 = !DILocalVariable(name: "ptr", scope: !7282, file: !6095, line: 348, type: !289, align: 8)
!7282 = !DILexicalBlockFile(scope: !7283, file: !6095, discriminator: 0)
!7283 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h834e2f92abdb0d2bE", scope: !48, file: !2484, line: 196, type: !6190, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !7284)
!7284 = !{!7281}
!7285 = !DILocation(line: 348, column: 26, scope: !7282, inlinedAt: !7286)
!7286 = !DILocation(line: 773, column: 18, scope: !7160, inlinedAt: !7163)
!7287 = !DILocation(line: 348, column: 50, scope: !7153)
!7288 = !DILocation(line: 348, column: 9, scope: !7153)
!7289 = !DILocation(line: 350, column: 1, scope: !7130)
!7290 = !DILocation(line: 340, column: 1, scope: !7130)
!7291 = !DILocation(line: 350, column: 2, scope: !7130)
!7292 = distinct !DISubprogram(name: "box_free<std::io::error::Custom, alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17hf73f8100277838deE", scope: !62, file: !6095, line: 340, type: !7293, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7313, retainedNodes: !7304)
!7293 = !DISubroutineType(types: !7294)
!7294 = !{null, !7295, !61}
!7295 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<std::io::error::Custom>", scope: !44, file: !2, size: 64, align: 64, elements: !7296, templateParams: !4637, identifier: "ed2218c422fd8d1b5d8ef5cc9a32b804")
!7296 = !{!7297, !7302}
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !7295, file: !2, baseType: !7298, size: 64, align: 64)
!7298 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<std::io::error::Custom>", scope: !49, file: !2, size: 64, align: 64, elements: !7299, templateParams: !4637, identifier: "25ba20889606cb13c9fe774102412775")
!7299 = !{!7300}
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !7298, file: !2, baseType: !7301, size: 64, align: 64)
!7301 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const std::io::error::Custom", baseType: !132, size: 64, align: 64, dwarfAddressSpace: 0)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !7295, file: !2, baseType: !7303, align: 8)
!7303 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<std::io::error::Custom>", scope: !58, file: !2, align: 8, elements: !27, templateParams: !4637, identifier: "7657d0e04d24756529c60def68783989")
!7304 = !{!7305, !7306, !7307, !7309, !7311}
!7305 = !DILocalVariable(name: "ptr", arg: 1, scope: !7292, file: !6095, line: 341, type: !7295)
!7306 = !DILocalVariable(name: "alloc", arg: 2, scope: !7292, file: !6095, line: 342, type: !61)
!7307 = !DILocalVariable(name: "size", scope: !7308, file: !6095, line: 345, type: !9, align: 8)
!7308 = distinct !DILexicalBlock(scope: !7292, file: !6095, line: 345, column: 9)
!7309 = !DILocalVariable(name: "align", scope: !7310, file: !6095, line: 346, type: !9, align: 8)
!7310 = distinct !DILexicalBlock(scope: !7308, file: !6095, line: 346, column: 9)
!7311 = !DILocalVariable(name: "layout", scope: !7312, file: !6095, line: 347, type: !2182, align: 8)
!7312 = distinct !DILexicalBlock(scope: !7310, file: !6095, line: 347, column: 9)
!7313 = !{!4638, !64}
!7314 = !DILocation(line: 341, column: 5, scope: !7292)
!7315 = !DILocation(line: 342, column: 5, scope: !7292)
!7316 = !DILocation(line: 347, column: 13, scope: !7312)
!7317 = !DILocalVariable(name: "unique", scope: !7318, file: !6095, line: 348, type: !43, align: 8)
!7318 = !DILexicalBlockFile(scope: !7319, file: !6095, discriminator: 0)
!7319 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17hd5d28fb461c84be2E", scope: !6989, file: !2484, line: 770, type: !6990, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !7320)
!7320 = !{!7317}
!7321 = !DILocation(line: 348, column: 26, scope: !7318, inlinedAt: !7322)
!7322 = !DILocation(line: 348, column: 26, scope: !7312)
!7323 = !DILocalVariable(name: "pointer", scope: !7324, file: !6095, line: 348, type: !48, align: 8)
!7324 = !DILexicalBlockFile(scope: !7325, file: !6095, discriminator: 0)
!7325 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h014fcd2ff25ff813E", scope: !6999, file: !6998, line: 190, type: !7000, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !7326)
!7326 = !{!7323}
!7327 = !DILocation(line: 348, column: 37, scope: !7324, inlinedAt: !7328)
!7328 = !DILocation(line: 137, column: 9, scope: !7329, inlinedAt: !7336)
!7329 = distinct !DISubprogram(name: "cast<std::io::error::Custom, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17he2ddb937ad428bc0E", scope: !7295, file: !6998, line: 136, type: !7330, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7335, retainedNodes: !7332)
!7330 = !DISubroutineType(types: !7331)
!7331 = !{!43, !7295}
!7332 = !{!7333}
!7333 = !DILocalVariable(name: "self", scope: !7334, file: !6095, line: 348, type: !7295, align: 8)
!7334 = !DILexicalBlockFile(scope: !7329, file: !6095, discriminator: 0)
!7335 = !{!4638, !2563}
!7336 = !DILocation(line: 348, column: 37, scope: !7312)
!7337 = !DILocation(line: 345, column: 32, scope: !7292)
!7338 = !DILocalVariable(name: "self", scope: !7339, file: !6095, line: 345, type: !7344, align: 8)
!7339 = !DILexicalBlockFile(scope: !7340, file: !6095, discriminator: 0)
!7340 = distinct !DISubprogram(name: "as_ref<std::io::error::Custom>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17he44fe283dfe0b765E", scope: !7295, file: !6998, line: 114, type: !7341, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4637, retainedNodes: !7345)
!7341 = !DISubroutineType(types: !7342)
!7342 = !{!7343, !7344}
!7343 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::io::error::Custom", baseType: !132, size: 64, align: 64, dwarfAddressSpace: 0)
!7344 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<std::io::error::Custom>", baseType: !7295, size: 64, align: 64, dwarfAddressSpace: 0)
!7345 = !{!7338}
!7346 = !DILocation(line: 345, column: 32, scope: !7339, inlinedAt: !7337)
!7347 = !DILocalVariable(name: "self", scope: !7348, file: !6095, line: 345, type: !7352, align: 8)
!7348 = !DILexicalBlockFile(scope: !7349, file: !6095, discriminator: 0)
!7349 = distinct !DISubprogram(name: "as_ref<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hbef434bf055fda3cE", scope: !7298, file: !2484, line: 378, type: !7350, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4637, retainedNodes: !7353)
!7350 = !DISubroutineType(types: !7351)
!7351 = !{!7343, !7352}
!7352 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<std::io::error::Custom>", baseType: !7298, size: 64, align: 64, dwarfAddressSpace: 0)
!7353 = !{!7347}
!7354 = !DILocation(line: 345, column: 32, scope: !7348, inlinedAt: !7355)
!7355 = !DILocation(line: 117, column: 18, scope: !7340, inlinedAt: !7337)
!7356 = !DILocalVariable(name: "self", scope: !7357, file: !6095, line: 345, type: !7298, align: 8)
!7357 = !DILexicalBlockFile(scope: !7358, file: !6095, discriminator: 0)
!7358 = distinct !DISubprogram(name: "as_ptr<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcb7b7185b84f5b34E", scope: !7298, file: !2484, line: 330, type: !7359, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4637, retainedNodes: !7361)
!7359 = !DISubroutineType(types: !7360)
!7360 = !{!2443, !7298}
!7361 = !{!7356}
!7362 = !DILocation(line: 345, column: 32, scope: !7357, inlinedAt: !7363)
!7363 = !DILocation(line: 381, column: 20, scope: !7349, inlinedAt: !7355)
!7364 = !DILocation(line: 345, column: 20, scope: !7292)
!7365 = !DILocation(line: 345, column: 13, scope: !7308)
!7366 = !DILocation(line: 346, column: 38, scope: !7308)
!7367 = !DILocalVariable(name: "self", scope: !7368, file: !6095, line: 346, type: !7344, align: 8)
!7368 = !DILexicalBlockFile(scope: !7369, file: !6095, discriminator: 0)
!7369 = distinct !DISubprogram(name: "as_ref<std::io::error::Custom>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17he44fe283dfe0b765E", scope: !7295, file: !6998, line: 114, type: !7341, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4637, retainedNodes: !7370)
!7370 = !{!7367}
!7371 = !DILocation(line: 346, column: 38, scope: !7368, inlinedAt: !7366)
!7372 = !DILocalVariable(name: "self", scope: !7373, file: !6095, line: 346, type: !7352, align: 8)
!7373 = !DILexicalBlockFile(scope: !7374, file: !6095, discriminator: 0)
!7374 = distinct !DISubprogram(name: "as_ref<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hbef434bf055fda3cE", scope: !7298, file: !2484, line: 378, type: !7350, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4637, retainedNodes: !7375)
!7375 = !{!7372}
!7376 = !DILocation(line: 346, column: 38, scope: !7373, inlinedAt: !7377)
!7377 = !DILocation(line: 117, column: 18, scope: !7369, inlinedAt: !7366)
!7378 = !DILocalVariable(name: "self", scope: !7379, file: !6095, line: 346, type: !7298, align: 8)
!7379 = !DILexicalBlockFile(scope: !7380, file: !6095, discriminator: 0)
!7380 = distinct !DISubprogram(name: "as_ptr<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcb7b7185b84f5b34E", scope: !7298, file: !2484, line: 330, type: !7359, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4637, retainedNodes: !7381)
!7381 = !{!7378}
!7382 = !DILocation(line: 346, column: 38, scope: !7379, inlinedAt: !7383)
!7383 = !DILocation(line: 381, column: 20, scope: !7374, inlinedAt: !7377)
!7384 = !DILocation(line: 346, column: 21, scope: !7308)
!7385 = !DILocation(line: 346, column: 13, scope: !7310)
!7386 = !DILocation(line: 347, column: 56, scope: !7310)
!7387 = !DILocalVariable(name: "size", scope: !7388, file: !6095, line: 347, type: !9, align: 8)
!7388 = !DILexicalBlockFile(scope: !7389, file: !6095, discriminator: 0)
!7389 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hc32ed4c20a004031E", scope: !2182, file: !6127, line: 110, type: !6128, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7390)
!7390 = !{!7387, !7391}
!7391 = !DILocalVariable(name: "align", scope: !7388, file: !6095, line: 347, type: !9, align: 8)
!7392 = !DILocation(line: 347, column: 22, scope: !7388, inlinedAt: !7393)
!7393 = !DILocation(line: 347, column: 22, scope: !7310)
!7394 = !DILocation(line: 347, column: 62, scope: !7310)
!7395 = !DILocalVariable(name: "align", scope: !7396, file: !6095, line: 347, type: !9, align: 8)
!7396 = !DILexicalBlockFile(scope: !7397, file: !6095, discriminator: 0)
!7397 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h109247ecbc3664f8E", scope: !2188, file: !6138, line: 29, type: !6139, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7398)
!7398 = !{!7395, !7399}
!7399 = !DILocalVariable(name: "runtime", scope: !7400, file: !6095, line: 347, type: !6145, align: 8)
!7400 = !DILexicalBlockFile(scope: !7401, file: !6095, discriminator: 0)
!7401 = distinct !DILexicalBlock(scope: !7397, file: !549, line: 2336, column: 13)
!7402 = !DILocation(line: 347, column: 22, scope: !7396, inlinedAt: !7403)
!7403 = !DILocation(line: 112, column: 40, scope: !7389, inlinedAt: !7393)
!7404 = !DILocation(line: 348, column: 37, scope: !7334, inlinedAt: !7336)
!7405 = !DILocalVariable(name: "self", scope: !7406, file: !6095, line: 348, type: !7298, align: 8)
!7406 = !DILexicalBlockFile(scope: !7407, file: !6095, discriminator: 0)
!7407 = distinct !DISubprogram(name: "cast<std::io::error::Custom, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17ha50133fda7a7a24eE", scope: !7298, file: !2484, line: 453, type: !7408, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7335, retainedNodes: !7410)
!7408 = !DISubroutineType(types: !7409)
!7409 = !{!48, !7298}
!7410 = !{!7405}
!7411 = !DILocation(line: 348, column: 37, scope: !7406, inlinedAt: !7412)
!7412 = !DILocation(line: 137, column: 22, scope: !7329, inlinedAt: !7336)
!7413 = !DILocalVariable(name: "self", scope: !7414, file: !6095, line: 348, type: !7298, align: 8)
!7414 = !DILexicalBlockFile(scope: !7415, file: !6095, discriminator: 0)
!7415 = distinct !DISubprogram(name: "as_ptr<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcb7b7185b84f5b34E", scope: !7298, file: !2484, line: 330, type: !7359, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4637, retainedNodes: !7416)
!7416 = !{!7413}
!7417 = !DILocation(line: 348, column: 37, scope: !7414, inlinedAt: !7418)
!7418 = !DILocation(line: 455, column: 41, scope: !7407, inlinedAt: !7412)
!7419 = !DILocalVariable(name: "ptr", scope: !7420, file: !6095, line: 348, type: !289, align: 8)
!7420 = !DILexicalBlockFile(scope: !7421, file: !6095, discriminator: 0)
!7421 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h834e2f92abdb0d2bE", scope: !48, file: !2484, line: 196, type: !6190, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !7422)
!7422 = !{!7419}
!7423 = !DILocation(line: 348, column: 37, scope: !7420, inlinedAt: !7424)
!7424 = !DILocation(line: 455, column: 18, scope: !7407, inlinedAt: !7412)
!7425 = !DILocalVariable(name: "self", scope: !7426, file: !6095, line: 348, type: !43, align: 8)
!7426 = !DILexicalBlockFile(scope: !7427, file: !6095, discriminator: 0)
!7427 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf0c3ca0c0a8512cfE", scope: !43, file: !6998, line: 103, type: !7108, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !7428)
!7428 = !{!7425}
!7429 = !DILocation(line: 348, column: 26, scope: !7426, inlinedAt: !7430)
!7430 = !DILocation(line: 773, column: 41, scope: !7319, inlinedAt: !7322)
!7431 = !DILocalVariable(name: "self", scope: !7432, file: !6095, line: 348, type: !48, align: 8)
!7432 = !DILexicalBlockFile(scope: !7433, file: !6095, discriminator: 0)
!7433 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he85ce89b0e21db75E", scope: !48, file: !2484, line: 330, type: !6111, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !7434)
!7434 = !{!7431}
!7435 = !DILocation(line: 348, column: 26, scope: !7432, inlinedAt: !7436)
!7436 = !DILocation(line: 104, column: 9, scope: !7427, inlinedAt: !7430)
!7437 = !DILocalVariable(name: "ptr", scope: !7438, file: !6095, line: 348, type: !289, align: 8)
!7438 = !DILexicalBlockFile(scope: !7439, file: !6095, discriminator: 0)
!7439 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h834e2f92abdb0d2bE", scope: !48, file: !2484, line: 196, type: !6190, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !7440)
!7440 = !{!7437}
!7441 = !DILocation(line: 348, column: 26, scope: !7438, inlinedAt: !7442)
!7442 = !DILocation(line: 773, column: 18, scope: !7319, inlinedAt: !7322)
!7443 = !DILocation(line: 348, column: 50, scope: !7312)
!7444 = !DILocation(line: 348, column: 9, scope: !7312)
!7445 = !DILocation(line: 350, column: 1, scope: !7292)
!7446 = !DILocation(line: 340, column: 1, scope: !7292)
!7447 = !DILocation(line: 350, column: 2, scope: !7292)
!7448 = distinct !DISubprogram(name: "into_unique<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h5993f101f37262feE", scope: !7450, file: !7449, line: 1120, type: !7452, scopeLine: 1120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7154, retainedNodes: !7458)
!7449 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/boxed.rs", directory: "", checksumkind: CSK_MD5, checksum: "9efa3237c64a7f41bc63e23af752c9d3")
!7450 = !DINamespace(name: "{impl#7}", scope: !7451)
!7451 = !DINamespace(name: "boxed", scope: !32)
!7452 = !DISubroutineType(types: !7453)
!7453 = !{!7454, !2922}
!7454 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::unique::Unique<(dyn core::any::Any + core::marker::Send)>, alloc::alloc::Global)", file: !2, size: 128, align: 64, elements: !7455, templateParams: !27, identifier: "53402f21428a7e64a796aded0442251")
!7455 = !{!7456, !7457}
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7454, file: !2, baseType: !7133, size: 128, align: 64)
!7457 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !7454, file: !2, baseType: !61, align: 8, offset: 128)
!7458 = !{!7459, !7460}
!7459 = !DILocalVariable(name: "b", arg: 1, scope: !7448, file: !7449, line: 1120, type: !2922)
!7460 = !DILocalVariable(name: "alloc", scope: !7461, file: !7449, line: 1126, type: !61, align: 1)
!7461 = distinct !DILexicalBlock(scope: !7448, file: !7449, line: 1126, column: 9)
!7462 = !DILocation(line: 1120, column: 30, scope: !7448)
!7463 = !DILocation(line: 1126, column: 13, scope: !7461)
!7464 = !DILocalVariable(name: "tmp", scope: !7465, file: !7449, line: 1126, type: !7476, align: 1)
!7465 = !DILexicalBlockFile(scope: !7466, file: !7449, discriminator: 0)
!7466 = distinct !DILexicalBlock(scope: !7467, file: !562, line: 1107, column: 5)
!7467 = distinct !DISubprogram(name: "read<alloc::alloc::Global>", linkageName: "_ZN4core3ptr4read17h7ff03f7eda0773e3E", scope: !45, file: !562, line: 1099, type: !7468, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7474, retainedNodes: !7471)
!7468 = !DISubroutineType(types: !7469)
!7469 = !{null, !7470}
!7470 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::alloc::Global", baseType: !61, size: 64, align: 64, dwarfAddressSpace: 0)
!7471 = !{!7472, !7464}
!7472 = !DILocalVariable(name: "src", scope: !7473, file: !7449, line: 1126, type: !7470, align: 8)
!7473 = !DILexicalBlockFile(scope: !7467, file: !7449, discriminator: 0)
!7474 = !{!7475}
!7475 = !DITemplateTypeParameter(name: "T", type: !61)
!7476 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<alloc::alloc::Global>", scope: !1294, file: !2, align: 8, elements: !7477, templateParams: !7474, identifier: "b168aeba9faaf5e6d2495caca2c1b4fd")
!7477 = !{!7478, !7479}
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !7476, file: !2, baseType: !7, align: 8)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !7476, file: !2, baseType: !7480, align: 8)
!7480 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::alloc::Global>", scope: !1164, file: !2, align: 8, elements: !7481, templateParams: !7474, identifier: "899e548b6e114c8b20c5123edbf2f0a4")
!7481 = !{!7482}
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !7480, file: !2, baseType: !61, align: 8)
!7483 = !DILocation(line: 1126, column: 30, scope: !7465, inlinedAt: !7484)
!7484 = !DILocation(line: 1126, column: 30, scope: !7448)
!7485 = !DILocalVariable(name: "self", scope: !7486, file: !7449, line: 1126, type: !7476, align: 1)
!7486 = !DILexicalBlockFile(scope: !7487, file: !7449, discriminator: 0)
!7487 = distinct !DISubprogram(name: "assume_init<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hc29c2c0519d1e097E", scope: !7476, file: !1292, line: 629, type: !7488, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7474, retainedNodes: !7490)
!7488 = !DISubroutineType(types: !7489)
!7489 = !{null, !7476, !508}
!7490 = !{!7485}
!7491 = !DILocation(line: 1126, column: 30, scope: !7486, inlinedAt: !7492)
!7492 = !DILocation(line: 1116, column: 9, scope: !7466, inlinedAt: !7484)
!7493 = !DILocalVariable(name: "slot", scope: !7494, file: !7449, line: 1126, type: !7480, align: 1)
!7494 = !DILexicalBlockFile(scope: !7495, file: !7449, discriminator: 0)
!7495 = distinct !DISubprogram(name: "into_inner<alloc::alloc::Global>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h11183d74432f3a26E", scope: !7480, file: !1162, line: 88, type: !7496, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7474, retainedNodes: !7498)
!7496 = !DISubroutineType(types: !7497)
!7497 = !{null, !7480}
!7498 = !{!7493}
!7499 = !DILocation(line: 1126, column: 30, scope: !7494, inlinedAt: !7500)
!7500 = !DILocation(line: 634, column: 13, scope: !7487, inlinedAt: !7492)
!7501 = !DILocalVariable(name: "pointer", scope: !7502, file: !7449, line: 1127, type: !7136, align: 8)
!7502 = !DILexicalBlockFile(scope: !7503, file: !7449, discriminator: 0)
!7503 = distinct !DISubprogram(name: "from<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h17c8dc568d42ddbcE", scope: !6999, file: !6998, line: 190, type: !7504, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4740, retainedNodes: !7506)
!7504 = !DISubroutineType(types: !7505)
!7505 = !{!7133, !7136}
!7506 = !{!7501}
!7507 = !DILocation(line: 1127, column: 10, scope: !7502, inlinedAt: !7508)
!7508 = !DILocation(line: 180, column: 9, scope: !7509, inlinedAt: !7520)
!7509 = distinct !DISubprogram(name: "from<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h87315e2fc234bad9E", scope: !7510, file: !6998, line: 179, type: !7511, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4740, retainedNodes: !7517)
!7510 = !DINamespace(name: "{impl#10}", scope: !44)
!7511 = !DISubroutineType(types: !7512)
!7512 = !{!7133, !7513}
!7513 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut (dyn core::any::Any + core::marker::Send)", file: !2, size: 128, align: 64, elements: !7514, templateParams: !27, identifier: "bfc39ab86610aabda2cb5f466612a27e")
!7514 = !{!7515, !7516}
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !7513, file: !2, baseType: !2925, size: 64, align: 64)
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !7513, file: !2, baseType: !185, size: 64, align: 64, offset: 64)
!7517 = !{!7518}
!7518 = !DILocalVariable(name: "reference", scope: !7519, file: !7449, line: 1127, type: !7513, align: 8)
!7519 = !DILexicalBlockFile(scope: !7509, file: !7449, discriminator: 0)
!7520 = !DILocation(line: 1127, column: 10, scope: !7461)
!7521 = !DILocation(line: 1126, column: 13, scope: !7448)
!7522 = !DILocation(line: 1126, column: 40, scope: !7448)
!7523 = !DILocation(line: 1126, column: 30, scope: !7473, inlinedAt: !7484)
!7524 = !DILocation(line: 1126, column: 30, scope: !7525, inlinedAt: !7527)
!7525 = !DILexicalBlockFile(scope: !7526, file: !7449, discriminator: 0)
!7526 = distinct !DISubprogram(name: "uninit<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hdefa00e3c471231aE", scope: !7476, file: !1292, line: 320, type: !1320, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7474, retainedNodes: !27)
!7527 = !DILocation(line: 1107, column: 19, scope: !7467, inlinedAt: !7484)
!7528 = !DILocalVariable(name: "self", scope: !7529, file: !7449, line: 1126, type: !7534, align: 8)
!7529 = !DILexicalBlockFile(scope: !7530, file: !7449, discriminator: 0)
!7530 = distinct !DISubprogram(name: "as_mut_ptr<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h8c9b4eaa3e2d916aE", scope: !7476, file: !1292, line: 574, type: !7531, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7474, retainedNodes: !7535)
!7531 = !DISubroutineType(types: !7532)
!7532 = !{!7533, !7534}
!7533 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::alloc::Global", baseType: !61, size: 64, align: 64, dwarfAddressSpace: 0)
!7534 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", baseType: !7476, size: 64, align: 64, dwarfAddressSpace: 0)
!7535 = !{!7528}
!7536 = !DILocation(line: 1126, column: 30, scope: !7529, inlinedAt: !7537)
!7537 = !DILocation(line: 1115, column: 34, scope: !7466, inlinedAt: !7484)
!7538 = !DILocation(line: 1127, column: 33, scope: !7461)
!7539 = !DILocation(line: 1127, column: 23, scope: !7461)
!7540 = !DILocation(line: 1128, column: 5, scope: !7448)
!7541 = !DILocation(line: 1127, column: 10, scope: !7519, inlinedAt: !7520)
!7542 = !DILocalVariable(name: "reference", scope: !7543, file: !7449, line: 1127, type: !7513, align: 8)
!7543 = !DILexicalBlockFile(scope: !7544, file: !7449, discriminator: 0)
!7544 = distinct !DISubprogram(name: "from<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h2c0872c543d016ecE", scope: !7545, file: !2484, line: 784, type: !7546, scopeLine: 784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4740, retainedNodes: !7548)
!7545 = !DINamespace(name: "{impl#17}", scope: !49)
!7546 = !DISubroutineType(types: !7547)
!7547 = !{!7136, !7513}
!7548 = !{!7542}
!7549 = !DILocation(line: 1127, column: 10, scope: !7543, inlinedAt: !7550)
!7550 = !DILocation(line: 180, column: 20, scope: !7509, inlinedAt: !7520)
!7551 = !DILocation(line: 1127, column: 9, scope: !7461)
!7552 = !DILocation(line: 1128, column: 6, scope: !7448)
!7553 = !DILocation(line: 1120, column: 5, scope: !7448)
!7554 = distinct !DISubprogram(name: "leak<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h0f83870fddf481a3E", scope: !7450, file: !7449, line: 1180, type: !7555, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7154, retainedNodes: !7557)
!7555 = !DISubroutineType(types: !7556)
!7556 = !{!7513, !2922}
!7557 = !{!7558}
!7558 = !DILocalVariable(name: "b", arg: 1, scope: !7554, file: !7449, line: 1180, type: !2922)
!7559 = !DILocation(line: 1180, column: 27, scope: !7554)
!7560 = !DILocation(line: 1184, column: 47, scope: !7554)
!7561 = !DILocalVariable(name: "value", scope: !7562, file: !7449, line: 1184, type: !2922, align: 8)
!7562 = !DILexicalBlockFile(scope: !7563, file: !7449, discriminator: 0)
!7563 = distinct !DISubprogram(name: "new<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hb5dae1c4aff282a8E", scope: !3479, file: !1162, line: 70, type: !3632, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3482, retainedNodes: !7564)
!7564 = !{!7561}
!7565 = !DILocation(line: 1184, column: 24, scope: !7562, inlinedAt: !7566)
!7566 = !DILocation(line: 1184, column: 24, scope: !7554)
!7567 = !DILocalVariable(name: "self", scope: !7568, file: !7449, line: 1184, type: !7574, align: 8)
!7568 = !DILexicalBlockFile(scope: !7569, file: !7449, discriminator: 0)
!7569 = distinct !DISubprogram(name: "deref<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc2dba0ed43ce9e70E", scope: !7570, file: !1162, line: 153, type: !7571, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !3482, retainedNodes: !7575)
!7570 = !DINamespace(name: "{impl#2}", scope: !1164)
!7571 = !DISubroutineType(types: !7572)
!7572 = !{!7573, !7574}
!7573 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", baseType: !2922, size: 64, align: 64, dwarfAddressSpace: 0)
!7574 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", baseType: !3479, size: 64, align: 64, dwarfAddressSpace: 0)
!7575 = !{!7567}
!7576 = !DILocation(line: 1184, column: 24, scope: !7568, inlinedAt: !7566)
!7577 = !DILocalVariable(name: "self", scope: !7578, file: !7449, line: 1184, type: !7133, align: 8)
!7578 = !DILexicalBlockFile(scope: !7579, file: !7449, discriminator: 0)
!7579 = distinct !DISubprogram(name: "as_ptr<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h7c65a0cf6b773303E", scope: !7133, file: !6998, line: 103, type: !7580, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4740, retainedNodes: !7582)
!7580 = !DISubroutineType(types: !7581)
!7581 = !{!4734, !7133}
!7582 = !{!7577}
!7583 = !DILocation(line: 1184, column: 24, scope: !7578, inlinedAt: !7566)
!7584 = !DILocalVariable(name: "self", scope: !7585, file: !7449, line: 1184, type: !7136, align: 8)
!7585 = !DILexicalBlockFile(scope: !7586, file: !7449, discriminator: 0)
!7586 = distinct !DISubprogram(name: "as_ptr<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h3c416757b48d700aE", scope: !7136, file: !2484, line: 330, type: !7203, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4740, retainedNodes: !7587)
!7587 = !{!7584}
!7588 = !DILocation(line: 1184, column: 24, scope: !7585, inlinedAt: !7589)
!7589 = !DILocation(line: 104, column: 9, scope: !7579, inlinedAt: !7566)
!7590 = !DILocation(line: 1185, column: 6, scope: !7554)
!7591 = distinct !DISubprogram(name: "finish_grow<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow17hd809ddc74081b036E", scope: !40, file: !7592, line: 448, type: !7593, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7666, retainedNodes: !7613)
!7592 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/raw_vec.rs", directory: "", checksumkind: CSK_MD5, checksum: "7882a816b01a8bc5234f4586c1b0290b")
!7593 = !DISubroutineType(types: !7594)
!7594 = !{!5528, !5632, !7595, !7612}
!7595 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", scope: !20, file: !2, size: 192, align: 64, elements: !7596, templateParams: !27, identifier: "2441bf159aec13ad0ba597f59aeb1a1")
!7596 = !{!7597}
!7597 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7595, file: !2, size: 192, align: 64, elements: !7598, templateParams: !27, identifier: "d785942d6e728cf8ed28d4d1a571b7a3", discriminator: !7611)
!7598 = !{!7599, !7607}
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !7597, file: !2, baseType: !7600, size: 192, align: 64, extraData: i64 0)
!7600 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !7595, file: !2, size: 192, align: 64, elements: !27, templateParams: !7601, identifier: "4d71821a6a04b7dadd5f931d25e98cb2")
!7601 = !{!7602}
!7602 = !DITemplateTypeParameter(name: "T", type: !7603)
!7603 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)", file: !2, size: 192, align: 64, elements: !7604, templateParams: !27, identifier: "c358a41279bc49b48121f0f71b1b3c8")
!7604 = !{!7605, !7606}
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7603, file: !2, baseType: !48, size: 64, align: 64)
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !7603, file: !2, baseType: !2182, size: 128, align: 64, offset: 64)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !7597, file: !2, baseType: !7608, size: 192, align: 64)
!7608 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !7595, file: !2, size: 192, align: 64, elements: !7609, templateParams: !7601, identifier: "3a54c5b1a06a194b358330f440d65fe5")
!7609 = !{!7610}
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7608, file: !2, baseType: !7603, size: 192, align: 64)
!7611 = !DIDerivedType(tag: DW_TAG_member, scope: !7595, file: !2, baseType: !71, size: 64, align: 64, offset: 128, flags: DIFlagArtificial)
!7612 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::alloc::Global", baseType: !61, size: 64, align: 64, dwarfAddressSpace: 0)
!7613 = !{!7614, !7615, !7616, !7617, !7619, !7634, !7636, !7651, !7653, !7655, !7657, !7658, !7662, !7663}
!7614 = !DILocalVariable(name: "new_layout", arg: 1, scope: !7591, file: !7592, line: 449, type: !5632)
!7615 = !DILocalVariable(name: "current_memory", arg: 2, scope: !7591, file: !7592, line: 450, type: !7595)
!7616 = !DILocalVariable(name: "alloc", arg: 3, scope: !7591, file: !7592, line: 451, type: !7612)
!7617 = !DILocalVariable(name: "new_layout", scope: !7618, file: !7592, line: 457, type: !2182, align: 8)
!7618 = distinct !DILexicalBlock(scope: !7591, file: !7592, line: 457, column: 5)
!7619 = !DILocalVariable(name: "residual", scope: !7620, file: !7592, line: 457, type: !7621, align: 8)
!7620 = distinct !DILexicalBlock(scope: !7591, file: !7592, line: 457, column: 62)
!7621 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>", scope: !877, file: !2, size: 128, align: 64, elements: !7622, templateParams: !27, identifier: "5ef5f21a6f46a0206241b0c7f330dfa3")
!7622 = !{!7623}
!7623 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7621, file: !2, size: 128, align: 64, elements: !7624, templateParams: !27, identifier: "cb4858a3f71ae3f451b3ee0e26a669a0")
!7624 = !{!7625, !7630}
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7623, file: !2, baseType: !7626, size: 128, align: 64)
!7626 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7621, file: !2, size: 128, align: 64, elements: !7627, templateParams: !7629, identifier: "416344365d509c704ad8ffe5dcfb70fa")
!7627 = !{!7628}
!7628 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7626, file: !2, baseType: !2329, align: 8)
!7629 = !{!2334, !5598}
!7630 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7623, file: !2, baseType: !7631, size: 128, align: 64)
!7631 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7621, file: !2, size: 128, align: 64, elements: !7632, templateParams: !7629, identifier: "554770741a2c8057e7f8529a99308bf0")
!7632 = !{!7633}
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7631, file: !2, baseType: !2172, size: 128, align: 64)
!7634 = !DILocalVariable(name: "val", scope: !7635, file: !7592, line: 457, type: !2182, align: 8)
!7635 = distinct !DILexicalBlock(scope: !7591, file: !7592, line: 457, column: 22)
!7636 = !DILocalVariable(name: "residual", scope: !7637, file: !7592, line: 459, type: !7638, align: 8)
!7637 = distinct !DILexicalBlock(scope: !7618, file: !7592, line: 459, column: 35)
!7638 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveError>", scope: !877, file: !2, size: 128, align: 64, elements: !7639, templateParams: !27, identifier: "c0cf86a3acbcbe62e1045ffe1b8697")
!7639 = !{!7640}
!7640 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7638, file: !2, size: 128, align: 64, elements: !7641, templateParams: !27, identifier: "542941ded386c5d0b8832b89b5bc0159")
!7641 = !{!7642, !7647}
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7640, file: !2, baseType: !7643, size: 128, align: 64)
!7643 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7638, file: !2, size: 128, align: 64, elements: !7644, templateParams: !7646, identifier: "172bc5836ee47c35d518a78511939b12")
!7644 = !{!7645}
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7643, file: !2, baseType: !2329, align: 8)
!7646 = !{!2334, !5537}
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7640, file: !2, baseType: !7648, size: 128, align: 64)
!7648 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7638, file: !2, size: 128, align: 64, elements: !7649, templateParams: !7646, identifier: "adf3f686a95f61b9c3558b4df539adb8")
!7649 = !{!7650}
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7648, file: !2, baseType: !2169, size: 128, align: 64)
!7651 = !DILocalVariable(name: "val", scope: !7652, file: !7592, line: 459, type: !7, align: 1)
!7652 = distinct !DILexicalBlock(scope: !7618, file: !7592, line: 459, column: 5)
!7653 = !DILocalVariable(name: "memory", scope: !7654, file: !7592, line: 461, type: !5506, align: 8)
!7654 = distinct !DILexicalBlock(scope: !7618, file: !7592, line: 461, column: 5)
!7655 = !DILocalVariable(name: "ptr", scope: !7656, file: !7592, line: 461, type: !48, align: 8)
!7656 = distinct !DILexicalBlock(scope: !7618, file: !7592, line: 461, column: 66)
!7657 = !DILocalVariable(name: "old_layout", scope: !7656, file: !7592, line: 461, type: !2182, align: 8)
!7658 = !DILocalVariable(name: "left_val", scope: !7659, file: !7592, line: 462, type: !556, align: 8)
!7659 = !DILexicalBlockFile(scope: !7660, file: !7592, discriminator: 0)
!7660 = distinct !DILexicalBlock(scope: !7656, file: !7661, line: 39, column: 13)
!7661 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "92818cc67b0fce20f16574f7676a5426")
!7662 = !DILocalVariable(name: "right_val", scope: !7659, file: !7592, line: 462, type: !556, align: 8)
!7663 = !DILocalVariable(name: "kind", scope: !7664, file: !7592, line: 462, type: !492, align: 1)
!7664 = !DILexicalBlockFile(scope: !7665, file: !7592, discriminator: 0)
!7665 = distinct !DILexicalBlock(scope: !7660, file: !7661, line: 41, column: 21)
!7666 = !{!64}
!7667 = !DILocation(line: 449, column: 5, scope: !7591)
!7668 = !DILocation(line: 450, column: 5, scope: !7591)
!7669 = !DILocation(line: 451, column: 5, scope: !7591)
!7670 = !DILocation(line: 457, column: 9, scope: !7618)
!7671 = !DILocalVariable(name: "self", scope: !7672, file: !7592, line: 457, type: !5651, align: 8)
!7672 = !DILexicalBlockFile(scope: !7673, file: !7592, discriminator: 0)
!7673 = distinct !DISubprogram(name: "branch<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h0ab641370d170e52E", scope: !3016, file: !2357, line: 2117, type: !7674, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5659, retainedNodes: !7692)
!7674 = !DISubroutineType(types: !7675)
!7675 = !{!7676, !5651}
!7676 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", scope: !3020, file: !2, size: 192, align: 64, elements: !7677, templateParams: !27, identifier: "30c77f8de40d27cc25bb1f117e102368")
!7677 = !{!7678}
!7678 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7676, file: !2, size: 192, align: 64, elements: !7679, templateParams: !27, identifier: "873dd87a14009e5aa4571f77c2255abd", discriminator: !7691)
!7679 = !{!7680, !7687}
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !7678, file: !2, baseType: !7681, size: 192, align: 64, extraData: i64 0)
!7681 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !7676, file: !2, size: 192, align: 64, elements: !7682, templateParams: !7684, identifier: "44b658dc6aeebfb637fc0f71177a37ae")
!7682 = !{!7683}
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7681, file: !2, baseType: !2182, size: 128, align: 64, offset: 64)
!7684 = !{!7685, !7686}
!7685 = !DITemplateTypeParameter(name: "B", type: !7621)
!7686 = !DITemplateTypeParameter(name: "C", type: !2182)
!7687 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !7678, file: !2, baseType: !7688, size: 192, align: 64, extraData: i64 1)
!7688 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !7676, file: !2, size: 192, align: 64, elements: !7689, templateParams: !7684, identifier: "a45e3c8f49f3878b531df9d7bb0c1ddb")
!7689 = !{!7690}
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7688, file: !2, baseType: !7621, size: 128, align: 64, offset: 64)
!7691 = !DIDerivedType(tag: DW_TAG_member, scope: !7676, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!7692 = !{!7671, !7693, !7696}
!7693 = !DILocalVariable(name: "v", scope: !7694, file: !7592, line: 457, type: !2182, align: 8)
!7694 = !DILexicalBlockFile(scope: !7695, file: !7592, discriminator: 0)
!7695 = distinct !DILexicalBlock(scope: !7673, file: !2357, line: 2119, column: 13)
!7696 = !DILocalVariable(name: "e", scope: !7697, file: !7592, line: 457, type: !2172, align: 8)
!7697 = !DILexicalBlockFile(scope: !7698, file: !7592, discriminator: 0)
!7698 = distinct !DILexicalBlock(scope: !7673, file: !2357, line: 2120, column: 13)
!7699 = !DILocation(line: 457, column: 22, scope: !7672, inlinedAt: !7700)
!7700 = !DILocation(line: 457, column: 22, scope: !7591)
!7701 = !DILocalVariable(name: "residual", scope: !7702, file: !7592, line: 457, type: !7621, align: 8)
!7702 = !DILexicalBlockFile(scope: !7703, file: !7592, discriminator: 0)
!7703 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h7d493f8505fe73faE", scope: !2358, file: !2357, line: 2132, type: !7704, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7710, retainedNodes: !7706)
!7704 = !DISubroutineType(types: !7705)
!7705 = !{!5528, !7621, !508}
!7706 = !{!7701, !7707}
!7707 = !DILocalVariable(name: "e", scope: !7708, file: !7592, line: 457, type: !2172, align: 8)
!7708 = !DILexicalBlockFile(scope: !7709, file: !7592, discriminator: 0)
!7709 = distinct !DILexicalBlock(scope: !7703, file: !2357, line: 2134, column: 13)
!7710 = !{!5518, !5598, !5556}
!7711 = !DILocation(line: 457, column: 22, scope: !7702, inlinedAt: !7712)
!7712 = !DILocation(line: 457, column: 22, scope: !7620)
!7713 = !DILocalVariable(name: "self", scope: !7714, file: !7592, line: 459, type: !5573, align: 8)
!7714 = !DILexicalBlockFile(scope: !7715, file: !7592, discriminator: 0)
!7715 = distinct !DISubprogram(name: "branch<(), alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hed51012ee83e75efE", scope: !3016, file: !2357, line: 2117, type: !7716, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5581, retainedNodes: !7734)
!7716 = !DISubroutineType(types: !7717)
!7717 = !{!7718, !5573}
!7718 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, ()>", scope: !3020, file: !2, size: 128, align: 64, elements: !7719, templateParams: !27, identifier: "dd182185d8f5b2b7cb5665cc5c5ccb07")
!7719 = !{!7720}
!7720 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7718, file: !2, size: 128, align: 64, elements: !7721, templateParams: !27, identifier: "57751adeae8e77576883f29d0a97ac09", discriminator: !7733)
!7721 = !{!7722, !7729}
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !7720, file: !2, baseType: !7723, size: 128, align: 64, extraData: i64 -9223372036854775807)
!7723 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !7718, file: !2, size: 128, align: 64, elements: !7724, templateParams: !7726, identifier: "35a87d623a367fdaec857f7d914f3ad9")
!7724 = !{!7725}
!7725 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7723, file: !2, baseType: !7, align: 8)
!7726 = !{!7727, !7728}
!7727 = !DITemplateTypeParameter(name: "B", type: !7638)
!7728 = !DITemplateTypeParameter(name: "C", type: !7)
!7729 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !7720, file: !2, baseType: !7730, size: 128, align: 64)
!7730 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !7718, file: !2, size: 128, align: 64, elements: !7731, templateParams: !7726, identifier: "f5790c13a1dcecaf1cf858de99ad1734")
!7731 = !{!7732}
!7732 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7730, file: !2, baseType: !7638, size: 128, align: 64)
!7733 = !DIDerivedType(tag: DW_TAG_member, scope: !7718, file: !2, baseType: !71, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!7734 = !{!7713, !7735, !7738}
!7735 = !DILocalVariable(name: "v", scope: !7736, file: !7592, line: 459, type: !7, align: 1)
!7736 = !DILexicalBlockFile(scope: !7737, file: !7592, discriminator: 0)
!7737 = distinct !DILexicalBlock(scope: !7715, file: !2357, line: 2119, column: 13)
!7738 = !DILocalVariable(name: "e", scope: !7739, file: !7592, line: 459, type: !2169, align: 8)
!7739 = !DILexicalBlockFile(scope: !7740, file: !7592, discriminator: 0)
!7740 = distinct !DILexicalBlock(scope: !7715, file: !2357, line: 2120, column: 13)
!7741 = !DILocation(line: 459, column: 5, scope: !7714, inlinedAt: !7742)
!7742 = !DILocation(line: 459, column: 5, scope: !7618)
!7743 = !DILocalVariable(name: "residual", scope: !7744, file: !7592, line: 459, type: !7638, align: 8)
!7744 = !DILexicalBlockFile(scope: !7745, file: !7592, discriminator: 0)
!7745 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h9cc403b864f5c611E", scope: !2358, file: !2357, line: 2132, type: !7746, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7752, retainedNodes: !7748)
!7746 = !DISubroutineType(types: !7747)
!7747 = !{!5528, !7638, !508}
!7748 = !{!7743, !7749}
!7749 = !DILocalVariable(name: "e", scope: !7750, file: !7592, line: 459, type: !2169, align: 8)
!7750 = !DILexicalBlockFile(scope: !7751, file: !7592, discriminator: 0)
!7751 = distinct !DILexicalBlock(scope: !7745, file: !2357, line: 2134, column: 13)
!7752 = !{!5518, !5537, !5556}
!7753 = !DILocation(line: 459, column: 5, scope: !7744, inlinedAt: !7754)
!7754 = !DILocation(line: 459, column: 5, scope: !7637)
!7755 = !DILocation(line: 459, column: 5, scope: !7652)
!7756 = !DILocation(line: 461, column: 9, scope: !7654)
!7757 = !DILocation(line: 461, column: 36, scope: !7656)
!7758 = !DILocation(line: 459, column: 5, scope: !7736, inlinedAt: !7742)
!7759 = !DILocalVariable(name: "self", scope: !7760, file: !7592, line: 465, type: !6339, align: 8)
!7760 = !DILexicalBlockFile(scope: !7761, file: !7592, discriminator: 0)
!7761 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h927976e8eacb929eE", scope: !6339, file: !6338, line: 82, type: !6342, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7762)
!7762 = !{!7759}
!7763 = !DILocation(line: 465, column: 32, scope: !7760, inlinedAt: !7764)
!7764 = !DILocation(line: 131, column: 9, scope: !7765, inlinedAt: !7769)
!7765 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h7ebff2317e765fc5E", scope: !2182, file: !6127, line: 130, type: !6348, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7766)
!7766 = !{!7767}
!7767 = !DILocalVariable(name: "self", scope: !7768, file: !7592, line: 465, type: !5547, align: 8)
!7768 = !DILexicalBlockFile(scope: !7765, file: !7592, discriminator: 0)
!7769 = !DILocation(line: 465, column: 32, scope: !7656)
!7770 = !DILocalVariable(name: "self", scope: !7771, file: !7592, line: 465, type: !2188, align: 8)
!7771 = !DILexicalBlockFile(scope: !7772, file: !7592, discriminator: 0)
!7772 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h2c6ab0fa33443001E", scope: !2188, file: !6138, line: 39, type: !6364, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7773)
!7773 = !{!7770}
!7774 = !DILocation(line: 465, column: 32, scope: !7771, inlinedAt: !7764)
!7775 = !DILocalVariable(name: "self", scope: !7776, file: !7592, line: 465, type: !6339, align: 8)
!7776 = !DILexicalBlockFile(scope: !7777, file: !7592, discriminator: 0)
!7777 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h927976e8eacb929eE", scope: !6339, file: !6338, line: 82, type: !6342, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7778)
!7778 = !{!7775}
!7779 = !DILocation(line: 465, column: 54, scope: !7776, inlinedAt: !7780)
!7780 = !DILocation(line: 131, column: 9, scope: !7781, inlinedAt: !7785)
!7781 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h7ebff2317e765fc5E", scope: !2182, file: !6127, line: 130, type: !6348, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7782)
!7782 = !{!7783}
!7783 = !DILocalVariable(name: "self", scope: !7784, file: !7592, line: 465, type: !5547, align: 8)
!7784 = !DILexicalBlockFile(scope: !7781, file: !7592, discriminator: 0)
!7785 = !DILocation(line: 465, column: 54, scope: !7656)
!7786 = !DILocalVariable(name: "self", scope: !7787, file: !7592, line: 465, type: !2188, align: 8)
!7787 = !DILexicalBlockFile(scope: !7788, file: !7592, discriminator: 0)
!7788 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h2c6ab0fa33443001E", scope: !2188, file: !6138, line: 39, type: !6364, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7789)
!7789 = !{!7786}
!7790 = !DILocation(line: 465, column: 54, scope: !7787, inlinedAt: !7780)
!7791 = !DILocation(line: 457, column: 22, scope: !7694, inlinedAt: !7700)
!7792 = !DILocation(line: 457, column: 22, scope: !7697, inlinedAt: !7700)
!7793 = !DILocation(line: 457, column: 22, scope: !7635)
!7794 = !DILocation(line: 459, column: 5, scope: !7795, inlinedAt: !7742)
!7795 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17h18c8613dcd608015E", scope: !40, file: !7592, line: 505, type: !7796, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7798)
!7796 = !DISubroutineType(types: !7797)
!7797 = !{!5573, !9}
!7798 = !{!7799}
!7799 = !DILocalVariable(name: "alloc_size", scope: !7795, file: !7592, line: 459, type: !9, align: 8)
!7800 = !DILocation(line: 457, column: 62, scope: !7591)
!7801 = !DILocation(line: 457, column: 62, scope: !7620)
!7802 = !DILocation(line: 457, column: 22, scope: !7708, inlinedAt: !7712)
!7803 = !DILocalVariable(name: "kind", scope: !7804, file: !7592, line: 457, type: !2172, align: 8)
!7804 = !DILexicalBlockFile(scope: !7805, file: !7592, discriminator: 0)
!7805 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h4602960108bdc8f3E", scope: !2165, file: !2164, line: 116, type: !2167, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7806)
!7806 = !{!7803}
!7807 = !DILocation(line: 457, column: 22, scope: !7804, inlinedAt: !7808)
!7808 = !DILocation(line: 2134, column: 27, scope: !7709, inlinedAt: !7712)
!7809 = !DILocation(line: 1, column: 1, scope: !7810)
!7810 = !DILexicalBlockFile(scope: !7591, file: !6833, discriminator: 0)
!7811 = !DILocation(line: 473, column: 2, scope: !7591)
!7812 = !DILocation(line: 459, column: 5, scope: !7739, inlinedAt: !7742)
!7813 = !DILocation(line: 461, column: 25, scope: !7656)
!7814 = !DILocation(line: 459, column: 35, scope: !7618)
!7815 = !DILocation(line: 459, column: 35, scope: !7637)
!7816 = !DILocation(line: 459, column: 5, scope: !7750, inlinedAt: !7754)
!7817 = !DILocation(line: 1, column: 1, scope: !7818)
!7818 = !DILexicalBlockFile(scope: !7618, file: !6833, discriminator: 0)
!7819 = !DILocation(line: 461, column: 31, scope: !7656)
!7820 = !DILocation(line: 465, column: 32, scope: !7768, inlinedAt: !7769)
!7821 = !DILocalVariable(name: "n", scope: !7822, file: !7592, line: 465, type: !9, align: 8)
!7822 = !DILexicalBlockFile(scope: !7823, file: !7592, discriminator: 0)
!7823 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17haa5ebe932de09af5E", scope: !6339, file: !6338, line: 56, type: !6414, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7824)
!7824 = !{!7821, !7825}
!7825 = !DILocalVariable(name: "runtime", scope: !7826, file: !7592, line: 465, type: !6420, align: 8)
!7826 = !DILexicalBlockFile(scope: !7827, file: !7592, discriminator: 0)
!7827 = distinct !DILexicalBlock(scope: !7823, file: !549, line: 2336, column: 13)
!7828 = !DILocation(line: 465, column: 32, scope: !7822, inlinedAt: !7829)
!7829 = !DILocation(line: 41, column: 18, scope: !7772, inlinedAt: !7764)
!7830 = !DILocation(line: 465, column: 54, scope: !7784, inlinedAt: !7785)
!7831 = !DILocalVariable(name: "n", scope: !7832, file: !7592, line: 465, type: !9, align: 8)
!7832 = !DILexicalBlockFile(scope: !7833, file: !7592, discriminator: 0)
!7833 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17haa5ebe932de09af5E", scope: !6339, file: !6338, line: 56, type: !6414, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7834)
!7834 = !{!7831, !7835}
!7835 = !DILocalVariable(name: "runtime", scope: !7836, file: !7592, line: 465, type: !6420, align: 8)
!7836 = !DILexicalBlockFile(scope: !7837, file: !7592, discriminator: 0)
!7837 = distinct !DILexicalBlock(scope: !7833, file: !549, line: 2336, column: 13)
!7838 = !DILocation(line: 465, column: 54, scope: !7832, inlinedAt: !7839)
!7839 = !DILocation(line: 41, column: 18, scope: !7788, inlinedAt: !7780)
!7840 = !DILocation(line: 465, column: 13, scope: !7656)
!7841 = !DILocation(line: 469, column: 24, scope: !7618)
!7842 = !DILocation(line: 469, column: 9, scope: !7618)
!7843 = !DILocation(line: 461, column: 18, scope: !7618)
!7844 = !DILocation(line: 472, column: 5, scope: !7654)
!7845 = !DILocation(line: 472, column: 20, scope: !7654)
!7846 = !DILocation(line: 466, column: 29, scope: !7656)
!7847 = !DILocation(line: 466, column: 41, scope: !7656)
!7848 = !DILocation(line: 466, column: 13, scope: !7656)
!7849 = distinct !DISubprogram(name: "{closure#0}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h07d6da8a7107da5bE", scope: !5544, file: !7592, line: 457, type: !7850, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7666, retainedNodes: !7852)
!7850 = !DISubroutineType(types: !7851)
!7851 = !{!2172, !5665, !5643}
!7852 = !{!7853, !7854}
!7853 = !DILocalVariable(arg: 1, scope: !7849, file: !7592, line: 457, type: !5665)
!7854 = !DILocalVariable(arg: 2, scope: !7849, file: !7592, line: 457, type: !5643)
!7855 = !DILocation(line: 457, column: 41, scope: !7849)
!7856 = !DILocation(line: 457, column: 42, scope: !7849)
!7857 = !DILocation(line: 457, column: 45, scope: !7849)
!7858 = !DILocation(line: 457, column: 44, scope: !7849)
!7859 = distinct !DISubprogram(name: "{closure#1}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h19ea93a086e7b9cdE", scope: !5544, file: !7592, line: 472, type: !7860, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7666, retainedNodes: !7862)
!7860 = !DISubroutineType(types: !7861)
!7861 = !{!2169, !5543, !5520}
!7862 = !{!7863, !7864}
!7863 = !DILocalVariable(name: "new_layout", scope: !7859, file: !7592, line: 457, type: !2182, align: 8)
!7864 = !DILocalVariable(arg: 2, scope: !7859, file: !7592, line: 472, type: !5520)
!7865 = !DILocation(line: 457, column: 9, scope: !7859)
!7866 = !DILocation(line: 472, column: 21, scope: !7859)
!7867 = !DILocation(line: 472, column: 45, scope: !7859)
!7868 = !DILocation(line: 472, column: 24, scope: !7859)
!7869 = !DILocation(line: 472, column: 23, scope: !7859)
!7870 = distinct !DISubprogram(name: "handle_reserve", linkageName: "_ZN5alloc7raw_vec14handle_reserve17h8a1fc2a01b87d06fE", scope: !40, file: !7592, line: 487, type: !7871, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7873)
!7871 = !DISubroutineType(types: !7872)
!7872 = !{null, !5573}
!7873 = !{!7874, !7875}
!7874 = !DILocalVariable(name: "result", arg: 1, scope: !7870, file: !7592, line: 487, type: !5573)
!7875 = !DILocalVariable(name: "layout", scope: !7876, file: !7592, line: 490, type: !2182, align: 8)
!7876 = distinct !DILexicalBlock(scope: !7870, file: !7592, line: 490, column: 9)
!7877 = !DILocation(line: 487, column: 19, scope: !7870)
!7878 = !DILocation(line: 488, column: 11, scope: !7870)
!7879 = !DILocation(line: 488, column: 5, scope: !7870)
!7880 = !DILocation(line: 493, column: 2, scope: !7870)
!7881 = !DILocation(line: 489, column: 34, scope: !7870)
!7882 = !DILocation(line: 490, column: 26, scope: !7870)
!7883 = !DILocation(line: 490, column: 26, scope: !7876)
!7884 = !DILocation(line: 490, column: 43, scope: !7876)
!7885 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hb761c6a74ff5d3c3E", scope: !5605, file: !7592, line: 488, type: !7886, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7888)
!7886 = !DISubroutineType(types: !7887)
!7887 = !{!2172, !5604, !2169}
!7888 = !{!7889, !7890}
!7889 = !DILocalVariable(name: "e", arg: 2, scope: !7885, file: !7592, line: 488, type: !2169)
!7890 = !DILocalVariable(arg: 1, scope: !7885, file: !7592, line: 488, type: !5604)
!7891 = !DILocation(line: 488, column: 26, scope: !7885)
!7892 = !DILocation(line: 488, column: 27, scope: !7885)
!7893 = !DILocation(line: 488, column: 30, scope: !7885)
!7894 = !DILocalVariable(name: "self", scope: !7895, file: !7592, line: 488, type: !7899, align: 8)
!7895 = !DILexicalBlockFile(scope: !7896, file: !7592, discriminator: 0)
!7896 = distinct !DISubprogram(name: "kind", linkageName: "_ZN5alloc11collections15TryReserveError4kind17h9eaa9ffb971564d8E", scope: !2169, file: !2164, line: 74, type: !7897, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7900)
!7897 = !DISubroutineType(types: !7898)
!7898 = !{!2172, !7899}
!7899 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveError", baseType: !2169, size: 64, align: 64, dwarfAddressSpace: 0)
!7900 = !{!7894}
!7901 = !DILocation(line: 488, column: 30, scope: !7895, inlinedAt: !7893)
!7902 = !DILocalVariable(name: "self", scope: !7903, file: !7592, line: 488, type: !7908, align: 8)
!7903 = !DILexicalBlockFile(scope: !7904, file: !7592, discriminator: 0)
!7904 = distinct !DISubprogram(name: "clone", linkageName: "_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17hd594df275bf8ab54E", scope: !7905, file: !2164, line: 80, type: !7906, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7909)
!7905 = !DINamespace(name: "{impl#10}", scope: !2166)
!7906 = !DISubroutineType(types: !7907)
!7907 = !{!2172, !7908}
!7908 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveErrorKind", baseType: !2172, size: 64, align: 64, dwarfAddressSpace: 0)
!7909 = !{!7902, !7910, !7913}
!7910 = !DILocalVariable(name: "__self_0", scope: !7911, file: !7592, line: 488, type: !5547, align: 8)
!7911 = !DILexicalBlockFile(scope: !7912, file: !7592, discriminator: 0)
!7912 = distinct !DILexicalBlock(scope: !7904, file: !2164, line: 80, column: 10)
!7913 = !DILocalVariable(name: "__self_1", scope: !7911, file: !7592, line: 488, type: !7914, align: 8)
!7914 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7915 = !DILocation(line: 488, column: 30, scope: !7903, inlinedAt: !7916)
!7916 = !DILocation(line: 75, column: 9, scope: !7896, inlinedAt: !7893)
!7917 = !DILocation(line: 488, column: 30, scope: !7911, inlinedAt: !7916)
!7918 = !DILocalVariable(name: "self", scope: !7919, file: !7592, line: 488, type: !5547, align: 8)
!7919 = !DILexicalBlockFile(scope: !7920, file: !7592, discriminator: 0)
!7920 = distinct !DISubprogram(name: "clone", linkageName: "_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17hc2c8d0d462226e3bE", scope: !7921, file: !6127, line: 35, type: !7922, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7924)
!7921 = !DINamespace(name: "{impl#3}", scope: !2183)
!7922 = !DISubroutineType(types: !7923)
!7923 = !{!2182, !5547}
!7924 = !{!7918}
!7925 = !DILocation(line: 488, column: 30, scope: !7919, inlinedAt: !7926)
!7926 = !DILocation(line: 94, column: 9, scope: !7912, inlinedAt: !7916)
!7927 = !DILocation(line: 488, column: 29, scope: !7885)
!7928 = distinct !DISubprogram(name: "needs_to_grow<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h5f98633d17b03dfaE", scope: !39, file: !7592, line: 360, type: !7929, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !63, retainedNodes: !7932)
!7929 = !DISubroutineType(types: !7930)
!7930 = !{!324, !7931, !9, !9}
!7931 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !39, size: 64, align: 64, dwarfAddressSpace: 0)
!7932 = !{!7933, !7934, !7935}
!7933 = !DILocalVariable(name: "self", arg: 1, scope: !7928, file: !7592, line: 360, type: !7931)
!7934 = !DILocalVariable(name: "len", arg: 2, scope: !7928, file: !7592, line: 360, type: !9)
!7935 = !DILocalVariable(name: "additional", arg: 3, scope: !7928, file: !7592, line: 360, type: !9)
!7936 = !DILocation(line: 360, column: 22, scope: !7928)
!7937 = !DILocation(line: 360, column: 29, scope: !7928)
!7938 = !DILocation(line: 360, column: 41, scope: !7928)
!7939 = !DILocalVariable(name: "self", scope: !7940, file: !7592, line: 361, type: !9, align: 8)
!7940 = !DILexicalBlockFile(scope: !7941, file: !7592, discriminator: 0)
!7941 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h5e8f57e42e99a91fE", scope: !4430, file: !4429, line: 1231, type: !3704, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !7942)
!7942 = !{!7939, !7943}
!7943 = !DILocalVariable(name: "rhs", scope: !7940, file: !7592, line: 361, type: !9, align: 8)
!7944 = !DILocation(line: 361, column: 22, scope: !7940, inlinedAt: !7945)
!7945 = !DILocation(line: 361, column: 22, scope: !7928)
!7946 = !DILocalVariable(name: "self", scope: !7947, file: !7592, line: 361, type: !7931, align: 8)
!7947 = distinct !DISubprogram(name: "capacity<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17hbd61fad25395321aE", scope: !39, file: !7592, line: 231, type: !7948, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !63, retainedNodes: !7950)
!7948 = !DISubroutineType(types: !7949)
!7949 = !{!9, !7931}
!7950 = !{!7946}
!7951 = !DILocation(line: 361, column: 22, scope: !7947, inlinedAt: !7945)
!7952 = !DILocation(line: 361, column: 51, scope: !7928)
!7953 = !DILocation(line: 361, column: 9, scope: !7928)
!7954 = !DILocation(line: 362, column: 6, scope: !7928)
!7955 = distinct !DISubprogram(name: "grow_amortized<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hf3a653a19cd8cfe1E", scope: !39, file: !7592, line: 379, type: !7956, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !63, retainedNodes: !7959)
!7956 = !DISubroutineType(types: !7957)
!7957 = !{!5573, !7958, !9, !9}
!7958 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !39, size: 64, align: 64, dwarfAddressSpace: 0)
!7959 = !{!7960, !7961, !7962, !7963, !7965, !7967, !7969, !7971, !7973, !7975, !7977, !7979}
!7960 = !DILocalVariable(name: "self", arg: 1, scope: !7955, file: !7592, line: 379, type: !7958)
!7961 = !DILocalVariable(name: "len", arg: 2, scope: !7955, file: !7592, line: 379, type: !9)
!7962 = !DILocalVariable(name: "additional", arg: 3, scope: !7955, file: !7592, line: 379, type: !9)
!7963 = !DILocalVariable(name: "required_cap", scope: !7964, file: !7592, line: 390, type: !9, align: 8)
!7964 = distinct !DILexicalBlock(scope: !7955, file: !7592, line: 390, column: 9)
!7965 = !DILocalVariable(name: "residual", scope: !7966, file: !7592, line: 390, type: !7621, align: 8)
!7966 = distinct !DILexicalBlock(scope: !7955, file: !7592, line: 390, column: 79)
!7967 = !DILocalVariable(name: "val", scope: !7968, file: !7592, line: 390, type: !9, align: 8)
!7968 = distinct !DILexicalBlock(scope: !7955, file: !7592, line: 390, column: 28)
!7969 = !DILocalVariable(name: "cap", scope: !7970, file: !7592, line: 394, type: !9, align: 8)
!7970 = distinct !DILexicalBlock(scope: !7964, file: !7592, line: 394, column: 9)
!7971 = !DILocalVariable(name: "cap", scope: !7972, file: !7592, line: 395, type: !9, align: 8)
!7972 = distinct !DILexicalBlock(scope: !7970, file: !7592, line: 395, column: 9)
!7973 = !DILocalVariable(name: "new_layout", scope: !7974, file: !7592, line: 397, type: !5632, align: 8)
!7974 = distinct !DILexicalBlock(scope: !7972, file: !7592, line: 397, column: 9)
!7975 = !DILocalVariable(name: "ptr", scope: !7976, file: !7592, line: 400, type: !5514, align: 8)
!7976 = distinct !DILexicalBlock(scope: !7974, file: !7592, line: 400, column: 9)
!7977 = !DILocalVariable(name: "residual", scope: !7978, file: !7592, line: 400, type: !7638, align: 8)
!7978 = distinct !DILexicalBlock(scope: !7974, file: !7592, line: 400, column: 82)
!7979 = !DILocalVariable(name: "val", scope: !7980, file: !7592, line: 400, type: !5514, align: 8)
!7980 = distinct !DILexicalBlock(scope: !7974, file: !7592, line: 400, column: 19)
!7981 = !DILocation(line: 379, column: 23, scope: !7955)
!7982 = !DILocation(line: 379, column: 34, scope: !7955)
!7983 = !DILocation(line: 379, column: 46, scope: !7955)
!7984 = !DILocalVariable(name: "self", scope: !7985, file: !7592, line: 390, type: !8004, align: 8)
!7985 = !DILexicalBlockFile(scope: !7986, file: !7592, discriminator: 0)
!7986 = distinct !DISubprogram(name: "branch<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7985400850bf8fc9E", scope: !3016, file: !2357, line: 2117, type: !7987, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !8012, retainedNodes: !8018)
!7987 = !DISubroutineType(types: !7988)
!7988 = !{!7989, !8004}
!7989 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", scope: !3020, file: !2, size: 192, align: 64, elements: !7990, templateParams: !27, identifier: "aaa47d4c01b9e814e1128564379fb1ed")
!7990 = !{!7991}
!7991 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7989, file: !2, size: 192, align: 64, elements: !7992, templateParams: !27, identifier: "52bc498f97dcf0aebe4be722096289fa", discriminator: !8003)
!7992 = !{!7993, !7999}
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !7991, file: !2, baseType: !7994, size: 192, align: 64, extraData: i64 0)
!7994 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !7989, file: !2, size: 192, align: 64, elements: !7995, templateParams: !7997, identifier: "aa7cd1170a8c6991d015bac63ac068a0")
!7995 = !{!7996}
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7994, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!7997 = !{!7685, !7998}
!7998 = !DITemplateTypeParameter(name: "C", type: !9)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !7991, file: !2, baseType: !8000, size: 192, align: 64, extraData: i64 1)
!8000 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !7989, file: !2, size: 192, align: 64, elements: !8001, templateParams: !7997, identifier: "364459b0de7a7982990d34cdf2f986eb")
!8001 = !{!8002}
!8002 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8000, file: !2, baseType: !7621, size: 128, align: 64, offset: 64)
!8003 = !DIDerivedType(tag: DW_TAG_member, scope: !7989, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!8004 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, alloc::collections::TryReserveErrorKind>", scope: !877, file: !2, size: 192, align: 64, elements: !8005, templateParams: !27, identifier: "3631237889770fa7267d5501216770d")
!8005 = !{!8006}
!8006 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8004, file: !2, size: 192, align: 64, elements: !8007, templateParams: !27, identifier: "1d1f45ee59d9f1cfc391058ed79e0cae", discriminator: !8017)
!8007 = !{!8008, !8013}
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !8006, file: !2, baseType: !8009, size: 192, align: 64, extraData: i64 0)
!8009 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !8004, file: !2, size: 192, align: 64, elements: !8010, templateParams: !8012, identifier: "e350c9849d9dffdf1ffb40e48a20f918")
!8010 = !{!8011}
!8011 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8009, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!8012 = !{!275, !5598}
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !8006, file: !2, baseType: !8014, size: 192, align: 64, extraData: i64 1)
!8014 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !8004, file: !2, size: 192, align: 64, elements: !8015, templateParams: !8012, identifier: "4805f2b2529d263fd0f1d3d0e43e54f8")
!8015 = !{!8016}
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8014, file: !2, baseType: !2172, size: 128, align: 64, offset: 64)
!8017 = !DIDerivedType(tag: DW_TAG_member, scope: !8004, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!8018 = !{!7984, !8019, !8022}
!8019 = !DILocalVariable(name: "v", scope: !8020, file: !7592, line: 390, type: !9, align: 8)
!8020 = !DILexicalBlockFile(scope: !8021, file: !7592, discriminator: 0)
!8021 = distinct !DILexicalBlock(scope: !7986, file: !2357, line: 2119, column: 13)
!8022 = !DILocalVariable(name: "e", scope: !8023, file: !7592, line: 390, type: !2172, align: 8)
!8023 = !DILexicalBlockFile(scope: !8024, file: !7592, discriminator: 0)
!8024 = distinct !DILexicalBlock(scope: !7986, file: !2357, line: 2120, column: 13)
!8025 = !DILocation(line: 390, column: 28, scope: !7985, inlinedAt: !8026)
!8026 = !DILocation(line: 390, column: 28, scope: !7955)
!8027 = !DILocalVariable(name: "self", scope: !8028, file: !7592, line: 390, type: !2697, align: 8)
!8028 = !DILexicalBlockFile(scope: !8029, file: !7592, discriminator: 0)
!8029 = distinct !DISubprogram(name: "ok_or<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h3be3fe3cc78929ecE", scope: !2697, file: !1137, line: 1051, type: !8030, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !8012, retainedNodes: !8032)
!8030 = !DISubroutineType(types: !8031)
!8031 = !{!8004, !2697, !2172}
!8032 = !{!8027, !8033, !8034}
!8033 = !DILocalVariable(name: "err", scope: !8028, file: !7592, line: 390, type: !2172, align: 8)
!8034 = !DILocalVariable(name: "v", scope: !8035, file: !7592, line: 390, type: !9, align: 8)
!8035 = !DILexicalBlockFile(scope: !8036, file: !7592, discriminator: 0)
!8036 = distinct !DILexicalBlock(scope: !8029, file: !1137, line: 1056, column: 13)
!8037 = !DILocation(line: 390, column: 28, scope: !8028, inlinedAt: !8026)
!8038 = !DILocalVariable(name: "residual", scope: !8039, file: !7592, line: 390, type: !7621, align: 8)
!8039 = !DILexicalBlockFile(scope: !8040, file: !7592, discriminator: 0)
!8040 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc922ed03a3413db6E", scope: !2358, file: !2357, line: 2132, type: !8041, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !8047, retainedNodes: !8043)
!8041 = !DISubroutineType(types: !8042)
!8042 = !{!5573, !7621, !508}
!8043 = !{!8038, !8044}
!8044 = !DILocalVariable(name: "e", scope: !8045, file: !7592, line: 390, type: !2172, align: 8)
!8045 = !DILexicalBlockFile(scope: !8046, file: !7592, discriminator: 0)
!8046 = distinct !DILexicalBlock(scope: !8040, file: !2357, line: 2134, column: 13)
!8047 = !{!115, !5598, !5556}
!8048 = !DILocation(line: 390, column: 28, scope: !8039, inlinedAt: !8049)
!8049 = !DILocation(line: 390, column: 28, scope: !7966)
!8050 = !DILocalVariable(name: "self", scope: !8051, file: !7592, line: 400, type: !5528, align: 8)
!8051 = !DILexicalBlockFile(scope: !8052, file: !7592, discriminator: 0)
!8052 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17haf7afb2c3e0a7bafE", scope: !3016, file: !2357, line: 2117, type: !8053, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5536, retainedNodes: !8069)
!8053 = !DISubroutineType(types: !8054)
!8054 = !{!8055, !5528}
!8055 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", scope: !3020, file: !2, size: 192, align: 64, elements: !8056, templateParams: !27, identifier: "79c6e5125639b127cfa81db755c4cffd")
!8056 = !{!8057}
!8057 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8055, file: !2, size: 192, align: 64, elements: !8058, templateParams: !27, identifier: "bdca6637e968c25e4fe4c2dfef1c199f", discriminator: !8068)
!8058 = !{!8059, !8064}
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !8057, file: !2, baseType: !8060, size: 192, align: 64, extraData: i64 0)
!8060 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !8055, file: !2, size: 192, align: 64, elements: !8061, templateParams: !8063, identifier: "15ba5a416f94883524aa415e9e484c18")
!8061 = !{!8062}
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8060, file: !2, baseType: !5514, size: 128, align: 64, offset: 64)
!8063 = !{!7727, !6653}
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !8057, file: !2, baseType: !8065, size: 192, align: 64, extraData: i64 1)
!8065 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !8055, file: !2, size: 192, align: 64, elements: !8066, templateParams: !8063, identifier: "e100a24ff060842f7e06542fb969c57c")
!8066 = !{!8067}
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8065, file: !2, baseType: !7638, size: 128, align: 64, offset: 64)
!8068 = !DIDerivedType(tag: DW_TAG_member, scope: !8055, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!8069 = !{!8050, !8070, !8073}
!8070 = !DILocalVariable(name: "v", scope: !8071, file: !7592, line: 400, type: !5514, align: 8)
!8071 = !DILexicalBlockFile(scope: !8072, file: !7592, discriminator: 0)
!8072 = distinct !DILexicalBlock(scope: !8052, file: !2357, line: 2119, column: 13)
!8073 = !DILocalVariable(name: "e", scope: !8074, file: !7592, line: 400, type: !2169, align: 8)
!8074 = !DILexicalBlockFile(scope: !8075, file: !7592, discriminator: 0)
!8075 = distinct !DILexicalBlock(scope: !8052, file: !2357, line: 2120, column: 13)
!8076 = !DILocation(line: 400, column: 19, scope: !8051, inlinedAt: !8077)
!8077 = !DILocation(line: 400, column: 19, scope: !7974)
!8078 = !DILocalVariable(name: "residual", scope: !8079, file: !7592, line: 400, type: !7638, align: 8)
!8079 = !DILexicalBlockFile(scope: !8080, file: !7592, discriminator: 0)
!8080 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h627735e4ccb2a007E", scope: !2358, file: !2357, line: 2132, type: !8081, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !8087, retainedNodes: !8083)
!8081 = !DISubroutineType(types: !8082)
!8082 = !{!5573, !7638, !508}
!8083 = !{!8078, !8084}
!8084 = !DILocalVariable(name: "e", scope: !8085, file: !7592, line: 400, type: !2169, align: 8)
!8085 = !DILexicalBlockFile(scope: !8086, file: !7592, discriminator: 0)
!8086 = distinct !DILexicalBlock(scope: !8080, file: !2357, line: 2134, column: 13)
!8087 = !{!115, !5537, !5556}
!8088 = !DILocation(line: 400, column: 19, scope: !8079, inlinedAt: !8089)
!8089 = !DILocation(line: 400, column: 19, scope: !7978)
!8090 = !DILocation(line: 383, column: 12, scope: !7955)
!8091 = !DILocation(line: 386, column: 24, scope: !7955)
!8092 = !DILocation(line: 390, column: 62, scope: !7955)
!8093 = !DILocation(line: 390, column: 28, scope: !8035, inlinedAt: !8026)
!8094 = !DILocation(line: 390, column: 28, scope: !8020, inlinedAt: !8026)
!8095 = !DILocation(line: 390, column: 28, scope: !8023, inlinedAt: !8026)
!8096 = !DILocation(line: 390, column: 28, scope: !7968)
!8097 = !DILocation(line: 390, column: 13, scope: !7964)
!8098 = !DILocation(line: 394, column: 28, scope: !7964)
!8099 = !DILocalVariable(name: "v1", scope: !8100, file: !7592, line: 394, type: !9, align: 8)
!8100 = !DILexicalBlockFile(scope: !8101, file: !7592, discriminator: 0)
!8101 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17hdf8417a4308fc201E", scope: !486, file: !3702, line: 1278, type: !3704, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !274, retainedNodes: !8102)
!8102 = !{!8099, !8103}
!8103 = !DILocalVariable(name: "v2", scope: !8100, file: !7592, line: 394, type: !9, align: 8)
!8104 = !DILocation(line: 394, column: 19, scope: !8100, inlinedAt: !8105)
!8105 = !DILocation(line: 394, column: 19, scope: !7964)
!8106 = !DILocation(line: 394, column: 42, scope: !7964)
!8107 = !DILocation(line: 394, column: 13, scope: !7970)
!8108 = !DILocation(line: 390, column: 79, scope: !7955)
!8109 = !DILocation(line: 390, column: 79, scope: !7966)
!8110 = !DILocation(line: 390, column: 28, scope: !8045, inlinedAt: !8049)
!8111 = !DILocalVariable(name: "kind", scope: !8112, file: !7592, line: 390, type: !2172, align: 8)
!8112 = !DILexicalBlockFile(scope: !8113, file: !7592, discriminator: 0)
!8113 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h4602960108bdc8f3E", scope: !2165, file: !2164, line: 116, type: !2167, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8114)
!8114 = !{!8111}
!8115 = !DILocation(line: 390, column: 28, scope: !8112, inlinedAt: !8116)
!8116 = !DILocation(line: 2134, column: 27, scope: !8046, inlinedAt: !8049)
!8117 = !DILocation(line: 1, column: 1, scope: !8118)
!8118 = !DILexicalBlockFile(scope: !7955, file: !6833, discriminator: 0)
!8119 = !DILocation(line: 395, column: 52, scope: !7970)
!8120 = !DILocalVariable(name: "v2", scope: !8121, file: !7592, line: 395, type: !9, align: 8)
!8121 = !DILexicalBlockFile(scope: !8122, file: !7592, discriminator: 0)
!8122 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17hdf8417a4308fc201E", scope: !486, file: !3702, line: 1278, type: !3704, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !274, retainedNodes: !8123)
!8123 = !{!8124, !8120}
!8124 = !DILocalVariable(name: "v1", scope: !8121, file: !7592, line: 395, type: !9, align: 8)
!8125 = !DILocation(line: 395, column: 19, scope: !8121, inlinedAt: !8126)
!8126 = !DILocation(line: 395, column: 19, scope: !7970)
!8127 = !DILocation(line: 395, column: 13, scope: !7972)
!8128 = !DILocation(line: 397, column: 26, scope: !7972)
!8129 = !DILocation(line: 397, column: 13, scope: !7974)
!8130 = !DILocation(line: 400, column: 43, scope: !7974)
!8131 = !DILocation(line: 400, column: 66, scope: !7974)
!8132 = !DILocation(line: 400, column: 19, scope: !8071, inlinedAt: !8077)
!8133 = !DILocation(line: 400, column: 19, scope: !8074, inlinedAt: !8077)
!8134 = !DILocation(line: 400, column: 19, scope: !7980)
!8135 = !DILocation(line: 400, column: 13, scope: !7976)
!8136 = !DILocation(line: 401, column: 9, scope: !7976)
!8137 = !DILocation(line: 400, column: 82, scope: !7974)
!8138 = !DILocation(line: 400, column: 82, scope: !7978)
!8139 = !DILocation(line: 400, column: 19, scope: !8085, inlinedAt: !8089)
!8140 = !DILocation(line: 1, column: 1, scope: !8141)
!8141 = !DILexicalBlockFile(scope: !7964, file: !6833, discriminator: 0)
!8142 = !DILocation(line: 403, column: 6, scope: !7955)
!8143 = !DILocation(line: 402, column: 9, scope: !7976)
!8144 = !DILocation(line: 386, column: 20, scope: !7955)
!8145 = distinct !DISubprogram(name: "set_ptr_and_cap<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h547b790299643953E", scope: !39, file: !7592, line: 364, type: !8146, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !63, retainedNodes: !8148)
!8146 = !DISubroutineType(types: !8147)
!8147 = !{null, !7958, !5514, !9}
!8148 = !{!8149, !8150, !8151}
!8149 = !DILocalVariable(name: "self", arg: 1, scope: !8145, file: !7592, line: 364, type: !7958)
!8150 = !DILocalVariable(name: "ptr", arg: 2, scope: !8145, file: !7592, line: 364, type: !5514)
!8151 = !DILocalVariable(name: "cap", arg: 3, scope: !8145, file: !7592, line: 364, type: !9)
!8152 = !DILocation(line: 364, column: 24, scope: !8145)
!8153 = !DILocation(line: 364, column: 35, scope: !8145)
!8154 = !DILocation(line: 364, column: 55, scope: !8145)
!8155 = !DILocalVariable(name: "self", scope: !8156, file: !7592, line: 368, type: !48, align: 8)
!8156 = !DILexicalBlockFile(scope: !8157, file: !7592, discriminator: 0)
!8157 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he85ce89b0e21db75E", scope: !48, file: !2484, line: 330, type: !6111, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !8158)
!8158 = !{!8155}
!8159 = !DILocation(line: 368, column: 51, scope: !8156, inlinedAt: !8160)
!8160 = !DILocation(line: 368, column: 51, scope: !8145)
!8161 = !DILocalVariable(name: "self", scope: !8162, file: !7592, line: 368, type: !5514, align: 8)
!8162 = !DILexicalBlockFile(scope: !8163, file: !7592, discriminator: 0)
!8163 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h4526977ca5f79aeaE", scope: !5514, file: !2484, line: 453, type: !6170, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !8165, retainedNodes: !8164)
!8164 = !{!8161}
!8165 = !{!55, !2563}
!8166 = !DILocation(line: 368, column: 51, scope: !8162, inlinedAt: !8160)
!8167 = !DILocalVariable(name: "self", scope: !8168, file: !7592, line: 368, type: !5514, align: 8)
!8168 = !DILexicalBlockFile(scope: !8169, file: !7592, discriminator: 0)
!8169 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h85f1687421c7872aE", scope: !5514, file: !2484, line: 330, type: !6177, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !8170)
!8170 = !{!8167}
!8171 = !DILocation(line: 368, column: 51, scope: !8168, inlinedAt: !8172)
!8172 = !DILocation(line: 455, column: 41, scope: !8163, inlinedAt: !8160)
!8173 = !DILocalVariable(name: "ptr", scope: !8174, file: !7592, line: 368, type: !289, align: 8)
!8174 = !DILexicalBlockFile(scope: !8175, file: !7592, discriminator: 0)
!8175 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h834e2f92abdb0d2bE", scope: !48, file: !2484, line: 196, type: !6190, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !8176)
!8176 = !{!8173}
!8177 = !DILocation(line: 368, column: 51, scope: !8174, inlinedAt: !8178)
!8178 = !DILocation(line: 455, column: 18, scope: !8163, inlinedAt: !8160)
!8179 = !DILocalVariable(name: "ptr", scope: !8180, file: !7592, line: 368, type: !289, align: 8)
!8180 = !DILexicalBlockFile(scope: !8181, file: !7592, discriminator: 0)
!8181 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hafd59587866033e5E", scope: !43, file: !6998, line: 85, type: !8182, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !8184)
!8182 = !DISubroutineType(types: !8183)
!8183 = !{!43, !289}
!8184 = !{!8179}
!8185 = !DILocation(line: 368, column: 29, scope: !8180, inlinedAt: !8186)
!8186 = !DILocation(line: 368, column: 29, scope: !8145)
!8187 = !DILocalVariable(name: "ptr", scope: !8188, file: !7592, line: 368, type: !289, align: 8)
!8188 = !DILexicalBlockFile(scope: !8189, file: !7592, discriminator: 0)
!8189 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h834e2f92abdb0d2bE", scope: !48, file: !2484, line: 196, type: !6190, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !8190)
!8190 = !{!8187}
!8191 = !DILocation(line: 368, column: 29, scope: !8188, inlinedAt: !8192)
!8192 = !DILocation(line: 87, column: 36, scope: !8181, inlinedAt: !8186)
!8193 = !DILocation(line: 368, column: 9, scope: !8145)
!8194 = !DILocation(line: 369, column: 9, scope: !8145)
!8195 = !DILocation(line: 370, column: 6, scope: !8145)
!8196 = distinct !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hb0febb4a687731a7E", scope: !39, file: !7592, line: 274, type: !8197, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !63, retainedNodes: !8199)
!8197 = !DISubroutineType(types: !8198)
!8198 = !{null, !7958, !9, !9}
!8199 = !{!8200, !8201, !8202}
!8200 = !DILocalVariable(name: "self", arg: 1, scope: !8196, file: !7592, line: 274, type: !7958)
!8201 = !DILocalVariable(name: "len", arg: 2, scope: !8196, file: !7592, line: 274, type: !9)
!8202 = !DILocalVariable(name: "additional", arg: 3, scope: !8196, file: !7592, line: 274, type: !9)
!8203 = !DILocation(line: 274, column: 20, scope: !8196)
!8204 = !DILocation(line: 274, column: 31, scope: !8196)
!8205 = !DILocation(line: 274, column: 43, scope: !8196)
!8206 = !DILocation(line: 288, column: 12, scope: !8196)
!8207 = !DILocation(line: 291, column: 6, scope: !8196)
!8208 = !DILocation(line: 289, column: 13, scope: !8196)
!8209 = !DILocation(line: 288, column: 9, scope: !8196)
!8210 = distinct !DISubprogram(name: "do_reserve_and_handle<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17ha274487d488f6a79E", scope: !8211, file: !7592, line: 280, type: !8197, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !63, retainedNodes: !8213)
!8211 = !DINamespace(name: "reserve", scope: !8212)
!8212 = !DINamespace(name: "{impl#1}", scope: !40)
!8213 = !{!8214, !8215, !8216}
!8214 = !DILocalVariable(name: "slf", arg: 1, scope: !8210, file: !7592, line: 281, type: !7958)
!8215 = !DILocalVariable(name: "len", arg: 2, scope: !8210, file: !7592, line: 282, type: !9)
!8216 = !DILocalVariable(name: "additional", arg: 3, scope: !8210, file: !7592, line: 283, type: !9)
!8217 = !DILocation(line: 281, column: 13, scope: !8210)
!8218 = !DILocation(line: 282, column: 13, scope: !8210)
!8219 = !DILocation(line: 283, column: 13, scope: !8210)
!8220 = !DILocation(line: 285, column: 28, scope: !8210)
!8221 = !DILocation(line: 285, column: 13, scope: !8210)
!8222 = !DILocation(line: 286, column: 10, scope: !8210)
!8223 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc3b1727931ad6cc2E", scope: !6155, file: !6095, line: 246, type: !8224, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8226)
!8224 = !DISubroutineType(types: !8225)
!8225 = !{null, !6158, !48, !2182}
!8226 = !{!8227, !8228, !8229}
!8227 = !DILocalVariable(name: "self", arg: 1, scope: !8223, file: !6095, line: 246, type: !6158)
!8228 = !DILocalVariable(name: "ptr", arg: 2, scope: !8223, file: !6095, line: 246, type: !48)
!8229 = !DILocalVariable(name: "layout", arg: 3, scope: !8223, file: !6095, line: 246, type: !2182)
!8230 = !DILocation(line: 246, column: 26, scope: !8223)
!8231 = !DILocation(line: 246, column: 33, scope: !8223)
!8232 = !DILocation(line: 246, column: 51, scope: !8223)
!8233 = !DILocalVariable(name: "layout", scope: !8234, file: !6095, line: 250, type: !2182, align: 8)
!8234 = distinct !DISubprogram(name: "dealloc", linkageName: "_ZN5alloc5alloc7dealloc17h2f66218e2b56972cE", scope: !62, file: !6095, line: 112, type: !8235, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8237)
!8235 = !DISubroutineType(types: !8236)
!8236 = !{null, !289, !2182}
!8237 = !{!8238, !8233}
!8238 = !DILocalVariable(name: "ptr", scope: !8234, file: !6095, line: 250, type: !289, align: 8)
!8239 = !DILocation(line: 250, column: 22, scope: !8234, inlinedAt: !8240)
!8240 = !DILocation(line: 250, column: 22, scope: !8223)
!8241 = !DILocalVariable(name: "self", scope: !8242, file: !6095, line: 250, type: !6339, align: 8)
!8242 = !DILexicalBlockFile(scope: !8243, file: !6095, discriminator: 0)
!8243 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h927976e8eacb929eE", scope: !6339, file: !6338, line: 82, type: !6342, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8244)
!8244 = !{!8241}
!8245 = !DILocation(line: 250, column: 22, scope: !8242, inlinedAt: !8246)
!8246 = !DILocation(line: 131, column: 9, scope: !8247, inlinedAt: !8251)
!8247 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h7ebff2317e765fc5E", scope: !2182, file: !6127, line: 130, type: !6348, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8248)
!8248 = !{!8249}
!8249 = !DILocalVariable(name: "self", scope: !8250, file: !6095, line: 250, type: !5547, align: 8)
!8250 = !DILexicalBlockFile(scope: !8247, file: !6095, discriminator: 0)
!8251 = !DILocation(line: 113, column: 49, scope: !8234, inlinedAt: !8240)
!8252 = !DILocalVariable(name: "self", scope: !8253, file: !6095, line: 250, type: !2188, align: 8)
!8253 = !DILexicalBlockFile(scope: !8254, file: !6095, discriminator: 0)
!8254 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h2c6ab0fa33443001E", scope: !2188, file: !6138, line: 39, type: !6364, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8255)
!8255 = !{!8252}
!8256 = !DILocation(line: 250, column: 22, scope: !8253, inlinedAt: !8246)
!8257 = !DILocation(line: 247, column: 12, scope: !8223)
!8258 = !DILocalVariable(name: "self", scope: !8259, file: !6095, line: 247, type: !5547, align: 8)
!8259 = !DILexicalBlockFile(scope: !8260, file: !6095, discriminator: 0)
!8260 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hb122e82487c9b5ecE", scope: !2182, file: !6127, line: 120, type: !6348, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8261)
!8261 = !{!8258}
!8262 = !DILocation(line: 247, column: 12, scope: !8259, inlinedAt: !8257)
!8263 = !DILocation(line: 247, column: 9, scope: !8223)
!8264 = !DILocation(line: 250, column: 30, scope: !8223)
!8265 = !DILocalVariable(name: "self", scope: !8266, file: !6095, line: 250, type: !48, align: 8)
!8266 = !DILexicalBlockFile(scope: !8267, file: !6095, discriminator: 0)
!8267 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he85ce89b0e21db75E", scope: !48, file: !2484, line: 330, type: !6111, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !8268)
!8268 = !{!8265}
!8269 = !DILocation(line: 250, column: 30, scope: !8266, inlinedAt: !8264)
!8270 = !DILocation(line: 250, column: 44, scope: !8223)
!8271 = !DILocalVariable(name: "self", scope: !8272, file: !6095, line: 250, type: !5547, align: 8)
!8272 = !DILexicalBlockFile(scope: !8273, file: !6095, discriminator: 0)
!8273 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hb122e82487c9b5ecE", scope: !2182, file: !6127, line: 120, type: !6348, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8274)
!8274 = !{!8271}
!8275 = !DILocation(line: 250, column: 22, scope: !8272, inlinedAt: !8276)
!8276 = !DILocation(line: 113, column: 34, scope: !8234, inlinedAt: !8240)
!8277 = !DILocation(line: 250, column: 22, scope: !8250, inlinedAt: !8251)
!8278 = !DILocalVariable(name: "n", scope: !8279, file: !6095, line: 250, type: !9, align: 8)
!8279 = !DILexicalBlockFile(scope: !8280, file: !6095, discriminator: 0)
!8280 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17haa5ebe932de09af5E", scope: !6339, file: !6338, line: 56, type: !6414, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8281)
!8281 = !{!8278, !8282}
!8282 = !DILocalVariable(name: "runtime", scope: !8283, file: !6095, line: 250, type: !6420, align: 8)
!8283 = !DILexicalBlockFile(scope: !8284, file: !6095, discriminator: 0)
!8284 = distinct !DILexicalBlock(scope: !8280, file: !549, line: 2336, column: 13)
!8285 = !DILocation(line: 250, column: 22, scope: !8279, inlinedAt: !8286)
!8286 = !DILocation(line: 41, column: 18, scope: !8254, inlinedAt: !8246)
!8287 = !DILocation(line: 252, column: 6, scope: !8223)
!8288 = distinct !DISubprogram(name: "grow", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17hd6d35bed8b9eab4dE", scope: !6155, file: !6095, line: 255, type: !8289, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8291)
!8289 = !DISubroutineType(types: !8290)
!8290 = !{!5506, !6158, !48, !2182, !2182}
!8291 = !{!8292, !8293, !8294, !8295}
!8292 = !DILocalVariable(name: "self", arg: 1, scope: !8288, file: !6095, line: 256, type: !6158)
!8293 = !DILocalVariable(name: "ptr", arg: 2, scope: !8288, file: !6095, line: 257, type: !48)
!8294 = !DILocalVariable(name: "old_layout", arg: 3, scope: !8288, file: !6095, line: 258, type: !2182)
!8295 = !DILocalVariable(name: "new_layout", arg: 4, scope: !8288, file: !6095, line: 259, type: !2182)
!8296 = !DILocation(line: 256, column: 9, scope: !8288)
!8297 = !DILocation(line: 257, column: 9, scope: !8288)
!8298 = !DILocation(line: 258, column: 9, scope: !8288)
!8299 = !DILocation(line: 259, column: 9, scope: !8288)
!8300 = !DILocation(line: 262, column: 18, scope: !8288)
!8301 = !DILocation(line: 263, column: 6, scope: !8288)
!8302 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hc12985ca999b6941E", scope: !6155, file: !6095, line: 236, type: !6156, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8303)
!8303 = !{!8304, !8305}
!8304 = !DILocalVariable(name: "self", arg: 1, scope: !8302, file: !6095, line: 236, type: !6158)
!8305 = !DILocalVariable(name: "layout", arg: 2, scope: !8302, file: !6095, line: 236, type: !2182)
!8306 = !DILocation(line: 236, column: 17, scope: !8302)
!8307 = !DILocation(line: 236, column: 24, scope: !8302)
!8308 = !DILocation(line: 237, column: 9, scope: !8302)
!8309 = !DILocation(line: 238, column: 6, scope: !8302)
!8310 = distinct !DISubprogram(name: "encode<()>", linkageName: "_ZN63_$LT$u8$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h18dcaaf63bdfe937E", scope: !8311, file: !784, line: 117, type: !8312, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !622, retainedNodes: !8314)
!8311 = !DINamespace(name: "{impl#2}", scope: !888)
!8312 = !DISubroutineType(types: !8313)
!8313 = !{null, !53, !615, !319}
!8314 = !{!8315, !8316, !8317}
!8315 = !DILocalVariable(name: "self", arg: 1, scope: !8310, file: !784, line: 117, type: !53)
!8316 = !DILocalVariable(name: "w", arg: 2, scope: !8310, file: !784, line: 117, type: !615)
!8317 = !DILocalVariable(arg: 3, scope: !8310, file: !784, line: 117, type: !319)
!8318 = !DILocation(line: 117, column: 15, scope: !8310)
!8319 = !DILocation(line: 117, column: 21, scope: !8310)
!8320 = !DILocation(line: 117, column: 37, scope: !8310)
!8321 = !DILocation(line: 118, column: 9, scope: !8310)
!8322 = !DILocation(line: 119, column: 6, scope: !8310)
!8323 = distinct !DISubprogram(name: "encode<()>", linkageName: "_ZN64_$LT$u32$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h450f1f7327497954E", scope: !8324, file: !784, line: 28, type: !8325, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !622, retainedNodes: !8327)
!8324 = !DINamespace(name: "{impl#25}", scope: !888)
!8325 = !DISubroutineType(types: !8326)
!8326 = !{null, !356, !615, !319}
!8327 = !{!8328, !8329, !8330}
!8328 = !DILocalVariable(name: "self", arg: 1, scope: !8323, file: !784, line: 28, type: !356)
!8329 = !DILocalVariable(name: "w", arg: 2, scope: !8323, file: !784, line: 28, type: !615)
!8330 = !DILocalVariable(arg: 3, scope: !8323, file: !784, line: 28, type: !319)
!8331 = !DILocation(line: 28, column: 23, scope: !8323)
!8332 = !DILocation(line: 28, column: 29, scope: !8323)
!8333 = !DILocation(line: 28, column: 45, scope: !8323)
!8334 = !DILocation(line: 29, column: 38, scope: !8323)
!8335 = !DILocalVariable(name: "self", scope: !8336, file: !784, line: 29, type: !356, align: 4)
!8336 = !DILexicalBlockFile(scope: !8337, file: !784, discriminator: 0)
!8337 = distinct !DISubprogram(name: "to_le_bytes", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$11to_le_bytes17h909de9eafb1d39e3E", scope: !8338, file: !4429, line: 2289, type: !8339, scopeLine: 2289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8341)
!8338 = !DINamespace(name: "{impl#8}", scope: !353)
!8339 = !DISubroutineType(types: !8340)
!8340 = !{!1332, !356}
!8341 = !{!8335}
!8342 = !DILocation(line: 29, column: 38, scope: !8336, inlinedAt: !8334)
!8343 = !DILocalVariable(name: "self", scope: !8344, file: !784, line: 29, type: !356, align: 4)
!8344 = !DILexicalBlockFile(scope: !8345, file: !784, discriminator: 0)
!8345 = distinct !DISubprogram(name: "to_le", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$5to_le17h3e9cd3990b3f46e7E", scope: !8338, file: !4429, line: 408, type: !8346, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8348)
!8346 = !DISubroutineType(types: !8347)
!8347 = !{!356, !356}
!8348 = !{!8343}
!8349 = !DILocation(line: 29, column: 38, scope: !8344, inlinedAt: !8350)
!8350 = !DILocation(line: 2290, column: 13, scope: !8337, inlinedAt: !8334)
!8351 = !DILocalVariable(name: "self", scope: !8352, file: !784, line: 29, type: !356, align: 4)
!8352 = !DILexicalBlockFile(scope: !8353, file: !784, discriminator: 0)
!8353 = distinct !DISubprogram(name: "to_ne_bytes", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$11to_ne_bytes17hf165e1a08a011305E", scope: !8338, file: !4429, line: 2325, type: !8339, scopeLine: 2325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8354)
!8354 = !{!8351}
!8355 = !DILocation(line: 29, column: 38, scope: !8352, inlinedAt: !8350)
!8356 = !DILocation(line: 29, column: 17, scope: !8323)
!8357 = !DILocation(line: 30, column: 14, scope: !8323)
!8358 = distinct !DISubprogram(name: "deref", linkageName: "_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17he4dfac28b3bf6b8dE", scope: !8359, file: !500, line: 2412, type: !8360, scopeLine: 2412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8362)
!8359 = !DINamespace(name: "{impl#37}", scope: !31)
!8360 = !DISubroutineType(types: !8361)
!8361 = !{!202, !504}
!8362 = !{!8363}
!8363 = !DILocalVariable(name: "self", arg: 1, scope: !8358, file: !500, line: 2412, type: !504)
!8364 = !DILocation(line: 2412, column: 14, scope: !8358)
!8365 = !DILocation(line: 2413, column: 43, scope: !8358)
!8366 = !DILocalVariable(name: "self", scope: !8367, file: !500, line: 2413, type: !533, align: 8)
!8367 = !DILexicalBlockFile(scope: !8368, file: !500, discriminator: 0)
!8368 = distinct !DISubprogram(name: "deref<u8, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h609659c293a24929E", scope: !526, file: !525, line: 2531, type: !527, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !63, retainedNodes: !8369)
!8369 = !{!8366}
!8370 = !DILocation(line: 2413, column: 43, scope: !8367, inlinedAt: !8365)
!8371 = !DILocalVariable(name: "data", scope: !8372, file: !500, line: 2413, type: !52, align: 8)
!8372 = !DILexicalBlockFile(scope: !8373, file: !500, discriminator: 0)
!8373 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17h56ee2ae194163066E", scope: !540, file: !539, line: 90, type: !542, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !8374)
!8374 = !{!8371, !8375, !8376}
!8375 = !DILocalVariable(name: "len", scope: !8372, file: !500, line: 2413, type: !9, align: 8)
!8376 = !DILocalVariable(name: "runtime", scope: !8377, file: !500, line: 2413, type: !550, align: 8)
!8377 = !DILexicalBlockFile(scope: !8378, file: !500, discriminator: 0)
!8378 = distinct !DILexicalBlock(scope: !8373, file: !549, line: 2336, column: 13)
!8379 = !DILocation(line: 2413, column: 43, scope: !8372, inlinedAt: !8380)
!8380 = !DILocation(line: 2532, column: 18, scope: !8368, inlinedAt: !8365)
!8381 = !DILocalVariable(name: "data", scope: !8382, file: !500, line: 2413, type: !52, align: 8)
!8382 = !DILexicalBlockFile(scope: !8383, file: !500, discriminator: 0)
!8383 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h6cf0bcc2226f7384E", scope: !45, file: !562, line: 695, type: !563, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !8384)
!8384 = !{!8381, !8385}
!8385 = !DILocalVariable(name: "len", scope: !8382, file: !500, line: 2413, type: !9, align: 8)
!8386 = !DILocation(line: 2413, column: 43, scope: !8382, inlinedAt: !8387)
!8387 = !DILocation(line: 97, column: 11, scope: !8373, inlinedAt: !8380)
!8388 = !DILocalVariable(name: "self", scope: !8389, file: !500, line: 2413, type: !52, align: 8)
!8389 = !DILexicalBlockFile(scope: !8390, file: !500, discriminator: 0)
!8390 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb0bf0b669ab1d998E", scope: !577, file: !576, line: 46, type: !579, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !582, retainedNodes: !8391)
!8391 = !{!8388}
!8392 = !DILocation(line: 2413, column: 43, scope: !8389, inlinedAt: !8393)
!8393 = !DILocation(line: 696, column: 20, scope: !8383, inlinedAt: !8387)
!8394 = !DILocalVariable(name: "data_address", scope: !8395, file: !500, line: 2413, type: !6, align: 8)
!8395 = !DILexicalBlockFile(scope: !8396, file: !500, discriminator: 0)
!8396 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h496989047ed841a4E", scope: !590, file: !589, line: 110, type: !591, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !8397)
!8397 = !{!8394, !8398}
!8398 = !DILocalVariable(name: "metadata", scope: !8395, file: !500, line: 2413, type: !9, align: 8)
!8399 = !DILocation(line: 2413, column: 43, scope: !8395, inlinedAt: !8400)
!8400 = !DILocation(line: 696, column: 5, scope: !8383, inlinedAt: !8387)
!8401 = !DILocalVariable(name: "v", scope: !8402, file: !500, line: 2413, type: !529, align: 8)
!8402 = !DILexicalBlockFile(scope: !8403, file: !500, discriminator: 0)
!8403 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN4core3str8converts19from_utf8_unchecked17hcd20fde6de9d471cE", scope: !601, file: !600, line: 170, type: !603, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8404)
!8404 = !{!8401}
!8405 = !DILocation(line: 2413, column: 18, scope: !8402, inlinedAt: !8406)
!8406 = !DILocation(line: 2413, column: 18, scope: !8358)
!8407 = !DILocation(line: 2414, column: 6, scope: !8358)
!8408 = distinct !DISubprogram(name: "encode<()>", linkageName: "_ZN66_$LT$usize$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17hd7e90b4155a30b1eE", scope: !8409, file: !784, line: 28, type: !8410, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !622, retainedNodes: !8412)
!8409 = !DINamespace(name: "{impl#27}", scope: !888)
!8410 = !DISubroutineType(types: !8411)
!8411 = !{null, !9, !615, !319}
!8412 = !{!8413, !8414, !8415}
!8413 = !DILocalVariable(name: "self", arg: 1, scope: !8408, file: !784, line: 28, type: !9)
!8414 = !DILocalVariable(name: "w", arg: 2, scope: !8408, file: !784, line: 28, type: !615)
!8415 = !DILocalVariable(arg: 3, scope: !8408, file: !784, line: 28, type: !319)
!8416 = !DILocation(line: 28, column: 23, scope: !8408)
!8417 = !DILocation(line: 28, column: 29, scope: !8408)
!8418 = !DILocation(line: 28, column: 45, scope: !8408)
!8419 = !DILocation(line: 29, column: 38, scope: !8408)
!8420 = !DILocalVariable(name: "self", scope: !8421, file: !784, line: 29, type: !9, align: 8)
!8421 = !DILexicalBlockFile(scope: !8422, file: !784, discriminator: 0)
!8422 = distinct !DISubprogram(name: "to_le_bytes", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11to_le_bytes17he7189e54b4329688E", scope: !4430, file: !4429, line: 2289, type: !8423, scopeLine: 2289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8425)
!8423 = !DISubroutineType(types: !8424)
!8424 = !{!1452, !9}
!8425 = !{!8420}
!8426 = !DILocation(line: 29, column: 38, scope: !8421, inlinedAt: !8419)
!8427 = !DILocalVariable(name: "self", scope: !8428, file: !784, line: 29, type: !9, align: 8)
!8428 = !DILexicalBlockFile(scope: !8429, file: !784, discriminator: 0)
!8429 = distinct !DISubprogram(name: "to_le", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$5to_le17h1a4a92158dfac83fE", scope: !4430, file: !4429, line: 408, type: !8430, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8432)
!8430 = !DISubroutineType(types: !8431)
!8431 = !{!9, !9}
!8432 = !{!8427}
!8433 = !DILocation(line: 29, column: 38, scope: !8428, inlinedAt: !8434)
!8434 = !DILocation(line: 2290, column: 13, scope: !8422, inlinedAt: !8419)
!8435 = !DILocalVariable(name: "self", scope: !8436, file: !784, line: 29, type: !9, align: 8)
!8436 = !DILexicalBlockFile(scope: !8437, file: !784, discriminator: 0)
!8437 = distinct !DISubprogram(name: "to_ne_bytes", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11to_ne_bytes17h9cba86ca22293929E", scope: !4430, file: !4429, line: 2325, type: !8423, scopeLine: 2325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8438)
!8438 = !{!8435}
!8439 = !DILocation(line: 29, column: 38, scope: !8436, inlinedAt: !8434)
!8440 = !DILocation(line: 29, column: 17, scope: !8408)
!8441 = !DILocation(line: 30, column: 14, scope: !8408)
!8442 = distinct !DISubprogram(name: "decode<()>", linkageName: "_ZN67_$LT$u32$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17h02cdbdd2aee070bbE", scope: !8443, file: !784, line: 34, type: !8444, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !622, retainedNodes: !8446)
!8443 = !DINamespace(name: "{impl#26}", scope: !888)
!8444 = !DISubroutineType(types: !8445)
!8445 = !{!356, !635, !319}
!8446 = !{!8447, !8448, !8450}
!8447 = !DILocalVariable(name: "r", arg: 1, scope: !8442, file: !784, line: 34, type: !635)
!8448 = !DILocalVariable(name: "bytes", scope: !8449, file: !784, line: 37, type: !1332, align: 1)
!8449 = distinct !DILexicalBlock(scope: !8442, file: !784, line: 37, column: 17)
!8450 = !DILocalVariable(arg: 2, scope: !8442, file: !784, line: 34, type: !319)
!8451 = !DILocation(line: 34, column: 23, scope: !8442)
!8452 = !DILocation(line: 34, column: 43, scope: !8442)
!8453 = !DILocation(line: 37, column: 21, scope: !8449)
!8454 = !DILocalVariable(name: "bytes", scope: !8455, file: !784, line: 41, type: !1332, align: 1)
!8455 = !DILexicalBlockFile(scope: !8456, file: !784, discriminator: 0)
!8456 = distinct !DISubprogram(name: "from_le_bytes", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$13from_le_bytes17h56af68e04d3902cdE", scope: !8338, file: !4429, line: 2385, type: !8457, scopeLine: 2385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8459)
!8457 = !DISubroutineType(types: !8458)
!8458 = !{!356, !1332}
!8459 = !{!8454}
!8460 = !DILocation(line: 41, column: 17, scope: !8455, inlinedAt: !8461)
!8461 = !DILocation(line: 41, column: 17, scope: !8449)
!8462 = !DILocalVariable(name: "bytes", scope: !8463, file: !784, line: 41, type: !1332, align: 1)
!8463 = !DILexicalBlockFile(scope: !8464, file: !784, discriminator: 0)
!8464 = distinct !DISubprogram(name: "from_ne_bytes", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$13from_ne_bytes17h35bce9c64edc5fd8E", scope: !8338, file: !4429, line: 2427, type: !8457, scopeLine: 2427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8465)
!8465 = !{!8462}
!8466 = !DILocation(line: 41, column: 17, scope: !8463, inlinedAt: !8467)
!8467 = !DILocation(line: 2386, column: 27, scope: !8456, inlinedAt: !8461)
!8468 = !DILocation(line: 37, column: 33, scope: !8442)
!8469 = !DILocation(line: 38, column: 17, scope: !8449)
!8470 = !DILocation(line: 38, column: 40, scope: !8449)
!8471 = !DILocalVariable(name: "self", scope: !8472, file: !784, line: 38, type: !529, align: 8)
!8472 = !DILexicalBlockFile(scope: !8473, file: !784, discriminator: 0)
!8473 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h2265d1d1eefd74aeE", scope: !1770, file: !646, line: 17, type: !8474, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5064, retainedNodes: !8476)
!8474 = !DISubroutineType(types: !8475)
!8475 = !{!529, !529, !5059, !508}
!8476 = !{!8471, !8477}
!8477 = !DILocalVariable(name: "index", scope: !8472, file: !784, line: 38, type: !5059, align: 8)
!8478 = !DILocation(line: 38, column: 40, scope: !8472, inlinedAt: !8470)
!8479 = !DILocalVariable(name: "slice", scope: !8480, file: !784, line: 38, type: !529, align: 8)
!8480 = !DILexicalBlockFile(scope: !8481, file: !784, discriminator: 0)
!8481 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17he45df862cf1057e5E", scope: !5133, file: !646, line: 350, type: !8482, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !8484)
!8482 = !DISubroutineType(types: !8483)
!8483 = !{!529, !5059, !529, !508}
!8484 = !{!8485, !8479}
!8485 = !DILocalVariable(name: "self", scope: !8480, file: !784, line: 38, type: !5059, align: 8)
!8486 = !DILocation(line: 38, column: 40, scope: !8480, inlinedAt: !8487)
!8487 = !DILocation(line: 18, column: 9, scope: !8473, inlinedAt: !8470)
!8488 = !DILocation(line: 39, column: 23, scope: !8449)
!8489 = !DILocalVariable(name: "self", scope: !8490, file: !784, line: 39, type: !529, align: 8)
!8490 = !DILexicalBlockFile(scope: !8491, file: !784, discriminator: 0)
!8491 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hea89e3cfe144d77eE", scope: !1770, file: !646, line: 17, type: !8492, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !8499, retainedNodes: !8497)
!8492 = !DISubroutineType(types: !8493)
!8493 = !{!529, !529, !8494, !508}
!8494 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<usize>", scope: !506, file: !2, size: 64, align: 64, elements: !8495, templateParams: !659, identifier: "a58758f4d6a6e1468075e24121943e64")
!8495 = !{!8496}
!8496 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8494, file: !2, baseType: !9, size: 64, align: 64)
!8497 = !{!8489, !8498}
!8498 = !DILocalVariable(name: "index", scope: !8490, file: !784, line: 39, type: !8494, align: 8)
!8499 = !{!55, !8500}
!8500 = !DITemplateTypeParameter(name: "I", type: !8494)
!8501 = !DILocation(line: 39, column: 23, scope: !8490, inlinedAt: !8488)
!8502 = !DILocation(line: 39, column: 17, scope: !8449)
!8503 = !DILocation(line: 41, column: 37, scope: !8449)
!8504 = !DILocation(line: 42, column: 14, scope: !8442)
!8505 = distinct !DISubprogram(name: "encode<()>", linkageName: "_ZN68_$LT$$RF$str$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17hba6464c36be37697E", scope: !8506, file: !784, line: 205, type: !8507, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !622, retainedNodes: !8509)
!8506 = !DINamespace(name: "{impl#14}", scope: !888)
!8507 = !DISubroutineType(types: !8508)
!8508 = !{null, !202, !615, !319}
!8509 = !{!8510, !8511, !8512}
!8510 = !DILocalVariable(name: "self", arg: 1, scope: !8505, file: !784, line: 205, type: !202)
!8511 = !DILocalVariable(name: "w", arg: 2, scope: !8505, file: !784, line: 205, type: !615)
!8512 = !DILocalVariable(name: "s", arg: 3, scope: !8505, file: !784, line: 205, type: !319)
!8513 = !DILocation(line: 205, column: 15, scope: !8505)
!8514 = !DILocation(line: 205, column: 21, scope: !8505)
!8515 = !DILocation(line: 205, column: 37, scope: !8505)
!8516 = !DILocation(line: 206, column: 9, scope: !8505)
!8517 = !DILocalVariable(name: "self", scope: !8518, file: !784, line: 206, type: !202, align: 8)
!8518 = !DILexicalBlockFile(scope: !8519, file: !784, discriminator: 0)
!8519 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4820, file: !4819, line: 323, type: !5804, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8520)
!8520 = !{!8517}
!8521 = !DILocation(line: 206, column: 9, scope: !8518, inlinedAt: !8516)
!8522 = !DILocation(line: 207, column: 6, scope: !8505)
!8523 = distinct !DISubprogram(name: "encode<()>", linkageName: "_ZN69_$LT$$LP$$RP$$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h89c64569fb1c86c5E", scope: !8524, file: !784, line: 109, type: !8525, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !622, retainedNodes: !8527)
!8524 = !DINamespace(name: "{impl#0}", scope: !888)
!8525 = !DISubroutineType(types: !8526)
!8526 = !{null, !7, !615, !319}
!8527 = !{!8528, !8529, !8530}
!8528 = !DILocalVariable(name: "self", arg: 1, scope: !8523, file: !784, line: 109, type: !7)
!8529 = !DILocalVariable(arg: 2, scope: !8523, file: !784, line: 109, type: !615)
!8530 = !DILocalVariable(arg: 3, scope: !8523, file: !784, line: 109, type: !319)
!8531 = !DILocation(line: 109, column: 15, scope: !8523)
!8532 = !DILocation(line: 109, column: 21, scope: !8523)
!8533 = !DILocation(line: 109, column: 37, scope: !8523)
!8534 = !DILocation(line: 109, column: 50, scope: !8523)
!8535 = distinct !DISubprogram(name: "deref", linkageName: "_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h56c45477f0e1c3baE", scope: !8537, file: !8536, line: 713, type: !8538, scopeLine: 713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8541)
!8536 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/ffi/c_str.rs", directory: "", checksumkind: CSK_MD5, checksum: "6e5500bcb59fd49c7b9dab08f5bff02d")
!8537 = !DINamespace(name: "{impl#3}", scope: !2298)
!8538 = !DISubroutineType(types: !8539)
!8539 = !{!3751, !8540}
!8540 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::ffi::c_str::CString", baseType: !2312, size: 64, align: 64, dwarfAddressSpace: 0)
!8541 = !{!8542}
!8542 = !DILocalVariable(name: "self", arg: 1, scope: !8535, file: !8536, line: 713, type: !8540)
!8543 = !DILocation(line: 713, column: 14, scope: !8535)
!8544 = !DILocation(line: 714, column: 54, scope: !8535)
!8545 = !DILocalVariable(name: "self", scope: !8546, file: !8536, line: 714, type: !8540, align: 8)
!8546 = distinct !DISubprogram(name: "as_bytes_with_nul", linkageName: "_ZN5alloc3ffi5c_str7CString17as_bytes_with_nul17hf00ef96d93386345E", scope: !2312, file: !8536, line: 561, type: !8547, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8549)
!8547 = !DISubroutineType(types: !8548)
!8548 = !{!529, !8540}
!8549 = !{!8545}
!8550 = !DILocation(line: 714, column: 54, scope: !8546, inlinedAt: !8544)
!8551 = !DILocalVariable(name: "bytes", scope: !8552, file: !8536, line: 714, type: !529, align: 8)
!8552 = !DILexicalBlockFile(scope: !8553, file: !8536, discriminator: 0)
!8553 = distinct !DISubprogram(name: "from_bytes_with_nul_unchecked", linkageName: "_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked17h16b03d3c45200233E", scope: !3743, file: !3742, line: 389, type: !8554, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8556)
!8554 = !DISubroutineType(types: !8555)
!8555 = !{!3751, !529}
!8556 = !{!8551}
!8557 = !DILocation(line: 714, column: 18, scope: !8552, inlinedAt: !8558)
!8558 = !DILocation(line: 714, column: 18, scope: !8535)
!8559 = !DILocation(line: 715, column: 6, scope: !8535)
!8560 = distinct !DISubprogram(name: "drop", linkageName: "_ZN76_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf82cae4ee5e60ad4E", scope: !8561, file: !1328, line: 123, type: !1731, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8562)
!8561 = !DINamespace(name: "{impl#7}", scope: !286)
!8562 = !{!8563, !8564}
!8563 = !DILocalVariable(name: "self", arg: 1, scope: !8560, file: !1328, line: 123, type: !615)
!8564 = !DILocalVariable(name: "b", scope: !8565, file: !1328, line: 124, type: !285, align: 8)
!8565 = distinct !DILexicalBlock(scope: !8560, file: !1328, line: 124, column: 9)
!8566 = !DILocation(line: 123, column: 13, scope: !8560)
!8567 = !DILocation(line: 124, column: 13, scope: !8565)
!8568 = !DILocation(line: 124, column: 17, scope: !8560)
!8569 = !DILocalVariable(name: "self", scope: !8570, file: !1328, line: 124, type: !615, align: 8)
!8570 = distinct !DISubprogram(name: "take", linkageName: "_ZN10proc_macro6bridge6buffer6Buffer4take17hc25bad77c7a5c746E", scope: !285, file: !1328, line: 54, type: !1403, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8571)
!8571 = !{!8569}
!8572 = !DILocation(line: 124, column: 17, scope: !8570, inlinedAt: !8568)
!8573 = !DILocalVariable(name: "dest", scope: !8574, file: !1328, line: 124, type: !615, align: 8)
!8574 = !DILexicalBlockFile(scope: !8575, file: !1328, discriminator: 0)
!8575 = distinct !DISubprogram(name: "take<proc_macro::bridge::buffer::Buffer>", linkageName: "_ZN4core3mem4take17hbac851b2c93f1939E", scope: !413, file: !1128, line: 846, type: !1403, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1411, retainedNodes: !8576)
!8576 = !{!8573}
!8577 = !DILocation(line: 124, column: 17, scope: !8574, inlinedAt: !8578)
!8578 = !DILocation(line: 55, column: 9, scope: !8570, inlinedAt: !8568)
!8579 = !DILocation(line: 124, column: 17, scope: !8580, inlinedAt: !8582)
!8580 = !DILexicalBlockFile(scope: !8581, file: !1328, discriminator: 0)
!8581 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17h94f1cc63c2616b42E", scope: !35, file: !525, line: 424, type: !1418, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !27)
!8582 = !DILocation(line: 44, column: 36, scope: !8583, inlinedAt: !8585)
!8583 = !DILexicalBlockFile(scope: !8584, file: !1422, discriminator: 0)
!8584 = distinct !DISubprogram(name: "default", linkageName: "_ZN77_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$core..default..Default$GT$7default17hdcc1a6b029a7393aE", scope: !1424, file: !1328, line: 22, type: !1425, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !27)
!8585 = !DILocation(line: 847, column: 19, scope: !8575, inlinedAt: !8578)
!8586 = !DILocation(line: 124, column: 17, scope: !8584, inlinedAt: !8585)
!8587 = !DILocation(line: 125, column: 9, scope: !8565)
!8588 = !DILocation(line: 125, column: 18, scope: !8565)
!8589 = !DILocation(line: 126, column: 6, scope: !8560)
!8590 = distinct !DISubprogram(name: "decode<(), proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>, proc_macro::bridge::client::TokenStream>", linkageName: "_ZN77_$LT$$LP$A$C$B$RP$$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17hd565458767a4d1cdE", scope: !8591, file: !784, line: 183, type: !8592, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !8601, retainedNodes: !8598)
!8591 = !DINamespace(name: "{impl#11}", scope: !888)
!8592 = !DISubroutineType(types: !8593)
!8593 = !{!8594, !635, !319}
!8594 = !DICompositeType(tag: DW_TAG_structure_type, name: "(proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>, proc_macro::bridge::client::TokenStream)", file: !2, size: 128, align: 32, elements: !8595, templateParams: !27, identifier: "e043f09da9de9cc9ab1498863b9b2c89")
!8595 = !{!8596, !8597}
!8596 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8594, file: !2, baseType: !788, size: 96, align: 32)
!8597 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !8594, file: !2, baseType: !348, size: 32, align: 32, offset: 96)
!8598 = !{!8599, !8600}
!8599 = !DILocalVariable(name: "r", arg: 1, scope: !8590, file: !784, line: 183, type: !635)
!8600 = !DILocalVariable(name: "s", arg: 2, scope: !8590, file: !784, line: 183, type: !319)
!8601 = !{!623, !8602, !8603}
!8602 = !DITemplateTypeParameter(name: "A", type: !788)
!8603 = !DITemplateTypeParameter(name: "B", type: !348)
!8604 = !DILocation(line: 183, column: 15, scope: !8590)
!8605 = !DILocation(line: 183, column: 35, scope: !8590)
!8606 = !DILocation(line: 184, column: 10, scope: !8590)
!8607 = !DILocation(line: 184, column: 35, scope: !8590)
!8608 = !DILocation(line: 184, column: 58, scope: !8590)
!8609 = !DILocation(line: 184, column: 9, scope: !8590)
!8610 = !DILocation(line: 185, column: 6, scope: !8590)
!8611 = !DILocation(line: 183, column: 5, scope: !8590)
!8612 = distinct !DISubprogram(name: "encode<()>", linkageName: "_ZN77_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17hdf1b50c705a4a865E", scope: !8613, file: !784, line: 189, type: !8614, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !622, retainedNodes: !8616)
!8613 = !DINamespace(name: "{impl#12}", scope: !888)
!8614 = !DISubroutineType(types: !8615)
!8615 = !{null, !529, !615, !319}
!8616 = !{!8617, !8618, !8619}
!8617 = !DILocalVariable(name: "self", arg: 1, scope: !8612, file: !784, line: 189, type: !529)
!8618 = !DILocalVariable(name: "w", arg: 2, scope: !8612, file: !784, line: 189, type: !615)
!8619 = !DILocalVariable(name: "s", arg: 3, scope: !8612, file: !784, line: 189, type: !319)
!8620 = !DILocation(line: 189, column: 15, scope: !8612)
!8621 = !DILocation(line: 189, column: 21, scope: !8612)
!8622 = !DILocation(line: 189, column: 37, scope: !8612)
!8623 = !DILocation(line: 190, column: 9, scope: !8612)
!8624 = !DILocation(line: 191, column: 9, scope: !8612)
!8625 = !DILocalVariable(name: "self", scope: !8626, file: !784, line: 191, type: !615, align: 8)
!8626 = !DILexicalBlockFile(scope: !8627, file: !784, discriminator: 0)
!8627 = distinct !DISubprogram(name: "write_all", linkageName: "_ZN69_$LT$proc_macro..bridge..buffer..Buffer$u20$as$u20$std..io..Write$GT$9write_all17he1f0bd273329616eE", scope: !8628, file: !1328, line: 110, type: !8629, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8631)
!8628 = !DINamespace(name: "{impl#6}", scope: !286)
!8629 = !DISubroutineType(types: !8630)
!8630 = !{!5451, !615, !529}
!8631 = !{!8625, !8632}
!8632 = !DILocalVariable(name: "xs", scope: !8626, file: !784, line: 191, type: !529, align: 8)
!8633 = !DILocation(line: 191, column: 9, scope: !8626, inlinedAt: !8624)
!8634 = !DILocation(line: 191, column: 21, scope: !8612)
!8635 = !DILocation(line: 192, column: 6, scope: !8612)
!8636 = distinct !DISubprogram(name: "drop", linkageName: "_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop17h61b5a34db5b5ec3eE", scope: !2429, file: !2424, line: 232, type: !8637, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8640)
!8637 = !DISubroutineType(types: !8638)
!8638 = !{null, !8639}
!8639 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::io::error::repr_bitpacked::Repr", baseType: !107, size: 64, align: 64, dwarfAddressSpace: 0)
!8640 = !{!8641}
!8641 = !DILocalVariable(name: "self", arg: 1, scope: !8636, file: !2424, line: 232, type: !8639)
!8642 = !DILocation(line: 232, column: 13, scope: !8636)
!8643 = !DILocation(line: 236, column: 33, scope: !8636)
!8644 = !DILocation(line: 236, column: 21, scope: !8636)
!8645 = !DILocation(line: 236, column: 72, scope: !8636)
!8646 = !DILocation(line: 238, column: 6, scope: !8636)
!8647 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop28_$u7b$$u7b$closure$u7d$$u7d$17h298387e370db4930E", scope: !2428, file: !2424, line: 236, type: !8648, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8650)
!8648 = !DISubroutineType(types: !8649)
!8649 = !{!131, !2427, !2443}
!8650 = !{!8651, !8652}
!8651 = !DILocalVariable(name: "p", arg: 2, scope: !8647, file: !2424, line: 236, type: !2443)
!8652 = !DILocalVariable(arg: 1, scope: !8647, file: !2424, line: 236, type: !2427)
!8653 = !DILocation(line: 236, column: 41, scope: !8647)
!8654 = !DILocation(line: 236, column: 42, scope: !8647)
!8655 = !DILocalVariable(name: "alloc", scope: !8656, file: !2424, line: 236, type: !61, align: 1)
!8656 = !DILexicalBlockFile(scope: !8657, file: !2424, discriminator: 0)
!8657 = distinct !DISubprogram(name: "from_raw_in<std::io::error::Custom, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h68de172d366b1b71E", scope: !7450, file: !7449, line: 1009, type: !8658, scopeLine: 1009, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7313, retainedNodes: !8660)
!8658 = !DISubroutineType(types: !8659)
!8659 = !{!131, !2443, !61}
!8660 = !{!8661, !8655}
!8661 = !DILocalVariable(name: "raw", scope: !8656, file: !2424, line: 236, type: !2443, align: 8)
!8662 = !DILocation(line: 236, column: 45, scope: !8656, inlinedAt: !8663)
!8663 = !DILocation(line: 954, column: 18, scope: !8664, inlinedAt: !8671)
!8664 = distinct !DISubprogram(name: "from_raw<std::io::error::Custom>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17hfbb673b2089fab3bE", scope: !8665, file: !7449, line: 953, type: !8666, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4637, retainedNodes: !8668)
!8665 = !DINamespace(name: "{impl#6}", scope: !7451)
!8666 = !DISubroutineType(types: !8667)
!8667 = !{!131, !2443}
!8668 = !{!8669}
!8669 = !DILocalVariable(name: "raw", scope: !8670, file: !2424, line: 236, type: !2443, align: 8)
!8670 = !DILexicalBlockFile(scope: !8664, file: !2424, discriminator: 0)
!8671 = !DILocation(line: 236, column: 45, scope: !8647)
!8672 = !DILocation(line: 236, column: 69, scope: !8647)
!8673 = !DILocation(line: 236, column: 45, scope: !8670, inlinedAt: !8671)
!8674 = !DILocalVariable(name: "ptr", scope: !8675, file: !2424, line: 236, type: !2443, align: 8)
!8675 = !DILexicalBlockFile(scope: !8676, file: !2424, discriminator: 0)
!8676 = distinct !DISubprogram(name: "new_unchecked<std::io::error::Custom>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hab8da5e4a146012aE", scope: !7295, file: !6998, line: 85, type: !8677, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4637, retainedNodes: !8679)
!8677 = !DISubroutineType(types: !8678)
!8678 = !{!7295, !2443}
!8679 = !{!8674}
!8680 = !DILocation(line: 236, column: 45, scope: !8675, inlinedAt: !8681)
!8681 = !DILocation(line: 1010, column: 22, scope: !8657, inlinedAt: !8663)
!8682 = !DILocalVariable(name: "ptr", scope: !8683, file: !2424, line: 236, type: !2443, align: 8)
!8683 = !DILexicalBlockFile(scope: !8684, file: !2424, discriminator: 0)
!8684 = distinct !DISubprogram(name: "new_unchecked<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h7633622544e150c3E", scope: !7298, file: !2484, line: 196, type: !8685, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4637, retainedNodes: !8687)
!8685 = !DISubroutineType(types: !8686)
!8686 = !{!7298, !2443}
!8687 = !{!8682}
!8688 = !DILocation(line: 236, column: 45, scope: !8683, inlinedAt: !8689)
!8689 = !DILocation(line: 87, column: 36, scope: !8676, inlinedAt: !8681)
!8690 = !DILocation(line: 236, column: 44, scope: !8647)
!8691 = distinct !DISubprogram(name: "branch<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53ef9a15ff82a4bE", scope: !3016, file: !2357, line: 2117, type: !8692, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !8718, retainedNodes: !8725)
!8692 = !DISubroutineType(types: !8693)
!8693 = !{!8694, !8710}
!8694 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::ffi::c_str::NulError>, alloc::ffi::c_str::CString>", scope: !3020, file: !2, size: 320, align: 64, elements: !8695, templateParams: !27, identifier: "70e65828be48ce44ef1c8ac1d52dfc1f")
!8695 = !{!8696}
!8696 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8694, file: !2, size: 320, align: 64, elements: !8697, templateParams: !27, identifier: "f93c6e8ed757f8994eec4a065462e67c", discriminator: !8709)
!8697 = !{!8698, !8705}
!8698 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !8696, file: !2, baseType: !8699, size: 320, align: 64, extraData: i64 0)
!8699 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !8694, file: !2, size: 320, align: 64, elements: !8700, templateParams: !8702, identifier: "ed997e167091c3a6b5a9797b1052d255")
!8700 = !{!8701}
!8701 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8699, file: !2, baseType: !2312, size: 128, align: 64, offset: 64)
!8702 = !{!8703, !8704}
!8703 = !DITemplateTypeParameter(name: "B", type: !2321)
!8704 = !DITemplateTypeParameter(name: "C", type: !2312)
!8705 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !8696, file: !2, baseType: !8706, size: 320, align: 64, extraData: i64 1)
!8706 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !8694, file: !2, size: 320, align: 64, elements: !8707, templateParams: !8702, identifier: "de64cab59416381a7e03f9ad51b05a1e")
!8707 = !{!8708}
!8708 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8706, file: !2, baseType: !2321, size: 256, align: 64, offset: 64)
!8709 = !DIDerivedType(tag: DW_TAG_member, scope: !8694, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!8710 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", scope: !877, file: !2, size: 320, align: 64, elements: !8711, templateParams: !27, identifier: "753e653043b02265f9cae25fde5c2e00")
!8711 = !{!8712}
!8712 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8710, file: !2, size: 320, align: 64, elements: !8713, templateParams: !27, identifier: "ce51dc77616053af4739a8709a00c48c", discriminator: !8724)
!8713 = !{!8714, !8720}
!8714 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !8712, file: !2, baseType: !8715, size: 320, align: 64, extraData: i64 0)
!8715 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !8710, file: !2, size: 320, align: 64, elements: !8716, templateParams: !8718, identifier: "36459d4bd7f16063ceede974e05b63bf")
!8716 = !{!8717}
!8717 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8715, file: !2, baseType: !2312, size: 128, align: 64, offset: 64)
!8718 = !{!8719, !2296}
!8719 = !DITemplateTypeParameter(name: "T", type: !2312)
!8720 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !8712, file: !2, baseType: !8721, size: 320, align: 64, extraData: i64 1)
!8721 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !8710, file: !2, size: 320, align: 64, elements: !8722, templateParams: !8718, identifier: "d1044761f4770ef356b5dbe359d460f0")
!8722 = !{!8723}
!8723 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8721, file: !2, baseType: !2297, size: 256, align: 64, offset: 64)
!8724 = !DIDerivedType(tag: DW_TAG_member, scope: !8710, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!8725 = !{!8726, !8727, !8729}
!8726 = !DILocalVariable(name: "self", arg: 1, scope: !8691, file: !2357, line: 2117, type: !8710)
!8727 = !DILocalVariable(name: "v", scope: !8728, file: !2357, line: 2119, type: !2312, align: 8)
!8728 = distinct !DILexicalBlock(scope: !8691, file: !2357, line: 2119, column: 13)
!8729 = !DILocalVariable(name: "e", scope: !8730, file: !2357, line: 2120, type: !2297, align: 8)
!8730 = distinct !DILexicalBlock(scope: !8691, file: !2357, line: 2120, column: 13)
!8731 = !DILocation(line: 2117, column: 15, scope: !8691)
!8732 = !DILocation(line: 2120, column: 17, scope: !8730)
!8733 = !DILocation(line: 2118, column: 15, scope: !8691)
!8734 = !DILocation(line: 2118, column: 9, scope: !8691)
!8735 = !DILocation(line: 2119, column: 16, scope: !8691)
!8736 = !DILocation(line: 2119, column: 16, scope: !8728)
!8737 = !DILocation(line: 2119, column: 22, scope: !8728)
!8738 = !DILocation(line: 2119, column: 45, scope: !8691)
!8739 = !DILocation(line: 2120, column: 17, scope: !8691)
!8740 = !DILocation(line: 2120, column: 46, scope: !8730)
!8741 = !DILocation(line: 2120, column: 42, scope: !8730)
!8742 = !DILocation(line: 2120, column: 23, scope: !8730)
!8743 = !DILocation(line: 2120, column: 48, scope: !8691)
!8744 = !DILocation(line: 2122, column: 6, scope: !8691)
!8745 = distinct !DISubprogram(name: "next_match", linkageName: "_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h62e6844b22f4e1a1E", scope: !8746, file: !5756, line: 410, type: !8747, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8750)
!8746 = !DINamespace(name: "{impl#0}", scope: !4861)
!8747 = !DISubroutineType(types: !8748)
!8748 = !{!5334, !8749}
!8749 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::CharSearcher", baseType: !4860, size: 64, align: 64, dwarfAddressSpace: 0)
!8750 = !{!8751, !8752, !8754, !8767, !8769, !8771, !8773, !8775}
!8751 = !DILocalVariable(name: "self", arg: 1, scope: !8745, file: !5756, line: 410, type: !8749)
!8752 = !DILocalVariable(name: "bytes", scope: !8753, file: !5756, line: 413, type: !529, align: 8)
!8753 = distinct !DILexicalBlock(scope: !8745, file: !5756, line: 413, column: 13)
!8754 = !DILocalVariable(name: "residual", scope: !8755, file: !5756, line: 413, type: !8756, align: 1)
!8755 = distinct !DILexicalBlock(scope: !8745, file: !5756, line: 413, column: 84)
!8756 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::convert::Infallible>", scope: !20, file: !2, align: 8, elements: !8757, templateParams: !27, identifier: "d8a1490c995f47139381e35a5e6e5cdb")
!8757 = !{!8758}
!8758 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8756, file: !2, align: 8, elements: !8759, templateParams: !27, identifier: "9b62236bada376e41df23b6f70477fcc")
!8759 = !{!8760, !8763}
!8760 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !8758, file: !2, baseType: !8761, align: 8)
!8761 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !8756, file: !2, align: 8, elements: !27, templateParams: !8762, identifier: "6887a830e9518178209fc3c61f1ca37d")
!8762 = !{!2334}
!8763 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !8758, file: !2, baseType: !8764, align: 8)
!8764 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !8756, file: !2, align: 8, elements: !8765, templateParams: !8762, identifier: "57c813c1928930715dbbb4312e4c0fa4")
!8765 = !{!8766}
!8766 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8764, file: !2, baseType: !2329, align: 8)
!8767 = !DILocalVariable(name: "val", scope: !8768, file: !5756, line: 413, type: !529, align: 8)
!8768 = distinct !DILexicalBlock(scope: !8745, file: !5756, line: 413, column: 25)
!8769 = !DILocalVariable(name: "last_byte", scope: !8770, file: !5756, line: 416, type: !53, align: 1)
!8770 = distinct !DILexicalBlock(scope: !8753, file: !5756, line: 416, column: 13)
!8771 = !DILocalVariable(name: "index", scope: !8772, file: !5756, line: 417, type: !9, align: 8)
!8772 = distinct !DILexicalBlock(scope: !8770, file: !5756, line: 417, column: 67)
!8773 = !DILocalVariable(name: "found_char", scope: !8774, file: !5756, line: 437, type: !9, align: 8)
!8774 = distinct !DILexicalBlock(scope: !8772, file: !5756, line: 437, column: 21)
!8775 = !DILocalVariable(name: "slice", scope: !8776, file: !5756, line: 438, type: !529, align: 8)
!8776 = distinct !DILexicalBlock(scope: !8774, file: !5756, line: 438, column: 96)
!8777 = !DILocation(line: 410, column: 19, scope: !8745)
!8778 = !DILocalVariable(name: "self", scope: !8779, file: !5756, line: 413, type: !739, align: 8)
!8779 = !DILexicalBlockFile(scope: !8780, file: !5756, discriminator: 0)
!8780 = distinct !DISubprogram(name: "branch<&[u8]>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8690184c7711fe8cE", scope: !8781, file: !1137, line: 2290, type: !8782, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !745, retainedNodes: !8800)
!8781 = !DINamespace(name: "{impl#35}", scope: !20)
!8782 = !DISubroutineType(types: !8783)
!8783 = !{!8784, !739}
!8784 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, &[u8]>", scope: !3020, file: !2, size: 128, align: 64, elements: !8785, templateParams: !27, identifier: "2990b45dad552e5a8d7cad1abaaa086")
!8785 = !{!8786}
!8786 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8784, file: !2, size: 128, align: 64, elements: !8787, templateParams: !27, identifier: "a61fddfb98ad6ea2f195e3ee2f8c66e3", discriminator: !8799)
!8787 = !{!8788, !8795}
!8788 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !8786, file: !2, baseType: !8789, size: 128, align: 64)
!8789 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !8784, file: !2, size: 128, align: 64, elements: !8790, templateParams: !8792, identifier: "efa0d2a36143818ed52fe0d2ee8767f4")
!8790 = !{!8791}
!8791 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8789, file: !2, baseType: !529, size: 128, align: 64)
!8792 = !{!8793, !8794}
!8793 = !DITemplateTypeParameter(name: "B", type: !8756)
!8794 = !DITemplateTypeParameter(name: "C", type: !529)
!8795 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !8786, file: !2, baseType: !8796, size: 128, align: 64, extraData: i64 0)
!8796 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !8784, file: !2, size: 128, align: 64, elements: !8797, templateParams: !8792, identifier: "adf0aa8fc506ad64ce41932fb4a8d651")
!8797 = !{!8798}
!8798 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8796, file: !2, baseType: !8756, align: 8)
!8799 = !DIDerivedType(tag: DW_TAG_member, scope: !8784, file: !2, baseType: !71, size: 64, align: 64, flags: DIFlagArtificial)
!8800 = !{!8778, !8801}
!8801 = !DILocalVariable(name: "v", scope: !8802, file: !5756, line: 413, type: !529, align: 8)
!8802 = !DILexicalBlockFile(scope: !8803, file: !5756, discriminator: 0)
!8803 = distinct !DILexicalBlock(scope: !8780, file: !1137, line: 2292, column: 13)
!8804 = !DILocation(line: 413, column: 25, scope: !8779, inlinedAt: !8805)
!8805 = !DILocation(line: 413, column: 25, scope: !8745)
!8806 = !DILocalVariable(name: "index", scope: !8807, file: !5756, line: 413, type: !655, align: 8)
!8807 = !DILexicalBlockFile(scope: !8808, file: !5756, discriminator: 0)
!8808 = distinct !DISubprogram(name: "get<u8, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h4bd93f18b68aaac1E", scope: !1379, file: !1378, line: 339, type: !8809, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !8813, retainedNodes: !8811)
!8809 = !DISubroutineType(types: !8810)
!8810 = !{!739, !529, !655}
!8811 = !{!8812, !8806}
!8812 = !DILocalVariable(name: "self", scope: !8807, file: !5756, line: 413, type: !529, align: 8)
!8813 = !{!55, !4891}
!8814 = !DILocation(line: 413, column: 25, scope: !8807, inlinedAt: !8805)
!8815 = !DILocation(line: 413, column: 84, scope: !8755)
!8816 = !DILocalVariable(name: "residual", scope: !8817, file: !5756, line: 413, type: !8756, align: 1)
!8817 = !DILexicalBlockFile(scope: !8818, file: !5756, discriminator: 0)
!8818 = distinct !DISubprogram(name: "from_residual<(usize, usize)>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h5dd5126b27cedb6eE", scope: !8819, file: !1137, line: 2302, type: !8820, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !5340, retainedNodes: !8822)
!8819 = !DINamespace(name: "{impl#36}", scope: !20)
!8820 = !DISubroutineType(types: !8821)
!8821 = !{!5334, !8756}
!8822 = !{!8816}
!8823 = !DILocation(line: 413, column: 25, scope: !8817, inlinedAt: !8824)
!8824 = !DILocation(line: 413, column: 25, scope: !8755)
!8825 = !DILocalVariable(name: "index", scope: !8826, file: !5756, line: 438, type: !655, align: 8)
!8826 = !DILexicalBlockFile(scope: !8827, file: !5756, discriminator: 0)
!8827 = distinct !DISubprogram(name: "get<u8, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h4bd93f18b68aaac1E", scope: !1379, file: !1378, line: 339, type: !8809, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !8813, retainedNodes: !8828)
!8828 = !{!8829, !8825}
!8829 = !DILocalVariable(name: "self", scope: !8826, file: !5756, line: 438, type: !529, align: 8)
!8830 = !DILocation(line: 438, column: 42, scope: !8826, inlinedAt: !8831)
!8831 = !DILocation(line: 438, column: 42, scope: !8776)
!8832 = !DILocation(line: 438, column: 33, scope: !8776)
!8833 = !DILocalVariable(name: "index", scope: !8834, file: !5756, line: 439, type: !655, align: 8)
!8834 = !DILexicalBlockFile(scope: !8835, file: !5756, discriminator: 0)
!8835 = distinct !DISubprogram(name: "index<u8, core::ops::range::Range<usize>, 4>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hda53f8256cac3924E", scope: !5236, file: !5226, line: 285, type: !8836, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !8813, retainedNodes: !8838)
!8836 = !DISubroutineType(types: !8837)
!8837 = !{!529, !1331, !655, !508}
!8838 = !{!8839, !8833}
!8839 = !DILocalVariable(name: "self", scope: !8834, file: !5756, line: 439, type: !1331, align: 8)
!8840 = !DILocation(line: 439, column: 38, scope: !8834, inlinedAt: !8841)
!8841 = !DILocation(line: 439, column: 38, scope: !8776)
!8842 = !DILocation(line: 411, column: 9, scope: !8745)
!8843 = !DILocalVariable(name: "self", scope: !8844, file: !5756, line: 413, type: !202, align: 8)
!8844 = !DILexicalBlockFile(scope: !8845, file: !5756, discriminator: 0)
!8845 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4820, file: !4819, line: 323, type: !5804, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8846)
!8846 = !{!8843}
!8847 = !DILocation(line: 413, column: 25, scope: !8844, inlinedAt: !8805)
!8848 = !DILocation(line: 413, column: 54, scope: !8745)
!8849 = !DILocation(line: 413, column: 67, scope: !8745)
!8850 = !DILocation(line: 413, column: 25, scope: !8802, inlinedAt: !8805)
!8851 = !DILocation(line: 413, column: 25, scope: !8768)
!8852 = !DILocation(line: 413, column: 17, scope: !8753)
!8853 = !DILocation(line: 416, column: 39, scope: !8753)
!8854 = !DILocalVariable(name: "self", scope: !8855, file: !5756, line: 416, type: !529, align: 8)
!8855 = !DILexicalBlockFile(scope: !8856, file: !5756, discriminator: 0)
!8856 = distinct !DISubprogram(name: "get_unchecked<u8, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h9161c1b4c1f52b71E", scope: !1379, file: !1378, line: 398, type: !8857, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !8861, retainedNodes: !8859)
!8857 = !DISubroutineType(types: !8858)
!8858 = !{!82, !529, !9}
!8859 = !{!8854, !8860}
!8860 = !DILocalVariable(name: "index", scope: !8855, file: !5756, line: 416, type: !9, align: 8)
!8861 = !{!55, !8862}
!8862 = !DITemplateTypeParameter(name: "I", type: !9)
!8863 = !DILocation(line: 416, column: 39, scope: !8855, inlinedAt: !8853)
!8864 = !DILocation(line: 416, column: 71, scope: !8753)
!8865 = !DILocalVariable(name: "self", scope: !8866, file: !5756, line: 416, type: !9, align: 8)
!8866 = !DILexicalBlockFile(scope: !8867, file: !5756, discriminator: 0)
!8867 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h58c8cb23fc283b06E", scope: !8868, file: !646, line: 219, type: !8869, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !8871)
!8868 = !DINamespace(name: "{impl#2}", scope: !648)
!8869 = !DISubroutineType(types: !8870)
!8870 = !{!52, !9, !565}
!8871 = !{!8865, !8872, !8873}
!8872 = !DILocalVariable(name: "slice", scope: !8866, file: !5756, line: 416, type: !565, align: 8)
!8873 = !DILocalVariable(name: "runtime", scope: !8874, file: !5756, line: 416, type: !8876, align: 8)
!8874 = !DILexicalBlockFile(scope: !8875, file: !5756, discriminator: 0)
!8875 = distinct !DILexicalBlock(scope: !8867, file: !549, line: 2336, column: 13)
!8876 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !8877, file: !2, size: 128, align: 64, elements: !8878, templateParams: !27, identifier: "7104d3ced1030246c65aea384aa33b26")
!8877 = !DINamespace(name: "get_unchecked", scope: !8868)
!8878 = !{!8879, !8880}
!8879 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !8876, file: !2, baseType: !556, size: 64, align: 64)
!8880 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !8876, file: !2, baseType: !8881, size: 64, align: 64, offset: 64)
!8881 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const [u8]", baseType: !565, size: 64, align: 64, dwarfAddressSpace: 0)
!8882 = !DILocation(line: 416, column: 39, scope: !8866, inlinedAt: !8883)
!8883 = !DILocation(line: 405, column: 20, scope: !8856, inlinedAt: !8853)
!8884 = !DILocalVariable(name: "self", scope: !8885, file: !5756, line: 416, type: !565, align: 8)
!8885 = !DILexicalBlockFile(scope: !8886, file: !5756, discriminator: 0)
!8886 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hdfcda9380c75b2a2E", scope: !4928, file: !576, line: 1385, type: !4929, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !8887)
!8887 = !{!8884}
!8888 = !DILocation(line: 416, column: 39, scope: !8885, inlinedAt: !8889)
!8889 = !DILocation(line: 226, column: 13, scope: !8867, inlinedAt: !8883)
!8890 = !DILocalVariable(name: "self", scope: !8891, file: !5756, line: 416, type: !52, align: 8)
!8891 = !DILexicalBlockFile(scope: !8892, file: !5756, discriminator: 0)
!8892 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17he468d58b556a7d79E", scope: !577, file: !576, line: 871, type: !4936, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !8893)
!8893 = !{!8890, !8894}
!8894 = !DILocalVariable(name: "count", scope: !8891, file: !5756, line: 416, type: !9, align: 8)
!8895 = !DILocation(line: 416, column: 39, scope: !8891, inlinedAt: !8889)
!8896 = !DILocalVariable(name: "self", scope: !8897, file: !5756, line: 416, type: !52, align: 8)
!8897 = !DILexicalBlockFile(scope: !8898, file: !5756, discriminator: 0)
!8898 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h278b42c8a200d991E", scope: !577, file: !576, line: 453, type: !4945, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !8899)
!8899 = !{!8896, !8900}
!8900 = !DILocalVariable(name: "count", scope: !8897, file: !5756, line: 416, type: !703, align: 8)
!8901 = !DILocation(line: 416, column: 39, scope: !8897, inlinedAt: !8902)
!8902 = !DILocation(line: 876, column: 18, scope: !8892, inlinedAt: !8889)
!8903 = !DILocation(line: 1, column: 1, scope: !8904)
!8904 = !DILexicalBlockFile(scope: !8745, file: !6833, discriminator: 0)
!8905 = !DILocation(line: 450, column: 6, scope: !8745)
!8906 = !DILocation(line: 416, column: 38, scope: !8753)
!8907 = !DILocation(line: 416, column: 17, scope: !8770)
!8908 = !DILocation(line: 417, column: 34, scope: !8772)
!8909 = !DILocation(line: 417, column: 20, scope: !8772)
!8910 = !DILocation(line: 417, column: 25, scope: !8772)
!8911 = !DILocation(line: 435, column: 32, scope: !8772)
!8912 = !DILocation(line: 435, column: 17, scope: !8772)
!8913 = !DILocation(line: 436, column: 20, scope: !8772)
!8914 = !DILocation(line: 436, column: 35, scope: !8772)
!8915 = !DILocation(line: 446, column: 31, scope: !8770)
!8916 = !DILocation(line: 446, column: 17, scope: !8770)
!8917 = !DILocation(line: 447, column: 24, scope: !8770)
!8918 = !DILocation(line: 447, column: 17, scope: !8770)
!8919 = !DILocation(line: 437, column: 38, scope: !8772)
!8920 = !DILocation(line: 437, column: 52, scope: !8772)
!8921 = !DILocation(line: 437, column: 25, scope: !8774)
!8922 = !DILocalVariable(name: "self", scope: !8923, file: !5756, line: 438, type: !202, align: 8)
!8923 = !DILexicalBlockFile(scope: !8924, file: !5756, discriminator: 0)
!8924 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4820, file: !4819, line: 323, type: !5804, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8925)
!8925 = !{!8922}
!8926 = !DILocation(line: 438, column: 42, scope: !8923, inlinedAt: !8831)
!8927 = !DILocation(line: 438, column: 83, scope: !8776)
!8928 = !DILocation(line: 438, column: 71, scope: !8776)
!8929 = !DILocation(line: 438, column: 28, scope: !8776)
!8930 = !DILocation(line: 439, column: 28, scope: !8776)
!8931 = !DILocalVariable(name: "self", scope: !8932, file: !5756, line: 439, type: !3667, align: 8)
!8932 = !DILexicalBlockFile(scope: !8933, file: !5756, discriminator: 0)
!8933 = distinct !DISubprogram(name: "eq<[u8], [u8]>", linkageName: "_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17hb7a47c298fbe48b5E", scope: !8934, file: !3702, line: 1512, type: !8935, scopeLine: 1512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !8939, retainedNodes: !8937)
!8934 = !DINamespace(name: "{impl#9}", scope: !3723)
!8935 = !DISubroutineType(types: !8936)
!8936 = !{!324, !3667, !3667}
!8937 = !{!8931, !8938}
!8938 = !DILocalVariable(name: "other", scope: !8932, file: !5756, line: 439, type: !3667, align: 8)
!8939 = !{!8940, !8941}
!8940 = !DITemplateTypeParameter(name: "A", type: !53)
!8941 = !DITemplateTypeParameter(name: "B", type: !53)
!8942 = !DILocation(line: 439, column: 28, scope: !8932, inlinedAt: !8930)
!8943 = !DILocation(line: 439, column: 59, scope: !8776)
!8944 = !DILocation(line: 439, column: 56, scope: !8776)
!8945 = !DILocalVariable(name: "self", scope: !8946, file: !5756, line: 439, type: !529, align: 8)
!8946 = !DILexicalBlockFile(scope: !8947, file: !5756, discriminator: 0)
!8947 = distinct !DISubprogram(name: "index<u8, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hc8f7fe0e1b98a84bE", scope: !1770, file: !646, line: 17, type: !8948, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !8813, retainedNodes: !8950)
!8948 = !DISubroutineType(types: !8949)
!8949 = !{!529, !529, !655, !508}
!8950 = !{!8945, !8951}
!8951 = !DILocalVariable(name: "index", scope: !8946, file: !5756, line: 439, type: !655, align: 8)
!8952 = !DILocation(line: 439, column: 38, scope: !8946, inlinedAt: !8953)
!8953 = !DILocation(line: 286, column: 9, scope: !8835, inlinedAt: !8841)
!8954 = !DILocation(line: 436, column: 17, scope: !8772)
!8955 = !DILocation(line: 439, column: 37, scope: !8776)
!8956 = !DILocation(line: 438, column: 21, scope: !8774)
!8957 = !DILocation(line: 440, column: 54, scope: !8776)
!8958 = !DILocation(line: 440, column: 41, scope: !8776)
!8959 = !DILocation(line: 440, column: 36, scope: !8776)
!8960 = !DILocation(line: 1, column: 1, scope: !8961)
!8961 = !DILexicalBlockFile(scope: !8770, file: !6833, discriminator: 0)
!8962 = distinct !DISubprogram(name: "haystack", linkageName: "_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h1bc4f9f368d5a079E", scope: !8746, file: !5756, line: 379, type: !8963, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8965)
!8963 = !DISubroutineType(types: !8964)
!8964 = !{!202, !4859}
!8965 = !{!8966}
!8966 = !DILocalVariable(name: "self", arg: 1, scope: !8962, file: !5756, line: 379, type: !4859)
!8967 = !DILocation(line: 379, column: 17, scope: !8962)
!8968 = !DILocation(line: 380, column: 9, scope: !8962)
!8969 = !DILocation(line: 381, column: 6, scope: !8962)
!8970 = distinct !DISubprogram(name: "encode<()>", linkageName: "_ZN91_$LT$core..num..nonzero..NonZeroU32$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h6eff8dc709d18f76E", scope: !8971, file: !784, line: 162, type: !8972, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !622, retainedNodes: !8974)
!8971 = !DINamespace(name: "{impl#8}", scope: !888)
!8972 = !DISubroutineType(types: !8973)
!8973 = !{null, !351, !615, !319}
!8974 = !{!8975, !8976, !8977}
!8975 = !DILocalVariable(name: "self", arg: 1, scope: !8970, file: !784, line: 162, type: !351)
!8976 = !DILocalVariable(name: "w", arg: 2, scope: !8970, file: !784, line: 162, type: !615)
!8977 = !DILocalVariable(name: "s", arg: 3, scope: !8970, file: !784, line: 162, type: !319)
!8978 = !DILocation(line: 162, column: 15, scope: !8970)
!8979 = !DILocation(line: 162, column: 21, scope: !8970)
!8980 = !DILocation(line: 162, column: 37, scope: !8970)
!8981 = !DILocation(line: 163, column: 9, scope: !8970)
!8982 = !DILocalVariable(name: "self", scope: !8983, file: !784, line: 163, type: !351, align: 4)
!8983 = !DILexicalBlockFile(scope: !8984, file: !784, discriminator: 0)
!8984 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero10NonZeroU323get17hedf1e5c3f5068f5eE", scope: !351, file: !6338, line: 82, type: !8985, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !8987)
!8985 = !DISubroutineType(types: !8986)
!8986 = !{!356, !351}
!8987 = !{!8982}
!8988 = !DILocation(line: 163, column: 9, scope: !8983, inlinedAt: !8981)
!8989 = !DILocation(line: 164, column: 6, scope: !8970)
!8990 = distinct !DISubprogram(name: "position<u8, core::slice::memchr::memchr::{closure_env#0}>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h1d2c646529b828afE", scope: !8992, file: !8991, line: 288, type: !8993, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !9011, retainedNodes: !8996)
!8991 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "41903112aef4079fb81d70967f52d92d")
!8992 = !DINamespace(name: "{impl#181}", scope: !2255)
!8993 = !DISubroutineType(types: !8994)
!8994 = !{!2697, !8995, !5322}
!8995 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<u8>", baseType: !2254, size: 64, align: 64, dwarfAddressSpace: 0)
!8996 = !{!8997, !8998, !8999, !9001, !9003, !9005, !9007, !9009}
!8997 = !DILocalVariable(name: "self", arg: 1, scope: !8990, file: !8991, line: 288, type: !8995)
!8998 = !DILocalVariable(name: "predicate", arg: 2, scope: !8990, file: !8991, line: 288, type: !5322)
!8999 = !DILocalVariable(name: "n", scope: !9000, file: !8991, line: 292, type: !9, align: 8)
!9000 = distinct !DILexicalBlock(scope: !8990, file: !8991, line: 292, column: 17)
!9001 = !DILocalVariable(name: "start", scope: !9002, file: !8991, line: 292, type: !48, align: 8)
!9002 = distinct !DILexicalBlock(scope: !8990, file: !8991, line: 18, column: 9)
!9003 = !DILocalVariable(name: "size", scope: !9004, file: !8991, line: 292, type: !9, align: 8)
!9004 = distinct !DILexicalBlock(scope: !9002, file: !8991, line: 19, column: 9)
!9005 = !DILocalVariable(name: "diff", scope: !9006, file: !8991, line: 292, type: !9, align: 8)
!9006 = distinct !DILexicalBlock(scope: !9004, file: !8991, line: 29, column: 13)
!9007 = !DILocalVariable(name: "i", scope: !9008, file: !8991, line: 293, type: !9, align: 8)
!9008 = distinct !DILexicalBlock(scope: !9000, file: !8991, line: 293, column: 17)
!9009 = !DILocalVariable(name: "x", scope: !9010, file: !8991, line: 294, type: !82, align: 8)
!9010 = distinct !DILexicalBlock(scope: !9008, file: !8991, line: 294, column: 49)
!9011 = !{!55, !9012}
!9012 = !DITemplateTypeParameter(name: "P", type: !5322)
!9013 = !DILocation(line: 288, column: 28, scope: !8990)
!9014 = !DILocation(line: 288, column: 39, scope: !8990)
!9015 = !DILocation(line: 292, column: 21, scope: !9000)
!9016 = !DILocation(line: 293, column: 21, scope: !9008)
!9017 = !DILocation(line: 292, column: 25, scope: !8990)
!9018 = !DILocation(line: 292, column: 25, scope: !9002)
!9019 = !DILocation(line: 292, column: 25, scope: !9020, inlinedAt: !9022)
!9020 = !DILexicalBlockFile(scope: !9021, file: !8991, discriminator: 0)
!9021 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17h91cdd0805177200dE", scope: !413, file: !1128, line: 314, type: !4594, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !27)
!9022 = !DILocation(line: 41, column: 5, scope: !9023, inlinedAt: !9027)
!9023 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17hb94106a7a2e245e2E", scope: !2255, file: !9024, line: 40, type: !9025, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !27)
!9024 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "36678af40fdc22d7150f6f91e11271b3")
!9025 = !DISubroutineType(types: !9026)
!9026 = !{!9, !52}
!9027 = !DILocation(line: 19, column: 20, scope: !9002)
!9028 = !DILocation(line: 292, column: 25, scope: !9004)
!9029 = !DILocalVariable(name: "self", scope: !9030, file: !8991, line: 292, type: !52, align: 8)
!9030 = !DILexicalBlockFile(scope: !9031, file: !8991, discriminator: 0)
!9031 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hcbc6732df2ddeb05E", scope: !577, file: !576, line: 178, type: !9025, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !9032)
!9032 = !{!9029}
!9033 = !DILocation(line: 292, column: 25, scope: !9030, inlinedAt: !9034)
!9034 = !DILocation(line: 23, column: 13, scope: !9004)
!9035 = !DILocalVariable(name: "self", scope: !9036, file: !8991, line: 292, type: !9, align: 8)
!9036 = !DILexicalBlockFile(scope: !9037, file: !8991, discriminator: 0)
!9037 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h5e8f57e42e99a91fE", scope: !4430, file: !4429, line: 1231, type: !3704, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !9038)
!9038 = !{!9035, !9039}
!9039 = !DILocalVariable(name: "rhs", scope: !9036, file: !8991, line: 292, type: !9, align: 8)
!9040 = !DILocation(line: 292, column: 25, scope: !9036, inlinedAt: !9034)
!9041 = !DILocalVariable(name: "self", scope: !9042, file: !8991, line: 292, type: !52, align: 8)
!9042 = !DILexicalBlockFile(scope: !9043, file: !8991, discriminator: 0)
!9043 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hcbc6732df2ddeb05E", scope: !577, file: !576, line: 178, type: !9025, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !9044)
!9044 = !{!9041}
!9045 = !DILocation(line: 292, column: 25, scope: !9042, inlinedAt: !9046)
!9046 = !DILocation(line: 29, column: 47, scope: !9004)
!9047 = !DILocalVariable(name: "self", scope: !9048, file: !8991, line: 292, type: !48, align: 8)
!9048 = !DILexicalBlockFile(scope: !9049, file: !8991, discriminator: 0)
!9049 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he85ce89b0e21db75E", scope: !48, file: !2484, line: 330, type: !6111, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !9050)
!9050 = !{!9047}
!9051 = !DILocation(line: 292, column: 25, scope: !9048, inlinedAt: !9052)
!9052 = !DILocation(line: 29, column: 65, scope: !9004)
!9053 = !DILocalVariable(name: "self", scope: !9054, file: !8991, line: 292, type: !289, align: 8)
!9054 = !DILexicalBlockFile(scope: !9055, file: !8991, discriminator: 0)
!9055 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h8f6f93cb0fd2609fE", scope: !691, file: !681, line: 184, type: !9056, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !9058)
!9056 = !DISubroutineType(types: !9057)
!9057 = !{!9, !289}
!9058 = !{!9053}
!9059 = !DILocation(line: 292, column: 25, scope: !9054, inlinedAt: !9052)
!9060 = !DILocation(line: 292, column: 25, scope: !9006)
!9061 = !DILocation(line: 293, column: 29, scope: !9000)
!9062 = !DILocation(line: 294, column: 17, scope: !9008)
!9063 = !DILocalVariable(name: "self", scope: !9064, file: !8991, line: 292, type: !48, align: 8)
!9064 = !DILexicalBlockFile(scope: !9065, file: !8991, discriminator: 0)
!9065 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he85ce89b0e21db75E", scope: !48, file: !2484, line: 330, type: !6111, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !9066)
!9066 = !{!9063}
!9067 = !DILocation(line: 292, column: 25, scope: !9064, inlinedAt: !9068)
!9068 = !DILocation(line: 23, column: 43, scope: !9004)
!9069 = !DILocalVariable(name: "self", scope: !9070, file: !8991, line: 292, type: !289, align: 8)
!9070 = !DILexicalBlockFile(scope: !9071, file: !8991, discriminator: 0)
!9071 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h8f6f93cb0fd2609fE", scope: !691, file: !681, line: 184, type: !9056, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !54, retainedNodes: !9072)
!9072 = !{!9069}
!9073 = !DILocation(line: 292, column: 25, scope: !9070, inlinedAt: !9068)
!9074 = !DILocation(line: 294, column: 37, scope: !9010)
!9075 = !DILocation(line: 304, column: 13, scope: !8990)
!9076 = !DILocation(line: 294, column: 27, scope: !9010)
!9077 = !DILocation(line: 294, column: 32, scope: !9010)
!9078 = !DILocation(line: 295, column: 24, scope: !9010)
!9079 = !DILocation(line: 303, column: 17, scope: !9008)
!9080 = !DILocation(line: 304, column: 14, scope: !8990)
!9081 = !DILocation(line: 301, column: 21, scope: !9010)
!9082 = !DILocation(line: 298, column: 41, scope: !9010)
!9083 = !DILocation(line: 298, column: 45, scope: !9010)
!9084 = !DILocation(line: 298, column: 34, scope: !9010)
!9085 = !DILocation(line: 299, column: 37, scope: !9010)
!9086 = !DILocation(line: 299, column: 32, scope: !9010)
!9087 = !DILocation(line: 288, column: 13, scope: !8990)
!9088 = distinct !DISubprogram(name: "get<alloc::string::String>", linkageName: "_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17h4cad47839b91b8f4E", scope: !9089, file: !3413, line: 644, type: !9090, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !72, retainedNodes: !9093)
!9089 = !DINamespace(name: "{impl#1}", scope: !14)
!9090 = !DISubroutineType(types: !9091)
!9091 = !{!7184, !9092}
!9092 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::panicking::begin_panic::PanicPayload<alloc::string::String>", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!9093 = !{!9094, !9095}
!9094 = !DILocalVariable(name: "self", arg: 1, scope: !9088, file: !3413, line: 644, type: !9092)
!9095 = !DILocalVariable(name: "a", scope: !9096, file: !3413, line: 646, type: !504, align: 8)
!9096 = distinct !DILexicalBlock(scope: !9088, file: !3413, line: 646, column: 17)
!9097 = !DILocation(line: 644, column: 16, scope: !9088)
!9098 = !DILocation(line: 645, column: 19, scope: !9088)
!9099 = !DILocation(line: 645, column: 13, scope: !9088)
!9100 = !DILocation(line: 647, column: 25, scope: !9088)
!9101 = !DILocation(line: 646, column: 22, scope: !9088)
!9102 = !DILocation(line: 646, column: 22, scope: !9096)
!9103 = !DILocation(line: 646, column: 32, scope: !9096)
!9104 = !DILocation(line: 649, column: 10, scope: !9088)
!9105 = distinct !DISubprogram(name: "take_box<alloc::string::String>", linkageName: "_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17hf166ab1c4ec907f8E", scope: !9089, file: !3413, line: 631, type: !9106, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !72, retainedNodes: !9108)
!9106 = !DISubroutineType(types: !9107)
!9107 = !{!4734, !9092}
!9108 = !{!9109, !9110, !9112}
!9109 = !DILocalVariable(name: "self", arg: 1, scope: !9105, file: !3413, line: 631, type: !9092)
!9110 = !DILocalVariable(name: "data", scope: !9111, file: !3413, line: 637, type: !2922, align: 8)
!9111 = distinct !DILexicalBlock(scope: !9105, file: !3413, line: 637, column: 13)
!9112 = !DILocalVariable(name: "a", scope: !9113, file: !3413, line: 638, type: !30, align: 8)
!9113 = distinct !DILexicalBlock(scope: !9105, file: !3413, line: 638, column: 17)
!9114 = !DILocation(line: 631, column: 21, scope: !9105)
!9115 = !DILocation(line: 637, column: 17, scope: !9111)
!9116 = !DILocation(line: 638, column: 22, scope: !9113)
!9117 = !DILocalVariable(name: "x", scope: !9118, file: !3413, line: 638, type: !30, align: 8)
!9118 = !DILexicalBlockFile(scope: !9119, file: !3413, discriminator: 0)
!9119 = distinct !DISubprogram(name: "new<alloc::string::String>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$3new17h59facb3e7de4bd45E", scope: !9120, file: !7449, line: 213, type: !9121, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !28, retainedNodes: !9124)
!9120 = !DINamespace(name: "{impl#0}", scope: !7451)
!9121 = !DISubroutineType(types: !9122)
!9122 = !{!9123, !30}
!9123 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "alloc::boxed::Box<alloc::string::String, alloc::alloc::Global>", baseType: !30, size: 64, align: 64, dwarfAddressSpace: 0)
!9124 = !{!9117}
!9125 = !DILocation(line: 638, column: 28, scope: !9118, inlinedAt: !9126)
!9126 = !DILocation(line: 638, column: 28, scope: !9113)
!9127 = !DILocalVariable(name: "alloc", scope: !9128, file: !3413, line: 641, type: !61, align: 1)
!9128 = !DILexicalBlockFile(scope: !9129, file: !3413, discriminator: 0)
!9129 = distinct !DILexicalBlock(scope: !9130, file: !7449, line: 1108, column: 9)
!9130 = distinct !DISubprogram(name: "into_raw_with_allocator<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hfe03cb3bc89cb68fE", scope: !7450, file: !7449, line: 1107, type: !9131, scopeLine: 1107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7154, retainedNodes: !9137)
!9131 = !DISubroutineType(types: !9132)
!9132 = !{!9133, !2922}
!9133 = !DICompositeType(tag: DW_TAG_structure_type, name: "(*mut (dyn core::any::Any + core::marker::Send), alloc::alloc::Global)", file: !2, size: 128, align: 64, elements: !9134, templateParams: !27, identifier: "56892c925d3b2e05eabe8e4473b069a4")
!9134 = !{!9135, !9136}
!9135 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9133, file: !2, baseType: !4734, size: 128, align: 64)
!9136 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !9133, file: !2, baseType: !61, align: 8, offset: 128)
!9137 = !{!9138, !9140, !9127}
!9138 = !DILocalVariable(name: "b", scope: !9139, file: !3413, line: 641, type: !2922, align: 8)
!9139 = !DILexicalBlockFile(scope: !9130, file: !3413, discriminator: 0)
!9140 = !DILocalVariable(name: "leaked", scope: !9128, file: !3413, line: 641, type: !7133, align: 8)
!9141 = !DILocation(line: 641, column: 13, scope: !9128, inlinedAt: !9142)
!9142 = !DILocation(line: 1055, column: 9, scope: !9143, inlinedAt: !9149)
!9143 = distinct !DISubprogram(name: "into_raw<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17hdda94bd2f7922d6dE", scope: !7450, file: !7449, line: 1054, type: !9144, scopeLine: 1054, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !7154, retainedNodes: !9146)
!9144 = !DISubroutineType(types: !9145)
!9145 = !{!4734, !2922}
!9146 = !{!9147}
!9147 = !DILocalVariable(name: "b", scope: !9148, file: !3413, line: 641, type: !2922, align: 8)
!9148 = !DILexicalBlockFile(scope: !9143, file: !3413, discriminator: 0)
!9149 = !DILocation(line: 641, column: 13, scope: !9111)
!9150 = !DILocation(line: 637, column: 30, scope: !9105)
!9151 = !DILocalVariable(name: "self", scope: !9152, file: !3413, line: 637, type: !4292, align: 8)
!9152 = !DILexicalBlockFile(scope: !9153, file: !3413, discriminator: 0)
!9153 = distinct !DISubprogram(name: "take<alloc::string::String>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17h9749f7dd120c594eE", scope: !19, file: !1137, line: 1574, type: !9154, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !28, retainedNodes: !9156)
!9154 = !DISubroutineType(types: !9155)
!9155 = !{!19, !4292}
!9156 = !{!9151}
!9157 = !DILocation(line: 637, column: 30, scope: !9152, inlinedAt: !9150)
!9158 = !DILocation(line: 637, column: 24, scope: !9105)
!9159 = !DILocation(line: 639, column: 25, scope: !9105)
!9160 = !DILocation(line: 638, column: 22, scope: !9105)
!9161 = !DILocation(line: 638, column: 37, scope: !9113)
!9162 = !DILocation(line: 641, column: 27, scope: !9111)
!9163 = !DILocation(line: 641, column: 13, scope: !9148, inlinedAt: !9149)
!9164 = !DILocation(line: 641, column: 13, scope: !9139, inlinedAt: !9142)
!9165 = !DILocation(line: 631, column: 9, scope: !9105)
!9166 = !DILocation(line: 642, column: 9, scope: !9105)
!9167 = !DILocalVariable(name: "self", scope: !9168, file: !3413, line: 641, type: !7133, align: 8)
!9168 = !DILexicalBlockFile(scope: !9169, file: !3413, discriminator: 0)
!9169 = distinct !DISubprogram(name: "as_ptr<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h7c65a0cf6b773303E", scope: !7133, file: !6998, line: 103, type: !7580, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4740, retainedNodes: !9170)
!9170 = !{!9167}
!9171 = !DILocation(line: 641, column: 13, scope: !9168, inlinedAt: !9172)
!9172 = !DILocation(line: 1109, column: 10, scope: !9129, inlinedAt: !9142)
!9173 = !DILocalVariable(name: "self", scope: !9174, file: !3413, line: 641, type: !7136, align: 8)
!9174 = !DILexicalBlockFile(scope: !9175, file: !3413, discriminator: 0)
!9175 = distinct !DISubprogram(name: "as_ptr<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h3c416757b48d700aE", scope: !7136, file: !2484, line: 330, type: !7203, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !4740, retainedNodes: !9176)
!9176 = !{!9173}
!9177 = !DILocation(line: 641, column: 13, scope: !9174, inlinedAt: !9178)
!9178 = !DILocation(line: 104, column: 9, scope: !9169, inlinedAt: !9172)
!9179 = !DILocation(line: 642, column: 10, scope: !9105)
!9180 = distinct !DISubprogram(name: "decode<()>", linkageName: "_ZN94_$LT$core..num..nonzero..NonZeroU32$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17h195da8d32a305c54E", scope: !9181, file: !784, line: 168, type: !9182, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !622, retainedNodes: !9184)
!9181 = !DINamespace(name: "{impl#9}", scope: !888)
!9182 = !DISubroutineType(types: !9183)
!9183 = !{!351, !635, !319}
!9184 = !{!9185, !9186}
!9185 = !DILocalVariable(name: "r", arg: 1, scope: !9180, file: !784, line: 168, type: !635)
!9186 = !DILocalVariable(name: "s", arg: 2, scope: !9180, file: !784, line: 168, type: !319)
!9187 = !DILocation(line: 168, column: 15, scope: !9180)
!9188 = !DILocation(line: 168, column: 35, scope: !9180)
!9189 = !DILocalVariable(name: "self", scope: !9190, file: !784, line: 169, type: !9192, align: 4)
!9190 = !DILexicalBlockFile(scope: !9191, file: !784, discriminator: 0)
!9191 = distinct !DISubprogram(name: "unwrap<core::num::nonzero::NonZeroU32>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17hd6219e7c222cb114E", scope: !9192, file: !1137, line: 772, type: !9205, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !9198, retainedNodes: !9207)
!9192 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::num::nonzero::NonZeroU32>", scope: !20, file: !2, size: 32, align: 32, elements: !9193, templateParams: !27, identifier: "cd212e3ed13ffb24831bb0bf6d559ddd")
!9193 = !{!9194}
!9194 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9192, file: !2, size: 32, align: 32, elements: !9195, templateParams: !27, identifier: "82e841e1a4eb75879af45f153f4c3d0", discriminator: !9204)
!9195 = !{!9196, !9200}
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !9194, file: !2, baseType: !9197, size: 32, align: 32, extraData: i64 0)
!9197 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !9192, file: !2, size: 32, align: 32, elements: !27, templateParams: !9198, identifier: "818bf55b775f2ca7c2b4335ce5977922")
!9198 = !{!9199}
!9199 = !DITemplateTypeParameter(name: "T", type: !351)
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !9194, file: !2, baseType: !9201, size: 32, align: 32)
!9201 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !9192, file: !2, size: 32, align: 32, elements: !9202, templateParams: !9198, identifier: "ab71a80eb785a23e68bbed64212cd93")
!9202 = !{!9203}
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9201, file: !2, baseType: !351, size: 32, align: 32)
!9204 = !DIDerivedType(tag: DW_TAG_member, scope: !9192, file: !2, baseType: !356, size: 32, align: 32, flags: DIFlagArtificial)
!9205 = !DISubroutineType(types: !9206)
!9206 = !{!351, !9192, !508}
!9207 = !{!9189, !9208}
!9208 = !DILocalVariable(name: "val", scope: !9209, file: !784, line: 169, type: !351, align: 4)
!9209 = !DILexicalBlockFile(scope: !9210, file: !784, discriminator: 0)
!9210 = distinct !DILexicalBlock(scope: !9191, file: !1137, line: 774, column: 13)
!9211 = !DILocation(line: 169, column: 9, scope: !9190, inlinedAt: !9212)
!9212 = !DILocation(line: 169, column: 9, scope: !9180)
!9213 = !DILocation(line: 169, column: 19, scope: !9180)
!9214 = !DILocalVariable(name: "n", scope: !9215, file: !784, line: 169, type: !356, align: 4)
!9215 = !DILexicalBlockFile(scope: !9216, file: !784, discriminator: 0)
!9216 = distinct !DISubprogram(name: "new", linkageName: "_ZN4core3num7nonzero10NonZeroU323new17h446a56fed6b85c04E", scope: !351, file: !6338, line: 69, type: !9217, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !9219)
!9217 = !DISubroutineType(types: !9218)
!9218 = !{!9192, !356}
!9219 = !{!9214}
!9220 = !DILocation(line: 169, column: 9, scope: !9215, inlinedAt: !9212)
!9221 = !DILocation(line: 170, column: 6, scope: !9180)
!9222 = distinct !DISubprogram(name: "decode<()>", linkageName: "_ZN96_$LT$proc_macro..bridge..client..Span$u20$as$u20$proc_macro..bridge..rpc..DecodeMut$LT$S$GT$$GT$6decode17h393090e286eefc6cE", scope: !9223, file: !611, line: 164, type: !9224, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !622, retainedNodes: !9226)
!9223 = !DINamespace(name: "{impl#64}", scope: !239)
!9224 = !DISubroutineType(types: !9225)
!9225 = !{!791, !635, !319}
!9226 = !{!9227, !9228}
!9227 = !DILocalVariable(name: "r", arg: 1, scope: !9222, file: !611, line: 164, type: !635)
!9228 = !DILocalVariable(name: "s", arg: 2, scope: !9222, file: !611, line: 164, type: !319)
!9229 = !DILocation(line: 164, column: 27, scope: !9222)
!9230 = !DILocation(line: 164, column: 47, scope: !9222)
!9231 = !DILocation(line: 166, column: 33, scope: !9222)
!9232 = !DILocation(line: 165, column: 21, scope: !9222)
!9233 = !DILocation(line: 169, column: 18, scope: !9222)
!9234 = distinct !DISubprogram(name: "deref_mut<proc_macro::bridge::client::BridgeStateL>", linkageName: "_ZN96_$LT$proc_macro..bridge..scoped_cell..RefMutL$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hb74aae393af6043eE", scope: !9235, file: !978, line: 30, type: !9236, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !1009, retainedNodes: !9239)
!9235 = !DINamespace(name: "{impl#2}", scope: !980)
!9236 = !DISubroutineType(types: !9237)
!9237 = !{!1083, !9238}
!9238 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut proc_macro::bridge::scoped_cell::RefMutL<proc_macro::bridge::client::BridgeStateL>", baseType: !1080, size: 64, align: 64, dwarfAddressSpace: 0)
!9239 = !{!9240}
!9240 = !DILocalVariable(name: "self", arg: 1, scope: !9234, file: !978, line: 30, type: !9238)
!9241 = !DILocation(line: 30, column: 18, scope: !9234)
!9242 = !DILocation(line: 31, column: 9, scope: !9234)
!9243 = !DILocation(line: 32, column: 6, scope: !9234)
!9244 = distinct !DISubprogram(name: "encode<()>", linkageName: "_ZN98_$LT$proc_macro..bridge..rpc..PanicMessage$u20$as$u20$proc_macro..bridge..rpc..Encode$LT$S$GT$$GT$6encode17h48e5f54ac329d40aE", scope: !9245, file: !784, line: 292, type: !9246, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !622, retainedNodes: !9248)
!9245 = !DINamespace(name: "{impl#23}", scope: !888)
!9246 = !DISubroutineType(types: !9247)
!9247 = !{null, !887, !615, !319}
!9248 = !{!9249, !9250, !9251}
!9249 = !DILocalVariable(name: "self", arg: 1, scope: !9244, file: !784, line: 292, type: !887)
!9250 = !DILocalVariable(name: "w", arg: 2, scope: !9244, file: !784, line: 292, type: !615)
!9251 = !DILocalVariable(name: "s", arg: 3, scope: !9244, file: !784, line: 292, type: !319)
!9252 = !DILocation(line: 292, column: 15, scope: !9244)
!9253 = !DILocation(line: 292, column: 21, scope: !9244)
!9254 = !DILocation(line: 292, column: 37, scope: !9244)
!9255 = !DILocation(line: 293, column: 9, scope: !9244)
!9256 = !DILocation(line: 294, column: 5, scope: !9244)
!9257 = !DILocation(line: 292, column: 5, scope: !9244)
!9258 = !DILocation(line: 294, column: 6, scope: !9244)
!9259 = distinct !DISubprogram(name: "parse", linkageName: "_ZN10f128_input5parse17h7ee261afd6fa0d57E", scope: !233, file: !6833, line: 8, type: !9260, scopeLine: 8, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !9262)
!9260 = !DISubroutineType(types: !9261)
!9261 = !{!30, !202}
!9262 = !{!9263, !9264, !9266, !9268, !9270, !9273}
!9263 = !DILocalVariable(name: "s", arg: 1, scope: !9259, file: !6833, line: 8, type: !202)
!9264 = !DILocalVariable(name: "s", scope: !9265, file: !6833, line: 9, type: !30, align: 8)
!9265 = distinct !DILexicalBlock(scope: !9259, file: !6833, line: 9, column: 5)
!9266 = !DILocalVariable(name: "s", scope: !9267, file: !6833, line: 10, type: !202, align: 8)
!9267 = distinct !DILexicalBlock(scope: !9265, file: !6833, line: 10, column: 5)
!9268 = !DILocalVariable(name: "it", scope: !9269, file: !6833, line: 12, type: !2276, align: 1)
!9269 = distinct !DILexicalBlock(scope: !9267, file: !6833, line: 12, column: 9)
!9270 = !DILocalVariable(name: "res", scope: !9271, file: !6833, line: 13, type: !30, align: 8)
!9271 = !DILexicalBlockFile(scope: !9272, file: !6833, discriminator: 0)
!9272 = distinct !DILexicalBlock(scope: !9269, file: !1422, line: 116, column: 9)
!9273 = !DILocalVariable(name: "res", scope: !9274, file: !6833, line: 17, type: !30, align: 8)
!9274 = !DILexicalBlockFile(scope: !9275, file: !6833, discriminator: 0)
!9275 = distinct !DILexicalBlock(scope: !9267, file: !1422, line: 116, column: 9)
!9276 = !DILocation(line: 13, column: 13, scope: !9271)
!9277 = !DILocation(line: 8, column: 10, scope: !9259)
!9278 = !DILocation(line: 9, column: 9, scope: !9265)
!9279 = !DILocation(line: 10, column: 9, scope: !9267)
!9280 = !DILocation(line: 12, column: 12, scope: !9269)
!9281 = !DILocation(line: 17, column: 26, scope: !9274)
!9282 = !DILocation(line: 9, column: 13, scope: !9259)
!9283 = !DILocation(line: 10, column: 14, scope: !9265)
!9284 = !DILocation(line: 19, column: 1, scope: !9259)
!9285 = !DILocation(line: 10, column: 13, scope: !9265)
!9286 = !DILocation(line: 11, column: 23, scope: !9267)
!9287 = !DILocation(line: 11, column: 11, scope: !9267)
!9288 = !DILocation(line: 11, column: 5, scope: !9267)
!9289 = !DILocation(line: 8, column: 1, scope: !9259)
!9290 = !DILocation(line: 12, column: 12, scope: !9267)
!9291 = !DILocation(line: 15, column: 17, scope: !9269)
!9292 = !DILocalVariable(name: "self", arg: 1, scope: !9293, file: !2275, line: 226, type: !2276)
!9293 = distinct !DISubprogram(name: "into_inner", linkageName: "_ZN13f128_internal6f128_t4f12810into_inner17h4e4be23699f41a58E", scope: !2276, file: !2275, line: 226, type: !9294, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !9296)
!9294 = !DISubroutineType(types: !9295)
!9295 = !{!2281, !2276}
!9296 = !{!9292}
!9297 = !DILocation(line: 226, column: 23, scope: !9293, inlinedAt: !9298)
!9298 = distinct !DILocation(line: 15, column: 17, scope: !9269)
!9299 = !DILocation(line: 227, column: 9, scope: !9293, inlinedAt: !9298)
!9300 = !DILocation(line: 228, column: 6, scope: !9293, inlinedAt: !9298)
!9301 = !DILocation(line: 17, column: 26, scope: !9267)
!9302 = !DILocation(line: 17, column: 19, scope: !9267)
!9303 = !DILocation(line: 13, column: 13, scope: !9269)
!9304 = !DILocation(line: 19, column: 2, scope: !9259)
!9305 = distinct !DISubprogram(name: "f128_inner", linkageName: "_ZN10f128_input10f128_inner17h694766312852ec42E", scope: !233, file: !6833, line: 22, type: !335, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !399, templateParams: !27, retainedNodes: !9306)
!9306 = !{!9307, !9308}
!9307 = !DILocalVariable(name: "item", arg: 1, scope: !9305, file: !6833, line: 22, type: !337)
!9308 = !DILocalVariable(name: "s", scope: !9309, file: !6833, line: 23, type: !30, align: 8)
!9309 = distinct !DILexicalBlock(scope: !9305, file: !6833, line: 23, column: 5)
!9310 = !DILocation(line: 22, column: 19, scope: !9305)
!9311 = !DILocation(line: 23, column: 9, scope: !9309)
!9312 = !DILocation(line: 23, column: 13, scope: !9305)
!9313 = !DILocation(line: 25, column: 1, scope: !9305)
!9314 = !DILocation(line: 24, column: 12, scope: !9309)
!9315 = !DILocation(line: 24, column: 5, scope: !9309)
!9316 = !DILocation(line: 22, column: 1, scope: !9305)
!9317 = !DILocation(line: 25, column: 2, scope: !9305)
