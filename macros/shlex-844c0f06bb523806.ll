; ModuleID = 'shlex.7a89fbe6-cgu.0'
source_filename = "shlex.7a89fbe6-cgu.0"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked::{closure#0}]" = type { i64*, i64*, { [0 x i8]*, i64 }* }
%"alloc::vec::Vec<alloc::string::String>" = type { { i64*, i64 }, i64 }
%Shlex = type { %"bytes::Shlex" }
%"bytes::Shlex" = type { { i8*, i8* }, i64, i8, [7 x i8] }
%"alloc::string::String" = type { %"alloc::vec::Vec<u8>" }
%"alloc::vec::Vec<u8>" = type { { i8*, i64 }, i64 }
%"alloc::alloc::Global" = type {}
%"core::option::Option<alloc::string::String>" = type { {}*, [2 x i64] }
%"core::option::Option<alloc::string::String>::Some" = type { %"alloc::string::String" }
%"alloc::vec::Vec<alloc::vec::Vec<u8>>" = type { { i64*, i64 }, i64 }
%"core::option::Option<alloc::vec::Vec<u8>>" = type { {}*, [2 x i64] }
%"core::option::Option<alloc::vec::Vec<u8>>::Some" = type { %"alloc::vec::Vec<u8>" }
%"core::result::Result<alloc::borrow::Cow<str>, QuoteError>" = type { i64, [3 x i64] }
%"core::panic::location::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"QuoteError::Nul" = type {}
%"core::result::Result<core::convert::Infallible, QuoteError>::Err" = type { %"QuoteError::Nul" }
%"core::result::Result<alloc::borrow::Cow<str>, QuoteError>::Err" = type { %"QuoteError::Nul" }
%"core::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%"core::ptr::metadata::PtrComponents<u8>" = type { {}*, {} }
%"core::ptr::metadata::PtrRepr<u8>" = type { [1 x i64] }
%"core::alloc::layout::LayoutError" = type {}
%"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::ops::range::RangeFull" = type {}
%"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0/src/lib.rs:69:27: 69:38]" = type {}
%"alloc::borrow::Cow<[u8]>" = type { i64, [3 x i64] }
%"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>" = type { i64, [3 x i64] }
%"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>::Ok" = type { %"alloc::borrow::Cow<[u8]>" }
%"alloc::borrow::Cow<str>" = type { i64, [3 x i64] }
%"core::result::Result<alloc::borrow::Cow<str>, QuoteError>::Ok" = type { %"alloc::borrow::Cow<str>" }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::alloc::AllocError" = type {}
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"[closure@alloc::raw_vec::handle_reserve::{closure#0}]" = type {}
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok" = type { {} }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]" = type {}
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]" = type { i8**, i8**, i64* }
%"alloc::borrow::Cow<[u8]>::Borrowed" = type { [1 x i64], { [0 x i8]*, i64 } }
%"alloc::borrow::Cow<[u8]>::Owned" = type { [1 x i64], %"alloc::vec::Vec<u8>" }
%"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"alloc::borrow::Cow<str>::Owned" = type { [1 x i64], %"alloc::string::String" }
%"alloc::borrow::Cow<str>::Borrowed" = type { [1 x i64], { [0 x i8]*, i64 } }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>" = type { [2 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some" = type { { i8*, { i64, i64 } } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue" = type { [1 x i64], { i8*, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ptr::metadata::PtrRepr<[alloc::string::String]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<u8>]>" = type { [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, QuoteError>, alloc::borrow::Cow<[u8]>>" = type { i64, [3 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, QuoteError>, alloc::borrow::Cow<[u8]>>::Continue" = type { %"alloc::borrow::Cow<[u8]>" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, QuoteError>, alloc::borrow::Cow<[u8]>>::Break" = type { %"core::result::Result<core::convert::Infallible, QuoteError>::Err" }
%"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0/src/bytes.rs:211:51: 211:55]" = type {}
%"core::option::Option<alloc::vec::Vec<alloc::vec::Vec<u8>>>" = type { {}*, [2 x i64] }
%"core::option::Option<alloc::vec::Vec<alloc::vec::Vec<u8>>>::Some" = type { %"alloc::vec::Vec<alloc::vec::Vec<u8>>" }
%"core::option::Option<alloc::vec::Vec<alloc::string::String>>" = type { {}*, [2 x i64] }
%"core::option::Option<alloc::vec::Vec<alloc::string::String>>::Some" = type { %"alloc::vec::Vec<alloc::string::String>" }
%"unwind::libunwind::_Unwind_Exception" = type { i64, void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [6 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

@0 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@alloc338 = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"assertion failed: mid <= self.len()" }>, align 1
@alloc343 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@vtable.0 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (%"QuoteError::Nul"*)* @"_ZN4core3ptr38drop_in_place$LT$shlex..QuoteError$GT$17h82f7a6c6f5d18258E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"QuoteError::Nul"*, %"core::fmt::Formatter"*)* @"_ZN54_$LT$shlex..QuoteError$u20$as$u20$core..fmt..Debug$GT$3fmt17h8843ef8720553fd3E" to i8*) }>, align 8, !dbg !0
@1 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@alloc111 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\01\0A" }>, align 1
@alloc371 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0/src/bytes.rs" }>, align 1
@alloc345 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc371, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\80\00\00\00!\00\00\00" }>, align 8
@str.1 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc1 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"''" }>, align 1
@alloc347 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc371, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\D1\00\00\00\17\00\00\00" }>, align 8
@alloc153 = private unnamed_addr constant <{ [1 x i8] }> zeroinitializer, align 1
@alloc349 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc371, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\E0\00\00\00.\00\00\00" }>, align 8
@alloc350 = private unnamed_addr constant <{ [45 x i8] }> <{ [45 x i8] c"assertion failed: rest.len() < in_bytes.len()" }>, align 1
@alloc352 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc371, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\E1\00\00\00\0D\00\00\00" }>, align 8
@alloc354 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc371, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00=\01\00\00\06\00\00\00" }>, align 8
@str.2 = internal constant [36 x i8] c"attempt to shift right with overflow"
@alloc356 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc371, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00j\01\00\00\08\00\00\00" }>, align 8
@alloc358 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc371, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00r\01\00\00\11\00\00\00" }>, align 8
@alloc360 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc371, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\8F\01\00\00\09\00\00\00" }>, align 8
@alloc361 = private unnamed_addr constant <{ [23 x i8] }> <{ [23 x i8] c"assertion failed: i > 0" }>, align 1
@alloc363 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc371, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\9C\01\00\00\05\00\00\00" }>, align 8
@alloc364 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"internal error: entered unreachable code" }>, align 1
@alloc366 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc371, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\9A\01\00\00\09\00\00\00" }>, align 8
@alloc368 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc371, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\AC\01\00\00\19\00\00\00" }>, align 8
@alloc370 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc371, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\A6\01\00\00\19\00\00\00" }>, align 8
@alloc372 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc371, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\E5\01\00\003\00\00\00" }>, align 8
@alloc373 = private unnamed_addr constant <{ [45 x i8] }> <{ [45 x i8] c"cannot shell-quote string containing nul byte" }>, align 1
@alloc376 = private unnamed_addr constant <{ [83 x i8] }> <{ [83 x i8] c"/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0/src/lib.rs" }>, align 1
@alloc375 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc376, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\A4\00\00\00\12\00\00\00" }>, align 8
@alloc377 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc376, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\E5\00\00\001\00\00\00" }>, align 8
@alloc384 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Quoter" }>, align 1
@alloc379 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"allow_nul" }>, align 1
@vtable.3 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (i8**)* @"_ZN4core3ptr29drop_in_place$LT$$RF$bool$GT$17heab9a6d544e941efE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i8**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7c8c0b1db793cd4eE" to i8*) }>, align 8, !dbg !20
@alloc383 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Nul" }>, align 1
@alloc385 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"inner" }>, align 1
@vtable.4 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (i8**)* @"_ZN4core3ptr45drop_in_place$LT$$RF$shlex..bytes..Quoter$GT$17hc6fba3347a275927E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i8**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7adee208db613555E" to i8*) }>, align 8, !dbg !30

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h5a19eb2355e32f18E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !155 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill4 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_22 = alloca { i8*, i64 }, align 8
  %_21 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %runtime = alloca %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked::{closure#0}]", align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !176, metadata !DIExpression()), !dbg !192
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !177, metadata !DIExpression()), !dbg !193
  call void @llvm.dbg.declare(metadata %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked::{closure#0}]"* %runtime, metadata !178, metadata !DIExpression()), !dbg !194
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !195
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !195
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !195
  store i64 %slice.1, i64* %6, align 8, !dbg !195
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !196, metadata !DIExpression()), !dbg !207
  %self = bitcast [0 x i8]* %slice.0 to i8*, !dbg !207
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !207
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !208, metadata !DIExpression()), !dbg !216
  store i64 %self.0, i64* %count.dbg.spill, align 8, !dbg !217
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !215, metadata !DIExpression()), !dbg !216
  store i8* %self, i8** %self.dbg.spill3, align 8, !dbg !216
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !218, metadata !DIExpression()), !dbg !226
  store i64 %self.0, i64* %count.dbg.spill4, align 8, !dbg !216
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill4, metadata !225, metadata !DIExpression()), !dbg !226
  %7 = getelementptr inbounds i8, i8* %self, i64 %self.0, !dbg !226
  store i8* %7, i8** %0, align 8, !dbg !226
  %data = load i8*, i8** %0, align 8, !dbg !226
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !226
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !228, metadata !DIExpression()), !dbg !236
  br label %bb1, !dbg !226

bb1:                                              ; preds = %start
  %len = sub i64 %self.1, %self.0, !dbg !238
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !238
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !235, metadata !DIExpression()), !dbg !236
  store i8* %data, i8** %self.dbg.spill5, align 8, !dbg !236
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !239, metadata !DIExpression()), !dbg !247
  %data_address = bitcast i8* %data to {}*, !dbg !247
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !247
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !249, metadata !DIExpression()), !dbg !258
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !236
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !257, metadata !DIExpression()), !dbg !258
  %8 = bitcast { i8*, i64 }* %_22 to {}**, !dbg !258
  store {}* %data_address, {}** %8, align 8, !dbg !258
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_22, i32 0, i32 1, !dbg !258
  store i64 %len, i64* %9, align 8, !dbg !258
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_21 to { i8*, i64 }*, !dbg !258
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_22, i32 0, i32 0, !dbg !258
  %12 = load i8*, i8** %11, align 8, !dbg !258
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_22, i32 0, i32 1, !dbg !258
  %14 = load i64, i64* %13, align 8, !dbg !258
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 0, !dbg !258
  store i8* %12, i8** %15, align 8, !dbg !258
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 1, !dbg !258
  store i64 %14, i64* %16, align 8, !dbg !258
  %17 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_21 to { [0 x i8]*, i64 }*, !dbg !258
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 0, !dbg !258
  %19 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !258
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 1, !dbg !258
  %21 = load i64, i64* %20, align 8, !dbg !258
  %22 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %19, 0, !dbg !260
  %23 = insertvalue { [0 x i8]*, i64 } %22, i64 %21, 1, !dbg !260
  ret { [0 x i8]*, i64 } %23, !dbg !260
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h05d8e94589beadbcE"(%"alloc::vec::Vec<alloc::string::String>"* sret(%"alloc::vec::Vec<alloc::string::String>") %0, %Shlex* align 8 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !261 {
start:
  %self.dbg.spill7 = alloca %"alloc::vec::Vec<alloc::string::String>"*, align 8
  %dst.dbg.spill = alloca %"alloc::string::String"*, align 8
  %capacity.dbg.spill5 = alloca i64, align 8
  %capacity.dbg.spill4 = alloca i64, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %initial_capacity.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %v2.dbg.spill = alloca i64, align 8
  %2 = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %lower.dbg.spill = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc.dbg.spill2 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %_38 = alloca i8, align 1
  %_24 = alloca i8, align 1
  %src = alloca %"alloc::string::String", align 8
  %vector1 = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  %_8 = alloca { i64, { i64, i64 } }, align 8
  %element = alloca %"alloc::string::String", align 8
  %_3 = alloca %"core::option::Option<alloc::string::String>", align 8
  %vector = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  %iterator = alloca %Shlex*, align 8
  store %Shlex* %1, %Shlex** %iterator, align 8
  call void @llvm.dbg.declare(metadata %Shlex** %iterator, metadata !337, metadata !DIExpression()), !dbg !350
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::string::String>"* %vector, metadata !338, metadata !DIExpression()), !dbg !351
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %element, metadata !340, metadata !DIExpression()), !dbg !352
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::string::String>"* %vector1, metadata !346, metadata !DIExpression()), !dbg !353
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %src, metadata !354, metadata !DIExpression()), !dbg !362
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !364, metadata !DIExpression()), !dbg !372
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill2, metadata !381, metadata !DIExpression()), !dbg !389
  store i8 1, i8* %_24, align 1, !dbg !391
; invoke <&mut I as core::iter::traits::iterator::Iterator>::next
  invoke void @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9b785dd58a3365a0E"(%"core::option::Option<alloc::string::String>"* sret(%"core::option::Option<alloc::string::String>") %_3, %Shlex** align 8 %iterator)
          to label %bb1 unwind label %cleanup, !dbg !392

bb14:                                             ; preds = %bb8, %bb11, %bb12, %cleanup
  %4 = load i8, i8* %_24, align 1, !dbg !393, !range !394, !noundef !19
  %5 = trunc i8 %4 to i1, !dbg !393
  br i1 %5, label %bb13, label %bb10, !dbg !393

cleanup:                                          ; preds = %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb14

bb1:                                              ; preds = %start
  %11 = bitcast %"core::option::Option<alloc::string::String>"* %_3 to {}**, !dbg !392
  %12 = load {}*, {}** %11, align 8, !dbg !392
  %13 = icmp eq {}* %12, null, !dbg !392
  %_5 = select i1 %13, i64 0, i64 1, !dbg !392
  switch i64 %_5, label %bb3 [
    i64 0, label %bb15
    i64 1, label %bb2
  ], !dbg !395

bb3:                                              ; preds = %bb1
  unreachable, !dbg !392

bb15:                                             ; preds = %bb1
  %_25.0 = load i64*, i64** getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i64*, i64 }*), i32 0, i32 0), align 8, !dbg !396, !nonnull !19, !noundef !19
  %_25.1 = load i64, i64* getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i64*, i64 }*), i32 0, i32 1), align 8, !dbg !396
  %14 = bitcast %"alloc::vec::Vec<alloc::string::String>"* %0 to { i64*, i64 }*, !dbg !396
  %15 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %14, i32 0, i32 0, !dbg !396
  store i64* %_25.0, i64** %15, align 8, !dbg !396
  %16 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %14, i32 0, i32 1, !dbg !396
  store i64 %_25.1, i64* %16, align 8, !dbg !396
  %17 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", %"alloc::vec::Vec<alloc::string::String>"* %0, i32 0, i32 1, !dbg !396
  store i64 0, i64* %17, align 8, !dbg !396
  br label %bb7, !dbg !393

bb2:                                              ; preds = %bb1
  %18 = bitcast %"core::option::Option<alloc::string::String>"* %_3 to %"core::option::Option<alloc::string::String>::Some"*, !dbg !402
  %19 = bitcast %"core::option::Option<alloc::string::String>::Some"* %18 to %"alloc::string::String"*, !dbg !402
  %20 = bitcast %"alloc::string::String"* %element to i8*, !dbg !402
  %21 = bitcast %"alloc::string::String"* %19 to i8*, !dbg !402
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false), !dbg !402
; invoke <&mut I as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h29385024be338a39E"({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %_8, %Shlex** align 8 %iterator)
          to label %bb4 unwind label %cleanup3, !dbg !403

bb12:                                             ; preds = %bb9, %cleanup3
  br i1 true, label %bb11, label %bb14, !dbg !404

cleanup3:                                         ; preds = %bb17, %bb16, %bb2
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb12

bb4:                                              ; preds = %bb2
  %27 = bitcast { i64, { i64, i64 } }* %_8 to i64*, !dbg !405
  %lower = load i64, i64* %27, align 8, !dbg !405
  store i64 %lower, i64* %lower.dbg.spill, align 8, !dbg !405
  call void @llvm.dbg.declare(metadata i64* %lower.dbg.spill, metadata !342, metadata !DIExpression()), !dbg !406
  store i64 %lower, i64* %self.dbg.spill, align 8, !dbg !407
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !408, metadata !DIExpression()), !dbg !418
  %28 = call i64 @llvm.uadd.sat.i64(i64 %lower, i64 1), !dbg !418
  store i64 %28, i64* %2, align 8, !dbg !418
  %v2 = load i64, i64* %2, align 8, !dbg !418
  store i64 %v2, i64* %v2.dbg.spill, align 8, !dbg !418
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !419, metadata !DIExpression()), !dbg !427
  br label %bb16, !dbg !418

bb16:                                             ; preds = %bb4
  store i64 4, i64* %v1.dbg.spill, align 8, !dbg !428
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !424, metadata !DIExpression()), !dbg !427
; invoke core::cmp::Ord::max
  %initial_capacity = invoke i64 @_ZN4core3cmp3Ord3max17haa98f192bff214e2E(i64 4, i64 %v2)
          to label %bb17 unwind label %cleanup3, !dbg !427

bb17:                                             ; preds = %bb16
  store i64 %initial_capacity, i64* %initial_capacity.dbg.spill, align 8, !dbg !427
  call void @llvm.dbg.declare(metadata i64* %initial_capacity.dbg.spill, metadata !344, metadata !DIExpression()), !dbg !429
  store i64 %initial_capacity, i64* %capacity.dbg.spill, align 8, !dbg !430
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !378, metadata !DIExpression()), !dbg !431
  store i64 %initial_capacity, i64* %capacity.dbg.spill4, align 8, !dbg !431
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill4, metadata !371, metadata !DIExpression()), !dbg !372
  store i64 %initial_capacity, i64* %capacity.dbg.spill5, align 8, !dbg !372
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill5, metadata !388, metadata !DIExpression()), !dbg !389
  store i8 0, i8* %_38, align 1, !dbg !389
  %29 = load i8, i8* %_38, align 1, !dbg !389, !range !394, !noundef !19
  %30 = trunc i8 %29 to i1, !dbg !389
; invoke alloc::raw_vec::RawVec<T,A>::allocate_in
  %31 = invoke { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hefc8b9238314a383E"(i64 %initial_capacity, i1 zeroext %30)
          to label %bb18 unwind label %cleanup3, !dbg !389

bb18:                                             ; preds = %bb17
  %_34.0 = extractvalue { i64*, i64 } %31, 0, !dbg !389
  %_34.1 = extractvalue { i64*, i64 } %31, 1, !dbg !389
  %32 = bitcast %"alloc::vec::Vec<alloc::string::String>"* %vector1 to { i64*, i64 }*, !dbg !372
  %33 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %32, i32 0, i32 0, !dbg !372
  store i64* %_34.0, i64** %33, align 8, !dbg !372
  %34 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %32, i32 0, i32 1, !dbg !372
  store i64 %_34.1, i64* %34, align 8, !dbg !372
  %35 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", %"alloc::vec::Vec<alloc::string::String>"* %vector1, i32 0, i32 1, !dbg !372
  store i64 0, i64* %35, align 8, !dbg !372
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %dst = invoke %"alloc::string::String"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h44fbfd7f7c84c396E"(%"alloc::vec::Vec<alloc::string::String>"* align 8 %vector1)
          to label %bb5 unwind label %cleanup6, !dbg !432

bb9:                                              ; preds = %cleanup6
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h9e3b3be1cd4c1522E"(%"alloc::vec::Vec<alloc::string::String>"* %vector1) #14
          to label %bb12 unwind label %abort, !dbg !433

cleanup6:                                         ; preds = %bb18
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  %38 = extractvalue { i8*, i32 } %36, 1
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %37, i8** %39, align 8
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %38, i32* %40, align 8
  br label %bb9

bb5:                                              ; preds = %bb18
  store %"alloc::string::String"* %dst, %"alloc::string::String"** %dst.dbg.spill, align 8, !dbg !432
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %dst.dbg.spill, metadata !361, metadata !DIExpression()), !dbg !362
  %41 = bitcast %"alloc::string::String"* %src to i8*, !dbg !434
  %42 = bitcast %"alloc::string::String"* %element to i8*, !dbg !434
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false), !dbg !434
  %43 = bitcast %"alloc::string::String"* %dst to i8*, !dbg !362
  %44 = bitcast %"alloc::string::String"* %src to i8*, !dbg !362
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false), !dbg !362
  store %"alloc::vec::Vec<alloc::string::String>"* %vector1, %"alloc::vec::Vec<alloc::string::String>"** %self.dbg.spill7, align 8, !dbg !435
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::string::String>"** %self.dbg.spill7, metadata !436, metadata !DIExpression()), !dbg !444
  %45 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", %"alloc::vec::Vec<alloc::string::String>"* %vector1, i32 0, i32 1, !dbg !444
  store i64 1, i64* %45, align 8, !dbg !444
  %46 = bitcast %"alloc::vec::Vec<alloc::string::String>"* %vector to i8*, !dbg !445
  %47 = bitcast %"alloc::vec::Vec<alloc::string::String>"* %vector1 to i8*, !dbg !445
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false), !dbg !445
  store i8 0, i8* %_24, align 1, !dbg !446
  %_22 = load %Shlex*, %Shlex** %iterator, align 8, !dbg !446, !nonnull !19, !align !447, !noundef !19
; invoke <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
  invoke void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17hc39477a9218591a1E"(%"alloc::vec::Vec<alloc::string::String>"* align 8 %vector, %Shlex* align 8 %_22)
          to label %bb6 unwind label %cleanup8, !dbg !448

abort:                                            ; preds = %bb8, %bb11, %bb9
  %48 = landingpad { i8*, i32 }
          cleanup, !dbg !449
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #15, !dbg !449
  unreachable, !dbg !449

bb11:                                             ; preds = %bb12
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h0ccb537bb1763a95E"(%"alloc::string::String"* %element) #14
          to label %bb14 unwind label %abort, !dbg !404

bb8:                                              ; preds = %cleanup8
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h9e3b3be1cd4c1522E"(%"alloc::vec::Vec<alloc::string::String>"* %vector) #14
          to label %bb14 unwind label %abort, !dbg !393

cleanup8:                                         ; preds = %bb5
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  %51 = extractvalue { i8*, i32 } %49, 1
  %52 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %50, i8** %52, align 8
  %53 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %51, i32* %53, align 8
  br label %bb8

bb6:                                              ; preds = %bb5
  %54 = bitcast %"alloc::vec::Vec<alloc::string::String>"* %0 to i8*, !dbg !450
  %55 = bitcast %"alloc::vec::Vec<alloc::string::String>"* %vector to i8*, !dbg !450
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 24, i1 false), !dbg !450
  br label %bb7, !dbg !393

bb10:                                             ; preds = %bb13, %bb14
  %56 = bitcast { i8*, i32 }* %3 to i8**, !dbg !449
  %57 = load i8*, i8** %56, align 8, !dbg !449
  %58 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !449
  %59 = load i32, i32* %58, align 8, !dbg !449
  %60 = insertvalue { i8*, i32 } undef, i8* %57, 0, !dbg !449
  %61 = insertvalue { i8*, i32 } %60, i32 %59, 1, !dbg !449
  resume { i8*, i32 } %61, !dbg !449

bb13:                                             ; preds = %bb14
  br label %bb10, !dbg !393

bb7:                                              ; preds = %bb15, %bb6
  ret void, !dbg !451
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17hf80895153a7e894bE"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* sret(%"alloc::vec::Vec<alloc::vec::Vec<u8>>") %0, %"bytes::Shlex"* align 8 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !452 {
start:
  %self.dbg.spill7 = alloca %"alloc::vec::Vec<alloc::vec::Vec<u8>>"*, align 8
  %dst.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %capacity.dbg.spill5 = alloca i64, align 8
  %capacity.dbg.spill4 = alloca i64, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %initial_capacity.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %v2.dbg.spill = alloca i64, align 8
  %2 = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %lower.dbg.spill = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc.dbg.spill2 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %_38 = alloca i8, align 1
  %_24 = alloca i8, align 1
  %src = alloca %"alloc::vec::Vec<u8>", align 8
  %vector1 = alloca %"alloc::vec::Vec<alloc::vec::Vec<u8>>", align 8
  %_8 = alloca { i64, { i64, i64 } }, align 8
  %element = alloca %"alloc::vec::Vec<u8>", align 8
  %_3 = alloca %"core::option::Option<alloc::vec::Vec<u8>>", align 8
  %vector = alloca %"alloc::vec::Vec<alloc::vec::Vec<u8>>", align 8
  %iterator = alloca %"bytes::Shlex"*, align 8
  store %"bytes::Shlex"* %1, %"bytes::Shlex"** %iterator, align 8
  call void @llvm.dbg.declare(metadata %"bytes::Shlex"** %iterator, metadata !478, metadata !DIExpression()), !dbg !491
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %vector, metadata !479, metadata !DIExpression()), !dbg !492
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %element, metadata !481, metadata !DIExpression()), !dbg !493
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %vector1, metadata !487, metadata !DIExpression()), !dbg !494
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %src, metadata !495, metadata !DIExpression()), !dbg !503
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !505, metadata !DIExpression()), !dbg !512
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill2, metadata !521, metadata !DIExpression()), !dbg !528
  store i8 1, i8* %_24, align 1, !dbg !530
; invoke <&mut I as core::iter::traits::iterator::Iterator>::next
  invoke void @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h795a6a2b04c995d4E"(%"core::option::Option<alloc::vec::Vec<u8>>"* sret(%"core::option::Option<alloc::vec::Vec<u8>>") %_3, %"bytes::Shlex"** align 8 %iterator)
          to label %bb1 unwind label %cleanup, !dbg !531

bb14:                                             ; preds = %bb8, %bb11, %bb12, %cleanup
  %4 = load i8, i8* %_24, align 1, !dbg !532, !range !394, !noundef !19
  %5 = trunc i8 %4 to i1, !dbg !532
  br i1 %5, label %bb13, label %bb10, !dbg !532

cleanup:                                          ; preds = %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb14

bb1:                                              ; preds = %start
  %11 = bitcast %"core::option::Option<alloc::vec::Vec<u8>>"* %_3 to {}**, !dbg !531
  %12 = load {}*, {}** %11, align 8, !dbg !531
  %13 = icmp eq {}* %12, null, !dbg !531
  %_5 = select i1 %13, i64 0, i64 1, !dbg !531
  switch i64 %_5, label %bb3 [
    i64 0, label %bb15
    i64 1, label %bb2
  ], !dbg !533

bb3:                                              ; preds = %bb1
  unreachable, !dbg !531

bb15:                                             ; preds = %bb1
  %_25.0 = load i64*, i64** getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i64*, i64 }*), i32 0, i32 0), align 8, !dbg !534, !nonnull !19, !noundef !19
  %_25.1 = load i64, i64* getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i64*, i64 }*), i32 0, i32 1), align 8, !dbg !534
  %14 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %0 to { i64*, i64 }*, !dbg !534
  %15 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %14, i32 0, i32 0, !dbg !534
  store i64* %_25.0, i64** %15, align 8, !dbg !534
  %16 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %14, i32 0, i32 1, !dbg !534
  store i64 %_25.1, i64* %16, align 8, !dbg !534
  %17 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<u8>>", %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %0, i32 0, i32 1, !dbg !534
  store i64 0, i64* %17, align 8, !dbg !534
  br label %bb7, !dbg !532

bb2:                                              ; preds = %bb1
  %18 = bitcast %"core::option::Option<alloc::vec::Vec<u8>>"* %_3 to %"core::option::Option<alloc::vec::Vec<u8>>::Some"*, !dbg !540
  %19 = bitcast %"core::option::Option<alloc::vec::Vec<u8>>::Some"* %18 to %"alloc::vec::Vec<u8>"*, !dbg !540
  %20 = bitcast %"alloc::vec::Vec<u8>"* %element to i8*, !dbg !540
  %21 = bitcast %"alloc::vec::Vec<u8>"* %19 to i8*, !dbg !540
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false), !dbg !540
; invoke <&mut I as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17ha9dd4646d3c6cae6E"({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %_8, %"bytes::Shlex"** align 8 %iterator)
          to label %bb4 unwind label %cleanup3, !dbg !541

bb12:                                             ; preds = %bb9, %cleanup3
  br i1 true, label %bb11, label %bb14, !dbg !542

cleanup3:                                         ; preds = %bb17, %bb16, %bb2
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb12

bb4:                                              ; preds = %bb2
  %27 = bitcast { i64, { i64, i64 } }* %_8 to i64*, !dbg !543
  %lower = load i64, i64* %27, align 8, !dbg !543
  store i64 %lower, i64* %lower.dbg.spill, align 8, !dbg !543
  call void @llvm.dbg.declare(metadata i64* %lower.dbg.spill, metadata !483, metadata !DIExpression()), !dbg !544
  store i64 %lower, i64* %self.dbg.spill, align 8, !dbg !545
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !546, metadata !DIExpression()), !dbg !551
  %28 = call i64 @llvm.uadd.sat.i64(i64 %lower, i64 1), !dbg !551
  store i64 %28, i64* %2, align 8, !dbg !551
  %v2 = load i64, i64* %2, align 8, !dbg !551
  store i64 %v2, i64* %v2.dbg.spill, align 8, !dbg !551
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !552, metadata !DIExpression()), !dbg !557
  br label %bb16, !dbg !551

bb16:                                             ; preds = %bb4
  store i64 4, i64* %v1.dbg.spill, align 8, !dbg !558
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !556, metadata !DIExpression()), !dbg !557
; invoke core::cmp::Ord::max
  %initial_capacity = invoke i64 @_ZN4core3cmp3Ord3max17haa98f192bff214e2E(i64 4, i64 %v2)
          to label %bb17 unwind label %cleanup3, !dbg !557

bb17:                                             ; preds = %bb16
  store i64 %initial_capacity, i64* %initial_capacity.dbg.spill, align 8, !dbg !557
  call void @llvm.dbg.declare(metadata i64* %initial_capacity.dbg.spill, metadata !485, metadata !DIExpression()), !dbg !559
  store i64 %initial_capacity, i64* %capacity.dbg.spill, align 8, !dbg !560
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !518, metadata !DIExpression()), !dbg !561
  store i64 %initial_capacity, i64* %capacity.dbg.spill4, align 8, !dbg !561
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill4, metadata !511, metadata !DIExpression()), !dbg !512
  store i64 %initial_capacity, i64* %capacity.dbg.spill5, align 8, !dbg !512
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill5, metadata !527, metadata !DIExpression()), !dbg !528
  store i8 0, i8* %_38, align 1, !dbg !528
  %29 = load i8, i8* %_38, align 1, !dbg !528, !range !394, !noundef !19
  %30 = trunc i8 %29 to i1, !dbg !528
; invoke alloc::raw_vec::RawVec<T,A>::allocate_in
  %31 = invoke { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hff10a4c41025bd83E"(i64 %initial_capacity, i1 zeroext %30)
          to label %bb18 unwind label %cleanup3, !dbg !528

bb18:                                             ; preds = %bb17
  %_34.0 = extractvalue { i64*, i64 } %31, 0, !dbg !528
  %_34.1 = extractvalue { i64*, i64 } %31, 1, !dbg !528
  %32 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %vector1 to { i64*, i64 }*, !dbg !512
  %33 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %32, i32 0, i32 0, !dbg !512
  store i64* %_34.0, i64** %33, align 8, !dbg !512
  %34 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %32, i32 0, i32 1, !dbg !512
  store i64 %_34.1, i64* %34, align 8, !dbg !512
  %35 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<u8>>", %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %vector1, i32 0, i32 1, !dbg !512
  store i64 0, i64* %35, align 8, !dbg !512
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %dst = invoke %"alloc::vec::Vec<u8>"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1d53eb0dd4b79cbfE"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* align 8 %vector1)
          to label %bb5 unwind label %cleanup6, !dbg !562

bb9:                                              ; preds = %cleanup6
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::vec::Vec<u8>>>
  invoke void @"_ZN4core3ptr69drop_in_place$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17h6d0efc2a132f28d7E"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %vector1) #14
          to label %bb12 unwind label %abort, !dbg !563

cleanup6:                                         ; preds = %bb18
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  %38 = extractvalue { i8*, i32 } %36, 1
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %37, i8** %39, align 8
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %38, i32* %40, align 8
  br label %bb9

bb5:                                              ; preds = %bb18
  store %"alloc::vec::Vec<u8>"* %dst, %"alloc::vec::Vec<u8>"** %dst.dbg.spill, align 8, !dbg !562
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %dst.dbg.spill, metadata !502, metadata !DIExpression()), !dbg !503
  %41 = bitcast %"alloc::vec::Vec<u8>"* %src to i8*, !dbg !564
  %42 = bitcast %"alloc::vec::Vec<u8>"* %element to i8*, !dbg !564
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false), !dbg !564
  %43 = bitcast %"alloc::vec::Vec<u8>"* %dst to i8*, !dbg !503
  %44 = bitcast %"alloc::vec::Vec<u8>"* %src to i8*, !dbg !503
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false), !dbg !503
  store %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %vector1, %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %self.dbg.spill7, align 8, !dbg !565
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %self.dbg.spill7, metadata !566, metadata !DIExpression()), !dbg !574
  %45 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<u8>>", %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %vector1, i32 0, i32 1, !dbg !574
  store i64 1, i64* %45, align 8, !dbg !574
  %46 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %vector to i8*, !dbg !575
  %47 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %vector1 to i8*, !dbg !575
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false), !dbg !575
  store i8 0, i8* %_24, align 1, !dbg !576
  %_22 = load %"bytes::Shlex"*, %"bytes::Shlex"** %iterator, align 8, !dbg !576, !nonnull !19, !align !447, !noundef !19
; invoke <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
  invoke void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h1f6bfb8f2681e93fE"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* align 8 %vector, %"bytes::Shlex"* align 8 %_22)
          to label %bb6 unwind label %cleanup8, !dbg !577

abort:                                            ; preds = %bb8, %bb11, %bb9
  %48 = landingpad { i8*, i32 }
          cleanup, !dbg !578
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #15, !dbg !578
  unreachable, !dbg !578

bb11:                                             ; preds = %bb12
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9be70052c8106a2bE"(%"alloc::vec::Vec<u8>"* %element) #14
          to label %bb14 unwind label %abort, !dbg !542

bb8:                                              ; preds = %cleanup8
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::vec::Vec<u8>>>
  invoke void @"_ZN4core3ptr69drop_in_place$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17h6d0efc2a132f28d7E"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %vector) #14
          to label %bb14 unwind label %abort, !dbg !532

cleanup8:                                         ; preds = %bb5
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  %51 = extractvalue { i8*, i32 } %49, 1
  %52 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %50, i8** %52, align 8
  %53 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %51, i32* %53, align 8
  br label %bb8

bb6:                                              ; preds = %bb5
  %54 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %0 to i8*, !dbg !579
  %55 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %vector to i8*, !dbg !579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 24, i1 false), !dbg !579
  br label %bb7, !dbg !532

bb10:                                             ; preds = %bb13, %bb14
  %56 = bitcast { i8*, i32 }* %3 to i8**, !dbg !578
  %57 = load i8*, i8** %56, align 8, !dbg !578
  %58 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !578
  %59 = load i32, i32* %58, align 8, !dbg !578
  %60 = insertvalue { i8*, i32 } undef, i8* %57, 0, !dbg !578
  %61 = insertvalue { i8*, i32 } %60, i32 %59, 1, !dbg !578
  resume { i8*, i32 } %61, !dbg !578

bb13:                                             ; preds = %bb14
  br label %bb10, !dbg !532

bb7:                                              ; preds = %bb15, %bb6
  ret void, !dbg !580
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h2d3767c9df7a2bc5E"(i8* %unique) unnamed_addr #0 !dbg !581 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %unique.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  store i8* %unique, i8** %unique.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %unique.dbg.spill, metadata !587, metadata !DIExpression()), !dbg !588
  store i8* %unique, i8** %self.dbg.spill, align 8, !dbg !589
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !590, metadata !DIExpression()), !dbg !598
  store i8* %unique, i8** %self.dbg.spill1, align 8, !dbg !598
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !599, metadata !DIExpression()), !dbg !604
  store i8* %unique, i8** %ptr.dbg.spill, align 8, !dbg !604
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !606, metadata !DIExpression()), !dbg !611
  store i8* %unique, i8** %0, align 8, !dbg !611
  %1 = load i8*, i8** %0, align 8, !dbg !613, !nonnull !19, !noundef !19
  ret i8* %1, !dbg !613
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hd9b1e84b4e136ef5E"(i64 %kind.0, i64 %kind.1) unnamed_addr #0 !dbg !614 {
start:
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0
  store i64 %kind.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1
  store i64 %kind.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !645, metadata !DIExpression()), !dbg !646
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !647
  store i64 %kind.0, i64* %3, align 8, !dbg !647
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !647
  store i64 %kind.1, i64* %4, align 8, !dbg !647
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !648
  %6 = load i64, i64* %5, align 8, !dbg !648
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !648
  %8 = load i64, i64* %7, align 8, !dbg !648, !range !649, !noundef !19
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !648
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !648
  ret { i64, i64 } %10, !dbg !648
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17h267153515388f5d3E"(%"alloc::vec::Vec<u8>"* align 8 %self, i8* %0, i8* %1) unnamed_addr #1 !dbg !650 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %iterator = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iterator, i32 0, i32 0
  store i8* %0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iterator, i32 0, i32 1
  store i8* %1, i8** %3, align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !658, metadata !DIExpression()), !dbg !666
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %iterator, metadata !659, metadata !DIExpression()), !dbg !667
; call core::slice::iter::Iter<T>::as_slice
  %4 = call { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hc742c99cd5f50b44E"({ i8*, i8* }* align 8 %iterator), !dbg !668
  %slice.0 = extractvalue { [0 x i8]*, i64 } %4, 0, !dbg !668
  %slice.1 = extractvalue { [0 x i8]*, i64 } %4, 1, !dbg !668
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !668
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !668
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !668
  store i64 %slice.1, i64* %6, align 8, !dbg !668
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !660, metadata !DIExpression()), !dbg !669
  br label %bb1, !dbg !668

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::append_elements
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17hb2969b658d1a96daE"(%"alloc::vec::Vec<u8>"* align 8 %self, [0 x i8]* %slice.0, i64 %slice.1), !dbg !670
  br label %bb2, !dbg !670

bb2:                                              ; preds = %bb1
  ret void, !dbg !671
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc75bc6a3a9354f0cE"(%"core::result::Result<alloc::borrow::Cow<str>, QuoteError>"* sret(%"core::result::Result<alloc::borrow::Cow<str>, QuoteError>") %0, %"core::panic::location::Location"* align 8 %1) unnamed_addr #0 !dbg !672 {
start:
  %e.dbg.spill = alloca %"QuoteError::Nul", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, QuoteError>::Err", align 1
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, QuoteError>::Err"* %residual.dbg.spill, metadata !742, metadata !DIExpression()), !dbg !747
  call void @llvm.dbg.declare(metadata %"QuoteError::Nul"* %e.dbg.spill, metadata !743, metadata !DIExpression()), !dbg !748
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha57a116830ea7e61E"(), !dbg !749
  br label %bb1, !dbg !749

bb1:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<alloc::borrow::Cow<str>, QuoteError>"* %0 to %"core::result::Result<alloc::borrow::Cow<str>, QuoteError>::Err"*, !dbg !750
  %3 = bitcast %"core::result::Result<alloc::borrow::Cow<str>, QuoteError>::Err"* %2 to %"QuoteError::Nul"*, !dbg !750
  %4 = bitcast %"core::result::Result<alloc::borrow::Cow<str>, QuoteError>"* %0 to i64*, !dbg !750
  store i64 2, i64* %4, align 8, !dbg !750
  ret void, !dbg !751
}

; <bool as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN41_$LT$bool$u20$as$u20$core..fmt..Debug$GT$3fmt17h1956df0bbfc1bb9dE"(i8* align 1 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #0 !dbg !752 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !807, metadata !DIExpression()), !dbg !809
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !808, metadata !DIExpression()), !dbg !810
; call <bool as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN43_$LT$bool$u20$as$u20$core..fmt..Display$GT$3fmt17h2dce19af35182c57E"(i8* align 1 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !811
  br label %bb1, !dbg !811

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !812
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7adee208db613555E"(i8** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !813 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8**, align 8
  store i8** %self, i8*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill, metadata !819, metadata !DIExpression()), !dbg !823
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !820, metadata !DIExpression()), !dbg !824
  %_6 = load i8*, i8** %self, align 8, !dbg !825, !nonnull !19, !align !826, !noundef !19
; call <shlex::bytes::Quoter as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN57_$LT$shlex..bytes..Quoter$u20$as$u20$core..fmt..Debug$GT$3fmt17h6f5ef6df0f0025f4E"(i8* align 1 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !827
  br label %bb1, !dbg !827

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !828
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7c8c0b1db793cd4eE"(i8** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !829 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8**, align 8
  store i8** %self, i8*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill, metadata !834, metadata !DIExpression()), !dbg !838
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !835, metadata !DIExpression()), !dbg !839
  %_6 = load i8*, i8** %self, align 8, !dbg !840, !nonnull !19, !align !826, !noundef !19
; call <bool as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN41_$LT$bool$u20$as$u20$core..fmt..Debug$GT$3fmt17h1956df0bbfc1bb9dE"(i8* align 1 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !841
  br label %bb1, !dbg !841

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !842
}

; <bool as core::default::Default>::default
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN47_$LT$bool$u20$as$u20$core..default..Default$GT$7default17h8e6c38a7341174e1E"() unnamed_addr #0 !dbg !843 {
start:
  ret i1 false, !dbg !849
}

; core::cmp::Ord::max
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3Ord3max17haa98f192bff214e2E(i64 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !850 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %_8 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %3 = alloca i64, align 8
  %other = alloca i64, align 8
  %self = alloca i64, align 8
  store i64 %0, i64* %self, align 8
  store i64 %1, i64* %other, align 8
  call void @llvm.dbg.declare(metadata i64* %self, metadata !853, metadata !DIExpression()), !dbg !857
  call void @llvm.dbg.declare(metadata i64* %other, metadata !854, metadata !DIExpression()), !dbg !858
  store i8 1, i8* %_9, align 1, !dbg !859
  store i8 1, i8* %_8, align 1, !dbg !859
; invoke core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %4 = invoke i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hf38661dffacb58dfE"(i64* align 8 %self, i64* align 8 %other)
          to label %bb1 unwind label %cleanup, !dbg !859, !range !860

bb8:                                              ; preds = %cleanup
  br label %bb13, !dbg !861

cleanup:                                          ; preds = %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb8

bb1:                                              ; preds = %start
  store i8 %4, i8* %_3, align 1, !dbg !859
  %_7 = load i8, i8* %_3, align 1, !dbg !859, !range !860, !noundef !19
  switch i8 %_7, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ], !dbg !862

bb13:                                             ; preds = %bb8
  %10 = load i8, i8* %_9, align 1, !dbg !861, !range !394, !noundef !19
  %11 = trunc i8 %10 to i1, !dbg !861
  br i1 %11, label %bb12, label %bb9, !dbg !861

bb3:                                              ; preds = %bb1
  unreachable, !dbg !859

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_8, align 1, !dbg !863
  %12 = load i64, i64* %other, align 8, !dbg !863
  store i64 %12, i64* %3, align 8, !dbg !863
  br label %bb5, !dbg !863

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_9, align 1, !dbg !864
  %13 = load i64, i64* %self, align 8, !dbg !864
  store i64 %13, i64* %3, align 8, !dbg !864
  br label %bb5, !dbg !864

bb5:                                              ; preds = %bb4, %bb2
  %14 = load i8, i8* %_8, align 1, !dbg !861, !range !394, !noundef !19
  %15 = trunc i8 %14 to i1, !dbg !861
  br i1 %15, label %bb10, label %bb6, !dbg !861

bb6:                                              ; preds = %bb10, %bb5
  %16 = load i8, i8* %_9, align 1, !dbg !861, !range !394, !noundef !19
  %17 = trunc i8 %16 to i1, !dbg !861
  br i1 %17, label %bb11, label %bb7, !dbg !861

bb10:                                             ; preds = %bb5
  br label %bb6, !dbg !861

bb9:                                              ; preds = %bb12, %bb13
  %18 = bitcast { i8*, i32 }* %2 to i8**, !dbg !865
  %19 = load i8*, i8** %18, align 8, !dbg !865
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !865
  %21 = load i32, i32* %20, align 8, !dbg !865
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0, !dbg !865
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1, !dbg !865
  resume { i8*, i32 } %23, !dbg !865

bb12:                                             ; preds = %bb13
  br label %bb9, !dbg !861

bb7:                                              ; preds = %bb11, %bb6
  %24 = load i64, i64* %3, align 8, !dbg !866
  ret i64 %24, !dbg !866

bb11:                                             ; preds = %bb6
  br label %bb7, !dbg !861
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hf38661dffacb58dfE"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #0 !dbg !867 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  %0 = alloca i8, align 1
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !873, metadata !DIExpression()), !dbg !875
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !874, metadata !DIExpression()), !dbg !876
  %_4 = load i64, i64* %self, align 8, !dbg !877
  %_5 = load i64, i64* %other, align 8, !dbg !878
  %_3 = icmp ult i64 %_4, %_5, !dbg !877
  br i1 %_3, label %bb1, label %bb2, !dbg !877

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8, !dbg !879
  %_8 = load i64, i64* %other, align 8, !dbg !880
  %_6 = icmp eq i64 %_7, %_8, !dbg !879
  br i1 %_6, label %bb3, label %bb4, !dbg !879

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1, !dbg !881
  br label %bb6, !dbg !882

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !dbg !883, !range !860, !noundef !19
  ret i8 %1, !dbg !883

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1, !dbg !884
  br label %bb5, !dbg !885

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1, !dbg !886
  br label %bb5, !dbg !885

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6, !dbg !882
}

; core::cmp::impls::<impl core::cmp::PartialEq for u8>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h95de183702012a16E"(i8* align 1 %self, i8* align 1 %other) unnamed_addr #0 !dbg !887 {
start:
  %other.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !892, metadata !DIExpression()), !dbg !894
  store i8* %other, i8** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !893, metadata !DIExpression()), !dbg !895
  %_3 = load i8, i8* %self, align 1, !dbg !896
  %_4 = load i8, i8* %other, align 1, !dbg !897
  %0 = icmp eq i8 %_3, %_4, !dbg !896
  ret i1 %0, !dbg !898
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17haccc7065f0a07782E"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !899 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill4 = alloca i8, align 1
  %a.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill2 = alloca i64, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i8 }, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !903, metadata !DIExpression()), !dbg !908
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !904, metadata !DIExpression()), !dbg !909
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !910
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !911, metadata !DIExpression()), !dbg !924
  store i64 %rhs, i64* %rhs.dbg.spill2, align 8, !dbg !925
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill2, metadata !920, metadata !DIExpression()), !dbg !924
  %3 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs), !dbg !924
  %4 = extractvalue { i64, i1 } %3, 0, !dbg !924
  %5 = extractvalue { i64, i1 } %3, 1, !dbg !924
  %6 = zext i1 %5 to i8, !dbg !924
  %7 = bitcast { i64, i8 }* %1 to i64*, !dbg !924
  store i64 %4, i64* %7, align 8, !dbg !924
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !924
  store i8 %6, i8* %8, align 8, !dbg !924
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !924
  %_13.0 = load i64, i64* %9, align 8, !dbg !924
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !924
  %11 = load i8, i8* %10, align 8, !dbg !924, !range !394, !noundef !19
  %_13.1 = trunc i8 %11 to i1, !dbg !924
  br label %bb5, !dbg !924

bb5:                                              ; preds = %start
  store i64 %_13.0, i64* %a.dbg.spill, align 8, !dbg !924
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !921, metadata !DIExpression()), !dbg !926
  %12 = zext i1 %_13.1 to i8, !dbg !924
  store i8 %12, i8* %b.dbg.spill, align 1, !dbg !924
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !923, metadata !DIExpression()), !dbg !926
  %13 = bitcast { i64, i8 }* %_5 to i64*, !dbg !926
  store i64 %_13.0, i64* %13, align 8, !dbg !926
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !926
  %15 = zext i1 %_13.1 to i8, !dbg !926
  store i8 %15, i8* %14, align 8, !dbg !926
  %16 = bitcast { i64, i8 }* %_5 to i64*, !dbg !927
  %a = load i64, i64* %16, align 8, !dbg !927
  store i64 %a, i64* %a.dbg.spill3, align 8, !dbg !927
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill3, metadata !905, metadata !DIExpression()), !dbg !928
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !929
  %18 = load i8, i8* %17, align 8, !dbg !929, !range !394, !noundef !19
  %b = trunc i8 %18 to i1, !dbg !929
  %19 = zext i1 %b to i8, !dbg !929
  store i8 %19, i8* %b.dbg.spill4, align 1, !dbg !929
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill4, metadata !907, metadata !DIExpression()), !dbg !930
  %20 = call i1 @llvm.expect.i1(i1 %b, i1 false), !dbg !931
  %21 = zext i1 %20 to i8, !dbg !931
  store i8 %21, i8* %0, align 1, !dbg !931
  %22 = load i8, i8* %0, align 1, !dbg !931, !range !394, !noundef !19
  %_8 = trunc i8 %22 to i1, !dbg !931
  br label %bb1, !dbg !931

bb1:                                              ; preds = %bb5
  br i1 %_8, label %bb2, label %bb3, !dbg !931

bb3:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !932
  store i64 %a, i64* %23, align 8, !dbg !932
  %24 = bitcast { i64, i64 }* %2 to i64*, !dbg !932
  store i64 1, i64* %24, align 8, !dbg !932
  br label %bb4, !dbg !933

bb2:                                              ; preds = %bb1
  %25 = bitcast { i64, i64 }* %2 to i64*, !dbg !934
  store i64 0, i64* %25, align 8, !dbg !934
  br label %bb4, !dbg !933

bb4:                                              ; preds = %bb3, %bb2
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !935
  %27 = load i64, i64* %26, align 8, !dbg !935, !range !936, !noundef !19
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !935
  %29 = load i64, i64* %28, align 8, !dbg !935
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !935
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !935
  ret { i64, i64 } %31, !dbg !935
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h3cb4555aa44341dcE"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !937 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill4 = alloca i8, align 1
  %a.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill2 = alloca i64, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i8 }, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !939, metadata !DIExpression()), !dbg !944
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !940, metadata !DIExpression()), !dbg !945
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !946
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !947, metadata !DIExpression()), !dbg !954
  store i64 %rhs, i64* %rhs.dbg.spill2, align 8, !dbg !955
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill2, metadata !950, metadata !DIExpression()), !dbg !954
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !954
  %4 = extractvalue { i64, i1 } %3, 0, !dbg !954
  %5 = extractvalue { i64, i1 } %3, 1, !dbg !954
  %6 = zext i1 %5 to i8, !dbg !954
  %7 = bitcast { i64, i8 }* %1 to i64*, !dbg !954
  store i64 %4, i64* %7, align 8, !dbg !954
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !954
  store i8 %6, i8* %8, align 8, !dbg !954
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !954
  %_13.0 = load i64, i64* %9, align 8, !dbg !954
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !954
  %11 = load i8, i8* %10, align 8, !dbg !954, !range !394, !noundef !19
  %_13.1 = trunc i8 %11 to i1, !dbg !954
  br label %bb5, !dbg !954

bb5:                                              ; preds = %start
  store i64 %_13.0, i64* %a.dbg.spill, align 8, !dbg !954
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !951, metadata !DIExpression()), !dbg !956
  %12 = zext i1 %_13.1 to i8, !dbg !954
  store i8 %12, i8* %b.dbg.spill, align 1, !dbg !954
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !953, metadata !DIExpression()), !dbg !956
  %13 = bitcast { i64, i8 }* %_5 to i64*, !dbg !956
  store i64 %_13.0, i64* %13, align 8, !dbg !956
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !956
  %15 = zext i1 %_13.1 to i8, !dbg !956
  store i8 %15, i8* %14, align 8, !dbg !956
  %16 = bitcast { i64, i8 }* %_5 to i64*, !dbg !957
  %a = load i64, i64* %16, align 8, !dbg !957
  store i64 %a, i64* %a.dbg.spill3, align 8, !dbg !957
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill3, metadata !941, metadata !DIExpression()), !dbg !958
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !959
  %18 = load i8, i8* %17, align 8, !dbg !959, !range !394, !noundef !19
  %b = trunc i8 %18 to i1, !dbg !959
  %19 = zext i1 %b to i8, !dbg !959
  store i8 %19, i8* %b.dbg.spill4, align 1, !dbg !959
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill4, metadata !943, metadata !DIExpression()), !dbg !960
  %20 = call i1 @llvm.expect.i1(i1 %b, i1 false), !dbg !961
  %21 = zext i1 %20 to i8, !dbg !961
  store i8 %21, i8* %0, align 1, !dbg !961
  %22 = load i8, i8* %0, align 1, !dbg !961, !range !394, !noundef !19
  %_8 = trunc i8 %22 to i1, !dbg !961
  br label %bb1, !dbg !961

bb1:                                              ; preds = %bb5
  br i1 %_8, label %bb2, label %bb3, !dbg !961

bb3:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !962
  store i64 %a, i64* %23, align 8, !dbg !962
  %24 = bitcast { i64, i64 }* %2 to i64*, !dbg !962
  store i64 1, i64* %24, align 8, !dbg !962
  br label %bb4, !dbg !963

bb2:                                              ; preds = %bb1
  %25 = bitcast { i64, i64 }* %2 to i64*, !dbg !964
  store i64 0, i64* %25, align 8, !dbg !964
  br label %bb4, !dbg !963

bb4:                                              ; preds = %bb3, %bb2
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !965
  %27 = load i64, i64* %26, align 8, !dbg !965, !range !936, !noundef !19
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !965
  %29 = load i64, i64* %28, align 8, !dbg !965
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !965
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !965
  ret { i64, i64 } %31, !dbg !965
}

; core::ptr::drop_in_place<&bool>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr29drop_in_place$LT$$RF$bool$GT$17heab9a6d544e941efE"(i8** %_1) unnamed_addr #0 !dbg !966 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !971, metadata !DIExpression()), !dbg !974
  ret void, !dbg !974
}

; core::ptr::drop_in_place<shlex::QuoteError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr38drop_in_place$LT$shlex..QuoteError$GT$17h82f7a6c6f5d18258E"(%"QuoteError::Nul"* %_1) unnamed_addr #0 !dbg !975 {
start:
  %_1.dbg.spill = alloca %"QuoteError::Nul"*, align 8
  store %"QuoteError::Nul"* %_1, %"QuoteError::Nul"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"QuoteError::Nul"** %_1.dbg.spill, metadata !980, metadata !DIExpression()), !dbg !983
  ret void, !dbg !983
}

; core::ptr::drop_in_place<alloc::string::String>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h0ccb537bb1763a95E"(%"alloc::string::String"* %_1) unnamed_addr #1 !dbg !984 {
start:
  %_1.dbg.spill = alloca %"alloc::string::String"*, align 8
  store %"alloc::string::String"* %_1, %"alloc::string::String"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %_1.dbg.spill, metadata !988, metadata !DIExpression()), !dbg !989
  %0 = bitcast %"alloc::string::String"* %_1 to %"alloc::vec::Vec<u8>"*, !dbg !989
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9be70052c8106a2bE"(%"alloc::vec::Vec<u8>"* %0), !dbg !989
  br label %bb1, !dbg !989

bb1:                                              ; preds = %start
  ret void, !dbg !989
}

; core::ptr::drop_in_place<&shlex::bytes::Quoter>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr45drop_in_place$LT$$RF$shlex..bytes..Quoter$GT$17hc6fba3347a275927E"(i8** %_1) unnamed_addr #0 !dbg !990 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !995, metadata !DIExpression()), !dbg !998
  ret void, !dbg !998
}

; core::ptr::drop_in_place<alloc::vec::Vec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9be70052c8106a2bE"(%"alloc::vec::Vec<u8>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !999 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %_1, %"alloc::vec::Vec<u8>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %_1.dbg.spill, metadata !1003, metadata !DIExpression()), !dbg !1004
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc7f5fc59ecf6d01fE"(%"alloc::vec::Vec<u8>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !1004

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*, !dbg !1004
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  invoke void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h6bca65cdf95edcf1E"({ i8*, i64 }* %1) #14
          to label %bb1 unwind label %abort, !dbg !1004

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*, !dbg !1004
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h6bca65cdf95edcf1E"({ i8*, i64 }* %7), !dbg !1004
  br label %bb2, !dbg !1004

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !1004
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #15, !dbg !1004
  unreachable, !dbg !1004

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1004
  %10 = load i8*, i8** %9, align 8, !dbg !1004
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1004
  %12 = load i32, i32* %11, align 8, !dbg !1004
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !1004
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !1004
  resume { i8*, i32 } %14, !dbg !1004

bb2:                                              ; preds = %bb4
  ret void, !dbg !1004
}

; core::ptr::drop_in_place<[alloc::string::String]>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr52drop_in_place$LT$$u5b$alloc..string..String$u5d$$GT$17hfc116486bc61bf0bE"([0 x %"alloc::string::String"]* %_1.0, i64 %_1.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1005 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { [0 x %"alloc::string::String"]*, i64 }, align 8
  %_9 = alloca %"alloc::string::String"*, align 8
  %_4 = alloca i64, align 8
  %1 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %_1.dbg.spill, i32 0, i32 0
  store [0 x %"alloc::string::String"]* %_1.0, [0 x %"alloc::string::String"]** %1, align 8
  %2 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %_1.dbg.spill, i32 0, i32 1
  store i64 %_1.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x %"alloc::string::String"]*, i64 }* %_1.dbg.spill, metadata !1014, metadata !DIExpression()), !dbg !1015
  br i1 false, label %bb7, label %bb12, !dbg !1015

bb7:                                              ; preds = %start
  store i64 0, i64* %_4, align 8, !dbg !1015
  br label %bb6, !dbg !1015

bb12:                                             ; preds = %start
  %3 = bitcast [0 x %"alloc::string::String"]* %_1.0 to %"alloc::string::String"*, !dbg !1015
  store %"alloc::string::String"* %3, %"alloc::string::String"** %_9, align 8, !dbg !1015
  %4 = load %"alloc::string::String"*, %"alloc::string::String"** %_9, align 8, !dbg !1015
  %_10 = getelementptr inbounds %"alloc::string::String", %"alloc::string::String"* %4, i64 %_1.1, !dbg !1015
  br label %bb11, !dbg !1015

bb11:                                             ; preds = %bb10, %bb12
  %5 = load %"alloc::string::String"*, %"alloc::string::String"** %_9, align 8, !dbg !1015
  %_14 = icmp eq %"alloc::string::String"* %5, %_10, !dbg !1015
  br i1 %_14, label %bb1, label %bb10, !dbg !1015

bb10:                                             ; preds = %bb11
  %_13 = load %"alloc::string::String"*, %"alloc::string::String"** %_9, align 8, !dbg !1015
  %6 = load %"alloc::string::String"*, %"alloc::string::String"** %_9, align 8, !dbg !1015
  %7 = getelementptr inbounds %"alloc::string::String", %"alloc::string::String"* %6, i64 1, !dbg !1015
  store %"alloc::string::String"* %7, %"alloc::string::String"** %_9, align 8, !dbg !1015
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h0ccb537bb1763a95E"(%"alloc::string::String"* %_13)
          to label %bb11 unwind label %cleanup, !dbg !1015

bb1:                                              ; preds = %bb6, %bb11
  ret void, !dbg !1015

bb9:                                              ; preds = %bb8, %cleanup
  %8 = load %"alloc::string::String"*, %"alloc::string::String"** %_9, align 8, !dbg !1015
  %_12 = icmp eq %"alloc::string::String"* %8, %_10, !dbg !1015
  br i1 %_12, label %bb2, label %bb8, !dbg !1015

cleanup:                                          ; preds = %bb10
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb9

bb8:                                              ; preds = %bb9
  %_11 = load %"alloc::string::String"*, %"alloc::string::String"** %_9, align 8, !dbg !1015
  %14 = load %"alloc::string::String"*, %"alloc::string::String"** %_9, align 8, !dbg !1015
  %15 = getelementptr inbounds %"alloc::string::String", %"alloc::string::String"* %14, i64 1, !dbg !1015
  store %"alloc::string::String"* %15, %"alloc::string::String"** %_9, align 8, !dbg !1015
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h0ccb537bb1763a95E"(%"alloc::string::String"* %_11) #14
          to label %bb9 unwind label %abort, !dbg !1015

bb2:                                              ; preds = %bb4, %bb9
  %16 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1015
  %17 = load i8*, i8** %16, align 8, !dbg !1015
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1015
  %19 = load i32, i32* %18, align 8, !dbg !1015
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !1015
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !1015
  resume { i8*, i32 } %21, !dbg !1015

abort:                                            ; preds = %bb3, %bb8
  %22 = landingpad { i8*, i32 }
          cleanup, !dbg !1015
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #15, !dbg !1015
  unreachable, !dbg !1015

bb6:                                              ; preds = %bb5, %bb7
  %23 = load i64, i64* %_4, align 8, !dbg !1015
  %_8 = icmp eq i64 %23, %_1.1, !dbg !1015
  br i1 %_8, label %bb1, label %bb5, !dbg !1015

bb5:                                              ; preds = %bb6
  %24 = load i64, i64* %_4, align 8, !dbg !1015
  %_7 = getelementptr inbounds [0 x %"alloc::string::String"], [0 x %"alloc::string::String"]* %_1.0, i64 0, i64 %24, !dbg !1015
  %25 = load i64, i64* %_4, align 8, !dbg !1015
  %26 = add i64 %25, 1, !dbg !1015
  store i64 %26, i64* %_4, align 8, !dbg !1015
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h0ccb537bb1763a95E"(%"alloc::string::String"* %_7)
          to label %bb6 unwind label %cleanup1, !dbg !1015

bb4:                                              ; preds = %bb3, %cleanup1
  %27 = load i64, i64* %_4, align 8, !dbg !1015
  %_6 = icmp eq i64 %27, %_1.1, !dbg !1015
  br i1 %_6, label %bb2, label %bb3, !dbg !1015

cleanup1:                                         ; preds = %bb5
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  %30 = extractvalue { i8*, i32 } %28, 1
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %30, i32* %32, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %33 = load i64, i64* %_4, align 8, !dbg !1015
  %_5 = getelementptr inbounds [0 x %"alloc::string::String"], [0 x %"alloc::string::String"]* %_1.0, i64 0, i64 %33, !dbg !1015
  %34 = load i64, i64* %_4, align 8, !dbg !1015
  %35 = add i64 %34, 1, !dbg !1015
  store i64 %35, i64* %_4, align 8, !dbg !1015
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h0ccb537bb1763a95E"(%"alloc::string::String"* %_5) #14
          to label %bb4 unwind label %abort, !dbg !1015
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h6bca65cdf95edcf1E"({ i8*, i64 }* %_1) unnamed_addr #1 !dbg !1016 {
start:
  %_1.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %_1, { i8*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %_1.dbg.spill, metadata !1021, metadata !DIExpression()), !dbg !1024
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6b624f5a037c2fdaE"({ i8*, i64 }* align 8 %_1), !dbg !1024
  br label %bb1, !dbg !1024

bb1:                                              ; preds = %start
  ret void, !dbg !1024
}

; core::ptr::drop_in_place<[alloc::vec::Vec<u8>]>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr56drop_in_place$LT$$u5b$alloc..vec..Vec$LT$u8$GT$$u5d$$GT$17h32913744221ce31fE"([0 x %"alloc::vec::Vec<u8>"]* %_1.0, i64 %_1.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1025 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { [0 x %"alloc::vec::Vec<u8>"]*, i64 }, align 8
  %_9 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_4 = alloca i64, align 8
  %1 = getelementptr inbounds { [0 x %"alloc::vec::Vec<u8>"]*, i64 }, { [0 x %"alloc::vec::Vec<u8>"]*, i64 }* %_1.dbg.spill, i32 0, i32 0
  store [0 x %"alloc::vec::Vec<u8>"]* %_1.0, [0 x %"alloc::vec::Vec<u8>"]** %1, align 8
  %2 = getelementptr inbounds { [0 x %"alloc::vec::Vec<u8>"]*, i64 }, { [0 x %"alloc::vec::Vec<u8>"]*, i64 }* %_1.dbg.spill, i32 0, i32 1
  store i64 %_1.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x %"alloc::vec::Vec<u8>"]*, i64 }* %_1.dbg.spill, metadata !1034, metadata !DIExpression()), !dbg !1035
  br i1 false, label %bb7, label %bb12, !dbg !1035

bb7:                                              ; preds = %start
  store i64 0, i64* %_4, align 8, !dbg !1035
  br label %bb6, !dbg !1035

bb12:                                             ; preds = %start
  %3 = bitcast [0 x %"alloc::vec::Vec<u8>"]* %_1.0 to %"alloc::vec::Vec<u8>"*, !dbg !1035
  store %"alloc::vec::Vec<u8>"* %3, %"alloc::vec::Vec<u8>"** %_9, align 8, !dbg !1035
  %4 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %_9, align 8, !dbg !1035
  %_10 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %4, i64 %_1.1, !dbg !1035
  br label %bb11, !dbg !1035

bb11:                                             ; preds = %bb10, %bb12
  %5 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %_9, align 8, !dbg !1035
  %_14 = icmp eq %"alloc::vec::Vec<u8>"* %5, %_10, !dbg !1035
  br i1 %_14, label %bb1, label %bb10, !dbg !1035

bb10:                                             ; preds = %bb11
  %_13 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %_9, align 8, !dbg !1035
  %6 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %_9, align 8, !dbg !1035
  %7 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %6, i64 1, !dbg !1035
  store %"alloc::vec::Vec<u8>"* %7, %"alloc::vec::Vec<u8>"** %_9, align 8, !dbg !1035
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9be70052c8106a2bE"(%"alloc::vec::Vec<u8>"* %_13)
          to label %bb11 unwind label %cleanup, !dbg !1035

bb1:                                              ; preds = %bb6, %bb11
  ret void, !dbg !1035

bb9:                                              ; preds = %bb8, %cleanup
  %8 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %_9, align 8, !dbg !1035
  %_12 = icmp eq %"alloc::vec::Vec<u8>"* %8, %_10, !dbg !1035
  br i1 %_12, label %bb2, label %bb8, !dbg !1035

cleanup:                                          ; preds = %bb10
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb9

bb8:                                              ; preds = %bb9
  %_11 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %_9, align 8, !dbg !1035
  %14 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %_9, align 8, !dbg !1035
  %15 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %14, i64 1, !dbg !1035
  store %"alloc::vec::Vec<u8>"* %15, %"alloc::vec::Vec<u8>"** %_9, align 8, !dbg !1035
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9be70052c8106a2bE"(%"alloc::vec::Vec<u8>"* %_11) #14
          to label %bb9 unwind label %abort, !dbg !1035

bb2:                                              ; preds = %bb4, %bb9
  %16 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1035
  %17 = load i8*, i8** %16, align 8, !dbg !1035
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1035
  %19 = load i32, i32* %18, align 8, !dbg !1035
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !1035
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !1035
  resume { i8*, i32 } %21, !dbg !1035

abort:                                            ; preds = %bb3, %bb8
  %22 = landingpad { i8*, i32 }
          cleanup, !dbg !1035
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #15, !dbg !1035
  unreachable, !dbg !1035

bb6:                                              ; preds = %bb5, %bb7
  %23 = load i64, i64* %_4, align 8, !dbg !1035
  %_8 = icmp eq i64 %23, %_1.1, !dbg !1035
  br i1 %_8, label %bb1, label %bb5, !dbg !1035

bb5:                                              ; preds = %bb6
  %24 = load i64, i64* %_4, align 8, !dbg !1035
  %_7 = getelementptr inbounds [0 x %"alloc::vec::Vec<u8>"], [0 x %"alloc::vec::Vec<u8>"]* %_1.0, i64 0, i64 %24, !dbg !1035
  %25 = load i64, i64* %_4, align 8, !dbg !1035
  %26 = add i64 %25, 1, !dbg !1035
  store i64 %26, i64* %_4, align 8, !dbg !1035
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9be70052c8106a2bE"(%"alloc::vec::Vec<u8>"* %_7)
          to label %bb6 unwind label %cleanup1, !dbg !1035

bb4:                                              ; preds = %bb3, %cleanup1
  %27 = load i64, i64* %_4, align 8, !dbg !1035
  %_6 = icmp eq i64 %27, %_1.1, !dbg !1035
  br i1 %_6, label %bb2, label %bb3, !dbg !1035

cleanup1:                                         ; preds = %bb5
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  %30 = extractvalue { i8*, i32 } %28, 1
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %30, i32* %32, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %33 = load i64, i64* %_4, align 8, !dbg !1035
  %_5 = getelementptr inbounds [0 x %"alloc::vec::Vec<u8>"], [0 x %"alloc::vec::Vec<u8>"]* %_1.0, i64 0, i64 %33, !dbg !1035
  %34 = load i64, i64* %_4, align 8, !dbg !1035
  %35 = add i64 %34, 1, !dbg !1035
  store i64 %35, i64* %_4, align 8, !dbg !1035
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9be70052c8106a2bE"(%"alloc::vec::Vec<u8>"* %_5) #14
          to label %bb4 unwind label %abort, !dbg !1035
}

; core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h9e3b3be1cd4c1522E"(%"alloc::vec::Vec<alloc::string::String>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1036 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"alloc::vec::Vec<alloc::string::String>"*, align 8
  store %"alloc::vec::Vec<alloc::string::String>"* %_1, %"alloc::vec::Vec<alloc::string::String>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::string::String>"** %_1.dbg.spill, metadata !1041, metadata !DIExpression()), !dbg !1044
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7a7d7ae2f5ea9ac8E"(%"alloc::vec::Vec<alloc::string::String>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !1044

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<alloc::string::String>"* %_1 to { i64*, i64 }*, !dbg !1044
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::string::String>>
  invoke void @"_ZN4core3ptr72drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..string..String$GT$$GT$17h10ffe8f32d11d714E"({ i64*, i64 }* %1) #14
          to label %bb1 unwind label %abort, !dbg !1044

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<alloc::string::String>"* %_1 to { i64*, i64 }*, !dbg !1044
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::string::String>>
  call void @"_ZN4core3ptr72drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..string..String$GT$$GT$17h10ffe8f32d11d714E"({ i64*, i64 }* %7), !dbg !1044
  br label %bb2, !dbg !1044

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !1044
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #15, !dbg !1044
  unreachable, !dbg !1044

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1044
  %10 = load i8*, i8** %9, align 8, !dbg !1044
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1044
  %12 = load i32, i32* %11, align 8, !dbg !1044
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !1044
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !1044
  resume { i8*, i32 } %14, !dbg !1044

bb2:                                              ; preds = %bb4
  ret void, !dbg !1044
}

; core::ptr::drop_in_place<alloc::vec::Vec<alloc::vec::Vec<u8>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr69drop_in_place$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17h6d0efc2a132f28d7E"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1045 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"alloc::vec::Vec<alloc::vec::Vec<u8>>"*, align 8
  store %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %_1, %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %_1.dbg.spill, metadata !1050, metadata !DIExpression()), !dbg !1053
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc7415b397fcc6441E"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !1053

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %_1 to { i64*, i64 }*, !dbg !1053
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::vec::Vec<u8>>>
  invoke void @"_ZN4core3ptr76drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17hc128c0e4cb8733f3E"({ i64*, i64 }* %1) #14
          to label %bb1 unwind label %abort, !dbg !1053

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %_1 to { i64*, i64 }*, !dbg !1053
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::vec::Vec<u8>>>
  call void @"_ZN4core3ptr76drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17hc128c0e4cb8733f3E"({ i64*, i64 }* %7), !dbg !1053
  br label %bb2, !dbg !1053

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !1053
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #15, !dbg !1053
  unreachable, !dbg !1053

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1053
  %10 = load i8*, i8** %9, align 8, !dbg !1053
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1053
  %12 = load i32, i32* %11, align 8, !dbg !1053
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !1053
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !1053
  resume { i8*, i32 } %14, !dbg !1053

bb2:                                              ; preds = %bb4
  ret void, !dbg !1053
}

; core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h82977a0c0dd68079E"(%"core::option::Option<alloc::string::String>"* %_1) unnamed_addr #1 !dbg !1054 {
start:
  %_1.dbg.spill = alloca %"core::option::Option<alloc::string::String>"*, align 8
  store %"core::option::Option<alloc::string::String>"* %_1, %"core::option::Option<alloc::string::String>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::string::String>"** %_1.dbg.spill, metadata !1070, metadata !DIExpression()), !dbg !1073
  %0 = bitcast %"core::option::Option<alloc::string::String>"* %_1 to {}**, !dbg !1073
  %1 = load {}*, {}** %0, align 8, !dbg !1073
  %2 = icmp eq {}* %1, null, !dbg !1073
  %_2 = select i1 %2, i64 0, i64 1, !dbg !1073
  %3 = icmp eq i64 %_2, 0, !dbg !1073
  br i1 %3, label %bb1, label %bb2, !dbg !1073

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !1073

bb2:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<alloc::string::String>"* %_1 to %"core::option::Option<alloc::string::String>::Some"*, !dbg !1073
  %5 = bitcast %"core::option::Option<alloc::string::String>::Some"* %4 to %"alloc::string::String"*, !dbg !1073
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h0ccb537bb1763a95E"(%"alloc::string::String"* %5), !dbg !1073
  br label %bb1, !dbg !1073
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr72drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..string..String$GT$$GT$17h10ffe8f32d11d714E"({ i64*, i64 }* %_1) unnamed_addr #1 !dbg !1074 {
start:
  %_1.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %_1, { i64*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %_1.dbg.spill, metadata !1079, metadata !DIExpression()), !dbg !1082
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h358a7a200ca8ad64E"({ i64*, i64 }* align 8 %_1), !dbg !1082
  br label %bb1, !dbg !1082

bb1:                                              ; preds = %start
  ret void, !dbg !1082
}

; core::ptr::drop_in_place<core::option::Option<alloc::vec::Vec<u8>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr74drop_in_place$LT$core..option..Option$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17h6f4a85b44fafafe7E"(%"core::option::Option<alloc::vec::Vec<u8>>"* %_1) unnamed_addr #1 !dbg !1083 {
start:
  %_1.dbg.spill = alloca %"core::option::Option<alloc::vec::Vec<u8>>"*, align 8
  store %"core::option::Option<alloc::vec::Vec<u8>>"* %_1, %"core::option::Option<alloc::vec::Vec<u8>>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::vec::Vec<u8>>"** %_1.dbg.spill, metadata !1099, metadata !DIExpression()), !dbg !1102
  %0 = bitcast %"core::option::Option<alloc::vec::Vec<u8>>"* %_1 to {}**, !dbg !1102
  %1 = load {}*, {}** %0, align 8, !dbg !1102
  %2 = icmp eq {}* %1, null, !dbg !1102
  %_2 = select i1 %2, i64 0, i64 1, !dbg !1102
  %3 = icmp eq i64 %_2, 0, !dbg !1102
  br i1 %3, label %bb1, label %bb2, !dbg !1102

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !1102

bb2:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<alloc::vec::Vec<u8>>"* %_1 to %"core::option::Option<alloc::vec::Vec<u8>>::Some"*, !dbg !1102
  %5 = bitcast %"core::option::Option<alloc::vec::Vec<u8>>::Some"* %4 to %"alloc::vec::Vec<u8>"*, !dbg !1102
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9be70052c8106a2bE"(%"alloc::vec::Vec<u8>"* %5), !dbg !1102
  br label %bb1, !dbg !1102
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::vec::Vec<u8>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr76drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17hc128c0e4cb8733f3E"({ i64*, i64 }* %_1) unnamed_addr #1 !dbg !1103 {
start:
  %_1.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %_1, { i64*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %_1.dbg.spill, metadata !1108, metadata !DIExpression()), !dbg !1111
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9c8e6b8471c842a4E"({ i64*, i64 }* align 8 %_1), !dbg !1111
  br label %bb1, !dbg !1111

bb1:                                              ; preds = %start
  ret void, !dbg !1111
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hc5605095dafcae08E"(i8* %ptr) unnamed_addr #0 !dbg !1112 {
start:
  %ptr.dbg.spill2 = alloca i8*, align 8
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %_15 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_14 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_5 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1129, metadata !DIExpression()), !dbg !1130
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !1131, metadata !DIExpression()), !dbg !1139
  store i8* %ptr, i8** %self.dbg.spill, align 8, !dbg !1154
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1152, metadata !DIExpression()), !dbg !1155
  store i8* %ptr, i8** %self.dbg.spill1, align 8, !dbg !1155
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !1156, metadata !DIExpression()), !dbg !1163
  %3 = bitcast {}** %1 to i64*, !dbg !1165
  store i64 0, i64* %3, align 8, !dbg !1165
  %data_address = load {}*, {}** %1, align 8, !dbg !1165
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !1165
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1138, metadata !DIExpression()), !dbg !1139
  br label %bb4, !dbg !1165

bb4:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_15 to {}**, !dbg !1139
  store {}* %data_address, {}** %4, align 8, !dbg !1139
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_14 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !1139
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !1139
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_15 to i8*, !dbg !1139
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !1139
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_14 to i8**, !dbg !1139
  %other = load i8*, i8** %8, align 8, !dbg !1139
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !1139
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !1162, metadata !DIExpression()), !dbg !1163
  %9 = icmp eq i8* %ptr, %other, !dbg !1163
  %10 = zext i1 %9 to i8, !dbg !1163
  store i8 %10, i8* %0, align 1, !dbg !1163
  %11 = load i8, i8* %0, align 1, !dbg !1163, !range !394, !noundef !19
  %_3 = trunc i8 %11 to i1, !dbg !1163
  br label %bb5, !dbg !1163

bb5:                                              ; preds = %bb4
  %_2 = xor i1 %_3, true, !dbg !1174
  br i1 %_2, label %bb1, label %bb2, !dbg !1174

bb2:                                              ; preds = %bb5
  %12 = bitcast i8** %2 to {}**, !dbg !1175
  store {}* null, {}** %12, align 8, !dbg !1175
  br label %bb3, !dbg !1176

bb1:                                              ; preds = %bb5
  store i8* %ptr, i8** %ptr.dbg.spill2, align 8, !dbg !1177
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill2, metadata !1178, metadata !DIExpression()), !dbg !1181
  store i8* %ptr, i8** %_5, align 8, !dbg !1181
  %13 = load i8*, i8** %_5, align 8, !dbg !1183, !nonnull !19, !noundef !19
  store i8* %13, i8** %2, align 8, !dbg !1183
  br label %bb3, !dbg !1176

bb3:                                              ; preds = %bb2, %bb1
  %14 = load i8*, i8** %2, align 8, !dbg !1184
  ret i8* %14, !dbg !1184
}

; core::str::converts::from_utf8_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h9f5110cfd4f03ad3E([0 x i8]* align 1 %v.0, i64 %v.1) unnamed_addr #0 !dbg !1185 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0
  store [0 x i8]* %v.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !1192, metadata !DIExpression()), !dbg !1193
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !1194
  store [0 x i8]* %v.0, [0 x i8]** %3, align 8, !dbg !1194
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !1194
  store i64 %v.1, i64* %4, align 8, !dbg !1194
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !1194
  %6 = load [0 x i8]*, [0 x i8]** %5, align 8, !dbg !1194, !nonnull !19, !align !826, !noundef !19
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !1194
  %8 = load i64, i64* %7, align 8, !dbg !1194
  br label %bb1, !dbg !1194

bb1:                                              ; preds = %start
  %9 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %6, 0, !dbg !1195
  %10 = insertvalue { [0 x i8]*, i64 } %9, i64 %8, 1, !dbg !1195
  ret { [0 x i8]*, i64 } %10, !dbg !1195
}

; core::iter::traits::iterator::Iterator::by_ref
; Function Attrs: nonlazybind uwtable
define align 8 %"bytes::Shlex"* @_ZN4core4iter6traits8iterator8Iterator6by_ref17h4ba759d08463b75dE(%"bytes::Shlex"* align 8 %self) unnamed_addr #1 !dbg !1196 {
start:
  %self.dbg.spill = alloca %"bytes::Shlex"*, align 8
  store %"bytes::Shlex"* %self, %"bytes::Shlex"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"bytes::Shlex"** %self.dbg.spill, metadata !1205, metadata !DIExpression()), !dbg !1208
  ret %"bytes::Shlex"* %self, !dbg !1209
}

; core::iter::traits::iterator::Iterator::by_ref
; Function Attrs: nonlazybind uwtable
define align 8 %Shlex* @_ZN4core4iter6traits8iterator8Iterator6by_ref17ha02f8a5de378d359E(%Shlex* align 8 %self) unnamed_addr #1 !dbg !1210 {
start:
  %self.dbg.spill = alloca %Shlex*, align 8
  store %Shlex* %self, %Shlex** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %Shlex** %self.dbg.spill, metadata !1214, metadata !DIExpression()), !dbg !1217
  ret %Shlex* %self, !dbg !1218
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator7collect17h2ef59b44caa76a53E(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* sret(%"alloc::vec::Vec<alloc::vec::Vec<u8>>") %0, %"bytes::Shlex"* align 8 %self) unnamed_addr #0 !dbg !1219 {
start:
  %self.dbg.spill = alloca %"bytes::Shlex"*, align 8
  store %"bytes::Shlex"* %self, %"bytes::Shlex"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"bytes::Shlex"** %self.dbg.spill, metadata !1221, metadata !DIExpression()), !dbg !1225
; call <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
  call void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h0f3f6e13d4f9205aE"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* sret(%"alloc::vec::Vec<alloc::vec::Vec<u8>>") %0, %"bytes::Shlex"* align 8 %self), !dbg !1226
  br label %bb1, !dbg !1226

bb1:                                              ; preds = %start
  ret void, !dbg !1227
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator7collect17ha461a06ed692ab48E(%"alloc::vec::Vec<alloc::string::String>"* sret(%"alloc::vec::Vec<alloc::string::String>") %0, %Shlex* align 8 %self) unnamed_addr #0 !dbg !1228 {
start:
  %self.dbg.spill = alloca %Shlex*, align 8
  store %Shlex* %self, %Shlex** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %Shlex** %self.dbg.spill, metadata !1230, metadata !DIExpression()), !dbg !1234
; call <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
  call void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17hbc35f6bdd17ee206E"(%"alloc::vec::Vec<alloc::string::String>"* sret(%"alloc::vec::Vec<alloc::string::String>") %0, %Shlex* align 8 %self), !dbg !1235
  br label %bb1, !dbg !1235

bb1:                                              ; preds = %start
  ret void, !dbg !1236
}

; core::iter::traits::iterator::Iterator::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator9size_hint17h950b9391cc9a8154E({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %0, %Shlex* align 8 %self) unnamed_addr #0 !dbg !1237 {
start:
  %self.dbg.spill = alloca %Shlex*, align 8
  %_2 = alloca { i64, i64 }, align 8
  store %Shlex* %self, %Shlex** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %Shlex** %self.dbg.spill, metadata !1246, metadata !DIExpression()), !dbg !1247
  %1 = bitcast { i64, i64 }* %_2 to i64*, !dbg !1248
  store i64 0, i64* %1, align 8, !dbg !1248
  %2 = bitcast { i64, { i64, i64 } }* %0 to i64*, !dbg !1249
  store i64 0, i64* %2, align 8, !dbg !1249
  %3 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %0, i32 0, i32 1, !dbg !1249
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 0, !dbg !1249
  %5 = load i64, i64* %4, align 8, !dbg !1249, !range !936, !noundef !19
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !1249
  %7 = load i64, i64* %6, align 8, !dbg !1249
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !1249
  store i64 %5, i64* %8, align 8, !dbg !1249
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !1249
  store i64 %7, i64* %9, align 8, !dbg !1249
  ret void, !dbg !1250
}

; core::iter::traits::iterator::Iterator::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator9size_hint17hf31b4a86f58bf893E({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %0, %"bytes::Shlex"* align 8 %self) unnamed_addr #0 !dbg !1251 {
start:
  %self.dbg.spill = alloca %"bytes::Shlex"*, align 8
  %_2 = alloca { i64, i64 }, align 8
  store %"bytes::Shlex"* %self, %"bytes::Shlex"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"bytes::Shlex"** %self.dbg.spill, metadata !1256, metadata !DIExpression()), !dbg !1257
  %1 = bitcast { i64, i64 }* %_2 to i64*, !dbg !1258
  store i64 0, i64* %1, align 8, !dbg !1258
  %2 = bitcast { i64, { i64, i64 } }* %0 to i64*, !dbg !1259
  store i64 0, i64* %2, align 8, !dbg !1259
  %3 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %0, i32 0, i32 1, !dbg !1259
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 0, !dbg !1259
  %5 = load i64, i64* %4, align 8, !dbg !1259, !range !936, !noundef !19
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !1259
  %7 = load i64, i64* %6, align 8, !dbg !1259
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !1259
  store i64 %5, i64* %8, align 8, !dbg !1259
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !1259
  store i64 %7, i64* %9, align 8, !dbg !1259
  ret void, !dbg !1260
}

; core::alloc::layout::Layout::from_size_valid_align
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17h9cc74eb999b1e403E(i64 %size, i64 %align) unnamed_addr #0 !dbg !1261 {
start:
  %n.dbg.spill = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %_11 = alloca { i64, i64 }, align 8
  %self1 = alloca i64, align 8
  %self = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %size, i64* %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !1283, metadata !DIExpression()), !dbg !1285
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !1284, metadata !DIExpression()), !dbg !1286
  call void @llvm.dbg.declare(metadata i64* %self, metadata !1287, metadata !DIExpression()), !dbg !1298
  call void @llvm.dbg.declare(metadata i64* %self1, metadata !1300, metadata !DIExpression()), !dbg !1307
  store i64 %align, i64* %self1, align 8, !dbg !1299
  %_15 = load i64, i64* %self1, align 8, !dbg !1307, !range !1308, !noundef !19
  store i64 %_15, i64* %n.dbg.spill, align 8, !dbg !1307
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1309, metadata !DIExpression()), !dbg !1323
  store i64 %_15, i64* %self, align 8, !dbg !1323
  %_8 = load i64, i64* %self, align 8, !dbg !1298
  %_7 = sub i64 %_8, 1, !dbg !1325
  %_5 = sub i64 9223372036854775807, %_7, !dbg !1326
  %_3 = icmp ugt i64 %size, %_5, !dbg !1327
  br i1 %_3, label %bb1, label %bb2, !dbg !1327

bb2:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %_11 to i64*, !dbg !1328
  store i64 %size, i64* %1, align 8, !dbg !1328
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !1328
  store i64 %align, i64* %2, align 8, !dbg !1328
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 0, !dbg !1329
  %4 = load i64, i64* %3, align 8, !dbg !1329
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !1329
  %6 = load i64, i64* %5, align 8, !dbg !1329, !range !1308, !noundef !19
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1329
  store i64 %4, i64* %7, align 8, !dbg !1329
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1329
  store i64 %6, i64* %8, align 8, !dbg !1329
  br label %bb3, !dbg !1330

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1331
  store i64 0, i64* %9, align 8, !dbg !1331
  br label %bb3, !dbg !1330

bb3:                                              ; preds = %bb2, %bb1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1330
  %11 = load i64, i64* %10, align 8, !dbg !1330
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1330
  %13 = load i64, i64* %12, align 8, !dbg !1330, !range !649, !noundef !19
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !1330
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !1330
  ret { i64, i64 } %15, !dbg !1330
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h1323d54702b1344aE(i64 %n) unnamed_addr #0 !dbg !1332 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill5 = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill3 = alloca %"core::alloc::layout::LayoutError", align 1
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %n.dbg.spill = alloca i64, align 8
  %self1 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1336, metadata !DIExpression()), !dbg !1356
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !1357, metadata !DIExpression()), !dbg !1401
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !1403, metadata !DIExpression()), !dbg !1414
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %err.dbg.spill, metadata !1410, metadata !DIExpression()), !dbg !1414
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill, metadata !1339, metadata !DIExpression()), !dbg !1415
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill2, metadata !1416, metadata !DIExpression()), !dbg !1427
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !1398, metadata !DIExpression()), !dbg !1429
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill3, metadata !1422, metadata !DIExpression()), !dbg !1430
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h3cb4555aa44341dcE"(i64 1, i64 %n), !dbg !1402
  store { i64, i64 } %2, { i64, i64 }* %self1, align 8, !dbg !1402
  br label %bb1, !dbg !1402

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %self1 to i64*, !dbg !1414
  %_15 = load i64, i64* %3, align 8, !dbg !1414, !range !936, !noundef !19
  switch i64 %_15, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !1414

bb9:                                              ; preds = %bb1
  unreachable, !dbg !1414

bb8:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %self to i64*, !dbg !1414
  store i64 1, i64* %4, align 8, !dbg !1414
  br label %bb11, !dbg !1414

bb10:                                             ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !1414
  %v = load i64, i64* %5, align 8, !dbg !1414
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !1414
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !1411, metadata !DIExpression()), !dbg !1431
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1431
  store i64 %v, i64* %6, align 8, !dbg !1431
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !1431
  store i64 0, i64* %7, align 8, !dbg !1431
  br label %bb11, !dbg !1414

bb11:                                             ; preds = %bb8, %bb10
  %8 = bitcast { i64, i64 }* %self to i64*, !dbg !1401
  %_18 = load i64, i64* %8, align 8, !dbg !1401, !range !936, !noundef !19
  switch i64 %_18, label %bb13 [
    i64 0, label %bb14
    i64 1, label %bb12
  ], !dbg !1401

bb13:                                             ; preds = %bb11
  unreachable, !dbg !1401

bb14:                                             ; preds = %bb11
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1401
  %v4 = load i64, i64* %9, align 8, !dbg !1401
  store i64 %v4, i64* %v.dbg.spill5, align 8, !dbg !1401
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill5, metadata !1395, metadata !DIExpression()), !dbg !1432
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !1432
  store i64 %v4, i64* %10, align 8, !dbg !1432
  %11 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1432
  store i64 0, i64* %11, align 8, !dbg !1432
  br label %bb2, !dbg !1401

bb12:                                             ; preds = %bb11
  %12 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1429
  store i64 1, i64* %12, align 8, !dbg !1429
  br label %bb2, !dbg !1401

bb2:                                              ; preds = %bb14, %bb12
  %13 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1402
  %_9 = load i64, i64* %13, align 8, !dbg !1402, !range !936, !noundef !19
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !1402

bb4:                                              ; preds = %bb2
  unreachable, !dbg !1402

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !1402
  %val = load i64, i64* %14, align 8, !dbg !1402
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !1402
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !1354, metadata !DIExpression()), !dbg !1433
  store i64 %val, i64* %array_size.dbg.spill, align 8, !dbg !1433
  call void @llvm.dbg.declare(metadata i64* %array_size.dbg.spill, metadata !1337, metadata !DIExpression()), !dbg !1434
  store i64 1, i64* %align.dbg.spill, align 8, !dbg !1435
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !1446, metadata !DIExpression()), !dbg !1460
  store i64 1, i64* %0, align 8, !dbg !1460
  %_14 = load i64, i64* %0, align 8, !dbg !1460, !range !1308, !noundef !19
  br label %bb15, !dbg !1460

bb5:                                              ; preds = %bb2
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h53d72257060e3473E"(), !dbg !1430
  br label %bb16, !dbg !1430

bb16:                                             ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1430
  store i64 0, i64* %15, align 8, !dbg !1430
  br label %bb7, !dbg !1462

bb7:                                              ; preds = %bb6, %bb16
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !1462
  %17 = load i64, i64* %16, align 8, !dbg !1462
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1462
  %19 = load i64, i64* %18, align 8, !dbg !1462, !range !649, !noundef !19
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !1462
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !1462
  ret { i64, i64 } %21, !dbg !1462

bb15:                                             ; preds = %bb3
; call core::alloc::layout::Layout::from_size_valid_align
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17h9cc74eb999b1e403E(i64 %val, i64 %_14), !dbg !1463
  store { i64, i64 } %22, { i64, i64 }* %1, align 8, !dbg !1463
  br label %bb6, !dbg !1463

bb6:                                              ; preds = %bb15
  br label %bb7, !dbg !1462
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h277941258703e322E(i64 %n) unnamed_addr #0 !dbg !1464 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill5 = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill3 = alloca %"core::alloc::layout::LayoutError", align 1
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %n.dbg.spill = alloca i64, align 8
  %self1 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1466, metadata !DIExpression()), !dbg !1473
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !1474, metadata !DIExpression()), !dbg !1484
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !1486, metadata !DIExpression()), !dbg !1494
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %err.dbg.spill, metadata !1490, metadata !DIExpression()), !dbg !1494
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill, metadata !1469, metadata !DIExpression()), !dbg !1495
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill2, metadata !1496, metadata !DIExpression()), !dbg !1503
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !1481, metadata !DIExpression()), !dbg !1505
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill3, metadata !1500, metadata !DIExpression()), !dbg !1506
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h3cb4555aa44341dcE"(i64 24, i64 %n), !dbg !1485
  store { i64, i64 } %2, { i64, i64 }* %self1, align 8, !dbg !1485
  br label %bb1, !dbg !1485

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %self1 to i64*, !dbg !1494
  %_15 = load i64, i64* %3, align 8, !dbg !1494, !range !936, !noundef !19
  switch i64 %_15, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !1494

bb9:                                              ; preds = %bb1
  unreachable, !dbg !1494

bb8:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %self to i64*, !dbg !1494
  store i64 1, i64* %4, align 8, !dbg !1494
  br label %bb11, !dbg !1494

bb10:                                             ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !1494
  %v = load i64, i64* %5, align 8, !dbg !1494
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !1494
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !1491, metadata !DIExpression()), !dbg !1507
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1507
  store i64 %v, i64* %6, align 8, !dbg !1507
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !1507
  store i64 0, i64* %7, align 8, !dbg !1507
  br label %bb11, !dbg !1494

bb11:                                             ; preds = %bb8, %bb10
  %8 = bitcast { i64, i64 }* %self to i64*, !dbg !1484
  %_18 = load i64, i64* %8, align 8, !dbg !1484, !range !936, !noundef !19
  switch i64 %_18, label %bb13 [
    i64 0, label %bb14
    i64 1, label %bb12
  ], !dbg !1484

bb13:                                             ; preds = %bb11
  unreachable, !dbg !1484

bb14:                                             ; preds = %bb11
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1484
  %v4 = load i64, i64* %9, align 8, !dbg !1484
  store i64 %v4, i64* %v.dbg.spill5, align 8, !dbg !1484
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill5, metadata !1478, metadata !DIExpression()), !dbg !1508
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !1508
  store i64 %v4, i64* %10, align 8, !dbg !1508
  %11 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1508
  store i64 0, i64* %11, align 8, !dbg !1508
  br label %bb2, !dbg !1484

bb12:                                             ; preds = %bb11
  %12 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1505
  store i64 1, i64* %12, align 8, !dbg !1505
  br label %bb2, !dbg !1484

bb2:                                              ; preds = %bb14, %bb12
  %13 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1485
  %_9 = load i64, i64* %13, align 8, !dbg !1485, !range !936, !noundef !19
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !1485

bb4:                                              ; preds = %bb2
  unreachable, !dbg !1485

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !1485
  %val = load i64, i64* %14, align 8, !dbg !1485
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !1485
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !1471, metadata !DIExpression()), !dbg !1509
  store i64 %val, i64* %array_size.dbg.spill, align 8, !dbg !1509
  call void @llvm.dbg.declare(metadata i64* %array_size.dbg.spill, metadata !1467, metadata !DIExpression()), !dbg !1510
  store i64 8, i64* %align.dbg.spill, align 8, !dbg !1511
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !1517, metadata !DIExpression()), !dbg !1524
  store i64 8, i64* %0, align 8, !dbg !1524
  %_14 = load i64, i64* %0, align 8, !dbg !1524, !range !1308, !noundef !19
  br label %bb15, !dbg !1524

bb5:                                              ; preds = %bb2
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h53d72257060e3473E"(), !dbg !1506
  br label %bb16, !dbg !1506

bb16:                                             ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1506
  store i64 0, i64* %15, align 8, !dbg !1506
  br label %bb7, !dbg !1526

bb7:                                              ; preds = %bb6, %bb16
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !1526
  %17 = load i64, i64* %16, align 8, !dbg !1526
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1526
  %19 = load i64, i64* %18, align 8, !dbg !1526, !range !649, !noundef !19
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !1526
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !1526
  ret { i64, i64 } %21, !dbg !1526

bb15:                                             ; preds = %bb3
; call core::alloc::layout::Layout::from_size_valid_align
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17h9cc74eb999b1e403E(i64 %val, i64 %_14), !dbg !1527
  store { i64, i64 } %22, { i64, i64 }* %1, align 8, !dbg !1527
  br label %bb6, !dbg !1527

bb6:                                              ; preds = %bb15
  br label %bb7, !dbg !1526
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h2e3ae26bf90eeeb2E(i64 %n) unnamed_addr #0 !dbg !1528 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill5 = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill3 = alloca %"core::alloc::layout::LayoutError", align 1
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %n.dbg.spill = alloca i64, align 8
  %self1 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1530, metadata !DIExpression()), !dbg !1537
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !1538, metadata !DIExpression()), !dbg !1548
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !1550, metadata !DIExpression()), !dbg !1558
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %err.dbg.spill, metadata !1554, metadata !DIExpression()), !dbg !1558
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill, metadata !1533, metadata !DIExpression()), !dbg !1559
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill2, metadata !1560, metadata !DIExpression()), !dbg !1567
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !1545, metadata !DIExpression()), !dbg !1569
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill3, metadata !1564, metadata !DIExpression()), !dbg !1570
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h3cb4555aa44341dcE"(i64 24, i64 %n), !dbg !1549
  store { i64, i64 } %2, { i64, i64 }* %self1, align 8, !dbg !1549
  br label %bb1, !dbg !1549

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %self1 to i64*, !dbg !1558
  %_15 = load i64, i64* %3, align 8, !dbg !1558, !range !936, !noundef !19
  switch i64 %_15, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !1558

bb9:                                              ; preds = %bb1
  unreachable, !dbg !1558

bb8:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %self to i64*, !dbg !1558
  store i64 1, i64* %4, align 8, !dbg !1558
  br label %bb11, !dbg !1558

bb10:                                             ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !1558
  %v = load i64, i64* %5, align 8, !dbg !1558
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !1558
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !1555, metadata !DIExpression()), !dbg !1571
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1571
  store i64 %v, i64* %6, align 8, !dbg !1571
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !1571
  store i64 0, i64* %7, align 8, !dbg !1571
  br label %bb11, !dbg !1558

bb11:                                             ; preds = %bb8, %bb10
  %8 = bitcast { i64, i64 }* %self to i64*, !dbg !1548
  %_18 = load i64, i64* %8, align 8, !dbg !1548, !range !936, !noundef !19
  switch i64 %_18, label %bb13 [
    i64 0, label %bb14
    i64 1, label %bb12
  ], !dbg !1548

bb13:                                             ; preds = %bb11
  unreachable, !dbg !1548

bb14:                                             ; preds = %bb11
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1548
  %v4 = load i64, i64* %9, align 8, !dbg !1548
  store i64 %v4, i64* %v.dbg.spill5, align 8, !dbg !1548
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill5, metadata !1542, metadata !DIExpression()), !dbg !1572
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !1572
  store i64 %v4, i64* %10, align 8, !dbg !1572
  %11 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1572
  store i64 0, i64* %11, align 8, !dbg !1572
  br label %bb2, !dbg !1548

bb12:                                             ; preds = %bb11
  %12 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1569
  store i64 1, i64* %12, align 8, !dbg !1569
  br label %bb2, !dbg !1548

bb2:                                              ; preds = %bb14, %bb12
  %13 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1549
  %_9 = load i64, i64* %13, align 8, !dbg !1549, !range !936, !noundef !19
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !1549

bb4:                                              ; preds = %bb2
  unreachable, !dbg !1549

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !1549
  %val = load i64, i64* %14, align 8, !dbg !1549
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !1549
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !1535, metadata !DIExpression()), !dbg !1573
  store i64 %val, i64* %array_size.dbg.spill, align 8, !dbg !1573
  call void @llvm.dbg.declare(metadata i64* %array_size.dbg.spill, metadata !1531, metadata !DIExpression()), !dbg !1574
  store i64 8, i64* %align.dbg.spill, align 8, !dbg !1575
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !1581, metadata !DIExpression()), !dbg !1588
  store i64 8, i64* %0, align 8, !dbg !1588
  %_14 = load i64, i64* %0, align 8, !dbg !1588, !range !1308, !noundef !19
  br label %bb15, !dbg !1588

bb5:                                              ; preds = %bb2
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h53d72257060e3473E"(), !dbg !1570
  br label %bb16, !dbg !1570

bb16:                                             ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1570
  store i64 0, i64* %15, align 8, !dbg !1570
  br label %bb7, !dbg !1590

bb7:                                              ; preds = %bb6, %bb16
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !1590
  %17 = load i64, i64* %16, align 8, !dbg !1590
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1590
  %19 = load i64, i64* %18, align 8, !dbg !1590, !range !649, !noundef !19
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !1590
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !1590
  ret { i64, i64 } %21, !dbg !1590

bb15:                                             ; preds = %bb3
; call core::alloc::layout::Layout::from_size_valid_align
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17h9cc74eb999b1e403E(i64 %val, i64 %_14), !dbg !1591
  store { i64, i64 } %22, { i64, i64 }* %1, align 8, !dbg !1591
  br label %bb6, !dbg !1591

bb6:                                              ; preds = %bb15
  br label %bb7, !dbg !1590
}

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h5274fd43326ea4feE"([2 x i8]* align 1 %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !1592 {
start:
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %self.dbg.spill = alloca [2 x i8]*, align 8
  store [2 x i8]* %self, [2 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [2 x i8]** %self.dbg.spill, metadata !1604, metadata !DIExpression()), !dbg !1608
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill, metadata !1605, metadata !DIExpression()), !dbg !1609
  %_4.0 = bitcast [2 x i8]* %self to [0 x i8]*, !dbg !1610
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h5d7184cc4ed0a15fE"([0 x i8]* align 1 %_4.0, i64 2, %"core::panic::location::Location"* align 8 %0), !dbg !1611
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0, !dbg !1611
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1, !dbg !1611
  br label %bb1, !dbg !1611

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0, !dbg !1612
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1, !dbg !1612
  ret { [0 x i8]*, i64 } %5, !dbg !1612
}

; core::slice::<impl [T]>::split_at_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$18split_at_unchecked17h5a8b7e7a010699f3E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %0, [0 x i8]* align 1 %self.0, i64 %self.1, i64 %mid) unnamed_addr #0 !dbg !1613 {
start:
  %ptr.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill8 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill7 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill6 = alloca i64, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca i64, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_28 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_22 = alloca { i64, i64 }, align 8
  %_16 = alloca { i64, i64 }, align 8
  %index1 = alloca i64, align 8
  %index = alloca i64, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1623, metadata !DIExpression()), !dbg !1625
  store i64 %mid, i64* %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %mid.dbg.spill, metadata !1624, metadata !DIExpression()), !dbg !1626
  call void @llvm.dbg.declare(metadata i64* %index, metadata !1627, metadata !DIExpression()), !dbg !1638
  call void @llvm.dbg.declare(metadata i64* %index1, metadata !1640, metadata !DIExpression()), !dbg !1651
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !1639
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8, !dbg !1639
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !1639
  store i64 %self.1, i64* %4, align 8, !dbg !1639
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !1635, metadata !DIExpression()), !dbg !1638
  store i64 %mid, i64* %index, align 8, !dbg !1653
  %self = load i64, i64* %index, align 8, !dbg !1638
  store i64 %self, i64* %self.dbg.spill3, align 8, !dbg !1638
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill3, metadata !1654, metadata !DIExpression()), !dbg !1662
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !1638
  store [0 x i8]* %self.0, [0 x i8]** %5, align 8, !dbg !1638
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !1638
  store i64 %self.1, i64* %6, align 8, !dbg !1638
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !1661, metadata !DIExpression()), !dbg !1662
  %7 = bitcast { i64, i64 }* %_16 to i64*, !dbg !1662
  store i64 0, i64* %7, align 8, !dbg !1662
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_16, i32 0, i32 1, !dbg !1662
  store i64 %self, i64* %8, align 8, !dbg !1662
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_16, i32 0, i32 0, !dbg !1662
  %10 = load i64, i64* %9, align 8, !dbg !1662
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_16, i32 0, i32 1, !dbg !1662
  %12 = load i64, i64* %11, align 8, !dbg !1662
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %13 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h5a19eb2355e32f18E"(i64 %10, i64 %12, [0 x i8]* %self.0, i64 %self.1), !dbg !1662
  %_13.0 = extractvalue { [0 x i8]*, i64 } %13, 0, !dbg !1662
  %_13.1 = extractvalue { [0 x i8]*, i64 } %13, 1, !dbg !1662
  br label %bb1, !dbg !1662

bb1:                                              ; preds = %start
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !1652
  store [0 x i8]* %self.0, [0 x i8]** %14, align 8, !dbg !1652
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !1652
  store i64 %self.1, i64* %15, align 8, !dbg !1652
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill4, metadata !1648, metadata !DIExpression()), !dbg !1651
  store i64 %mid, i64* %index1, align 8, !dbg !1664
  %self5 = load i64, i64* %index1, align 8, !dbg !1651
  store i64 %self5, i64* %self.dbg.spill6, align 8, !dbg !1651
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill6, metadata !1665, metadata !DIExpression()), !dbg !1673
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill7, i32 0, i32 0, !dbg !1651
  store [0 x i8]* %self.0, [0 x i8]** %16, align 8, !dbg !1651
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill7, i32 0, i32 1, !dbg !1651
  store i64 %self.1, i64* %17, align 8, !dbg !1651
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill7, metadata !1672, metadata !DIExpression()), !dbg !1673
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill8, i32 0, i32 0, !dbg !1673
  store [0 x i8]* %self.0, [0 x i8]** %18, align 8, !dbg !1673
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill8, i32 0, i32 1, !dbg !1673
  store i64 %self.1, i64* %19, align 8, !dbg !1673
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill8, metadata !1675, metadata !DIExpression()), !dbg !1681
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !1681
  store [0 x i8]* %self.0, [0 x i8]** %20, align 8, !dbg !1681
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !1681
  store i64 %self.1, i64* %21, align 8, !dbg !1681
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill, metadata !1683, metadata !DIExpression()), !dbg !1687
  %22 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_28 to { [0 x i8]*, i64 }*, !dbg !1687
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %22, i32 0, i32 0, !dbg !1687
  store [0 x i8]* %self.0, [0 x i8]** %23, align 8, !dbg !1687
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %22, i32 0, i32 1, !dbg !1687
  store i64 %self.1, i64* %24, align 8, !dbg !1687
  %25 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_28 to { i8*, i64 }*, !dbg !1687
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i32 0, i32 1, !dbg !1687
  %_24 = load i64, i64* %26, align 8, !dbg !1687
  %27 = bitcast { i64, i64 }* %_22 to i64*, !dbg !1673
  store i64 %self5, i64* %27, align 8, !dbg !1673
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_22, i32 0, i32 1, !dbg !1673
  store i64 %_24, i64* %28, align 8, !dbg !1673
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_22, i32 0, i32 0, !dbg !1673
  %30 = load i64, i64* %29, align 8, !dbg !1673
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_22, i32 0, i32 1, !dbg !1673
  %32 = load i64, i64* %31, align 8, !dbg !1673
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %33 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h5a19eb2355e32f18E"(i64 %30, i64 %32, [0 x i8]* %self.0, i64 %self.1), !dbg !1673
  %_19.0 = extractvalue { [0 x i8]*, i64 } %33, 0, !dbg !1673
  %_19.1 = extractvalue { [0 x i8]*, i64 } %33, 1, !dbg !1673
  br label %bb2, !dbg !1673

bb2:                                              ; preds = %bb1
  %34 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %0 to { [0 x i8]*, i64 }*, !dbg !1689
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %34, i32 0, i32 0, !dbg !1689
  store [0 x i8]* %_13.0, [0 x i8]** %35, align 8, !dbg !1689
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %34, i32 0, i32 1, !dbg !1689
  store i64 %_13.1, i64* %36, align 8, !dbg !1689
  %37 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %0, i32 0, i32 1, !dbg !1689
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 0, !dbg !1689
  store [0 x i8]* %_19.0, [0 x i8]** %38, align 8, !dbg !1689
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 1, !dbg !1689
  store i64 %_19.1, i64* %39, align 8, !dbg !1689
  ret void, !dbg !1690
}

; core::slice::<impl [T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h9d58ef0a71d56975E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1691 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1695, metadata !DIExpression()), !dbg !1696
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { [0 x i8]*, i64 }*, !dbg !1697
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !1697
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8, !dbg !1697
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !1697
  store i64 %self.1, i64* %4, align 8, !dbg !1697
  %5 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { i8*, i64 }*, !dbg !1697
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !1697
  %7 = load i64, i64* %6, align 8, !dbg !1697
  ret i64 %7, !dbg !1698
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h4aacd776e8fe9725E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1699 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1703, metadata !DIExpression()), !dbg !1704
; call core::slice::iter::Iter<T>::new
  %2 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17haeedc00e2d6d278cE"([0 x i8]* align 1 %self.0, i64 %self.1), !dbg !1705
  %3 = extractvalue { i8*, i8* } %2, 0, !dbg !1705
  %4 = extractvalue { i8*, i8* } %2, 1, !dbg !1705
  br label %bb1, !dbg !1705

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i8* } undef, i8* %3, 0, !dbg !1706
  %6 = insertvalue { i8*, i8* } %5, i8* %4, 1, !dbg !1706
  ret { i8*, i8* } %6, !dbg !1706
}

; core::slice::<impl [T]>::is_empty
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hdfd8f1d2de4b48ecE"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1707 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1711, metadata !DIExpression()), !dbg !1712
  %2 = icmp eq i64 %self.1, 0, !dbg !1713
  ret i1 %2, !dbg !1714
}

; core::slice::<impl [T]>::split_at
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8split_at17h6a8dc46ce288b406E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %0, [0 x i8]* align 1 %self.0, i64 %self.1, i64 %mid, %"core::panic::location::Location"* align 8 %1) unnamed_addr #0 !dbg !1715 {
start:
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1719, metadata !DIExpression()), !dbg !1721
  store i64 %mid, i64* %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %mid.dbg.spill, metadata !1720, metadata !DIExpression()), !dbg !1722
  %_4 = icmp ule i64 %mid, %self.1, !dbg !1723
  %_3 = xor i1 %_4, true, !dbg !1724
  br i1 %_3, label %bb1, label %bb2, !dbg !1724

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::split_at_unchecked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$18split_at_unchecked17h5a8b7e7a010699f3E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %0, [0 x i8]* align 1 %self.0, i64 %self.1, i64 %mid), !dbg !1725
  br label %bb3, !dbg !1725

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [35 x i8] }>* @alloc338 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 %1) #16, !dbg !1724
  unreachable, !dbg !1724

bb3:                                              ; preds = %bb2
  ret void, !dbg !1726
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17haeedc00e2d6d278cE"([0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !1727 {
start:
  %ptr.dbg.spill10 = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill9 = alloca i64, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %count.dbg.spill7 = alloca i64, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %1 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %2 = alloca {}*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_31 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_18 = alloca i8*, align 8
  %end = alloca i8*, align 8
  %3 = alloca { i8*, i8* }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !1730, metadata !DIExpression()), !dbg !1735
  call void @llvm.dbg.declare(metadata i8** %end, metadata !1733, metadata !DIExpression()), !dbg !1736
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !1737, metadata !DIExpression()), !dbg !1744
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !1757
  store [0 x i8]* %slice.0, [0 x i8]** %6, align 8, !dbg !1757
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !1757
  store i64 %slice.1, i64* %7, align 8, !dbg !1757
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1758, metadata !DIExpression()), !dbg !1764
  %ptr = bitcast [0 x i8]* %slice.0 to i8*, !dbg !1764
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !1764
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1731, metadata !DIExpression()), !dbg !1765
  store i8* %ptr, i8** %self.dbg.spill1, align 8, !dbg !1756
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !1754, metadata !DIExpression()), !dbg !1766
  store i8* %ptr, i8** %self.dbg.spill2, align 8, !dbg !1766
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !1767, metadata !DIExpression()), !dbg !1774
  %8 = bitcast {}** %2 to i64*, !dbg !1776
  store i64 0, i64* %8, align 8, !dbg !1776
  %data_address = load {}*, {}** %2, align 8, !dbg !1776
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !1776
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1743, metadata !DIExpression()), !dbg !1744
  br label %bb5, !dbg !1776

bb5:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to {}**, !dbg !1744
  store {}* %data_address, {}** %9, align 8, !dbg !1744
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !1744
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !1744
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to i8*, !dbg !1744
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !1744
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to i8**, !dbg !1744
  %other = load i8*, i8** %13, align 8, !dbg !1744
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !1744
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !1773, metadata !DIExpression()), !dbg !1774
  %14 = icmp eq i8* %ptr, %other, !dbg !1774
  %15 = zext i1 %14 to i8, !dbg !1774
  store i8 %15, i8* %1, align 1, !dbg !1774
  %16 = load i8, i8* %1, align 1, !dbg !1774, !range !394, !noundef !19
  %_6 = trunc i8 %16 to i1, !dbg !1774
  br label %bb6, !dbg !1774

bb6:                                              ; preds = %bb5
  %_5 = xor i1 %_6, true, !dbg !1784
  call void @llvm.assume(i1 %_5), !dbg !1785
  br label %bb1, !dbg !1785

bb1:                                              ; preds = %bb6
  br i1 false, label %bb2, label %bb3, !dbg !1786

bb2:                                              ; preds = %bb1
  store i8* %ptr, i8** %self.dbg.spill6, align 8, !dbg !1787
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !1788, metadata !DIExpression()), !dbg !1793
  store i64 %slice.1, i64* %count.dbg.spill7, align 8, !dbg !1794
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill7, metadata !1792, metadata !DIExpression()), !dbg !1793
  store i8* %ptr, i8** %self.dbg.spill8, align 8, !dbg !1793
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !1795, metadata !DIExpression()), !dbg !1800
  store i64 %slice.1, i64* %count.dbg.spill9, align 8, !dbg !1793
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill9, metadata !1799, metadata !DIExpression()), !dbg !1800
  %17 = getelementptr i8, i8* %ptr, i64 %slice.1, !dbg !1800
  store i8* %17, i8** %0, align 8, !dbg !1800
  %_10 = load i8*, i8** %0, align 8, !dbg !1800
  br label %bb7, !dbg !1800

bb3:                                              ; preds = %bb1
  store i8* %ptr, i8** %self.dbg.spill3, align 8, !dbg !1802
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !1803, metadata !DIExpression()), !dbg !1808
  store i64 %slice.1, i64* %count.dbg.spill, align 8, !dbg !1809
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !1807, metadata !DIExpression()), !dbg !1808
  store i8* %ptr, i8** %self.dbg.spill4, align 8, !dbg !1808
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !1810, metadata !DIExpression()), !dbg !1815
  store i64 %slice.1, i64* %count.dbg.spill5, align 8, !dbg !1808
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !1814, metadata !DIExpression()), !dbg !1815
  %18 = getelementptr inbounds i8, i8* %ptr, i64 %slice.1, !dbg !1815
  store i8* %18, i8** %end, align 8, !dbg !1815
  br label %bb8, !dbg !1815

bb8:                                              ; preds = %bb3
  br label %bb4, !dbg !1817

bb4:                                              ; preds = %bb7, %bb8
  store i8* %ptr, i8** %ptr.dbg.spill10, align 8, !dbg !1818
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill10, metadata !1819, metadata !DIExpression()), !dbg !1823
  store i8* %ptr, i8** %_18, align 8, !dbg !1823
  %_21 = load i8*, i8** %end, align 8, !dbg !1825
  %19 = bitcast { i8*, i8* }* %3 to i8**, !dbg !1826
  %20 = load i8*, i8** %_18, align 8, !dbg !1826, !nonnull !19, !noundef !19
  store i8* %20, i8** %19, align 8, !dbg !1826
  %21 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 1, !dbg !1826
  store i8* %_21, i8** %21, align 8, !dbg !1826
  %22 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 0, !dbg !1827
  %23 = load i8*, i8** %22, align 8, !dbg !1827, !nonnull !19, !noundef !19
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 1, !dbg !1827
  %25 = load i8*, i8** %24, align 8, !dbg !1827
  %26 = insertvalue { i8*, i8* } undef, i8* %23, 0, !dbg !1827
  %27 = insertvalue { i8*, i8* } %26, i8* %25, 1, !dbg !1827
  ret { i8*, i8* } %27, !dbg !1827

bb7:                                              ; preds = %bb2
  store i8* %_10, i8** %end, align 8, !dbg !1787
  br label %bb4, !dbg !1817
}

; core::slice::iter::Iter<T>::as_slice
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hc742c99cd5f50b44E"({ i8*, i8* }* align 8 %self) unnamed_addr #1 !dbg !1828 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill15 = alloca i8*, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill14 = alloca i8*, align 8
  %self.dbg.spill13 = alloca i8*, align 8
  %self.dbg.spill12 = alloca i64, align 8
  %1 = alloca i64, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %diff.dbg.spill = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { i8*, i8* }*, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_42 = alloca { i8*, i64 }, align 8
  %_41 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %len = alloca i64, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !1833, metadata !DIExpression()), !dbg !1834
  call void @llvm.dbg.declare(metadata i64* %len, metadata !1835, metadata !DIExpression()), !dbg !1853
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill1, align 8, !dbg !1869
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill1, metadata !1858, metadata !DIExpression()), !dbg !1870
  %5 = bitcast { i8*, i8* }* %self to i8**, !dbg !1870
  %self2 = load i8*, i8** %5, align 8, !dbg !1870, !nonnull !19, !noundef !19
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !1870
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !1871, metadata !DIExpression()), !dbg !1875
  store i8* %self2, i8** %data.dbg.spill, align 8, !dbg !1870
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !1843, metadata !DIExpression()), !dbg !1853
  %6 = bitcast { i8*, i8* }* %self to i8**, !dbg !1870
  %start4 = load i8*, i8** %6, align 8, !dbg !1870, !nonnull !19, !noundef !19
  store i8* %start4, i8** %start.dbg.spill, align 8, !dbg !1870
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !1860, metadata !DIExpression()), !dbg !1877
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !1878
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !1863, metadata !DIExpression()), !dbg !1886
  br i1 false, label %bb1, label %bb2, !dbg !1886

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !1886
  %self9 = load i8*, i8** %7, align 8, !dbg !1886
  store i8* %self9, i8** %self.dbg.spill10, align 8, !dbg !1886
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !1887, metadata !DIExpression()), !dbg !1891
  %8 = bitcast i64* %1 to i8**, !dbg !1891
  store i8* %self9, i8** %8, align 8, !dbg !1891
  %self11 = load i64, i64* %1, align 8, !dbg !1891
  store i64 %self11, i64* %self.dbg.spill12, align 8, !dbg !1891
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill12, metadata !1893, metadata !DIExpression()), !dbg !1898
  br label %bb6, !dbg !1891

bb2:                                              ; preds = %start
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !1886
  %self5 = load i8*, i8** %9, align 8, !dbg !1886
  store i8* %self5, i8** %self.dbg.spill6, align 8, !dbg !1886
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !1899, metadata !DIExpression()), !dbg !1903
  %10 = bitcast i64* %4 to i8**, !dbg !1903
  store i8* %self5, i8** %10, align 8, !dbg !1903
  %_17 = load i64, i64* %4, align 8, !dbg !1903
  br label %bb8, !dbg !1903

bb8:                                              ; preds = %bb2
  store i8* %start4, i8** %self.dbg.spill7, align 8, !dbg !1886
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !1905, metadata !DIExpression()), !dbg !1909
  store i8* %start4, i8** %self.dbg.spill8, align 8, !dbg !1909
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !1911, metadata !DIExpression()), !dbg !1917
  %11 = bitcast i64* %3 to i8**, !dbg !1917
  store i8* %start4, i8** %11, align 8, !dbg !1917
  %_19 = load i64, i64* %3, align 8, !dbg !1917
  br label %bb9, !dbg !1917

bb9:                                              ; preds = %bb8
  %12 = sub nuw i64 %_17, %_19, !dbg !1886
  store i64 %12, i64* %2, align 8, !dbg !1886
  %diff = load i64, i64* %2, align 8, !dbg !1886
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !1886
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !1866, metadata !DIExpression()), !dbg !1918
  br label %bb3, !dbg !1886

bb3:                                              ; preds = %bb9
  %13 = udiv exact i64 %diff, 1, !dbg !1918
  store i64 %13, i64* %len, align 8, !dbg !1918
  br label %bb4, !dbg !1918

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !1886

bb5:                                              ; preds = %bb7, %bb4
  store i8* %self2, i8** %data.dbg.spill15, align 8, !dbg !1853
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill15, metadata !1919, metadata !DIExpression()), !dbg !1924
  %len16 = load i64, i64* %len, align 8, !dbg !1853
  store i64 %len16, i64* %len.dbg.spill, align 8, !dbg !1853
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !1923, metadata !DIExpression()), !dbg !1924
  store i8* %self2, i8** %self.dbg.spill17, align 8, !dbg !1924
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !1926, metadata !DIExpression()), !dbg !1930
  %data_address = bitcast i8* %self2 to {}*, !dbg !1930
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !1930
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1932, metadata !DIExpression()), !dbg !1937
  store i64 %len16, i64* %metadata.dbg.spill, align 8, !dbg !1924
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !1936, metadata !DIExpression()), !dbg !1937
  %14 = bitcast { i8*, i64 }* %_42 to {}**, !dbg !1937
  store {}* %data_address, {}** %14, align 8, !dbg !1937
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_42, i32 0, i32 1, !dbg !1937
  store i64 %len16, i64* %15, align 8, !dbg !1937
  %16 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_41 to { i8*, i64 }*, !dbg !1937
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_42, i32 0, i32 0, !dbg !1937
  %18 = load i8*, i8** %17, align 8, !dbg !1937
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_42, i32 0, i32 1, !dbg !1937
  %20 = load i64, i64* %19, align 8, !dbg !1937
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %16, i32 0, i32 0, !dbg !1937
  store i8* %18, i8** %21, align 8, !dbg !1937
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %16, i32 0, i32 1, !dbg !1937
  store i64 %20, i64* %22, align 8, !dbg !1937
  %23 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_41 to { [0 x i8]*, i64 }*, !dbg !1937
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 0, !dbg !1937
  %_34.0 = load [0 x i8]*, [0 x i8]** %24, align 8, !dbg !1937
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 1, !dbg !1937
  %_34.1 = load i64, i64* %25, align 8, !dbg !1937
  %26 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_34.0, 0, !dbg !1939
  %27 = insertvalue { [0 x i8]*, i64 } %26, i64 %_34.1, 1, !dbg !1939
  ret { [0 x i8]*, i64 } %27, !dbg !1939

bb6:                                              ; preds = %bb1
  store i8* %start4, i8** %self.dbg.spill13, align 8, !dbg !1886
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill13, metadata !1940, metadata !DIExpression()), !dbg !1944
  store i8* %start4, i8** %self.dbg.spill14, align 8, !dbg !1944
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill14, metadata !1946, metadata !DIExpression()), !dbg !1950
  %28 = bitcast i64* %0 to i8**, !dbg !1950
  store i8* %start4, i8** %28, align 8, !dbg !1950
  %rhs = load i64, i64* %0, align 8, !dbg !1950
  store i64 %rhs, i64* %rhs.dbg.spill, align 8, !dbg !1950
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !1897, metadata !DIExpression()), !dbg !1898
  br label %bb7, !dbg !1950

bb7:                                              ; preds = %bb6
  %29 = sub i64 %self11, %rhs, !dbg !1898
  store i64 %29, i64* %len, align 8, !dbg !1898
  br label %bb5, !dbg !1886
}

; core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
; Function Attrs: nonlazybind uwtable
define { i8*, i8* } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h673ba194fd678fa9E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !1951 {
start:
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1954, metadata !DIExpression()), !dbg !1955
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !1956
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8, !dbg !1956
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !1956
  store i64 %self.1, i64* %3, align 8, !dbg !1956
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !1957, metadata !DIExpression()), !dbg !1961
; call core::slice::iter::Iter<T>::new
  %4 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17haeedc00e2d6d278cE"([0 x i8]* align 1 %self.0, i64 %self.1), !dbg !1961
  %5 = extractvalue { i8*, i8* } %4, 0, !dbg !1961
  %6 = extractvalue { i8*, i8* } %4, 1, !dbg !1961
  br label %bb1, !dbg !1961

bb1:                                              ; preds = %start
  %7 = insertvalue { i8*, i8* } undef, i8* %5, 0, !dbg !1962
  %8 = insertvalue { i8*, i8* } %7, i8* %6, 1, !dbg !1962
  ret { i8*, i8* } %8, !dbg !1962
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h5d7184cc4ed0a15fE"([0 x i8]* align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !1963 {
start:
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1968, metadata !DIExpression()), !dbg !1970
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill, metadata !1969, metadata !DIExpression()), !dbg !1971
; call <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index
  %3 = call { [0 x i8]*, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hb10d86222b139743E"([0 x i8]* align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0), !dbg !1972
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !1972
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !1972
  br label %bb1, !dbg !1972

bb1:                                              ; preds = %start
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0, !dbg !1973
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1, !dbg !1973
  ret { [0 x i8]*, i64 } %7, !dbg !1973
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$3map17h53bfbfe835d9c253E"(%"core::option::Option<alloc::string::String>"* sret(%"core::option::Option<alloc::string::String>") %0, %"core::option::Option<alloc::vec::Vec<u8>>"* %self) unnamed_addr #0 !dbg !1974 {
start:
  %f.dbg.spill = alloca %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0/src/lib.rs:69:27: 69:38]", align 1
  %_9 = alloca i8, align 1
  %_8 = alloca %"alloc::vec::Vec<u8>", align 8
  %_7 = alloca { %"alloc::vec::Vec<u8>" }, align 8
  %_5 = alloca %"alloc::string::String", align 8
  %x = alloca %"alloc::vec::Vec<u8>", align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::vec::Vec<u8>>"* %self, metadata !1981, metadata !DIExpression()), !dbg !1988
  call void @llvm.dbg.declare(metadata %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0/src/lib.rs:69:27: 69:38]"* %f.dbg.spill, metadata !1982, metadata !DIExpression()), !dbg !1989
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %x, metadata !1983, metadata !DIExpression()), !dbg !1990
  store i8 1, i8* %_9, align 1, !dbg !1991
  %1 = bitcast %"core::option::Option<alloc::vec::Vec<u8>>"* %self to {}**, !dbg !1991
  %2 = load {}*, {}** %1, align 8, !dbg !1991
  %3 = icmp eq {}* %2, null, !dbg !1991
  %_3 = select i1 %3, i64 0, i64 1, !dbg !1991
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !1992

bb2:                                              ; preds = %start
  unreachable, !dbg !1991

bb1:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<alloc::string::String>"* %0 to {}**, !dbg !1993
  store {}* null, {}** %4, align 8, !dbg !1993
  br label %bb7, !dbg !1993

bb3:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<alloc::vec::Vec<u8>>"* %self to %"core::option::Option<alloc::vec::Vec<u8>>::Some"*, !dbg !1994
  %6 = bitcast %"core::option::Option<alloc::vec::Vec<u8>>::Some"* %5 to %"alloc::vec::Vec<u8>"*, !dbg !1994
  %7 = bitcast %"alloc::vec::Vec<u8>"* %x to i8*, !dbg !1994
  %8 = bitcast %"alloc::vec::Vec<u8>"* %6 to i8*, !dbg !1994
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !1994
  store i8 0, i8* %_9, align 1, !dbg !1995
  %9 = bitcast %"alloc::vec::Vec<u8>"* %_8 to i8*, !dbg !1996
  %10 = bitcast %"alloc::vec::Vec<u8>"* %x to i8*, !dbg !1996
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !1996
  %11 = bitcast { %"alloc::vec::Vec<u8>" }* %_7 to %"alloc::vec::Vec<u8>"*, !dbg !1995
  %12 = bitcast %"alloc::vec::Vec<u8>"* %11 to i8*, !dbg !1995
  %13 = bitcast %"alloc::vec::Vec<u8>"* %_8 to i8*, !dbg !1995
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !1995
  %14 = bitcast { %"alloc::vec::Vec<u8>" }* %_7 to %"alloc::vec::Vec<u8>"*, !dbg !1995
; call <shlex::Shlex as core::iter::traits::iterator::Iterator>::next::{{closure}}
  call void @"_ZN71_$LT$shlex..Shlex$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hf4992ab11c7d8383E"(%"alloc::string::String"* sret(%"alloc::string::String") %_5, %"alloc::vec::Vec<u8>"* %14), !dbg !1995
  br label %bb4, !dbg !1995

bb4:                                              ; preds = %bb3
  %15 = bitcast %"core::option::Option<alloc::string::String>"* %0 to %"core::option::Option<alloc::string::String>::Some"*, !dbg !1997
  %16 = bitcast %"core::option::Option<alloc::string::String>::Some"* %15 to %"alloc::string::String"*, !dbg !1997
  %17 = bitcast %"alloc::string::String"* %16 to i8*, !dbg !1997
  %18 = bitcast %"alloc::string::String"* %_5 to i8*, !dbg !1997
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false), !dbg !1997
  br label %bb7, !dbg !1998

bb7:                                              ; preds = %bb1, %bb4
  %19 = load i8, i8* %_9, align 1, !dbg !1999, !range !394, !noundef !19
  %20 = trunc i8 %19 to i1, !dbg !1999
  br i1 %20, label %bb6, label %bb5, !dbg !1999

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !2000

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !1999
}

; core::option::Option<&T>::copied
; Function Attrs: nonlazybind uwtable
define { i8, i8 } @"_ZN4core6option19Option$LT$$RF$T$GT$6copied17ha9fbd977121fc3d6E"(i8* align 1 %0) unnamed_addr #1 !dbg !2001 {
start:
  %v.dbg.spill = alloca i8, align 1
  %1 = alloca { i8, i8 }, align 1
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  call void @llvm.dbg.declare(metadata i8** %self, metadata !2027, metadata !DIExpression()), !dbg !2030
  %2 = bitcast i8** %self to {}**, !dbg !2031
  %3 = load {}*, {}** %2, align 8, !dbg !2031
  %4 = icmp eq {}* %3, null, !dbg !2031
  %_2 = select i1 %4, i64 0, i64 1, !dbg !2031
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2032

bb2:                                              ; preds = %start
  unreachable, !dbg !2031

bb1:                                              ; preds = %start
  %5 = bitcast { i8, i8 }* %1 to i8*, !dbg !2033
  store i8 0, i8* %5, align 1, !dbg !2033
  br label %bb4, !dbg !2033

bb3:                                              ; preds = %start
  %_5 = load i8*, i8** %self, align 8, !dbg !2034, !nonnull !19, !align !826, !noundef !19
  %v = load i8, i8* %_5, align 1, !dbg !2034
  store i8 %v, i8* %v.dbg.spill, align 1, !dbg !2034
  call void @llvm.dbg.declare(metadata i8* %v.dbg.spill, metadata !2028, metadata !DIExpression()), !dbg !2035
  %6 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %1, i32 0, i32 1, !dbg !2036
  store i8 %v, i8* %6, align 1, !dbg !2036
  %7 = bitcast { i8, i8 }* %1 to i8*, !dbg !2036
  store i8 1, i8* %7, align 1, !dbg !2036
  br label %bb4, !dbg !2037

bb4:                                              ; preds = %bb1, %bb3
  %8 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %1, i32 0, i32 0, !dbg !2038
  %9 = load i8, i8* %8, align 1, !dbg !2038, !range !394, !noundef !19
  %10 = trunc i8 %9 to i1, !dbg !2038
  %11 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %1, i32 0, i32 1, !dbg !2038
  %12 = load i8, i8* %11, align 1, !dbg !2038
  %13 = zext i1 %10 to i8, !dbg !2038
  %14 = insertvalue { i8, i8 } undef, i8 %13, 0, !dbg !2038
  %15 = insertvalue { i8, i8 } %14, i8 %12, 1, !dbg !2038
  ret { i8, i8 } %15, !dbg !2038
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h24a86ad913b8503bE"(%"alloc::borrow::Cow<[u8]>"* sret(%"alloc::borrow::Cow<[u8]>") %t, %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>"* %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2039 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca %"QuoteError::Nul", align 1
  call void @llvm.dbg.declare(metadata %"alloc::borrow::Cow<[u8]>"* %t, metadata !2072, metadata !DIExpression()), !dbg !2076
  call void @llvm.dbg.declare(metadata %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>"* %self, metadata !2071, metadata !DIExpression()), !dbg !2077
  call void @llvm.dbg.declare(metadata %"QuoteError::Nul"* %e, metadata !2074, metadata !DIExpression()), !dbg !2078
  %2 = bitcast %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>"* %self to i64*, !dbg !2079
  %3 = load i64, i64* %2, align 8, !dbg !2079, !range !2080, !noundef !19
  %4 = sub i64 %3, 2, !dbg !2079
  %5 = icmp eq i64 %4, 0, !dbg !2079
  %_2 = select i1 %5, i64 1, i64 0, !dbg !2079
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2081

bb2:                                              ; preds = %start
  unreachable, !dbg !2079

bb3:                                              ; preds = %start
  %6 = bitcast %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>"* %self to %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>::Ok"*, !dbg !2082
  %7 = bitcast %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>::Ok"* %6 to %"alloc::borrow::Cow<[u8]>"*, !dbg !2082
  %8 = bitcast %"alloc::borrow::Cow<[u8]>"* %t to i8*, !dbg !2082
  %9 = bitcast %"alloc::borrow::Cow<[u8]>"* %7 to i8*, !dbg !2082
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false), !dbg !2082
  ret void, !dbg !2083

bb1:                                              ; preds = %start
  %_7.0 = bitcast %"QuoteError::Nul"* %e to {}*, !dbg !2084
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hff48f82f03d418aeE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc343 to [0 x i8]*), i64 43, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.0 to [3 x i64]*), %"core::panic::location::Location"* align 8 %0) #16
          to label %unreachable unwind label %cleanup, !dbg !2085

bb4:                                              ; preds = %cleanup
  br label %bb5, !dbg !2086

cleanup:                                          ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb4
  %15 = bitcast { i8*, i32 }* %1 to i8**, !dbg !2087
  %16 = load i8*, i8** %15, align 8, !dbg !2087
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !2087
  %18 = load i32, i32* %17, align 8, !dbg !2087
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0, !dbg !2087
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1, !dbg !2087
  resume { i8*, i32 } %20, !dbg !2087
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h52fdcc2fb596ca3cE"(%"alloc::borrow::Cow<str>"* sret(%"alloc::borrow::Cow<str>") %t, %"core::result::Result<alloc::borrow::Cow<str>, QuoteError>"* %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2088 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca %"QuoteError::Nul", align 1
  call void @llvm.dbg.declare(metadata %"alloc::borrow::Cow<str>"* %t, metadata !2093, metadata !DIExpression()), !dbg !2097
  call void @llvm.dbg.declare(metadata %"core::result::Result<alloc::borrow::Cow<str>, QuoteError>"* %self, metadata !2092, metadata !DIExpression()), !dbg !2098
  call void @llvm.dbg.declare(metadata %"QuoteError::Nul"* %e, metadata !2095, metadata !DIExpression()), !dbg !2099
  %2 = bitcast %"core::result::Result<alloc::borrow::Cow<str>, QuoteError>"* %self to i64*, !dbg !2100
  %3 = load i64, i64* %2, align 8, !dbg !2100, !range !2080, !noundef !19
  %4 = sub i64 %3, 2, !dbg !2100
  %5 = icmp eq i64 %4, 0, !dbg !2100
  %_2 = select i1 %5, i64 1, i64 0, !dbg !2100
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2101

bb2:                                              ; preds = %start
  unreachable, !dbg !2100

bb3:                                              ; preds = %start
  %6 = bitcast %"core::result::Result<alloc::borrow::Cow<str>, QuoteError>"* %self to %"core::result::Result<alloc::borrow::Cow<str>, QuoteError>::Ok"*, !dbg !2102
  %7 = bitcast %"core::result::Result<alloc::borrow::Cow<str>, QuoteError>::Ok"* %6 to %"alloc::borrow::Cow<str>"*, !dbg !2102
  %8 = bitcast %"alloc::borrow::Cow<str>"* %t to i8*, !dbg !2102
  %9 = bitcast %"alloc::borrow::Cow<str>"* %7 to i8*, !dbg !2102
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false), !dbg !2102
  ret void, !dbg !2103

bb1:                                              ; preds = %start
  %_7.0 = bitcast %"QuoteError::Nul"* %e to {}*, !dbg !2104
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hff48f82f03d418aeE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc343 to [0 x i8]*), i64 43, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.0 to [3 x i64]*), %"core::panic::location::Location"* align 8 %0) #16
          to label %unreachable unwind label %cleanup, !dbg !2105

bb4:                                              ; preds = %cleanup
  br label %bb5, !dbg !2106

cleanup:                                          ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb4
  %15 = bitcast { i8*, i32 }* %1 to i8**, !dbg !2107
  %16 = load i8*, i8** %15, align 8, !dbg !2107
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !2107
  %18 = load i32, i32* %17, align 8, !dbg !2107
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0, !dbg !2107
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1, !dbg !2107
  resume { i8*, i32 } %20, !dbg !2107
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h3901e85ad527814eE"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i8* %1, i64 %2, i64* align 8 %op) unnamed_addr #0 !dbg !2108 {
start:
  %t.dbg.spill = alloca { i8*, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %op.dbg.spill = alloca i64*, align 8
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::AllocError" }, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !2152, metadata !DIExpression()), !dbg !2161
  store i64* %op, i64** %op.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %op.dbg.spill, metadata !2153, metadata !DIExpression()), !dbg !2162
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !2156, metadata !DIExpression()), !dbg !2163
  store i8 1, i8* %_11, align 1, !dbg !2164
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !2164
  %6 = load {}*, {}** %5, align 8, !dbg !2164
  %7 = icmp eq {}* %6, null, !dbg !2164
  %_3 = select i1 %7, i64 1, i64 0, !dbg !2164
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2165

bb2:                                              ; preds = %start
  unreachable, !dbg !2164

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0, !dbg !2166
  %t.0 = load i8*, i8** %8, align 8, !dbg !2166, !nonnull !19, !noundef !19
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !2166
  %t.1 = load i64, i64* %9, align 8, !dbg !2166
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !2166
  store i8* %t.0, i8** %10, align 8, !dbg !2166
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !2166
  store i64 %t.1, i64* %11, align 8, !dbg !2166
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %t.dbg.spill, metadata !2154, metadata !DIExpression()), !dbg !2167
  %12 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*, !dbg !2168
  %13 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %12, i32 0, i32 1, !dbg !2168
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 0, !dbg !2168
  store i8* %t.0, i8** %14, align 8, !dbg !2168
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 1, !dbg !2168
  store i64 %t.1, i64* %15, align 8, !dbg !2168
  %16 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !2168
  store i64 0, i64* %16, align 8, !dbg !2168
  br label %bb7, !dbg !2169

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !2170
  %17 = bitcast { %"core::alloc::AllocError" }* %_9 to %"core::alloc::AllocError"*, !dbg !2170
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17he0a883c58d680d64E"(i64* align 8 %op), !dbg !2170
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !2170
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !2170
  br label %bb4, !dbg !2170

bb4:                                              ; preds = %bb1
  %19 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !2171
  %20 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %19, i32 0, i32 1, !dbg !2171
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !2171
  store i64 %_7.0, i64* %21, align 8, !dbg !2171
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !2171
  store i64 %_7.1, i64* %22, align 8, !dbg !2171
  %23 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !2171
  store i64 1, i64* %23, align 8, !dbg !2171
  br label %bb7, !dbg !2172

bb7:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !2173, !range !394, !noundef !19
  %25 = trunc i8 %24 to i1, !dbg !2173
  br i1 %25, label %bb6, label %bb5, !dbg !2173

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !2174

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !2173
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha550cd7b6afb3594E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !2175 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca {}, align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2210, metadata !DIExpression()), !dbg !2219
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %op.dbg.spill, metadata !2211, metadata !DIExpression()), !dbg !2220
  call void @llvm.dbg.declare(metadata {}* %t.dbg.spill, metadata !2212, metadata !DIExpression()), !dbg !2221
  store i8 1, i8* %_11, align 1, !dbg !2222
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2222
  %6 = load i64, i64* %5, align 8, !dbg !2222, !range !2223, !noundef !19
  %7 = sub i64 %6, -9223372036854775807, !dbg !2222
  %8 = icmp eq i64 %7, 0, !dbg !2222
  %_3 = select i1 %8, i64 0, i64 1, !dbg !2222
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2224

bb2:                                              ; preds = %start
  unreachable, !dbg !2222

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %2 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !2225
  %10 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"* %9 to {}*, !dbg !2225
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !2225
  store i64 -9223372036854775807, i64* %11, align 8, !dbg !2225
  br label %bb7, !dbg !2226

bb1:                                              ; preds = %start
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !2227
  %e.0 = load i64, i64* %12, align 8, !dbg !2227
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2227
  %e.1 = load i64, i64* %13, align 8, !dbg !2227, !range !649, !noundef !19
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !2227
  store i64 %e.0, i64* %14, align 8, !dbg !2227
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !2227
  store i64 %e.1, i64* %15, align 8, !dbg !2227
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !2214, metadata !DIExpression()), !dbg !2228
  store i8 0, i8* %_11, align 1, !dbg !2229
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !2229
  store i64 %e.0, i64* %16, align 8, !dbg !2229
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !2229
  store i64 %e.1, i64* %17, align 8, !dbg !2229
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !2229
  %19 = load i64, i64* %18, align 8, !dbg !2229
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !2229
  %21 = load i64, i64* %20, align 8, !dbg !2229, !range !649, !noundef !19
; call alloc::raw_vec::handle_reserve::{{closure}}
  %22 = call { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17haae58e62989b1474E"(i64 %19, i64 %21), !dbg !2229
  %_7.0 = extractvalue { i64, i64 } %22, 0, !dbg !2229
  %_7.1 = extractvalue { i64, i64 } %22, 1, !dbg !2229
  br label %bb4, !dbg !2229

bb4:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !2230
  store i64 %_7.0, i64* %23, align 8, !dbg !2230
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !2230
  store i64 %_7.1, i64* %24, align 8, !dbg !2230
  br label %bb7, !dbg !2231

bb7:                                              ; preds = %bb3, %bb4
  %25 = load i8, i8* %_11, align 1, !dbg !2232, !range !394, !noundef !19
  %26 = trunc i8 %25 to i1, !dbg !2232
  br i1 %26, label %bb6, label %bb5, !dbg !2232

bb5:                                              ; preds = %bb6, %bb7
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !2233
  %28 = load i64, i64* %27, align 8, !dbg !2233
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !2233
  %30 = load i64, i64* %29, align 8, !dbg !2233, !range !2223, !noundef !19
  %31 = insertvalue { i64, i64 } undef, i64 %28, 0, !dbg !2233
  %32 = insertvalue { i64, i64 } %31, i64 %30, 1, !dbg !2233
  ret { i64, i64 } %32, !dbg !2233

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !2232
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hdcb1b1e7211b2039E"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !2234 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::layout::LayoutError" }, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2253, metadata !DIExpression()), !dbg !2261
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]"* %op.dbg.spill, metadata !2254, metadata !DIExpression()), !dbg !2262
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !2257, metadata !DIExpression()), !dbg !2263
  store i8 1, i8* %_11, align 1, !dbg !2264
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2264
  %6 = load i64, i64* %5, align 8, !dbg !2264, !range !649, !noundef !19
  %7 = icmp eq i64 %6, 0, !dbg !2264
  %_3 = select i1 %7, i64 1, i64 0, !dbg !2264
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2265

bb2:                                              ; preds = %start
  unreachable, !dbg !2264

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !2266
  %t.0 = load i64, i64* %8, align 8, !dbg !2266
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2266
  %t.1 = load i64, i64* %9, align 8, !dbg !2266, !range !1308, !noundef !19
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !2266
  store i64 %t.0, i64* %10, align 8, !dbg !2266
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !2266
  store i64 %t.1, i64* %11, align 8, !dbg !2266
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !2255, metadata !DIExpression()), !dbg !2267
  %12 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !2268
  %13 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %12, i32 0, i32 1, !dbg !2268
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !2268
  store i64 %t.0, i64* %14, align 8, !dbg !2268
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !2268
  store i64 %t.1, i64* %15, align 8, !dbg !2268
  %16 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2268
  store i64 0, i64* %16, align 8, !dbg !2268
  br label %bb7, !dbg !2269

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !2270
  %17 = bitcast { %"core::alloc::layout::LayoutError" }* %_9 to %"core::alloc::layout::LayoutError"*, !dbg !2270
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h97a170dbd3a498e1E"(), !dbg !2270
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !2270
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !2270
  br label %bb4, !dbg !2270

bb4:                                              ; preds = %bb1
  %19 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !2271
  %20 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %19, i32 0, i32 1, !dbg !2271
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !2271
  store i64 %_7.0, i64* %21, align 8, !dbg !2271
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !2271
  store i64 %_7.1, i64* %22, align 8, !dbg !2271
  %23 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2271
  store i64 1, i64* %23, align 8, !dbg !2271
  br label %bb7, !dbg !2272

bb7:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !2273, !range !394, !noundef !19
  %25 = trunc i8 %24 to i1, !dbg !2273
  br i1 %25, label %bb6, label %bb5, !dbg !2273

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !2274

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !2273
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2fbee86a55f307ceE"() unnamed_addr #1 !dbg !2275 {
start:
  %t.dbg.spill = alloca %"core::alloc::AllocError", align 1
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %t.dbg.spill, metadata !2281, metadata !DIExpression()), !dbg !2284
  ret void, !dbg !2285
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h53d72257060e3473E"() unnamed_addr #1 !dbg !2286 {
start:
  %t.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %t.dbg.spill, metadata !2290, metadata !DIExpression()), !dbg !2293
  ret void, !dbg !2294
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha098773fc34e53f9E"(i64 %t.0, i64 %t.1) unnamed_addr #1 !dbg !2295 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0
  store i64 %t.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1
  store i64 %t.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !2299, metadata !DIExpression()), !dbg !2302
  %2 = insertvalue { i64, i64 } undef, i64 %t.0, 0, !dbg !2303
  %3 = insertvalue { i64, i64 } %2, i64 %t.1, 1, !dbg !2303
  ret { i64, i64 } %3, !dbg !2303
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha57a116830ea7e61E"() unnamed_addr #1 !dbg !2304 {
start:
  %t.dbg.spill = alloca %"QuoteError::Nul", align 1
  call void @llvm.dbg.declare(metadata %"QuoteError::Nul"* %t.dbg.spill, metadata !2308, metadata !DIExpression()), !dbg !2309
  ret void, !dbg !2310
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h2b90392b95753282E"(i8* %self) unnamed_addr #1 !dbg !2311 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2314, metadata !DIExpression()), !dbg !2318
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h2d3767c9df7a2bc5E"(i8* %self), !dbg !2319
  br label %bb1, !dbg !2319

bb1:                                              ; preds = %start
  ret i8* %0, !dbg !2320
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h70efd7bf57560094E"(%"alloc::borrow::Cow<str>"* sret(%"alloc::borrow::Cow<str>") %0, [0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !2321 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2325, metadata !DIExpression()), !dbg !2329
; call alloc::string::<impl core::convert::From<&str> for alloc::borrow::Cow<str>>::from
  call void @"_ZN5alloc6string94_$LT$impl$u20$core..convert..From$LT$$RF$str$GT$$u20$for$u20$alloc..borrow..Cow$LT$str$GT$$GT$4from17h95b3d82f164bc25bE"(%"alloc::borrow::Cow<str>"* sret(%"alloc::borrow::Cow<str>") %0, [0 x i8]* align 1 %self.0, i64 %self.1), !dbg !2330
  br label %bb1, !dbg !2330

bb1:                                              ; preds = %start
  ret void, !dbg !2331
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h7abf799581f2b754E"(%"alloc::borrow::Cow<[u8]>"* sret(%"alloc::borrow::Cow<[u8]>") %0, %"alloc::vec::Vec<u8>"* %self) unnamed_addr #1 !dbg !2332 {
start:
  %_2 = alloca %"alloc::vec::Vec<u8>", align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %self, metadata !2336, metadata !DIExpression()), !dbg !2339
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_2 to i8*, !dbg !2340
  %2 = bitcast %"alloc::vec::Vec<u8>"* %self to i8*, !dbg !2340
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !2340
; call alloc::vec::cow::<impl core::convert::From<alloc::vec::Vec<T>> for alloc::borrow::Cow<[T]>>::from
  call void @"_ZN5alloc3vec3cow119_$LT$impl$u20$core..convert..From$LT$alloc..vec..Vec$LT$T$GT$$GT$$u20$for$u20$alloc..borrow..Cow$LT$$u5b$T$u5d$$GT$$GT$4from17he4b14b6007cc4beaE"(%"alloc::borrow::Cow<[u8]>"* sret(%"alloc::borrow::Cow<[u8]>") %0, %"alloc::vec::Vec<u8>"* %_2), !dbg !2341
  br label %bb1, !dbg !2341

bb1:                                              ; preds = %start
  ret void, !dbg !2342
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h9f5b2bfd9c5e1a67E"(%"alloc::borrow::Cow<[u8]>"* sret(%"alloc::borrow::Cow<[u8]>") %0, [0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !2343 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2347, metadata !DIExpression()), !dbg !2350
; call alloc::vec::cow::<impl core::convert::From<&[T]> for alloc::borrow::Cow<[T]>>::from
  call void @"_ZN5alloc3vec3cow110_$LT$impl$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$alloc..borrow..Cow$LT$$u5b$T$u5d$$GT$$GT$4from17hb5c0b0b17f6bdda3E"(%"alloc::borrow::Cow<[u8]>"* sret(%"alloc::borrow::Cow<[u8]>") %0, [0 x i8]* align 1 %self.0, i64 %self.1), !dbg !2351
  br label %bb1, !dbg !2351

bb1:                                              ; preds = %start
  ret void, !dbg !2352
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbe9ccf7077ea30d7E"(i64 %self.0, i64 %self.1) unnamed_addr #1 !dbg !2353 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !2355, metadata !DIExpression()), !dbg !2359
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %2 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hd9b1e84b4e136ef5E"(i64 %self.0, i64 %self.1), !dbg !2360
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !2360
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !2360
  br label %bb1, !dbg !2360

bb1:                                              ; preds = %start
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !2361
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !2361
  ret { i64, i64 } %6, !dbg !2361
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17he05d00e77084f0ffE"(%"alloc::borrow::Cow<str>"* sret(%"alloc::borrow::Cow<str>") %0, %"alloc::string::String"* %self) unnamed_addr #1 !dbg !2362 {
start:
  %_2 = alloca %"alloc::string::String", align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %self, metadata !2366, metadata !DIExpression()), !dbg !2368
  %1 = bitcast %"alloc::string::String"* %_2 to i8*, !dbg !2369
  %2 = bitcast %"alloc::string::String"* %self to i8*, !dbg !2369
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !2369
; call alloc::string::<impl core::convert::From<alloc::string::String> for alloc::borrow::Cow<str>>::from
  call void @"_ZN5alloc6string108_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..borrow..Cow$LT$str$GT$$GT$4from17h14dc4de5d838698fE"(%"alloc::borrow::Cow<str>"* sret(%"alloc::borrow::Cow<str>") %0, %"alloc::string::String"* %_2), !dbg !2370
  br label %bb1, !dbg !2370

bb1:                                              ; preds = %start
  ret void, !dbg !2371
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hec81cd16a2af355aE"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0) unnamed_addr #0 !dbg !2372 {
start:
  %_1.0 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @1 to { i8*, i64 }*), i32 0, i32 0), align 8, !dbg !2375, !nonnull !19, !noundef !19
  %_1.1 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @1 to { i8*, i64 }*), i32 0, i32 1), align 8, !dbg !2375
  %1 = bitcast %"alloc::vec::Vec<u8>"* %0 to { i8*, i64 }*, !dbg !2376
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0, !dbg !2376
  store i8* %_1.0, i8** %2, align 8, !dbg !2376
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1, !dbg !2376
  store i64 %_1.1, i64* %3, align 8, !dbg !2376
  %4 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %0, i32 0, i32 1, !dbg !2376
  store i64 0, i64* %4, align 8, !dbg !2376
  ret void, !dbg !2377
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::vec::Vec<u8>"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1d53eb0dd4b79cbfE"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* align 8 %self) unnamed_addr #0 !dbg !2378 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill6 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %ptr.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca { i64*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<alloc::vec::Vec<u8>>"*, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %self, %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %self.dbg.spill, metadata !2382, metadata !DIExpression()), !dbg !2385
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !2386, metadata !DIExpression()), !dbg !2391
  %self1 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %self to { i64*, i64 }*, !dbg !2402
  store { i64*, i64 }* %self1, { i64*, i64 }** %self.dbg.spill2, align 8, !dbg !2402
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill2, metadata !2403, metadata !DIExpression()), !dbg !2410
  %2 = bitcast { i64*, i64 }* %self1 to i64**, !dbg !2410
  %self3 = load i64*, i64** %2, align 8, !dbg !2410, !nonnull !19, !noundef !19
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !2410
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !2411, metadata !DIExpression()), !dbg !2417
  store i64* %self3, i64** %self.dbg.spill5, align 8, !dbg !2417
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !2419, metadata !DIExpression()), !dbg !2425
  %_9 = bitcast i64* %self3 to %"alloc::vec::Vec<u8>"*, !dbg !2425
  store %"alloc::vec::Vec<u8>"* %_9, %"alloc::vec::Vec<u8>"** %ptr.dbg.spill, align 8, !dbg !2425
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %ptr.dbg.spill, metadata !2383, metadata !DIExpression()), !dbg !2427
  store %"alloc::vec::Vec<u8>"* %_9, %"alloc::vec::Vec<u8>"** %self.dbg.spill6, align 8, !dbg !2401
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill6, metadata !2399, metadata !DIExpression()), !dbg !2428
  %self7 = bitcast %"alloc::vec::Vec<u8>"* %_9 to i8*, !dbg !2428
  store i8* %self7, i8** %self.dbg.spill8, align 8, !dbg !2428
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !2429, metadata !DIExpression()), !dbg !2434
  %3 = bitcast {}** %1 to i64*, !dbg !2436
  store i64 0, i64* %3, align 8, !dbg !2436
  %data_address = load {}*, {}** %1, align 8, !dbg !2436
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !2436
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !2390, metadata !DIExpression()), !dbg !2391
  br label %bb2, !dbg !2436

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to {}**, !dbg !2391
  store {}* %data_address, {}** %4, align 8, !dbg !2391
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !2391
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !2391
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to i8*, !dbg !2391
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !2391
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to i8**, !dbg !2391
  %other = load i8*, i8** %8, align 8, !dbg !2391
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !2391
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !2433, metadata !DIExpression()), !dbg !2434
  %9 = icmp eq i8* %self7, %other, !dbg !2434
  %10 = zext i1 %9 to i8, !dbg !2434
  store i8 %10, i8* %0, align 1, !dbg !2434
  %11 = load i8, i8* %0, align 1, !dbg !2434, !range !394, !noundef !19
  %_5 = trunc i8 %11 to i1, !dbg !2434
  br label %bb3, !dbg !2434

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true, !dbg !2442
  call void @llvm.assume(i1 %_4), !dbg !2443
  br label %bb1, !dbg !2443

bb1:                                              ; preds = %bb3
  ret %"alloc::vec::Vec<u8>"* %_9, !dbg !2444
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::string::String"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h44fbfd7f7c84c396E"(%"alloc::vec::Vec<alloc::string::String>"* align 8 %self) unnamed_addr #0 !dbg !2445 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill6 = alloca %"alloc::string::String"*, align 8
  %ptr.dbg.spill = alloca %"alloc::string::String"*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca { i64*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<alloc::string::String>"*, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<alloc::string::String>"* %self, %"alloc::vec::Vec<alloc::string::String>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::string::String>"** %self.dbg.spill, metadata !2449, metadata !DIExpression()), !dbg !2452
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !2453, metadata !DIExpression()), !dbg !2458
  %self1 = bitcast %"alloc::vec::Vec<alloc::string::String>"* %self to { i64*, i64 }*, !dbg !2469
  store { i64*, i64 }* %self1, { i64*, i64 }** %self.dbg.spill2, align 8, !dbg !2469
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill2, metadata !2470, metadata !DIExpression()), !dbg !2477
  %2 = bitcast { i64*, i64 }* %self1 to i64**, !dbg !2477
  %self3 = load i64*, i64** %2, align 8, !dbg !2477, !nonnull !19, !noundef !19
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !2477
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !2478, metadata !DIExpression()), !dbg !2484
  store i64* %self3, i64** %self.dbg.spill5, align 8, !dbg !2484
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !2486, metadata !DIExpression()), !dbg !2492
  %_9 = bitcast i64* %self3 to %"alloc::string::String"*, !dbg !2492
  store %"alloc::string::String"* %_9, %"alloc::string::String"** %ptr.dbg.spill, align 8, !dbg !2492
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %ptr.dbg.spill, metadata !2450, metadata !DIExpression()), !dbg !2494
  store %"alloc::string::String"* %_9, %"alloc::string::String"** %self.dbg.spill6, align 8, !dbg !2468
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill6, metadata !2466, metadata !DIExpression()), !dbg !2495
  %self7 = bitcast %"alloc::string::String"* %_9 to i8*, !dbg !2495
  store i8* %self7, i8** %self.dbg.spill8, align 8, !dbg !2495
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !2496, metadata !DIExpression()), !dbg !2501
  %3 = bitcast {}** %1 to i64*, !dbg !2503
  store i64 0, i64* %3, align 8, !dbg !2503
  %data_address = load {}*, {}** %1, align 8, !dbg !2503
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !2503
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !2457, metadata !DIExpression()), !dbg !2458
  br label %bb2, !dbg !2503

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to {}**, !dbg !2458
  store {}* %data_address, {}** %4, align 8, !dbg !2458
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !2458
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !2458
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to i8*, !dbg !2458
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !2458
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to i8**, !dbg !2458
  %other = load i8*, i8** %8, align 8, !dbg !2458
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !2458
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !2500, metadata !DIExpression()), !dbg !2501
  %9 = icmp eq i8* %self7, %other, !dbg !2501
  %10 = zext i1 %9 to i8, !dbg !2501
  store i8 %10, i8* %0, align 1, !dbg !2501
  %11 = load i8, i8* %0, align 1, !dbg !2501, !range !394, !noundef !19
  %_5 = trunc i8 %11 to i1, !dbg !2501
  br label %bb3, !dbg !2501

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true, !dbg !2509
  call void @llvm.assume(i1 %_4), !dbg !2510
  br label %bb1, !dbg !2510

bb1:                                              ; preds = %bb3
  ret %"alloc::string::String"* %_9, !dbg !2511
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hcdf3ffb91c360be2E"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #0 !dbg !2512 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !2516, metadata !DIExpression()), !dbg !2519
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !2520, metadata !DIExpression()), !dbg !2525
  %self1 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !2534
  store { i8*, i64 }* %self1, { i8*, i64 }** %self.dbg.spill2, align 8, !dbg !2534
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill2, metadata !2535, metadata !DIExpression()), !dbg !2542
  %2 = bitcast { i8*, i64 }* %self1 to i8**, !dbg !2542
  %self3 = load i8*, i8** %2, align 8, !dbg !2542, !nonnull !19, !noundef !19
  store i8* %self3, i8** %self.dbg.spill4, align 8, !dbg !2542
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !2543, metadata !DIExpression()), !dbg !2547
  store i8* %self3, i8** %self.dbg.spill5, align 8, !dbg !2547
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !2549, metadata !DIExpression()), !dbg !2553
  store i8* %self3, i8** %ptr.dbg.spill, align 8, !dbg !2553
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2517, metadata !DIExpression()), !dbg !2555
  store i8* %self3, i8** %self.dbg.spill6, align 8, !dbg !2533
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !2531, metadata !DIExpression()), !dbg !2556
  store i8* %self3, i8** %self.dbg.spill7, align 8, !dbg !2556
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !2557, metadata !DIExpression()), !dbg !2562
  %3 = bitcast {}** %1 to i64*, !dbg !2564
  store i64 0, i64* %3, align 8, !dbg !2564
  %data_address = load {}*, {}** %1, align 8, !dbg !2564
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !2564
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !2524, metadata !DIExpression()), !dbg !2525
  br label %bb2, !dbg !2564

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to {}**, !dbg !2525
  store {}* %data_address, {}** %4, align 8, !dbg !2525
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !2525
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !2525
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to i8*, !dbg !2525
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !2525
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to i8**, !dbg !2525
  %other = load i8*, i8** %8, align 8, !dbg !2525
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !2525
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !2561, metadata !DIExpression()), !dbg !2562
  %9 = icmp eq i8* %self3, %other, !dbg !2562
  %10 = zext i1 %9 to i8, !dbg !2562
  store i8 %10, i8* %0, align 1, !dbg !2562
  %11 = load i8, i8* %0, align 1, !dbg !2562, !range !394, !noundef !19
  %_5 = trunc i8 %11 to i1, !dbg !2562
  br label %bb3, !dbg !2562

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true, !dbg !2570
  call void @llvm.assume(i1 %_4), !dbg !2571
  br label %bb1, !dbg !2571

bb1:                                              ; preds = %bb3
  ret i8* %self3, !dbg !2572
}

; alloc::vec::Vec<T,A>::append_elements
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17hb2969b658d1a96daE"(%"alloc::vec::Vec<u8>"* align 8 %self, [0 x i8]* %other.0, i64 %other.1) unnamed_addr #0 !dbg !2573 {
start:
  %count.dbg.spill7 = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill6 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %count.dbg.spill4 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %src.dbg.spill = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill1 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %count.dbg.spill = alloca i64, align 8
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !2577, metadata !DIExpression()), !dbg !2583
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !2578, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]"* %runtime, metadata !2585, metadata !DIExpression()), !dbg !2604
  store i64 %other.1, i64* %count.dbg.spill, align 8, !dbg !2606
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !2579, metadata !DIExpression()), !dbg !2607
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hbfb27bc36448b560E"(%"alloc::vec::Vec<u8>"* align 8 %self, i64 %other.1), !dbg !2608
  br label %bb1, !dbg !2608

bb1:                                              ; preds = %start
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill1, align 8, !dbg !2609
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill1, metadata !2610, metadata !DIExpression()), !dbg !2616
  %3 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !2616
  %len = load i64, i64* %3, align 8, !dbg !2616
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !2616
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2581, metadata !DIExpression()), !dbg !2617
  %src = bitcast [0 x i8]* %other.0 to i8*, !dbg !2618
  store i8* %src, i8** %src.dbg.spill, align 8, !dbg !2618
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill, metadata !2593, metadata !DIExpression()), !dbg !2619
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %self2 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hcdf3ffb91c360be2E"(%"alloc::vec::Vec<u8>"* align 8 %self), !dbg !2620
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !2620
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !2621, metadata !DIExpression()), !dbg !2628
  br label %bb2, !dbg !2620

bb2:                                              ; preds = %bb1
  store i64 %len, i64* %count.dbg.spill4, align 8, !dbg !2629
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill4, metadata !2627, metadata !DIExpression()), !dbg !2628
  store i8* %self2, i8** %self.dbg.spill5, align 8, !dbg !2628
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !2630, metadata !DIExpression()), !dbg !2637
  store i64 %len, i64* %count.dbg.spill6, align 8, !dbg !2628
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill6, metadata !2636, metadata !DIExpression()), !dbg !2637
  %4 = getelementptr inbounds i8, i8* %self2, i64 %len, !dbg !2637
  store i8* %4, i8** %0, align 8, !dbg !2637
  %_21 = load i8*, i8** %0, align 8, !dbg !2637
  br label %bb3, !dbg !2637

bb3:                                              ; preds = %bb2
  store i8* %_21, i8** %dst.dbg.spill, align 8, !dbg !2637
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !2595, metadata !DIExpression()), !dbg !2619
  store i64 %other.1, i64* %count.dbg.spill7, align 8, !dbg !2639
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill7, metadata !2596, metadata !DIExpression()), !dbg !2619
  %5 = mul i64 %other.1, 1, !dbg !2619
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %_21, i8* align 1 %src, i64 %5, i1 false), !dbg !2619
  %6 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !2640
  %7 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !2640
  %8 = load i64, i64* %7, align 8, !dbg !2640
  %9 = add i64 %8, %other.1, !dbg !2640
  store i64 %9, i64* %6, align 8, !dbg !2640
  ret void, !dbg !2641
}

; alloc::vec::Vec<T,A>::extend_desugared
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17he1ab28677aee018aE"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* align 8 %self, %"bytes::Shlex"* align 8 %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2642 {
start:
  %new_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill11 = alloca %"alloc::vec::Vec<alloc::vec::Vec<u8>>"*, align 8
  %dst.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %1 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %count.dbg.spill10 = alloca i64, align 8
  %self.dbg.spill9 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %2 = alloca i64, align 8
  %self.dbg.spill6 = alloca i64, align 8
  %lower.dbg.spill = alloca i64, align 8
  %self.dbg.spill4 = alloca { i64*, i64 }*, align 8
  %self.dbg.spill2 = alloca %"alloc::vec::Vec<alloc::vec::Vec<u8>>"*, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill1 = alloca %"alloc::vec::Vec<alloc::vec::Vec<u8>>"*, align 8
  %3 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<alloc::vec::Vec<u8>>"*, align 8
  %src = alloca %"alloc::vec::Vec<u8>", align 8
  %_14 = alloca { i64, { i64, i64 } }, align 8
  %_11 = alloca i64, align 8
  %element = alloca %"alloc::vec::Vec<u8>", align 8
  %_3 = alloca %"core::option::Option<alloc::vec::Vec<u8>>", align 8
  %iterator = alloca %"bytes::Shlex"*, align 8
  store %"bytes::Shlex"* %0, %"bytes::Shlex"** %iterator, align 8
  store %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %self, %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %self.dbg.spill, metadata !2646, metadata !DIExpression()), !dbg !2655
  call void @llvm.dbg.declare(metadata %"bytes::Shlex"** %iterator, metadata !2647, metadata !DIExpression()), !dbg !2656
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %element, metadata !2648, metadata !DIExpression()), !dbg !2657
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %src, metadata !2658, metadata !DIExpression()), !dbg !2663
  br label %bb1, !dbg !2665

bb1:                                              ; preds = %bb20, %start
; invoke <&mut I as core::iter::traits::iterator::Iterator>::next
  invoke void @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h795a6a2b04c995d4E"(%"core::option::Option<alloc::vec::Vec<u8>>"* sret(%"core::option::Option<alloc::vec::Vec<u8>>") %_3, %"bytes::Shlex"** align 8 %iterator)
          to label %bb2 unwind label %cleanup, !dbg !2666

bb12:                                             ; preds = %bb14, %bb15, %cleanup
  br label %bb13, !dbg !2667

cleanup:                                          ; preds = %bb9, %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
  %9 = bitcast %"core::option::Option<alloc::vec::Vec<u8>>"* %_3 to {}**, !dbg !2668
  %10 = load {}*, {}** %9, align 8, !dbg !2668
  %11 = icmp eq {}* %10, null, !dbg !2668
  %_5 = select i1 %11, i64 0, i64 1, !dbg !2668
  %12 = icmp eq i64 %_5, 1, !dbg !2668
  br i1 %12, label %bb3, label %bb9, !dbg !2668

bb3:                                              ; preds = %bb2
  %13 = bitcast %"core::option::Option<alloc::vec::Vec<u8>>"* %_3 to %"core::option::Option<alloc::vec::Vec<u8>>::Some"*, !dbg !2657
  %14 = bitcast %"core::option::Option<alloc::vec::Vec<u8>>::Some"* %13 to %"alloc::vec::Vec<u8>"*, !dbg !2657
  %15 = bitcast %"alloc::vec::Vec<u8>"* %element to i8*, !dbg !2657
  %16 = bitcast %"alloc::vec::Vec<u8>"* %14 to i8*, !dbg !2657
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false), !dbg !2657
  store %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %self, %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %self.dbg.spill1, align 8, !dbg !2669
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %self.dbg.spill1, metadata !2670, metadata !DIExpression()), !dbg !2676
  %17 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<u8>>", %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %self, i32 0, i32 1, !dbg !2676
  %len = load i64, i64* %17, align 8, !dbg !2676
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !2676
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2650, metadata !DIExpression()), !dbg !2677
  store %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %self, %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %self.dbg.spill2, align 8, !dbg !2678
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %self.dbg.spill2, metadata !2679, metadata !DIExpression()), !dbg !2682
  %self3 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %self to { i64*, i64 }*, !dbg !2682
  store { i64*, i64 }* %self3, { i64*, i64 }** %self.dbg.spill4, align 8, !dbg !2682
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill4, metadata !2683, metadata !DIExpression()), !dbg !2689
  br i1 false, label %bb17, label %bb18, !dbg !2689

bb9:                                              ; preds = %bb2
; invoke core::ptr::drop_in_place<core::option::Option<alloc::vec::Vec<u8>>>
  invoke void @"_ZN4core3ptr74drop_in_place$LT$core..option..Option$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17h6f4a85b44fafafe7E"(%"core::option::Option<alloc::vec::Vec<u8>>"* %_3)
          to label %bb10 unwind label %cleanup, !dbg !2665

bb10:                                             ; preds = %bb9
  br label %bb11, !dbg !2667

bb11:                                             ; preds = %bb10
  ret void, !dbg !2691

bb17:                                             ; preds = %bb3
  store i64 -1, i64* %_11, align 8, !dbg !2689
  br label %bb16, !dbg !2689

bb18:                                             ; preds = %bb3
  %18 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self3, i32 0, i32 1, !dbg !2689
  %19 = load i64, i64* %18, align 8, !dbg !2689
  store i64 %19, i64* %_11, align 8, !dbg !2689
  br label %bb16, !dbg !2689

bb16:                                             ; preds = %bb17, %bb18
  %20 = load i64, i64* %_11, align 8, !dbg !2692
  %_9 = icmp eq i64 %len, %20, !dbg !2692
  br i1 %_9, label %bb4, label %bb7, !dbg !2692

bb7:                                              ; preds = %bb6, %bb16
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %self7 = invoke %"alloc::vec::Vec<u8>"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1d53eb0dd4b79cbfE"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* align 8 %self)
          to label %bb8 unwind label %cleanup5, !dbg !2693

bb4:                                              ; preds = %bb16
; invoke <&mut I as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17ha9dd4646d3c6cae6E"({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %_14, %"bytes::Shlex"** align 8 %iterator)
          to label %bb5 unwind label %cleanup5, !dbg !2694

bb15:                                             ; preds = %cleanup5
  br i1 true, label %bb14, label %bb12, !dbg !2695

cleanup5:                                         ; preds = %bb7, %bb19, %bb4
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb15

bb5:                                              ; preds = %bb4
  %26 = bitcast { i64, { i64, i64 } }* %_14 to i64*, !dbg !2696
  %lower = load i64, i64* %26, align 8, !dbg !2696
  store i64 %lower, i64* %lower.dbg.spill, align 8, !dbg !2696
  call void @llvm.dbg.declare(metadata i64* %lower.dbg.spill, metadata !2652, metadata !DIExpression()), !dbg !2697
  store i64 %lower, i64* %self.dbg.spill6, align 8, !dbg !2698
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill6, metadata !2699, metadata !DIExpression()), !dbg !2704
  %27 = call i64 @llvm.uadd.sat.i64(i64 %lower, i64 1), !dbg !2704
  store i64 %27, i64* %2, align 8, !dbg !2704
  %_18 = load i64, i64* %2, align 8, !dbg !2704
  br label %bb19, !dbg !2704

bb19:                                             ; preds = %bb5
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h95de801c96019b2eE"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* align 8 %self, i64 %_18)
          to label %bb6 unwind label %cleanup5, !dbg !2705

bb6:                                              ; preds = %bb19
  br label %bb7, !dbg !2706

bb8:                                              ; preds = %bb7
  store %"alloc::vec::Vec<u8>"* %self7, %"alloc::vec::Vec<u8>"** %self.dbg.spill8, align 8, !dbg !2693
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill8, metadata !2707, metadata !DIExpression()), !dbg !2714
  store i64 %len, i64* %count.dbg.spill, align 8, !dbg !2715
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !2713, metadata !DIExpression()), !dbg !2714
  store %"alloc::vec::Vec<u8>"* %self7, %"alloc::vec::Vec<u8>"** %self.dbg.spill9, align 8, !dbg !2714
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill9, metadata !2716, metadata !DIExpression()), !dbg !2723
  store i64 %len, i64* %count.dbg.spill10, align 8, !dbg !2714
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill10, metadata !2722, metadata !DIExpression()), !dbg !2723
  %28 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self7, i64 %len, !dbg !2723
  store %"alloc::vec::Vec<u8>"* %28, %"alloc::vec::Vec<u8>"** %1, align 8, !dbg !2723
  %_37 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %1, align 8, !dbg !2723
  br label %bb20, !dbg !2723

bb20:                                             ; preds = %bb8
  store %"alloc::vec::Vec<u8>"* %_37, %"alloc::vec::Vec<u8>"** %dst.dbg.spill, align 8, !dbg !2723
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %dst.dbg.spill, metadata !2662, metadata !DIExpression()), !dbg !2663
  %29 = bitcast %"alloc::vec::Vec<u8>"* %src to i8*, !dbg !2725
  %30 = bitcast %"alloc::vec::Vec<u8>"* %element to i8*, !dbg !2725
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false), !dbg !2725
  %31 = bitcast %"alloc::vec::Vec<u8>"* %_37 to i8*, !dbg !2663
  %32 = bitcast %"alloc::vec::Vec<u8>"* %src to i8*, !dbg !2663
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false), !dbg !2663
  store %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %self, %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %self.dbg.spill11, align 8, !dbg !2726
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %self.dbg.spill11, metadata !2727, metadata !DIExpression()), !dbg !2731
  %new_len = add i64 %len, 1, !dbg !2732
  store i64 %new_len, i64* %new_len.dbg.spill, align 8, !dbg !2732
  call void @llvm.dbg.declare(metadata i64* %new_len.dbg.spill, metadata !2730, metadata !DIExpression()), !dbg !2731
  %33 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<u8>>", %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %self, i32 0, i32 1, !dbg !2731
  store i64 %new_len, i64* %33, align 8, !dbg !2731
  br label %bb1, !dbg !2665

bb14:                                             ; preds = %bb15
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9be70052c8106a2bE"(%"alloc::vec::Vec<u8>"* %element) #14
          to label %bb12 unwind label %abort, !dbg !2695

abort:                                            ; preds = %bb14
  %34 = landingpad { i8*, i32 }
          cleanup, !dbg !2733
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #15, !dbg !2733
  unreachable, !dbg !2733

bb13:                                             ; preds = %bb12
  %35 = bitcast { i8*, i32 }* %3 to i8**, !dbg !2733
  %36 = load i8*, i8** %35, align 8, !dbg !2733
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !2733
  %38 = load i32, i32* %37, align 8, !dbg !2733
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0, !dbg !2733
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1, !dbg !2733
  resume { i8*, i32 } %40, !dbg !2733
}

; alloc::vec::Vec<T,A>::extend_desugared
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17he4304560f5c1483cE"(%"alloc::vec::Vec<alloc::string::String>"* align 8 %self, %Shlex* align 8 %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2734 {
start:
  %new_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill11 = alloca %"alloc::vec::Vec<alloc::string::String>"*, align 8
  %dst.dbg.spill = alloca %"alloc::string::String"*, align 8
  %1 = alloca %"alloc::string::String"*, align 8
  %count.dbg.spill10 = alloca i64, align 8
  %self.dbg.spill9 = alloca %"alloc::string::String"*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca %"alloc::string::String"*, align 8
  %2 = alloca i64, align 8
  %self.dbg.spill6 = alloca i64, align 8
  %lower.dbg.spill = alloca i64, align 8
  %self.dbg.spill4 = alloca { i64*, i64 }*, align 8
  %self.dbg.spill2 = alloca %"alloc::vec::Vec<alloc::string::String>"*, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill1 = alloca %"alloc::vec::Vec<alloc::string::String>"*, align 8
  %3 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<alloc::string::String>"*, align 8
  %src = alloca %"alloc::string::String", align 8
  %_14 = alloca { i64, { i64, i64 } }, align 8
  %_11 = alloca i64, align 8
  %element = alloca %"alloc::string::String", align 8
  %_3 = alloca %"core::option::Option<alloc::string::String>", align 8
  %iterator = alloca %Shlex*, align 8
  store %Shlex* %0, %Shlex** %iterator, align 8
  store %"alloc::vec::Vec<alloc::string::String>"* %self, %"alloc::vec::Vec<alloc::string::String>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::string::String>"** %self.dbg.spill, metadata !2738, metadata !DIExpression()), !dbg !2747
  call void @llvm.dbg.declare(metadata %Shlex** %iterator, metadata !2739, metadata !DIExpression()), !dbg !2748
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %element, metadata !2740, metadata !DIExpression()), !dbg !2749
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %src, metadata !2750, metadata !DIExpression()), !dbg !2755
  br label %bb1, !dbg !2757

bb1:                                              ; preds = %bb20, %start
; invoke <&mut I as core::iter::traits::iterator::Iterator>::next
  invoke void @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9b785dd58a3365a0E"(%"core::option::Option<alloc::string::String>"* sret(%"core::option::Option<alloc::string::String>") %_3, %Shlex** align 8 %iterator)
          to label %bb2 unwind label %cleanup, !dbg !2758

bb12:                                             ; preds = %bb14, %bb15, %cleanup
  br label %bb13, !dbg !2759

cleanup:                                          ; preds = %bb9, %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
  %9 = bitcast %"core::option::Option<alloc::string::String>"* %_3 to {}**, !dbg !2760
  %10 = load {}*, {}** %9, align 8, !dbg !2760
  %11 = icmp eq {}* %10, null, !dbg !2760
  %_5 = select i1 %11, i64 0, i64 1, !dbg !2760
  %12 = icmp eq i64 %_5, 1, !dbg !2760
  br i1 %12, label %bb3, label %bb9, !dbg !2760

bb3:                                              ; preds = %bb2
  %13 = bitcast %"core::option::Option<alloc::string::String>"* %_3 to %"core::option::Option<alloc::string::String>::Some"*, !dbg !2749
  %14 = bitcast %"core::option::Option<alloc::string::String>::Some"* %13 to %"alloc::string::String"*, !dbg !2749
  %15 = bitcast %"alloc::string::String"* %element to i8*, !dbg !2749
  %16 = bitcast %"alloc::string::String"* %14 to i8*, !dbg !2749
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false), !dbg !2749
  store %"alloc::vec::Vec<alloc::string::String>"* %self, %"alloc::vec::Vec<alloc::string::String>"** %self.dbg.spill1, align 8, !dbg !2761
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::string::String>"** %self.dbg.spill1, metadata !2762, metadata !DIExpression()), !dbg !2768
  %17 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", %"alloc::vec::Vec<alloc::string::String>"* %self, i32 0, i32 1, !dbg !2768
  %len = load i64, i64* %17, align 8, !dbg !2768
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !2768
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2742, metadata !DIExpression()), !dbg !2769
  store %"alloc::vec::Vec<alloc::string::String>"* %self, %"alloc::vec::Vec<alloc::string::String>"** %self.dbg.spill2, align 8, !dbg !2770
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::string::String>"** %self.dbg.spill2, metadata !2771, metadata !DIExpression()), !dbg !2774
  %self3 = bitcast %"alloc::vec::Vec<alloc::string::String>"* %self to { i64*, i64 }*, !dbg !2774
  store { i64*, i64 }* %self3, { i64*, i64 }** %self.dbg.spill4, align 8, !dbg !2774
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill4, metadata !2775, metadata !DIExpression()), !dbg !2781
  br i1 false, label %bb17, label %bb18, !dbg !2781

bb9:                                              ; preds = %bb2
; invoke core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h82977a0c0dd68079E"(%"core::option::Option<alloc::string::String>"* %_3)
          to label %bb10 unwind label %cleanup, !dbg !2757

bb10:                                             ; preds = %bb9
  br label %bb11, !dbg !2759

bb11:                                             ; preds = %bb10
  ret void, !dbg !2783

bb17:                                             ; preds = %bb3
  store i64 -1, i64* %_11, align 8, !dbg !2781
  br label %bb16, !dbg !2781

bb18:                                             ; preds = %bb3
  %18 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self3, i32 0, i32 1, !dbg !2781
  %19 = load i64, i64* %18, align 8, !dbg !2781
  store i64 %19, i64* %_11, align 8, !dbg !2781
  br label %bb16, !dbg !2781

bb16:                                             ; preds = %bb17, %bb18
  %20 = load i64, i64* %_11, align 8, !dbg !2784
  %_9 = icmp eq i64 %len, %20, !dbg !2784
  br i1 %_9, label %bb4, label %bb7, !dbg !2784

bb7:                                              ; preds = %bb6, %bb16
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %self7 = invoke %"alloc::string::String"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h44fbfd7f7c84c396E"(%"alloc::vec::Vec<alloc::string::String>"* align 8 %self)
          to label %bb8 unwind label %cleanup5, !dbg !2785

bb4:                                              ; preds = %bb16
; invoke <&mut I as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h29385024be338a39E"({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %_14, %Shlex** align 8 %iterator)
          to label %bb5 unwind label %cleanup5, !dbg !2786

bb15:                                             ; preds = %cleanup5
  br i1 true, label %bb14, label %bb12, !dbg !2787

cleanup5:                                         ; preds = %bb7, %bb19, %bb4
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb15

bb5:                                              ; preds = %bb4
  %26 = bitcast { i64, { i64, i64 } }* %_14 to i64*, !dbg !2788
  %lower = load i64, i64* %26, align 8, !dbg !2788
  store i64 %lower, i64* %lower.dbg.spill, align 8, !dbg !2788
  call void @llvm.dbg.declare(metadata i64* %lower.dbg.spill, metadata !2744, metadata !DIExpression()), !dbg !2789
  store i64 %lower, i64* %self.dbg.spill6, align 8, !dbg !2790
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill6, metadata !2791, metadata !DIExpression()), !dbg !2796
  %27 = call i64 @llvm.uadd.sat.i64(i64 %lower, i64 1), !dbg !2796
  store i64 %27, i64* %2, align 8, !dbg !2796
  %_18 = load i64, i64* %2, align 8, !dbg !2796
  br label %bb19, !dbg !2796

bb19:                                             ; preds = %bb5
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hb08e379da2f6496dE"(%"alloc::vec::Vec<alloc::string::String>"* align 8 %self, i64 %_18)
          to label %bb6 unwind label %cleanup5, !dbg !2797

bb6:                                              ; preds = %bb19
  br label %bb7, !dbg !2798

bb8:                                              ; preds = %bb7
  store %"alloc::string::String"* %self7, %"alloc::string::String"** %self.dbg.spill8, align 8, !dbg !2785
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill8, metadata !2799, metadata !DIExpression()), !dbg !2806
  store i64 %len, i64* %count.dbg.spill, align 8, !dbg !2807
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !2805, metadata !DIExpression()), !dbg !2806
  store %"alloc::string::String"* %self7, %"alloc::string::String"** %self.dbg.spill9, align 8, !dbg !2806
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill9, metadata !2808, metadata !DIExpression()), !dbg !2815
  store i64 %len, i64* %count.dbg.spill10, align 8, !dbg !2806
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill10, metadata !2814, metadata !DIExpression()), !dbg !2815
  %28 = getelementptr inbounds %"alloc::string::String", %"alloc::string::String"* %self7, i64 %len, !dbg !2815
  store %"alloc::string::String"* %28, %"alloc::string::String"** %1, align 8, !dbg !2815
  %_37 = load %"alloc::string::String"*, %"alloc::string::String"** %1, align 8, !dbg !2815
  br label %bb20, !dbg !2815

bb20:                                             ; preds = %bb8
  store %"alloc::string::String"* %_37, %"alloc::string::String"** %dst.dbg.spill, align 8, !dbg !2815
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %dst.dbg.spill, metadata !2754, metadata !DIExpression()), !dbg !2755
  %29 = bitcast %"alloc::string::String"* %src to i8*, !dbg !2817
  %30 = bitcast %"alloc::string::String"* %element to i8*, !dbg !2817
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false), !dbg !2817
  %31 = bitcast %"alloc::string::String"* %_37 to i8*, !dbg !2755
  %32 = bitcast %"alloc::string::String"* %src to i8*, !dbg !2755
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false), !dbg !2755
  store %"alloc::vec::Vec<alloc::string::String>"* %self, %"alloc::vec::Vec<alloc::string::String>"** %self.dbg.spill11, align 8, !dbg !2818
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::string::String>"** %self.dbg.spill11, metadata !2819, metadata !DIExpression()), !dbg !2823
  %new_len = add i64 %len, 1, !dbg !2824
  store i64 %new_len, i64* %new_len.dbg.spill, align 8, !dbg !2824
  call void @llvm.dbg.declare(metadata i64* %new_len.dbg.spill, metadata !2822, metadata !DIExpression()), !dbg !2823
  %33 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", %"alloc::vec::Vec<alloc::string::String>"* %self, i32 0, i32 1, !dbg !2823
  store i64 %new_len, i64* %33, align 8, !dbg !2823
  br label %bb1, !dbg !2757

bb14:                                             ; preds = %bb15
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h0ccb537bb1763a95E"(%"alloc::string::String"* %element) #14
          to label %bb12 unwind label %abort, !dbg !2787

abort:                                            ; preds = %bb14
  %34 = landingpad { i8*, i32 }
          cleanup, !dbg !2825
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #15, !dbg !2825
  unreachable, !dbg !2825

bb13:                                             ; preds = %bb12
  %35 = bitcast { i8*, i32 }* %3 to i8**, !dbg !2825
  %36 = load i8*, i8** %35, align 8, !dbg !2825
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !2825
  %38 = load i32, i32* %37, align 8, !dbg !2825
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0, !dbg !2825
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1, !dbg !2825
  resume { i8*, i32 } %40, !dbg !2825
}

; alloc::vec::Vec<T,A>::extend_from_slice
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17hbdc1b7fc228aa866E"(%"alloc::vec::Vec<u8>"* align 8 %self, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #1 !dbg !2826 {
start:
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !2830, metadata !DIExpression()), !dbg !2832
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !2831, metadata !DIExpression()), !dbg !2833
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !2834
  store [0 x i8]* %other.0, [0 x i8]** %2, align 8, !dbg !2834
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !2834
  store i64 %other.1, i64* %3, align 8, !dbg !2834
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !2835, metadata !DIExpression()), !dbg !2839
; call core::slice::iter::Iter<T>::new
  %4 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17haeedc00e2d6d278cE"([0 x i8]* align 1 %other.0, i64 %other.1), !dbg !2839
  %_4.0 = extractvalue { i8*, i8* } %4, 0, !dbg !2839
  %_4.1 = extractvalue { i8*, i8* } %4, 1, !dbg !2839
  br label %bb2, !dbg !2839

bb2:                                              ; preds = %start
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
  call void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17h267153515388f5d3E"(%"alloc::vec::Vec<u8>"* align 8 %self, i8* %_4.0, i8* %_4.1), !dbg !2840
  br label %bb1, !dbg !2840

bb1:                                              ; preds = %bb2
  ret void, !dbg !2841
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h4b04564bca214e51E"(%"alloc::vec::Vec<u8>"* align 8 %self, i8 %value) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2842 {
start:
  %dst.dbg.spill = alloca i8*, align 8
  %end.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill6 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }*, align 8
  %value.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %src = alloca i8, align 1
  %_5 = alloca i64, align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !2846, metadata !DIExpression()), !dbg !2850
  store i8 %value, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !2847, metadata !DIExpression()), !dbg !2851
  call void @llvm.dbg.declare(metadata i8* %src, metadata !2852, metadata !DIExpression()), !dbg !2859
  %2 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !2861
  %_4 = load i64, i64* %2, align 8, !dbg !2861
  %self1 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !2862
  store { i8*, i64 }* %self1, { i8*, i64 }** %self.dbg.spill2, align 8, !dbg !2862
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill2, metadata !2863, metadata !DIExpression()), !dbg !2869
  br i1 false, label %bb9, label %bb10, !dbg !2869

bb9:                                              ; preds = %start
  store i64 -1, i64* %_5, align 8, !dbg !2869
  br label %bb1, !dbg !2869

bb10:                                             ; preds = %start
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self1, i32 0, i32 1, !dbg !2869
  %4 = load i64, i64* %3, align 8, !dbg !2869
  store i64 %4, i64* %_5, align 8, !dbg !2869
  br label %bb1, !dbg !2869

bb1:                                              ; preds = %bb9, %bb10
  %5 = load i64, i64* %_5, align 8, !dbg !2861
  %_3 = icmp eq i64 %_4, %5, !dbg !2861
  br i1 %_3, label %bb2, label %bb4, !dbg !2861

bb4:                                              ; preds = %bb3, %bb1
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %self3 = invoke i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hcdf3ffb91c360be2E"(%"alloc::vec::Vec<u8>"* align 8 %self)
          to label %bb5 unwind label %cleanup, !dbg !2870

bb2:                                              ; preds = %bb1
  %_8 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !2871
  %6 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !2872
  %_9 = load i64, i64* %6, align 8, !dbg !2872
; invoke alloc::raw_vec::RawVec<T,A>::reserve_for_push
  invoke void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h06fafd2553dd81d4E"({ i8*, i64 }* align 8 %_8, i64 %_9)
          to label %bb3 unwind label %cleanup, !dbg !2871

bb8:                                              ; preds = %cleanup
  br i1 true, label %bb7, label %bb6, !dbg !2873

cleanup:                                          ; preds = %bb4, %bb2
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb8

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !2874

bb5:                                              ; preds = %bb4
  store i8* %self3, i8** %self.dbg.spill4, align 8, !dbg !2870
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !2875, metadata !DIExpression()), !dbg !2880
  %12 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !2881
  %count = load i64, i64* %12, align 8, !dbg !2881
  store i64 %count, i64* %count.dbg.spill, align 8, !dbg !2881
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !2879, metadata !DIExpression()), !dbg !2880
  store i8* %self3, i8** %self.dbg.spill5, align 8, !dbg !2880
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !2882, metadata !DIExpression()), !dbg !2887
  store i64 %count, i64* %count.dbg.spill6, align 8, !dbg !2880
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill6, metadata !2886, metadata !DIExpression()), !dbg !2887
  %13 = getelementptr inbounds i8, i8* %self3, i64 %count, !dbg !2887
  store i8* %13, i8** %0, align 8, !dbg !2887
  %_21 = load i8*, i8** %0, align 8, !dbg !2887
  br label %bb11, !dbg !2887

bb11:                                             ; preds = %bb5
  store i8* %_21, i8** %end.dbg.spill, align 8, !dbg !2887
  call void @llvm.dbg.declare(metadata i8** %end.dbg.spill, metadata !2848, metadata !DIExpression()), !dbg !2889
  store i8* %_21, i8** %dst.dbg.spill, align 8, !dbg !2890
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !2858, metadata !DIExpression()), !dbg !2859
  store i8 %value, i8* %src, align 1, !dbg !2891
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %_21, i8* align 1 %src, i64 1, i1 false), !dbg !2859
  %14 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !2892
  %15 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !2892
  %16 = load i64, i64* %15, align 8, !dbg !2892
  %17 = add i64 %16, 1, !dbg !2892
  store i64 %17, i64* %14, align 8, !dbg !2892
  ret void, !dbg !2893

bb6:                                              ; preds = %bb7, %bb8
  %18 = bitcast { i8*, i32 }* %1 to i8**, !dbg !2894
  %19 = load i8*, i8** %18, align 8, !dbg !2894
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !2894
  %21 = load i32, i32* %20, align 8, !dbg !2894
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0, !dbg !2894
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1, !dbg !2894
  resume { i8*, i32 } %23, !dbg !2894

bb7:                                              ; preds = %bb8
  br label %bb6, !dbg !2873
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h95de801c96019b2eE"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* align 8 %self, i64 %additional) unnamed_addr #1 !dbg !2895 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<alloc::vec::Vec<u8>>"*, align 8
  store %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %self, %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %self.dbg.spill, metadata !2897, metadata !DIExpression()), !dbg !2899
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !2898, metadata !DIExpression()), !dbg !2900
  %_4 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %self to { i64*, i64 }*, !dbg !2901
  %0 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<u8>>", %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %self, i32 0, i32 1, !dbg !2902
  %_5 = load i64, i64* %0, align 8, !dbg !2902
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hce75b963db962c72E"({ i64*, i64 }* align 8 %_4, i64 %_5, i64 %additional), !dbg !2901
  br label %bb1, !dbg !2901

bb1:                                              ; preds = %start
  ret void, !dbg !2903
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hb08e379da2f6496dE"(%"alloc::vec::Vec<alloc::string::String>"* align 8 %self, i64 %additional) unnamed_addr #1 !dbg !2904 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<alloc::string::String>"*, align 8
  store %"alloc::vec::Vec<alloc::string::String>"* %self, %"alloc::vec::Vec<alloc::string::String>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::string::String>"** %self.dbg.spill, metadata !2906, metadata !DIExpression()), !dbg !2908
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !2907, metadata !DIExpression()), !dbg !2909
  %_4 = bitcast %"alloc::vec::Vec<alloc::string::String>"* %self to { i64*, i64 }*, !dbg !2910
  %0 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", %"alloc::vec::Vec<alloc::string::String>"* %self, i32 0, i32 1, !dbg !2911
  %_5 = load i64, i64* %0, align 8, !dbg !2911
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hb30ec92957c0cdd1E"({ i64*, i64 }* align 8 %_4, i64 %_5, i64 %additional), !dbg !2910
  br label %bb1, !dbg !2910

bb1:                                              ; preds = %start
  ret void, !dbg !2912
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hbfb27bc36448b560E"(%"alloc::vec::Vec<u8>"* align 8 %self, i64 %additional) unnamed_addr #1 !dbg !2913 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !2917, metadata !DIExpression()), !dbg !2919
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !2918, metadata !DIExpression()), !dbg !2920
  %_4 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !2921
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !2922
  %_5 = load i64, i64* %0, align 8, !dbg !2922
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hcd8ff809399e9831E"({ i8*, i64 }* align 8 %_4, i64 %_5, i64 %additional), !dbg !2921
  br label %bb1, !dbg !2921

bb1:                                              ; preds = %start
  ret void, !dbg !2923
}

; alloc::vec::Vec<T,A>::is_empty
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8is_empty17h11a978bc7669e728E"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #1 !dbg !2924 {
start:
  %self.dbg.spill1 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !2928, metadata !DIExpression()), !dbg !2929
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill1, align 8, !dbg !2930
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill1, metadata !2931, metadata !DIExpression()), !dbg !2934
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !2934
  %_2 = load i64, i64* %0, align 8, !dbg !2934
  %1 = icmp eq i64 %_2, 0, !dbg !2930
  ret i1 %1, !dbg !2935
}

; alloc::vec::cow::<impl core::convert::From<&[T]> for alloc::borrow::Cow<[T]>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec3cow110_$LT$impl$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$alloc..borrow..Cow$LT$$u5b$T$u5d$$GT$$GT$4from17hb5c0b0b17f6bdda3E"(%"alloc::borrow::Cow<[u8]>"* sret(%"alloc::borrow::Cow<[u8]>") %0, [0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !2936 {
start:
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !2941, metadata !DIExpression()), !dbg !2942
  %3 = bitcast %"alloc::borrow::Cow<[u8]>"* %0 to %"alloc::borrow::Cow<[u8]>::Borrowed"*, !dbg !2943
  %4 = getelementptr inbounds %"alloc::borrow::Cow<[u8]>::Borrowed", %"alloc::borrow::Cow<[u8]>::Borrowed"* %3, i32 0, i32 1, !dbg !2943
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !2943
  store [0 x i8]* %s.0, [0 x i8]** %5, align 8, !dbg !2943
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !2943
  store i64 %s.1, i64* %6, align 8, !dbg !2943
  %7 = bitcast %"alloc::borrow::Cow<[u8]>"* %0 to i64*, !dbg !2943
  store i64 0, i64* %7, align 8, !dbg !2943
  ret void, !dbg !2944
}

; alloc::vec::cow::<impl core::convert::From<alloc::vec::Vec<T>> for alloc::borrow::Cow<[T]>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec3cow119_$LT$impl$u20$core..convert..From$LT$alloc..vec..Vec$LT$T$GT$$GT$$u20$for$u20$alloc..borrow..Cow$LT$$u5b$T$u5d$$GT$$GT$4from17he4b14b6007cc4beaE"(%"alloc::borrow::Cow<[u8]>"* sret(%"alloc::borrow::Cow<[u8]>") %0, %"alloc::vec::Vec<u8>"* %v) unnamed_addr #1 !dbg !2945 {
start:
  %_2 = alloca %"alloc::vec::Vec<u8>", align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %v, metadata !2948, metadata !DIExpression()), !dbg !2949
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_2 to i8*, !dbg !2950
  %2 = bitcast %"alloc::vec::Vec<u8>"* %v to i8*, !dbg !2950
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !2950
  %3 = bitcast %"alloc::borrow::Cow<[u8]>"* %0 to %"alloc::borrow::Cow<[u8]>::Owned"*, !dbg !2951
  %4 = getelementptr inbounds %"alloc::borrow::Cow<[u8]>::Owned", %"alloc::borrow::Cow<[u8]>::Owned"* %3, i32 0, i32 1, !dbg !2951
  %5 = bitcast %"alloc::vec::Vec<u8>"* %4 to i8*, !dbg !2951
  %6 = bitcast %"alloc::vec::Vec<u8>"* %_2 to i8*, !dbg !2951
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !2951
  %7 = bitcast %"alloc::borrow::Cow<[u8]>"* %0 to i64*, !dbg !2951
  store i64 1, i64* %7, align 8, !dbg !2951
  ret void, !dbg !2952
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hc2fbb81af54cdef1E(%"alloc::alloc::Global"* align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #0 !dbg !2953 {
start:
  %ptr.dbg.spill38 = alloca { [0 x i8]*, i64 }, align 8
  %data_address.dbg.spill35 = alloca {}*, align 8
  %self.dbg.spill33 = alloca i8*, align 8
  %data.dbg.spill32 = alloca i8*, align 8
  %self.dbg.spill31 = alloca i8*, align 8
  %ptr.dbg.spill29 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %addr.dbg.spill = alloca i64, align 8
  %n.dbg.spill28 = alloca i64, align 8
  %self.dbg.spill27 = alloca { i64, i64 }*, align 8
  %self.dbg.spill26 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill25 = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill24 = alloca i8*, align 8
  %len.dbg.spill23 = alloca i64, align 8
  %data.dbg.spill22 = alloca i8*, align 8
  %self.dbg.spill21 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill20 = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %n.dbg.spill18 = alloca i64, align 8
  %self.dbg.spill17 = alloca { i64, i64 }*, align 8
  %self.dbg.spill16 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill15 = alloca { i64, i64 }*, align 8
  %self.dbg.spill14 = alloca { i64, i64 }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %self.dbg.spill13 = alloca { i64, i64 }*, align 8
  %e.dbg.spill12 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %residual.dbg.spill5 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %_94 = alloca { i8*, i64 }, align 8
  %_93 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self11 = alloca i64, align 8
  %self10 = alloca i64, align 8
  %self9 = alloca i64, align 8
  %self8 = alloca i64, align 8
  %_51 = alloca { i8*, i64 }, align 8
  %_50 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self7 = alloca i64, align 8
  %self6 = alloca i64, align 8
  %_24 = alloca { i8*, i64 }, align 8
  %self4 = alloca i8*, align 8
  %self3 = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout2 = alloca { i64, i64 }, align 8
  %layout1 = alloca { i64, i64 }, align 8
  %raw_ptr = alloca i8*, align 8
  %data = alloca i8*, align 8
  %_6 = alloca { i8*, i64 }, align 8
  %3 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !2959, metadata !DIExpression()), !dbg !2985
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2960, metadata !DIExpression()), !dbg !2986
  %6 = zext i1 %zeroed to i8
  store i8 %6, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !2961, metadata !DIExpression()), !dbg !2987
  call void @llvm.dbg.declare(metadata i8** %data, metadata !2988, metadata !DIExpression()), !dbg !2995
  call void @llvm.dbg.declare(metadata i8** %raw_ptr, metadata !2964, metadata !DIExpression()), !dbg !2997
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout1, metadata !2998, metadata !DIExpression()), !dbg !3003
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout2, metadata !3005, metadata !DIExpression()), !dbg !3008
  call void @llvm.dbg.declare(metadata i8** %self3, metadata !3010, metadata !DIExpression()), !dbg !3052
  call void @llvm.dbg.declare(metadata i8** %self4, metadata !3054, metadata !DIExpression()), !dbg !3064
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %err.dbg.spill, metadata !3060, metadata !DIExpression()), !dbg !3064
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !2968, metadata !DIExpression()), !dbg !3065
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill5, metadata !3066, metadata !DIExpression()), !dbg !3077
  call void @llvm.dbg.declare(metadata i64* %self6, metadata !3079, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.declare(metadata i64* %self7, metadata !3099, metadata !DIExpression()), !dbg !3103
  call void @llvm.dbg.declare(metadata i64* %self8, metadata !3104, metadata !DIExpression()), !dbg !3108
  call void @llvm.dbg.declare(metadata i64* %self9, metadata !3115, metadata !DIExpression()), !dbg !3119
  call void @llvm.dbg.declare(metadata i64* %self10, metadata !3120, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.declare(metadata i64* %self11, metadata !3131, metadata !DIExpression()), !dbg !3135
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !3049, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill12, metadata !3072, metadata !DIExpression()), !dbg !3137
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill13, align 8, !dbg !3138
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill13, metadata !3139, metadata !DIExpression()), !dbg !3143
  %7 = bitcast { i64, i64 }* %layout to i64*, !dbg !3143
  %_4 = load i64, i64* %7, align 8, !dbg !3143
  %8 = icmp eq i64 %_4, 0, !dbg !3144
  br i1 %8, label %bb2, label %bb1, !dbg !3144

bb2:                                              ; preds = %start
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill26, align 8, !dbg !3098
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill26, metadata !3096, metadata !DIExpression()), !dbg !3145
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill27, align 8, !dbg !3145
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill27, metadata !3089, metadata !DIExpression()), !dbg !3146
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3146
  %10 = load i64, i64* %9, align 8, !dbg !3146, !range !1308, !noundef !19
  store i64 %10, i64* %self7, align 8, !dbg !3146
  %_33 = load i64, i64* %self7, align 8, !dbg !3103, !range !1308, !noundef !19
  store i64 %_33, i64* %n.dbg.spill28, align 8, !dbg !3103
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill28, metadata !3147, metadata !DIExpression()), !dbg !3154
  store i64 %_33, i64* %self6, align 8, !dbg !3154
  %addr = load i64, i64* %self6, align 8, !dbg !3083
  store i64 %addr, i64* %addr.dbg.spill, align 8, !dbg !3083
  call void @llvm.dbg.declare(metadata i64* %addr.dbg.spill, metadata !3156, metadata !DIExpression()), !dbg !3162
  %11 = bitcast i8** %2 to i64*, !dbg !3162
  store i64 %addr, i64* %11, align 8, !dbg !3162
  %ptr = load i8*, i8** %2, align 8, !dbg !3162
  store i8* %ptr, i8** %ptr.dbg.spill29, align 8, !dbg !3162
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill29, metadata !3164, metadata !DIExpression()), !dbg !3168
  br label %bb13, !dbg !3162

bb1:                                              ; preds = %start
  store i64 %_4, i64* %size.dbg.spill, align 8, !dbg !3170
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !2962, metadata !DIExpression()), !dbg !3171
  br i1 %zeroed, label %bb3, label %bb4, !dbg !3172

bb4:                                              ; preds = %bb1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !3173
  %13 = load i64, i64* %12, align 8, !dbg !3173
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3173
  %15 = load i64, i64* %14, align 8, !dbg !3173, !range !1308, !noundef !19
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 0, !dbg !3173
  store i64 %13, i64* %16, align 8, !dbg !3173
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 1, !dbg !3173
  store i64 %15, i64* %17, align 8, !dbg !3173
  store { i64, i64 }* %layout2, { i64, i64 }** %self.dbg.spill16, align 8, !dbg !3008
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill16, metadata !3174, metadata !DIExpression()), !dbg !3178
  %18 = bitcast { i64, i64 }* %layout2 to i64*, !dbg !3178
  %_67 = load i64, i64* %18, align 8, !dbg !3178
  store { i64, i64 }* %layout2, { i64, i64 }** %self.dbg.spill17, align 8, !dbg !3008
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill17, metadata !3128, metadata !DIExpression()), !dbg !3180
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 1, !dbg !3180
  %20 = load i64, i64* %19, align 8, !dbg !3180, !range !1308, !noundef !19
  store i64 %20, i64* %self11, align 8, !dbg !3180
  %_74 = load i64, i64* %self11, align 8, !dbg !3135, !range !1308, !noundef !19
  store i64 %_74, i64* %n.dbg.spill18, align 8, !dbg !3135
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill18, metadata !3181, metadata !DIExpression()), !dbg !3188
  store i64 %_74, i64* %self10, align 8, !dbg !3188
  %_69 = load i64, i64* %self10, align 8, !dbg !3124
  %21 = call i8* @__rust_alloc(i64 %_67, i64 %_69) #17, !dbg !3008
  store i8* %21, i8** %raw_ptr, align 8, !dbg !3008
  br label %bb15, !dbg !3008

bb3:                                              ; preds = %bb1
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !3190
  %23 = load i64, i64* %22, align 8, !dbg !3190
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3190
  %25 = load i64, i64* %24, align 8, !dbg !3190, !range !1308, !noundef !19
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 0, !dbg !3190
  store i64 %23, i64* %26, align 8, !dbg !3190
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !3190
  store i64 %25, i64* %27, align 8, !dbg !3190
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill14, align 8, !dbg !3003
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill14, metadata !3191, metadata !DIExpression()), !dbg !3195
  %28 = bitcast { i64, i64 }* %layout1 to i64*, !dbg !3195
  %_57 = load i64, i64* %28, align 8, !dbg !3195
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill15, align 8, !dbg !3003
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill15, metadata !3112, metadata !DIExpression()), !dbg !3197
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !3197
  %30 = load i64, i64* %29, align 8, !dbg !3197, !range !1308, !noundef !19
  store i64 %30, i64* %self9, align 8, !dbg !3197
  %_64 = load i64, i64* %self9, align 8, !dbg !3119, !range !1308, !noundef !19
  store i64 %_64, i64* %n.dbg.spill, align 8, !dbg !3119
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3198, metadata !DIExpression()), !dbg !3205
  store i64 %_64, i64* %self8, align 8, !dbg !3205
  %_59 = load i64, i64* %self8, align 8, !dbg !3108
  %31 = call i8* @__rust_alloc_zeroed(i64 %_57, i64 %_59) #17, !dbg !3003
  store i8* %31, i8** %raw_ptr, align 8, !dbg !3003
  br label %bb14, !dbg !3003

bb14:                                             ; preds = %bb3
  br label %bb5, !dbg !3207

bb5:                                              ; preds = %bb15, %bb14
  %_18 = load i8*, i8** %raw_ptr, align 8, !dbg !3208
; call core::ptr::non_null::NonNull<T>::new
  %32 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hc5605095dafcae08E"(i8* %_18), !dbg !3053
  store i8* %32, i8** %self4, align 8, !dbg !3053
  br label %bb6, !dbg !3053

bb15:                                             ; preds = %bb4
  br label %bb5, !dbg !3207

bb6:                                              ; preds = %bb5
  %33 = bitcast i8** %self4 to {}**, !dbg !3064
  %34 = load {}*, {}** %33, align 8, !dbg !3064
  %35 = icmp eq {}* %34, null, !dbg !3064
  %_77 = select i1 %35, i64 0, i64 1, !dbg !3064
  switch i64 %_77, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ], !dbg !3064

bb17:                                             ; preds = %bb6
  unreachable, !dbg !3064

bb16:                                             ; preds = %bb6
  %36 = bitcast i8** %self3 to {}**, !dbg !3064
  store {}* null, {}** %36, align 8, !dbg !3064
  br label %bb19, !dbg !3064

bb18:                                             ; preds = %bb6
  %v = load i8*, i8** %self4, align 8, !dbg !3064, !nonnull !19, !noundef !19
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !3064
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !3061, metadata !DIExpression()), !dbg !3209
  store i8* %v, i8** %self3, align 8, !dbg !3209
  br label %bb19, !dbg !3064

bb19:                                             ; preds = %bb16, %bb18
  %37 = bitcast i8** %self3 to {}**, !dbg !3052
  %38 = load {}*, {}** %37, align 8, !dbg !3052
  %39 = icmp eq {}* %38, null, !dbg !3052
  %_80 = select i1 %39, i64 1, i64 0, !dbg !3052
  switch i64 %_80, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !3052

bb21:                                             ; preds = %bb19
  unreachable, !dbg !3052

bb22:                                             ; preds = %bb19
  %v19 = load i8*, i8** %self3, align 8, !dbg !3052, !nonnull !19, !noundef !19
  store i8* %v19, i8** %v.dbg.spill20, align 8, !dbg !3052
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill20, metadata !3046, metadata !DIExpression()), !dbg !3210
  store i8* %v19, i8** %_15, align 8, !dbg !3210
  br label %bb7, !dbg !3052

bb20:                                             ; preds = %bb19
  %40 = bitcast i8** %_15 to {}**, !dbg !3136
  store {}* null, {}** %40, align 8, !dbg !3136
  br label %bb7, !dbg !3052

bb7:                                              ; preds = %bb22, %bb20
  %41 = bitcast i8** %_15 to {}**, !dbg !3053
  %42 = load {}*, {}** %41, align 8, !dbg !3053
  %43 = icmp eq {}* %42, null, !dbg !3053
  %_20 = select i1 %43, i64 1, i64 0, !dbg !3053
  switch i64 %_20, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !3053

bb9:                                              ; preds = %bb7
  unreachable, !dbg !3053

bb8:                                              ; preds = %bb7
  %val = load i8*, i8** %_15, align 8, !dbg !3053, !nonnull !19, !noundef !19
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !3053
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !2983, metadata !DIExpression()), !dbg !3211
  store i8* %val, i8** %ptr.dbg.spill, align 8, !dbg !3211
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2966, metadata !DIExpression()), !dbg !3212
  store i8* %val, i8** %data.dbg.spill, align 8, !dbg !3213
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !3214, metadata !DIExpression()), !dbg !3219
  store i64 %_4, i64* %len.dbg.spill, align 8, !dbg !3221
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3218, metadata !DIExpression()), !dbg !3219
  store i8* %val, i8** %self.dbg.spill21, align 8, !dbg !3219
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill21, metadata !3222, metadata !DIExpression()), !dbg !3226
  store i8* %val, i8** %data.dbg.spill22, align 8, !dbg !3226
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill22, metadata !3228, metadata !DIExpression()), !dbg !3239
  store i64 %_4, i64* %len.dbg.spill23, align 8, !dbg !3219
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill23, metadata !3238, metadata !DIExpression()), !dbg !3239
  store i8* %val, i8** %self.dbg.spill24, align 8, !dbg !3239
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill24, metadata !3241, metadata !DIExpression()), !dbg !3247
  %data_address = bitcast i8* %val to {}*, !dbg !3247
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !3247
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !3249, metadata !DIExpression()), !dbg !3256
  store i64 %_4, i64* %metadata.dbg.spill, align 8, !dbg !3239
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !3255, metadata !DIExpression()), !dbg !3256
  %44 = bitcast { i8*, i64 }* %_94 to {}**, !dbg !3256
  store {}* %data_address, {}** %44, align 8, !dbg !3256
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 1, !dbg !3256
  store i64 %_4, i64* %45, align 8, !dbg !3256
  %46 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_93 to { i8*, i64 }*, !dbg !3256
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 0, !dbg !3256
  %48 = load i8*, i8** %47, align 8, !dbg !3256
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 1, !dbg !3256
  %50 = load i64, i64* %49, align 8, !dbg !3256
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 0, !dbg !3256
  store i8* %48, i8** %51, align 8, !dbg !3256
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 1, !dbg !3256
  store i64 %50, i64* %52, align 8, !dbg !3256
  %53 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_93 to { [0 x i8]*, i64 }*, !dbg !3256
  %54 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 0, !dbg !3256
  %ptr.0 = load [0 x i8]*, [0 x i8]** %54, align 8, !dbg !3256
  %55 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 1, !dbg !3256
  %ptr.1 = load i64, i64* %55, align 8, !dbg !3256
  %56 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill25, i32 0, i32 0, !dbg !3256
  store [0 x i8]* %ptr.0, [0 x i8]** %56, align 8, !dbg !3256
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill25, i32 0, i32 1, !dbg !3256
  store i64 %ptr.1, i64* %57, align 8, !dbg !3256
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill25, metadata !3258, metadata !DIExpression()), !dbg !3264
  %58 = bitcast { i8*, i64 }* %_24 to { [0 x i8]*, i64 }*, !dbg !3264
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 0, !dbg !3264
  store [0 x i8]* %ptr.0, [0 x i8]** %59, align 8, !dbg !3264
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 1, !dbg !3264
  store i64 %ptr.1, i64* %60, align 8, !dbg !3264
  %61 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 0, !dbg !3266
  %62 = load i8*, i8** %61, align 8, !dbg !3266, !nonnull !19, !noundef !19
  %63 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !3266
  %64 = load i64, i64* %63, align 8, !dbg !3266
  %65 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !3266
  store i8* %62, i8** %65, align 8, !dbg !3266
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !3266
  store i64 %64, i64* %66, align 8, !dbg !3266
  br label %bb11, !dbg !3267

bb10:                                             ; preds = %bb7
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2fbee86a55f307ceE"(), !dbg !3137
  br label %bb23, !dbg !3137

bb23:                                             ; preds = %bb10
  %67 = bitcast { i8*, i64 }* %3 to {}**, !dbg !3137
  store {}* null, {}** %67, align 8, !dbg !3137
  br label %bb12, !dbg !3268

bb12:                                             ; preds = %bb11, %bb23
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !3268
  %69 = load i8*, i8** %68, align 8, !dbg !3268
  %70 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !3268
  %71 = load i64, i64* %70, align 8, !dbg !3268
  %72 = insertvalue { i8*, i64 } undef, i8* %69, 0, !dbg !3268
  %73 = insertvalue { i8*, i64 } %72, i64 %71, 1, !dbg !3268
  ret { i8*, i64 } %73, !dbg !3268

bb11:                                             ; preds = %bb13, %bb8
  br label %bb12, !dbg !3268

bb13:                                             ; preds = %bb2
  store i8* %ptr, i8** %data, align 8, !dbg !3168
  %self30 = load i8*, i8** %data, align 8, !dbg !2995, !nonnull !19, !noundef !19
  store i8* %self30, i8** %self.dbg.spill31, align 8, !dbg !2995
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill31, metadata !3269, metadata !DIExpression()), !dbg !3273
  store i8* %self30, i8** %data.dbg.spill32, align 8, !dbg !3273
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill32, metadata !3275, metadata !DIExpression()), !dbg !3280
  store i8* %self30, i8** %self.dbg.spill33, align 8, !dbg !3280
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill33, metadata !3282, metadata !DIExpression()), !dbg !3286
  %data_address34 = bitcast i8* %self30 to {}*, !dbg !3286
  store {}* %data_address34, {}** %data_address.dbg.spill35, align 8, !dbg !3286
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill35, metadata !3288, metadata !DIExpression()), !dbg !3293
  %74 = bitcast { i8*, i64 }* %_51 to {}**, !dbg !3293
  store {}* %data_address34, {}** %74, align 8, !dbg !3293
  %75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 1, !dbg !3293
  store i64 0, i64* %75, align 8, !dbg !3293
  %76 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_50 to { i8*, i64 }*, !dbg !3293
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 0, !dbg !3293
  %78 = load i8*, i8** %77, align 8, !dbg !3293
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 1, !dbg !3293
  %80 = load i64, i64* %79, align 8, !dbg !3293
  %81 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %76, i32 0, i32 0, !dbg !3293
  store i8* %78, i8** %81, align 8, !dbg !3293
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %76, i32 0, i32 1, !dbg !3293
  store i64 %80, i64* %82, align 8, !dbg !3293
  %83 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_50 to { [0 x i8]*, i64 }*, !dbg !3293
  %84 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %83, i32 0, i32 0, !dbg !3293
  %ptr.036 = load [0 x i8]*, [0 x i8]** %84, align 8, !dbg !3293
  %85 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %83, i32 0, i32 1, !dbg !3293
  %ptr.137 = load i64, i64* %85, align 8, !dbg !3293
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill38, i32 0, i32 0, !dbg !3293
  store [0 x i8]* %ptr.036, [0 x i8]** %86, align 8, !dbg !3293
  %87 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill38, i32 0, i32 1, !dbg !3293
  store i64 %ptr.137, i64* %87, align 8, !dbg !3293
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill38, metadata !3295, metadata !DIExpression()), !dbg !3299
  %88 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*, !dbg !3299
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 0, !dbg !3299
  store [0 x i8]* %ptr.036, [0 x i8]** %89, align 8, !dbg !3299
  %90 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 1, !dbg !3299
  store i64 %ptr.137, i64* %90, align 8, !dbg !3299
  %91 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !3301
  %92 = load i8*, i8** %91, align 8, !dbg !3301, !nonnull !19, !noundef !19
  %93 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !3301
  %94 = load i64, i64* %93, align 8, !dbg !3301
  %95 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !3301
  store i8* %92, i8** %95, align 8, !dbg !3301
  %96 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !3301
  store i64 %94, i64* %96, align 8, !dbg !3301
  br label %bb11, !dbg !3302
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h09b2f7ca3556491fE(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #0 !dbg !3303 {
start:
  %count.dbg.spill54 = alloca i64, align 8
  %dst.dbg.spill53 = alloca i8*, align 8
  %ptr.dbg.spill52 = alloca i8*, align 8
  %self.dbg.spill50 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill49 = alloca { i8*, i64 }, align 8
  %self.dbg.spill48 = alloca { i8*, i64 }, align 8
  %self.dbg.spill47 = alloca { i8*, i64 }, align 8
  %src.dbg.spill = alloca i8*, align 8
  %self.dbg.spill46 = alloca i8*, align 8
  %new_ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill45 = alloca { i8*, i64 }, align 8
  %v.dbg.spill44 = alloca { i8*, i64 }, align 8
  %old_size.dbg.spill43 = alloca i64, align 8
  %ptr.dbg.spill42 = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill41 = alloca i8*, align 8
  %len.dbg.spill40 = alloca i64, align 8
  %data.dbg.spill39 = alloca i8*, align 8
  %self.dbg.spill38 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %count.dbg.spill37 = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %count.dbg.spill36 = alloca i64, align 8
  %self.dbg.spill35 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %count.dbg.spill34 = alloca i64, align 8
  %self.dbg.spill33 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill32 = alloca i8*, align 8
  %ptr.dbg.spill31 = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill30 = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %raw_ptr.dbg.spill = alloca i8*, align 8
  %n.dbg.spill28 = alloca i64, align 8
  %self.dbg.spill27 = alloca { i64, i64 }*, align 8
  %self.dbg.spill26 = alloca { i64, i64 }*, align 8
  %new_size.dbg.spill25 = alloca i64, align 8
  %ptr.dbg.spill24 = alloca i8*, align 8
  %self.dbg.spill23 = alloca i8*, align 8
  %self.dbg.spill22 = alloca { i64, i64 }*, align 8
  %new_size.dbg.spill = alloca i64, align 8
  %self.dbg.spill21 = alloca { i64, i64 }*, align 8
  %old_size.dbg.spill = alloca i64, align 8
  %n.dbg.spill20 = alloca i64, align 8
  %self.dbg.spill19 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill18 = alloca { i64, i64 }*, align 8
  %self.dbg.spill17 = alloca { i64, i64 }*, align 8
  %e.dbg.spill15 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill14 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill13 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %residual.dbg.spill6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill5 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill3 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]", align 8
  %self16 = alloca i8*, align 8
  %_135 = alloca { i8*, i64 }, align 8
  %_134 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self12 = alloca i64, align 8
  %self11 = alloca i64, align 8
  %self10 = alloca i64, align 8
  %self9 = alloca i64, align 8
  %self8 = alloca i64, align 8
  %self7 = alloca i64, align 8
  %self4 = alloca { i8*, i64 }, align 8
  %_55 = alloca { i8*, i64 }, align 8
  %_50 = alloca { i8*, i64 }, align 8
  %self2 = alloca i8*, align 8
  %self1 = alloca i8*, align 8
  %_33 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %5 = alloca { i8*, i64 }, align 8
  %new_layout = alloca { i64, i64 }, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %3, i64* %9, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !3307, metadata !DIExpression()), !dbg !3333
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3308, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !3309, metadata !DIExpression()), !dbg !3335
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !3310, metadata !DIExpression()), !dbg !3336
  %10 = zext i1 %zeroed to i8
  store i8 %10, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !3311, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !3338, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.declare(metadata i8** %self1, metadata !3347, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.declare(metadata i8** %self2, metadata !3359, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %err.dbg.spill, metadata !3363, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !3321, metadata !DIExpression()), !dbg !3368
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill3, metadata !3369, metadata !DIExpression()), !dbg !3376
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self4, metadata !3378, metadata !DIExpression()), !dbg !3405
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill5, metadata !3329, metadata !DIExpression()), !dbg !3407
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill6, metadata !3408, metadata !DIExpression()), !dbg !3415
  call void @llvm.dbg.declare(metadata i64* %self7, metadata !3417, metadata !DIExpression()), !dbg !3421
  call void @llvm.dbg.declare(metadata i64* %self8, metadata !3428, metadata !DIExpression()), !dbg !3432
  call void @llvm.dbg.declare(metadata i64* %self9, metadata !3433, metadata !DIExpression()), !dbg !3437
  call void @llvm.dbg.declare(metadata i64* %self10, metadata !3444, metadata !DIExpression()), !dbg !3448
  call void @llvm.dbg.declare(metadata i64* %self11, metadata !3449, metadata !DIExpression()), !dbg !3453
  call void @llvm.dbg.declare(metadata i64* %self12, metadata !3460, metadata !DIExpression()), !dbg !3464
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !3354, metadata !DIExpression()), !dbg !3465
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill13, metadata !3373, metadata !DIExpression()), !dbg !3466
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill14, metadata !3402, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill15, metadata !3412, metadata !DIExpression()), !dbg !3468
  call void @llvm.dbg.declare(metadata i8** %self16, metadata !3469, metadata !DIExpression()), !dbg !3473
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]"* %runtime, metadata !3482, metadata !DIExpression()), !dbg !3491
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill17, align 8, !dbg !3493
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill17, metadata !3494, metadata !DIExpression()), !dbg !3498
  %11 = bitcast { i64, i64 }* %old_layout to i64*, !dbg !3498
  %_8 = load i64, i64* %11, align 8, !dbg !3498
  %12 = icmp eq i64 %_8, 0, !dbg !3499
  br i1 %12, label %bb1, label %bb3, !dbg !3499

bb1:                                              ; preds = %start
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !3500
  %_11.0 = load i64, i64* %13, align 8, !dbg !3500
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3500
  %_11.1 = load i64, i64* %14, align 8, !dbg !3500, !range !1308, !noundef !19
; call alloc::alloc::Global::alloc_impl
  %15 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hc2fbb81af54cdef1E(%"alloc::alloc::Global"* align 1 %self, i64 %_11.0, i64 %_11.1, i1 zeroext %zeroed), !dbg !3501
  store { i8*, i64 } %15, { i8*, i64 }* %5, align 8, !dbg !3501
  br label %bb2, !dbg !3501

bb3:                                              ; preds = %start
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill18, align 8, !dbg !3427
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill18, metadata !3425, metadata !DIExpression()), !dbg !3502
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !3502
  %17 = load i64, i64* %16, align 8, !dbg !3502, !range !1308, !noundef !19
  store i64 %17, i64* %self8, align 8, !dbg !3502
  %_78 = load i64, i64* %self8, align 8, !dbg !3432, !range !1308, !noundef !19
  store i64 %_78, i64* %n.dbg.spill, align 8, !dbg !3432
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3503, metadata !DIExpression()), !dbg !3510
  store i64 %_78, i64* %self7, align 8, !dbg !3510
  %_16 = load i64, i64* %self7, align 8, !dbg !3421
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill19, align 8, !dbg !3443
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill19, metadata !3441, metadata !DIExpression()), !dbg !3512
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3512
  %19 = load i64, i64* %18, align 8, !dbg !3512, !range !1308, !noundef !19
  store i64 %19, i64* %self10, align 8, !dbg !3512
  %_84 = load i64, i64* %self10, align 8, !dbg !3448, !range !1308, !noundef !19
  store i64 %_84, i64* %n.dbg.spill20, align 8, !dbg !3448
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill20, metadata !3513, metadata !DIExpression()), !dbg !3520
  store i64 %_84, i64* %self9, align 8, !dbg !3520
  %_18 = load i64, i64* %self9, align 8, !dbg !3437
  %_15 = icmp eq i64 %_16, %_18, !dbg !3427
  br i1 %_15, label %bb4, label %bb5, !dbg !3427

bb5:                                              ; preds = %bb3
  store i64 %_8, i64* %old_size.dbg.spill43, align 8, !dbg !3522
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill43, metadata !3325, metadata !DIExpression()), !dbg !3523
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !3524
  %_58.0 = load i64, i64* %20, align 8, !dbg !3524
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3524
  %_58.1 = load i64, i64* %21, align 8, !dbg !3524, !range !1308, !noundef !19
; call alloc::alloc::Global::alloc_impl
  %22 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hc2fbb81af54cdef1E(%"alloc::alloc::Global"* align 1 %self, i64 %_58.0, i64 %_58.1, i1 zeroext %zeroed), !dbg !3406
  store { i8*, i64 } %22, { i8*, i64 }* %self4, align 8, !dbg !3406
  br label %bb14, !dbg !3406

bb4:                                              ; preds = %bb3
  store i64 %_8, i64* %old_size.dbg.spill, align 8, !dbg !3525
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill, metadata !3312, metadata !DIExpression()), !dbg !3526
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill21, align 8, !dbg !3527
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill21, metadata !3528, metadata !DIExpression()), !dbg !3532
  %23 = bitcast { i64, i64 }* %new_layout to i64*, !dbg !3532
  %new_size = load i64, i64* %23, align 8, !dbg !3532
  store i64 %new_size, i64* %new_size.dbg.spill, align 8, !dbg !3532
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill, metadata !3315, metadata !DIExpression()), !dbg !3533
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill22, align 8, !dbg !3534
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill22, metadata !3535, metadata !DIExpression()), !dbg !3539
  %24 = bitcast { i64, i64 }* %old_layout to i64*, !dbg !3539
  %_25 = load i64, i64* %24, align 8, !dbg !3539
  %_23 = icmp uge i64 %new_size, %_25, !dbg !3540
  call void @llvm.assume(i1 %_23), !dbg !3541
  br label %bb6, !dbg !3541

bb6:                                              ; preds = %bb4
  store i8* %ptr, i8** %self.dbg.spill23, align 8, !dbg !3542
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill23, metadata !3543, metadata !DIExpression()), !dbg !3547
  store i8* %ptr, i8** %ptr.dbg.spill24, align 8, !dbg !3547
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill24, metadata !3343, metadata !DIExpression()), !dbg !3345
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !3548
  %26 = load i64, i64* %25, align 8, !dbg !3548
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !3548
  %28 = load i64, i64* %27, align 8, !dbg !3548, !range !1308, !noundef !19
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !3548
  store i64 %26, i64* %29, align 8, !dbg !3548
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3548
  store i64 %28, i64* %30, align 8, !dbg !3548
  store i64 %new_size, i64* %new_size.dbg.spill25, align 8, !dbg !3549
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill25, metadata !3344, metadata !DIExpression()), !dbg !3345
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill26, align 8, !dbg !3345
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill26, metadata !3550, metadata !DIExpression()), !dbg !3554
  %31 = bitcast { i64, i64 }* %layout to i64*, !dbg !3554
  %_89 = load i64, i64* %31, align 8, !dbg !3554
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill27, align 8, !dbg !3345
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill27, metadata !3457, metadata !DIExpression()), !dbg !3556
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3556
  %33 = load i64, i64* %32, align 8, !dbg !3556, !range !1308, !noundef !19
  store i64 %33, i64* %self12, align 8, !dbg !3556
  %_97 = load i64, i64* %self12, align 8, !dbg !3464, !range !1308, !noundef !19
  store i64 %_97, i64* %n.dbg.spill28, align 8, !dbg !3464
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill28, metadata !3557, metadata !DIExpression()), !dbg !3564
  store i64 %_97, i64* %self11, align 8, !dbg !3564
  %_91 = load i64, i64* %self11, align 8, !dbg !3453
  %raw_ptr = call i8* @__rust_realloc(i8* %ptr, i64 %_89, i64 %_91, i64 %new_size) #17, !dbg !3345
  store i8* %raw_ptr, i8** %raw_ptr.dbg.spill, align 8, !dbg !3345
  call void @llvm.dbg.declare(metadata i8** %raw_ptr.dbg.spill, metadata !3317, metadata !DIExpression()), !dbg !3566
  br label %bb23, !dbg !3345

bb23:                                             ; preds = %bb6
; call core::ptr::non_null::NonNull<T>::new
  %34 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hc5605095dafcae08E"(i8* %raw_ptr), !dbg !3358
  store i8* %34, i8** %self2, align 8, !dbg !3358
  br label %bb7, !dbg !3358

bb7:                                              ; preds = %bb23
  %35 = bitcast i8** %self2 to {}**, !dbg !3367
  %36 = load {}*, {}** %35, align 8, !dbg !3367
  %37 = icmp eq {}* %36, null, !dbg !3367
  %_100 = select i1 %37, i64 0, i64 1, !dbg !3367
  switch i64 %_100, label %bb25 [
    i64 0, label %bb24
    i64 1, label %bb26
  ], !dbg !3367

bb25:                                             ; preds = %bb7
  unreachable, !dbg !3367

bb24:                                             ; preds = %bb7
  %38 = bitcast i8** %self1 to {}**, !dbg !3367
  store {}* null, {}** %38, align 8, !dbg !3367
  br label %bb27, !dbg !3367

bb26:                                             ; preds = %bb7
  %v = load i8*, i8** %self2, align 8, !dbg !3367, !nonnull !19, !noundef !19
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !3367
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !3364, metadata !DIExpression()), !dbg !3567
  store i8* %v, i8** %self1, align 8, !dbg !3567
  br label %bb27, !dbg !3367

bb27:                                             ; preds = %bb24, %bb26
  %39 = bitcast i8** %self1 to {}**, !dbg !3357
  %40 = load {}*, {}** %39, align 8, !dbg !3357
  %41 = icmp eq {}* %40, null, !dbg !3357
  %_103 = select i1 %41, i64 1, i64 0, !dbg !3357
  switch i64 %_103, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ], !dbg !3357

bb29:                                             ; preds = %bb27
  unreachable, !dbg !3357

bb30:                                             ; preds = %bb27
  %v29 = load i8*, i8** %self1, align 8, !dbg !3357, !nonnull !19, !noundef !19
  store i8* %v29, i8** %v.dbg.spill30, align 8, !dbg !3357
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill30, metadata !3351, metadata !DIExpression()), !dbg !3568
  store i8* %v29, i8** %_33, align 8, !dbg !3568
  br label %bb8, !dbg !3357

bb28:                                             ; preds = %bb27
  %42 = bitcast i8** %_33 to {}**, !dbg !3465
  store {}* null, {}** %42, align 8, !dbg !3465
  br label %bb8, !dbg !3357

bb8:                                              ; preds = %bb30, %bb28
  %43 = bitcast i8** %_33 to {}**, !dbg !3358
  %44 = load {}*, {}** %43, align 8, !dbg !3358
  %45 = icmp eq {}* %44, null, !dbg !3358
  %_38 = select i1 %45, i64 1, i64 0, !dbg !3358
  switch i64 %_38, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ], !dbg !3358

bb10:                                             ; preds = %bb8
  unreachable, !dbg !3358

bb9:                                              ; preds = %bb8
  %val = load i8*, i8** %_33, align 8, !dbg !3358, !nonnull !19, !noundef !19
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !3358
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !3323, metadata !DIExpression()), !dbg !3569
  store i8* %val, i8** %ptr.dbg.spill31, align 8, !dbg !3569
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill31, metadata !3319, metadata !DIExpression()), !dbg !3570
  br i1 %zeroed, label %bb12, label %bb13, !dbg !3571

bb11:                                             ; preds = %bb8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2fbee86a55f307ceE"(), !dbg !3466
  br label %bb31, !dbg !3466

bb31:                                             ; preds = %bb11
  %46 = bitcast { i8*, i64 }* %5 to {}**, !dbg !3466
  store {}* null, {}** %46, align 8, !dbg !3466
  br label %bb21, !dbg !3572

bb21:                                             ; preds = %bb37, %bb31
  br label %bb22, !dbg !3575

bb13:                                             ; preds = %bb33, %bb9
  store i8* %val, i8** %data.dbg.spill, align 8, !dbg !3576
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !3577, metadata !DIExpression()), !dbg !3582
  store i64 %new_size, i64* %len.dbg.spill, align 8, !dbg !3584
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3581, metadata !DIExpression()), !dbg !3582
  store i8* %val, i8** %self.dbg.spill38, align 8, !dbg !3582
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill38, metadata !3585, metadata !DIExpression()), !dbg !3589
  store i8* %val, i8** %data.dbg.spill39, align 8, !dbg !3589
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill39, metadata !3591, metadata !DIExpression()), !dbg !3596
  store i64 %new_size, i64* %len.dbg.spill40, align 8, !dbg !3582
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill40, metadata !3595, metadata !DIExpression()), !dbg !3596
  store i8* %val, i8** %self.dbg.spill41, align 8, !dbg !3596
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill41, metadata !3598, metadata !DIExpression()), !dbg !3602
  %data_address = bitcast i8* %val to {}*, !dbg !3602
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !3602
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !3604, metadata !DIExpression()), !dbg !3609
  store i64 %new_size, i64* %metadata.dbg.spill, align 8, !dbg !3596
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !3608, metadata !DIExpression()), !dbg !3609
  %47 = bitcast { i8*, i64 }* %_135 to {}**, !dbg !3609
  store {}* %data_address, {}** %47, align 8, !dbg !3609
  %48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 1, !dbg !3609
  store i64 %new_size, i64* %48, align 8, !dbg !3609
  %49 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_134 to { i8*, i64 }*, !dbg !3609
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 0, !dbg !3609
  %51 = load i8*, i8** %50, align 8, !dbg !3609
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 1, !dbg !3609
  %53 = load i64, i64* %52, align 8, !dbg !3609
  %54 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %49, i32 0, i32 0, !dbg !3609
  store i8* %51, i8** %54, align 8, !dbg !3609
  %55 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %49, i32 0, i32 1, !dbg !3609
  store i64 %53, i64* %55, align 8, !dbg !3609
  %56 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_134 to { [0 x i8]*, i64 }*, !dbg !3609
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 0, !dbg !3609
  %ptr.0 = load [0 x i8]*, [0 x i8]** %57, align 8, !dbg !3609
  %58 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 1, !dbg !3609
  %ptr.1 = load i64, i64* %58, align 8, !dbg !3609
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill42, i32 0, i32 0, !dbg !3609
  store [0 x i8]* %ptr.0, [0 x i8]** %59, align 8, !dbg !3609
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill42, i32 0, i32 1, !dbg !3609
  store i64 %ptr.1, i64* %60, align 8, !dbg !3609
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill42, metadata !3611, metadata !DIExpression()), !dbg !3615
  %61 = bitcast { i8*, i64 }* %_50 to { [0 x i8]*, i64 }*, !dbg !3615
  %62 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 0, !dbg !3615
  store [0 x i8]* %ptr.0, [0 x i8]** %62, align 8, !dbg !3615
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 1, !dbg !3615
  store i64 %ptr.1, i64* %63, align 8, !dbg !3615
  %64 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_50, i32 0, i32 0, !dbg !3617
  %65 = load i8*, i8** %64, align 8, !dbg !3617, !nonnull !19, !noundef !19
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_50, i32 0, i32 1, !dbg !3617
  %67 = load i64, i64* %66, align 8, !dbg !3617
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !3617
  store i8* %65, i8** %68, align 8, !dbg !3617
  %69 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !3617
  store i64 %67, i64* %69, align 8, !dbg !3617
  br label %bb20, !dbg !3618

bb12:                                             ; preds = %bb9
  store i8* %raw_ptr, i8** %self.dbg.spill32, align 8, !dbg !3619
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill32, metadata !3620, metadata !DIExpression()), !dbg !3625
  store i64 %_8, i64* %count.dbg.spill, align 8, !dbg !3626
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !3624, metadata !DIExpression()), !dbg !3625
  store i8* %raw_ptr, i8** %self.dbg.spill33, align 8, !dbg !3625
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill33, metadata !3627, metadata !DIExpression()), !dbg !3632
  store i64 %_8, i64* %count.dbg.spill34, align 8, !dbg !3625
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill34, metadata !3631, metadata !DIExpression()), !dbg !3632
  %70 = getelementptr inbounds i8, i8* %raw_ptr, i64 %_8, !dbg !3632
  store i8* %70, i8** %4, align 8, !dbg !3632
  %_113 = load i8*, i8** %4, align 8, !dbg !3632
  br label %bb32, !dbg !3632

bb32:                                             ; preds = %bb12
  store i8* %_113, i8** %self.dbg.spill35, align 8, !dbg !3632
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill35, metadata !3634, metadata !DIExpression()), !dbg !3642
  %count = sub i64 %new_size, %_8, !dbg !3643
  store i64 %count, i64* %count.dbg.spill36, align 8, !dbg !3643
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill36, metadata !3641, metadata !DIExpression()), !dbg !3642
  store i8* %_113, i8** %dst.dbg.spill, align 8, !dbg !3642
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !3644, metadata !DIExpression()), !dbg !3657
  store i64 %count, i64* %count.dbg.spill37, align 8, !dbg !3642
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill37, metadata !3649, metadata !DIExpression()), !dbg !3657
  %71 = mul i64 1, %count, !dbg !3657
  call void @llvm.memset.p0i8.i64(i8* align 1 %_113, i8 0, i64 %71, i1 false), !dbg !3657
  br label %bb33, !dbg !3657

bb33:                                             ; preds = %bb32
  br label %bb13, !dbg !3659

bb20:                                             ; preds = %bb2, %bb19, %bb13
  br label %bb22, !dbg !3575

bb14:                                             ; preds = %bb5
  %72 = bitcast { i8*, i64 }* %self4 to {}**, !dbg !3405
  %73 = load {}*, {}** %72, align 8, !dbg !3405
  %74 = icmp eq {}* %73, null, !dbg !3405
  %_142 = select i1 %74, i64 1, i64 0, !dbg !3405
  switch i64 %_142, label %bb35 [
    i64 0, label %bb36
    i64 1, label %bb34
  ], !dbg !3405

bb35:                                             ; preds = %bb14
  unreachable, !dbg !3405

bb36:                                             ; preds = %bb14
  %75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self4, i32 0, i32 0, !dbg !3405
  %v.0 = load i8*, i8** %75, align 8, !dbg !3405, !nonnull !19, !noundef !19
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self4, i32 0, i32 1, !dbg !3405
  %v.1 = load i64, i64* %76, align 8, !dbg !3405
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill44, i32 0, i32 0, !dbg !3405
  store i8* %v.0, i8** %77, align 8, !dbg !3405
  %78 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill44, i32 0, i32 1, !dbg !3405
  store i64 %v.1, i64* %78, align 8, !dbg !3405
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill44, metadata !3399, metadata !DIExpression()), !dbg !3660
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 0, !dbg !3660
  store i8* %v.0, i8** %79, align 8, !dbg !3660
  %80 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 1, !dbg !3660
  store i64 %v.1, i64* %80, align 8, !dbg !3660
  br label %bb15, !dbg !3405

bb34:                                             ; preds = %bb14
  %81 = bitcast { i8*, i64 }* %_55 to {}**, !dbg !3467
  store {}* null, {}** %81, align 8, !dbg !3467
  br label %bb15, !dbg !3405

bb15:                                             ; preds = %bb36, %bb34
  %82 = bitcast { i8*, i64 }* %_55 to {}**, !dbg !3406
  %83 = load {}*, {}** %82, align 8, !dbg !3406
  %84 = icmp eq {}* %83, null, !dbg !3406
  %_60 = select i1 %84, i64 1, i64 0, !dbg !3406
  switch i64 %_60, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ], !dbg !3406

bb17:                                             ; preds = %bb15
  unreachable, !dbg !3406

bb16:                                             ; preds = %bb15
  %85 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 0, !dbg !3406
  %val.0 = load i8*, i8** %85, align 8, !dbg !3406, !nonnull !19, !noundef !19
  %86 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 1, !dbg !3406
  %val.1 = load i64, i64* %86, align 8, !dbg !3406
  %87 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill45, i32 0, i32 0, !dbg !3406
  store i8* %val.0, i8** %87, align 8, !dbg !3406
  %88 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill45, i32 0, i32 1, !dbg !3406
  store i64 %val.1, i64* %88, align 8, !dbg !3406
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill45, metadata !3331, metadata !DIExpression()), !dbg !3661
  %89 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 0, !dbg !3661
  store i8* %val.0, i8** %89, align 8, !dbg !3661
  %90 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 1, !dbg !3661
  store i64 %val.1, i64* %90, align 8, !dbg !3661
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %new_ptr.dbg.spill, metadata !3327, metadata !DIExpression()), !dbg !3662
  store i8* %ptr, i8** %self.dbg.spill46, align 8, !dbg !3663
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill46, metadata !3664, metadata !DIExpression()), !dbg !3668
  store i8* %ptr, i8** %src.dbg.spill, align 8, !dbg !3663
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill, metadata !3487, metadata !DIExpression()), !dbg !3669
  %91 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill47, i32 0, i32 0, !dbg !3481
  store i8* %val.0, i8** %91, align 8, !dbg !3481
  %92 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill47, i32 0, i32 1, !dbg !3481
  store i64 %val.1, i64* %92, align 8, !dbg !3481
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill47, metadata !3479, metadata !DIExpression()), !dbg !3670
  %93 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill48, i32 0, i32 0, !dbg !3670
  store i8* %val.0, i8** %93, align 8, !dbg !3670
  %94 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill48, i32 0, i32 1, !dbg !3670
  store i64 %val.1, i64* %94, align 8, !dbg !3670
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill48, metadata !3671, metadata !DIExpression()), !dbg !3677
  %95 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill49, i32 0, i32 0, !dbg !3677
  store i8* %val.0, i8** %95, align 8, !dbg !3677
  %96 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill49, i32 0, i32 1, !dbg !3677
  store i64 %val.1, i64* %96, align 8, !dbg !3677
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill49, metadata !3678, metadata !DIExpression()), !dbg !3684
  %_155.0 = bitcast i8* %val.0 to [0 x i8]*, !dbg !3684
  %97 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill50, i32 0, i32 0, !dbg !3684
  store [0 x i8]* %_155.0, [0 x i8]** %97, align 8, !dbg !3684
  %98 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill50, i32 0, i32 1, !dbg !3684
  store i64 %val.1, i64* %98, align 8, !dbg !3684
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill50, metadata !3686, metadata !DIExpression()), !dbg !3693
  %ptr51 = bitcast [0 x i8]* %_155.0 to i8*, !dbg !3693
  store i8* %ptr51, i8** %ptr.dbg.spill52, align 8, !dbg !3693
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill52, metadata !3694, metadata !DIExpression()), !dbg !3698
  store i8* %ptr51, i8** %self16, align 8, !dbg !3698
  %_160 = load i8*, i8** %self16, align 8, !dbg !3473
  store i8* %_160, i8** %dst.dbg.spill53, align 8, !dbg !3473
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill53, metadata !3489, metadata !DIExpression()), !dbg !3669
  store i64 %_8, i64* %count.dbg.spill54, align 8, !dbg !3700
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill54, metadata !3490, metadata !DIExpression()), !dbg !3669
  %99 = mul i64 %_8, 1, !dbg !3669
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %_160, i8* align 1 %ptr, i64 %99, i1 false), !dbg !3669
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !3701
  %_73.0 = load i64, i64* %100, align 8, !dbg !3701
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !3701
  %_73.1 = load i64, i64* %101, align 8, !dbg !3701, !range !1308, !noundef !19
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h10f1cbbb1fbc68f3E"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %_73.0, i64 %_73.1), !dbg !3702
  br label %bb19, !dbg !3702

bb18:                                             ; preds = %bb15
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2fbee86a55f307ceE"(), !dbg !3468
  br label %bb37, !dbg !3468

bb37:                                             ; preds = %bb18
  %102 = bitcast { i8*, i64 }* %5 to {}**, !dbg !3468
  store {}* null, {}** %102, align 8, !dbg !3468
  br label %bb21, !dbg !3572

bb22:                                             ; preds = %bb20, %bb21
  %103 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !3575
  %104 = load i8*, i8** %103, align 8, !dbg !3575
  %105 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !3575
  %106 = load i64, i64* %105, align 8, !dbg !3575
  %107 = insertvalue { i8*, i64 } undef, i8* %104, 0, !dbg !3575
  %108 = insertvalue { i8*, i64 } %107, i64 %106, 1, !dbg !3575
  ret { i8*, i64 } %108, !dbg !3575

bb19:                                             ; preds = %bb16
  %109 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !3703
  store i8* %val.0, i8** %109, align 8, !dbg !3703
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !3703
  store i64 %val.1, i64* %110, align 8, !dbg !3703
  br label %bb20, !dbg !3704

bb2:                                              ; preds = %bb1
  br label %bb20, !dbg !3705
}

; alloc::string::<impl core::convert::From<alloc::string::String> for alloc::borrow::Cow<str>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc6string108_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..borrow..Cow$LT$str$GT$$GT$4from17h14dc4de5d838698fE"(%"alloc::borrow::Cow<str>"* sret(%"alloc::borrow::Cow<str>") %0, %"alloc::string::String"* %s) unnamed_addr #0 !dbg !3706 {
start:
  %_2 = alloca %"alloc::string::String", align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %s, metadata !3710, metadata !DIExpression()), !dbg !3711
  %1 = bitcast %"alloc::string::String"* %_2 to i8*, !dbg !3712
  %2 = bitcast %"alloc::string::String"* %s to i8*, !dbg !3712
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !3712
  %3 = bitcast %"alloc::borrow::Cow<str>"* %0 to %"alloc::borrow::Cow<str>::Owned"*, !dbg !3713
  %4 = getelementptr inbounds %"alloc::borrow::Cow<str>::Owned", %"alloc::borrow::Cow<str>::Owned"* %3, i32 0, i32 1, !dbg !3713
  %5 = bitcast %"alloc::string::String"* %4 to i8*, !dbg !3713
  %6 = bitcast %"alloc::string::String"* %_2 to i8*, !dbg !3713
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !3713
  %7 = bitcast %"alloc::borrow::Cow<str>"* %0 to i64*, !dbg !3713
  store i64 1, i64* %7, align 8, !dbg !3713
  ret void, !dbg !3714
}

; alloc::string::String::from_utf8_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String19from_utf8_unchecked17h3c17280b4df2ae37E(%"alloc::string::String"* sret(%"alloc::string::String") %0, %"alloc::vec::Vec<u8>"* %bytes) unnamed_addr #0 !dbg !3715 {
start:
  %_2 = alloca %"alloc::vec::Vec<u8>", align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %bytes, metadata !3719, metadata !DIExpression()), !dbg !3720
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_2 to i8*, !dbg !3721
  %2 = bitcast %"alloc::vec::Vec<u8>"* %bytes to i8*, !dbg !3721
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !3721
  %3 = bitcast %"alloc::string::String"* %0 to %"alloc::vec::Vec<u8>"*, !dbg !3722
  %4 = bitcast %"alloc::vec::Vec<u8>"* %3 to i8*, !dbg !3722
  %5 = bitcast %"alloc::vec::Vec<u8>"* %_2 to i8*, !dbg !3722
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !3722
  ret void, !dbg !3723
}

; alloc::string::<impl core::convert::From<&str> for alloc::borrow::Cow<str>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc6string94_$LT$impl$u20$core..convert..From$LT$$RF$str$GT$$u20$for$u20$alloc..borrow..Cow$LT$str$GT$$GT$4from17h95b3d82f164bc25bE"(%"alloc::borrow::Cow<str>"* sret(%"alloc::borrow::Cow<str>") %0, [0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #0 !dbg !3724 {
start:
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !3727, metadata !DIExpression()), !dbg !3728
  %3 = bitcast %"alloc::borrow::Cow<str>"* %0 to %"alloc::borrow::Cow<str>::Borrowed"*, !dbg !3729
  %4 = getelementptr inbounds %"alloc::borrow::Cow<str>::Borrowed", %"alloc::borrow::Cow<str>::Borrowed"* %3, i32 0, i32 1, !dbg !3729
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !3729
  store [0 x i8]* %s.0, [0 x i8]** %5, align 8, !dbg !3729
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !3729
  store i64 %s.1, i64* %6, align 8, !dbg !3729
  %7 = bitcast %"alloc::borrow::Cow<str>"* %0 to i64*, !dbg !3729
  store i64 0, i64* %7, align 8, !dbg !3729
  ret void, !dbg !3730
}

; alloc::raw_vec::finish_grow
; Function Attrs: noinline nonlazybind uwtable
define void @_ZN5alloc7raw_vec11finish_grow17h83a782e0c7d1deaeE(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, %"alloc::alloc::Global"* align 1 %alloc) unnamed_addr #2 !dbg !3731 {
start:
  %n.dbg.spill22 = alloca i64, align 8
  %self.dbg.spill21 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %e.dbg.spill20 = alloca { i64, i64 }, align 8
  %residual.dbg.spill17 = alloca { i64, i64 }, align 8
  %e.dbg.spill14 = alloca { i64, i64 }, align 8
  %val.dbg.spill11 = alloca { i64, i64 }, align 8
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill10 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill7 = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca {}, align 1
  %val.dbg.spill = alloca {}, align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %self6 = alloca i64, align 8
  %self5 = alloca i64, align 8
  %self4 = alloca i64, align 8
  %self3 = alloca i64, align 8
  %_58 = alloca { i64, i64 }, align 8
  %_52 = alloca { i64, i64 }, align 8
  %_49 = alloca { i64, i64 }, align 8
  %_43 = alloca i64*, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %memory = alloca { i8*, i64 }, align 8
  %residual2 = alloca { i64, i64 }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %self = alloca %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", align 8
  %new_layout = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !3753, metadata !DIExpression()), !dbg !3806
  call void @llvm.dbg.declare(metadata %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, metadata !3754, metadata !DIExpression()), !dbg !3807
  store %"alloc::alloc::Global"* %alloc, %"alloc::alloc::Global"** %alloc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %alloc.dbg.spill, metadata !3755, metadata !DIExpression()), !dbg !3808
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !3756, metadata !DIExpression()), !dbg !3809
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self, metadata !3810, metadata !DIExpression()), !dbg !3838
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !3840, metadata !DIExpression()), !dbg !3850
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !3852, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual2, metadata !3882, metadata !DIExpression()), !dbg !3892
  call void @llvm.dbg.declare(metadata {}* %val.dbg.spill, metadata !3790, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %memory, metadata !3792, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !3796, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.declare(metadata {}* %v.dbg.spill, metadata !3874, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.declare(metadata i64* %self3, metadata !3898, metadata !DIExpression()), !dbg !3902
  call void @llvm.dbg.declare(metadata i64* %self4, metadata !3909, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.declare(metadata i64* %self5, metadata !3914, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.declare(metadata i64* %self6, metadata !3925, metadata !DIExpression()), !dbg !3929
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hdcb1b1e7211b2039E"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") %self, i64 %new_layout.0, i64 %new_layout.1), !dbg !3839
  br label %bb1, !dbg !3839

bb1:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to i64*, !dbg !3838
  %_45 = load i64, i64* %3, align 8, !dbg !3838, !range !936, !noundef !19
  switch i64 %_45, label %bb20 [
    i64 0, label %bb21
    i64 1, label %bb19
  ], !dbg !3838

bb20:                                             ; preds = %bb1
  unreachable, !dbg !3838

bb21:                                             ; preds = %bb1
  %4 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !3838
  %5 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %4, i32 0, i32 1, !dbg !3838
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0, !dbg !3838
  %v.0 = load i64, i64* %6, align 8, !dbg !3838
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1, !dbg !3838
  %v.1 = load i64, i64* %7, align 8, !dbg !3838, !range !1308, !noundef !19
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill7, i32 0, i32 0, !dbg !3838
  store i64 %v.0, i64* %8, align 8, !dbg !3838
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill7, i32 0, i32 1, !dbg !3838
  store i64 %v.1, i64* %9, align 8, !dbg !3838
  call void @llvm.dbg.declare(metadata { i64, i64 }* %v.dbg.spill7, metadata !3832, metadata !DIExpression()), !dbg !3930
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*, !dbg !3930
  %11 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %10, i32 0, i32 1, !dbg !3930
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !3930
  store i64 %v.0, i64* %12, align 8, !dbg !3930
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !3930
  store i64 %v.1, i64* %13, align 8, !dbg !3930
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !3930
  store i64 0, i64* %14, align 8, !dbg !3930
  br label %bb2, !dbg !3838

bb19:                                             ; preds = %bb1
  %15 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !3838
  %16 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %15, i32 0, i32 1, !dbg !3838
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !3838
  %e.0 = load i64, i64* %17, align 8, !dbg !3838
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !3838
  %e.1 = load i64, i64* %18, align 8, !dbg !3838, !range !649, !noundef !19
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !3838
  store i64 %e.0, i64* %19, align 8, !dbg !3838
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !3838
  store i64 %e.1, i64* %20, align 8, !dbg !3838
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !3835, metadata !DIExpression()), !dbg !3931
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 0, !dbg !3931
  store i64 %e.0, i64* %21, align 8, !dbg !3931
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1, !dbg !3931
  store i64 %e.1, i64* %22, align 8, !dbg !3931
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*, !dbg !3931
  %24 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %23, i32 0, i32 1, !dbg !3931
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 0, !dbg !3931
  %26 = load i64, i64* %25, align 8, !dbg !3931
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1, !dbg !3931
  %28 = load i64, i64* %27, align 8, !dbg !3931, !range !649, !noundef !19
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 0, !dbg !3931
  store i64 %26, i64* %29, align 8, !dbg !3931
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 1, !dbg !3931
  store i64 %28, i64* %30, align 8, !dbg !3931
  %31 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !3931
  store i64 1, i64* %31, align 8, !dbg !3931
  br label %bb2, !dbg !3838

bb2:                                              ; preds = %bb21, %bb19
  %32 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !3839
  %_9 = load i64, i64* %32, align 8, !dbg !3839, !range !936, !noundef !19
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !3839

bb4:                                              ; preds = %bb2
  unreachable, !dbg !3839

bb3:                                              ; preds = %bb2
  %33 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*, !dbg !3839
  %34 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %33, i32 0, i32 1, !dbg !3839
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0, !dbg !3839
  %val.0 = load i64, i64* %35, align 8, !dbg !3839
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1, !dbg !3839
  %val.1 = load i64, i64* %36, align 8, !dbg !3839, !range !1308, !noundef !19
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill11, i32 0, i32 0, !dbg !3839
  store i64 %val.0, i64* %37, align 8, !dbg !3839
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill11, i32 0, i32 1, !dbg !3839
  store i64 %val.1, i64* %38, align 8, !dbg !3839
  call void @llvm.dbg.declare(metadata { i64, i64 }* %val.dbg.spill11, metadata !3773, metadata !DIExpression()), !dbg !3932
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !3932
  store i64 %val.0, i64* %39, align 8, !dbg !3932
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3932
  store i64 %val.1, i64* %40, align 8, !dbg !3932
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !3933
  store i64 -9223372036854775807, i64* %41, align 8, !dbg !3933
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !3880
  %43 = load i64, i64* %42, align 8, !dbg !3880, !range !2223, !noundef !19
  %44 = sub i64 %43, -9223372036854775807, !dbg !3880
  %45 = icmp eq i64 %44, 0, !dbg !3880
  %_55 = select i1 %45, i64 0, i64 1, !dbg !3880
  switch i64 %_55, label %bb23 [
    i64 0, label %bb24
    i64 1, label %bb22
  ], !dbg !3880

bb5:                                              ; preds = %bb2
  %46 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*, !dbg !3939
  %47 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %46, i32 0, i32 1, !dbg !3939
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %47, i32 0, i32 0, !dbg !3939
  %residual.0 = load i64, i64* %48, align 8, !dbg !3939
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %47, i32 0, i32 1, !dbg !3939
  %residual.1 = load i64, i64* %49, align 8, !dbg !3939, !range !649, !noundef !19
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !3939
  store i64 %residual.0, i64* %50, align 8, !dbg !3939
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !3939
  store i64 %residual.1, i64* %51, align 8, !dbg !3939
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !3758, metadata !DIExpression()), !dbg !3940
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !3940
  store i64 %residual.0, i64* %52, align 8, !dbg !3940
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !3940
  store i64 %residual.1, i64* %53, align 8, !dbg !3940
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !3850
  %e.08 = load i64, i64* %54, align 8, !dbg !3850
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !3850
  %e.19 = load i64, i64* %55, align 8, !dbg !3850, !range !649, !noundef !19
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill10, i32 0, i32 0, !dbg !3850
  store i64 %e.08, i64* %56, align 8, !dbg !3850
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill10, i32 0, i32 1, !dbg !3850
  store i64 %e.19, i64* %57, align 8, !dbg !3850
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill10, metadata !3846, metadata !DIExpression()), !dbg !3941
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0, !dbg !3941
  store i64 %e.08, i64* %58, align 8, !dbg !3941
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1, !dbg !3941
  store i64 %e.19, i64* %59, align 8, !dbg !3941
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !3942, metadata !DIExpression()), !dbg !3946
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 0, !dbg !3946
  store i64 %e.08, i64* %60, align 8, !dbg !3946
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 1, !dbg !3946
  store i64 %e.19, i64* %61, align 8, !dbg !3946
  %62 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !3941
  %63 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %62, i32 0, i32 1, !dbg !3941
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 0, !dbg !3941
  %65 = load i64, i64* %64, align 8, !dbg !3941
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 1, !dbg !3941
  %67 = load i64, i64* %66, align 8, !dbg !3941, !range !649, !noundef !19
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %63, i32 0, i32 0, !dbg !3941
  store i64 %65, i64* %68, align 8, !dbg !3941
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %63, i32 0, i32 1, !dbg !3941
  store i64 %67, i64* %69, align 8, !dbg !3941
  %70 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !3941
  store i64 1, i64* %70, align 8, !dbg !3941
  br label %bb17, !dbg !3948

bb17:                                             ; preds = %bb25, %bb5
  br label %bb18, !dbg !3950

bb23:                                             ; preds = %bb3
  unreachable, !dbg !3880

bb24:                                             ; preds = %bb3
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !3897
  store i64 -9223372036854775807, i64* %71, align 8, !dbg !3897
  br label %bb6, !dbg !3880

bb22:                                             ; preds = %bb3
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !3880
  %e.012 = load i64, i64* %72, align 8, !dbg !3880
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !3880
  %e.113 = load i64, i64* %73, align 8, !dbg !3880, !range !649, !noundef !19
  %74 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill14, i32 0, i32 0, !dbg !3880
  store i64 %e.012, i64* %74, align 8, !dbg !3880
  %75 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill14, i32 0, i32 1, !dbg !3880
  store i64 %e.113, i64* %75, align 8, !dbg !3880
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill14, metadata !3877, metadata !DIExpression()), !dbg !3951
  %76 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 0, !dbg !3951
  store i64 %e.012, i64* %76, align 8, !dbg !3951
  %77 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1, !dbg !3951
  store i64 %e.113, i64* %77, align 8, !dbg !3951
  %78 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 0, !dbg !3951
  %79 = load i64, i64* %78, align 8, !dbg !3951
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1, !dbg !3951
  %81 = load i64, i64* %80, align 8, !dbg !3951, !range !649, !noundef !19
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !3951
  store i64 %79, i64* %82, align 8, !dbg !3951
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !3951
  store i64 %81, i64* %83, align 8, !dbg !3951
  br label %bb6, !dbg !3880

bb6:                                              ; preds = %bb24, %bb22
  %84 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !3881
  %85 = load i64, i64* %84, align 8, !dbg !3881, !range !2223, !noundef !19
  %86 = sub i64 %85, -9223372036854775807, !dbg !3881
  %87 = icmp eq i64 %86, 0, !dbg !3881
  %_17 = select i1 %87, i64 0, i64 1, !dbg !3881
  switch i64 %_17, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ], !dbg !3881

bb8:                                              ; preds = %bb6
  unreachable, !dbg !3881

bb7:                                              ; preds = %bb6
  %88 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, i32 0, i32 1, !dbg !3952
  %89 = load i64, i64* %88, align 8, !dbg !3952, !range !649, !noundef !19
  %90 = icmp eq i64 %89, 0, !dbg !3952
  %_22 = select i1 %90, i64 0, i64 1, !dbg !3952
  %91 = icmp eq i64 %_22, 1, !dbg !3952
  br i1 %91, label %bb11, label %bb10, !dbg !3952

bb9:                                              ; preds = %bb6
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !3953
  %residual.015 = load i64, i64* %92, align 8, !dbg !3953
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !3953
  %residual.116 = load i64, i64* %93, align 8, !dbg !3953, !range !649, !noundef !19
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill17, i32 0, i32 0, !dbg !3953
  store i64 %residual.015, i64* %94, align 8, !dbg !3953
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill17, i32 0, i32 1, !dbg !3953
  store i64 %residual.116, i64* %95, align 8, !dbg !3953
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill17, metadata !3775, metadata !DIExpression()), !dbg !3954
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 0, !dbg !3954
  store i64 %residual.015, i64* %96, align 8, !dbg !3954
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 1, !dbg !3954
  store i64 %residual.116, i64* %97, align 8, !dbg !3954
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 0, !dbg !3892
  %e.018 = load i64, i64* %98, align 8, !dbg !3892
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 1, !dbg !3892
  %e.119 = load i64, i64* %99, align 8, !dbg !3892, !range !649, !noundef !19
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill20, i32 0, i32 0, !dbg !3892
  store i64 %e.018, i64* %100, align 8, !dbg !3892
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill20, i32 0, i32 1, !dbg !3892
  store i64 %e.119, i64* %101, align 8, !dbg !3892
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill20, metadata !3888, metadata !DIExpression()), !dbg !3955
; call <T as core::convert::From<T>>::from
  %102 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha098773fc34e53f9E"(i64 %e.018, i64 %e.119), !dbg !3955
  %_61.0 = extractvalue { i64, i64 } %102, 0, !dbg !3955
  %_61.1 = extractvalue { i64, i64 } %102, 1, !dbg !3955
  br label %bb25, !dbg !3955

bb25:                                             ; preds = %bb9
  %103 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !3955
  %104 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %103, i32 0, i32 1, !dbg !3955
  %105 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %104, i32 0, i32 0, !dbg !3955
  store i64 %_61.0, i64* %105, align 8, !dbg !3955
  %106 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %104, i32 0, i32 1, !dbg !3955
  store i64 %_61.1, i64* %106, align 8, !dbg !3955
  %107 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !3955
  store i64 1, i64* %107, align 8, !dbg !3955
  br label %bb17, !dbg !3956

bb18:                                             ; preds = %bb16, %bb17
  ret void, !dbg !3950

bb11:                                             ; preds = %bb7
  %108 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !3958
  %109 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %108 to { i8*, { i64, i64 } }*, !dbg !3958
  %110 = bitcast { i8*, { i64, i64 } }* %109 to i8**, !dbg !3958
  %ptr = load i8*, i8** %110, align 8, !dbg !3958, !nonnull !19, !noundef !19
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !3958
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3794, metadata !DIExpression()), !dbg !3958
  %111 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !3896
  %112 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %111 to { i8*, { i64, i64 } }*, !dbg !3896
  %113 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %112, i32 0, i32 1, !dbg !3896
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %113, i32 0, i32 0, !dbg !3896
  %115 = load i64, i64* %114, align 8, !dbg !3896
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %113, i32 0, i32 1, !dbg !3896
  %117 = load i64, i64* %116, align 8, !dbg !3896, !range !1308, !noundef !19
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !3896
  store i64 %115, i64* %118, align 8, !dbg !3896
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !3896
  store i64 %117, i64* %119, align 8, !dbg !3896
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill, align 8, !dbg !3908
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !3906, metadata !DIExpression()), !dbg !3959
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !3959
  %121 = load i64, i64* %120, align 8, !dbg !3959, !range !1308, !noundef !19
  store i64 %121, i64* %self4, align 8, !dbg !3959
  %_74 = load i64, i64* %self4, align 8, !dbg !3913, !range !1308, !noundef !19
  store i64 %_74, i64* %n.dbg.spill, align 8, !dbg !3913
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3960, metadata !DIExpression()), !dbg !3967
  store i64 %_74, i64* %self3, align 8, !dbg !3967
  %_32 = load i64, i64* %self3, align 8, !dbg !3902
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill21, align 8, !dbg !3924
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill21, metadata !3922, metadata !DIExpression()), !dbg !3969
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3969
  %123 = load i64, i64* %122, align 8, !dbg !3969, !range !1308, !noundef !19
  store i64 %123, i64* %self6, align 8, !dbg !3969
  %_80 = load i64, i64* %self6, align 8, !dbg !3929, !range !1308, !noundef !19
  store i64 %_80, i64* %n.dbg.spill22, align 8, !dbg !3929
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill22, metadata !3970, metadata !DIExpression()), !dbg !3977
  store i64 %_80, i64* %self5, align 8, !dbg !3977
  %_34 = load i64, i64* %self5, align 8, !dbg !3918
  %_31 = icmp eq i64 %_32, %_34, !dbg !3908
  call void @llvm.assume(i1 %_31), !dbg !3979
  br label %bb12, !dbg !3979

bb10:                                             ; preds = %bb7
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !3980
  %_41.0 = load i64, i64* %124, align 8, !dbg !3980
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3980
  %_41.1 = load i64, i64* %125, align 8, !dbg !3980, !range !1308, !noundef !19
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %126 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hadeb8784519b0211E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %_41.0, i64 %_41.1), !dbg !3981
  store { i8*, i64 } %126, { i8*, i64 }* %memory, align 8, !dbg !3981
  br label %bb14, !dbg !3981

bb14:                                             ; preds = %bb10
  br label %bb15, !dbg !3982

bb15:                                             ; preds = %bb13, %bb14
  %127 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 0, !dbg !3983
  %_42.0 = load i8*, i8** %127, align 8, !dbg !3983
  %128 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 1, !dbg !3983
  %_42.1 = load i64, i64* %128, align 8, !dbg !3983
  %129 = bitcast i64** %_43 to { i64, i64 }**, !dbg !3984
  store { i64, i64 }* %new_layout, { i64, i64 }** %129, align 8, !dbg !3984
  %130 = load i64*, i64** %_43, align 8, !dbg !3983, !nonnull !19, !align !447, !noundef !19
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h3901e85ad527814eE"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i8* %_42.0, i64 %_42.1, i64* align 8 %130), !dbg !3983
  br label %bb16, !dbg !3983

bb12:                                             ; preds = %bb11
  %131 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !3985
  %_38.0 = load i64, i64* %131, align 8, !dbg !3985
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !3985
  %_38.1 = load i64, i64* %132, align 8, !dbg !3985, !range !1308, !noundef !19
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !3986
  %_39.0 = load i64, i64* %133, align 8, !dbg !3986
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3986
  %_39.1 = load i64, i64* %134, align 8, !dbg !3986, !range !1308, !noundef !19
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %135 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17hd07a347df9bed584E"(%"alloc::alloc::Global"* align 1 %alloc, i8* %ptr, i64 %_38.0, i64 %_38.1, i64 %_39.0, i64 %_39.1), !dbg !3987
  store { i8*, i64 } %135, { i8*, i64 }* %memory, align 8, !dbg !3987
  br label %bb13, !dbg !3987

bb13:                                             ; preds = %bb12
  br label %bb15, !dbg !3982

bb16:                                             ; preds = %bb15
  br label %bb18, !dbg !3950
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h97a170dbd3a498e1E"() unnamed_addr #0 !dbg !3988 {
start:
  %_2.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]", align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]"* %_1.dbg.spill, metadata !3992, metadata !DIExpression()), !dbg !3994
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %_2.dbg.spill, metadata !3993, metadata !DIExpression()), !dbg !3995
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3996
  store i64 0, i64* %1, align 8, !dbg !3996
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3997
  %3 = load i64, i64* %2, align 8, !dbg !3997
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3997
  %5 = load i64, i64* %4, align 8, !dbg !3997, !range !649, !noundef !19
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !3997
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !3997
  ret { i64, i64 } %7, !dbg !3997
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17he0a883c58d680d64E"(i64* align 8 %0) unnamed_addr #0 !dbg !3998 {
start:
  %_2.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %_3 = alloca { i64, i64 }, align 8
  %_1 = alloca i64*, align 8
  store i64* %0, i64** %_1, align 8
  %1 = bitcast i64** %_1 to { i64, i64 }**
  %2 = load { i64, i64 }*, { i64, i64 }** %1, align 8, !nonnull !19, !align !447, !noundef !19
  call void @llvm.dbg.declare(metadata i64** %_1, metadata !4002, metadata !DIExpression(DW_OP_deref)), !dbg !4004
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %_2.dbg.spill, metadata !4003, metadata !DIExpression()), !dbg !4005
  %3 = bitcast i64** %_1 to { i64, i64 }**, !dbg !4006
  %_5 = load { i64, i64 }*, { i64, i64 }** %3, align 8, !dbg !4006, !nonnull !19, !align !447, !noundef !19
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0, !dbg !4006
  %_4.0 = load i64, i64* %4, align 8, !dbg !4006
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !4006
  %_4.1 = load i64, i64* %5, align 8, !dbg !4006, !range !1308, !noundef !19
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !4007
  store i64 %_4.0, i64* %6, align 8, !dbg !4007
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !4007
  store i64 %_4.1, i64* %7, align 8, !dbg !4007
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !4007
  %9 = load i64, i64* %8, align 8, !dbg !4007
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !4007
  %11 = load i64, i64* %10, align 8, !dbg !4007, !range !649, !noundef !19
; call <T as core::convert::Into<U>>::into
  %12 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbe9ccf7077ea30d7E"(i64 %9, i64 %11), !dbg !4007
  %13 = extractvalue { i64, i64 } %12, 0, !dbg !4007
  %14 = extractvalue { i64, i64 } %12, 1, !dbg !4007
  br label %bb1, !dbg !4007

bb1:                                              ; preds = %start
  %15 = insertvalue { i64, i64 } undef, i64 %13, 0, !dbg !4008
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1, !dbg !4008
  ret { i64, i64 } %16, !dbg !4008
}

; alloc::raw_vec::handle_reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec14handle_reserve17h3cd82cf6d0832ad5E(i64 %result.0, i64 %result.1) unnamed_addr #0 !dbg !4009 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %result.dbg.spill = alloca { i64, i64 }, align 8
  %_2 = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %result.dbg.spill, i32 0, i32 0
  store i64 %result.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %result.dbg.spill, i32 0, i32 1
  store i64 %result.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %result.dbg.spill, metadata !4013, metadata !DIExpression()), !dbg !4016
; call core::result::Result<T,E>::map_err
  %2 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha550cd7b6afb3594E"(i64 %result.0, i64 %result.1), !dbg !4017
  store { i64, i64 } %2, { i64, i64 }* %_2, align 8, !dbg !4017
  br label %bb1, !dbg !4017

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !4017
  %4 = load i64, i64* %3, align 8, !dbg !4017, !range !2223, !noundef !19
  %5 = sub i64 %4, -9223372036854775807, !dbg !4017
  %6 = icmp eq i64 %5, 0, !dbg !4017
  %_6 = select i1 %6, i64 0, i64 1, !dbg !4017
  switch i64 %_6, label %bb4 [
    i64 0, label %bb2
    i64 1, label %bb3
  ], !dbg !4018

bb4:                                              ; preds = %bb3, %bb1
  unreachable, !dbg !4017

bb2:                                              ; preds = %bb1
  ret void, !dbg !4019

bb3:                                              ; preds = %bb1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !4017
  %8 = load i64, i64* %7, align 8, !dbg !4017, !range !649, !noundef !19
  %9 = icmp eq i64 %8, 0, !dbg !4017
  %_5 = select i1 %9, i64 0, i64 1, !dbg !4017
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ], !dbg !4018

bb5:                                              ; preds = %bb3
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #16, !dbg !4020
  unreachable, !dbg !4020

bb6:                                              ; preds = %bb3
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 0, !dbg !4021
  %layout.0 = load i64, i64* %10, align 8, !dbg !4021
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !4021
  %layout.1 = load i64, i64* %11, align 8, !dbg !4021, !range !1308, !noundef !19
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !4021
  store i64 %layout.0, i64* %12, align 8, !dbg !4021
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !4021
  store i64 %layout.1, i64* %13, align 8, !dbg !4021
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !4014, metadata !DIExpression()), !dbg !4022
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64 %layout.0, i64 %layout.1) #16, !dbg !4023
  unreachable, !dbg !4023
}

; alloc::raw_vec::handle_reserve::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17haae58e62989b1474E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !4024 {
start:
  %self.dbg.spill2 = alloca { i64, i64 }*, align 8
  %__self_0.dbg.spill = alloca { i64, i64 }*, align 8
  %self.dbg.spill1 = alloca { i64, i64 }*, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %2 = alloca { i64, i64 }, align 8
  %e = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %_1.dbg.spill, metadata !4029, metadata !DIExpression()), !dbg !4030
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e, metadata !4028, metadata !DIExpression()), !dbg !4031
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill, align 8, !dbg !4032
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !4033, metadata !DIExpression()), !dbg !4040
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill1, align 8, !dbg !4040
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill1, metadata !4041, metadata !DIExpression()), !dbg !4054
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1, !dbg !4054
  %6 = load i64, i64* %5, align 8, !dbg !4054, !range !649, !noundef !19
  %7 = icmp eq i64 %6, 0, !dbg !4054
  %_5 = select i1 %7, i64 0, i64 1, !dbg !4054
  switch i64 %_5, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !4054

bb3:                                              ; preds = %start
  unreachable, !dbg !4054

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !4054
  store i64 0, i64* %8, align 8, !dbg !4054
  br label %bb1, !dbg !4054

bb2:                                              ; preds = %start
  store { i64, i64 }* %e, { i64, i64 }** %__self_0.dbg.spill, align 8, !dbg !4054
  call void @llvm.dbg.declare(metadata { i64, i64 }** %__self_0.dbg.spill, metadata !4049, metadata !DIExpression()), !dbg !4056
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill2, align 8, !dbg !4056
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill2, metadata !4057, metadata !DIExpression()), !dbg !4064
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0, !dbg !4064
  %_8.0 = load i64, i64* %9, align 8, !dbg !4064
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1, !dbg !4064
  %_8.1 = load i64, i64* %10, align 8, !dbg !4064, !range !1308, !noundef !19
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !4056
  store i64 %_8.0, i64* %11, align 8, !dbg !4056
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !4056
  store i64 %_8.1, i64* %12, align 8, !dbg !4056
  br label %bb1, !dbg !4054

bb1:                                              ; preds = %bb4, %bb2
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !4066
  %14 = load i64, i64* %13, align 8, !dbg !4066
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !4066
  %16 = load i64, i64* %15, align 8, !dbg !4066, !range !649, !noundef !19
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0, !dbg !4066
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1, !dbg !4066
  ret { i64, i64 } %18, !dbg !4066
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hefc8b9238314a383E"(i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4067 {
start:
  %ptr.dbg.spill6 = alloca %"alloc::string::String"*, align 8
  %ptr.dbg.spill5 = alloca %"alloc::string::String"*, align 8
  %ptr.dbg.spill4 = alloca %"alloc::string::String"*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill2 = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %layout.dbg.spill1 = alloca { i64, i64 }, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %_46 = alloca i64*, align 8
  %_37 = alloca i8, align 1
  %self = alloca i64*, align 8
  %_31 = alloca i64*, align 8
  %result = alloca { i8*, i64 }, align 8
  %_15 = alloca { i64, i64 }, align 8
  %_10 = alloca { i64, i64 }, align 8
  %_4 = alloca i8, align 1
  %2 = alloca { i64*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i64 %capacity, i64* %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !4071, metadata !DIExpression()), !dbg !4084
  call void @llvm.dbg.declare(metadata i8* %init, metadata !4072, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !4073, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %result, metadata !4078, metadata !DIExpression()), !dbg !4087
  call void @llvm.dbg.declare(metadata i64** %self, metadata !4088, metadata !DIExpression()), !dbg !4092
  store i8 1, i8* %_37, align 1, !dbg !4094
  br i1 false, label %bb1, label %bb2, !dbg !4094

bb1:                                              ; preds = %start
  store i8 1, i8* %_4, align 1, !dbg !4094
  br label %bb3, !dbg !4094

bb2:                                              ; preds = %start
  %_6 = icmp eq i64 %capacity, 0, !dbg !4095
  %4 = zext i1 %_6 to i8, !dbg !4094
  store i8 %4, i8* %_4, align 1, !dbg !4094
  br label %bb3, !dbg !4094

bb3:                                              ; preds = %bb1, %bb2
  %5 = load i8, i8* %_4, align 1, !dbg !4094, !range !394, !noundef !19
  %6 = trunc i8 %5 to i1, !dbg !4094
  br i1 %6, label %bb4, label %bb6, !dbg !4094

bb6:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::array
  %7 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h277941258703e322E(i64 %capacity)
          to label %bb7 unwind label %cleanup, !dbg !4096

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_37, align 1, !dbg !4097
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %8 = invoke { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17ha1c55d931f6b3c06E"()
          to label %bb5 unwind label %cleanup, !dbg !4098

bb26:                                             ; preds = %cleanup
  %9 = load i8, i8* %_37, align 1, !dbg !4099, !range !394, !noundef !19
  %10 = trunc i8 %9 to i1, !dbg !4099
  br i1 %10, label %bb25, label %bb24, !dbg !4099

cleanup:                                          ; preds = %bb20, %bb16, %bb14, %bb11, %bb8, %bb6, %bb4
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb26

bb5:                                              ; preds = %bb4
  store { i64*, i64 } %8, { i64*, i64 }* %2, align 8, !dbg !4098
  br label %bb23, !dbg !4100

bb23:                                             ; preds = %bb22, %bb5
  %16 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0, !dbg !4101
  %17 = load i64*, i64** %16, align 8, !dbg !4101, !nonnull !19, !noundef !19
  %18 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1, !dbg !4101
  %19 = load i64, i64* %18, align 8, !dbg !4101
  %20 = insertvalue { i64*, i64 } undef, i64* %17, 0, !dbg !4101
  %21 = insertvalue { i64*, i64 } %20, i64 %19, 1, !dbg !4101
  ret { i64*, i64 } %21, !dbg !4101

bb7:                                              ; preds = %bb6
  store { i64, i64 } %7, { i64, i64 }* %_10, align 8, !dbg !4096
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !4096
  %23 = load i64, i64* %22, align 8, !dbg !4096, !range !649, !noundef !19
  %24 = icmp eq i64 %23, 0, !dbg !4096
  %_12 = select i1 %24, i64 1, i64 0, !dbg !4096
  switch i64 %_12, label %bb9 [
    i64 0, label %bb10
    i64 1, label %bb8
  ], !dbg !4102

bb9:                                              ; preds = %bb7
  unreachable, !dbg !4096

bb10:                                             ; preds = %bb7
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 0, !dbg !4103
  %layout.0 = load i64, i64* %25, align 8, !dbg !4103
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !4103
  %layout.1 = load i64, i64* %26, align 8, !dbg !4103, !range !1308, !noundef !19
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !4103
  store i64 %layout.0, i64* %27, align 8, !dbg !4103
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !4103
  store i64 %layout.1, i64* %28, align 8, !dbg !4103
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !4076, metadata !DIExpression()), !dbg !4104
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 0, !dbg !4105
  store i64 %layout.0, i64* %29, align 8, !dbg !4105
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 1, !dbg !4105
  store i64 %layout.1, i64* %30, align 8, !dbg !4105
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill1, metadata !4074, metadata !DIExpression()), !dbg !4106
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !4107
  store i64 -9223372036854775807, i64* %31, align 8, !dbg !4107
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !4111
  %33 = load i64, i64* %32, align 8, !dbg !4111, !range !2223, !noundef !19
  %34 = sub i64 %33, -9223372036854775807, !dbg !4111
  %35 = icmp eq i64 %34, 0, !dbg !4111
  %_18 = select i1 %35, i64 0, i64 1, !dbg !4111
  switch i64 %_18, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ], !dbg !4112

bb8:                                              ; preds = %bb7
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #16
          to label %unreachable unwind label %cleanup, !dbg !4113

unreachable:                                      ; preds = %bb20, %bb11, %bb8
  unreachable

bb12:                                             ; preds = %bb10
  unreachable, !dbg !4111

bb13:                                             ; preds = %bb10
  %36 = load i8, i8* %init, align 1, !dbg !4114, !range !394, !noundef !19
  %37 = trunc i8 %36 to i1, !dbg !4114
  %_21 = zext i1 %37 to i64, !dbg !4114
  switch i64 %_21, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ], !dbg !4115

bb11:                                             ; preds = %bb10
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #16
          to label %unreachable unwind label %cleanup, !dbg !4116

bb15:                                             ; preds = %bb13
  unreachable, !dbg !4114

bb16:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %38 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hadeb8784519b0211E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb17 unwind label %cleanup, !dbg !4117

bb14:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %39 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h7576dccf7966c983E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb18 unwind label %cleanup, !dbg !4118

bb18:                                             ; preds = %bb14
  store { i8*, i64 } %39, { i8*, i64 }* %result, align 8, !dbg !4118
  br label %bb19, !dbg !4119

bb19:                                             ; preds = %bb17, %bb18
  %40 = bitcast { i8*, i64 }* %result to {}**, !dbg !4120
  %41 = load {}*, {}** %40, align 8, !dbg !4120
  %42 = icmp eq {}* %41, null, !dbg !4120
  %_27 = select i1 %42, i64 1, i64 0, !dbg !4120
  switch i64 %_27, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !4121

bb17:                                             ; preds = %bb16
  store { i8*, i64 } %38, { i8*, i64 }* %result, align 8, !dbg !4117
  br label %bb19, !dbg !4122

bb21:                                             ; preds = %bb19
  unreachable, !dbg !4120

bb22:                                             ; preds = %bb19
  %43 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0, !dbg !4123
  %ptr.0 = load i8*, i8** %43, align 8, !dbg !4123, !nonnull !19, !noundef !19
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1, !dbg !4123
  %ptr.1 = load i64, i64* %44, align 8, !dbg !4123
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !4123
  store i8* %ptr.0, i8** %45, align 8, !dbg !4123
  %46 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !4123
  store i64 %ptr.1, i64* %46, align 8, !dbg !4123
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !4082, metadata !DIExpression()), !dbg !4124
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 0, !dbg !4125
  store i8* %ptr.0, i8** %47, align 8, !dbg !4125
  %48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 1, !dbg !4125
  store i64 %ptr.1, i64* %48, align 8, !dbg !4125
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill2, metadata !4080, metadata !DIExpression()), !dbg !4126
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !4093
  store i8* %ptr.0, i8** %49, align 8, !dbg !4093
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !4093
  store i64 %ptr.1, i64* %50, align 8, !dbg !4093
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !4127, metadata !DIExpression()), !dbg !4134
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !4134
  store i8* %ptr.0, i8** %51, align 8, !dbg !4134
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !4134
  store i64 %ptr.1, i64* %52, align 8, !dbg !4134
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !4135, metadata !DIExpression()), !dbg !4139
  %_41.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !4139
  %ptr = bitcast [0 x i8]* %_41.0 to %"alloc::string::String"*, !dbg !4134
  store %"alloc::string::String"* %ptr, %"alloc::string::String"** %ptr.dbg.spill4, align 8, !dbg !4134
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %ptr.dbg.spill4, metadata !4141, metadata !DIExpression()), !dbg !4147
  %53 = bitcast i64** %self to %"alloc::string::String"**, !dbg !4147
  store %"alloc::string::String"* %ptr, %"alloc::string::String"** %53, align 8, !dbg !4147
  %54 = bitcast i64** %self to %"alloc::string::String"**, !dbg !4092
  %_45 = load %"alloc::string::String"*, %"alloc::string::String"** %54, align 8, !dbg !4092
  store %"alloc::string::String"* %_45, %"alloc::string::String"** %ptr.dbg.spill5, align 8, !dbg !4092
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %ptr.dbg.spill5, metadata !4149, metadata !DIExpression()), !dbg !4155
  store %"alloc::string::String"* %_45, %"alloc::string::String"** %ptr.dbg.spill6, align 8, !dbg !4155
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %ptr.dbg.spill6, metadata !4157, metadata !DIExpression()), !dbg !4161
  %55 = bitcast i64** %_46 to %"alloc::string::String"**, !dbg !4161
  store %"alloc::string::String"* %_45, %"alloc::string::String"** %55, align 8, !dbg !4161
  %56 = load i64*, i64** %_46, align 8, !dbg !4155, !nonnull !19, !noundef !19
  store i64* %56, i64** %_31, align 8, !dbg !4155
  %57 = bitcast { i64*, i64 }* %2 to i64**, !dbg !4163
  %58 = load i64*, i64** %_31, align 8, !dbg !4163, !nonnull !19, !noundef !19
  store i64* %58, i64** %57, align 8, !dbg !4163
  %59 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1, !dbg !4163
  store i64 %capacity, i64* %59, align 8, !dbg !4163
  %60 = bitcast { i64*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !4163
  br label %bb23, !dbg !4100

bb20:                                             ; preds = %bb19
; invoke alloc::alloc::handle_alloc_error
  invoke void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64 %layout.0, i64 %layout.1) #16
          to label %unreachable unwind label %cleanup, !dbg !4164

bb24:                                             ; preds = %bb25, %bb26
  %61 = bitcast { i8*, i32 }* %1 to i8**, !dbg !4165
  %62 = load i8*, i8** %61, align 8, !dbg !4165
  %63 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !4165
  %64 = load i32, i32* %63, align 8, !dbg !4165
  %65 = insertvalue { i8*, i32 } undef, i8* %62, 0, !dbg !4165
  %66 = insertvalue { i8*, i32 } %65, i32 %64, 1, !dbg !4165
  resume { i8*, i32 } %66, !dbg !4165

bb25:                                             ; preds = %bb26
  br label %bb24, !dbg !4099
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hff10a4c41025bd83E"(i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4166 {
start:
  %ptr.dbg.spill6 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %ptr.dbg.spill5 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %ptr.dbg.spill4 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill2 = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %layout.dbg.spill1 = alloca { i64, i64 }, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %_46 = alloca i64*, align 8
  %_37 = alloca i8, align 1
  %self = alloca i64*, align 8
  %_31 = alloca i64*, align 8
  %result = alloca { i8*, i64 }, align 8
  %_15 = alloca { i64, i64 }, align 8
  %_10 = alloca { i64, i64 }, align 8
  %_4 = alloca i8, align 1
  %2 = alloca { i64*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i64 %capacity, i64* %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !4170, metadata !DIExpression()), !dbg !4183
  call void @llvm.dbg.declare(metadata i8* %init, metadata !4171, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !4172, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %result, metadata !4177, metadata !DIExpression()), !dbg !4186
  call void @llvm.dbg.declare(metadata i64** %self, metadata !4187, metadata !DIExpression()), !dbg !4191
  store i8 1, i8* %_37, align 1, !dbg !4193
  br i1 false, label %bb1, label %bb2, !dbg !4193

bb1:                                              ; preds = %start
  store i8 1, i8* %_4, align 1, !dbg !4193
  br label %bb3, !dbg !4193

bb2:                                              ; preds = %start
  %_6 = icmp eq i64 %capacity, 0, !dbg !4194
  %4 = zext i1 %_6 to i8, !dbg !4193
  store i8 %4, i8* %_4, align 1, !dbg !4193
  br label %bb3, !dbg !4193

bb3:                                              ; preds = %bb1, %bb2
  %5 = load i8, i8* %_4, align 1, !dbg !4193, !range !394, !noundef !19
  %6 = trunc i8 %5 to i1, !dbg !4193
  br i1 %6, label %bb4, label %bb6, !dbg !4193

bb6:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::array
  %7 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h2e3ae26bf90eeeb2E(i64 %capacity)
          to label %bb7 unwind label %cleanup, !dbg !4195

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_37, align 1, !dbg !4196
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %8 = invoke { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h0e80d6a7818cbea6E"()
          to label %bb5 unwind label %cleanup, !dbg !4197

bb26:                                             ; preds = %cleanup
  %9 = load i8, i8* %_37, align 1, !dbg !4198, !range !394, !noundef !19
  %10 = trunc i8 %9 to i1, !dbg !4198
  br i1 %10, label %bb25, label %bb24, !dbg !4198

cleanup:                                          ; preds = %bb20, %bb16, %bb14, %bb11, %bb8, %bb6, %bb4
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb26

bb5:                                              ; preds = %bb4
  store { i64*, i64 } %8, { i64*, i64 }* %2, align 8, !dbg !4197
  br label %bb23, !dbg !4199

bb23:                                             ; preds = %bb22, %bb5
  %16 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0, !dbg !4200
  %17 = load i64*, i64** %16, align 8, !dbg !4200, !nonnull !19, !noundef !19
  %18 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1, !dbg !4200
  %19 = load i64, i64* %18, align 8, !dbg !4200
  %20 = insertvalue { i64*, i64 } undef, i64* %17, 0, !dbg !4200
  %21 = insertvalue { i64*, i64 } %20, i64 %19, 1, !dbg !4200
  ret { i64*, i64 } %21, !dbg !4200

bb7:                                              ; preds = %bb6
  store { i64, i64 } %7, { i64, i64 }* %_10, align 8, !dbg !4195
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !4195
  %23 = load i64, i64* %22, align 8, !dbg !4195, !range !649, !noundef !19
  %24 = icmp eq i64 %23, 0, !dbg !4195
  %_12 = select i1 %24, i64 1, i64 0, !dbg !4195
  switch i64 %_12, label %bb9 [
    i64 0, label %bb10
    i64 1, label %bb8
  ], !dbg !4201

bb9:                                              ; preds = %bb7
  unreachable, !dbg !4195

bb10:                                             ; preds = %bb7
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 0, !dbg !4202
  %layout.0 = load i64, i64* %25, align 8, !dbg !4202
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !4202
  %layout.1 = load i64, i64* %26, align 8, !dbg !4202, !range !1308, !noundef !19
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !4202
  store i64 %layout.0, i64* %27, align 8, !dbg !4202
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !4202
  store i64 %layout.1, i64* %28, align 8, !dbg !4202
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !4175, metadata !DIExpression()), !dbg !4203
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 0, !dbg !4204
  store i64 %layout.0, i64* %29, align 8, !dbg !4204
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 1, !dbg !4204
  store i64 %layout.1, i64* %30, align 8, !dbg !4204
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill1, metadata !4173, metadata !DIExpression()), !dbg !4205
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !4206
  store i64 -9223372036854775807, i64* %31, align 8, !dbg !4206
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !4210
  %33 = load i64, i64* %32, align 8, !dbg !4210, !range !2223, !noundef !19
  %34 = sub i64 %33, -9223372036854775807, !dbg !4210
  %35 = icmp eq i64 %34, 0, !dbg !4210
  %_18 = select i1 %35, i64 0, i64 1, !dbg !4210
  switch i64 %_18, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ], !dbg !4211

bb8:                                              ; preds = %bb7
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #16
          to label %unreachable unwind label %cleanup, !dbg !4212

unreachable:                                      ; preds = %bb20, %bb11, %bb8
  unreachable

bb12:                                             ; preds = %bb10
  unreachable, !dbg !4210

bb13:                                             ; preds = %bb10
  %36 = load i8, i8* %init, align 1, !dbg !4213, !range !394, !noundef !19
  %37 = trunc i8 %36 to i1, !dbg !4213
  %_21 = zext i1 %37 to i64, !dbg !4213
  switch i64 %_21, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ], !dbg !4214

bb11:                                             ; preds = %bb10
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #16
          to label %unreachable unwind label %cleanup, !dbg !4215

bb15:                                             ; preds = %bb13
  unreachable, !dbg !4213

bb16:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %38 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hadeb8784519b0211E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb17 unwind label %cleanup, !dbg !4216

bb14:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %39 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h7576dccf7966c983E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb18 unwind label %cleanup, !dbg !4217

bb18:                                             ; preds = %bb14
  store { i8*, i64 } %39, { i8*, i64 }* %result, align 8, !dbg !4217
  br label %bb19, !dbg !4218

bb19:                                             ; preds = %bb17, %bb18
  %40 = bitcast { i8*, i64 }* %result to {}**, !dbg !4219
  %41 = load {}*, {}** %40, align 8, !dbg !4219
  %42 = icmp eq {}* %41, null, !dbg !4219
  %_27 = select i1 %42, i64 1, i64 0, !dbg !4219
  switch i64 %_27, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !4220

bb17:                                             ; preds = %bb16
  store { i8*, i64 } %38, { i8*, i64 }* %result, align 8, !dbg !4216
  br label %bb19, !dbg !4221

bb21:                                             ; preds = %bb19
  unreachable, !dbg !4219

bb22:                                             ; preds = %bb19
  %43 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0, !dbg !4222
  %ptr.0 = load i8*, i8** %43, align 8, !dbg !4222, !nonnull !19, !noundef !19
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1, !dbg !4222
  %ptr.1 = load i64, i64* %44, align 8, !dbg !4222
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !4222
  store i8* %ptr.0, i8** %45, align 8, !dbg !4222
  %46 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !4222
  store i64 %ptr.1, i64* %46, align 8, !dbg !4222
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !4181, metadata !DIExpression()), !dbg !4223
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 0, !dbg !4224
  store i8* %ptr.0, i8** %47, align 8, !dbg !4224
  %48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 1, !dbg !4224
  store i64 %ptr.1, i64* %48, align 8, !dbg !4224
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill2, metadata !4179, metadata !DIExpression()), !dbg !4225
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !4192
  store i8* %ptr.0, i8** %49, align 8, !dbg !4192
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !4192
  store i64 %ptr.1, i64* %50, align 8, !dbg !4192
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !4226, metadata !DIExpression()), !dbg !4234
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !4234
  store i8* %ptr.0, i8** %51, align 8, !dbg !4234
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !4234
  store i64 %ptr.1, i64* %52, align 8, !dbg !4234
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !4235, metadata !DIExpression()), !dbg !4239
  %_41.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !4239
  %ptr = bitcast [0 x i8]* %_41.0 to %"alloc::vec::Vec<u8>"*, !dbg !4234
  store %"alloc::vec::Vec<u8>"* %ptr, %"alloc::vec::Vec<u8>"** %ptr.dbg.spill4, align 8, !dbg !4234
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %ptr.dbg.spill4, metadata !4241, metadata !DIExpression()), !dbg !4247
  %53 = bitcast i64** %self to %"alloc::vec::Vec<u8>"**, !dbg !4247
  store %"alloc::vec::Vec<u8>"* %ptr, %"alloc::vec::Vec<u8>"** %53, align 8, !dbg !4247
  %54 = bitcast i64** %self to %"alloc::vec::Vec<u8>"**, !dbg !4191
  %_45 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %54, align 8, !dbg !4191
  store %"alloc::vec::Vec<u8>"* %_45, %"alloc::vec::Vec<u8>"** %ptr.dbg.spill5, align 8, !dbg !4191
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %ptr.dbg.spill5, metadata !4249, metadata !DIExpression()), !dbg !4255
  store %"alloc::vec::Vec<u8>"* %_45, %"alloc::vec::Vec<u8>"** %ptr.dbg.spill6, align 8, !dbg !4255
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %ptr.dbg.spill6, metadata !4257, metadata !DIExpression()), !dbg !4261
  %55 = bitcast i64** %_46 to %"alloc::vec::Vec<u8>"**, !dbg !4261
  store %"alloc::vec::Vec<u8>"* %_45, %"alloc::vec::Vec<u8>"** %55, align 8, !dbg !4261
  %56 = load i64*, i64** %_46, align 8, !dbg !4255, !nonnull !19, !noundef !19
  store i64* %56, i64** %_31, align 8, !dbg !4255
  %57 = bitcast { i64*, i64 }* %2 to i64**, !dbg !4263
  %58 = load i64*, i64** %_31, align 8, !dbg !4263, !nonnull !19, !noundef !19
  store i64* %58, i64** %57, align 8, !dbg !4263
  %59 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1, !dbg !4263
  store i64 %capacity, i64* %59, align 8, !dbg !4263
  %60 = bitcast { i64*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !4263
  br label %bb23, !dbg !4199

bb20:                                             ; preds = %bb19
; invoke alloc::alloc::handle_alloc_error
  invoke void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64 %layout.0, i64 %layout.1) #16
          to label %unreachable unwind label %cleanup, !dbg !4264

bb24:                                             ; preds = %bb25, %bb26
  %61 = bitcast { i8*, i32 }* %1 to i8**, !dbg !4265
  %62 = load i8*, i8** %61, align 8, !dbg !4265
  %63 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !4265
  %64 = load i32, i32* %63, align 8, !dbg !4265
  %65 = insertvalue { i8*, i32 } undef, i8* %62, 0, !dbg !4265
  %66 = insertvalue { i8*, i32 } %65, i32 %64, 1, !dbg !4265
  resume { i8*, i32 } %66, !dbg !4265

bb25:                                             ; preds = %bb26
  br label %bb24, !dbg !4198
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h490b3846561cd739E"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !4266 {
start:
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca { i64*, i64 }*, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %self1 = alloca i64, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !4270, metadata !DIExpression()), !dbg !4273
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !4271, metadata !DIExpression()), !dbg !4274
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !4272, metadata !DIExpression()), !dbg !4275
  call void @llvm.dbg.declare(metadata i64* %self1, metadata !4276, metadata !DIExpression()), !dbg !4281
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill2, align 8, !dbg !4282
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill2, metadata !4283, metadata !DIExpression()), !dbg !4286
  br i1 false, label %bb2, label %bb3, !dbg !4286

bb2:                                              ; preds = %start
  store i64 -1, i64* %self1, align 8, !dbg !4286
  br label %bb1, !dbg !4286

bb3:                                              ; preds = %start
  %0 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !4286
  %1 = load i64, i64* %0, align 8, !dbg !4286
  store i64 %1, i64* %self1, align 8, !dbg !4286
  br label %bb1, !dbg !4286

bb1:                                              ; preds = %bb2, %bb3
  store i64 %len, i64* %rhs.dbg.spill, align 8, !dbg !4287
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !4280, metadata !DIExpression()), !dbg !4281
  %_10 = load i64, i64* %self1, align 8, !dbg !4281
  %_5 = sub i64 %_10, %len, !dbg !4281
  %2 = icmp ugt i64 %additional, %_5, !dbg !4288
  ret i1 %2, !dbg !4289
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h8afd9d8b5c1bd8f3E"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !4290 {
start:
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }*, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %self1 = alloca i64, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !4294, metadata !DIExpression()), !dbg !4297
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !4295, metadata !DIExpression()), !dbg !4298
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !4296, metadata !DIExpression()), !dbg !4299
  call void @llvm.dbg.declare(metadata i64* %self1, metadata !4300, metadata !DIExpression()), !dbg !4305
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill2, align 8, !dbg !4306
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill2, metadata !4307, metadata !DIExpression()), !dbg !4310
  br i1 false, label %bb2, label %bb3, !dbg !4310

bb2:                                              ; preds = %start
  store i64 -1, i64* %self1, align 8, !dbg !4310
  br label %bb1, !dbg !4310

bb3:                                              ; preds = %start
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !4310
  %1 = load i64, i64* %0, align 8, !dbg !4310
  store i64 %1, i64* %self1, align 8, !dbg !4310
  br label %bb1, !dbg !4310

bb1:                                              ; preds = %bb2, %bb3
  store i64 %len, i64* %rhs.dbg.spill, align 8, !dbg !4311
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !4304, metadata !DIExpression()), !dbg !4305
  %_10 = load i64, i64* %self1, align 8, !dbg !4305
  %_5 = sub i64 %_10, %len, !dbg !4305
  %2 = icmp ugt i64 %additional, %_5, !dbg !4312
  ret i1 %2, !dbg !4313
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hf1193977a1c32428E"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !4314 {
start:
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca { i64*, i64 }*, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %self1 = alloca i64, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !4318, metadata !DIExpression()), !dbg !4321
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !4319, metadata !DIExpression()), !dbg !4322
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !4320, metadata !DIExpression()), !dbg !4323
  call void @llvm.dbg.declare(metadata i64* %self1, metadata !4324, metadata !DIExpression()), !dbg !4329
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill2, align 8, !dbg !4330
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill2, metadata !4331, metadata !DIExpression()), !dbg !4334
  br i1 false, label %bb2, label %bb3, !dbg !4334

bb2:                                              ; preds = %start
  store i64 -1, i64* %self1, align 8, !dbg !4334
  br label %bb1, !dbg !4334

bb3:                                              ; preds = %start
  %0 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !4334
  %1 = load i64, i64* %0, align 8, !dbg !4334
  store i64 %1, i64* %self1, align 8, !dbg !4334
  br label %bb1, !dbg !4334

bb1:                                              ; preds = %bb2, %bb3
  store i64 %len, i64* %rhs.dbg.spill, align 8, !dbg !4335
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !4328, metadata !DIExpression()), !dbg !4329
  %_10 = load i64, i64* %self1, align 8, !dbg !4329
  %_5 = sub i64 %_10, %len, !dbg !4329
  %2 = icmp ugt i64 %additional, %_5, !dbg !4336
  ret i1 %2, !dbg !4337
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h228271933e00ee8dE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i8*, i64 }* align 8 %self) unnamed_addr #1 !dbg !4338 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %_11 = alloca i8*, align 8
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !4342, metadata !DIExpression()), !dbg !4345
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !4346, metadata !DIExpression()), !dbg !4355
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !4357, metadata !DIExpression()), !dbg !4364
  br i1 false, label %bb1, label %bb2, !dbg !4375

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !4375
  br label %bb3, !dbg !4375

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !4376
  %_5 = load i64, i64* %1, align 8, !dbg !4376
  %_4 = icmp eq i64 %_5, 0, !dbg !4376
  %2 = zext i1 %_4 to i8, !dbg !4375
  store i8 %2, i8* %_2, align 1, !dbg !4375
  br label %bb3, !dbg !4375

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_2, align 1, !dbg !4375, !range !394, !noundef !19
  %4 = trunc i8 %3 to i1, !dbg !4375
  br i1 %4, label %bb4, label %bb5, !dbg !4375

bb5:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !4377
  %_8 = load i64, i64* %5, align 8, !dbg !4377
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h1323d54702b1344aE(i64 %_8), !dbg !4356
  store { i64, i64 } %6, { i64, i64 }* %self1, align 8, !dbg !4356
  br label %bb6, !dbg !4356

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1, !dbg !4378
  store i64 0, i64* %7, align 8, !dbg !4378
  br label %bb8, !dbg !4379

bb8:                                              ; preds = %bb7, %bb4
  ret void, !dbg !4380

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !4355
  %9 = load i64, i64* %8, align 8, !dbg !4355, !range !649, !noundef !19
  %10 = icmp eq i64 %9, 0, !dbg !4355
  %_15 = select i1 %10, i64 1, i64 0, !dbg !4355
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !4355

bb10:                                             ; preds = %bb6
  unreachable, !dbg !4355

bb11:                                             ; preds = %bb6
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !4355
  %t.0 = load i64, i64* %11, align 8, !dbg !4355
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !4355
  %t.1 = load i64, i64* %12, align 8, !dbg !4355, !range !1308, !noundef !19
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !4355
  store i64 %t.0, i64* %13, align 8, !dbg !4355
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !4355
  store i64 %t.1, i64* %14, align 8, !dbg !4355
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !4352, metadata !DIExpression()), !dbg !4381
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !4381
  store i64 %t.0, i64* %15, align 8, !dbg !4381
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !4381
  store i64 %t.1, i64* %16, align 8, !dbg !4381
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !4343, metadata !DIExpression()), !dbg !4382
  %17 = bitcast { i8*, i64 }* %self to i8**, !dbg !4374
  %self2 = load i8*, i8** %17, align 8, !dbg !4374, !nonnull !19, !noundef !19
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !4374
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !4370, metadata !DIExpression()), !dbg !4383
  store i8* %self2, i8** %self.dbg.spill4, align 8, !dbg !4383
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !4384, metadata !DIExpression()), !dbg !4390
  store i8* %self2, i8** %self.dbg.spill5, align 8, !dbg !4390
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !4392, metadata !DIExpression()), !dbg !4396
  store i8* %self2, i8** %ptr.dbg.spill, align 8, !dbg !4390
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !4398, metadata !DIExpression()), !dbg !4402
  store i8* %self2, i8** %pointer, align 8, !dbg !4402
  %_26 = load i8*, i8** %pointer, align 8, !dbg !4364, !nonnull !19, !noundef !19
  store i8* %_26, i8** %_11, align 8, !dbg !4364
  %18 = load i8*, i8** %_11, align 8, !dbg !4374, !nonnull !19, !noundef !19
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h2b90392b95753282E"(i8* %18), !dbg !4374
  br label %bb7, !dbg !4374

bb9:                                              ; preds = %bb6
  unreachable, !dbg !4404

bb7:                                              ; preds = %bb11
  %19 = bitcast { i8*, { i64, i64 } }* %_9 to i8**, !dbg !4412
  store i8* %_10, i8** %19, align 8, !dbg !4412
  %20 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1, !dbg !4412
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !4412
  store i64 %t.0, i64* %21, align 8, !dbg !4412
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !4412
  store i64 %t.1, i64* %22, align 8, !dbg !4412
  %23 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !4413
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %23 to { i8*, { i64, i64 } }*, !dbg !4413
  %25 = bitcast { i8*, { i64, i64 } }* %24 to i8*, !dbg !4413
  %26 = bitcast { i8*, { i64, i64 } }* %_9 to i8*, !dbg !4413
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !4413
  br label %bb8, !dbg !4379
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h35125d36e3ff79c5E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i64*, i64 }* align 8 %self) unnamed_addr #1 !dbg !4414 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill3 = alloca i64*, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %_11 = alloca i8*, align 8
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !4418, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !4422, metadata !DIExpression()), !dbg !4429
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !4431, metadata !DIExpression()), !dbg !4435
  br i1 false, label %bb1, label %bb2, !dbg !4445

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !4445
  br label %bb3, !dbg !4445

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !4446
  %_5 = load i64, i64* %1, align 8, !dbg !4446
  %_4 = icmp eq i64 %_5, 0, !dbg !4446
  %2 = zext i1 %_4 to i8, !dbg !4445
  store i8 %2, i8* %_2, align 1, !dbg !4445
  br label %bb3, !dbg !4445

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_2, align 1, !dbg !4445, !range !394, !noundef !19
  %4 = trunc i8 %3 to i1, !dbg !4445
  br i1 %4, label %bb4, label %bb5, !dbg !4445

bb5:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !4447
  %_8 = load i64, i64* %5, align 8, !dbg !4447
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h277941258703e322E(i64 %_8), !dbg !4430
  store { i64, i64 } %6, { i64, i64 }* %self1, align 8, !dbg !4430
  br label %bb6, !dbg !4430

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1, !dbg !4448
  store i64 0, i64* %7, align 8, !dbg !4448
  br label %bb8, !dbg !4449

bb8:                                              ; preds = %bb7, %bb4
  ret void, !dbg !4450

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !4429
  %9 = load i64, i64* %8, align 8, !dbg !4429, !range !649, !noundef !19
  %10 = icmp eq i64 %9, 0, !dbg !4429
  %_15 = select i1 %10, i64 1, i64 0, !dbg !4429
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !4429

bb10:                                             ; preds = %bb6
  unreachable, !dbg !4429

bb11:                                             ; preds = %bb6
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !4429
  %t.0 = load i64, i64* %11, align 8, !dbg !4429
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !4429
  %t.1 = load i64, i64* %12, align 8, !dbg !4429, !range !1308, !noundef !19
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !4429
  store i64 %t.0, i64* %13, align 8, !dbg !4429
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !4429
  store i64 %t.1, i64* %14, align 8, !dbg !4429
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !4426, metadata !DIExpression()), !dbg !4451
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !4451
  store i64 %t.0, i64* %15, align 8, !dbg !4451
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !4451
  store i64 %t.1, i64* %16, align 8, !dbg !4451
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !4419, metadata !DIExpression()), !dbg !4452
  %17 = bitcast { i64*, i64 }* %self to i64**, !dbg !4444
  %self2 = load i64*, i64** %17, align 8, !dbg !4444, !nonnull !19, !noundef !19
  store i64* %self2, i64** %self.dbg.spill3, align 8, !dbg !4444
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill3, metadata !4441, metadata !DIExpression()), !dbg !4453
  store i64* %self2, i64** %self.dbg.spill4, align 8, !dbg !4453
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !4454, metadata !DIExpression()), !dbg !4460
  store i64* %self2, i64** %self.dbg.spill5, align 8, !dbg !4460
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !4462, metadata !DIExpression()), !dbg !4466
  %_22 = bitcast i64* %self2 to %"alloc::string::String"*, !dbg !4466
  %ptr = bitcast %"alloc::string::String"* %_22 to i8*, !dbg !4460
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !4460
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !4468, metadata !DIExpression()), !dbg !4472
  store i8* %ptr, i8** %pointer, align 8, !dbg !4472
  %_26 = load i8*, i8** %pointer, align 8, !dbg !4435, !nonnull !19, !noundef !19
  store i8* %_26, i8** %_11, align 8, !dbg !4435
  %18 = load i8*, i8** %_11, align 8, !dbg !4444, !nonnull !19, !noundef !19
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h2b90392b95753282E"(i8* %18), !dbg !4444
  br label %bb7, !dbg !4444

bb9:                                              ; preds = %bb6
  unreachable, !dbg !4474

bb7:                                              ; preds = %bb11
  %19 = bitcast { i8*, { i64, i64 } }* %_9 to i8**, !dbg !4478
  store i8* %_10, i8** %19, align 8, !dbg !4478
  %20 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1, !dbg !4478
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !4478
  store i64 %t.0, i64* %21, align 8, !dbg !4478
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !4478
  store i64 %t.1, i64* %22, align 8, !dbg !4478
  %23 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !4479
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %23 to { i8*, { i64, i64 } }*, !dbg !4479
  %25 = bitcast { i8*, { i64, i64 } }* %24 to i8*, !dbg !4479
  %26 = bitcast { i8*, { i64, i64 } }* %_9 to i8*, !dbg !4479
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !4479
  br label %bb8, !dbg !4449
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h9bfd32aebd2503ffE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i64*, i64 }* align 8 %self) unnamed_addr #1 !dbg !4480 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill3 = alloca i64*, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %_11 = alloca i8*, align 8
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !4484, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !4488, metadata !DIExpression()), !dbg !4495
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !4497, metadata !DIExpression()), !dbg !4501
  br i1 false, label %bb1, label %bb2, !dbg !4511

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !4511
  br label %bb3, !dbg !4511

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !4512
  %_5 = load i64, i64* %1, align 8, !dbg !4512
  %_4 = icmp eq i64 %_5, 0, !dbg !4512
  %2 = zext i1 %_4 to i8, !dbg !4511
  store i8 %2, i8* %_2, align 1, !dbg !4511
  br label %bb3, !dbg !4511

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_2, align 1, !dbg !4511, !range !394, !noundef !19
  %4 = trunc i8 %3 to i1, !dbg !4511
  br i1 %4, label %bb4, label %bb5, !dbg !4511

bb5:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !4513
  %_8 = load i64, i64* %5, align 8, !dbg !4513
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h2e3ae26bf90eeeb2E(i64 %_8), !dbg !4496
  store { i64, i64 } %6, { i64, i64 }* %self1, align 8, !dbg !4496
  br label %bb6, !dbg !4496

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1, !dbg !4514
  store i64 0, i64* %7, align 8, !dbg !4514
  br label %bb8, !dbg !4515

bb8:                                              ; preds = %bb7, %bb4
  ret void, !dbg !4516

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !4495
  %9 = load i64, i64* %8, align 8, !dbg !4495, !range !649, !noundef !19
  %10 = icmp eq i64 %9, 0, !dbg !4495
  %_15 = select i1 %10, i64 1, i64 0, !dbg !4495
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !4495

bb10:                                             ; preds = %bb6
  unreachable, !dbg !4495

bb11:                                             ; preds = %bb6
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !4495
  %t.0 = load i64, i64* %11, align 8, !dbg !4495
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !4495
  %t.1 = load i64, i64* %12, align 8, !dbg !4495, !range !1308, !noundef !19
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !4495
  store i64 %t.0, i64* %13, align 8, !dbg !4495
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !4495
  store i64 %t.1, i64* %14, align 8, !dbg !4495
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !4492, metadata !DIExpression()), !dbg !4517
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !4517
  store i64 %t.0, i64* %15, align 8, !dbg !4517
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !4517
  store i64 %t.1, i64* %16, align 8, !dbg !4517
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !4485, metadata !DIExpression()), !dbg !4518
  %17 = bitcast { i64*, i64 }* %self to i64**, !dbg !4510
  %self2 = load i64*, i64** %17, align 8, !dbg !4510, !nonnull !19, !noundef !19
  store i64* %self2, i64** %self.dbg.spill3, align 8, !dbg !4510
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill3, metadata !4507, metadata !DIExpression()), !dbg !4519
  store i64* %self2, i64** %self.dbg.spill4, align 8, !dbg !4519
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !4520, metadata !DIExpression()), !dbg !4526
  store i64* %self2, i64** %self.dbg.spill5, align 8, !dbg !4526
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !4528, metadata !DIExpression()), !dbg !4532
  %_22 = bitcast i64* %self2 to %"alloc::vec::Vec<u8>"*, !dbg !4532
  %ptr = bitcast %"alloc::vec::Vec<u8>"* %_22 to i8*, !dbg !4526
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !4526
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !4534, metadata !DIExpression()), !dbg !4538
  store i8* %ptr, i8** %pointer, align 8, !dbg !4538
  %_26 = load i8*, i8** %pointer, align 8, !dbg !4501, !nonnull !19, !noundef !19
  store i8* %_26, i8** %_11, align 8, !dbg !4501
  %18 = load i8*, i8** %_11, align 8, !dbg !4510, !nonnull !19, !noundef !19
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h2b90392b95753282E"(i8* %18), !dbg !4510
  br label %bb7, !dbg !4510

bb9:                                              ; preds = %bb6
  unreachable, !dbg !4540

bb7:                                              ; preds = %bb11
  %19 = bitcast { i8*, { i64, i64 } }* %_9 to i8**, !dbg !4544
  store i8* %_10, i8** %19, align 8, !dbg !4544
  %20 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1, !dbg !4544
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !4544
  store i64 %t.0, i64* %21, align 8, !dbg !4544
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !4544
  store i64 %t.1, i64* %22, align 8, !dbg !4544
  %23 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !4545
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %23 to { i8*, { i64, i64 } }*, !dbg !4545
  %25 = bitcast { i8*, { i64, i64 } }* %24 to i8*, !dbg !4545
  %26 = bitcast { i8*, { i64, i64 } }* %_9 to i8*, !dbg !4545
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !4545
  br label %bb8, !dbg !4515
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h19faf0dbda2ba0ddE"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !4546 {
start:
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill24 = alloca { i8*, i64 }, align 8
  %e.dbg.spill23 = alloca { i64, i64 }, align 8
  %residual.dbg.spill20 = alloca { i64, i64 }, align 8
  %v.dbg.spill17 = alloca { i8*, i64 }, align 8
  %e.dbg.spill16 = alloca { i64, i64 }, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %cap.dbg.spill13 = alloca i64, align 8
  %v1.dbg.spill11 = alloca i64, align 8
  %v2.dbg.spill10 = alloca i64, align 8
  %cap.dbg.spill = alloca i64, align 8
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %required_cap.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill9 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill6 = alloca i64, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca i64, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %_65 = alloca { i64, i64 }, align 8
  %_55 = alloca { i64, i64 }, align 8
  %_50 = alloca { i64, i64 }, align 8
  %residual4 = alloca { i64, i64 }, align 8
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %residual = alloca { i64, i64 }, align 8
  %err = alloca { i64, i64 }, align 8
  %self2 = alloca { i64, i64 }, align 8
  %self1 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !4551, metadata !DIExpression()), !dbg !4572
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !4552, metadata !DIExpression()), !dbg !4573
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !4553, metadata !DIExpression()), !dbg !4574
  call void @llvm.dbg.declare(metadata %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1, metadata !4575, metadata !DIExpression()), !dbg !4615
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self2, metadata !4617, metadata !DIExpression()), !dbg !4627
  call void @llvm.dbg.declare(metadata { i64, i64 }* %err, metadata !4623, metadata !DIExpression()), !dbg !4627
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !4628, metadata !DIExpression()), !dbg !4638
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3, metadata !4640, metadata !DIExpression()), !dbg !4666
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual4, metadata !4668, metadata !DIExpression()), !dbg !4678
  br i1 false, label %bb1, label %bb3, !dbg !4680

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !4681
  store i64 0, i64* %1, align 8, !dbg !4681
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !4681
  %3 = load i64, i64* %2, align 8, !dbg !4681
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !4681
  %5 = load i64, i64* %4, align 8, !dbg !4681, !range !649, !noundef !19
; call <T as core::convert::Into<U>>::into
  %6 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbe9ccf7077ea30d7E"(i64 %3, i64 %5), !dbg !4681
  %_5.0 = extractvalue { i64, i64 } %6, 0, !dbg !4681
  %_5.1 = extractvalue { i64, i64 } %6, 1, !dbg !4681
  br label %bb2, !dbg !4681

bb3:                                              ; preds = %start
; call core::num::<impl usize>::checked_add
  %7 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17haccc7065f0a07782E"(i64 %len, i64 %additional), !dbg !4616
  store { i64, i64 } %7, { i64, i64 }* %self2, align 8, !dbg !4616
  br label %bb4, !dbg !4616

bb4:                                              ; preds = %bb3
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !4682
  store i64 0, i64* %8, align 8, !dbg !4682
  %9 = bitcast { i64, i64 }* %self2 to i64*, !dbg !4627
  %_42 = load i64, i64* %9, align 8, !dbg !4627, !range !936, !noundef !19
  switch i64 %_42, label %bb20 [
    i64 0, label %bb19
    i64 1, label %bb21
  ], !dbg !4627

bb20:                                             ; preds = %bb4
  unreachable, !dbg !4627

bb19:                                             ; preds = %bb4
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 0, !dbg !4627
  %_45.0 = load i64, i64* %10, align 8, !dbg !4627
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !4627
  %_45.1 = load i64, i64* %11, align 8, !dbg !4627, !range !649, !noundef !19
  %12 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !4627
  %13 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %12, i32 0, i32 1, !dbg !4627
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !4627
  store i64 %_45.0, i64* %14, align 8, !dbg !4627
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !4627
  store i64 %_45.1, i64* %15, align 8, !dbg !4627
  %16 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !4627
  store i64 1, i64* %16, align 8, !dbg !4627
  br label %bb22, !dbg !4627

bb21:                                             ; preds = %bb4
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 1, !dbg !4627
  %v = load i64, i64* %17, align 8, !dbg !4627
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !4627
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !4624, metadata !DIExpression()), !dbg !4683
  %18 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !4683
  %19 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %18, i32 0, i32 1, !dbg !4683
  store i64 %v, i64* %19, align 8, !dbg !4683
  %20 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !4683
  store i64 0, i64* %20, align 8, !dbg !4683
  br label %bb22, !dbg !4627

bb22:                                             ; preds = %bb19, %bb21
  %21 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !4615
  %_46 = load i64, i64* %21, align 8, !dbg !4615, !range !936, !noundef !19
  switch i64 %_46, label %bb24 [
    i64 0, label %bb25
    i64 1, label %bb23
  ], !dbg !4615

bb24:                                             ; preds = %bb22
  unreachable, !dbg !4615

bb25:                                             ; preds = %bb22
  %22 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !4615
  %23 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %22, i32 0, i32 1, !dbg !4615
  %v5 = load i64, i64* %23, align 8, !dbg !4615
  store i64 %v5, i64* %v.dbg.spill6, align 8, !dbg !4615
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill6, metadata !4609, metadata !DIExpression()), !dbg !4684
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !4684
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %24, i32 0, i32 1, !dbg !4684
  store i64 %v5, i64* %25, align 8, !dbg !4684
  %26 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !4684
  store i64 0, i64* %26, align 8, !dbg !4684
  br label %bb5, !dbg !4615

bb23:                                             ; preds = %bb22
  %27 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !4615
  %28 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %27, i32 0, i32 1, !dbg !4615
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0, !dbg !4615
  %e.0 = load i64, i64* %29, align 8, !dbg !4615
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1, !dbg !4615
  %e.1 = load i64, i64* %30, align 8, !dbg !4615, !range !649, !noundef !19
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !4615
  store i64 %e.0, i64* %31, align 8, !dbg !4615
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !4615
  store i64 %e.1, i64* %32, align 8, !dbg !4615
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !4612, metadata !DIExpression()), !dbg !4685
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !4685
  store i64 %e.0, i64* %33, align 8, !dbg !4685
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !4685
  store i64 %e.1, i64* %34, align 8, !dbg !4685
  %35 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !4685
  %36 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %35, i32 0, i32 1, !dbg !4685
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !4685
  %38 = load i64, i64* %37, align 8, !dbg !4685
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !4685
  %40 = load i64, i64* %39, align 8, !dbg !4685, !range !649, !noundef !19
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 0, !dbg !4685
  store i64 %38, i64* %41, align 8, !dbg !4685
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 1, !dbg !4685
  store i64 %40, i64* %42, align 8, !dbg !4685
  %43 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !4685
  store i64 1, i64* %43, align 8, !dbg !4685
  br label %bb5, !dbg !4615

bb5:                                              ; preds = %bb25, %bb23
  %44 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !4616
  %_14 = load i64, i64* %44, align 8, !dbg !4616, !range !936, !noundef !19
  switch i64 %_14, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !4616

bb7:                                              ; preds = %bb5
  unreachable, !dbg !4616

bb6:                                              ; preds = %bb5
  %45 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !4616
  %46 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %45, i32 0, i32 1, !dbg !4616
  %val = load i64, i64* %46, align 8, !dbg !4616
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !4616
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !4558, metadata !DIExpression()), !dbg !4686
  store i64 %val, i64* %required_cap.dbg.spill, align 8, !dbg !4686
  call void @llvm.dbg.declare(metadata i64* %required_cap.dbg.spill, metadata !4554, metadata !DIExpression()), !dbg !4687
  %47 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !4688
  %_20 = load i64, i64* %47, align 8, !dbg !4688
  %v1 = mul i64 %_20, 2, !dbg !4688
  store i64 %v1, i64* %v1.dbg.spill, align 8, !dbg !4688
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !4689, metadata !DIExpression()), !dbg !4694
  store i64 %val, i64* %v2.dbg.spill, align 8, !dbg !4696
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !4693, metadata !DIExpression()), !dbg !4694
; call core::cmp::Ord::max
  %cap = call i64 @_ZN4core3cmp3Ord3max17haa98f192bff214e2E(i64 %v1, i64 %val), !dbg !4694
  store i64 %cap, i64* %cap.dbg.spill, align 8, !dbg !4694
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !4560, metadata !DIExpression()), !dbg !4697
  br label %bb26, !dbg !4694

bb8:                                              ; preds = %bb5
  %48 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !4698
  %49 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %48, i32 0, i32 1, !dbg !4698
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 0, !dbg !4698
  %residual.0 = load i64, i64* %50, align 8, !dbg !4698
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 1, !dbg !4698
  %residual.1 = load i64, i64* %51, align 8, !dbg !4698, !range !649, !noundef !19
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !4698
  store i64 %residual.0, i64* %52, align 8, !dbg !4698
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !4698
  store i64 %residual.1, i64* %53, align 8, !dbg !4698
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !4556, metadata !DIExpression()), !dbg !4699
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !4699
  store i64 %residual.0, i64* %54, align 8, !dbg !4699
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !4699
  store i64 %residual.1, i64* %55, align 8, !dbg !4699
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !4638
  %e.07 = load i64, i64* %56, align 8, !dbg !4638
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !4638
  %e.18 = load i64, i64* %57, align 8, !dbg !4638, !range !649, !noundef !19
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 0, !dbg !4638
  store i64 %e.07, i64* %58, align 8, !dbg !4638
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 1, !dbg !4638
  store i64 %e.18, i64* %59, align 8, !dbg !4638
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill9, metadata !4634, metadata !DIExpression()), !dbg !4700
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0, !dbg !4700
  store i64 %e.07, i64* %60, align 8, !dbg !4700
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1, !dbg !4700
  store i64 %e.18, i64* %61, align 8, !dbg !4700
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !4701, metadata !DIExpression()), !dbg !4705
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !4705
  store i64 %e.07, i64* %62, align 8, !dbg !4705
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !4705
  store i64 %e.18, i64* %63, align 8, !dbg !4705
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !4700
  %65 = load i64, i64* %64, align 8, !dbg !4700
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !4700
  %67 = load i64, i64* %66, align 8, !dbg !4700, !range !649, !noundef !19
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4700
  store i64 %65, i64* %68, align 8, !dbg !4700
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4700
  store i64 %67, i64* %69, align 8, !dbg !4700
  br label %bb17, !dbg !4707

bb17:                                             ; preds = %bb31, %bb8
  br label %bb18, !dbg !4707

bb26:                                             ; preds = %bb6
  store i64 %cap, i64* %v2.dbg.spill10, align 8, !dbg !4709
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill10, metadata !4710, metadata !DIExpression()), !dbg !4715
  store i64 4, i64* %v1.dbg.spill11, align 8, !dbg !4716
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill11, metadata !4714, metadata !DIExpression()), !dbg !4715
; call core::cmp::Ord::max
  %cap12 = call i64 @_ZN4core3cmp3Ord3max17haa98f192bff214e2E(i64 4, i64 %cap), !dbg !4715
  store i64 %cap12, i64* %cap.dbg.spill13, align 8, !dbg !4715
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill13, metadata !4562, metadata !DIExpression()), !dbg !4717
  br label %bb27, !dbg !4715

bb27:                                             ; preds = %bb26
; call core::alloc::layout::Layout::array
  %70 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h277941258703e322E(i64 %cap12), !dbg !4718
  %new_layout.0 = extractvalue { i64, i64 } %70, 0, !dbg !4718
  %new_layout.1 = extractvalue { i64, i64 } %70, 1, !dbg !4718
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0, !dbg !4718
  store i64 %new_layout.0, i64* %71, align 8, !dbg !4718
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1, !dbg !4718
  store i64 %new_layout.1, i64* %72, align 8, !dbg !4718
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !4564, metadata !DIExpression()), !dbg !4719
  br label %bb9, !dbg !4718

bb9:                                              ; preds = %bb27
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h35125d36e3ff79c5E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_30, { i64*, i64 }* align 8 %self), !dbg !4720
  br label %bb10, !dbg !4720

bb10:                                             ; preds = %bb9
  %_33 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !4721
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h83a782e0c7d1deaeE(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %self3, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_30, %"alloc::alloc::Global"* align 1 %_33), !dbg !4667
  br label %bb11, !dbg !4667

bb11:                                             ; preds = %bb10
  %73 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to i64*, !dbg !4666
  %_61 = load i64, i64* %73, align 8, !dbg !4666, !range !936, !noundef !19
  switch i64 %_61, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ], !dbg !4666

bb29:                                             ; preds = %bb11
  unreachable, !dbg !4666

bb30:                                             ; preds = %bb11
  %74 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*, !dbg !4666
  %75 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %74, i32 0, i32 1, !dbg !4666
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 0, !dbg !4666
  %v.0 = load i8*, i8** %76, align 8, !dbg !4666, !nonnull !19, !noundef !19
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 1, !dbg !4666
  %v.1 = load i64, i64* %77, align 8, !dbg !4666
  %78 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 0, !dbg !4666
  store i8* %v.0, i8** %78, align 8, !dbg !4666
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 1, !dbg !4666
  store i64 %v.1, i64* %79, align 8, !dbg !4666
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill17, metadata !4660, metadata !DIExpression()), !dbg !4722
  %80 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !4722
  %81 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %80, i32 0, i32 1, !dbg !4722
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 0, !dbg !4722
  store i8* %v.0, i8** %82, align 8, !dbg !4722
  %83 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 1, !dbg !4722
  store i64 %v.1, i64* %83, align 8, !dbg !4722
  %84 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !4722
  store i64 0, i64* %84, align 8, !dbg !4722
  br label %bb12, !dbg !4666

bb28:                                             ; preds = %bb11
  %85 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !4666
  %86 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %85, i32 0, i32 1, !dbg !4666
  %87 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 0, !dbg !4666
  %e.014 = load i64, i64* %87, align 8, !dbg !4666
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 1, !dbg !4666
  %e.115 = load i64, i64* %88, align 8, !dbg !4666, !range !649, !noundef !19
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 0, !dbg !4666
  store i64 %e.014, i64* %89, align 8, !dbg !4666
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 1, !dbg !4666
  store i64 %e.115, i64* %90, align 8, !dbg !4666
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill16, metadata !4663, metadata !DIExpression()), !dbg !4723
  %91 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !4723
  store i64 %e.014, i64* %91, align 8, !dbg !4723
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !4723
  store i64 %e.115, i64* %92, align 8, !dbg !4723
  %93 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !4723
  %94 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %93, i32 0, i32 1, !dbg !4723
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !4723
  %96 = load i64, i64* %95, align 8, !dbg !4723
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !4723
  %98 = load i64, i64* %97, align 8, !dbg !4723, !range !649, !noundef !19
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 0, !dbg !4723
  store i64 %96, i64* %99, align 8, !dbg !4723
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 1, !dbg !4723
  store i64 %98, i64* %100, align 8, !dbg !4723
  %101 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !4723
  store i64 1, i64* %101, align 8, !dbg !4723
  br label %bb12, !dbg !4666

bb12:                                             ; preds = %bb30, %bb28
  %102 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !4667
  %_34 = load i64, i64* %102, align 8, !dbg !4667, !range !936, !noundef !19
  switch i64 %_34, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ], !dbg !4667

bb14:                                             ; preds = %bb12
  unreachable, !dbg !4667

bb13:                                             ; preds = %bb12
  %103 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !4667
  %104 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %103, i32 0, i32 1, !dbg !4667
  %105 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 0, !dbg !4667
  %val.0 = load i8*, i8** %105, align 8, !dbg !4667, !nonnull !19, !noundef !19
  %106 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 1, !dbg !4667
  %val.1 = load i64, i64* %106, align 8, !dbg !4667
  %107 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 0, !dbg !4667
  store i8* %val.0, i8** %107, align 8, !dbg !4667
  %108 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 1, !dbg !4667
  store i64 %val.1, i64* %108, align 8, !dbg !4667
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill24, metadata !4570, metadata !DIExpression()), !dbg !4724
  %109 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !4724
  store i8* %val.0, i8** %109, align 8, !dbg !4724
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !4724
  store i64 %val.1, i64* %110, align 8, !dbg !4724
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !4566, metadata !DIExpression()), !dbg !4725
; call alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h5a3646e76d701e77E"({ i64*, i64 }* align 8 %self, i8* %val.0, i64 %val.1, i64 %cap12), !dbg !4726
  br label %bb16, !dbg !4726

bb15:                                             ; preds = %bb12
  %111 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !4727
  %112 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %111, i32 0, i32 1, !dbg !4727
  %113 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 0, !dbg !4727
  %residual.018 = load i64, i64* %113, align 8, !dbg !4727
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 1, !dbg !4727
  %residual.119 = load i64, i64* %114, align 8, !dbg !4727, !range !649, !noundef !19
  %115 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 0, !dbg !4727
  store i64 %residual.018, i64* %115, align 8, !dbg !4727
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 1, !dbg !4727
  store i64 %residual.119, i64* %116, align 8, !dbg !4727
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill20, metadata !4568, metadata !DIExpression()), !dbg !4728
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !4728
  store i64 %residual.018, i64* %117, align 8, !dbg !4728
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !4728
  store i64 %residual.119, i64* %118, align 8, !dbg !4728
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !4678
  %e.021 = load i64, i64* %119, align 8, !dbg !4678
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !4678
  %e.122 = load i64, i64* %120, align 8, !dbg !4678, !range !649, !noundef !19
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 0, !dbg !4678
  store i64 %e.021, i64* %121, align 8, !dbg !4678
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 1, !dbg !4678
  store i64 %e.122, i64* %122, align 8, !dbg !4678
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill23, metadata !4674, metadata !DIExpression()), !dbg !4729
; call <T as core::convert::From<T>>::from
  %123 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha098773fc34e53f9E"(i64 %e.021, i64 %e.122), !dbg !4729
  %_68.0 = extractvalue { i64, i64 } %123, 0, !dbg !4729
  %_68.1 = extractvalue { i64, i64 } %123, 1, !dbg !4729
  br label %bb31, !dbg !4729

bb31:                                             ; preds = %bb15
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4729
  store i64 %_68.0, i64* %124, align 8, !dbg !4729
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4729
  store i64 %_68.1, i64* %125, align 8, !dbg !4729
  br label %bb17, !dbg !4730

bb18:                                             ; preds = %bb2, %bb16, %bb17
  %126 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4732
  %127 = load i64, i64* %126, align 8, !dbg !4732
  %128 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4732
  %129 = load i64, i64* %128, align 8, !dbg !4732, !range !2223, !noundef !19
  %130 = insertvalue { i64, i64 } undef, i64 %127, 0, !dbg !4732
  %131 = insertvalue { i64, i64 } %130, i64 %129, 1, !dbg !4732
  ret { i64, i64 } %131, !dbg !4732

bb16:                                             ; preds = %bb13
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4733
  store i64 -9223372036854775807, i64* %132, align 8, !dbg !4733
  br label %bb18, !dbg !4732

bb2:                                              ; preds = %bb1
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4734
  store i64 %_5.0, i64* %133, align 8, !dbg !4734
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4734
  store i64 %_5.1, i64* %134, align 8, !dbg !4734
  br label %bb18, !dbg !4707
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h3173f2e9cd926648E"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !4735 {
start:
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill24 = alloca { i8*, i64 }, align 8
  %e.dbg.spill23 = alloca { i64, i64 }, align 8
  %residual.dbg.spill20 = alloca { i64, i64 }, align 8
  %v.dbg.spill17 = alloca { i8*, i64 }, align 8
  %e.dbg.spill16 = alloca { i64, i64 }, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %cap.dbg.spill13 = alloca i64, align 8
  %v1.dbg.spill11 = alloca i64, align 8
  %v2.dbg.spill10 = alloca i64, align 8
  %cap.dbg.spill = alloca i64, align 8
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %required_cap.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill9 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill6 = alloca i64, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca i64, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_65 = alloca { i64, i64 }, align 8
  %_55 = alloca { i64, i64 }, align 8
  %_50 = alloca { i64, i64 }, align 8
  %residual4 = alloca { i64, i64 }, align 8
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %residual = alloca { i64, i64 }, align 8
  %err = alloca { i64, i64 }, align 8
  %self2 = alloca { i64, i64 }, align 8
  %self1 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !4740, metadata !DIExpression()), !dbg !4761
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !4741, metadata !DIExpression()), !dbg !4762
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !4742, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.declare(metadata %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1, metadata !4764, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self2, metadata !4776, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.declare(metadata { i64, i64 }* %err, metadata !4780, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !4785, metadata !DIExpression()), !dbg !4792
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3, metadata !4794, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual4, metadata !4806, metadata !DIExpression()), !dbg !4813
  br i1 false, label %bb1, label %bb3, !dbg !4815

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !4816
  store i64 0, i64* %1, align 8, !dbg !4816
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !4816
  %3 = load i64, i64* %2, align 8, !dbg !4816
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !4816
  %5 = load i64, i64* %4, align 8, !dbg !4816, !range !649, !noundef !19
; call <T as core::convert::Into<U>>::into
  %6 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbe9ccf7077ea30d7E"(i64 %3, i64 %5), !dbg !4816
  %_5.0 = extractvalue { i64, i64 } %6, 0, !dbg !4816
  %_5.1 = extractvalue { i64, i64 } %6, 1, !dbg !4816
  br label %bb2, !dbg !4816

bb3:                                              ; preds = %start
; call core::num::<impl usize>::checked_add
  %7 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17haccc7065f0a07782E"(i64 %len, i64 %additional), !dbg !4775
  store { i64, i64 } %7, { i64, i64 }* %self2, align 8, !dbg !4775
  br label %bb4, !dbg !4775

bb4:                                              ; preds = %bb3
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !4817
  store i64 0, i64* %8, align 8, !dbg !4817
  %9 = bitcast { i64, i64 }* %self2 to i64*, !dbg !4784
  %_42 = load i64, i64* %9, align 8, !dbg !4784, !range !936, !noundef !19
  switch i64 %_42, label %bb20 [
    i64 0, label %bb19
    i64 1, label %bb21
  ], !dbg !4784

bb20:                                             ; preds = %bb4
  unreachable, !dbg !4784

bb19:                                             ; preds = %bb4
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 0, !dbg !4784
  %_45.0 = load i64, i64* %10, align 8, !dbg !4784
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !4784
  %_45.1 = load i64, i64* %11, align 8, !dbg !4784, !range !649, !noundef !19
  %12 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !4784
  %13 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %12, i32 0, i32 1, !dbg !4784
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !4784
  store i64 %_45.0, i64* %14, align 8, !dbg !4784
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !4784
  store i64 %_45.1, i64* %15, align 8, !dbg !4784
  %16 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !4784
  store i64 1, i64* %16, align 8, !dbg !4784
  br label %bb22, !dbg !4784

bb21:                                             ; preds = %bb4
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 1, !dbg !4784
  %v = load i64, i64* %17, align 8, !dbg !4784
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !4784
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !4781, metadata !DIExpression()), !dbg !4818
  %18 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !4818
  %19 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %18, i32 0, i32 1, !dbg !4818
  store i64 %v, i64* %19, align 8, !dbg !4818
  %20 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !4818
  store i64 0, i64* %20, align 8, !dbg !4818
  br label %bb22, !dbg !4784

bb22:                                             ; preds = %bb19, %bb21
  %21 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !4774
  %_46 = load i64, i64* %21, align 8, !dbg !4774, !range !936, !noundef !19
  switch i64 %_46, label %bb24 [
    i64 0, label %bb25
    i64 1, label %bb23
  ], !dbg !4774

bb24:                                             ; preds = %bb22
  unreachable, !dbg !4774

bb25:                                             ; preds = %bb22
  %22 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !4774
  %23 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %22, i32 0, i32 1, !dbg !4774
  %v5 = load i64, i64* %23, align 8, !dbg !4774
  store i64 %v5, i64* %v.dbg.spill6, align 8, !dbg !4774
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill6, metadata !4768, metadata !DIExpression()), !dbg !4819
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !4819
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %24, i32 0, i32 1, !dbg !4819
  store i64 %v5, i64* %25, align 8, !dbg !4819
  %26 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !4819
  store i64 0, i64* %26, align 8, !dbg !4819
  br label %bb5, !dbg !4774

bb23:                                             ; preds = %bb22
  %27 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !4774
  %28 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %27, i32 0, i32 1, !dbg !4774
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0, !dbg !4774
  %e.0 = load i64, i64* %29, align 8, !dbg !4774
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1, !dbg !4774
  %e.1 = load i64, i64* %30, align 8, !dbg !4774, !range !649, !noundef !19
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !4774
  store i64 %e.0, i64* %31, align 8, !dbg !4774
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !4774
  store i64 %e.1, i64* %32, align 8, !dbg !4774
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !4771, metadata !DIExpression()), !dbg !4820
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !4820
  store i64 %e.0, i64* %33, align 8, !dbg !4820
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !4820
  store i64 %e.1, i64* %34, align 8, !dbg !4820
  %35 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !4820
  %36 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %35, i32 0, i32 1, !dbg !4820
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !4820
  %38 = load i64, i64* %37, align 8, !dbg !4820
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !4820
  %40 = load i64, i64* %39, align 8, !dbg !4820, !range !649, !noundef !19
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 0, !dbg !4820
  store i64 %38, i64* %41, align 8, !dbg !4820
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 1, !dbg !4820
  store i64 %40, i64* %42, align 8, !dbg !4820
  %43 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !4820
  store i64 1, i64* %43, align 8, !dbg !4820
  br label %bb5, !dbg !4774

bb5:                                              ; preds = %bb25, %bb23
  %44 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !4775
  %_14 = load i64, i64* %44, align 8, !dbg !4775, !range !936, !noundef !19
  switch i64 %_14, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !4775

bb7:                                              ; preds = %bb5
  unreachable, !dbg !4775

bb6:                                              ; preds = %bb5
  %45 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !4775
  %46 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %45, i32 0, i32 1, !dbg !4775
  %val = load i64, i64* %46, align 8, !dbg !4775
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !4775
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !4747, metadata !DIExpression()), !dbg !4821
  store i64 %val, i64* %required_cap.dbg.spill, align 8, !dbg !4821
  call void @llvm.dbg.declare(metadata i64* %required_cap.dbg.spill, metadata !4743, metadata !DIExpression()), !dbg !4822
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !4823
  %_20 = load i64, i64* %47, align 8, !dbg !4823
  %v1 = mul i64 %_20, 2, !dbg !4823
  store i64 %v1, i64* %v1.dbg.spill, align 8, !dbg !4823
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !4824, metadata !DIExpression()), !dbg !4829
  store i64 %val, i64* %v2.dbg.spill, align 8, !dbg !4831
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !4828, metadata !DIExpression()), !dbg !4829
; call core::cmp::Ord::max
  %cap = call i64 @_ZN4core3cmp3Ord3max17haa98f192bff214e2E(i64 %v1, i64 %val), !dbg !4829
  store i64 %cap, i64* %cap.dbg.spill, align 8, !dbg !4829
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !4749, metadata !DIExpression()), !dbg !4832
  br label %bb26, !dbg !4829

bb8:                                              ; preds = %bb5
  %48 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !4833
  %49 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %48, i32 0, i32 1, !dbg !4833
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 0, !dbg !4833
  %residual.0 = load i64, i64* %50, align 8, !dbg !4833
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 1, !dbg !4833
  %residual.1 = load i64, i64* %51, align 8, !dbg !4833, !range !649, !noundef !19
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !4833
  store i64 %residual.0, i64* %52, align 8, !dbg !4833
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !4833
  store i64 %residual.1, i64* %53, align 8, !dbg !4833
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !4745, metadata !DIExpression()), !dbg !4834
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !4834
  store i64 %residual.0, i64* %54, align 8, !dbg !4834
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !4834
  store i64 %residual.1, i64* %55, align 8, !dbg !4834
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !4792
  %e.07 = load i64, i64* %56, align 8, !dbg !4792
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !4792
  %e.18 = load i64, i64* %57, align 8, !dbg !4792, !range !649, !noundef !19
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 0, !dbg !4792
  store i64 %e.07, i64* %58, align 8, !dbg !4792
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 1, !dbg !4792
  store i64 %e.18, i64* %59, align 8, !dbg !4792
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill9, metadata !4789, metadata !DIExpression()), !dbg !4835
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0, !dbg !4835
  store i64 %e.07, i64* %60, align 8, !dbg !4835
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1, !dbg !4835
  store i64 %e.18, i64* %61, align 8, !dbg !4835
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !4836, metadata !DIExpression()), !dbg !4840
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !4840
  store i64 %e.07, i64* %62, align 8, !dbg !4840
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !4840
  store i64 %e.18, i64* %63, align 8, !dbg !4840
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !4835
  %65 = load i64, i64* %64, align 8, !dbg !4835
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !4835
  %67 = load i64, i64* %66, align 8, !dbg !4835, !range !649, !noundef !19
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4835
  store i64 %65, i64* %68, align 8, !dbg !4835
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4835
  store i64 %67, i64* %69, align 8, !dbg !4835
  br label %bb17, !dbg !4842

bb17:                                             ; preds = %bb31, %bb8
  br label %bb18, !dbg !4842

bb26:                                             ; preds = %bb6
  store i64 %cap, i64* %v2.dbg.spill10, align 8, !dbg !4844
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill10, metadata !4845, metadata !DIExpression()), !dbg !4850
  store i64 8, i64* %v1.dbg.spill11, align 8, !dbg !4851
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill11, metadata !4849, metadata !DIExpression()), !dbg !4850
; call core::cmp::Ord::max
  %cap12 = call i64 @_ZN4core3cmp3Ord3max17haa98f192bff214e2E(i64 8, i64 %cap), !dbg !4850
  store i64 %cap12, i64* %cap.dbg.spill13, align 8, !dbg !4850
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill13, metadata !4751, metadata !DIExpression()), !dbg !4852
  br label %bb27, !dbg !4850

bb27:                                             ; preds = %bb26
; call core::alloc::layout::Layout::array
  %70 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h1323d54702b1344aE(i64 %cap12), !dbg !4853
  %new_layout.0 = extractvalue { i64, i64 } %70, 0, !dbg !4853
  %new_layout.1 = extractvalue { i64, i64 } %70, 1, !dbg !4853
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0, !dbg !4853
  store i64 %new_layout.0, i64* %71, align 8, !dbg !4853
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1, !dbg !4853
  store i64 %new_layout.1, i64* %72, align 8, !dbg !4853
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !4753, metadata !DIExpression()), !dbg !4854
  br label %bb9, !dbg !4853

bb9:                                              ; preds = %bb27
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h228271933e00ee8dE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_30, { i8*, i64 }* align 8 %self), !dbg !4855
  br label %bb10, !dbg !4855

bb10:                                             ; preds = %bb9
  %_33 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !4856
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h83a782e0c7d1deaeE(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %self3, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_30, %"alloc::alloc::Global"* align 1 %_33), !dbg !4805
  br label %bb11, !dbg !4805

bb11:                                             ; preds = %bb10
  %73 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to i64*, !dbg !4804
  %_61 = load i64, i64* %73, align 8, !dbg !4804, !range !936, !noundef !19
  switch i64 %_61, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ], !dbg !4804

bb29:                                             ; preds = %bb11
  unreachable, !dbg !4804

bb30:                                             ; preds = %bb11
  %74 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*, !dbg !4804
  %75 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %74, i32 0, i32 1, !dbg !4804
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 0, !dbg !4804
  %v.0 = load i8*, i8** %76, align 8, !dbg !4804, !nonnull !19, !noundef !19
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 1, !dbg !4804
  %v.1 = load i64, i64* %77, align 8, !dbg !4804
  %78 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 0, !dbg !4804
  store i8* %v.0, i8** %78, align 8, !dbg !4804
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 1, !dbg !4804
  store i64 %v.1, i64* %79, align 8, !dbg !4804
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill17, metadata !4798, metadata !DIExpression()), !dbg !4857
  %80 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !4857
  %81 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %80, i32 0, i32 1, !dbg !4857
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 0, !dbg !4857
  store i8* %v.0, i8** %82, align 8, !dbg !4857
  %83 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 1, !dbg !4857
  store i64 %v.1, i64* %83, align 8, !dbg !4857
  %84 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !4857
  store i64 0, i64* %84, align 8, !dbg !4857
  br label %bb12, !dbg !4804

bb28:                                             ; preds = %bb11
  %85 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !4804
  %86 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %85, i32 0, i32 1, !dbg !4804
  %87 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 0, !dbg !4804
  %e.014 = load i64, i64* %87, align 8, !dbg !4804
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 1, !dbg !4804
  %e.115 = load i64, i64* %88, align 8, !dbg !4804, !range !649, !noundef !19
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 0, !dbg !4804
  store i64 %e.014, i64* %89, align 8, !dbg !4804
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 1, !dbg !4804
  store i64 %e.115, i64* %90, align 8, !dbg !4804
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill16, metadata !4801, metadata !DIExpression()), !dbg !4858
  %91 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !4858
  store i64 %e.014, i64* %91, align 8, !dbg !4858
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !4858
  store i64 %e.115, i64* %92, align 8, !dbg !4858
  %93 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !4858
  %94 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %93, i32 0, i32 1, !dbg !4858
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !4858
  %96 = load i64, i64* %95, align 8, !dbg !4858
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !4858
  %98 = load i64, i64* %97, align 8, !dbg !4858, !range !649, !noundef !19
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 0, !dbg !4858
  store i64 %96, i64* %99, align 8, !dbg !4858
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 1, !dbg !4858
  store i64 %98, i64* %100, align 8, !dbg !4858
  %101 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !4858
  store i64 1, i64* %101, align 8, !dbg !4858
  br label %bb12, !dbg !4804

bb12:                                             ; preds = %bb30, %bb28
  %102 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !4805
  %_34 = load i64, i64* %102, align 8, !dbg !4805, !range !936, !noundef !19
  switch i64 %_34, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ], !dbg !4805

bb14:                                             ; preds = %bb12
  unreachable, !dbg !4805

bb13:                                             ; preds = %bb12
  %103 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !4805
  %104 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %103, i32 0, i32 1, !dbg !4805
  %105 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 0, !dbg !4805
  %val.0 = load i8*, i8** %105, align 8, !dbg !4805, !nonnull !19, !noundef !19
  %106 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 1, !dbg !4805
  %val.1 = load i64, i64* %106, align 8, !dbg !4805
  %107 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 0, !dbg !4805
  store i8* %val.0, i8** %107, align 8, !dbg !4805
  %108 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 1, !dbg !4805
  store i64 %val.1, i64* %108, align 8, !dbg !4805
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill24, metadata !4759, metadata !DIExpression()), !dbg !4859
  %109 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !4859
  store i8* %val.0, i8** %109, align 8, !dbg !4859
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !4859
  store i64 %val.1, i64* %110, align 8, !dbg !4859
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !4755, metadata !DIExpression()), !dbg !4860
; call alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h8cbdcbfcd7396978E"({ i8*, i64 }* align 8 %self, i8* %val.0, i64 %val.1, i64 %cap12), !dbg !4861
  br label %bb16, !dbg !4861

bb15:                                             ; preds = %bb12
  %111 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !4862
  %112 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %111, i32 0, i32 1, !dbg !4862
  %113 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 0, !dbg !4862
  %residual.018 = load i64, i64* %113, align 8, !dbg !4862
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 1, !dbg !4862
  %residual.119 = load i64, i64* %114, align 8, !dbg !4862, !range !649, !noundef !19
  %115 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 0, !dbg !4862
  store i64 %residual.018, i64* %115, align 8, !dbg !4862
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 1, !dbg !4862
  store i64 %residual.119, i64* %116, align 8, !dbg !4862
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill20, metadata !4757, metadata !DIExpression()), !dbg !4863
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !4863
  store i64 %residual.018, i64* %117, align 8, !dbg !4863
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !4863
  store i64 %residual.119, i64* %118, align 8, !dbg !4863
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !4813
  %e.021 = load i64, i64* %119, align 8, !dbg !4813
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !4813
  %e.122 = load i64, i64* %120, align 8, !dbg !4813, !range !649, !noundef !19
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 0, !dbg !4813
  store i64 %e.021, i64* %121, align 8, !dbg !4813
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 1, !dbg !4813
  store i64 %e.122, i64* %122, align 8, !dbg !4813
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill23, metadata !4810, metadata !DIExpression()), !dbg !4864
; call <T as core::convert::From<T>>::from
  %123 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha098773fc34e53f9E"(i64 %e.021, i64 %e.122), !dbg !4864
  %_68.0 = extractvalue { i64, i64 } %123, 0, !dbg !4864
  %_68.1 = extractvalue { i64, i64 } %123, 1, !dbg !4864
  br label %bb31, !dbg !4864

bb31:                                             ; preds = %bb15
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4864
  store i64 %_68.0, i64* %124, align 8, !dbg !4864
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4864
  store i64 %_68.1, i64* %125, align 8, !dbg !4864
  br label %bb17, !dbg !4865

bb18:                                             ; preds = %bb2, %bb16, %bb17
  %126 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4867
  %127 = load i64, i64* %126, align 8, !dbg !4867
  %128 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4867
  %129 = load i64, i64* %128, align 8, !dbg !4867, !range !2223, !noundef !19
  %130 = insertvalue { i64, i64 } undef, i64 %127, 0, !dbg !4867
  %131 = insertvalue { i64, i64 } %130, i64 %129, 1, !dbg !4867
  ret { i64, i64 } %131, !dbg !4867

bb16:                                             ; preds = %bb13
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4868
  store i64 -9223372036854775807, i64* %132, align 8, !dbg !4868
  br label %bb18, !dbg !4867

bb2:                                              ; preds = %bb1
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4869
  store i64 %_5.0, i64* %133, align 8, !dbg !4869
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4869
  store i64 %_5.1, i64* %134, align 8, !dbg !4869
  br label %bb18, !dbg !4842
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hd22e0de602bec0ddE"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !4870 {
start:
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill24 = alloca { i8*, i64 }, align 8
  %e.dbg.spill23 = alloca { i64, i64 }, align 8
  %residual.dbg.spill20 = alloca { i64, i64 }, align 8
  %v.dbg.spill17 = alloca { i8*, i64 }, align 8
  %e.dbg.spill16 = alloca { i64, i64 }, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %cap.dbg.spill13 = alloca i64, align 8
  %v1.dbg.spill11 = alloca i64, align 8
  %v2.dbg.spill10 = alloca i64, align 8
  %cap.dbg.spill = alloca i64, align 8
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %required_cap.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill9 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill6 = alloca i64, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca i64, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %_65 = alloca { i64, i64 }, align 8
  %_55 = alloca { i64, i64 }, align 8
  %_50 = alloca { i64, i64 }, align 8
  %residual4 = alloca { i64, i64 }, align 8
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %residual = alloca { i64, i64 }, align 8
  %err = alloca { i64, i64 }, align 8
  %self2 = alloca { i64, i64 }, align 8
  %self1 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !4875, metadata !DIExpression()), !dbg !4896
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !4876, metadata !DIExpression()), !dbg !4897
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !4877, metadata !DIExpression()), !dbg !4898
  call void @llvm.dbg.declare(metadata %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1, metadata !4899, metadata !DIExpression()), !dbg !4909
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self2, metadata !4911, metadata !DIExpression()), !dbg !4919
  call void @llvm.dbg.declare(metadata { i64, i64 }* %err, metadata !4915, metadata !DIExpression()), !dbg !4919
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !4920, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3, metadata !4929, metadata !DIExpression()), !dbg !4939
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual4, metadata !4941, metadata !DIExpression()), !dbg !4948
  br i1 false, label %bb1, label %bb3, !dbg !4950

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !4951
  store i64 0, i64* %1, align 8, !dbg !4951
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !4951
  %3 = load i64, i64* %2, align 8, !dbg !4951
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !4951
  %5 = load i64, i64* %4, align 8, !dbg !4951, !range !649, !noundef !19
; call <T as core::convert::Into<U>>::into
  %6 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbe9ccf7077ea30d7E"(i64 %3, i64 %5), !dbg !4951
  %_5.0 = extractvalue { i64, i64 } %6, 0, !dbg !4951
  %_5.1 = extractvalue { i64, i64 } %6, 1, !dbg !4951
  br label %bb2, !dbg !4951

bb3:                                              ; preds = %start
; call core::num::<impl usize>::checked_add
  %7 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17haccc7065f0a07782E"(i64 %len, i64 %additional), !dbg !4910
  store { i64, i64 } %7, { i64, i64 }* %self2, align 8, !dbg !4910
  br label %bb4, !dbg !4910

bb4:                                              ; preds = %bb3
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !4952
  store i64 0, i64* %8, align 8, !dbg !4952
  %9 = bitcast { i64, i64 }* %self2 to i64*, !dbg !4919
  %_42 = load i64, i64* %9, align 8, !dbg !4919, !range !936, !noundef !19
  switch i64 %_42, label %bb20 [
    i64 0, label %bb19
    i64 1, label %bb21
  ], !dbg !4919

bb20:                                             ; preds = %bb4
  unreachable, !dbg !4919

bb19:                                             ; preds = %bb4
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 0, !dbg !4919
  %_45.0 = load i64, i64* %10, align 8, !dbg !4919
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !4919
  %_45.1 = load i64, i64* %11, align 8, !dbg !4919, !range !649, !noundef !19
  %12 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !4919
  %13 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %12, i32 0, i32 1, !dbg !4919
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !4919
  store i64 %_45.0, i64* %14, align 8, !dbg !4919
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !4919
  store i64 %_45.1, i64* %15, align 8, !dbg !4919
  %16 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !4919
  store i64 1, i64* %16, align 8, !dbg !4919
  br label %bb22, !dbg !4919

bb21:                                             ; preds = %bb4
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 1, !dbg !4919
  %v = load i64, i64* %17, align 8, !dbg !4919
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !4919
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !4916, metadata !DIExpression()), !dbg !4953
  %18 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !4953
  %19 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %18, i32 0, i32 1, !dbg !4953
  store i64 %v, i64* %19, align 8, !dbg !4953
  %20 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !4953
  store i64 0, i64* %20, align 8, !dbg !4953
  br label %bb22, !dbg !4919

bb22:                                             ; preds = %bb19, %bb21
  %21 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !4909
  %_46 = load i64, i64* %21, align 8, !dbg !4909, !range !936, !noundef !19
  switch i64 %_46, label %bb24 [
    i64 0, label %bb25
    i64 1, label %bb23
  ], !dbg !4909

bb24:                                             ; preds = %bb22
  unreachable, !dbg !4909

bb25:                                             ; preds = %bb22
  %22 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !4909
  %23 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %22, i32 0, i32 1, !dbg !4909
  %v5 = load i64, i64* %23, align 8, !dbg !4909
  store i64 %v5, i64* %v.dbg.spill6, align 8, !dbg !4909
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill6, metadata !4903, metadata !DIExpression()), !dbg !4954
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !4954
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %24, i32 0, i32 1, !dbg !4954
  store i64 %v5, i64* %25, align 8, !dbg !4954
  %26 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !4954
  store i64 0, i64* %26, align 8, !dbg !4954
  br label %bb5, !dbg !4909

bb23:                                             ; preds = %bb22
  %27 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !4909
  %28 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %27, i32 0, i32 1, !dbg !4909
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0, !dbg !4909
  %e.0 = load i64, i64* %29, align 8, !dbg !4909
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1, !dbg !4909
  %e.1 = load i64, i64* %30, align 8, !dbg !4909, !range !649, !noundef !19
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !4909
  store i64 %e.0, i64* %31, align 8, !dbg !4909
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !4909
  store i64 %e.1, i64* %32, align 8, !dbg !4909
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !4906, metadata !DIExpression()), !dbg !4955
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !4955
  store i64 %e.0, i64* %33, align 8, !dbg !4955
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !4955
  store i64 %e.1, i64* %34, align 8, !dbg !4955
  %35 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !4955
  %36 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %35, i32 0, i32 1, !dbg !4955
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !4955
  %38 = load i64, i64* %37, align 8, !dbg !4955
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !4955
  %40 = load i64, i64* %39, align 8, !dbg !4955, !range !649, !noundef !19
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 0, !dbg !4955
  store i64 %38, i64* %41, align 8, !dbg !4955
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 1, !dbg !4955
  store i64 %40, i64* %42, align 8, !dbg !4955
  %43 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !4955
  store i64 1, i64* %43, align 8, !dbg !4955
  br label %bb5, !dbg !4909

bb5:                                              ; preds = %bb25, %bb23
  %44 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !4910
  %_14 = load i64, i64* %44, align 8, !dbg !4910, !range !936, !noundef !19
  switch i64 %_14, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !4910

bb7:                                              ; preds = %bb5
  unreachable, !dbg !4910

bb6:                                              ; preds = %bb5
  %45 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !4910
  %46 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %45, i32 0, i32 1, !dbg !4910
  %val = load i64, i64* %46, align 8, !dbg !4910
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !4910
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !4882, metadata !DIExpression()), !dbg !4956
  store i64 %val, i64* %required_cap.dbg.spill, align 8, !dbg !4956
  call void @llvm.dbg.declare(metadata i64* %required_cap.dbg.spill, metadata !4878, metadata !DIExpression()), !dbg !4957
  %47 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !4958
  %_20 = load i64, i64* %47, align 8, !dbg !4958
  %v1 = mul i64 %_20, 2, !dbg !4958
  store i64 %v1, i64* %v1.dbg.spill, align 8, !dbg !4958
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !4959, metadata !DIExpression()), !dbg !4964
  store i64 %val, i64* %v2.dbg.spill, align 8, !dbg !4966
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !4963, metadata !DIExpression()), !dbg !4964
; call core::cmp::Ord::max
  %cap = call i64 @_ZN4core3cmp3Ord3max17haa98f192bff214e2E(i64 %v1, i64 %val), !dbg !4964
  store i64 %cap, i64* %cap.dbg.spill, align 8, !dbg !4964
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !4884, metadata !DIExpression()), !dbg !4967
  br label %bb26, !dbg !4964

bb8:                                              ; preds = %bb5
  %48 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !4968
  %49 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %48, i32 0, i32 1, !dbg !4968
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 0, !dbg !4968
  %residual.0 = load i64, i64* %50, align 8, !dbg !4968
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 1, !dbg !4968
  %residual.1 = load i64, i64* %51, align 8, !dbg !4968, !range !649, !noundef !19
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !4968
  store i64 %residual.0, i64* %52, align 8, !dbg !4968
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !4968
  store i64 %residual.1, i64* %53, align 8, !dbg !4968
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !4880, metadata !DIExpression()), !dbg !4969
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !4969
  store i64 %residual.0, i64* %54, align 8, !dbg !4969
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !4969
  store i64 %residual.1, i64* %55, align 8, !dbg !4969
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !4927
  %e.07 = load i64, i64* %56, align 8, !dbg !4927
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !4927
  %e.18 = load i64, i64* %57, align 8, !dbg !4927, !range !649, !noundef !19
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 0, !dbg !4927
  store i64 %e.07, i64* %58, align 8, !dbg !4927
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 1, !dbg !4927
  store i64 %e.18, i64* %59, align 8, !dbg !4927
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill9, metadata !4924, metadata !DIExpression()), !dbg !4970
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0, !dbg !4970
  store i64 %e.07, i64* %60, align 8, !dbg !4970
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1, !dbg !4970
  store i64 %e.18, i64* %61, align 8, !dbg !4970
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !4971, metadata !DIExpression()), !dbg !4975
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !4975
  store i64 %e.07, i64* %62, align 8, !dbg !4975
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !4975
  store i64 %e.18, i64* %63, align 8, !dbg !4975
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !4970
  %65 = load i64, i64* %64, align 8, !dbg !4970
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !4970
  %67 = load i64, i64* %66, align 8, !dbg !4970, !range !649, !noundef !19
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4970
  store i64 %65, i64* %68, align 8, !dbg !4970
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4970
  store i64 %67, i64* %69, align 8, !dbg !4970
  br label %bb17, !dbg !4977

bb17:                                             ; preds = %bb31, %bb8
  br label %bb18, !dbg !4977

bb26:                                             ; preds = %bb6
  store i64 %cap, i64* %v2.dbg.spill10, align 8, !dbg !4979
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill10, metadata !4980, metadata !DIExpression()), !dbg !4985
  store i64 4, i64* %v1.dbg.spill11, align 8, !dbg !4986
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill11, metadata !4984, metadata !DIExpression()), !dbg !4985
; call core::cmp::Ord::max
  %cap12 = call i64 @_ZN4core3cmp3Ord3max17haa98f192bff214e2E(i64 4, i64 %cap), !dbg !4985
  store i64 %cap12, i64* %cap.dbg.spill13, align 8, !dbg !4985
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill13, metadata !4886, metadata !DIExpression()), !dbg !4987
  br label %bb27, !dbg !4985

bb27:                                             ; preds = %bb26
; call core::alloc::layout::Layout::array
  %70 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h2e3ae26bf90eeeb2E(i64 %cap12), !dbg !4988
  %new_layout.0 = extractvalue { i64, i64 } %70, 0, !dbg !4988
  %new_layout.1 = extractvalue { i64, i64 } %70, 1, !dbg !4988
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0, !dbg !4988
  store i64 %new_layout.0, i64* %71, align 8, !dbg !4988
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1, !dbg !4988
  store i64 %new_layout.1, i64* %72, align 8, !dbg !4988
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !4888, metadata !DIExpression()), !dbg !4989
  br label %bb9, !dbg !4988

bb9:                                              ; preds = %bb27
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h9bfd32aebd2503ffE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_30, { i64*, i64 }* align 8 %self), !dbg !4990
  br label %bb10, !dbg !4990

bb10:                                             ; preds = %bb9
  %_33 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !4991
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h83a782e0c7d1deaeE(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %self3, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_30, %"alloc::alloc::Global"* align 1 %_33), !dbg !4940
  br label %bb11, !dbg !4940

bb11:                                             ; preds = %bb10
  %73 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to i64*, !dbg !4939
  %_61 = load i64, i64* %73, align 8, !dbg !4939, !range !936, !noundef !19
  switch i64 %_61, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ], !dbg !4939

bb29:                                             ; preds = %bb11
  unreachable, !dbg !4939

bb30:                                             ; preds = %bb11
  %74 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*, !dbg !4939
  %75 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %74, i32 0, i32 1, !dbg !4939
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 0, !dbg !4939
  %v.0 = load i8*, i8** %76, align 8, !dbg !4939, !nonnull !19, !noundef !19
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 1, !dbg !4939
  %v.1 = load i64, i64* %77, align 8, !dbg !4939
  %78 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 0, !dbg !4939
  store i8* %v.0, i8** %78, align 8, !dbg !4939
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 1, !dbg !4939
  store i64 %v.1, i64* %79, align 8, !dbg !4939
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill17, metadata !4933, metadata !DIExpression()), !dbg !4992
  %80 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !4992
  %81 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %80, i32 0, i32 1, !dbg !4992
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 0, !dbg !4992
  store i8* %v.0, i8** %82, align 8, !dbg !4992
  %83 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 1, !dbg !4992
  store i64 %v.1, i64* %83, align 8, !dbg !4992
  %84 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !4992
  store i64 0, i64* %84, align 8, !dbg !4992
  br label %bb12, !dbg !4939

bb28:                                             ; preds = %bb11
  %85 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !4939
  %86 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %85, i32 0, i32 1, !dbg !4939
  %87 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 0, !dbg !4939
  %e.014 = load i64, i64* %87, align 8, !dbg !4939
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 1, !dbg !4939
  %e.115 = load i64, i64* %88, align 8, !dbg !4939, !range !649, !noundef !19
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 0, !dbg !4939
  store i64 %e.014, i64* %89, align 8, !dbg !4939
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 1, !dbg !4939
  store i64 %e.115, i64* %90, align 8, !dbg !4939
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill16, metadata !4936, metadata !DIExpression()), !dbg !4993
  %91 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !4993
  store i64 %e.014, i64* %91, align 8, !dbg !4993
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !4993
  store i64 %e.115, i64* %92, align 8, !dbg !4993
  %93 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !4993
  %94 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %93, i32 0, i32 1, !dbg !4993
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !4993
  %96 = load i64, i64* %95, align 8, !dbg !4993
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !4993
  %98 = load i64, i64* %97, align 8, !dbg !4993, !range !649, !noundef !19
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 0, !dbg !4993
  store i64 %96, i64* %99, align 8, !dbg !4993
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 1, !dbg !4993
  store i64 %98, i64* %100, align 8, !dbg !4993
  %101 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !4993
  store i64 1, i64* %101, align 8, !dbg !4993
  br label %bb12, !dbg !4939

bb12:                                             ; preds = %bb30, %bb28
  %102 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !4940
  %_34 = load i64, i64* %102, align 8, !dbg !4940, !range !936, !noundef !19
  switch i64 %_34, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ], !dbg !4940

bb14:                                             ; preds = %bb12
  unreachable, !dbg !4940

bb13:                                             ; preds = %bb12
  %103 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !4940
  %104 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %103, i32 0, i32 1, !dbg !4940
  %105 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 0, !dbg !4940
  %val.0 = load i8*, i8** %105, align 8, !dbg !4940, !nonnull !19, !noundef !19
  %106 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 1, !dbg !4940
  %val.1 = load i64, i64* %106, align 8, !dbg !4940
  %107 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 0, !dbg !4940
  store i8* %val.0, i8** %107, align 8, !dbg !4940
  %108 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 1, !dbg !4940
  store i64 %val.1, i64* %108, align 8, !dbg !4940
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill24, metadata !4894, metadata !DIExpression()), !dbg !4994
  %109 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !4994
  store i8* %val.0, i8** %109, align 8, !dbg !4994
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !4994
  store i64 %val.1, i64* %110, align 8, !dbg !4994
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !4890, metadata !DIExpression()), !dbg !4995
; call alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17hff72854179b1f1a2E"({ i64*, i64 }* align 8 %self, i8* %val.0, i64 %val.1, i64 %cap12), !dbg !4996
  br label %bb16, !dbg !4996

bb15:                                             ; preds = %bb12
  %111 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !4997
  %112 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %111, i32 0, i32 1, !dbg !4997
  %113 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 0, !dbg !4997
  %residual.018 = load i64, i64* %113, align 8, !dbg !4997
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 1, !dbg !4997
  %residual.119 = load i64, i64* %114, align 8, !dbg !4997, !range !649, !noundef !19
  %115 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 0, !dbg !4997
  store i64 %residual.018, i64* %115, align 8, !dbg !4997
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 1, !dbg !4997
  store i64 %residual.119, i64* %116, align 8, !dbg !4997
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill20, metadata !4892, metadata !DIExpression()), !dbg !4998
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !4998
  store i64 %residual.018, i64* %117, align 8, !dbg !4998
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !4998
  store i64 %residual.119, i64* %118, align 8, !dbg !4998
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !4948
  %e.021 = load i64, i64* %119, align 8, !dbg !4948
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !4948
  %e.122 = load i64, i64* %120, align 8, !dbg !4948, !range !649, !noundef !19
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 0, !dbg !4948
  store i64 %e.021, i64* %121, align 8, !dbg !4948
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 1, !dbg !4948
  store i64 %e.122, i64* %122, align 8, !dbg !4948
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill23, metadata !4945, metadata !DIExpression()), !dbg !4999
; call <T as core::convert::From<T>>::from
  %123 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha098773fc34e53f9E"(i64 %e.021, i64 %e.122), !dbg !4999
  %_68.0 = extractvalue { i64, i64 } %123, 0, !dbg !4999
  %_68.1 = extractvalue { i64, i64 } %123, 1, !dbg !4999
  br label %bb31, !dbg !4999

bb31:                                             ; preds = %bb15
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4999
  store i64 %_68.0, i64* %124, align 8, !dbg !4999
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4999
  store i64 %_68.1, i64* %125, align 8, !dbg !4999
  br label %bb17, !dbg !5000

bb18:                                             ; preds = %bb2, %bb16, %bb17
  %126 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !5002
  %127 = load i64, i64* %126, align 8, !dbg !5002
  %128 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5002
  %129 = load i64, i64* %128, align 8, !dbg !5002, !range !2223, !noundef !19
  %130 = insertvalue { i64, i64 } undef, i64 %127, 0, !dbg !5002
  %131 = insertvalue { i64, i64 } %130, i64 %129, 1, !dbg !5002
  ret { i64, i64 } %131, !dbg !5002

bb16:                                             ; preds = %bb13
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5003
  store i64 -9223372036854775807, i64* %132, align 8, !dbg !5003
  br label %bb18, !dbg !5002

bb2:                                              ; preds = %bb1
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !5004
  store i64 %_5.0, i64* %133, align 8, !dbg !5004
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5004
  store i64 %_5.1, i64* %134, align 8, !dbg !5004
  br label %bb18, !dbg !4977
}

; alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h5a3646e76d701e77E"({ i64*, i64 }* align 8 %self, i8* %ptr.0, i64 %ptr.1, i64 %cap) unnamed_addr #1 !dbg !5005 {
start:
  %ptr.dbg.spill6 = alloca %"alloc::string::String"*, align 8
  %ptr.dbg.spill5 = alloca %"alloc::string::String"*, align 8
  %ptr.dbg.spill4 = alloca %"alloc::string::String"*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }, align 8
  %cap.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %_17 = alloca i64*, align 8
  %self1 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !5009, metadata !DIExpression()), !dbg !5012
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store i8* %ptr.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !5010, metadata !DIExpression()), !dbg !5013
  store i64 %cap, i64* %cap.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !5011, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.declare(metadata i64** %self1, metadata !5015, metadata !DIExpression()), !dbg !5019
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !5020
  store i8* %ptr.0, i8** %2, align 8, !dbg !5020
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !5020
  store i64 %ptr.1, i64* %3, align 8, !dbg !5020
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill2, metadata !5021, metadata !DIExpression()), !dbg !5025
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !5025
  store i8* %ptr.0, i8** %4, align 8, !dbg !5025
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !5025
  store i64 %ptr.1, i64* %5, align 8, !dbg !5025
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !5026, metadata !DIExpression()), !dbg !5030
  %_12.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !5030
  %ptr = bitcast [0 x i8]* %_12.0 to %"alloc::string::String"*, !dbg !5025
  store %"alloc::string::String"* %ptr, %"alloc::string::String"** %ptr.dbg.spill4, align 8, !dbg !5025
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %ptr.dbg.spill4, metadata !5032, metadata !DIExpression()), !dbg !5036
  %6 = bitcast i64** %self1 to %"alloc::string::String"**, !dbg !5036
  store %"alloc::string::String"* %ptr, %"alloc::string::String"** %6, align 8, !dbg !5036
  %7 = bitcast i64** %self1 to %"alloc::string::String"**, !dbg !5019
  %_16 = load %"alloc::string::String"*, %"alloc::string::String"** %7, align 8, !dbg !5019
  store %"alloc::string::String"* %_16, %"alloc::string::String"** %ptr.dbg.spill5, align 8, !dbg !5019
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %ptr.dbg.spill5, metadata !5038, metadata !DIExpression()), !dbg !5042
  store %"alloc::string::String"* %_16, %"alloc::string::String"** %ptr.dbg.spill6, align 8, !dbg !5042
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %ptr.dbg.spill6, metadata !5044, metadata !DIExpression()), !dbg !5048
  %8 = bitcast i64** %_17 to %"alloc::string::String"**, !dbg !5048
  store %"alloc::string::String"* %_16, %"alloc::string::String"** %8, align 8, !dbg !5048
  %9 = load i64*, i64** %_17, align 8, !dbg !5042, !nonnull !19, !noundef !19
  store i64* %9, i64** %_4, align 8, !dbg !5042
  %10 = bitcast { i64*, i64 }* %self to i64**, !dbg !5050
  %11 = load i64*, i64** %_4, align 8, !dbg !5050, !nonnull !19, !noundef !19
  store i64* %11, i64** %10, align 8, !dbg !5050
  %12 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !5051
  store i64 %cap, i64* %12, align 8, !dbg !5051
  ret void, !dbg !5052
}

; alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h8cbdcbfcd7396978E"({ i8*, i64 }* align 8 %self, i8* %ptr.0, i64 %ptr.1, i64 %cap) unnamed_addr #1 !dbg !5053 {
start:
  %ptr.dbg.spill6 = alloca i8*, align 8
  %ptr.dbg.spill5 = alloca i8*, align 8
  %ptr.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }, align 8
  %cap.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_17 = alloca i8*, align 8
  %self1 = alloca i8*, align 8
  %_4 = alloca i8*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !5057, metadata !DIExpression()), !dbg !5060
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store i8* %ptr.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !5058, metadata !DIExpression()), !dbg !5061
  store i64 %cap, i64* %cap.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !5059, metadata !DIExpression()), !dbg !5062
  call void @llvm.dbg.declare(metadata i8** %self1, metadata !5063, metadata !DIExpression()), !dbg !5067
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !5068
  store i8* %ptr.0, i8** %2, align 8, !dbg !5068
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !5068
  store i64 %ptr.1, i64* %3, align 8, !dbg !5068
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill2, metadata !5069, metadata !DIExpression()), !dbg !5073
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !5073
  store i8* %ptr.0, i8** %4, align 8, !dbg !5073
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !5073
  store i64 %ptr.1, i64* %5, align 8, !dbg !5073
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !5074, metadata !DIExpression()), !dbg !5078
  %_12.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !5078
  %ptr = bitcast [0 x i8]* %_12.0 to i8*, !dbg !5073
  store i8* %ptr, i8** %ptr.dbg.spill4, align 8, !dbg !5073
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill4, metadata !5080, metadata !DIExpression()), !dbg !5084
  store i8* %ptr, i8** %self1, align 8, !dbg !5084
  %_16 = load i8*, i8** %self1, align 8, !dbg !5067
  store i8* %_16, i8** %ptr.dbg.spill5, align 8, !dbg !5067
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill5, metadata !5086, metadata !DIExpression()), !dbg !5092
  store i8* %_16, i8** %ptr.dbg.spill6, align 8, !dbg !5092
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill6, metadata !5094, metadata !DIExpression()), !dbg !5098
  store i8* %_16, i8** %_17, align 8, !dbg !5098
  %6 = load i8*, i8** %_17, align 8, !dbg !5092, !nonnull !19, !noundef !19
  store i8* %6, i8** %_4, align 8, !dbg !5092
  %7 = bitcast { i8*, i64 }* %self to i8**, !dbg !5100
  %8 = load i8*, i8** %_4, align 8, !dbg !5100, !nonnull !19, !noundef !19
  store i8* %8, i8** %7, align 8, !dbg !5100
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !5101
  store i64 %cap, i64* %9, align 8, !dbg !5101
  ret void, !dbg !5102
}

; alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17hff72854179b1f1a2E"({ i64*, i64 }* align 8 %self, i8* %ptr.0, i64 %ptr.1, i64 %cap) unnamed_addr #1 !dbg !5103 {
start:
  %ptr.dbg.spill6 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %ptr.dbg.spill5 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %ptr.dbg.spill4 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }, align 8
  %cap.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %_17 = alloca i64*, align 8
  %self1 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !5107, metadata !DIExpression()), !dbg !5110
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store i8* %ptr.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !5108, metadata !DIExpression()), !dbg !5111
  store i64 %cap, i64* %cap.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !5109, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.declare(metadata i64** %self1, metadata !5113, metadata !DIExpression()), !dbg !5117
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !5118
  store i8* %ptr.0, i8** %2, align 8, !dbg !5118
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !5118
  store i64 %ptr.1, i64* %3, align 8, !dbg !5118
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill2, metadata !5119, metadata !DIExpression()), !dbg !5123
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !5123
  store i8* %ptr.0, i8** %4, align 8, !dbg !5123
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !5123
  store i64 %ptr.1, i64* %5, align 8, !dbg !5123
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !5124, metadata !DIExpression()), !dbg !5128
  %_12.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !5128
  %ptr = bitcast [0 x i8]* %_12.0 to %"alloc::vec::Vec<u8>"*, !dbg !5123
  store %"alloc::vec::Vec<u8>"* %ptr, %"alloc::vec::Vec<u8>"** %ptr.dbg.spill4, align 8, !dbg !5123
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %ptr.dbg.spill4, metadata !5130, metadata !DIExpression()), !dbg !5134
  %6 = bitcast i64** %self1 to %"alloc::vec::Vec<u8>"**, !dbg !5134
  store %"alloc::vec::Vec<u8>"* %ptr, %"alloc::vec::Vec<u8>"** %6, align 8, !dbg !5134
  %7 = bitcast i64** %self1 to %"alloc::vec::Vec<u8>"**, !dbg !5117
  %_16 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %7, align 8, !dbg !5117
  store %"alloc::vec::Vec<u8>"* %_16, %"alloc::vec::Vec<u8>"** %ptr.dbg.spill5, align 8, !dbg !5117
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %ptr.dbg.spill5, metadata !5136, metadata !DIExpression()), !dbg !5140
  store %"alloc::vec::Vec<u8>"* %_16, %"alloc::vec::Vec<u8>"** %ptr.dbg.spill6, align 8, !dbg !5140
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %ptr.dbg.spill6, metadata !5142, metadata !DIExpression()), !dbg !5146
  %8 = bitcast i64** %_17 to %"alloc::vec::Vec<u8>"**, !dbg !5146
  store %"alloc::vec::Vec<u8>"* %_16, %"alloc::vec::Vec<u8>"** %8, align 8, !dbg !5146
  %9 = load i64*, i64** %_17, align 8, !dbg !5140, !nonnull !19, !noundef !19
  store i64* %9, i64** %_4, align 8, !dbg !5140
  %10 = bitcast { i64*, i64 }* %self to i64**, !dbg !5148
  %11 = load i64*, i64** %_4, align 8, !dbg !5148, !nonnull !19, !noundef !19
  store i64* %11, i64** %10, align 8, !dbg !5148
  %12 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !5149
  store i64 %cap, i64* %12, align 8, !dbg !5149
  ret void, !dbg !5150
}

; alloc::raw_vec::RawVec<T,A>::reserve_for_push
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h06fafd2553dd81d4E"({ i8*, i64 }* align 8 %self, i64 %len) unnamed_addr #2 !dbg !5151 {
start:
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !5155, metadata !DIExpression()), !dbg !5157
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !5156, metadata !DIExpression()), !dbg !5158
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h3173f2e9cd926648E"({ i8*, i64 }* align 8 %self, i64 %len, i64 1), !dbg !5159
  %_4.0 = extractvalue { i64, i64 } %0, 0, !dbg !5159
  %_4.1 = extractvalue { i64, i64 } %0, 1, !dbg !5159
  br label %bb1, !dbg !5159

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h3cd82cf6d0832ad5E(i64 %_4.0, i64 %_4.1), !dbg !5160
  br label %bb2, !dbg !5160

bb2:                                              ; preds = %bb1
  ret void, !dbg !5161
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h0e80d6a7818cbea6E"() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5162 {
start:
  %ptr.dbg.spill1 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %1 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %addr.dbg.spill = alloca i64, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %pointer = alloca i64*, align 8
  %_2 = alloca i64*, align 8
  %2 = alloca { i64*, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !5166, metadata !DIExpression()), !dbg !5167
  call void @llvm.dbg.declare(metadata i64** %pointer, metadata !5168, metadata !DIExpression()), !dbg !5174
  store i64 8, i64* %addr.dbg.spill, align 8, !dbg !5180
  call void @llvm.dbg.declare(metadata i64* %addr.dbg.spill, metadata !5192, metadata !DIExpression()), !dbg !5198
  %3 = bitcast %"alloc::vec::Vec<u8>"** %1 to i64*, !dbg !5198
  store i64 8, i64* %3, align 8, !dbg !5198
  %ptr = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %1, align 8, !dbg !5198
  store %"alloc::vec::Vec<u8>"* %ptr, %"alloc::vec::Vec<u8>"** %ptr.dbg.spill, align 8, !dbg !5198
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %ptr.dbg.spill, metadata !5188, metadata !DIExpression()), !dbg !5200
  br label %bb3, !dbg !5198

bb3:                                              ; preds = %start
  store %"alloc::vec::Vec<u8>"* %ptr, %"alloc::vec::Vec<u8>"** %ptr.dbg.spill1, align 8, !dbg !5200
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %ptr.dbg.spill1, metadata !5201, metadata !DIExpression()), !dbg !5205
  %4 = bitcast i64** %pointer to %"alloc::vec::Vec<u8>"**, !dbg !5205
  store %"alloc::vec::Vec<u8>"* %ptr, %"alloc::vec::Vec<u8>"** %4, align 8, !dbg !5205
  %_12 = load i64*, i64** %pointer, align 8, !dbg !5174, !nonnull !19, !noundef !19
  store i64* %_12, i64** %_2, align 8, !dbg !5174
  %5 = bitcast { i64*, i64 }* %2 to i64**, !dbg !5207
  %6 = load i64*, i64** %_2, align 8, !dbg !5207, !nonnull !19, !noundef !19
  store i64* %6, i64** %5, align 8, !dbg !5207
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1, !dbg !5207
  store i64 0, i64* %7, align 8, !dbg !5207
  %8 = bitcast { i64*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !5207
  %9 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0, !dbg !5208
  %10 = load i64*, i64** %9, align 8, !dbg !5208, !nonnull !19, !noundef !19
  %11 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1, !dbg !5208
  %12 = load i64, i64* %11, align 8, !dbg !5208
  %13 = insertvalue { i64*, i64 } undef, i64* %10, 0, !dbg !5208
  %14 = insertvalue { i64*, i64 } %13, i64 %12, 1, !dbg !5208
  ret { i64*, i64 } %14, !dbg !5208

bb1:                                              ; No predecessors!
  br label %bb2, !dbg !5209

bb2:                                              ; preds = %bb1
  %15 = bitcast { i8*, i32 }* %0 to i8**, !dbg !5210
  %16 = load i8*, i8** %15, align 8, !dbg !5210
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !5210
  %18 = load i32, i32* %17, align 8, !dbg !5210
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0, !dbg !5210
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1, !dbg !5210
  resume { i8*, i32 } %20, !dbg !5210
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17ha1c55d931f6b3c06E"() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5211 {
start:
  %ptr.dbg.spill1 = alloca %"alloc::string::String"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill = alloca %"alloc::string::String"*, align 8
  %1 = alloca %"alloc::string::String"*, align 8
  %addr.dbg.spill = alloca i64, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %pointer = alloca i64*, align 8
  %_2 = alloca i64*, align 8
  %2 = alloca { i64*, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !5215, metadata !DIExpression()), !dbg !5216
  call void @llvm.dbg.declare(metadata i64** %pointer, metadata !5217, metadata !DIExpression()), !dbg !5223
  store i64 8, i64* %addr.dbg.spill, align 8, !dbg !5229
  call void @llvm.dbg.declare(metadata i64* %addr.dbg.spill, metadata !5241, metadata !DIExpression()), !dbg !5247
  %3 = bitcast %"alloc::string::String"** %1 to i64*, !dbg !5247
  store i64 8, i64* %3, align 8, !dbg !5247
  %ptr = load %"alloc::string::String"*, %"alloc::string::String"** %1, align 8, !dbg !5247
  store %"alloc::string::String"* %ptr, %"alloc::string::String"** %ptr.dbg.spill, align 8, !dbg !5247
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %ptr.dbg.spill, metadata !5237, metadata !DIExpression()), !dbg !5249
  br label %bb3, !dbg !5247

bb3:                                              ; preds = %start
  store %"alloc::string::String"* %ptr, %"alloc::string::String"** %ptr.dbg.spill1, align 8, !dbg !5249
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %ptr.dbg.spill1, metadata !5250, metadata !DIExpression()), !dbg !5254
  %4 = bitcast i64** %pointer to %"alloc::string::String"**, !dbg !5254
  store %"alloc::string::String"* %ptr, %"alloc::string::String"** %4, align 8, !dbg !5254
  %_12 = load i64*, i64** %pointer, align 8, !dbg !5223, !nonnull !19, !noundef !19
  store i64* %_12, i64** %_2, align 8, !dbg !5223
  %5 = bitcast { i64*, i64 }* %2 to i64**, !dbg !5256
  %6 = load i64*, i64** %_2, align 8, !dbg !5256, !nonnull !19, !noundef !19
  store i64* %6, i64** %5, align 8, !dbg !5256
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1, !dbg !5256
  store i64 0, i64* %7, align 8, !dbg !5256
  %8 = bitcast { i64*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !5256
  %9 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0, !dbg !5257
  %10 = load i64*, i64** %9, align 8, !dbg !5257, !nonnull !19, !noundef !19
  %11 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1, !dbg !5257
  %12 = load i64, i64* %11, align 8, !dbg !5257
  %13 = insertvalue { i64*, i64 } undef, i64* %10, 0, !dbg !5257
  %14 = insertvalue { i64*, i64 } %13, i64 %12, 1, !dbg !5257
  ret { i64*, i64 } %14, !dbg !5257

bb1:                                              ; No predecessors!
  br label %bb2, !dbg !5258

bb2:                                              ; preds = %bb1
  %15 = bitcast { i8*, i32 }* %0 to i8**, !dbg !5259
  %16 = load i8*, i8** %15, align 8, !dbg !5259
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !5259
  %18 = load i32, i32* %17, align 8, !dbg !5259
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0, !dbg !5259
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1, !dbg !5259
  resume { i8*, i32 } %20, !dbg !5259
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hb30ec92957c0cdd1E"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !5260 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !5264, metadata !DIExpression()), !dbg !5267
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !5265, metadata !DIExpression()), !dbg !5268
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !5266, metadata !DIExpression()), !dbg !5269
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h490b3846561cd739E"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !5270
  br label %bb1, !dbg !5270

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4, !dbg !5270

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !5271

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hdabeb82f97321281E"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !5272
  br label %bb3, !dbg !5272

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !5273
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hcd8ff809399e9831E"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !5274 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !5278, metadata !DIExpression()), !dbg !5281
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !5279, metadata !DIExpression()), !dbg !5282
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !5280, metadata !DIExpression()), !dbg !5283
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h8afd9d8b5c1bd8f3E"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !5284
  br label %bb1, !dbg !5284

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4, !dbg !5284

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !5285

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h213d6a59b0aaaeb0E"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !5286
  br label %bb3, !dbg !5286

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !5287
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hce75b963db962c72E"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !5288 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !5292, metadata !DIExpression()), !dbg !5295
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !5293, metadata !DIExpression()), !dbg !5296
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !5294, metadata !DIExpression()), !dbg !5297
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hf1193977a1c32428E"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !5298
  br label %bb1, !dbg !5298

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4, !dbg !5298

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !5299

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h9944ef45732f9fb5E"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !5300
  br label %bb3, !dbg !5300

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !5301
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h213d6a59b0aaaeb0E"({ i8*, i64 }* align 8 %slf, i64 %len, i64 %additional) unnamed_addr #3 !dbg !5302 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %slf.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %slf, { i8*, i64 }** %slf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %slf.dbg.spill, metadata !5306, metadata !DIExpression()), !dbg !5309
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !5307, metadata !DIExpression()), !dbg !5310
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !5308, metadata !DIExpression()), !dbg !5311
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h3173f2e9cd926648E"({ i8*, i64 }* align 8 %slf, i64 %len, i64 %additional), !dbg !5312
  %_5.0 = extractvalue { i64, i64 } %0, 0, !dbg !5312
  %_5.1 = extractvalue { i64, i64 } %0, 1, !dbg !5312
  br label %bb1, !dbg !5312

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h3cd82cf6d0832ad5E(i64 %_5.0, i64 %_5.1), !dbg !5313
  br label %bb2, !dbg !5313

bb2:                                              ; preds = %bb1
  ret void, !dbg !5314
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h9944ef45732f9fb5E"({ i64*, i64 }* align 8 %slf, i64 %len, i64 %additional) unnamed_addr #3 !dbg !5315 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %slf.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %slf, { i64*, i64 }** %slf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %slf.dbg.spill, metadata !5317, metadata !DIExpression()), !dbg !5320
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !5318, metadata !DIExpression()), !dbg !5321
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !5319, metadata !DIExpression()), !dbg !5322
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hd22e0de602bec0ddE"({ i64*, i64 }* align 8 %slf, i64 %len, i64 %additional), !dbg !5323
  %_5.0 = extractvalue { i64, i64 } %0, 0, !dbg !5323
  %_5.1 = extractvalue { i64, i64 } %0, 1, !dbg !5323
  br label %bb1, !dbg !5323

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h3cd82cf6d0832ad5E(i64 %_5.0, i64 %_5.1), !dbg !5324
  br label %bb2, !dbg !5324

bb2:                                              ; preds = %bb1
  ret void, !dbg !5325
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hdabeb82f97321281E"({ i64*, i64 }* align 8 %slf, i64 %len, i64 %additional) unnamed_addr #3 !dbg !5326 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %slf.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %slf, { i64*, i64 }** %slf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %slf.dbg.spill, metadata !5328, metadata !DIExpression()), !dbg !5331
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !5329, metadata !DIExpression()), !dbg !5332
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !5330, metadata !DIExpression()), !dbg !5333
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h19faf0dbda2ba0ddE"({ i64*, i64 }* align 8 %slf, i64 %len, i64 %additional), !dbg !5334
  %_5.0 = extractvalue { i64, i64 } %0, 0, !dbg !5334
  %_5.1 = extractvalue { i64, i64 } %0, 1, !dbg !5334
  br label %bb1, !dbg !5334

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h3cd82cf6d0832ad5E(i64 %_5.0, i64 %_5.1), !dbg !5335
  br label %bb2, !dbg !5335

bb2:                                              ; preds = %bb1
  ret void, !dbg !5336
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h3255d46da8ee5f13E"(i8* %self.0, i8* %self.1) unnamed_addr #0 !dbg !5337 {
start:
  %self.dbg.spill = alloca { i8*, i8* }, align 8
  %0 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 1
  store i8* %self.1, i8** %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %self.dbg.spill, metadata !5344, metadata !DIExpression()), !dbg !5347
  %2 = insertvalue { i8*, i8* } undef, i8* %self.0, 0, !dbg !5348
  %3 = insertvalue { i8*, i8* } %2, i8* %self.1, 1, !dbg !5348
  ret { i8*, i8* } %3, !dbg !5348
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %Shlex* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4b899a1828012f61E"(%Shlex* align 8 %self) unnamed_addr #0 !dbg !5349 {
start:
  %self.dbg.spill = alloca %Shlex*, align 8
  store %Shlex* %self, %Shlex** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %Shlex** %self.dbg.spill, metadata !5351, metadata !DIExpression()), !dbg !5353
  ret %Shlex* %self, !dbg !5354
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"bytes::Shlex"* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hffd5f359feb96646E"(%"bytes::Shlex"* align 8 %self) unnamed_addr #0 !dbg !5355 {
start:
  %self.dbg.spill = alloca %"bytes::Shlex"*, align 8
  store %"bytes::Shlex"* %self, %"bytes::Shlex"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"bytes::Shlex"** %self.dbg.spill, metadata !5357, metadata !DIExpression()), !dbg !5359
  ret %"bytes::Shlex"* %self, !dbg !5360
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h10f1cbbb1fbc68f3E"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1) unnamed_addr #0 !dbg !5361 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca { i64, i64 }*, align 8
  %self.dbg.spill7 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %self3 = alloca i64, align 8
  %self2 = alloca i64, align 8
  %layout1 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !5366, metadata !DIExpression()), !dbg !5369
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !5367, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !5368, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout1, metadata !5372, metadata !DIExpression()), !dbg !5378
  call void @llvm.dbg.declare(metadata i64* %self2, metadata !5380, metadata !DIExpression()), !dbg !5384
  call void @llvm.dbg.declare(metadata i64* %self3, metadata !5391, metadata !DIExpression()), !dbg !5395
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill4, align 8, !dbg !5396
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill4, metadata !5397, metadata !DIExpression()), !dbg !5401
  %4 = bitcast { i64, i64 }* %layout to i64*, !dbg !5401
  %_4 = load i64, i64* %4, align 8, !dbg !5401
  %5 = icmp eq i64 %_4, 0, !dbg !5396
  br i1 %5, label %bb2, label %bb1, !dbg !5396

bb2:                                              ; preds = %start
  br label %bb3, !dbg !5402

bb1:                                              ; preds = %start
  store i8* %ptr, i8** %self.dbg.spill5, align 8, !dbg !5403
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !5404, metadata !DIExpression()), !dbg !5408
  store i8* %ptr, i8** %ptr.dbg.spill6, align 8, !dbg !5408
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill6, metadata !5377, metadata !DIExpression()), !dbg !5378
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !5409
  %7 = load i64, i64* %6, align 8, !dbg !5409
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !5409
  %9 = load i64, i64* %8, align 8, !dbg !5409, !range !1308, !noundef !19
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 0, !dbg !5409
  store i64 %7, i64* %10, align 8, !dbg !5409
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !5409
  store i64 %9, i64* %11, align 8, !dbg !5409
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill7, align 8, !dbg !5378
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill7, metadata !5410, metadata !DIExpression()), !dbg !5414
  %12 = bitcast { i64, i64 }* %layout1 to i64*, !dbg !5414
  %_11 = load i64, i64* %12, align 8, !dbg !5414
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill8, align 8, !dbg !5378
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill8, metadata !5388, metadata !DIExpression()), !dbg !5416
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !5416
  %14 = load i64, i64* %13, align 8, !dbg !5416, !range !1308, !noundef !19
  store i64 %14, i64* %self3, align 8, !dbg !5416
  %_18 = load i64, i64* %self3, align 8, !dbg !5395, !range !1308, !noundef !19
  store i64 %_18, i64* %n.dbg.spill, align 8, !dbg !5395
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5417, metadata !DIExpression()), !dbg !5424
  store i64 %_18, i64* %self2, align 8, !dbg !5424
  %_13 = load i64, i64* %self2, align 8, !dbg !5384
  call void @__rust_dealloc(i8* %ptr, i64 %_11, i64 %_13) #17, !dbg !5378
  br label %bb4, !dbg !5378

bb4:                                              ; preds = %bb1
  br label %bb3, !dbg !5402

bb3:                                              ; preds = %bb2, %bb4
  ret void, !dbg !5426
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h7576dccf7966c983E"(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !5427 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !5431, metadata !DIExpression()), !dbg !5433
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !5432, metadata !DIExpression()), !dbg !5434
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hc2fbb81af54cdef1E(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext true), !dbg !5435
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !5435
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !5435
  br label %bb1, !dbg !5435

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !5436
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !5436
  ret { i8*, i64 } %6, !dbg !5436
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17hd07a347df9bed584E"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #0 !dbg !5437 {
start:
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %old_layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !5441, metadata !DIExpression()), !dbg !5445
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !5442, metadata !DIExpression()), !dbg !5446
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 0
  store i64 %old_layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 1
  store i64 %old_layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout.dbg.spill, metadata !5443, metadata !DIExpression()), !dbg !5447
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !5444, metadata !DIExpression()), !dbg !5448
; call alloc::alloc::Global::grow_impl
  %4 = call { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h09b2f7ca3556491fE(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false), !dbg !5449
  %5 = extractvalue { i8*, i64 } %4, 0, !dbg !5449
  %6 = extractvalue { i8*, i64 } %4, 1, !dbg !5449
  br label %bb1, !dbg !5449

bb1:                                              ; preds = %start
  %7 = insertvalue { i8*, i64 } undef, i8* %5, 0, !dbg !5450
  %8 = insertvalue { i8*, i64 } %7, i64 %6, 1, !dbg !5450
  ret { i8*, i64 } %8, !dbg !5450
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hadeb8784519b0211E"(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !5451 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !5453, metadata !DIExpression()), !dbg !5455
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !5454, metadata !DIExpression()), !dbg !5456
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hc2fbb81af54cdef1E(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false), !dbg !5457
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !5457
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !5457
  br label %bb1, !dbg !5457

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !5458
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !5458
  ret { i8*, i64 } %6, !dbg !5458
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7a7d7ae2f5ea9ac8E"(%"alloc::vec::Vec<alloc::string::String>"* align 8 %self) unnamed_addr #1 !dbg !5459 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill1 = alloca %"alloc::string::String"*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca %"alloc::string::String"*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<alloc::string::String>"*, align 8
  %_11 = alloca { i8*, i64 }, align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[alloc::string::String]>", align 8
  store %"alloc::vec::Vec<alloc::string::String>"* %self, %"alloc::vec::Vec<alloc::string::String>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::string::String>"** %self.dbg.spill, metadata !5464, metadata !DIExpression()), !dbg !5465
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %data = call %"alloc::string::String"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h44fbfd7f7c84c396E"(%"alloc::vec::Vec<alloc::string::String>"* align 8 %self), !dbg !5466
  store %"alloc::string::String"* %data, %"alloc::string::String"** %data.dbg.spill, align 8, !dbg !5466
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %data.dbg.spill, metadata !5467, metadata !DIExpression()), !dbg !5474
  br label %bb1, !dbg !5466

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", %"alloc::vec::Vec<alloc::string::String>"* %self, i32 0, i32 1, !dbg !5476
  %len = load i64, i64* %0, align 8, !dbg !5476
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !5476
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !5473, metadata !DIExpression()), !dbg !5474
  store %"alloc::string::String"* %data, %"alloc::string::String"** %self.dbg.spill1, align 8, !dbg !5474
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill1, metadata !5477, metadata !DIExpression()), !dbg !5484
  %data_address = bitcast %"alloc::string::String"* %data to {}*, !dbg !5484
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !5484
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !5486, metadata !DIExpression()), !dbg !5493
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !5474
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !5492, metadata !DIExpression()), !dbg !5493
  %1 = bitcast { i8*, i64 }* %_11 to {}**, !dbg !5493
  store {}* %data_address, {}** %1, align 8, !dbg !5493
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !5493
  store i64 %len, i64* %2, align 8, !dbg !5493
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::string::String]>"* %_10 to { i8*, i64 }*, !dbg !5493
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 0, !dbg !5493
  %5 = load i8*, i8** %4, align 8, !dbg !5493
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !5493
  %7 = load i64, i64* %6, align 8, !dbg !5493
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !5493
  store i8* %5, i8** %8, align 8, !dbg !5493
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !5493
  store i64 %7, i64* %9, align 8, !dbg !5493
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::string::String]>"* %_10 to { [0 x %"alloc::string::String"]*, i64 }*, !dbg !5493
  %11 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %10, i32 0, i32 0, !dbg !5493
  %_2.0 = load [0 x %"alloc::string::String"]*, [0 x %"alloc::string::String"]** %11, align 8, !dbg !5493
  %12 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %10, i32 0, i32 1, !dbg !5493
  %_2.1 = load i64, i64* %12, align 8, !dbg !5493
; call core::ptr::drop_in_place<[alloc::string::String]>
  call void @"_ZN4core3ptr52drop_in_place$LT$$u5b$alloc..string..String$u5d$$GT$17hfc116486bc61bf0bE"([0 x %"alloc::string::String"]* %_2.0, i64 %_2.1), !dbg !5495
  br label %bb2, !dbg !5495

bb2:                                              ; preds = %bb1
  ret void, !dbg !5496
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc7415b397fcc6441E"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* align 8 %self) unnamed_addr #1 !dbg !5497 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill1 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<alloc::vec::Vec<u8>>"*, align 8
  %_11 = alloca { i8*, i64 }, align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<u8>]>", align 8
  store %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %self, %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %self.dbg.spill, metadata !5501, metadata !DIExpression()), !dbg !5502
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %data = call %"alloc::vec::Vec<u8>"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1d53eb0dd4b79cbfE"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* align 8 %self), !dbg !5503
  store %"alloc::vec::Vec<u8>"* %data, %"alloc::vec::Vec<u8>"** %data.dbg.spill, align 8, !dbg !5503
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %data.dbg.spill, metadata !5504, metadata !DIExpression()), !dbg !5511
  br label %bb1, !dbg !5503

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<u8>>", %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %self, i32 0, i32 1, !dbg !5513
  %len = load i64, i64* %0, align 8, !dbg !5513
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !5513
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !5510, metadata !DIExpression()), !dbg !5511
  store %"alloc::vec::Vec<u8>"* %data, %"alloc::vec::Vec<u8>"** %self.dbg.spill1, align 8, !dbg !5511
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill1, metadata !5514, metadata !DIExpression()), !dbg !5521
  %data_address = bitcast %"alloc::vec::Vec<u8>"* %data to {}*, !dbg !5521
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !5521
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !5523, metadata !DIExpression()), !dbg !5530
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !5511
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !5529, metadata !DIExpression()), !dbg !5530
  %1 = bitcast { i8*, i64 }* %_11 to {}**, !dbg !5530
  store {}* %data_address, {}** %1, align 8, !dbg !5530
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !5530
  store i64 %len, i64* %2, align 8, !dbg !5530
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<u8>]>"* %_10 to { i8*, i64 }*, !dbg !5530
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 0, !dbg !5530
  %5 = load i8*, i8** %4, align 8, !dbg !5530
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !5530
  %7 = load i64, i64* %6, align 8, !dbg !5530
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !5530
  store i8* %5, i8** %8, align 8, !dbg !5530
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !5530
  store i64 %7, i64* %9, align 8, !dbg !5530
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<u8>]>"* %_10 to { [0 x %"alloc::vec::Vec<u8>"]*, i64 }*, !dbg !5530
  %11 = getelementptr inbounds { [0 x %"alloc::vec::Vec<u8>"]*, i64 }, { [0 x %"alloc::vec::Vec<u8>"]*, i64 }* %10, i32 0, i32 0, !dbg !5530
  %_2.0 = load [0 x %"alloc::vec::Vec<u8>"]*, [0 x %"alloc::vec::Vec<u8>"]** %11, align 8, !dbg !5530
  %12 = getelementptr inbounds { [0 x %"alloc::vec::Vec<u8>"]*, i64 }, { [0 x %"alloc::vec::Vec<u8>"]*, i64 }* %10, i32 0, i32 1, !dbg !5530
  %_2.1 = load i64, i64* %12, align 8, !dbg !5530
; call core::ptr::drop_in_place<[alloc::vec::Vec<u8>]>
  call void @"_ZN4core3ptr56drop_in_place$LT$$u5b$alloc..vec..Vec$LT$u8$GT$$u5d$$GT$17h32913744221ce31fE"([0 x %"alloc::vec::Vec<u8>"]* %_2.0, i64 %_2.1), !dbg !5532
  br label %bb2, !dbg !5532

bb2:                                              ; preds = %bb1
  ret void, !dbg !5533
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc7f5fc59ecf6d01fE"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #1 !dbg !5534 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_11 = alloca { i8*, i64 }, align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !5538, metadata !DIExpression()), !dbg !5539
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %data = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hcdf3ffb91c360be2E"(%"alloc::vec::Vec<u8>"* align 8 %self), !dbg !5540
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !5540
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !5541, metadata !DIExpression()), !dbg !5546
  br label %bb1, !dbg !5540

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !5548
  %len = load i64, i64* %0, align 8, !dbg !5548
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !5548
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !5545, metadata !DIExpression()), !dbg !5546
  store i8* %data, i8** %self.dbg.spill1, align 8, !dbg !5546
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !5549, metadata !DIExpression()), !dbg !5553
  %data_address = bitcast i8* %data to {}*, !dbg !5553
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !5553
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !5555, metadata !DIExpression()), !dbg !5560
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !5546
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !5559, metadata !DIExpression()), !dbg !5560
  %1 = bitcast { i8*, i64 }* %_11 to {}**, !dbg !5560
  store {}* %data_address, {}** %1, align 8, !dbg !5560
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !5560
  store i64 %len, i64* %2, align 8, !dbg !5560
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_10 to { i8*, i64 }*, !dbg !5560
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 0, !dbg !5560
  %5 = load i8*, i8** %4, align 8, !dbg !5560
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !5560
  %7 = load i64, i64* %6, align 8, !dbg !5560
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !5560
  store i8* %5, i8** %8, align 8, !dbg !5560
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !5560
  store i64 %7, i64* %9, align 8, !dbg !5560
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_10 to { [0 x i8]*, i64 }*, !dbg !5560
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0, !dbg !5560
  %_2.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !5560
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1, !dbg !5560
  %_2.1 = load i64, i64* %12, align 8, !dbg !5560
  br label %bb2, !dbg !5562

bb2:                                              ; preds = %bb1
  ret void, !dbg !5563
}

; <core::option::Option<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h8ef90b888a549fe8E"({ i8, i8 }* align 1 %self, { i8, i8 }* align 1 %other) unnamed_addr #0 !dbg !5564 {
start:
  %__arg1_0.dbg.spill = alloca i8*, align 8
  %__self_0.dbg.spill = alloca i8*, align 8
  %__arg1_tag.dbg.spill = alloca i64, align 8
  %__self_tag.dbg.spill = alloca i64, align 8
  %other.dbg.spill = alloca { i8, i8 }*, align 8
  %self.dbg.spill = alloca { i8, i8 }*, align 8
  %_11 = alloca { i8*, i8* }, align 8
  %_10 = alloca i8, align 1
  %0 = alloca i8, align 1
  store { i8, i8 }* %self, { i8, i8 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8, i8 }** %self.dbg.spill, metadata !5570, metadata !DIExpression()), !dbg !5579
  store { i8, i8 }* %other, { i8, i8 }** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8, i8 }** %other.dbg.spill, metadata !5571, metadata !DIExpression()), !dbg !5579
  %1 = bitcast { i8, i8 }* %self to i8*, !dbg !5579
  %2 = load i8, i8* %1, align 1, !dbg !5579, !range !394, !noundef !19
  %3 = trunc i8 %2 to i1, !dbg !5579
  %__self_tag = zext i1 %3 to i64, !dbg !5579
  store i64 %__self_tag, i64* %__self_tag.dbg.spill, align 8, !dbg !5579
  call void @llvm.dbg.declare(metadata i64* %__self_tag.dbg.spill, metadata !5572, metadata !DIExpression()), !dbg !5580
  %4 = bitcast { i8, i8 }* %other to i8*, !dbg !5580
  %5 = load i8, i8* %4, align 1, !dbg !5580, !range !394, !noundef !19
  %6 = trunc i8 %5 to i1, !dbg !5580
  %__arg1_tag = zext i1 %6 to i64, !dbg !5580
  store i64 %__arg1_tag, i64* %__arg1_tag.dbg.spill, align 8, !dbg !5580
  call void @llvm.dbg.declare(metadata i64* %__arg1_tag.dbg.spill, metadata !5574, metadata !DIExpression()), !dbg !5581
  %_7 = icmp eq i64 %__self_tag, %__arg1_tag, !dbg !5581
  br i1 %_7, label %bb2, label %bb1, !dbg !5581

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1, !dbg !5581
  br label %bb3, !dbg !5581

bb2:                                              ; preds = %start
  %7 = bitcast { i8*, i8* }* %_11 to { i8, i8 }**, !dbg !5581
  store { i8, i8 }* %self, { i8, i8 }** %7, align 8, !dbg !5581
  %8 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_11, i32 0, i32 1, !dbg !5581
  %9 = bitcast i8** %8 to { i8, i8 }**, !dbg !5581
  store { i8, i8 }* %other, { i8, i8 }** %9, align 8, !dbg !5581
  %10 = bitcast { i8*, i8* }* %_11 to { i8, i8 }**, !dbg !5581
  %_20 = load { i8, i8 }*, { i8, i8 }** %10, align 8, !dbg !5581, !nonnull !19, !align !826, !noundef !19
  %11 = bitcast { i8, i8 }* %_20 to i8*, !dbg !5581
  %12 = load i8, i8* %11, align 1, !dbg !5581, !range !394, !noundef !19
  %13 = trunc i8 %12 to i1, !dbg !5581
  %_15 = zext i1 %13 to i64, !dbg !5581
  %14 = icmp eq i64 %_15, 1, !dbg !5581
  br i1 %14, label %bb5, label %bb4, !dbg !5581

bb5:                                              ; preds = %bb2
  %15 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_11, i32 0, i32 1, !dbg !5581
  %16 = bitcast i8** %15 to { i8, i8 }**, !dbg !5581
  %_21 = load { i8, i8 }*, { i8, i8 }** %16, align 8, !dbg !5581, !nonnull !19, !align !826, !noundef !19
  %17 = bitcast { i8, i8 }* %_21 to i8*, !dbg !5581
  %18 = load i8, i8* %17, align 1, !dbg !5581, !range !394, !noundef !19
  %19 = trunc i8 %18 to i1, !dbg !5581
  %_14 = zext i1 %19 to i64, !dbg !5581
  %20 = icmp eq i64 %_14, 1, !dbg !5581
  br i1 %20, label %bb6, label %bb4, !dbg !5581

bb4:                                              ; preds = %bb5, %bb2
  store i8 1, i8* %_10, align 1, !dbg !5581
  br label %bb8, !dbg !5581

bb6:                                              ; preds = %bb5
  %21 = bitcast { i8*, i8* }* %_11 to { i8, i8 }**, !dbg !5582
  %_22 = load { i8, i8 }*, { i8, i8 }** %21, align 8, !dbg !5582, !nonnull !19, !align !826, !noundef !19
  %__self_0 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_22, i32 0, i32 1, !dbg !5582
  store i8* %__self_0, i8** %__self_0.dbg.spill, align 8, !dbg !5582
  call void @llvm.dbg.declare(metadata i8** %__self_0.dbg.spill, metadata !5576, metadata !DIExpression()), !dbg !5583
  %22 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_11, i32 0, i32 1, !dbg !5582
  %23 = bitcast i8** %22 to { i8, i8 }**, !dbg !5582
  %_23 = load { i8, i8 }*, { i8, i8 }** %23, align 8, !dbg !5582, !nonnull !19, !align !826, !noundef !19
  %__arg1_0 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_23, i32 0, i32 1, !dbg !5582
  store i8* %__arg1_0, i8** %__arg1_0.dbg.spill, align 8, !dbg !5582
  call void @llvm.dbg.declare(metadata i8** %__arg1_0.dbg.spill, metadata !5578, metadata !DIExpression()), !dbg !5583
; call core::cmp::impls::<impl core::cmp::PartialEq for u8>::eq
  %24 = call zeroext i1 @"_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h95de183702012a16E"(i8* align 1 %__self_0, i8* align 1 %__arg1_0), !dbg !5583
  %25 = zext i1 %24 to i8, !dbg !5583
  store i8 %25, i8* %_10, align 1, !dbg !5583
  br label %bb7, !dbg !5583

bb8:                                              ; preds = %bb7, %bb4
  %26 = load i8, i8* %_10, align 1, !dbg !5581, !range !394, !noundef !19
  %27 = trunc i8 %26 to i1, !dbg !5581
  %28 = zext i1 %27 to i8, !dbg !5581
  store i8 %28, i8* %0, align 1, !dbg !5581
  br label %bb3, !dbg !5581

bb7:                                              ; preds = %bb6
  br label %bb8, !dbg !5584

bb3:                                              ; preds = %bb1, %bb8
  %29 = load i8, i8* %0, align 1, !dbg !5585, !range !394, !noundef !19
  %30 = trunc i8 %29 to i1, !dbg !5585
  ret i1 %30, !dbg !5585
}

; <&mut I as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h795a6a2b04c995d4E"(%"core::option::Option<alloc::vec::Vec<u8>>"* sret(%"core::option::Option<alloc::vec::Vec<u8>>") %0, %"bytes::Shlex"** align 8 %self) unnamed_addr #0 !dbg !5586 {
start:
  %self.dbg.spill = alloca %"bytes::Shlex"**, align 8
  store %"bytes::Shlex"** %self, %"bytes::Shlex"*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"bytes::Shlex"*** %self.dbg.spill, metadata !5592, metadata !DIExpression()), !dbg !5595
  %_3 = load %"bytes::Shlex"*, %"bytes::Shlex"** %self, align 8, !dbg !5596, !nonnull !19, !align !447, !noundef !19
; call <shlex::bytes::Shlex as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN78_$LT$shlex..bytes..Shlex$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h78fef5295293fb1fE"(%"core::option::Option<alloc::vec::Vec<u8>>"* sret(%"core::option::Option<alloc::vec::Vec<u8>>") %0, %"bytes::Shlex"* align 8 %_3), !dbg !5596
  br label %bb1, !dbg !5596

bb1:                                              ; preds = %start
  ret void, !dbg !5597
}

; <&mut I as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9b785dd58a3365a0E"(%"core::option::Option<alloc::string::String>"* sret(%"core::option::Option<alloc::string::String>") %0, %Shlex** align 8 %self) unnamed_addr #0 !dbg !5598 {
start:
  %self.dbg.spill = alloca %Shlex**, align 8
  store %Shlex** %self, %Shlex*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %Shlex*** %self.dbg.spill, metadata !5603, metadata !DIExpression()), !dbg !5606
  %_3 = load %Shlex*, %Shlex** %self, align 8, !dbg !5607, !nonnull !19, !align !447, !noundef !19
; call <shlex::Shlex as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN71_$LT$shlex..Shlex$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6979e59542e021cbE"(%"core::option::Option<alloc::string::String>"* sret(%"core::option::Option<alloc::string::String>") %0, %Shlex* align 8 %_3), !dbg !5607
  br label %bb1, !dbg !5607

bb1:                                              ; preds = %start
  ret void, !dbg !5608
}

; <&mut I as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: nonlazybind uwtable
define void @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h29385024be338a39E"({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %0, %Shlex** align 8 %self) unnamed_addr #1 !dbg !5609 {
start:
  %self.dbg.spill = alloca %Shlex**, align 8
  store %Shlex** %self, %Shlex*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %Shlex*** %self.dbg.spill, metadata !5614, metadata !DIExpression()), !dbg !5615
  %_3 = load %Shlex*, %Shlex** %self, align 8, !dbg !5616, !nonnull !19, !align !447, !noundef !19
; call core::iter::traits::iterator::Iterator::size_hint
  call void @_ZN4core4iter6traits8iterator8Iterator9size_hint17h950b9391cc9a8154E({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %0, %Shlex* align 8 %_3), !dbg !5616
  br label %bb1, !dbg !5616

bb1:                                              ; preds = %start
  ret void, !dbg !5617
}

; <&mut I as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: nonlazybind uwtable
define void @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17ha9dd4646d3c6cae6E"({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %0, %"bytes::Shlex"** align 8 %self) unnamed_addr #1 !dbg !5618 {
start:
  %self.dbg.spill = alloca %"bytes::Shlex"**, align 8
  store %"bytes::Shlex"** %self, %"bytes::Shlex"*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"bytes::Shlex"*** %self.dbg.spill, metadata !5623, metadata !DIExpression()), !dbg !5624
  %_3 = load %"bytes::Shlex"*, %"bytes::Shlex"** %self, align 8, !dbg !5625, !nonnull !19, !align !447, !noundef !19
; call core::iter::traits::iterator::Iterator::size_hint
  call void @_ZN4core4iter6traits8iterator8Iterator9size_hint17hf31b4a86f58bf893E({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %0, %"bytes::Shlex"* align 8 %_3), !dbg !5625
  br label %bb1, !dbg !5625

bb1:                                              ; preds = %start
  ret void, !dbg !5626
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h358a7a200ca8ad64E"({ i64*, i64 }* align 8 %self) unnamed_addr #1 !dbg !5627 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !5632, metadata !DIExpression()), !dbg !5636
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h35125d36e3ff79c5E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i64*, i64 }* align 8 %self), !dbg !5637
  br label %bb1, !dbg !5637

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1, !dbg !5638
  %1 = load i64, i64* %0, align 8, !dbg !5638, !range !649, !noundef !19
  %2 = icmp eq i64 %1, 0, !dbg !5638
  %_4 = select i1 %2, i64 0, i64 1, !dbg !5638
  %3 = icmp eq i64 %_4, 1, !dbg !5638
  br i1 %3, label %bb2, label %bb4, !dbg !5638

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !5639
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !5639
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !5639
  %ptr = load i8*, i8** %6, align 8, !dbg !5639, !nonnull !19, !noundef !19
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !5639
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !5633, metadata !DIExpression()), !dbg !5639
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !5640
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !5640
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !5640
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !5640
  %layout.0 = load i64, i64* %10, align 8, !dbg !5640
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !5640
  %layout.1 = load i64, i64* %11, align 8, !dbg !5640, !range !1308, !noundef !19
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !5640
  store i64 %layout.0, i64* %12, align 8, !dbg !5640
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !5640
  store i64 %layout.1, i64* %13, align 8, !dbg !5640
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !5635, metadata !DIExpression()), !dbg !5640
  %_7 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !5641
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h10f1cbbb1fbc68f3E"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1), !dbg !5641
  br label %bb3, !dbg !5641

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !5642

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !5643
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6b624f5a037c2fdaE"({ i8*, i64 }* align 8 %self) unnamed_addr #1 !dbg !5644 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !5648, metadata !DIExpression()), !dbg !5652
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h228271933e00ee8dE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i8*, i64 }* align 8 %self), !dbg !5653
  br label %bb1, !dbg !5653

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1, !dbg !5654
  %1 = load i64, i64* %0, align 8, !dbg !5654, !range !649, !noundef !19
  %2 = icmp eq i64 %1, 0, !dbg !5654
  %_4 = select i1 %2, i64 0, i64 1, !dbg !5654
  %3 = icmp eq i64 %_4, 1, !dbg !5654
  br i1 %3, label %bb2, label %bb4, !dbg !5654

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !5655
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !5655
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !5655
  %ptr = load i8*, i8** %6, align 8, !dbg !5655, !nonnull !19, !noundef !19
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !5655
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !5649, metadata !DIExpression()), !dbg !5655
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !5656
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !5656
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !5656
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !5656
  %layout.0 = load i64, i64* %10, align 8, !dbg !5656
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !5656
  %layout.1 = load i64, i64* %11, align 8, !dbg !5656, !range !1308, !noundef !19
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !5656
  store i64 %layout.0, i64* %12, align 8, !dbg !5656
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !5656
  store i64 %layout.1, i64* %13, align 8, !dbg !5656
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !5651, metadata !DIExpression()), !dbg !5656
  %_7 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !5657
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h10f1cbbb1fbc68f3E"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1), !dbg !5657
  br label %bb3, !dbg !5657

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !5658

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !5659
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9c8e6b8471c842a4E"({ i64*, i64 }* align 8 %self) unnamed_addr #1 !dbg !5660 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !5664, metadata !DIExpression()), !dbg !5668
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h9bfd32aebd2503ffE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i64*, i64 }* align 8 %self), !dbg !5669
  br label %bb1, !dbg !5669

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1, !dbg !5670
  %1 = load i64, i64* %0, align 8, !dbg !5670, !range !649, !noundef !19
  %2 = icmp eq i64 %1, 0, !dbg !5670
  %_4 = select i1 %2, i64 0, i64 1, !dbg !5670
  %3 = icmp eq i64 %_4, 1, !dbg !5670
  br i1 %3, label %bb2, label %bb4, !dbg !5670

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !5671
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !5671
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !5671
  %ptr = load i8*, i8** %6, align 8, !dbg !5671, !nonnull !19, !noundef !19
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !5671
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !5665, metadata !DIExpression()), !dbg !5671
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !5672
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !5672
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !5672
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !5672
  %layout.0 = load i64, i64* %10, align 8, !dbg !5672
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !5672
  %layout.1 = load i64, i64* %11, align 8, !dbg !5672, !range !1308, !noundef !19
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !5672
  store i64 %layout.0, i64* %12, align 8, !dbg !5672
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !5672
  store i64 %layout.1, i64* %13, align 8, !dbg !5672
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !5667, metadata !DIExpression()), !dbg !5672
  %_7 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !5673
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h10f1cbbb1fbc68f3E"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1), !dbg !5673
  br label %bb3, !dbg !5673

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !5674

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !5675
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf1291636b0c5e5fdE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, QuoteError>, alloc::borrow::Cow<[u8]>>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, QuoteError>, alloc::borrow::Cow<[u8]>>") %0, %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>"* %self) unnamed_addr #0 !dbg !5676 {
start:
  %e.dbg.spill = alloca %"QuoteError::Nul", align 1
  %_6 = alloca %"core::result::Result<core::convert::Infallible, QuoteError>::Err", align 1
  %_4 = alloca %"alloc::borrow::Cow<[u8]>", align 8
  %v = alloca %"alloc::borrow::Cow<[u8]>", align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>"* %self, metadata !5696, metadata !DIExpression()), !dbg !5701
  call void @llvm.dbg.declare(metadata %"alloc::borrow::Cow<[u8]>"* %v, metadata !5697, metadata !DIExpression()), !dbg !5702
  call void @llvm.dbg.declare(metadata %"QuoteError::Nul"* %e.dbg.spill, metadata !5699, metadata !DIExpression()), !dbg !5703
  %1 = bitcast %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>"* %self to i64*, !dbg !5704
  %2 = load i64, i64* %1, align 8, !dbg !5704, !range !2080, !noundef !19
  %3 = sub i64 %2, 2, !dbg !5704
  %4 = icmp eq i64 %3, 0, !dbg !5704
  %_2 = select i1 %4, i64 1, i64 0, !dbg !5704
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !5705

bb2:                                              ; preds = %start
  unreachable, !dbg !5704

bb3:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>"* %self to %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>::Ok"*, !dbg !5706
  %6 = bitcast %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>::Ok"* %5 to %"alloc::borrow::Cow<[u8]>"*, !dbg !5706
  %7 = bitcast %"alloc::borrow::Cow<[u8]>"* %v to i8*, !dbg !5706
  %8 = bitcast %"alloc::borrow::Cow<[u8]>"* %6 to i8*, !dbg !5706
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false), !dbg !5706
  %9 = bitcast %"alloc::borrow::Cow<[u8]>"* %_4 to i8*, !dbg !5707
  %10 = bitcast %"alloc::borrow::Cow<[u8]>"* %v to i8*, !dbg !5707
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 32, i1 false), !dbg !5707
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, QuoteError>, alloc::borrow::Cow<[u8]>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, QuoteError>, alloc::borrow::Cow<[u8]>>::Continue"*, !dbg !5708
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, QuoteError>, alloc::borrow::Cow<[u8]>>::Continue"* %11 to %"alloc::borrow::Cow<[u8]>"*, !dbg !5708
  %13 = bitcast %"alloc::borrow::Cow<[u8]>"* %12 to i8*, !dbg !5708
  %14 = bitcast %"alloc::borrow::Cow<[u8]>"* %_4 to i8*, !dbg !5708
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 32, i1 false), !dbg !5708
  br label %bb4, !dbg !5709

bb1:                                              ; preds = %start
  %15 = bitcast %"core::result::Result<core::convert::Infallible, QuoteError>::Err"* %_6 to %"QuoteError::Nul"*, !dbg !5710
  %16 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, QuoteError>, alloc::borrow::Cow<[u8]>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, QuoteError>, alloc::borrow::Cow<[u8]>>::Break"*, !dbg !5711
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, QuoteError>, alloc::borrow::Cow<[u8]>>::Break"* %16 to %"core::result::Result<core::convert::Infallible, QuoteError>::Err"*, !dbg !5711
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, QuoteError>, alloc::borrow::Cow<[u8]>>"* %0 to i64*, !dbg !5711
  store i64 2, i64* %18, align 8, !dbg !5711
  br label %bb4, !dbg !5712

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !5713
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17h353834cac3225960E"({ i8*, i8* }* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5714 {
start:
  %x.dbg.spill = alloca i8*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_9 = alloca i8*, align 8
  %_3 = alloca i8*, align 8
  %1 = alloca i8, align 1
  %f = alloca %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0/src/bytes.rs:211:51: 211:55]", align 1
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !5723, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.declare(metadata %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0/src/bytes.rs:211:51: 211:55]"* %f, metadata !5724, metadata !DIExpression()), !dbg !5730
  br label %bb1, !dbg !5731

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hda0a6e501ff7d1c6E"({ i8*, i8* }* align 8 %self)
          to label %bb2 unwind label %cleanup, !dbg !5732

bb9:                                              ; preds = %cleanup
  br label %bb10, !dbg !5733

cleanup:                                          ; preds = %bb3, %bb1
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb9

bb2:                                              ; preds = %bb1
  store i8* %2, i8** %_3, align 8, !dbg !5732
  %8 = bitcast i8** %_3 to {}**, !dbg !5734
  %9 = load {}*, {}** %8, align 8, !dbg !5734
  %10 = icmp eq {}* %9, null, !dbg !5734
  %_5 = select i1 %10, i64 0, i64 1, !dbg !5734
  %11 = icmp eq i64 %_5, 1, !dbg !5734
  br i1 %11, label %bb3, label %bb7, !dbg !5734

bb3:                                              ; preds = %bb2
  %x = load i8*, i8** %_3, align 8, !dbg !5735, !nonnull !19, !align !826, !noundef !19
  store i8* %x, i8** %x.dbg.spill, align 8, !dbg !5735
  call void @llvm.dbg.declare(metadata i8** %x.dbg.spill, metadata !5725, metadata !DIExpression()), !dbg !5735
  store i8* %x, i8** %_9, align 8, !dbg !5736
  %12 = load i8*, i8** %_9, align 8, !dbg !5736, !nonnull !19, !align !826, !noundef !19
; invoke shlex::bytes::Quoter::quote::{{closure}}
  %_7 = invoke zeroext i1 @"_ZN5shlex5bytes6Quoter5quote28_$u7b$$u7b$closure$u7d$$u7d$17hc21b762c28cc18f4E"(%"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0/src/bytes.rs:211:51: 211:55]"* align 1 %f, i8* align 1 %12)
          to label %bb4 unwind label %cleanup, !dbg !5736

bb7:                                              ; preds = %bb2
  store i8 0, i8* %1, align 1, !dbg !5737
  br label %bb8, !dbg !5733

bb8:                                              ; preds = %bb5, %bb7
  %13 = load i8, i8* %1, align 1, !dbg !5738, !range !394, !noundef !19
  %14 = trunc i8 %13 to i1, !dbg !5738
  ret i1 %14, !dbg !5738

bb4:                                              ; preds = %bb3
  br i1 %_7, label %bb5, label %bb6, !dbg !5736

bb10:                                             ; preds = %bb9
  %15 = bitcast { i8*, i32 }* %0 to i8**, !dbg !5739
  %16 = load i8*, i8** %15, align 8, !dbg !5739
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !5739
  %18 = load i32, i32* %17, align 8, !dbg !5739
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0, !dbg !5739
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1, !dbg !5739
  resume { i8*, i32 } %20, !dbg !5739

bb6:                                              ; preds = %bb4
  br label %bb1, !dbg !5731

bb5:                                              ; preds = %bb4
  store i8 1, i8* %1, align 1, !dbg !5740
  br label %bb8, !dbg !5733
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hda0a6e501ff7d1c6E"({ i8*, i8* }* align 8 %self) unnamed_addr #0 !dbg !5741 {
start:
  %self.dbg.spill23 = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %self.dbg.spill21 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %self.dbg.spill20 = alloca i8*, align 8
  %self.dbg.spill19 = alloca i8*, align 8
  %old.dbg.spill = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i8* }*, align 8
  %self.dbg.spill14 = alloca i8*, align 8
  %2 = alloca i8, align 1
  %other.dbg.spill12 = alloca i8*, align 8
  %data_address.dbg.spill10 = alloca {}*, align 8
  %3 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %4 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %5 = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %metadata.dbg.spill1 = alloca {}, align 1
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_62 = alloca i8*, align 8
  %_47 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_46 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_19 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !5745, metadata !DIExpression()), !dbg !5746
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !5747, metadata !DIExpression()), !dbg !5752
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill1, metadata !5761, metadata !DIExpression()), !dbg !5766
  %7 = bitcast { i8*, i8* }* %self to i8**, !dbg !5760
  %self2 = load i8*, i8** %7, align 8, !dbg !5760, !nonnull !19, !noundef !19
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !5760
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !5775, metadata !DIExpression()), !dbg !5779
  store i8* %self2, i8** %self.dbg.spill4, align 8, !dbg !5779
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !5758, metadata !DIExpression()), !dbg !5780
  store i8* %self2, i8** %self.dbg.spill5, align 8, !dbg !5780
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !5781, metadata !DIExpression()), !dbg !5786
  %8 = bitcast {}** %5 to i64*, !dbg !5788
  store i64 0, i64* %8, align 8, !dbg !5788
  %data_address = load {}*, {}** %5, align 8, !dbg !5788
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !5788
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !5751, metadata !DIExpression()), !dbg !5752
  br label %bb9, !dbg !5788

bb9:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to {}**, !dbg !5752
  store {}* %data_address, {}** %9, align 8, !dbg !5752
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !5752
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !5752
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to i8*, !dbg !5752
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !5752
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to i8**, !dbg !5752
  %other = load i8*, i8** %13, align 8, !dbg !5752
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !5752
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !5785, metadata !DIExpression()), !dbg !5786
  %14 = icmp eq i8* %self2, %other, !dbg !5786
  %15 = zext i1 %14 to i8, !dbg !5786
  store i8 %15, i8* %4, align 1, !dbg !5786
  %16 = load i8, i8* %4, align 1, !dbg !5786, !range !394, !noundef !19
  %_4 = trunc i8 %16 to i1, !dbg !5786
  br label %bb10, !dbg !5786

bb10:                                             ; preds = %bb9
  %_3 = xor i1 %_4, true, !dbg !5794
  call void @llvm.assume(i1 %_3), !dbg !5795
  br label %bb1, !dbg !5795

bb1:                                              ; preds = %bb10
  br i1 false, label %bb4, label %bb2, !dbg !5796

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !5797

bb2:                                              ; preds = %bb1
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !5774
  %self6 = load i8*, i8** %17, align 8, !dbg !5774
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !5774
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !5772, metadata !DIExpression()), !dbg !5798
  store i8* %self6, i8** %self.dbg.spill8, align 8, !dbg !5798
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !5799, metadata !DIExpression()), !dbg !5804
  %18 = bitcast {}** %3 to i64*, !dbg !5806
  store i64 0, i64* %18, align 8, !dbg !5806
  %data_address9 = load {}*, {}** %3, align 8, !dbg !5806
  store {}* %data_address9, {}** %data_address.dbg.spill10, align 8, !dbg !5806
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill10, metadata !5765, metadata !DIExpression()), !dbg !5766
  br label %bb11, !dbg !5806

bb11:                                             ; preds = %bb2
  %19 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to {}**, !dbg !5766
  store {}* %data_address9, {}** %19, align 8, !dbg !5766
  %20 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !5766
  %21 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %20 to i8*, !dbg !5766
  %22 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to i8*, !dbg !5766
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 8, i1 false), !dbg !5766
  %23 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to i8**, !dbg !5766
  %other11 = load i8*, i8** %23, align 8, !dbg !5766
  store i8* %other11, i8** %other.dbg.spill12, align 8, !dbg !5766
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill12, metadata !5803, metadata !DIExpression()), !dbg !5804
  %24 = icmp eq i8* %self6, %other11, !dbg !5804
  %25 = zext i1 %24 to i8, !dbg !5804
  store i8 %25, i8* %2, align 1, !dbg !5804
  %26 = load i8, i8* %2, align 1, !dbg !5804, !range !394, !noundef !19
  %_10 = trunc i8 %26 to i1, !dbg !5804
  br label %bb12, !dbg !5804

bb12:                                             ; preds = %bb11
  %_9 = xor i1 %_10, true, !dbg !5812
  call void @llvm.assume(i1 %_9), !dbg !5813
  br label %bb3, !dbg !5813

bb3:                                              ; preds = %bb12
  br label %bb5, !dbg !5797

bb5:                                              ; preds = %bb4, %bb3
  %27 = bitcast { i8*, i8* }* %self to i8**, !dbg !5814
  %self13 = load i8*, i8** %27, align 8, !dbg !5814, !nonnull !19, !noundef !19
  store i8* %self13, i8** %self.dbg.spill14, align 8, !dbg !5814
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill14, metadata !5815, metadata !DIExpression()), !dbg !5819
  %28 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !5814
  %_16 = load i8*, i8** %28, align 8, !dbg !5814
  %_12 = icmp eq i8* %self13, %_16, !dbg !5814
  br i1 %_12, label %bb6, label %bb7, !dbg !5814

bb7:                                              ; preds = %bb5
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill15, align 8, !dbg !5821
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill15, metadata !5822, metadata !DIExpression()), !dbg !5830
  br i1 false, label %bb13, label %bb14, !dbg !5830

bb6:                                              ; preds = %bb5
  %29 = bitcast i8** %6 to {}**, !dbg !5832
  store {}* null, {}** %29, align 8, !dbg !5832
  br label %bb8, !dbg !5833

bb8:                                              ; preds = %bb15, %bb6
  %30 = load i8*, i8** %6, align 8, !dbg !5834, !align !826
  ret i8* %30, !dbg !5834

bb13:                                             ; preds = %bb7
  %31 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !5830
  %_56 = load i8*, i8** %31, align 8, !dbg !5830
  store i8* %_56, i8** %self.dbg.spill21, align 8, !dbg !5830
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill21, metadata !5835, metadata !DIExpression()), !dbg !5840
  %32 = getelementptr i8, i8* %_56, i64 -1, !dbg !5840
  store i8* %32, i8** %0, align 8, !dbg !5840
  %_54 = load i8*, i8** %0, align 8, !dbg !5840
  br label %bb16, !dbg !5840

bb14:                                             ; preds = %bb7
  %33 = bitcast { i8*, i8* }* %self to i8**, !dbg !5830
  %self16 = load i8*, i8** %33, align 8, !dbg !5830, !nonnull !19, !noundef !19
  store i8* %self16, i8** %self.dbg.spill17, align 8, !dbg !5830
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !5842, metadata !DIExpression()), !dbg !5846
  store i8* %self16, i8** %old.dbg.spill, align 8, !dbg !5846
  call void @llvm.dbg.declare(metadata i8** %old.dbg.spill, metadata !5828, metadata !DIExpression()), !dbg !5848
  %34 = bitcast { i8*, i8* }* %self to i8**, !dbg !5848
  %self18 = load i8*, i8** %34, align 8, !dbg !5848, !nonnull !19, !noundef !19
  store i8* %self18, i8** %self.dbg.spill19, align 8, !dbg !5848
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill19, metadata !5849, metadata !DIExpression()), !dbg !5853
  store i8* %self18, i8** %self.dbg.spill20, align 8, !dbg !5853
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill20, metadata !5855, metadata !DIExpression()), !dbg !5860
  %35 = getelementptr inbounds i8, i8* %self18, i64 1, !dbg !5860
  store i8* %35, i8** %1, align 8, !dbg !5860
  %_73 = load i8*, i8** %1, align 8, !dbg !5860
  br label %bb17, !dbg !5860

bb17:                                             ; preds = %bb14
  store i8* %_73, i8** %ptr.dbg.spill, align 8, !dbg !5860
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !5861, metadata !DIExpression()), !dbg !5865
  store i8* %_73, i8** %_62, align 8, !dbg !5865
  %36 = bitcast { i8*, i8* }* %self to i8**, !dbg !5848
  %37 = load i8*, i8** %_62, align 8, !dbg !5848, !nonnull !19, !noundef !19
  store i8* %37, i8** %36, align 8, !dbg !5848
  store i8* %self16, i8** %_19, align 8, !dbg !5848
  br label %bb15, !dbg !5830

bb15:                                             ; preds = %bb16, %bb17
  %_18 = load i8*, i8** %_19, align 8, !dbg !5821
  store i8* %_18, i8** %6, align 8, !dbg !5867
  br label %bb8, !dbg !5833

bb16:                                             ; preds = %bb13
  %38 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !5830
  store i8* %_54, i8** %38, align 8, !dbg !5830
  %39 = bitcast { i8*, i8* }* %self to i8**, !dbg !5830
  %self22 = load i8*, i8** %39, align 8, !dbg !5830, !nonnull !19, !noundef !19
  store i8* %self22, i8** %self.dbg.spill23, align 8, !dbg !5830
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill23, metadata !5868, metadata !DIExpression()), !dbg !5872
  store i8* %self22, i8** %_19, align 8, !dbg !5830
  br label %bb15, !dbg !5830
}

; <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h0f3f6e13d4f9205aE"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* sret(%"alloc::vec::Vec<alloc::vec::Vec<u8>>") %0, %"bytes::Shlex"* align 8 %iter) unnamed_addr #0 !dbg !5874 {
start:
  %iter.dbg.spill = alloca %"bytes::Shlex"*, align 8
  store %"bytes::Shlex"* %iter, %"bytes::Shlex"** %iter.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"bytes::Shlex"** %iter.dbg.spill, metadata !5877, metadata !DIExpression()), !dbg !5878
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_2 = call align 8 %"bytes::Shlex"* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hffd5f359feb96646E"(%"bytes::Shlex"* align 8 %iter), !dbg !5879
  br label %bb1, !dbg !5879

bb1:                                              ; preds = %start
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
  call void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h912cbfffe893d2c0E"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* sret(%"alloc::vec::Vec<alloc::vec::Vec<u8>>") %0, %"bytes::Shlex"* align 8 %_2), !dbg !5880
  br label %bb2, !dbg !5880

bb2:                                              ; preds = %bb1
  ret void, !dbg !5881
}

; <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17hbc35f6bdd17ee206E"(%"alloc::vec::Vec<alloc::string::String>"* sret(%"alloc::vec::Vec<alloc::string::String>") %0, %Shlex* align 8 %iter) unnamed_addr #0 !dbg !5882 {
start:
  %iter.dbg.spill = alloca %Shlex*, align 8
  store %Shlex* %iter, %Shlex** %iter.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %Shlex** %iter.dbg.spill, metadata !5884, metadata !DIExpression()), !dbg !5885
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_2 = call align 8 %Shlex* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4b899a1828012f61E"(%Shlex* align 8 %iter), !dbg !5886
  br label %bb1, !dbg !5886

bb1:                                              ; preds = %start
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
  call void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h932cf989e67b51c3E"(%"alloc::vec::Vec<alloc::string::String>"* sret(%"alloc::vec::Vec<alloc::string::String>") %0, %Shlex* align 8 %_2), !dbg !5887
  br label %bb2, !dbg !5887

bb2:                                              ; preds = %bb1
  ret void, !dbg !5888
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h1f6bfb8f2681e93fE"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* align 8 %self, %"bytes::Shlex"* align 8 %iter) unnamed_addr #1 !dbg !5889 {
start:
  %iter.dbg.spill = alloca %"bytes::Shlex"*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<alloc::vec::Vec<u8>>"*, align 8
  store %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %self, %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::vec::Vec<u8>>"** %self.dbg.spill, metadata !5892, metadata !DIExpression()), !dbg !5895
  store %"bytes::Shlex"* %iter, %"bytes::Shlex"** %iter.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"bytes::Shlex"** %iter.dbg.spill, metadata !5893, metadata !DIExpression()), !dbg !5896
; call alloc::vec::Vec<T,A>::extend_desugared
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17he1ab28677aee018aE"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* align 8 %self, %"bytes::Shlex"* align 8 %iter), !dbg !5897
  br label %bb1, !dbg !5897

bb1:                                              ; preds = %start
  ret void, !dbg !5898
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17hc39477a9218591a1E"(%"alloc::vec::Vec<alloc::string::String>"* align 8 %self, %Shlex* align 8 %iter) unnamed_addr #1 !dbg !5899 {
start:
  %iter.dbg.spill = alloca %Shlex*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<alloc::string::String>"*, align 8
  store %"alloc::vec::Vec<alloc::string::String>"* %self, %"alloc::vec::Vec<alloc::string::String>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::string::String>"** %self.dbg.spill, metadata !5901, metadata !DIExpression()), !dbg !5904
  store %Shlex* %iter, %Shlex** %iter.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %Shlex** %iter.dbg.spill, metadata !5902, metadata !DIExpression()), !dbg !5905
; call alloc::vec::Vec<T,A>::extend_desugared
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17he4304560f5c1483cE"(%"alloc::vec::Vec<alloc::string::String>"* align 8 %self, %Shlex* align 8 %iter), !dbg !5906
  br label %bb1, !dbg !5906

bb1:                                              ; preds = %start
  ret void, !dbg !5907
}

; <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hb10d86222b139743E"([0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !5908 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %self.dbg.spill, metadata !5913, metadata !DIExpression()), !dbg !5915
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !5914, metadata !DIExpression()), !dbg !5916
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %slice.0, 0, !dbg !5917
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %slice.1, 1, !dbg !5917
  ret { [0 x i8]*, i64 } %4, !dbg !5917
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h912cbfffe893d2c0E"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* sret(%"alloc::vec::Vec<alloc::vec::Vec<u8>>") %0, %"bytes::Shlex"* align 8 %iterator) unnamed_addr #1 !dbg !5918 {
start:
  %iterator.dbg.spill = alloca %"bytes::Shlex"*, align 8
  store %"bytes::Shlex"* %iterator, %"bytes::Shlex"** %iterator.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"bytes::Shlex"** %iterator.dbg.spill, metadata !5923, metadata !DIExpression()), !dbg !5924
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
  call void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17hf80895153a7e894bE"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* sret(%"alloc::vec::Vec<alloc::vec::Vec<u8>>") %0, %"bytes::Shlex"* align 8 %iterator), !dbg !5925
  br label %bb1, !dbg !5925

bb1:                                              ; preds = %start
  ret void, !dbg !5926
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h932cf989e67b51c3E"(%"alloc::vec::Vec<alloc::string::String>"* sret(%"alloc::vec::Vec<alloc::string::String>") %0, %Shlex* align 8 %iterator) unnamed_addr #1 !dbg !5927 {
start:
  %iterator.dbg.spill = alloca %Shlex*, align 8
  store %Shlex* %iterator, %Shlex** %iterator.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %Shlex** %iterator.dbg.spill, metadata !5929, metadata !DIExpression()), !dbg !5930
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
  call void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h05d8e94589beadbcE"(%"alloc::vec::Vec<alloc::string::String>"* sret(%"alloc::vec::Vec<alloc::string::String>") %0, %Shlex* align 8 %iterator), !dbg !5931
  br label %bb1, !dbg !5931

bb1:                                              ; preds = %start
  ret void, !dbg !5932
}

; shlex::bytes::Shlex::new
; Function Attrs: nonlazybind uwtable
define void @_ZN5shlex5bytes5Shlex3new17h828b6896c0f4e720E(%"bytes::Shlex"* sret(%"bytes::Shlex") %0, [0 x i8]* align 1 %in_bytes.0, i64 %in_bytes.1) unnamed_addr #1 !dbg !5933 {
start:
  %in_bytes.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes.dbg.spill, i32 0, i32 0
  store [0 x i8]* %in_bytes.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes.dbg.spill, i32 0, i32 1
  store i64 %in_bytes.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %in_bytes.dbg.spill, metadata !5938, metadata !DIExpression()), !dbg !5939
; call core::slice::<impl [T]>::iter
  %3 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h4aacd776e8fe9725E"([0 x i8]* align 1 %in_bytes.0, i64 %in_bytes.1), !dbg !5940
  %_2.0 = extractvalue { i8*, i8* } %3, 0, !dbg !5940
  %_2.1 = extractvalue { i8*, i8* } %3, 1, !dbg !5940
  br label %bb1, !dbg !5940

bb1:                                              ; preds = %start
  %4 = bitcast %"bytes::Shlex"* %0 to { i8*, i8* }*, !dbg !5941
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %4, i32 0, i32 0, !dbg !5941
  store i8* %_2.0, i8** %5, align 8, !dbg !5941
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %4, i32 0, i32 1, !dbg !5941
  store i8* %_2.1, i8** %6, align 8, !dbg !5941
  %7 = getelementptr inbounds %"bytes::Shlex", %"bytes::Shlex"* %0, i32 0, i32 1, !dbg !5941
  store i64 1, i64* %7, align 8, !dbg !5941
  %8 = getelementptr inbounds %"bytes::Shlex", %"bytes::Shlex"* %0, i32 0, i32 2, !dbg !5941
  store i8 0, i8* %8, align 8, !dbg !5941
  ret void, !dbg !5942
}

; shlex::bytes::Shlex::parse_word
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5shlex5bytes5Shlex10parse_word17h8fe796b90f88bf53E(%"core::option::Option<alloc::vec::Vec<u8>>"* sret(%"core::option::Option<alloc::vec::Vec<u8>>") %0, %"bytes::Shlex"* align 8 %self, i8 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5943 {
start:
  %ch2.dbg.spill2 = alloca i8, align 1
  %ch2.dbg.spill = alloca i8, align 1
  %2 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"bytes::Shlex"*, align 8
  %_34 = alloca %"alloc::vec::Vec<u8>", align 8
  %_29 = alloca { i8, i8 }, align 1
  %_16 = alloca { i8, i8 }, align 1
  %_11 = alloca i8, align 1
  %_6 = alloca i8, align 1
  %result = alloca %"alloc::vec::Vec<u8>", align 8
  %ch = alloca i8, align 1
  store i8 %1, i8* %ch, align 1
  store %"bytes::Shlex"* %self, %"bytes::Shlex"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"bytes::Shlex"** %self.dbg.spill, metadata !5947, metadata !DIExpression()), !dbg !5955
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !5948, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %result, metadata !5949, metadata !DIExpression()), !dbg !5957
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hec81cd16a2af355aE"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %result), !dbg !5958
  br label %bb1, !dbg !5958

bb1:                                              ; preds = %bb16, %start
  %_5 = load i8, i8* %ch, align 1, !dbg !5959
  %_4 = zext i8 %_5 to i32, !dbg !5959
  switch i32 %_4, label %bb2 [
    i32 34, label %bb3
    i32 39, label %bb6
    i32 92, label %bb9
    i32 32, label %bb17
    i32 9, label %bb17
    i32 10, label %bb17
  ], !dbg !5960

bb2:                                              ; preds = %bb1
  %_28 = load i8, i8* %ch, align 1, !dbg !5961
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h4b04564bca214e51E"(%"alloc::vec::Vec<u8>"* align 8 %result, i8 %_28)
          to label %bb22 unwind label %cleanup, !dbg !5962

bb3:                                              ; preds = %bb1
; invoke shlex::bytes::Shlex::parse_double
  %3 = invoke zeroext i1 @_ZN5shlex5bytes5Shlex12parse_double17h9967600541d5b3e7E(%"bytes::Shlex"* align 8 %self, %"alloc::vec::Vec<u8>"* align 8 %result)
          to label %bb4 unwind label %cleanup, !dbg !5963

bb6:                                              ; preds = %bb1
; invoke shlex::bytes::Shlex::parse_single
  %4 = invoke zeroext i1 @_ZN5shlex5bytes5Shlex12parse_single17h5b1a443dfc519d8cE(%"bytes::Shlex"* align 8 %self, %"alloc::vec::Vec<u8>"* align 8 %result)
          to label %bb7 unwind label %cleanup, !dbg !5964

bb9:                                              ; preds = %bb1
; invoke shlex::bytes::Shlex::next_char
  %5 = invoke { i8, i8 } @_ZN5shlex5bytes5Shlex9next_char17h96135a24a4e32e39E(%"bytes::Shlex"* align 8 %self)
          to label %bb10 unwind label %cleanup, !dbg !5965

bb17:                                             ; preds = %bb15, %bb1, %bb1, %bb1
  %6 = bitcast %"alloc::vec::Vec<u8>"* %_34 to i8*, !dbg !5966
  %7 = bitcast %"alloc::vec::Vec<u8>"* %result to i8*, !dbg !5966
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !dbg !5966
  %8 = bitcast %"core::option::Option<alloc::vec::Vec<u8>>"* %0 to %"core::option::Option<alloc::vec::Vec<u8>>::Some"*, !dbg !5967
  %9 = bitcast %"core::option::Option<alloc::vec::Vec<u8>>::Some"* %8 to %"alloc::vec::Vec<u8>"*, !dbg !5967
  %10 = bitcast %"alloc::vec::Vec<u8>"* %9 to i8*, !dbg !5967
  %11 = bitcast %"alloc::vec::Vec<u8>"* %_34 to i8*, !dbg !5967
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !dbg !5967
  br label %bb19, !dbg !5968

bb20:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9be70052c8106a2bE"(%"alloc::vec::Vec<u8>"* %result) #14
          to label %bb21 unwind label %abort, !dbg !5969

cleanup:                                          ; preds = %bb14, %bb3, %bb6, %bb12, %bb9, %bb2
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb20

bb22:                                             ; preds = %bb2
  br label %bb14, !dbg !5962

bb14:                                             ; preds = %bb4, %bb7, %bb23, %bb11, %bb22
; invoke shlex::bytes::Shlex::next_char
  %17 = invoke { i8, i8 } @_ZN5shlex5bytes5Shlex9next_char17h96135a24a4e32e39E(%"bytes::Shlex"* align 8 %self)
          to label %bb15 unwind label %cleanup, !dbg !5970

bb10:                                             ; preds = %bb9
  store { i8, i8 } %5, { i8, i8 }* %_16, align 1, !dbg !5965
  %18 = bitcast { i8, i8 }* %_16 to i8*, !dbg !5971
  %19 = load i8, i8* %18, align 1, !dbg !5971, !range !394, !noundef !19
  %20 = trunc i8 %19 to i1, !dbg !5971
  %_18 = zext i1 %20 to i64, !dbg !5971
  %21 = icmp eq i64 %_18, 1, !dbg !5971
  br i1 %21, label %bb11, label %bb13, !dbg !5971

bb11:                                             ; preds = %bb10
  %22 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_16, i32 0, i32 1, !dbg !5972
  %ch2 = load i8, i8* %22, align 1, !dbg !5972
  store i8 %ch2, i8* %ch2.dbg.spill, align 1, !dbg !5972
  call void @llvm.dbg.declare(metadata i8* %ch2.dbg.spill, metadata !5951, metadata !DIExpression()), !dbg !5972
  %_20 = icmp ne i8 %ch2, 10, !dbg !5973
  br i1 %_20, label %bb12, label %bb14, !dbg !5973

bb13:                                             ; preds = %bb10
  %23 = getelementptr inbounds %"bytes::Shlex", %"bytes::Shlex"* %self, i32 0, i32 2, !dbg !5974
  store i8 1, i8* %23, align 8, !dbg !5974
  %24 = bitcast %"core::option::Option<alloc::vec::Vec<u8>>"* %0 to {}**, !dbg !5975
  store {}* null, {}** %24, align 8, !dbg !5975
  br label %bb18, !dbg !5976

bb18:                                             ; preds = %bb5, %bb8, %bb13
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9be70052c8106a2bE"(%"alloc::vec::Vec<u8>"* %result), !dbg !5969
  br label %bb19, !dbg !5969

bb12:                                             ; preds = %bb11
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h4b04564bca214e51E"(%"alloc::vec::Vec<u8>"* align 8 %result, i8 %ch2)
          to label %bb23 unwind label %cleanup, !dbg !5978

bb23:                                             ; preds = %bb12
  br label %bb14, !dbg !5978

bb7:                                              ; preds = %bb6
  %25 = zext i1 %4 to i8, !dbg !5964
  store i8 %25, i8* %_11, align 1, !dbg !5964
  %26 = load i8, i8* %_11, align 1, !dbg !5979, !range !394, !noundef !19
  %27 = trunc i8 %26 to i1, !dbg !5979
  %_15 = zext i1 %27 to i64, !dbg !5979
  %28 = icmp eq i64 %_15, 1, !dbg !5979
  br i1 %28, label %bb8, label %bb14, !dbg !5979

bb8:                                              ; preds = %bb7
  %29 = getelementptr inbounds %"bytes::Shlex", %"bytes::Shlex"* %self, i32 0, i32 2, !dbg !5980
  store i8 1, i8* %29, align 8, !dbg !5980
  %30 = bitcast %"core::option::Option<alloc::vec::Vec<u8>>"* %0 to {}**, !dbg !5981
  store {}* null, {}** %30, align 8, !dbg !5981
  br label %bb18, !dbg !5976

bb4:                                              ; preds = %bb3
  %31 = zext i1 %3 to i8, !dbg !5963
  store i8 %31, i8* %_6, align 1, !dbg !5963
  %32 = load i8, i8* %_6, align 1, !dbg !5982, !range !394, !noundef !19
  %33 = trunc i8 %32 to i1, !dbg !5982
  %_10 = zext i1 %33 to i64, !dbg !5982
  %34 = icmp eq i64 %_10, 1, !dbg !5982
  br i1 %34, label %bb5, label %bb14, !dbg !5982

bb5:                                              ; preds = %bb4
  %35 = getelementptr inbounds %"bytes::Shlex", %"bytes::Shlex"* %self, i32 0, i32 2, !dbg !5983
  store i8 1, i8* %35, align 8, !dbg !5983
  %36 = bitcast %"core::option::Option<alloc::vec::Vec<u8>>"* %0 to {}**, !dbg !5984
  store {}* null, {}** %36, align 8, !dbg !5984
  br label %bb18, !dbg !5976

bb15:                                             ; preds = %bb14
  store { i8, i8 } %17, { i8, i8 }* %_29, align 1, !dbg !5970
  %37 = bitcast { i8, i8 }* %_29 to i8*, !dbg !5985
  %38 = load i8, i8* %37, align 1, !dbg !5985, !range !394, !noundef !19
  %39 = trunc i8 %38 to i1, !dbg !5985
  %_31 = zext i1 %39 to i64, !dbg !5985
  %40 = icmp eq i64 %_31, 1, !dbg !5985
  br i1 %40, label %bb16, label %bb17, !dbg !5985

abort:                                            ; preds = %bb20
  %41 = landingpad { i8*, i32 }
          cleanup, !dbg !5986
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #15, !dbg !5986
  unreachable, !dbg !5986

bb21:                                             ; preds = %bb20
  %42 = bitcast { i8*, i32 }* %2 to i8**, !dbg !5986
  %43 = load i8*, i8** %42, align 8, !dbg !5986
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !5986
  %45 = load i32, i32* %44, align 8, !dbg !5986
  %46 = insertvalue { i8*, i32 } undef, i8* %43, 0, !dbg !5986
  %47 = insertvalue { i8*, i32 } %46, i32 %45, 1, !dbg !5986
  resume { i8*, i32 } %47, !dbg !5986

bb16:                                             ; preds = %bb15
  %48 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_29, i32 0, i32 1, !dbg !5987
  %ch21 = load i8, i8* %48, align 1, !dbg !5987
  store i8 %ch21, i8* %ch2.dbg.spill2, align 1, !dbg !5987
  call void @llvm.dbg.declare(metadata i8* %ch2.dbg.spill2, metadata !5953, metadata !DIExpression()), !dbg !5987
  store i8 %ch21, i8* %ch, align 1, !dbg !5988
  br label %bb1, !dbg !5989

bb19:                                             ; preds = %bb18, %bb17
  ret void, !dbg !5968
}

; shlex::bytes::Shlex::parse_double
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN5shlex5bytes5Shlex12parse_double17h9967600541d5b3e7E(%"bytes::Shlex"* align 8 %self, %"alloc::vec::Vec<u8>"* align 8 %result) unnamed_addr #1 !dbg !5990 {
start:
  %ch3.dbg.spill = alloca i8, align 1
  %ch2.dbg.spill = alloca i8, align 1
  %result.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %self.dbg.spill = alloca %"bytes::Shlex"*, align 8
  %_9 = alloca { i8, i8 }, align 1
  %_3 = alloca { i8, i8 }, align 1
  %0 = alloca i8, align 1
  store %"bytes::Shlex"* %self, %"bytes::Shlex"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"bytes::Shlex"** %self.dbg.spill, metadata !6009, metadata !DIExpression()), !dbg !6015
  store %"alloc::vec::Vec<u8>"* %result, %"alloc::vec::Vec<u8>"** %result.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %result.dbg.spill, metadata !6010, metadata !DIExpression()), !dbg !6016
  br label %bb1, !dbg !6017

bb1:                                              ; preds = %bb9, %bb10, %bb7, %bb4, %start
; call shlex::bytes::Shlex::next_char
  %1 = call { i8, i8 } @_ZN5shlex5bytes5Shlex9next_char17h96135a24a4e32e39E(%"bytes::Shlex"* align 8 %self), !dbg !6018
  store { i8, i8 } %1, { i8, i8 }* %_3, align 1, !dbg !6018
  br label %bb2, !dbg !6018

bb2:                                              ; preds = %bb1
  %2 = bitcast { i8, i8 }* %_3 to i8*, !dbg !6019
  %3 = load i8, i8* %2, align 1, !dbg !6019, !range !394, !noundef !19
  %4 = trunc i8 %3 to i1, !dbg !6019
  %_5 = zext i1 %4 to i64, !dbg !6019
  %5 = icmp eq i64 %_5, 1, !dbg !6019
  br i1 %5, label %bb3, label %bb13, !dbg !6019

bb3:                                              ; preds = %bb2
  %6 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_3, i32 0, i32 1, !dbg !6020
  %ch2 = load i8, i8* %6, align 1, !dbg !6020
  store i8 %ch2, i8* %ch2.dbg.spill, align 1, !dbg !6020
  call void @llvm.dbg.declare(metadata i8* %ch2.dbg.spill, metadata !6011, metadata !DIExpression()), !dbg !6020
  %_7 = zext i8 %ch2 to i32, !dbg !6021
  switch i32 %_7, label %bb4 [
    i32 92, label %bb5
    i32 34, label %bb12
  ], !dbg !6022

bb13:                                             ; preds = %bb2
  store i8 1, i8* %0, align 1, !dbg !6023
  br label %bb14, !dbg !6024

bb14:                                             ; preds = %bb11, %bb12, %bb13
  %7 = load i8, i8* %0, align 1, !dbg !6025, !range !394, !noundef !19
  %8 = trunc i8 %7 to i1, !dbg !6025
  ret i1 %8, !dbg !6025

bb4:                                              ; preds = %bb3
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h4b04564bca214e51E"(%"alloc::vec::Vec<u8>"* align 8 %result, i8 %ch2), !dbg !6026
  br label %bb1, !dbg !6026

bb5:                                              ; preds = %bb3
; call shlex::bytes::Shlex::next_char
  %9 = call { i8, i8 } @_ZN5shlex5bytes5Shlex9next_char17h96135a24a4e32e39E(%"bytes::Shlex"* align 8 %self), !dbg !6027
  store { i8, i8 } %9, { i8, i8 }* %_9, align 1, !dbg !6027
  br label %bb6, !dbg !6027

bb12:                                             ; preds = %bb3
  store i8 0, i8* %0, align 1, !dbg !6028
  br label %bb14, !dbg !6029

bb6:                                              ; preds = %bb5
  %10 = bitcast { i8, i8 }* %_9 to i8*, !dbg !6030
  %11 = load i8, i8* %10, align 1, !dbg !6030, !range !394, !noundef !19
  %12 = trunc i8 %11 to i1, !dbg !6030
  %_11 = zext i1 %12 to i64, !dbg !6030
  %13 = icmp eq i64 %_11, 1, !dbg !6030
  br i1 %13, label %bb7, label %bb11, !dbg !6030

bb7:                                              ; preds = %bb6
  %14 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_9, i32 0, i32 1, !dbg !6031
  %ch3 = load i8, i8* %14, align 1, !dbg !6031
  store i8 %ch3, i8* %ch3.dbg.spill, align 1, !dbg !6031
  call void @llvm.dbg.declare(metadata i8* %ch3.dbg.spill, metadata !6013, metadata !DIExpression()), !dbg !6031
  %_13 = zext i8 %ch3 to i32, !dbg !6032
  switch i32 %_13, label %bb8 [
    i32 36, label %bb9
    i32 96, label %bb9
    i32 34, label %bb9
    i32 92, label %bb9
    i32 10, label %bb1
  ], !dbg !6033

bb11:                                             ; preds = %bb6
  store i8 1, i8* %0, align 1, !dbg !6034
  br label %bb14, !dbg !6035

bb8:                                              ; preds = %bb7
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h4b04564bca214e51E"(%"alloc::vec::Vec<u8>"* align 8 %result, i8 92), !dbg !6037
  br label %bb10, !dbg !6037

bb9:                                              ; preds = %bb7, %bb7, %bb7, %bb7
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h4b04564bca214e51E"(%"alloc::vec::Vec<u8>"* align 8 %result, i8 %ch3), !dbg !6038
  br label %bb1, !dbg !6038

bb10:                                             ; preds = %bb8
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h4b04564bca214e51E"(%"alloc::vec::Vec<u8>"* align 8 %result, i8 %ch3), !dbg !6039
  br label %bb1, !dbg !6039
}

; shlex::bytes::Shlex::parse_single
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN5shlex5bytes5Shlex12parse_single17h5b1a443dfc519d8cE(%"bytes::Shlex"* align 8 %self, %"alloc::vec::Vec<u8>"* align 8 %result) unnamed_addr #1 !dbg !6040 {
start:
  %ch2.dbg.spill = alloca i8, align 1
  %result.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %self.dbg.spill = alloca %"bytes::Shlex"*, align 8
  %_3 = alloca { i8, i8 }, align 1
  %0 = alloca i8, align 1
  store %"bytes::Shlex"* %self, %"bytes::Shlex"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"bytes::Shlex"** %self.dbg.spill, metadata !6042, metadata !DIExpression()), !dbg !6046
  store %"alloc::vec::Vec<u8>"* %result, %"alloc::vec::Vec<u8>"** %result.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %result.dbg.spill, metadata !6043, metadata !DIExpression()), !dbg !6047
  br label %bb1, !dbg !6048

bb1:                                              ; preds = %bb4, %start
; call shlex::bytes::Shlex::next_char
  %1 = call { i8, i8 } @_ZN5shlex5bytes5Shlex9next_char17h96135a24a4e32e39E(%"bytes::Shlex"* align 8 %self), !dbg !6049
  store { i8, i8 } %1, { i8, i8 }* %_3, align 1, !dbg !6049
  br label %bb2, !dbg !6049

bb2:                                              ; preds = %bb1
  %2 = bitcast { i8, i8 }* %_3 to i8*, !dbg !6050
  %3 = load i8, i8* %2, align 1, !dbg !6050, !range !394, !noundef !19
  %4 = trunc i8 %3 to i1, !dbg !6050
  %_5 = zext i1 %4 to i64, !dbg !6050
  %5 = icmp eq i64 %_5, 1, !dbg !6050
  br i1 %5, label %bb3, label %bb6, !dbg !6050

bb3:                                              ; preds = %bb2
  %6 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_3, i32 0, i32 1, !dbg !6051
  %ch2 = load i8, i8* %6, align 1, !dbg !6051
  store i8 %ch2, i8* %ch2.dbg.spill, align 1, !dbg !6051
  call void @llvm.dbg.declare(metadata i8* %ch2.dbg.spill, metadata !6044, metadata !DIExpression()), !dbg !6051
  %_7 = zext i8 %ch2 to i32, !dbg !6052
  %7 = icmp eq i32 %_7, 39, !dbg !6053
  br i1 %7, label %bb5, label %bb4, !dbg !6053

bb6:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1, !dbg !6054
  br label %bb7, !dbg !6055

bb7:                                              ; preds = %bb5, %bb6
  %8 = load i8, i8* %0, align 1, !dbg !6056, !range !394, !noundef !19
  %9 = trunc i8 %8 to i1, !dbg !6056
  ret i1 %9, !dbg !6056

bb5:                                              ; preds = %bb3
  store i8 0, i8* %0, align 1, !dbg !6057
  br label %bb7, !dbg !6058

bb4:                                              ; preds = %bb3
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h4b04564bca214e51E"(%"alloc::vec::Vec<u8>"* align 8 %result, i8 %ch2), !dbg !6060
  br label %bb1, !dbg !6060
}

; shlex::bytes::Shlex::next_char
; Function Attrs: nonlazybind uwtable
define internal { i8, i8 } @_ZN5shlex5bytes5Shlex9next_char17h96135a24a4e32e39E(%"bytes::Shlex"* align 8 %self) unnamed_addr #1 !dbg !6061 {
start:
  %self.dbg.spill = alloca %"bytes::Shlex"*, align 8
  %res = alloca { i8, i8 }, align 1
  call void @llvm.dbg.declare(metadata { i8, i8 }* %res, metadata !6066, metadata !DIExpression()), !dbg !6068
  store %"bytes::Shlex"* %self, %"bytes::Shlex"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"bytes::Shlex"** %self.dbg.spill, metadata !6065, metadata !DIExpression()), !dbg !6069
  %_3 = bitcast %"bytes::Shlex"* %self to { i8*, i8* }*, !dbg !6070
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_2 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hda0a6e501ff7d1c6E"({ i8*, i8* }* align 8 %_3), !dbg !6070
  br label %bb1, !dbg !6070

bb1:                                              ; preds = %start
; call core::option::Option<&T>::copied
  %0 = call { i8, i8 } @"_ZN4core6option19Option$LT$$RF$T$GT$6copied17ha9fbd977121fc3d6E"(i8* align 1 %_2), !dbg !6070
  store { i8, i8 } %0, { i8, i8 }* %res, align 1, !dbg !6070
  br label %bb2, !dbg !6070

bb2:                                              ; preds = %bb1
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_4 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h8ef90b888a549fe8E"({ i8, i8 }* align 1 %res, { i8, i8 }* align 1 bitcast (<{ [2 x i8] }>* @alloc111 to { i8, i8 }*)), !dbg !6071
  br label %bb3, !dbg !6071

bb3:                                              ; preds = %bb2
  br i1 %_4, label %bb4, label %bb6, !dbg !6071

bb6:                                              ; preds = %bb5, %bb3
  %1 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %res, i32 0, i32 0, !dbg !6072
  %2 = load i8, i8* %1, align 1, !dbg !6072, !range !394, !noundef !19
  %3 = trunc i8 %2 to i1, !dbg !6072
  %4 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %res, i32 0, i32 1, !dbg !6072
  %5 = load i8, i8* %4, align 1, !dbg !6072
  %6 = zext i1 %3 to i8, !dbg !6072
  %7 = insertvalue { i8, i8 } undef, i8 %6, 0, !dbg !6072
  %8 = insertvalue { i8, i8 } %7, i8 %5, 1, !dbg !6072
  ret { i8, i8 } %8, !dbg !6072

bb4:                                              ; preds = %bb3
  %9 = getelementptr inbounds %"bytes::Shlex", %"bytes::Shlex"* %self, i32 0, i32 1, !dbg !6073
  %10 = load i64, i64* %9, align 8, !dbg !6073
  %11 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %10, i64 1), !dbg !6073
  %_7.0 = extractvalue { i64, i1 } %11, 0, !dbg !6073
  %_7.1 = extractvalue { i64, i1 } %11, 1, !dbg !6073
  %12 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false), !dbg !6073
  br i1 %12, label %panic, label %bb5, !dbg !6073

bb5:                                              ; preds = %bb4
  %13 = getelementptr inbounds %"bytes::Shlex", %"bytes::Shlex"* %self, i32 0, i32 1, !dbg !6073
  store i64 %_7.0, i64* %13, align 8, !dbg !6073
  br label %bb6, !dbg !6074

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc345 to %"core::panic::location::Location"*)) #16, !dbg !6073
  unreachable, !dbg !6073
}

; <shlex::bytes::Shlex as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
define void @"_ZN78_$LT$shlex..bytes..Shlex$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h78fef5295293fb1fE"(%"core::option::Option<alloc::vec::Vec<u8>>"* sret(%"core::option::Option<alloc::vec::Vec<u8>>") %0, %"bytes::Shlex"* align 8 %self) unnamed_addr #1 !dbg !6075 {
start:
  %ch2.dbg.spill2 = alloca i8, align 1
  %ch2.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca %"bytes::Shlex"*, align 8
  %_14 = alloca { i8, i8 }, align 1
  %_8 = alloca { i8, i8 }, align 1
  %ch = alloca i8, align 1
  %_2 = alloca { i8, i8 }, align 1
  store %"bytes::Shlex"* %self, %"bytes::Shlex"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"bytes::Shlex"** %self.dbg.spill, metadata !6080, metadata !DIExpression()), !dbg !6087
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !6081, metadata !DIExpression()), !dbg !6088
; call shlex::bytes::Shlex::next_char
  %1 = call { i8, i8 } @_ZN5shlex5bytes5Shlex9next_char17h96135a24a4e32e39E(%"bytes::Shlex"* align 8 %self), !dbg !6089
  store { i8, i8 } %1, { i8, i8 }* %_2, align 1, !dbg !6089
  br label %bb1, !dbg !6089

bb1:                                              ; preds = %start
  %2 = bitcast { i8, i8 }* %_2 to i8*, !dbg !6090
  %3 = load i8, i8* %2, align 1, !dbg !6090, !range !394, !noundef !19
  %4 = trunc i8 %3 to i1, !dbg !6090
  %_4 = zext i1 %4 to i64, !dbg !6090
  %5 = icmp eq i64 %_4, 1, !dbg !6090
  br i1 %5, label %bb2, label %bb12, !dbg !6090

bb2:                                              ; preds = %bb1
  %6 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2, i32 0, i32 1, !dbg !6088
  %7 = load i8, i8* %6, align 1, !dbg !6088
  store i8 %7, i8* %ch, align 1, !dbg !6088
  br label %bb3, !dbg !6091

bb12:                                             ; preds = %bb1
  %8 = bitcast %"core::option::Option<alloc::vec::Vec<u8>>"* %0 to {}**, !dbg !6092
  store {}* null, {}** %8, align 8, !dbg !6092
  br label %bb13, !dbg !6093

bb13:                                             ; preds = %bb11, %bb4, %bb12
  ret void, !dbg !6094

bb3:                                              ; preds = %bb10, %bb2
  %_7 = load i8, i8* %ch, align 1, !dbg !6095
  %_6 = zext i8 %_7 to i32, !dbg !6095
  switch i32 %_6, label %bb4 [
    i32 32, label %bb8
    i32 9, label %bb8
    i32 10, label %bb8
    i32 35, label %bb5
  ], !dbg !6096

bb4:                                              ; preds = %bb3
  %_20 = load i8, i8* %ch, align 1, !dbg !6097
; call shlex::bytes::Shlex::parse_word
  call void @_ZN5shlex5bytes5Shlex10parse_word17h8fe796b90f88bf53E(%"core::option::Option<alloc::vec::Vec<u8>>"* sret(%"core::option::Option<alloc::vec::Vec<u8>>") %0, %"bytes::Shlex"* align 8 %self, i8 %_20), !dbg !6098
  br label %bb13, !dbg !6098

bb8:                                              ; preds = %bb7, %bb6, %bb3, %bb3, %bb3
; call shlex::bytes::Shlex::next_char
  %9 = call { i8, i8 } @_ZN5shlex5bytes5Shlex9next_char17h96135a24a4e32e39E(%"bytes::Shlex"* align 8 %self), !dbg !6099
  store { i8, i8 } %9, { i8, i8 }* %_14, align 1, !dbg !6099
  br label %bb9, !dbg !6099

bb5:                                              ; preds = %bb7, %bb3
; call shlex::bytes::Shlex::next_char
  %10 = call { i8, i8 } @_ZN5shlex5bytes5Shlex9next_char17h96135a24a4e32e39E(%"bytes::Shlex"* align 8 %self), !dbg !6100
  store { i8, i8 } %10, { i8, i8 }* %_8, align 1, !dbg !6100
  br label %bb6, !dbg !6100

bb6:                                              ; preds = %bb5
  %11 = bitcast { i8, i8 }* %_8 to i8*, !dbg !6101
  %12 = load i8, i8* %11, align 1, !dbg !6101, !range !394, !noundef !19
  %13 = trunc i8 %12 to i1, !dbg !6101
  %_10 = zext i1 %13 to i64, !dbg !6101
  %14 = icmp eq i64 %_10, 1, !dbg !6101
  br i1 %14, label %bb7, label %bb8, !dbg !6101

bb7:                                              ; preds = %bb6
  %15 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_8, i32 0, i32 1, !dbg !6102
  %ch2 = load i8, i8* %15, align 1, !dbg !6102
  store i8 %ch2, i8* %ch2.dbg.spill, align 1, !dbg !6102
  call void @llvm.dbg.declare(metadata i8* %ch2.dbg.spill, metadata !6083, metadata !DIExpression()), !dbg !6102
  %_12 = zext i8 %ch2 to i32, !dbg !6103
  %16 = icmp eq i32 %_12, 10, !dbg !6103
  br i1 %16, label %bb8, label %bb5, !dbg !6103

bb9:                                              ; preds = %bb8
  %17 = bitcast { i8, i8 }* %_14 to i8*, !dbg !6104
  %18 = load i8, i8* %17, align 1, !dbg !6104, !range !394, !noundef !19
  %19 = trunc i8 %18 to i1, !dbg !6104
  %_16 = zext i1 %19 to i64, !dbg !6104
  %20 = icmp eq i64 %_16, 1, !dbg !6104
  br i1 %20, label %bb10, label %bb11, !dbg !6104

bb10:                                             ; preds = %bb9
  %21 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_14, i32 0, i32 1, !dbg !6105
  %ch21 = load i8, i8* %21, align 1, !dbg !6105
  store i8 %ch21, i8* %ch2.dbg.spill2, align 1, !dbg !6105
  call void @llvm.dbg.declare(metadata i8* %ch2.dbg.spill2, metadata !6085, metadata !DIExpression()), !dbg !6105
  store i8 %ch21, i8* %ch, align 1, !dbg !6106
  br label %bb3, !dbg !6091

bb11:                                             ; preds = %bb9
  %22 = bitcast %"core::option::Option<alloc::vec::Vec<u8>>"* %0 to {}**, !dbg !6107
  store {}* null, {}** %22, align 8, !dbg !6107
  br label %bb13, !dbg !6094
}

; shlex::bytes::split
; Function Attrs: nonlazybind uwtable
define void @_ZN5shlex5bytes5split17h49c5ba0e0911ad83E(%"core::option::Option<alloc::vec::Vec<alloc::vec::Vec<u8>>>"* sret(%"core::option::Option<alloc::vec::Vec<alloc::vec::Vec<u8>>>") %0, [0 x i8]* align 1 %in_bytes.0, i64 %in_bytes.1) unnamed_addr #1 !dbg !6108 {
start:
  %in_bytes.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %"alloc::vec::Vec<alloc::vec::Vec<u8>>", align 8
  %res = alloca %"alloc::vec::Vec<alloc::vec::Vec<u8>>", align 8
  %shl = alloca %"bytes::Shlex", align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes.dbg.spill, i32 0, i32 0
  store [0 x i8]* %in_bytes.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes.dbg.spill, i32 0, i32 1
  store i64 %in_bytes.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %in_bytes.dbg.spill, metadata !6123, metadata !DIExpression()), !dbg !6128
  call void @llvm.dbg.declare(metadata %"bytes::Shlex"* %shl, metadata !6124, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %res, metadata !6126, metadata !DIExpression()), !dbg !6130
  store i8 0, i8* %_10, align 1, !dbg !6131
; call shlex::bytes::Shlex::new
  call void @_ZN5shlex5bytes5Shlex3new17h828b6896c0f4e720E(%"bytes::Shlex"* sret(%"bytes::Shlex") %shl, [0 x i8]* align 1 %in_bytes.0, i64 %in_bytes.1), !dbg !6132
  br label %bb1, !dbg !6132

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::by_ref
  %_6 = call align 8 %"bytes::Shlex"* @_ZN4core4iter6traits8iterator8Iterator6by_ref17h4ba759d08463b75dE(%"bytes::Shlex"* align 8 %shl), !dbg !6133
  br label %bb2, !dbg !6133

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_10, align 1, !dbg !6133
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17h2ef59b44caa76a53E(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* sret(%"alloc::vec::Vec<alloc::vec::Vec<u8>>") %res, %"bytes::Shlex"* align 8 %_6), !dbg !6133
  br label %bb3, !dbg !6133

bb3:                                              ; preds = %bb2
  %3 = getelementptr inbounds %"bytes::Shlex", %"bytes::Shlex"* %shl, i32 0, i32 2, !dbg !6134
  %4 = load i8, i8* %3, align 8, !dbg !6134, !range !394, !noundef !19
  %_8 = trunc i8 %4 to i1, !dbg !6134
  br i1 %_8, label %bb4, label %bb5, !dbg !6134

bb5:                                              ; preds = %bb3
  store i8 0, i8* %_10, align 1, !dbg !6135
  %5 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %_9 to i8*, !dbg !6135
  %6 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %res to i8*, !dbg !6135
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !6135
  %7 = bitcast %"core::option::Option<alloc::vec::Vec<alloc::vec::Vec<u8>>>"* %0 to %"core::option::Option<alloc::vec::Vec<alloc::vec::Vec<u8>>>::Some"*, !dbg !6136
  %8 = bitcast %"core::option::Option<alloc::vec::Vec<alloc::vec::Vec<u8>>>::Some"* %7 to %"alloc::vec::Vec<alloc::vec::Vec<u8>>"*, !dbg !6136
  %9 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %8 to i8*, !dbg !6136
  %10 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %_9 to i8*, !dbg !6136
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !6136
  br label %bb6, !dbg !6137

bb4:                                              ; preds = %bb3
  %11 = bitcast %"core::option::Option<alloc::vec::Vec<alloc::vec::Vec<u8>>>"* %0 to {}**, !dbg !6138
  store {}* null, {}** %11, align 8, !dbg !6138
  br label %bb6, !dbg !6137

bb6:                                              ; preds = %bb5, %bb4
  %12 = load i8, i8* %_10, align 1, !dbg !6139, !range !394, !noundef !19
  %13 = trunc i8 %12 to i1, !dbg !6139
  br i1 %13, label %bb8, label %bb7, !dbg !6139

bb7:                                              ; preds = %bb8, %bb6
  store i8 0, i8* %_10, align 1, !dbg !6139
  ret void, !dbg !6140

bb8:                                              ; preds = %bb6
; call core::ptr::drop_in_place<alloc::vec::Vec<alloc::vec::Vec<u8>>>
  call void @"_ZN4core3ptr69drop_in_place$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17h6d0efc2a132f28d7E"(%"alloc::vec::Vec<alloc::vec::Vec<u8>>"* %res), !dbg !6139
  br label %bb7, !dbg !6139
}

; shlex::bytes::Quoter::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN5shlex5bytes6Quoter3new17h63fe65f2f9a9481dE() unnamed_addr #0 !dbg !6141 {
start:
; call <shlex::bytes::Quoter as core::default::Default>::default
  %0 = call zeroext i1 @"_ZN63_$LT$shlex..bytes..Quoter$u20$as$u20$core..default..Default$GT$7default17h2a83d232dbe3a039E"(), !dbg !6144
  br label %bb1, !dbg !6144

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !6145
}

; shlex::bytes::Quoter::allow_nul
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN5shlex5bytes6Quoter9allow_nul17h89a2f8c59372f27dE(i1 zeroext %0, i1 zeroext %allow) unnamed_addr #0 !dbg !6146 {
start:
  %allow.dbg.spill = alloca i8, align 1
  %self = alloca i8, align 1
  %1 = zext i1 %0 to i8
  store i8 %1, i8* %self, align 1
  call void @llvm.dbg.declare(metadata i8* %self, metadata !6150, metadata !DIExpression()), !dbg !6152
  %2 = zext i1 %allow to i8
  store i8 %2, i8* %allow.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %allow.dbg.spill, metadata !6151, metadata !DIExpression()), !dbg !6153
  %3 = zext i1 %allow to i8, !dbg !6154
  store i8 %3, i8* %self, align 1, !dbg !6154
  %4 = load i8, i8* %self, align 1, !dbg !6155, !range !394, !noundef !19
  %5 = trunc i8 %4 to i1, !dbg !6155
  ret i1 %5, !dbg !6156
}

; shlex::bytes::Quoter::quote
; Function Attrs: nonlazybind uwtable
define void @_ZN5shlex5bytes6Quoter5quote17h9838e4866ab2a183E(%"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>"* sret(%"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>") %0, i8* align 1 %self, [0 x i8]* align 1 %1, i64 %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !6157 {
start:
  %rest.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %cur_chunk.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %cur_len.dbg.spill = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca i8*, align 8
  %_61 = alloca i8, align 1
  %_59 = alloca %"alloc::vec::Vec<u8>", align 8
  %_58 = alloca %"alloc::borrow::Cow<[u8]>", align 8
  %_42 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_38 = alloca %"alloc::borrow::Cow<[u8]>", align 8
  %_28 = alloca i8, align 1
  %_27 = alloca i8, align 1
  %strategy = alloca i8, align 1
  %out = alloca %"alloc::vec::Vec<u8>", align 8
  %_16 = alloca { i8*, i8* }, align 8
  %_11 = alloca i8, align 1
  %_5 = alloca %"alloc::borrow::Cow<[u8]>", align 8
  %in_bytes = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !6161, metadata !DIExpression()), !dbg !6171
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %in_bytes, metadata !6162, metadata !DIExpression()), !dbg !6172
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %out, metadata !6163, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.declare(metadata i8* %strategy, metadata !6167, metadata !DIExpression()), !dbg !6174
  store i8 0, i8* %_61, align 1, !dbg !6175
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 0, !dbg !6176
  %_4.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !dbg !6176, !nonnull !19, !align !826, !noundef !19
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 1, !dbg !6176
  %_4.1 = load i64, i64* %7, align 8, !dbg !6176
; call core::slice::<impl [T]>::is_empty
  %_3 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hdfd8f1d2de4b48ecE"([0 x i8]* align 1 %_4.0, i64 %_4.1), !dbg !6176
  br label %bb1, !dbg !6176

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb5, !dbg !6176

bb5:                                              ; preds = %bb1
  %8 = load i8, i8* %self, align 1, !dbg !6177, !range !394, !noundef !19
  %_13 = trunc i8 %8 to i1, !dbg !6177
  %_12 = xor i1 %_13, true, !dbg !6178
  br i1 %_12, label %bb7, label %bb6, !dbg !6178

bb2:                                              ; preds = %bb1
; call core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %9 = call { [0 x i8]*, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h5274fd43326ea4feE"([2 x i8]* align 1 getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc1, i32 0, i32 0), %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc347 to %"core::panic::location::Location"*)), !dbg !6179
  %_7.0 = extractvalue { [0 x i8]*, i64 } %9, 0, !dbg !6179
  %_7.1 = extractvalue { [0 x i8]*, i64 } %9, 1, !dbg !6179
  br label %bb3, !dbg !6179

bb3:                                              ; preds = %bb2
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h9f5b2bfd9c5e1a67E"(%"alloc::borrow::Cow<[u8]>"* sret(%"alloc::borrow::Cow<[u8]>") %_5, [0 x i8]* align 1 %_7.0, i64 %_7.1), !dbg !6179
  br label %bb4, !dbg !6179

bb4:                                              ; preds = %bb3
  %10 = bitcast %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>"* %0 to %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>::Ok"*, !dbg !6180
  %11 = bitcast %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>::Ok"* %10 to %"alloc::borrow::Cow<[u8]>"*, !dbg !6180
  %12 = bitcast %"alloc::borrow::Cow<[u8]>"* %11 to i8*, !dbg !6180
  %13 = bitcast %"alloc::borrow::Cow<[u8]>"* %_5 to i8*, !dbg !6180
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 32, i1 false), !dbg !6180
  br label %bb37, !dbg !6181

bb37:                                             ; preds = %bb35, %bb36, %bb11, %bb4
  ret void, !dbg !6183

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_11, align 1, !dbg !6178
  br label %bb8, !dbg !6178

bb7:                                              ; preds = %bb5
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 0, !dbg !6184
  %_17.0 = load [0 x i8]*, [0 x i8]** %14, align 8, !dbg !6184, !nonnull !19, !align !826, !noundef !19
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 1, !dbg !6184
  %_17.1 = load i64, i64* %15, align 8, !dbg !6184
; call core::slice::<impl [T]>::iter
  %16 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h4aacd776e8fe9725E"([0 x i8]* align 1 %_17.0, i64 %_17.1), !dbg !6184
  store { i8*, i8* } %16, { i8*, i8* }* %_16, align 8, !dbg !6184
  br label %bb9, !dbg !6184

bb9:                                              ; preds = %bb7
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
  %_14 = call zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17h353834cac3225960E"({ i8*, i8* }* align 8 %_16), !dbg !6184
  br label %bb10, !dbg !6184

bb10:                                             ; preds = %bb9
  %17 = zext i1 %_14 to i8, !dbg !6178
  store i8 %17, i8* %_11, align 1, !dbg !6178
  br label %bb8, !dbg !6178

bb8:                                              ; preds = %bb6, %bb10
  %18 = load i8, i8* %_11, align 1, !dbg !6178, !range !394, !noundef !19
  %19 = trunc i8 %18 to i1, !dbg !6178
  br i1 %19, label %bb11, label %bb12, !dbg !6178

bb12:                                             ; preds = %bb8
  store i8 1, i8* %_61, align 1, !dbg !6185
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hec81cd16a2af355aE"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %out), !dbg !6185
  br label %bb13, !dbg !6185

bb11:                                             ; preds = %bb8
  %20 = bitcast %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>"* %0 to i64*, !dbg !6186
  store i64 2, i64* %20, align 8, !dbg !6186
  br label %bb37, !dbg !6181

bb13:                                             ; preds = %bb41, %bb12
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 0, !dbg !6187
  %_22.0 = load [0 x i8]*, [0 x i8]** %21, align 8, !dbg !6187, !nonnull !19, !align !826, !noundef !19
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 1, !dbg !6187
  %_22.1 = load i64, i64* %22, align 8, !dbg !6187
; invoke core::slice::<impl [T]>::is_empty
  %_21 = invoke zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hdfd8f1d2de4b48ecE"([0 x i8]* align 1 %_22.0, i64 %_22.1)
          to label %bb14 unwind label %cleanup, !dbg !6187

bb40:                                             ; preds = %cleanup
  %23 = load i8, i8* %_61, align 1, !dbg !6188, !range !394, !noundef !19
  %24 = trunc i8 %23 to i1, !dbg !6188
  br i1 %24, label %bb39, label %bb38, !dbg !6188

cleanup:                                          ; preds = %bb34, %bb33, %bb32, %bb30, %bb29, %bb28, %bb26, %bb18, %bb21, %bb16, %bb15, %bb13
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb40

bb14:                                             ; preds = %bb13
  %_20 = xor i1 %_21, true, !dbg !6189
  br i1 %_20, label %bb15, label %bb34, !dbg !6189

bb34:                                             ; preds = %bb14
  store i8 0, i8* %_61, align 1, !dbg !6190
  %30 = bitcast %"alloc::vec::Vec<u8>"* %_59 to i8*, !dbg !6190
  %31 = bitcast %"alloc::vec::Vec<u8>"* %out to i8*, !dbg !6190
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false), !dbg !6190
; invoke <T as core::convert::Into<U>>::into
  invoke void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h7abf799581f2b754E"(%"alloc::borrow::Cow<[u8]>"* sret(%"alloc::borrow::Cow<[u8]>") %_58, %"alloc::vec::Vec<u8>"* %_59)
          to label %bb35 unwind label %cleanup, !dbg !6190

bb15:                                             ; preds = %bb14
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 0, !dbg !6191
  %_26.0 = load [0 x i8]*, [0 x i8]** %32, align 8, !dbg !6191, !nonnull !19, !align !826, !noundef !19
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 1, !dbg !6191
  %_26.1 = load i64, i64* %33, align 8, !dbg !6191
; invoke shlex::bytes::quoting_strategy
  %34 = invoke { i64, i8 } @_ZN5shlex5bytes16quoting_strategy17h4e6af26bd7812e49E([0 x i8]* align 1 %_26.0, i64 %_26.1)
          to label %bb16 unwind label %cleanup, !dbg !6192

bb16:                                             ; preds = %bb15
  %_25.0 = extractvalue { i64, i8 } %34, 0, !dbg !6192
  %_25.1 = extractvalue { i64, i8 } %34, 1, !dbg !6192
  store i64 %_25.0, i64* %cur_len.dbg.spill, align 8, !dbg !6193
  call void @llvm.dbg.declare(metadata i64* %cur_len.dbg.spill, metadata !6165, metadata !DIExpression()), !dbg !6194
  store i8 %_25.1, i8* %strategy, align 1, !dbg !6195
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 0, !dbg !6196
  %_32.0 = load [0 x i8]*, [0 x i8]** %35, align 8, !dbg !6196, !nonnull !19, !align !826, !noundef !19
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 1, !dbg !6196
  %_32.1 = load i64, i64* %36, align 8, !dbg !6196
; invoke core::slice::<impl [T]>::len
  %_31 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h9d58ef0a71d56975E"([0 x i8]* align 1 %_32.0, i64 %_32.1)
          to label %bb23 unwind label %cleanup, !dbg !6196

bb23:                                             ; preds = %bb16
  %_29 = icmp eq i64 %_25.0, %_31, !dbg !6197
  br i1 %_29, label %bb21, label %bb20, !dbg !6197

bb20:                                             ; preds = %bb23
  store i8 0, i8* %_28, align 1, !dbg !6197
  br label %bb22, !dbg !6197

bb21:                                             ; preds = %bb23
; invoke <shlex::bytes::QuotingStrategy as core::cmp::PartialEq>::eq
  %_33 = invoke zeroext i1 @"_ZN70_$LT$shlex..bytes..QuotingStrategy$u20$as$u20$core..cmp..PartialEq$GT$2eq17h8b7eb91020b6de4fE"(i8* align 1 %strategy, i8* align 1 getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc153, i32 0, i32 0, i32 0))
          to label %bb24 unwind label %cleanup, !dbg !6198

bb24:                                             ; preds = %bb21
  %37 = zext i1 %_33 to i8, !dbg !6197
  store i8 %37, i8* %_28, align 1, !dbg !6197
  br label %bb22, !dbg !6197

bb22:                                             ; preds = %bb20, %bb24
  %38 = load i8, i8* %_28, align 1, !dbg !6197, !range !394, !noundef !19
  %39 = trunc i8 %38 to i1, !dbg !6197
  br i1 %39, label %bb18, label %bb17, !dbg !6197

bb17:                                             ; preds = %bb22
  store i8 0, i8* %_27, align 1, !dbg !6197
  br label %bb19, !dbg !6197

bb18:                                             ; preds = %bb22
; invoke alloc::vec::Vec<T,A>::is_empty
  %_36 = invoke zeroext i1 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8is_empty17h11a978bc7669e728E"(%"alloc::vec::Vec<u8>"* align 8 %out)
          to label %bb25 unwind label %cleanup, !dbg !6199

bb25:                                             ; preds = %bb18
  %40 = zext i1 %_36 to i8, !dbg !6197
  store i8 %40, i8* %_27, align 1, !dbg !6197
  br label %bb19, !dbg !6197

bb19:                                             ; preds = %bb17, %bb25
  %41 = load i8, i8* %_27, align 1, !dbg !6197, !range !394, !noundef !19
  %42 = trunc i8 %41 to i1, !dbg !6197
  br i1 %42, label %bb26, label %bb28, !dbg !6197

bb28:                                             ; preds = %bb19
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 0, !dbg !6200
  %_43.0 = load [0 x i8]*, [0 x i8]** %43, align 8, !dbg !6200, !nonnull !19, !align !826, !noundef !19
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 1, !dbg !6200
  %_43.1 = load i64, i64* %44, align 8, !dbg !6200
; invoke core::slice::<impl [T]>::split_at
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8split_at17h6a8dc46ce288b406E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_42, [0 x i8]* align 1 %_43.0, i64 %_43.1, i64 %_25.0, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc349 to %"core::panic::location::Location"*))
          to label %bb29 unwind label %cleanup, !dbg !6200

bb26:                                             ; preds = %bb19
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 0, !dbg !6201
  %_39.0 = load [0 x i8]*, [0 x i8]** %45, align 8, !dbg !6201, !nonnull !19, !align !826, !noundef !19
  %46 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 1, !dbg !6201
  %_39.1 = load i64, i64* %46, align 8, !dbg !6201
; invoke <T as core::convert::Into<U>>::into
  invoke void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h9f5b2bfd9c5e1a67E"(%"alloc::borrow::Cow<[u8]>"* sret(%"alloc::borrow::Cow<[u8]>") %_38, [0 x i8]* align 1 %_39.0, i64 %_39.1)
          to label %bb27 unwind label %cleanup, !dbg !6201

bb27:                                             ; preds = %bb26
  %47 = bitcast %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>"* %0 to %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>::Ok"*, !dbg !6202
  %48 = bitcast %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>::Ok"* %47 to %"alloc::borrow::Cow<[u8]>"*, !dbg !6202
  %49 = bitcast %"alloc::borrow::Cow<[u8]>"* %48 to i8*, !dbg !6202
  %50 = bitcast %"alloc::borrow::Cow<[u8]>"* %_38 to i8*, !dbg !6202
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 32, i1 false), !dbg !6202
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9be70052c8106a2bE"(%"alloc::vec::Vec<u8>"* %out), !dbg !6188
  br label %bb36, !dbg !6188

bb36:                                             ; preds = %bb27
  store i8 0, i8* %_61, align 1, !dbg !6188
  br label %bb37, !dbg !6181

bb29:                                             ; preds = %bb28
  %51 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_42 to { [0 x i8]*, i64 }*, !dbg !6203
  %52 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %51, i32 0, i32 0, !dbg !6203
  %cur_chunk.0 = load [0 x i8]*, [0 x i8]** %52, align 8, !dbg !6203, !nonnull !19, !align !826, !noundef !19
  %53 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %51, i32 0, i32 1, !dbg !6203
  %cur_chunk.1 = load i64, i64* %53, align 8, !dbg !6203
  %54 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %cur_chunk.dbg.spill, i32 0, i32 0, !dbg !6203
  store [0 x i8]* %cur_chunk.0, [0 x i8]** %54, align 8, !dbg !6203
  %55 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %cur_chunk.dbg.spill, i32 0, i32 1, !dbg !6203
  store i64 %cur_chunk.1, i64* %55, align 8, !dbg !6203
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %cur_chunk.dbg.spill, metadata !6168, metadata !DIExpression()), !dbg !6204
  %56 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_42, i32 0, i32 1, !dbg !6205
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 0, !dbg !6205
  %rest.0 = load [0 x i8]*, [0 x i8]** %57, align 8, !dbg !6205, !nonnull !19, !align !826, !noundef !19
  %58 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 1, !dbg !6205
  %rest.1 = load i64, i64* %58, align 8, !dbg !6205
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest.dbg.spill, i32 0, i32 0, !dbg !6205
  store [0 x i8]* %rest.0, [0 x i8]** %59, align 8, !dbg !6205
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest.dbg.spill, i32 0, i32 1, !dbg !6205
  store i64 %rest.1, i64* %60, align 8, !dbg !6205
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %rest.dbg.spill, metadata !6170, metadata !DIExpression()), !dbg !6206
; invoke core::slice::<impl [T]>::len
  %_47 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h9d58ef0a71d56975E"([0 x i8]* align 1 %rest.0, i64 %rest.1)
          to label %bb30 unwind label %cleanup, !dbg !6207

bb30:                                             ; preds = %bb29
  %61 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 0, !dbg !6208
  %_50.0 = load [0 x i8]*, [0 x i8]** %61, align 8, !dbg !6208, !nonnull !19, !align !826, !noundef !19
  %62 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 1, !dbg !6208
  %_50.1 = load i64, i64* %62, align 8, !dbg !6208
; invoke core::slice::<impl [T]>::len
  %_49 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h9d58ef0a71d56975E"([0 x i8]* align 1 %_50.0, i64 %_50.1)
          to label %bb31 unwind label %cleanup, !dbg !6208

bb31:                                             ; preds = %bb30
  %_46 = icmp ult i64 %_47, %_49, !dbg !6207
  %_45 = xor i1 %_46, true, !dbg !6209
  br i1 %_45, label %bb32, label %bb33, !dbg !6209

bb33:                                             ; preds = %bb31
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 0, !dbg !6210
  store [0 x i8]* %rest.0, [0 x i8]** %63, align 8, !dbg !6210
  %64 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes, i32 0, i32 1, !dbg !6210
  store i64 %rest.1, i64* %64, align 8, !dbg !6210
  %_57 = load i8, i8* %strategy, align 1, !dbg !6211, !range !6212, !noundef !19
; invoke shlex::bytes::append_quoted_chunk
  invoke void @_ZN5shlex5bytes19append_quoted_chunk17h8ee57003bd7cce9cE(%"alloc::vec::Vec<u8>"* align 8 %out, [0 x i8]* align 1 %cur_chunk.0, i64 %cur_chunk.1, i8 %_57)
          to label %bb41 unwind label %cleanup, !dbg !6213

bb32:                                             ; preds = %bb31
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [45 x i8] }>* @alloc350 to [0 x i8]*), i64 45, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc352 to %"core::panic::location::Location"*)) #16
          to label %unreachable unwind label %cleanup, !dbg !6209

unreachable:                                      ; preds = %bb32
  unreachable

bb41:                                             ; preds = %bb33
  br label %bb13, !dbg !6213

bb35:                                             ; preds = %bb34
  %65 = bitcast %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>"* %0 to %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>::Ok"*, !dbg !6214
  %66 = bitcast %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>::Ok"* %65 to %"alloc::borrow::Cow<[u8]>"*, !dbg !6214
  %67 = bitcast %"alloc::borrow::Cow<[u8]>"* %66 to i8*, !dbg !6214
  %68 = bitcast %"alloc::borrow::Cow<[u8]>"* %_58 to i8*, !dbg !6214
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 32, i1 false), !dbg !6214
  store i8 0, i8* %_61, align 1, !dbg !6188
  br label %bb37, !dbg !6183

bb38:                                             ; preds = %bb39, %bb40
  %69 = bitcast { i8*, i32 }* %3 to i8**, !dbg !6215
  %70 = load i8*, i8** %69, align 8, !dbg !6215
  %71 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !6215
  %72 = load i32, i32* %71, align 8, !dbg !6215
  %73 = insertvalue { i8*, i32 } undef, i8* %70, 0, !dbg !6215
  %74 = insertvalue { i8*, i32 } %73, i32 %72, 1, !dbg !6215
  resume { i8*, i32 } %74, !dbg !6215

bb39:                                             ; preds = %bb40
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9be70052c8106a2bE"(%"alloc::vec::Vec<u8>"* %out) #14
          to label %bb38 unwind label %abort, !dbg !6188

abort:                                            ; preds = %bb39
  %75 = landingpad { i8*, i32 }
          cleanup, !dbg !6215
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #15, !dbg !6215
  unreachable, !dbg !6215
}

; shlex::bytes::Quoter::quote::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN5shlex5bytes6Quoter5quote28_$u7b$$u7b$closure$u7d$$u7d$17hc21b762c28cc18f4E"(%"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0/src/bytes.rs:211:51: 211:55]"* align 1 %_1, i8* align 1 %_2) unnamed_addr #0 !dbg !6216 {
start:
  %b.dbg.spill = alloca i8, align 1
  %_2.dbg.spill = alloca i8*, align 8
  %_1.dbg.spill = alloca %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0/src/bytes.rs:211:51: 211:55]"*, align 8
  store %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0/src/bytes.rs:211:51: 211:55]"* %_1, %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0/src/bytes.rs:211:51: 211:55]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0/src/bytes.rs:211:51: 211:55]"** %_1.dbg.spill, metadata !6223, metadata !DIExpression()), !dbg !6225
  store i8* %_2, i8** %_2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %_2.dbg.spill, metadata !6224, metadata !DIExpression()), !dbg !6226
  %b = load i8, i8* %_2, align 1, !dbg !6227
  store i8 %b, i8* %b.dbg.spill, align 1, !dbg !6227
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !6221, metadata !DIExpression()), !dbg !6228
  %0 = icmp eq i8 %b, 0, !dbg !6229
  ret i1 %0, !dbg !6230
}

; shlex::bytes::unquoted_ok_fast
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN5shlex5bytes16unquoted_ok_fast17h9f5f033708201482E(i8 %c) unnamed_addr #1 !dbg !6231 {
start:
  %c.dbg.spill = alloca i8, align 1
  store i8 %c, i8* %c.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %c.dbg.spill, metadata !6235, metadata !DIExpression()), !dbg !6236
  %0 = and i8 %c, -128, !dbg !6237
  %_5.1 = icmp ne i8 %0, 0, !dbg !6237
  %1 = zext i8 %c to i128, !dbg !6237
  %2 = and i128 %1, 127, !dbg !6237
  %_5.0 = lshr i128 10633823859816483586817443131232878592, %2, !dbg !6237
  %3 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !6237
  br i1 %3, label %panic, label %bb1, !dbg !6237

bb1:                                              ; preds = %start
  %_2 = and i128 %_5.0, 1, !dbg !6238
  %4 = icmp ne i128 %_2, 0, !dbg !6238
  ret i1 %4, !dbg !6239

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc354 to %"core::panic::location::Location"*)) #16, !dbg !6237
  unreachable, !dbg !6237
}

; shlex::bytes::single_quoted_ok
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN5shlex5bytes16single_quoted_ok17h032cd25b986414ccE(i8 %c) unnamed_addr #1 !dbg !6240 {
start:
  %c.dbg.spill = alloca i8, align 1
  %0 = alloca i8, align 1
  store i8 %c, i8* %c.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %c.dbg.spill, metadata !6242, metadata !DIExpression()), !dbg !6243
  switch i8 %c, label %bb1 [
    i8 39, label %bb2
    i8 94, label %bb3
    i8 92, label %bb4
  ], !dbg !6244

bb1:                                              ; preds = %start
  store i8 1, i8* %0, align 1, !dbg !6245
  br label %bb5, !dbg !6245

bb2:                                              ; preds = %start
  store i8 0, i8* %0, align 1, !dbg !6246
  br label %bb5, !dbg !6246

bb3:                                              ; preds = %start
  store i8 0, i8* %0, align 1, !dbg !6247
  br label %bb5, !dbg !6247

bb4:                                              ; preds = %start
  store i8 0, i8* %0, align 1, !dbg !6248
  br label %bb5, !dbg !6248

bb5:                                              ; preds = %bb2, %bb3, %bb4, %bb1
  %1 = load i8, i8* %0, align 1, !dbg !6249, !range !394, !noundef !19
  %2 = trunc i8 %1 to i1, !dbg !6249
  ret i1 %2, !dbg !6249
}

; shlex::bytes::double_quoted_ok
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN5shlex5bytes16double_quoted_ok17h0a565b1ff623fc71E(i8 %c) unnamed_addr #1 !dbg !6250 {
start:
  %c.dbg.spill = alloca i8, align 1
  %0 = alloca i8, align 1
  store i8 %c, i8* %c.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %c.dbg.spill, metadata !6252, metadata !DIExpression()), !dbg !6253
  switch i8 %c, label %bb1 [
    i8 96, label %bb2
    i8 36, label %bb2
    i8 33, label %bb3
    i8 94, label %bb3
  ], !dbg !6254

bb1:                                              ; preds = %start
  store i8 1, i8* %0, align 1, !dbg !6255
  br label %bb4, !dbg !6255

bb2:                                              ; preds = %start, %start
  store i8 0, i8* %0, align 1, !dbg !6256
  br label %bb4, !dbg !6256

bb3:                                              ; preds = %start, %start
  store i8 0, i8* %0, align 1, !dbg !6257
  br label %bb4, !dbg !6257

bb4:                                              ; preds = %bb2, %bb3, %bb1
  %1 = load i8, i8* %0, align 1, !dbg !6258, !range !394, !noundef !19
  %2 = trunc i8 %1 to i1, !dbg !6258
  ret i1 %2, !dbg !6258
}

; shlex::bytes::quoting_strategy
; Function Attrs: nonlazybind uwtable
define internal { i64, i8 } @_ZN5shlex5bytes16quoting_strategy17h4e6af26bd7812e49E([0 x i8]* align 1 %in_bytes.0, i64 %in_bytes.1) unnamed_addr #1 !dbg !6259 {
start:
  %c.dbg.spill = alloca i8, align 1
  %in_bytes.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %strategy = alloca i8, align 1
  %cur_ok = alloca i8, align 1
  %i = alloca i64, align 8
  %prev_ok = alloca i8, align 1
  %0 = alloca { i64, i8 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes.dbg.spill, i32 0, i32 0
  store [0 x i8]* %in_bytes.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes.dbg.spill, i32 0, i32 1
  store i64 %in_bytes.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %in_bytes.dbg.spill, metadata !6267, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.declare(metadata i8* %prev_ok, metadata !6268, metadata !DIExpression()), !dbg !6279
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6270, metadata !DIExpression()), !dbg !6280
  call void @llvm.dbg.declare(metadata i8* %cur_ok, metadata !6274, metadata !DIExpression()), !dbg !6281
  call void @llvm.dbg.declare(metadata i8* %strategy, metadata !6276, metadata !DIExpression()), !dbg !6282
  store i8 7, i8* %prev_ok, align 1, !dbg !6283
  store i64 0, i64* %i, align 8, !dbg !6284
  %_7 = icmp ult i64 0, %in_bytes.1, !dbg !6285
  %3 = call i1 @llvm.expect.i1(i1 %_7, i1 true), !dbg !6285
  br i1 %3, label %bb1, label %panic, !dbg !6285

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds [0 x i8], [0 x i8]* %in_bytes.0, i64 0, i64 0, !dbg !6285
  %_4 = load i8, i8* %4, align 1, !dbg !6285
  %5 = icmp eq i8 %_4, 94, !dbg !6285
  br i1 %5, label %bb2, label %bb3, !dbg !6285

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 0, i64 %in_bytes.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc356 to %"core::panic::location::Location"*)) #16, !dbg !6285
  unreachable, !dbg !6285

bb2:                                              ; preds = %bb1
  store i8 2, i8* %prev_ok, align 1, !dbg !6286
  store i64 1, i64* %i, align 8, !dbg !6287
  br label %bb3, !dbg !6288

bb3:                                              ; preds = %bb18, %bb2, %bb1
  %_9 = load i64, i64* %i, align 8, !dbg !6289
  %_8 = icmp ult i64 %_9, %in_bytes.1, !dbg !6289
  br i1 %_8, label %bb4, label %bb19, !dbg !6289

bb19:                                             ; preds = %bb16, %bb3
  %_37 = load i8, i8* %prev_ok, align 1, !dbg !6290
  %_36 = and i8 %_37, 1, !dbg !6290
  %6 = icmp eq i8 %_36, 0, !dbg !6290
  br i1 %6, label %bb21, label %bb20, !dbg !6290

bb4:                                              ; preds = %bb3
  %_13 = load i64, i64* %i, align 8, !dbg !6291
  %_15 = icmp ult i64 %_13, %in_bytes.1, !dbg !6292
  %7 = call i1 @llvm.expect.i1(i1 %_15, i1 true), !dbg !6292
  br i1 %7, label %bb5, label %panic1, !dbg !6292

bb5:                                              ; preds = %bb4
  %8 = getelementptr inbounds [0 x i8], [0 x i8]* %in_bytes.0, i64 0, i64 %_13, !dbg !6292
  %c = load i8, i8* %8, align 1, !dbg !6292
  store i8 %c, i8* %c.dbg.spill, align 1, !dbg !6292
  call void @llvm.dbg.declare(metadata i8* %c.dbg.spill, metadata !6272, metadata !DIExpression()), !dbg !6293
  %9 = load i8, i8* %prev_ok, align 1, !dbg !6294
  store i8 %9, i8* %cur_ok, align 1, !dbg !6294
  %_17 = icmp uge i8 %c, -128, !dbg !6295
  br i1 %_17, label %bb6, label %bb7, !dbg !6295

panic1:                                           ; preds = %bb4
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_13, i64 %in_bytes.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc358 to %"core::panic::location::Location"*)) #16, !dbg !6292
  unreachable, !dbg !6292

bb7:                                              ; preds = %bb5
; call shlex::bytes::unquoted_ok_fast
  %_21 = call zeroext i1 @_ZN5shlex5bytes16unquoted_ok_fast17h9f5f033708201482E(i8 %c), !dbg !6296
  br label %bb8, !dbg !6296

bb6:                                              ; preds = %bb5
  %10 = load i8, i8* %cur_ok, align 1, !dbg !6297
  %11 = and i8 %10, -2, !dbg !6297
  store i8 %11, i8* %cur_ok, align 1, !dbg !6297
  br label %bb16, !dbg !6298

bb16:                                             ; preds = %bb15, %bb14, %bb6
  %_32 = load i8, i8* %cur_ok, align 1, !dbg !6299
  %12 = icmp eq i8 %_32, 0, !dbg !6299
  br i1 %12, label %bb19, label %bb17, !dbg !6299

bb8:                                              ; preds = %bb7
  %_20 = xor i1 %_21, true, !dbg !6300
  br i1 %_20, label %bb9, label %bb10, !dbg !6300

bb10:                                             ; preds = %bb9, %bb8
; call shlex::bytes::single_quoted_ok
  %_25 = call zeroext i1 @_ZN5shlex5bytes16single_quoted_ok17h032cd25b986414ccE(i8 %c), !dbg !6301
  br label %bb11, !dbg !6301

bb9:                                              ; preds = %bb8
  %13 = load i8, i8* %cur_ok, align 1, !dbg !6302
  %14 = and i8 %13, -2, !dbg !6302
  store i8 %14, i8* %cur_ok, align 1, !dbg !6302
  br label %bb10, !dbg !6303

bb11:                                             ; preds = %bb10
  %_24 = xor i1 %_25, true, !dbg !6304
  br i1 %_24, label %bb12, label %bb13, !dbg !6304

bb13:                                             ; preds = %bb12, %bb11
; call shlex::bytes::double_quoted_ok
  %_29 = call zeroext i1 @_ZN5shlex5bytes16double_quoted_ok17h0a565b1ff623fc71E(i8 %c), !dbg !6305
  br label %bb14, !dbg !6305

bb12:                                             ; preds = %bb11
  %15 = load i8, i8* %cur_ok, align 1, !dbg !6306
  %16 = and i8 %15, -3, !dbg !6306
  store i8 %16, i8* %cur_ok, align 1, !dbg !6306
  br label %bb13, !dbg !6307

bb14:                                             ; preds = %bb13
  %_28 = xor i1 %_29, true, !dbg !6308
  br i1 %_28, label %bb15, label %bb16, !dbg !6308

bb15:                                             ; preds = %bb14
  %17 = load i8, i8* %cur_ok, align 1, !dbg !6309
  %18 = and i8 %17, -5, !dbg !6309
  store i8 %18, i8* %cur_ok, align 1, !dbg !6309
  br label %bb16, !dbg !6310

bb17:                                             ; preds = %bb16
  %_33 = load i8, i8* %cur_ok, align 1, !dbg !6311
  store i8 %_33, i8* %prev_ok, align 1, !dbg !6312
  %19 = load i64, i64* %i, align 8, !dbg !6313
  %20 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %19, i64 1), !dbg !6313
  %_34.0 = extractvalue { i64, i1 } %20, 0, !dbg !6313
  %_34.1 = extractvalue { i64, i1 } %20, 1, !dbg !6313
  %21 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false), !dbg !6313
  br i1 %21, label %panic2, label %bb18, !dbg !6313

bb18:                                             ; preds = %bb17
  store i64 %_34.0, i64* %i, align 8, !dbg !6313
  br label %bb3, !dbg !6314

panic2:                                           ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc360 to %"core::panic::location::Location"*)) #16, !dbg !6313
  unreachable, !dbg !6313

bb21:                                             ; preds = %bb19
  %_39 = load i8, i8* %prev_ok, align 1, !dbg !6315
  %_38 = and i8 %_39, 2, !dbg !6315
  %22 = icmp eq i8 %_38, 0, !dbg !6315
  br i1 %22, label %bb23, label %bb22, !dbg !6315

bb20:                                             ; preds = %bb19
  store i8 0, i8* %strategy, align 1, !dbg !6316
  br label %bb26, !dbg !6317

bb26:                                             ; preds = %bb24, %bb22, %bb20
  %_45 = load i64, i64* %i, align 8, !dbg !6318
  %_44 = icmp ugt i64 %_45, 0, !dbg !6318
  %_43 = xor i1 %_44, true, !dbg !6319
  br i1 %_43, label %bb27, label %bb28, !dbg !6319

bb23:                                             ; preds = %bb21
  %_41 = load i8, i8* %prev_ok, align 1, !dbg !6320
  %_40 = and i8 %_41, 4, !dbg !6320
  %23 = icmp eq i8 %_40, 0, !dbg !6320
  br i1 %23, label %bb25, label %bb24, !dbg !6320

bb22:                                             ; preds = %bb21
  store i8 1, i8* %strategy, align 1, !dbg !6321
  br label %bb26, !dbg !6322

bb25:                                             ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [40 x i8] }>* @alloc364 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc366 to %"core::panic::location::Location"*)) #16, !dbg !6323
  unreachable, !dbg !6323

bb24:                                             ; preds = %bb23
  store i8 2, i8* %strategy, align 1, !dbg !6324
  br label %bb26, !dbg !6322

bb28:                                             ; preds = %bb26
  %_47 = load i64, i64* %i, align 8, !dbg !6325
  %_48 = load i8, i8* %strategy, align 1, !dbg !6326, !range !6212, !noundef !19
  %24 = bitcast { i64, i8 }* %0 to i64*, !dbg !6327
  store i64 %_47, i64* %24, align 8, !dbg !6327
  %25 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1, !dbg !6327
  store i8 %_48, i8* %25, align 8, !dbg !6327
  %26 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0, !dbg !6328
  %27 = load i64, i64* %26, align 8, !dbg !6328
  %28 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1, !dbg !6328
  %29 = load i8, i8* %28, align 8, !dbg !6328, !range !6212, !noundef !19
  %30 = insertvalue { i64, i8 } undef, i64 %27, 0, !dbg !6328
  %31 = insertvalue { i64, i8 } %30, i8 %29, 1, !dbg !6328
  ret { i64, i8 } %31, !dbg !6328

bb27:                                             ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [23 x i8] }>* @alloc361 to [0 x i8]*), i64 23, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc363 to %"core::panic::location::Location"*)) #16, !dbg !6319
  unreachable, !dbg !6319
}

; shlex::bytes::append_quoted_chunk
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5shlex5bytes19append_quoted_chunk17h8ee57003bd7cce9cE(%"alloc::vec::Vec<u8>"* align 8 %out, [0 x i8]* align 1 %cur_chunk.0, i64 %cur_chunk.1, i8 %0) unnamed_addr #1 !dbg !6329 {
start:
  %c.dbg.spill = alloca i8, align 1
  %cur_chunk.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %out.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_33 = alloca i8*, align 8
  %iter = alloca { i8*, i8* }, align 8
  %strategy = alloca i8, align 1
  store i8 %0, i8* %strategy, align 1
  store %"alloc::vec::Vec<u8>"* %out, %"alloc::vec::Vec<u8>"** %out.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %out.dbg.spill, metadata !6333, metadata !DIExpression()), !dbg !6340
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %cur_chunk.dbg.spill, i32 0, i32 0
  store [0 x i8]* %cur_chunk.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %cur_chunk.dbg.spill, i32 0, i32 1
  store i64 %cur_chunk.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %cur_chunk.dbg.spill, metadata !6334, metadata !DIExpression()), !dbg !6341
  call void @llvm.dbg.declare(metadata i8* %strategy, metadata !6335, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %iter, metadata !6336, metadata !DIExpression()), !dbg !6343
  %3 = load i8, i8* %strategy, align 1, !dbg !6344, !range !6212, !noundef !19
  %_4 = zext i8 %3 to i64, !dbg !6344
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb1
  ], !dbg !6345

bb2:                                              ; preds = %start
  unreachable, !dbg !6344

bb3:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17hbdc1b7fc228aa866E"(%"alloc::vec::Vec<u8>"* align 8 %out, [0 x i8]* align 1 %cur_chunk.0, i64 %cur_chunk.1), !dbg !6346
  br label %bb21, !dbg !6346

bb4:                                              ; preds = %start
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %cur_chunk.1, i64 2), !dbg !6347
  %_13.0 = extractvalue { i64, i1 } %4, 0, !dbg !6347
  %_13.1 = extractvalue { i64, i1 } %4, 1, !dbg !6347
  %5 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false), !dbg !6347
  br i1 %5, label %panic1, label %bb5, !dbg !6347

bb1:                                              ; preds = %start
  %6 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %cur_chunk.1, i64 2), !dbg !6348
  %_26.0 = extractvalue { i64, i1 } %6, 0, !dbg !6348
  %_26.1 = extractvalue { i64, i1 } %6, 1, !dbg !6348
  %7 = call i1 @llvm.expect.i1(i1 %_26.1, i1 false), !dbg !6348
  br i1 %7, label %panic, label %bb9, !dbg !6348

bb9:                                              ; preds = %bb1
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hbfb27bc36448b560E"(%"alloc::vec::Vec<u8>"* align 8 %out, i64 %_26.0), !dbg !6349
  br label %bb10, !dbg !6349

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc368 to %"core::panic::location::Location"*)) #16, !dbg !6348
  unreachable, !dbg !6348

bb10:                                             ; preds = %bb9
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h4b04564bca214e51E"(%"alloc::vec::Vec<u8>"* align 8 %out, i8 34), !dbg !6350
  br label %bb11, !dbg !6350

bb11:                                             ; preds = %bb10
; call core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
  %8 = call { i8*, i8* } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h673ba194fd678fa9E"([0 x i8]* align 1 %cur_chunk.0, i64 %cur_chunk.1), !dbg !6351
  %_30.0 = extractvalue { i8*, i8* } %8, 0, !dbg !6351
  %_30.1 = extractvalue { i8*, i8* } %8, 1, !dbg !6351
  br label %bb12, !dbg !6351

bb12:                                             ; preds = %bb11
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %9 = call { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h3255d46da8ee5f13E"(i8* %_30.0, i8* %_30.1), !dbg !6351
  %_29.0 = extractvalue { i8*, i8* } %9, 0, !dbg !6351
  %_29.1 = extractvalue { i8*, i8* } %9, 1, !dbg !6351
  br label %bb13, !dbg !6351

bb13:                                             ; preds = %bb12
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 0, !dbg !6351
  store i8* %_29.0, i8** %10, align 8, !dbg !6351
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 1, !dbg !6351
  store i8* %_29.1, i8** %11, align 8, !dbg !6351
  br label %bb14, !dbg !6352

bb14:                                             ; preds = %bb20, %bb13
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %12 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hda0a6e501ff7d1c6E"({ i8*, i8* }* align 8 %iter), !dbg !6343
  store i8* %12, i8** %_33, align 8, !dbg !6343
  br label %bb15, !dbg !6343

bb15:                                             ; preds = %bb14
  %13 = bitcast i8** %_33 to {}**, !dbg !6343
  %14 = load {}*, {}** %13, align 8, !dbg !6343
  %15 = icmp eq {}* %14, null, !dbg !6343
  %_36 = select i1 %15, i64 0, i64 1, !dbg !6343
  switch i64 %_36, label %bb17 [
    i64 0, label %bb18
    i64 1, label %bb16
  ], !dbg !6343

bb17:                                             ; preds = %bb15
  unreachable, !dbg !6343

bb18:                                             ; preds = %bb15
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h4b04564bca214e51E"(%"alloc::vec::Vec<u8>"* align 8 %out, i8 34), !dbg !6353
  br label %bb21, !dbg !6353

bb16:                                             ; preds = %bb15
  %_45 = load i8*, i8** %_33, align 8, !dbg !6354, !nonnull !19, !align !826, !noundef !19
  %c = load i8, i8* %_45, align 1, !dbg !6354
  store i8 %c, i8* %c.dbg.spill, align 1, !dbg !6354
  call void @llvm.dbg.declare(metadata i8* %c.dbg.spill, metadata !6338, metadata !DIExpression()), !dbg !6355
  switch i8 %c, label %bb20 [
    i8 36, label %bb19
    i8 96, label %bb19
    i8 34, label %bb19
    i8 92, label %bb19
  ], !dbg !6356

bb20:                                             ; preds = %bb19, %bb16
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h4b04564bca214e51E"(%"alloc::vec::Vec<u8>"* align 8 %out, i8 %c), !dbg !6357
  br label %bb14, !dbg !6357

bb19:                                             ; preds = %bb16, %bb16, %bb16, %bb16
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h4b04564bca214e51E"(%"alloc::vec::Vec<u8>"* align 8 %out, i8 92), !dbg !6358
  br label %bb20, !dbg !6358

bb21:                                             ; preds = %bb3, %bb8, %bb18
  ret void, !dbg !6359

bb5:                                              ; preds = %bb4
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hbfb27bc36448b560E"(%"alloc::vec::Vec<u8>"* align 8 %out, i64 %_13.0), !dbg !6360
  br label %bb6, !dbg !6360

panic1:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc370 to %"core::panic::location::Location"*)) #16, !dbg !6347
  unreachable, !dbg !6347

bb6:                                              ; preds = %bb5
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h4b04564bca214e51E"(%"alloc::vec::Vec<u8>"* align 8 %out, i8 39), !dbg !6361
  br label %bb7, !dbg !6361

bb7:                                              ; preds = %bb6
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17hbdc1b7fc228aa866E"(%"alloc::vec::Vec<u8>"* align 8 %out, [0 x i8]* align 1 %cur_chunk.0, i64 %cur_chunk.1), !dbg !6362
  br label %bb8, !dbg !6362

bb8:                                              ; preds = %bb7
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h4b04564bca214e51E"(%"alloc::vec::Vec<u8>"* align 8 %out, i8 39), !dbg !6363
  br label %bb21, !dbg !6363
}

; shlex::bytes::quote
; Function Attrs: nonlazybind uwtable
define void @_ZN5shlex5bytes5quote17hc5a527f2f8f7908cE(%"alloc::borrow::Cow<[u8]>"* sret(%"alloc::borrow::Cow<[u8]>") %0, [0 x i8]* align 1 %in_bytes.0, i64 %in_bytes.1) unnamed_addr #1 !dbg !6364 {
start:
  %in_bytes.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca i8, align 1
  %_2 = alloca %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>", align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes.dbg.spill, i32 0, i32 0
  store [0 x i8]* %in_bytes.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes.dbg.spill, i32 0, i32 1
  store i64 %in_bytes.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %in_bytes.dbg.spill, metadata !6366, metadata !DIExpression()), !dbg !6367
; call shlex::bytes::Quoter::new
  %_5 = call zeroext i1 @_ZN5shlex5bytes6Quoter3new17h63fe65f2f9a9481dE(), !dbg !6368
  br label %bb1, !dbg !6368

bb1:                                              ; preds = %start
; call shlex::bytes::Quoter::allow_nul
  %3 = call zeroext i1 @_ZN5shlex5bytes6Quoter9allow_nul17h89a2f8c59372f27dE(i1 zeroext %_5, i1 zeroext true), !dbg !6368
  %4 = zext i1 %3 to i8, !dbg !6368
  store i8 %4, i8* %_4, align 1, !dbg !6368
  br label %bb2, !dbg !6368

bb2:                                              ; preds = %bb1
; call shlex::bytes::Quoter::quote
  call void @_ZN5shlex5bytes6Quoter5quote17h9838e4866ab2a183E(%"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>"* sret(%"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>") %_2, i8* align 1 %_4, [0 x i8]* align 1 %in_bytes.0, i64 %in_bytes.1), !dbg !6368
  br label %bb3, !dbg !6368

bb3:                                              ; preds = %bb2
; call core::result::Result<T,E>::unwrap
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h24a86ad913b8503bE"(%"alloc::borrow::Cow<[u8]>"* sret(%"alloc::borrow::Cow<[u8]>") %0, %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>"* %_2, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc372 to %"core::panic::location::Location"*)), !dbg !6368
  br label %bb4, !dbg !6368

bb4:                                              ; preds = %bb3
  ret void, !dbg !6369
}

; shlex::bytes::try_quote
; Function Attrs: nonlazybind uwtable
define void @_ZN5shlex5bytes9try_quote17hfaa03ad89562c193E(%"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>"* sret(%"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>") %0, [0 x i8]* align 1 %in_bytes.0, i64 %in_bytes.1) unnamed_addr #1 !dbg !6370 {
start:
  %in_bytes.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_3 = alloca i8, align 1
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes.dbg.spill, i32 0, i32 0
  store [0 x i8]* %in_bytes.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_bytes.dbg.spill, i32 0, i32 1
  store i64 %in_bytes.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %in_bytes.dbg.spill, metadata !6374, metadata !DIExpression()), !dbg !6375
; call shlex::bytes::Quoter::new
  %3 = call zeroext i1 @_ZN5shlex5bytes6Quoter3new17h63fe65f2f9a9481dE(), !dbg !6376
  %4 = zext i1 %3 to i8, !dbg !6376
  store i8 %4, i8* %_3, align 1, !dbg !6376
  br label %bb1, !dbg !6376

bb1:                                              ; preds = %start
; call shlex::bytes::Quoter::quote
  call void @_ZN5shlex5bytes6Quoter5quote17h9838e4866ab2a183E(%"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>"* sret(%"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>") %0, i8* align 1 %_3, [0 x i8]* align 1 %in_bytes.0, i64 %in_bytes.1), !dbg !6376
  br label %bb2, !dbg !6376

bb2:                                              ; preds = %bb1
  ret void, !dbg !6377
}

; shlex::Shlex::new
; Function Attrs: nonlazybind uwtable
define void @_ZN5shlex5Shlex3new17he724209e1fb6ac31E(%Shlex* sret(%Shlex) %0, [0 x i8]* align 1 %in_str.0, i64 %in_str.1) unnamed_addr #1 !dbg !6378 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %in_str.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_2 = alloca %"bytes::Shlex", align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_str.dbg.spill, i32 0, i32 0
  store [0 x i8]* %in_str.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_str.dbg.spill, i32 0, i32 1
  store i64 %in_str.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %in_str.dbg.spill, metadata !6382, metadata !DIExpression()), !dbg !6383
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %in_str.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %in_str.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !6384, metadata !DIExpression()), !dbg !6391
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !6393
  store [0 x i8]* %in_str.0, [0 x i8]** %6, align 8, !dbg !6393
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !6393
  store i64 %in_str.1, i64* %7, align 8, !dbg !6393
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !6393
  %9 = load [0 x i8]*, [0 x i8]** %8, align 8, !dbg !6393, !nonnull !19, !align !826, !noundef !19
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !6393
  %11 = load i64, i64* %10, align 8, !dbg !6393
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %9, 0, !dbg !6394
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %11, 1, !dbg !6394
  %_4.0 = extractvalue { [0 x i8]*, i64 } %13, 0, !dbg !6395
  %_4.1 = extractvalue { [0 x i8]*, i64 } %13, 1, !dbg !6395
  br label %bb1, !dbg !6395

bb1:                                              ; preds = %start
; call shlex::bytes::Shlex::new
  call void @_ZN5shlex5bytes5Shlex3new17h828b6896c0f4e720E(%"bytes::Shlex"* sret(%"bytes::Shlex") %_2, [0 x i8]* align 1 %_4.0, i64 %_4.1), !dbg !6396
  br label %bb2, !dbg !6396

bb2:                                              ; preds = %bb1
  %14 = bitcast %Shlex* %0 to %"bytes::Shlex"*, !dbg !6397
  %15 = bitcast %"bytes::Shlex"* %14 to i8*, !dbg !6397
  %16 = bitcast %"bytes::Shlex"* %_2 to i8*, !dbg !6397
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 32, i1 false), !dbg !6397
  ret void, !dbg !6398
}

; <shlex::Shlex as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
define void @"_ZN71_$LT$shlex..Shlex$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6979e59542e021cbE"(%"core::option::Option<alloc::string::String>"* sret(%"core::option::Option<alloc::string::String>") %0, %Shlex* align 8 %self) unnamed_addr #1 !dbg !6399 {
start:
  %self.dbg.spill = alloca %Shlex*, align 8
  %_2 = alloca %"core::option::Option<alloc::vec::Vec<u8>>", align 8
  store %Shlex* %self, %Shlex** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %Shlex** %self.dbg.spill, metadata !6403, metadata !DIExpression()), !dbg !6404
  %_3 = bitcast %Shlex* %self to %"bytes::Shlex"*, !dbg !6405
; call <shlex::bytes::Shlex as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN78_$LT$shlex..bytes..Shlex$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h78fef5295293fb1fE"(%"core::option::Option<alloc::vec::Vec<u8>>"* sret(%"core::option::Option<alloc::vec::Vec<u8>>") %_2, %"bytes::Shlex"* align 8 %_3), !dbg !6405
  br label %bb1, !dbg !6405

bb1:                                              ; preds = %start
; call core::option::Option<T>::map
  call void @"_ZN4core6option15Option$LT$T$GT$3map17h53bfbfe835d9c253E"(%"core::option::Option<alloc::string::String>"* sret(%"core::option::Option<alloc::string::String>") %0, %"core::option::Option<alloc::vec::Vec<u8>>"* %_2), !dbg !6405
  br label %bb2, !dbg !6405

bb2:                                              ; preds = %bb1
  ret void, !dbg !6406
}

; <shlex::Shlex as core::iter::traits::iterator::Iterator>::next::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN71_$LT$shlex..Shlex$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hf4992ab11c7d8383E"(%"alloc::string::String"* sret(%"alloc::string::String") %0, %"alloc::vec::Vec<u8>"* %byte_word) unnamed_addr #0 !dbg !6407 {
start:
  %_1.dbg.spill = alloca %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0/src/lib.rs:69:27: 69:38]", align 1
  %_3 = alloca %"alloc::vec::Vec<u8>", align 8
  call void @llvm.dbg.declare(metadata %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0/src/lib.rs:69:27: 69:38]"* %_1.dbg.spill, metadata !6412, metadata !DIExpression()), !dbg !6413
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %byte_word, metadata !6411, metadata !DIExpression()), !dbg !6414
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_3 to i8*, !dbg !6415
  %2 = bitcast %"alloc::vec::Vec<u8>"* %byte_word to i8*, !dbg !6415
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !6415
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h3c17280b4df2ae37E(%"alloc::string::String"* sret(%"alloc::string::String") %0, %"alloc::vec::Vec<u8>"* %_3), !dbg !6416
  br label %bb1, !dbg !6416

bb1:                                              ; preds = %start
  ret void, !dbg !6417
}

; <shlex::Shlex as core::ops::deref::Deref>::deref
; Function Attrs: nonlazybind uwtable
define align 8 %"bytes::Shlex"* @"_ZN56_$LT$shlex..Shlex$u20$as$u20$core..ops..deref..Deref$GT$5deref17h261d70947cc36f8fE"(%Shlex* align 8 %self) unnamed_addr #1 !dbg !6418 {
start:
  %self.dbg.spill = alloca %Shlex*, align 8
  store %Shlex* %self, %Shlex** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %Shlex** %self.dbg.spill, metadata !6423, metadata !DIExpression()), !dbg !6424
  %0 = bitcast %Shlex* %self to %"bytes::Shlex"*, !dbg !6425
  ret %"bytes::Shlex"* %0, !dbg !6426
}

; <shlex::Shlex as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: nonlazybind uwtable
define align 8 %"bytes::Shlex"* @"_ZN59_$LT$shlex..Shlex$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h241d997cae43b6dcE"(%Shlex* align 8 %self) unnamed_addr #1 !dbg !6427 {
start:
  %self.dbg.spill = alloca %Shlex*, align 8
  store %Shlex* %self, %Shlex** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %Shlex** %self.dbg.spill, metadata !6432, metadata !DIExpression()), !dbg !6433
  %_3 = bitcast %Shlex* %self to %"bytes::Shlex"*, !dbg !6434
  ret %"bytes::Shlex"* %_3, !dbg !6435
}

; shlex::split
; Function Attrs: nonlazybind uwtable
define void @_ZN5shlex5split17h66c3dc5de73b0dbdE(%"core::option::Option<alloc::vec::Vec<alloc::string::String>>"* sret(%"core::option::Option<alloc::vec::Vec<alloc::string::String>>") %0, [0 x i8]* align 1 %in_str.0, i64 %in_str.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !6436 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %in_str.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_12 = alloca i8, align 1
  %_11 = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  %res = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  %shl = alloca %Shlex, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_str.dbg.spill, i32 0, i32 0
  store [0 x i8]* %in_str.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_str.dbg.spill, i32 0, i32 1
  store i64 %in_str.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %in_str.dbg.spill, metadata !6451, metadata !DIExpression()), !dbg !6456
  call void @llvm.dbg.declare(metadata %Shlex* %shl, metadata !6452, metadata !DIExpression()), !dbg !6457
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::string::String>"* %res, metadata !6454, metadata !DIExpression()), !dbg !6458
  store i8 0, i8* %_12, align 1, !dbg !6459
; call shlex::Shlex::new
  call void @_ZN5shlex5Shlex3new17he724209e1fb6ac31E(%Shlex* sret(%Shlex) %shl, [0 x i8]* align 1 %in_str.0, i64 %in_str.1), !dbg !6460
  br label %bb1, !dbg !6460

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::by_ref
  %_6 = call align 8 %Shlex* @_ZN4core4iter6traits8iterator8Iterator6by_ref17ha02f8a5de378d359E(%Shlex* align 8 %shl), !dbg !6461
  br label %bb2, !dbg !6461

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_12, align 1, !dbg !6461
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17ha461a06ed692ab48E(%"alloc::vec::Vec<alloc::string::String>"* sret(%"alloc::vec::Vec<alloc::string::String>") %res, %Shlex* align 8 %_6), !dbg !6461
  br label %bb3, !dbg !6461

bb3:                                              ; preds = %bb2
; invoke <shlex::Shlex as core::ops::deref::Deref>::deref
  %_9 = invoke align 8 %"bytes::Shlex"* @"_ZN56_$LT$shlex..Shlex$u20$as$u20$core..ops..deref..Deref$GT$5deref17h261d70947cc36f8fE"(%Shlex* align 8 %shl)
          to label %bb4 unwind label %cleanup, !dbg !6462

bb9:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h9e3b3be1cd4c1522E"(%"alloc::vec::Vec<alloc::string::String>"* %res) #14
          to label %bb10 unwind label %abort, !dbg !6463

cleanup:                                          ; preds = %bb3
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb9

bb4:                                              ; preds = %bb3
  %9 = getelementptr inbounds %"bytes::Shlex", %"bytes::Shlex"* %_9, i32 0, i32 2, !dbg !6462
  %10 = load i8, i8* %9, align 8, !dbg !6462, !range !394, !noundef !19
  %_8 = trunc i8 %10 to i1, !dbg !6462
  br i1 %_8, label %bb5, label %bb6, !dbg !6462

abort:                                            ; preds = %bb9
  %11 = landingpad { i8*, i32 }
          cleanup, !dbg !6464
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #15, !dbg !6464
  unreachable, !dbg !6464

bb10:                                             ; preds = %bb9
  %12 = bitcast { i8*, i32 }* %1 to i8**, !dbg !6464
  %13 = load i8*, i8** %12, align 8, !dbg !6464
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !6464
  %15 = load i32, i32* %14, align 8, !dbg !6464
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0, !dbg !6464
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1, !dbg !6464
  resume { i8*, i32 } %17, !dbg !6464

bb6:                                              ; preds = %bb4
  store i8 0, i8* %_12, align 1, !dbg !6465
  %18 = bitcast %"alloc::vec::Vec<alloc::string::String>"* %_11 to i8*, !dbg !6465
  %19 = bitcast %"alloc::vec::Vec<alloc::string::String>"* %res to i8*, !dbg !6465
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false), !dbg !6465
  %20 = bitcast %"core::option::Option<alloc::vec::Vec<alloc::string::String>>"* %0 to %"core::option::Option<alloc::vec::Vec<alloc::string::String>>::Some"*, !dbg !6466
  %21 = bitcast %"core::option::Option<alloc::vec::Vec<alloc::string::String>>::Some"* %20 to %"alloc::vec::Vec<alloc::string::String>"*, !dbg !6466
  %22 = bitcast %"alloc::vec::Vec<alloc::string::String>"* %21 to i8*, !dbg !6466
  %23 = bitcast %"alloc::vec::Vec<alloc::string::String>"* %_11 to i8*, !dbg !6466
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false), !dbg !6466
  br label %bb7, !dbg !6467

bb5:                                              ; preds = %bb4
  %24 = bitcast %"core::option::Option<alloc::vec::Vec<alloc::string::String>>"* %0 to {}**, !dbg !6468
  store {}* null, {}** %24, align 8, !dbg !6468
  br label %bb7, !dbg !6467

bb7:                                              ; preds = %bb6, %bb5
  %25 = load i8, i8* %_12, align 1, !dbg !6463, !range !394, !noundef !19
  %26 = trunc i8 %25 to i1, !dbg !6463
  br i1 %26, label %bb11, label %bb8, !dbg !6463

bb8:                                              ; preds = %bb11, %bb7
  store i8 0, i8* %_12, align 1, !dbg !6463
  ret void, !dbg !6469

bb11:                                             ; preds = %bb7
; call core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  call void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h9e3b3be1cd4c1522E"(%"alloc::vec::Vec<alloc::string::String>"* %res), !dbg !6463
  br label %bb8, !dbg !6463
}

; <shlex::QuoteError as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN56_$LT$shlex..QuoteError$u20$as$u20$core..fmt..Display$GT$3fmt17hb38ae021c7ed55cbE"(%"QuoteError::Nul"* align 1 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !6470 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"QuoteError::Nul"*, align 8
  store %"QuoteError::Nul"* %self, %"QuoteError::Nul"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"QuoteError::Nul"** %self.dbg.spill, metadata !6476, metadata !DIExpression()), !dbg !6478
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !6477, metadata !DIExpression()), !dbg !6479
; call core::fmt::Formatter::write_str
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17hd86e8e148609ddcbE(%"core::fmt::Formatter"* align 8 %f, [0 x i8]* align 1 bitcast (<{ [45 x i8] }>* @alloc373 to [0 x i8]*), i64 45), !dbg !6480
  br label %bb1, !dbg !6480

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !6481
}

; shlex::Quoter::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN5shlex6Quoter3new17hbc9cb6723d45ade4E() unnamed_addr #0 !dbg !6482 {
start:
; call <shlex::Quoter as core::default::Default>::default
  %0 = call zeroext i1 @"_ZN56_$LT$shlex..Quoter$u20$as$u20$core..default..Default$GT$7default17hac2f4ca3deae22ffE"(), !dbg !6488
  br label %bb1, !dbg !6488

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !6489
}

; shlex::Quoter::allow_nul
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN5shlex6Quoter9allow_nul17hf52ef9696cc698aeE(i1 zeroext %0, i1 zeroext %allow) unnamed_addr #0 !dbg !6490 {
start:
  %allow.dbg.spill = alloca i8, align 1
  %self = alloca i8, align 1
  %1 = zext i1 %0 to i8
  store i8 %1, i8* %self, align 1
  call void @llvm.dbg.declare(metadata i8* %self, metadata !6494, metadata !DIExpression()), !dbg !6496
  %2 = zext i1 %allow to i8
  store i8 %2, i8* %allow.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %allow.dbg.spill, metadata !6495, metadata !DIExpression()), !dbg !6497
  %3 = load i8, i8* %self, align 1, !dbg !6498, !range !394, !noundef !19
  %_4 = trunc i8 %3 to i1, !dbg !6498
; call shlex::bytes::Quoter::allow_nul
  %_3 = call zeroext i1 @_ZN5shlex5bytes6Quoter9allow_nul17h89a2f8c59372f27dE(i1 zeroext %_4, i1 zeroext %allow), !dbg !6498
  br label %bb1, !dbg !6498

bb1:                                              ; preds = %start
  %4 = zext i1 %_3 to i8, !dbg !6499
  store i8 %4, i8* %self, align 1, !dbg !6499
  %5 = load i8, i8* %self, align 1, !dbg !6500, !range !394, !noundef !19
  %6 = trunc i8 %5 to i1, !dbg !6500
  ret i1 %6, !dbg !6501
}

; shlex::Quoter::quote
; Function Attrs: nonlazybind uwtable
define void @_ZN5shlex6Quoter5quote17h3d843418da935af5E(%"core::result::Result<alloc::borrow::Cow<str>, QuoteError>"* sret(%"core::result::Result<alloc::borrow::Cow<str>, QuoteError>") %0, i8* align 1 %self, [0 x i8]* align 1 %in_str.0, i64 %in_str.1) unnamed_addr #1 !dbg !6502 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %out.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, QuoteError>::Err", align 1
  %in_str.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i8*, align 8
  %_22 = alloca %"alloc::vec::Vec<u8>", align 8
  %_21 = alloca %"alloc::string::String", align 8
  %out = alloca %"alloc::vec::Vec<u8>", align 8
  %val = alloca %"alloc::borrow::Cow<[u8]>", align 8
  %_6 = alloca %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, QuoteError>, alloc::borrow::Cow<[u8]>>", align 8
  %_4 = alloca %"alloc::borrow::Cow<[u8]>", align 8
  %_3 = alloca %"alloc::borrow::Cow<str>", align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !6507, metadata !DIExpression()), !dbg !6517
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_str.dbg.spill, i32 0, i32 0
  store [0 x i8]* %in_str.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_str.dbg.spill, i32 0, i32 1
  store i64 %in_str.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %in_str.dbg.spill, metadata !6508, metadata !DIExpression()), !dbg !6518
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, QuoteError>::Err"* %residual.dbg.spill, metadata !6509, metadata !DIExpression()), !dbg !6519
  call void @llvm.dbg.declare(metadata %"alloc::borrow::Cow<[u8]>"* %val, metadata !6511, metadata !DIExpression()), !dbg !6520
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %out, metadata !6515, metadata !DIExpression()), !dbg !6521
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %in_str.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %in_str.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !6384, metadata !DIExpression()), !dbg !6522
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !6524
  store [0 x i8]* %in_str.0, [0 x i8]** %6, align 8, !dbg !6524
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !6524
  store i64 %in_str.1, i64* %7, align 8, !dbg !6524
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !6524
  %9 = load [0 x i8]*, [0 x i8]** %8, align 8, !dbg !6524, !nonnull !19, !align !826, !noundef !19
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !6524
  %11 = load i64, i64* %10, align 8, !dbg !6524
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %9, 0, !dbg !6525
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %11, 1, !dbg !6525
  %_9.0 = extractvalue { [0 x i8]*, i64 } %13, 0, !dbg !6526
  %_9.1 = extractvalue { [0 x i8]*, i64 } %13, 1, !dbg !6526
  br label %bb1, !dbg !6526

bb1:                                              ; preds = %start
; call shlex::bytes::Quoter::quote
  call void @_ZN5shlex5bytes6Quoter5quote17h9838e4866ab2a183E(%"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>"* sret(%"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>") %_6, i8* align 1 %self, [0 x i8]* align 1 %_9.0, i64 %_9.1), !dbg !6527
  br label %bb2, !dbg !6527

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf1291636b0c5e5fdE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, QuoteError>, alloc::borrow::Cow<[u8]>>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, QuoteError>, alloc::borrow::Cow<[u8]>>") %_5, %"core::result::Result<alloc::borrow::Cow<[u8]>, QuoteError>"* %_6), !dbg !6527
  br label %bb3, !dbg !6527

bb3:                                              ; preds = %bb2
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, QuoteError>, alloc::borrow::Cow<[u8]>>"* %_5 to i64*, !dbg !6527
  %15 = load i64, i64* %14, align 8, !dbg !6527, !range !2080, !noundef !19
  %16 = sub i64 %15, 2, !dbg !6527
  %17 = icmp eq i64 %16, 0, !dbg !6527
  %_11 = select i1 %17, i64 1, i64 0, !dbg !6527
  switch i64 %_11, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ], !dbg !6527

bb5:                                              ; preds = %bb3
  unreachable, !dbg !6527

bb4:                                              ; preds = %bb3
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, QuoteError>, alloc::borrow::Cow<[u8]>>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, QuoteError>, alloc::borrow::Cow<[u8]>>::Continue"*, !dbg !6527
  %19 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, QuoteError>, alloc::borrow::Cow<[u8]>>::Continue"* %18 to %"alloc::borrow::Cow<[u8]>"*, !dbg !6527
  %20 = bitcast %"alloc::borrow::Cow<[u8]>"* %val to i8*, !dbg !6527
  %21 = bitcast %"alloc::borrow::Cow<[u8]>"* %19 to i8*, !dbg !6527
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 32, i1 false), !dbg !6527
  %22 = bitcast %"alloc::borrow::Cow<[u8]>"* %_4 to i8*, !dbg !6520
  %23 = bitcast %"alloc::borrow::Cow<[u8]>"* %val to i8*, !dbg !6520
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 32, i1 false), !dbg !6520
  %24 = bitcast %"alloc::borrow::Cow<[u8]>"* %_4 to i64*, !dbg !6527
  %_15 = load i64, i64* %24, align 8, !dbg !6527, !range !936, !noundef !19
  switch i64 %_15, label %bb9 [
    i64 0, label %bb10
    i64 1, label %bb8
  ], !dbg !6528

bb6:                                              ; preds = %bb3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc75bc6a3a9354f0cE"(%"core::result::Result<alloc::borrow::Cow<str>, QuoteError>"* sret(%"core::result::Result<alloc::borrow::Cow<str>, QuoteError>") %0, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc375 to %"core::panic::location::Location"*)), !dbg !6529
  br label %bb7, !dbg !6529

bb7:                                              ; preds = %bb6
  br label %bb14, !dbg !6530

bb14:                                             ; preds = %bb13, %bb7
  ret void, !dbg !6530

bb9:                                              ; preds = %bb4
  unreachable, !dbg !6527

bb10:                                             ; preds = %bb4
  %25 = bitcast %"alloc::borrow::Cow<[u8]>"* %_4 to %"alloc::borrow::Cow<[u8]>::Borrowed"*, !dbg !6531
  %26 = getelementptr inbounds %"alloc::borrow::Cow<[u8]>::Borrowed", %"alloc::borrow::Cow<[u8]>::Borrowed"* %25, i32 0, i32 1, !dbg !6531
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 0, !dbg !6531
  %out.0 = load [0 x i8]*, [0 x i8]** %27, align 8, !dbg !6531, !nonnull !19, !align !826, !noundef !19
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 1, !dbg !6531
  %out.1 = load i64, i64* %28, align 8, !dbg !6531
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %out.dbg.spill, i32 0, i32 0, !dbg !6531
  store [0 x i8]* %out.0, [0 x i8]** %29, align 8, !dbg !6531
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %out.dbg.spill, i32 0, i32 1, !dbg !6531
  store i64 %out.1, i64* %30, align 8, !dbg !6531
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %out.dbg.spill, metadata !6513, metadata !DIExpression()), !dbg !6532
; call core::str::converts::from_utf8_unchecked
  %31 = call { [0 x i8]*, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h9f5110cfd4f03ad3E([0 x i8]* align 1 %out.0, i64 %out.1), !dbg !6533
  %_18.0 = extractvalue { [0 x i8]*, i64 } %31, 0, !dbg !6533
  %_18.1 = extractvalue { [0 x i8]*, i64 } %31, 1, !dbg !6533
  br label %bb11, !dbg !6533

bb8:                                              ; preds = %bb4
  %32 = bitcast %"alloc::borrow::Cow<[u8]>"* %_4 to %"alloc::borrow::Cow<[u8]>::Owned"*, !dbg !6534
  %33 = getelementptr inbounds %"alloc::borrow::Cow<[u8]>::Owned", %"alloc::borrow::Cow<[u8]>::Owned"* %32, i32 0, i32 1, !dbg !6534
  %34 = bitcast %"alloc::vec::Vec<u8>"* %out to i8*, !dbg !6534
  %35 = bitcast %"alloc::vec::Vec<u8>"* %33 to i8*, !dbg !6534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false), !dbg !6534
  %36 = bitcast %"alloc::vec::Vec<u8>"* %_22 to i8*, !dbg !6535
  %37 = bitcast %"alloc::vec::Vec<u8>"* %out to i8*, !dbg !6535
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false), !dbg !6535
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h3c17280b4df2ae37E(%"alloc::string::String"* sret(%"alloc::string::String") %_21, %"alloc::vec::Vec<u8>"* %_22), !dbg !6536
  br label %bb12, !dbg !6536

bb12:                                             ; preds = %bb8
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17he05d00e77084f0ffE"(%"alloc::borrow::Cow<str>"* sret(%"alloc::borrow::Cow<str>") %_3, %"alloc::string::String"* %_21), !dbg !6537
  br label %bb13, !dbg !6537

bb13:                                             ; preds = %bb11, %bb12
  %38 = bitcast %"core::result::Result<alloc::borrow::Cow<str>, QuoteError>"* %0 to %"core::result::Result<alloc::borrow::Cow<str>, QuoteError>::Ok"*, !dbg !6538
  %39 = bitcast %"core::result::Result<alloc::borrow::Cow<str>, QuoteError>::Ok"* %38 to %"alloc::borrow::Cow<str>"*, !dbg !6538
  %40 = bitcast %"alloc::borrow::Cow<str>"* %39 to i8*, !dbg !6538
  %41 = bitcast %"alloc::borrow::Cow<str>"* %_3 to i8*, !dbg !6538
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 32, i1 false), !dbg !6538
  br label %bb14, !dbg !6530

bb11:                                             ; preds = %bb10
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h70efd7bf57560094E"(%"alloc::borrow::Cow<str>"* sret(%"alloc::borrow::Cow<str>") %_3, [0 x i8]* align 1 %_18.0, i64 %_18.1), !dbg !6539
  br label %bb13, !dbg !6539
}

; <shlex::Quoter as core::convert::From<shlex::bytes::Quoter>>::from
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN81_$LT$shlex..Quoter$u20$as$u20$core..convert..From$LT$shlex..bytes..Quoter$GT$$GT$4from17hf153c8106a93afa8E"(i1 zeroext %inner) unnamed_addr #1 !dbg !6540 {
start:
  %inner.dbg.spill = alloca i8, align 1
  %0 = alloca i8, align 1
  %1 = zext i1 %inner to i8
  store i8 %1, i8* %inner.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %inner.dbg.spill, metadata !6545, metadata !DIExpression()), !dbg !6546
  %2 = zext i1 %inner to i8, !dbg !6547
  store i8 %2, i8* %0, align 1, !dbg !6547
  %3 = load i8, i8* %0, align 1, !dbg !6548, !range !394, !noundef !19
  %4 = trunc i8 %3 to i1, !dbg !6548
  ret i1 %4, !dbg !6548
}

; shlex::<impl core::convert::From<shlex::Quoter> for shlex::bytes::Quoter>::from
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5shlex91_$LT$impl$u20$core..convert..From$LT$shlex..Quoter$GT$$u20$for$u20$shlex..bytes..Quoter$GT$4from17hc2a3c465954bfb54E"(i1 zeroext %quoter) unnamed_addr #1 !dbg !6549 {
start:
  %quoter.dbg.spill = alloca i8, align 1
  %0 = zext i1 %quoter to i8
  store i8 %0, i8* %quoter.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %quoter.dbg.spill, metadata !6554, metadata !DIExpression()), !dbg !6555
  ret i1 %quoter, !dbg !6556
}

; shlex::quote
; Function Attrs: nonlazybind uwtable
define void @_ZN5shlex5quote17hb75e8f7ea673c007E(%"alloc::borrow::Cow<str>"* sret(%"alloc::borrow::Cow<str>") %0, [0 x i8]* align 1 %in_str.0, i64 %in_str.1) unnamed_addr #1 !dbg !6557 {
start:
  %in_str.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca i8, align 1
  %_2 = alloca %"core::result::Result<alloc::borrow::Cow<str>, QuoteError>", align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_str.dbg.spill, i32 0, i32 0
  store [0 x i8]* %in_str.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_str.dbg.spill, i32 0, i32 1
  store i64 %in_str.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %in_str.dbg.spill, metadata !6559, metadata !DIExpression()), !dbg !6560
; call shlex::Quoter::new
  %_5 = call zeroext i1 @_ZN5shlex6Quoter3new17hbc9cb6723d45ade4E(), !dbg !6561
  br label %bb1, !dbg !6561

bb1:                                              ; preds = %start
; call shlex::Quoter::allow_nul
  %3 = call zeroext i1 @_ZN5shlex6Quoter9allow_nul17hf52ef9696cc698aeE(i1 zeroext %_5, i1 zeroext true), !dbg !6561
  %4 = zext i1 %3 to i8, !dbg !6561
  store i8 %4, i8* %_4, align 1, !dbg !6561
  br label %bb2, !dbg !6561

bb2:                                              ; preds = %bb1
; call shlex::Quoter::quote
  call void @_ZN5shlex6Quoter5quote17h3d843418da935af5E(%"core::result::Result<alloc::borrow::Cow<str>, QuoteError>"* sret(%"core::result::Result<alloc::borrow::Cow<str>, QuoteError>") %_2, i8* align 1 %_4, [0 x i8]* align 1 %in_str.0, i64 %in_str.1), !dbg !6561
  br label %bb3, !dbg !6561

bb3:                                              ; preds = %bb2
; call core::result::Result<T,E>::unwrap
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h52fdcc2fb596ca3cE"(%"alloc::borrow::Cow<str>"* sret(%"alloc::borrow::Cow<str>") %0, %"core::result::Result<alloc::borrow::Cow<str>, QuoteError>"* %_2, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc377 to %"core::panic::location::Location"*)), !dbg !6561
  br label %bb4, !dbg !6561

bb4:                                              ; preds = %bb3
  ret void, !dbg !6562
}

; shlex::try_quote
; Function Attrs: nonlazybind uwtable
define void @_ZN5shlex9try_quote17h27c7dbe72f16afa6E(%"core::result::Result<alloc::borrow::Cow<str>, QuoteError>"* sret(%"core::result::Result<alloc::borrow::Cow<str>, QuoteError>") %0, [0 x i8]* align 1 %in_str.0, i64 %in_str.1) unnamed_addr #1 !dbg !6563 {
start:
  %in_str.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_3 = alloca i8, align 1
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_str.dbg.spill, i32 0, i32 0
  store [0 x i8]* %in_str.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %in_str.dbg.spill, i32 0, i32 1
  store i64 %in_str.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %in_str.dbg.spill, metadata !6567, metadata !DIExpression()), !dbg !6568
; call shlex::Quoter::new
  %3 = call zeroext i1 @_ZN5shlex6Quoter3new17hbc9cb6723d45ade4E(), !dbg !6569
  %4 = zext i1 %3 to i8, !dbg !6569
  store i8 %4, i8* %_3, align 1, !dbg !6569
  br label %bb1, !dbg !6569

bb1:                                              ; preds = %start
; call shlex::Quoter::quote
  call void @_ZN5shlex6Quoter5quote17h3d843418da935af5E(%"core::result::Result<alloc::borrow::Cow<str>, QuoteError>"* sret(%"core::result::Result<alloc::borrow::Cow<str>, QuoteError>") %0, i8* align 1 %_3, [0 x i8]* align 1 %in_str.0, i64 %in_str.1), !dbg !6569
  br label %bb2, !dbg !6569

bb2:                                              ; preds = %bb1
  ret void, !dbg !6570
}

; <shlex::bytes::Quoter as core::default::Default>::default
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN63_$LT$shlex..bytes..Quoter$u20$as$u20$core..default..Default$GT$7default17h2a83d232dbe3a039E"() unnamed_addr #0 !dbg !6571 {
start:
  %0 = alloca i8, align 1
; call <bool as core::default::Default>::default
  %_1 = call zeroext i1 @"_ZN47_$LT$bool$u20$as$u20$core..default..Default$GT$7default17h8e6c38a7341174e1E"(), !dbg !6573
  br label %bb1, !dbg !6573

bb1:                                              ; preds = %start
  %1 = zext i1 %_1 to i8, !dbg !6574
  store i8 %1, i8* %0, align 1, !dbg !6574
  %2 = load i8, i8* %0, align 1, !dbg !6575, !range !394, !noundef !19
  %3 = trunc i8 %2 to i1, !dbg !6575
  ret i1 %3, !dbg !6575
}

; <shlex::bytes::Quoter as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN57_$LT$shlex..bytes..Quoter$u20$as$u20$core..fmt..Debug$GT$3fmt17h6f5ef6df0f0025f4E"(i8* align 1 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !6576 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %_11 = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !6581, metadata !DIExpression()), !dbg !6583
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !6582, metadata !DIExpression()), !dbg !6583
  store i8* %self, i8** %_11, align 8, !dbg !6584
  %_8.0 = bitcast i8** %_11 to {}*, !dbg !6584
; call core::fmt::Formatter::debug_struct_field1_finish
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field1_finish17h5ab08f78e2743177E(%"core::fmt::Formatter"* align 8 %f, [0 x i8]* align 1 bitcast (<{ [6 x i8] }>* @alloc384 to [0 x i8]*), i64 6, [0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @alloc379 to [0 x i8]*), i64 9, {}* align 1 %_8.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.3 to [3 x i64]*)), !dbg !6583
  br label %bb1, !dbg !6583

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !6585
}

; <shlex::bytes::QuotingStrategy as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN70_$LT$shlex..bytes..QuotingStrategy$u20$as$u20$core..cmp..PartialEq$GT$2eq17h8b7eb91020b6de4fE"(i8* align 1 %self, i8* align 1 %other) unnamed_addr #0 !dbg !6586 {
start:
  %__arg1_tag.dbg.spill = alloca i64, align 8
  %__self_tag.dbg.spill = alloca i64, align 8
  %other.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !6592, metadata !DIExpression()), !dbg !6598
  store i8* %other, i8** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !6593, metadata !DIExpression()), !dbg !6598
  %0 = load i8, i8* %self, align 1, !dbg !6598, !range !6212, !noundef !19
  %__self_tag = zext i8 %0 to i64, !dbg !6598
  store i64 %__self_tag, i64* %__self_tag.dbg.spill, align 8, !dbg !6598
  call void @llvm.dbg.declare(metadata i64* %__self_tag.dbg.spill, metadata !6594, metadata !DIExpression()), !dbg !6599
  %1 = load i8, i8* %other, align 1, !dbg !6599, !range !6212, !noundef !19
  %__arg1_tag = zext i8 %1 to i64, !dbg !6599
  store i64 %__arg1_tag, i64* %__arg1_tag.dbg.spill, align 8, !dbg !6599
  call void @llvm.dbg.declare(metadata i64* %__arg1_tag.dbg.spill, metadata !6596, metadata !DIExpression()), !dbg !6600
  %2 = icmp eq i64 %__self_tag, %__arg1_tag, !dbg !6600
  ret i1 %2, !dbg !6601
}

; <shlex::QuoteError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN54_$LT$shlex..QuoteError$u20$as$u20$core..fmt..Debug$GT$3fmt17h8843ef8720553fd3E"(%"QuoteError::Nul"* align 1 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !6602 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"QuoteError::Nul"*, align 8
  store %"QuoteError::Nul"* %self, %"QuoteError::Nul"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"QuoteError::Nul"** %self.dbg.spill, metadata !6605, metadata !DIExpression()), !dbg !6607
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !6606, metadata !DIExpression()), !dbg !6607
; call core::fmt::Formatter::write_str
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17hd86e8e148609ddcbE(%"core::fmt::Formatter"* align 8 %f, [0 x i8]* align 1 bitcast (<{ [3 x i8] }>* @alloc383 to [0 x i8]*), i64 3), !dbg !6607
  br label %bb1, !dbg !6607

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !6608
}

; <shlex::Quoter as core::default::Default>::default
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN56_$LT$shlex..Quoter$u20$as$u20$core..default..Default$GT$7default17hac2f4ca3deae22ffE"() unnamed_addr #0 !dbg !6609 {
start:
  %0 = alloca i8, align 1
; call <shlex::bytes::Quoter as core::default::Default>::default
  %_1 = call zeroext i1 @"_ZN63_$LT$shlex..bytes..Quoter$u20$as$u20$core..default..Default$GT$7default17h2a83d232dbe3a039E"(), !dbg !6611
  br label %bb1, !dbg !6611

bb1:                                              ; preds = %start
  %1 = zext i1 %_1 to i8, !dbg !6612
  store i8 %1, i8* %0, align 1, !dbg !6612
  %2 = load i8, i8* %0, align 1, !dbg !6613, !range !394, !noundef !19
  %3 = trunc i8 %2 to i1, !dbg !6613
  ret i1 %3, !dbg !6613
}

; <shlex::Quoter as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$shlex..Quoter$u20$as$u20$core..fmt..Debug$GT$3fmt17h9b3ad2121ba6c26cE"(i8* align 1 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !6614 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %_11 = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !6619, metadata !DIExpression()), !dbg !6621
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !6620, metadata !DIExpression()), !dbg !6621
  store i8* %self, i8** %_11, align 8, !dbg !6622
  %_8.0 = bitcast i8** %_11 to {}*, !dbg !6622
; call core::fmt::Formatter::debug_struct_field1_finish
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field1_finish17h5ab08f78e2743177E(%"core::fmt::Formatter"* align 8 %f, [0 x i8]* align 1 bitcast (<{ [6 x i8] }>* @alloc384 to [0 x i8]*), i64 6, [0 x i8]* align 1 bitcast (<{ [5 x i8] }>* @alloc385 to [0 x i8]*), i64 5, {}* align 1 %_8.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.4 to [3 x i64]*)), !dbg !6621
  br label %bb1, !dbg !6621

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !6623
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #4

; Function Attrs: nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.uadd.sat.i64(i64, i64) #4

; core::panicking::panic_no_unwind
; Function Attrs: cold noinline noreturn nounwind nonlazybind uwtable
declare void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() unnamed_addr #6

; <bool as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN43_$LT$bool$u20$as$u20$core..fmt..Display$GT$3fmt17h2dce19af35182c57E"(i8* align 1, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #4

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1, i64, %"core::panic::location::Location"* align 8) unnamed_addr #8

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #9

; core::result::unwrap_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6result13unwrap_failed17hff48f82f03d418aeE([0 x i8]* align 1, i64, {}* align 1, [3 x i64]* align 8, %"core::panic::location::Location"* align 8) unnamed_addr #8

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #10

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc(i64, i64) unnamed_addr #10

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_realloc(i8*, i64, i64, i64) unnamed_addr #10

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #11

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64, i64) unnamed_addr #12

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() unnamed_addr #13

; Function Attrs: nounwind nonlazybind uwtable
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #10

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #8

; core::fmt::Formatter::write_str
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17hd86e8e148609ddcbE(%"core::fmt::Formatter"* align 8, [0 x i8]* align 1, i64) unnamed_addr #1

; core::fmt::Formatter::debug_struct_field1_finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field1_finish17h5ab08f78e2743177E(%"core::fmt::Formatter"* align 8, [0 x i8]* align 1, i64, [0 x i8]* align 1, i64, {}* align 1, [3 x i64]* align 8) unnamed_addr #1

attributes #0 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { noinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #3 = { cold nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #4 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #5 = { argmemonly nofree nounwind willreturn }
attributes #6 = { cold noinline noreturn nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #7 = { nofree nosync nounwind readnone willreturn }
attributes #8 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #9 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #10 = { nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #11 = { argmemonly nofree nounwind willreturn writeonly }
attributes #12 = { cold noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #13 = { noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #14 = { noinline }
attributes #15 = { noinline noreturn nounwind }
attributes #16 = { noreturn }
attributes #17 = { nounwind }

!llvm.module.flags = !{!43, !44, !45, !46}
!llvm.dbg.cu = !{!47}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<shlex::QuoteError as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<shlex::QuoteError as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !12, templateParams: !19, identifier: "52d268afd4241fec4c366f25d6437c36")
!4 = !{!5, !8, !10, !11}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!12 = !DICompositeType(tag: DW_TAG_structure_type, name: "QuoteError", scope: !13, file: !2, align: 8, elements: !14, templateParams: !19, identifier: "1bb80a8e1368654cdb34e66d4a5b1749")
!13 = !DINamespace(name: "shlex", scope: null)
!14 = !{!15}
!15 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12, file: !2, align: 8, elements: !16, templateParams: !19, identifier: "c4522ed3eb3be213e38c44a348fb255d")
!16 = !{!17}
!17 = !DIDerivedType(tag: DW_TAG_member, name: "Nul", scope: !15, file: !2, baseType: !18, align: 8)
!18 = !DICompositeType(tag: DW_TAG_structure_type, name: "Nul", scope: !12, file: !2, align: 8, elements: !19, identifier: "e95b15ccb5eae149a4c010fe8b018fbb")
!19 = !{}
!20 = !DIGlobalVariableExpression(var: !21, expr: !DIExpression())
!21 = distinct !DIGlobalVariable(name: "<&bool as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !22, isLocal: true, isDefinition: true)
!22 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&bool as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !23, vtableHolder: !28, templateParams: !19, identifier: "c292ae440f57580f46ad908312cda78")
!23 = !{!24, !25, !26, !27}
!24 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !22, file: !2, baseType: !6, size: 64, align: 64)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !22, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !22, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !22, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!28 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bool", baseType: !29, size: 64, align: 64, dwarfAddressSpace: 0)
!29 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!30 = !DIGlobalVariableExpression(var: !31, expr: !DIExpression())
!31 = distinct !DIGlobalVariable(name: "<&shlex::bytes::Quoter as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !32, isLocal: true, isDefinition: true)
!32 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&shlex::bytes::Quoter as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !33, vtableHolder: !38, templateParams: !19, identifier: "52a9928546e30c48969fb45d5aecd485")
!33 = !{!34, !35, !36, !37}
!34 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !32, file: !2, baseType: !6, size: 64, align: 64)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !32, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !32, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !32, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!38 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&shlex::bytes::Quoter", baseType: !39, size: 64, align: 64, dwarfAddressSpace: 0)
!39 = !DICompositeType(tag: DW_TAG_structure_type, name: "Quoter", scope: !40, file: !2, size: 8, align: 8, elements: !41, templateParams: !19, identifier: "2cc001c91cf9ec9d9145aa762ee9a44b")
!40 = !DINamespace(name: "bytes", scope: !13)
!41 = !{!42}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "allow_nul", scope: !39, file: !2, baseType: !29, size: 8, align: 8)
!43 = !{i32 7, !"PIC Level", i32 2}
!44 = !{i32 2, !"RtLibUseGOT", i32 1}
!45 = !{i32 2, !"Dwarf Version", i32 4}
!46 = !{i32 2, !"Debug Info Version", i32 3}
!47 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !48, producer: "clang LLVM (rustc version 1.65.0-nightly (d394408fb 2022-08-07))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !49, globals: !154)
!48 = !DIFile(filename: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0/src/lib.rs/@/shlex.7a89fbe6-cgu.0", directory: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0")
!49 = !{!50, !120, !130, !137, !143, !149}
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ValidAlignEnum64", scope: !51, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagEnumClass, elements: !55)
!51 = !DINamespace(name: "valid_align", scope: !52)
!52 = !DINamespace(name: "mem", scope: !53)
!53 = !DINamespace(name: "core", scope: null)
!54 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!55 = !{!56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119}
!56 = !DIEnumerator(name: "_Align1Shl0", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "_Align1Shl1", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "_Align1Shl2", value: 4, isUnsigned: true)
!59 = !DIEnumerator(name: "_Align1Shl3", value: 8, isUnsigned: true)
!60 = !DIEnumerator(name: "_Align1Shl4", value: 16, isUnsigned: true)
!61 = !DIEnumerator(name: "_Align1Shl5", value: 32, isUnsigned: true)
!62 = !DIEnumerator(name: "_Align1Shl6", value: 64, isUnsigned: true)
!63 = !DIEnumerator(name: "_Align1Shl7", value: 128, isUnsigned: true)
!64 = !DIEnumerator(name: "_Align1Shl8", value: 256, isUnsigned: true)
!65 = !DIEnumerator(name: "_Align1Shl9", value: 512, isUnsigned: true)
!66 = !DIEnumerator(name: "_Align1Shl10", value: 1024, isUnsigned: true)
!67 = !DIEnumerator(name: "_Align1Shl11", value: 2048, isUnsigned: true)
!68 = !DIEnumerator(name: "_Align1Shl12", value: 4096, isUnsigned: true)
!69 = !DIEnumerator(name: "_Align1Shl13", value: 8192, isUnsigned: true)
!70 = !DIEnumerator(name: "_Align1Shl14", value: 16384, isUnsigned: true)
!71 = !DIEnumerator(name: "_Align1Shl15", value: 32768, isUnsigned: true)
!72 = !DIEnumerator(name: "_Align1Shl16", value: 65536, isUnsigned: true)
!73 = !DIEnumerator(name: "_Align1Shl17", value: 131072, isUnsigned: true)
!74 = !DIEnumerator(name: "_Align1Shl18", value: 262144, isUnsigned: true)
!75 = !DIEnumerator(name: "_Align1Shl19", value: 524288, isUnsigned: true)
!76 = !DIEnumerator(name: "_Align1Shl20", value: 1048576, isUnsigned: true)
!77 = !DIEnumerator(name: "_Align1Shl21", value: 2097152, isUnsigned: true)
!78 = !DIEnumerator(name: "_Align1Shl22", value: 4194304, isUnsigned: true)
!79 = !DIEnumerator(name: "_Align1Shl23", value: 8388608, isUnsigned: true)
!80 = !DIEnumerator(name: "_Align1Shl24", value: 16777216, isUnsigned: true)
!81 = !DIEnumerator(name: "_Align1Shl25", value: 33554432, isUnsigned: true)
!82 = !DIEnumerator(name: "_Align1Shl26", value: 67108864, isUnsigned: true)
!83 = !DIEnumerator(name: "_Align1Shl27", value: 134217728, isUnsigned: true)
!84 = !DIEnumerator(name: "_Align1Shl28", value: 268435456, isUnsigned: true)
!85 = !DIEnumerator(name: "_Align1Shl29", value: 536870912, isUnsigned: true)
!86 = !DIEnumerator(name: "_Align1Shl30", value: 1073741824, isUnsigned: true)
!87 = !DIEnumerator(name: "_Align1Shl31", value: 2147483648, isUnsigned: true)
!88 = !DIEnumerator(name: "_Align1Shl32", value: 4294967296, isUnsigned: true)
!89 = !DIEnumerator(name: "_Align1Shl33", value: 8589934592, isUnsigned: true)
!90 = !DIEnumerator(name: "_Align1Shl34", value: 17179869184, isUnsigned: true)
!91 = !DIEnumerator(name: "_Align1Shl35", value: 34359738368, isUnsigned: true)
!92 = !DIEnumerator(name: "_Align1Shl36", value: 68719476736, isUnsigned: true)
!93 = !DIEnumerator(name: "_Align1Shl37", value: 137438953472, isUnsigned: true)
!94 = !DIEnumerator(name: "_Align1Shl38", value: 274877906944, isUnsigned: true)
!95 = !DIEnumerator(name: "_Align1Shl39", value: 549755813888, isUnsigned: true)
!96 = !DIEnumerator(name: "_Align1Shl40", value: 1099511627776, isUnsigned: true)
!97 = !DIEnumerator(name: "_Align1Shl41", value: 2199023255552, isUnsigned: true)
!98 = !DIEnumerator(name: "_Align1Shl42", value: 4398046511104, isUnsigned: true)
!99 = !DIEnumerator(name: "_Align1Shl43", value: 8796093022208, isUnsigned: true)
!100 = !DIEnumerator(name: "_Align1Shl44", value: 17592186044416, isUnsigned: true)
!101 = !DIEnumerator(name: "_Align1Shl45", value: 35184372088832, isUnsigned: true)
!102 = !DIEnumerator(name: "_Align1Shl46", value: 70368744177664, isUnsigned: true)
!103 = !DIEnumerator(name: "_Align1Shl47", value: 140737488355328, isUnsigned: true)
!104 = !DIEnumerator(name: "_Align1Shl48", value: 281474976710656, isUnsigned: true)
!105 = !DIEnumerator(name: "_Align1Shl49", value: 562949953421312, isUnsigned: true)
!106 = !DIEnumerator(name: "_Align1Shl50", value: 1125899906842624, isUnsigned: true)
!107 = !DIEnumerator(name: "_Align1Shl51", value: 2251799813685248, isUnsigned: true)
!108 = !DIEnumerator(name: "_Align1Shl52", value: 4503599627370496, isUnsigned: true)
!109 = !DIEnumerator(name: "_Align1Shl53", value: 9007199254740992, isUnsigned: true)
!110 = !DIEnumerator(name: "_Align1Shl54", value: 18014398509481984, isUnsigned: true)
!111 = !DIEnumerator(name: "_Align1Shl55", value: 36028797018963968, isUnsigned: true)
!112 = !DIEnumerator(name: "_Align1Shl56", value: 72057594037927936, isUnsigned: true)
!113 = !DIEnumerator(name: "_Align1Shl57", value: 144115188075855872, isUnsigned: true)
!114 = !DIEnumerator(name: "_Align1Shl58", value: 288230376151711744, isUnsigned: true)
!115 = !DIEnumerator(name: "_Align1Shl59", value: 576460752303423488, isUnsigned: true)
!116 = !DIEnumerator(name: "_Align1Shl60", value: 1152921504606846976, isUnsigned: true)
!117 = !DIEnumerator(name: "_Align1Shl61", value: 2305843009213693952, isUnsigned: true)
!118 = !DIEnumerator(name: "_Align1Shl62", value: 4611686018427387904, isUnsigned: true)
!119 = !DIEnumerator(name: "_Align1Shl63", value: 9223372036854775808, isUnsigned: true)
!120 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !121, file: !2, baseType: !124, size: 8, align: 8, flags: DIFlagEnumClass, elements: !125)
!121 = !DINamespace(name: "v1", scope: !122)
!122 = !DINamespace(name: "rt", scope: !123)
!123 = !DINamespace(name: "fmt", scope: !53)
!124 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!125 = !{!126, !127, !128, !129}
!126 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!128 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!129 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!130 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !131, file: !2, baseType: !132, size: 8, align: 8, flags: DIFlagEnumClass, elements: !133)
!131 = !DINamespace(name: "cmp", scope: !53)
!132 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!133 = !{!134, !135, !136}
!134 = !DIEnumerator(name: "Less", value: 255)
!135 = !DIEnumerator(name: "Equal", value: 0)
!136 = !DIEnumerator(name: "Greater", value: 1)
!137 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !138, file: !2, baseType: !124, size: 8, align: 8, flags: DIFlagEnumClass, elements: !139)
!138 = !DINamespace(name: "panicking", scope: !53)
!139 = !{!140, !141, !142}
!140 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!141 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!142 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!143 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AllocInit", scope: !144, file: !2, baseType: !124, size: 8, align: 8, flags: DIFlagEnumClass, elements: !146)
!144 = !DINamespace(name: "raw_vec", scope: !145)
!145 = !DINamespace(name: "alloc", scope: null)
!146 = !{!147, !148}
!147 = !DIEnumerator(name: "Uninitialized", value: 0, isUnsigned: true)
!148 = !DIEnumerator(name: "Zeroed", value: 1, isUnsigned: true)
!149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "QuotingStrategy", scope: !40, file: !2, baseType: !124, size: 8, align: 8, flags: DIFlagEnumClass, elements: !150)
!150 = !{!151, !152, !153}
!151 = !DIEnumerator(name: "Unquoted", value: 0, isUnsigned: true)
!152 = !DIEnumerator(name: "SingleQuoted", value: 1, isUnsigned: true)
!153 = !DIEnumerator(name: "DoubleQuoted", value: 2, isUnsigned: true)
!154 = !{!0, !20, !30}
!155 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h5a19eb2355e32f18E", scope: !157, file: !156, line: 278, type: !160, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !175)
!156 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "22a04328eca3d78fd2bf5357f9150928")
!157 = !DINamespace(name: "{impl#3}", scope: !158)
!158 = !DINamespace(name: "index", scope: !159)
!159 = !DINamespace(name: "slice", scope: !53)
!160 = !DISubroutineType(types: !161)
!161 = !{!162, !167, !162}
!162 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !2, size: 128, align: 64, elements: !163, templateParams: !19, identifier: "7b54d414f2f329e57c9aa3e4ca07f4")
!163 = !{!164, !166}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !162, file: !2, baseType: !165, size: 64, align: 64)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64, align: 64, dwarfAddressSpace: 0)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !162, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!167 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !168, file: !2, size: 128, align: 64, elements: !170, templateParams: !173, identifier: "855eb37746b15049ea4556b174e97dd7")
!168 = !DINamespace(name: "range", scope: !169)
!169 = !DINamespace(name: "ops", scope: !53)
!170 = !{!171, !172}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !167, file: !2, baseType: !9, size: 64, align: 64)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !167, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!173 = !{!174}
!174 = !DITemplateTypeParameter(name: "Idx", type: !9)
!175 = !{!176, !177, !178}
!176 = !DILocalVariable(name: "self", arg: 1, scope: !155, file: !156, line: 278, type: !167)
!177 = !DILocalVariable(name: "slice", arg: 2, scope: !155, file: !156, line: 278, type: !162)
!178 = !DILocalVariable(name: "runtime", scope: !179, file: !156, line: 285, type: !182, align: 8)
!179 = !DILexicalBlockFile(scope: !180, file: !156, discriminator: 0)
!180 = distinct !DILexicalBlock(scope: !155, file: !181, line: 2336, column: 13)
!181 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "f96ba730d7cf23ae45fdc72e7caf5f1b")
!182 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !183, file: !2, size: 192, align: 64, elements: !184, templateParams: !19, identifier: "3899877b232b8d576af2a125fa395e55")
!183 = !DINamespace(name: "get_unchecked", scope: !157)
!184 = !{!185, !187, !188}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__start", scope: !182, file: !2, baseType: !186, size: 64, align: 64)
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__end", scope: !182, file: !2, baseType: !186, size: 64, align: 64, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !182, file: !2, baseType: !189, size: 64, align: 64, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const [u8]", baseType: !162, size: 64, align: 64, dwarfAddressSpace: 0)
!190 = !{!191}
!191 = !DITemplateTypeParameter(name: "T", type: !124)
!192 = !DILocation(line: 278, column: 29, scope: !155)
!193 = !DILocation(line: 278, column: 35, scope: !155)
!194 = !DILocation(line: 285, column: 13, scope: !179)
!195 = !DILocation(line: 286, column: 39, scope: !155)
!196 = !DILocalVariable(name: "self", scope: !197, file: !156, line: 286, type: !162, align: 8)
!197 = !DILexicalBlockFile(scope: !198, file: !156, discriminator: 0)
!198 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hf95991668037ba9aE", scope: !200, file: !199, line: 1385, type: !203, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !206)
!199 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "1874e43cb83f8af3048974827047cb9c")
!200 = !DINamespace(name: "{impl#1}", scope: !201)
!201 = !DINamespace(name: "const_ptr", scope: !202)
!202 = !DINamespace(name: "ptr", scope: !53)
!203 = !DISubroutineType(types: !204)
!204 = !{!205, !162}
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !124, size: 64, align: 64, dwarfAddressSpace: 0)
!206 = !{!196}
!207 = !DILocation(line: 286, column: 39, scope: !197, inlinedAt: !195)
!208 = !DILocalVariable(name: "self", scope: !209, file: !156, line: 286, type: !205, align: 8)
!209 = !DILexicalBlockFile(scope: !210, file: !156, discriminator: 0)
!210 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h87c4685356d97309E", scope: !211, file: !199, line: 871, type: !212, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !214)
!211 = !DINamespace(name: "{impl#0}", scope: !201)
!212 = !DISubroutineType(types: !213)
!213 = !{!205, !205, !9}
!214 = !{!208, !215}
!215 = !DILocalVariable(name: "count", scope: !209, file: !156, line: 286, type: !9, align: 8)
!216 = !DILocation(line: 286, column: 39, scope: !209, inlinedAt: !195)
!217 = !DILocation(line: 286, column: 58, scope: !155)
!218 = !DILocalVariable(name: "self", scope: !219, file: !156, line: 286, type: !205, align: 8)
!219 = !DILexicalBlockFile(scope: !220, file: !156, discriminator: 0)
!220 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hb3715e24a1729836E", scope: !211, file: !199, line: 453, type: !221, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !224)
!221 = !DISubroutineType(types: !222)
!222 = !{!205, !205, !223}
!223 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!224 = !{!218, !225}
!225 = !DILocalVariable(name: "count", scope: !219, file: !156, line: 286, type: !223, align: 8)
!226 = !DILocation(line: 286, column: 39, scope: !219, inlinedAt: !227)
!227 = !DILocation(line: 876, column: 18, scope: !210, inlinedAt: !195)
!228 = !DILocalVariable(name: "data", scope: !229, file: !156, line: 286, type: !205, align: 8)
!229 = !DILexicalBlockFile(scope: !230, file: !156, discriminator: 0)
!230 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h7373ca004d48ab52E", scope: !202, file: !231, line: 695, type: !232, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !234)
!231 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "13c32d970b0b4dd38131a1908223a155")
!232 = !DISubroutineType(types: !233)
!233 = !{!162, !205, !9}
!234 = !{!228, !235}
!235 = !DILocalVariable(name: "len", scope: !229, file: !156, line: 286, type: !9, align: 8)
!236 = !DILocation(line: 286, column: 13, scope: !229, inlinedAt: !237)
!237 = !DILocation(line: 286, column: 13, scope: !155)
!238 = !DILocation(line: 286, column: 71, scope: !155)
!239 = !DILocalVariable(name: "self", scope: !240, file: !156, line: 286, type: !205, align: 8)
!240 = !DILexicalBlockFile(scope: !241, file: !156, discriminator: 0)
!241 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hd6b9d95b1a9f609dE", scope: !211, file: !199, line: 46, type: !242, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !245, retainedNodes: !244)
!242 = !DISubroutineType(types: !243)
!243 = !{!6, !205}
!244 = !{!239}
!245 = !{!191, !246}
!246 = !DITemplateTypeParameter(name: "U", type: !7)
!247 = !DILocation(line: 286, column: 13, scope: !240, inlinedAt: !248)
!248 = !DILocation(line: 696, column: 20, scope: !230, inlinedAt: !237)
!249 = !DILocalVariable(name: "data_address", scope: !250, file: !156, line: 286, type: !6, align: 8)
!250 = !DILexicalBlockFile(scope: !251, file: !156, discriminator: 0)
!251 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hd02f965c5715a8d2E", scope: !253, file: !252, line: 110, type: !254, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !256)
!252 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "59565ed3c34dee3e8f8928c29f8f7ce4")
!253 = !DINamespace(name: "metadata", scope: !202)
!254 = !DISubroutineType(types: !255)
!255 = !{!162, !6, !9}
!256 = !{!249, !257}
!257 = !DILocalVariable(name: "metadata", scope: !250, file: !156, line: 286, type: !9, align: 8)
!258 = !DILocation(line: 286, column: 13, scope: !250, inlinedAt: !259)
!259 = !DILocation(line: 696, column: 5, scope: !230, inlinedAt: !237)
!260 = !DILocation(line: 288, column: 6, scope: !155)
!261 = distinct !DISubprogram(name: "from_iter<alloc::string::String, &mut shlex::Shlex>", linkageName: "_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h05d8e94589beadbcE", scope: !263, file: !262, line: 20, type: !266, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !348, retainedNodes: !336)
!262 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/spec_from_iter_nested.rs", directory: "", checksumkind: CSK_MD5, checksum: "689418b9f3c3e5d8034fb053fb43f5aa")
!263 = !DINamespace(name: "{impl#0}", scope: !264)
!264 = !DINamespace(name: "spec_from_iter_nested", scope: !265)
!265 = !DINamespace(name: "vec", scope: !145)
!266 = !DISubroutineType(types: !267)
!267 = !{!268, !317}
!268 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<alloc::string::String, alloc::alloc::Global>", scope: !265, file: !2, size: 192, align: 64, elements: !269, templateParams: !315, identifier: "7164a4c87db2d5a73752b60683109ec")
!269 = !{!270, !316}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !268, file: !2, baseType: !271, size: 128, align: 64)
!271 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<alloc::string::String, alloc::alloc::Global>", scope: !144, file: !2, size: 128, align: 64, elements: !272, templateParams: !315, identifier: "1e514e066038f9581d47bcc9b37510")
!272 = !{!273, !313, !314}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !271, file: !2, baseType: !274, size: 64, align: 64)
!274 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<alloc::string::String>", scope: !275, file: !2, size: 64, align: 64, elements: !276, templateParams: !309, identifier: "20e496e09ac250aa99bce671572f43b4")
!275 = !DINamespace(name: "unique", scope: !202)
!276 = !{!277, !311}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !274, file: !2, baseType: !278, size: 64, align: 64)
!278 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::string::String>", scope: !279, file: !2, size: 64, align: 64, elements: !280, templateParams: !309, identifier: "2af0c02b0405533e84b314ca44c31286")
!279 = !DINamespace(name: "non_null", scope: !202)
!280 = !{!281}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !278, file: !2, baseType: !282, size: 64, align: 64)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::string::String", baseType: !283, size: 64, align: 64, dwarfAddressSpace: 0)
!283 = !DICompositeType(tag: DW_TAG_structure_type, name: "String", scope: !284, file: !2, size: 192, align: 64, elements: !285, templateParams: !19, identifier: "f9be69e76fc784402e5b8eb88fb718b5")
!284 = !DINamespace(name: "string", scope: !145)
!285 = !{!286}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !283, file: !2, baseType: !287, size: 192, align: 64)
!287 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<u8, alloc::alloc::Global>", scope: !265, file: !2, size: 192, align: 64, elements: !288, templateParams: !306, identifier: "f48a096c1ed19eb7ba15a7173429013")
!288 = !{!289, !308}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !287, file: !2, baseType: !290, size: 128, align: 64)
!290 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<u8, alloc::alloc::Global>", scope: !144, file: !2, size: 128, align: 64, elements: !291, templateParams: !306, identifier: "d09dab1a097018b9dd4dad6f3ce84c27")
!291 = !{!292, !302, !303}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !290, file: !2, baseType: !293, size: 64, align: 64)
!293 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<u8>", scope: !275, file: !2, size: 64, align: 64, elements: !294, templateParams: !190, identifier: "7e72c5db004520f6d0779c7d4ace2142")
!294 = !{!295, !299}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !293, file: !2, baseType: !296, size: 64, align: 64)
!296 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !279, file: !2, size: 64, align: 64, elements: !297, templateParams: !190, identifier: "3160283ea80cecf6149fff38a2e996de")
!297 = !{!298}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !296, file: !2, baseType: !205, size: 64, align: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !293, file: !2, baseType: !300, align: 8)
!300 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<u8>", scope: !301, file: !2, align: 8, elements: !19, templateParams: !190, identifier: "e338a8151f1037c76eadd10ab3c53972")
!301 = !DINamespace(name: "marker", scope: !53)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !290, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !290, file: !2, baseType: !304, align: 8)
!304 = !DICompositeType(tag: DW_TAG_structure_type, name: "Global", scope: !305, file: !2, align: 8, elements: !19, identifier: "3328ba4994ba07f4a4a3e83fae935932")
!305 = !DINamespace(name: "alloc", scope: !145)
!306 = !{!191, !307}
!307 = !DITemplateTypeParameter(name: "A", type: !304)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !287, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!309 = !{!310}
!310 = !DITemplateTypeParameter(name: "T", type: !283)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !274, file: !2, baseType: !312, align: 8)
!312 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<alloc::string::String>", scope: !301, file: !2, align: 8, elements: !19, templateParams: !309, identifier: "28d3b6f6eac74287ea808223b6a97110")
!313 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !271, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !271, file: !2, baseType: !304, align: 8)
!315 = !{!310, !307}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !268, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut shlex::Shlex", baseType: !318, size: 64, align: 64, dwarfAddressSpace: 0)
!318 = !DICompositeType(tag: DW_TAG_structure_type, name: "Shlex", scope: !13, file: !2, size: 256, align: 64, elements: !319, templateParams: !19, identifier: "55eaa4a6871a6ad99a03f1b2edd9b94d")
!319 = !{!320}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !318, file: !2, baseType: !321, size: 256, align: 64)
!321 = !DICompositeType(tag: DW_TAG_structure_type, name: "Shlex", scope: !40, file: !2, size: 256, align: 64, elements: !322, templateParams: !19, identifier: "4762212d3a2c8878d634a15907abd2df")
!322 = !{!323, !334, !335}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "in_iter", scope: !321, file: !2, baseType: !324, size: 128, align: 64)
!324 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<u8>", scope: !325, file: !2, size: 128, align: 64, elements: !326, templateParams: !190, identifier: "604c1441eac6ad793aa852936f7a8030")
!325 = !DINamespace(name: "iter", scope: !159)
!326 = !{!327, !328, !329}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !324, file: !2, baseType: !296, size: 64, align: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !324, file: !2, baseType: !205, size: 64, align: 64, offset: 64)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !324, file: !2, baseType: !330, align: 8)
!330 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&u8>", scope: !301, file: !2, align: 8, elements: !19, templateParams: !331, identifier: "4e2102ee614de7ec94ba265c486b9c89")
!331 = !{!332}
!332 = !DITemplateTypeParameter(name: "T", type: !333)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !124, size: 64, align: 64, dwarfAddressSpace: 0)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "line_no", scope: !321, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "had_error", scope: !321, file: !2, baseType: !29, size: 8, align: 8, offset: 192)
!336 = !{!337, !338, !340, !342, !344, !346}
!337 = !DILocalVariable(name: "iterator", arg: 1, scope: !261, file: !262, line: 20, type: !317)
!338 = !DILocalVariable(name: "vector", scope: !339, file: !262, line: 26, type: !268, align: 8)
!339 = distinct !DILexicalBlock(scope: !261, file: !262, line: 26, column: 9)
!340 = !DILocalVariable(name: "element", scope: !341, file: !262, line: 28, type: !283, align: 8)
!341 = distinct !DILexicalBlock(scope: !261, file: !262, line: 28, column: 13)
!342 = !DILocalVariable(name: "lower", scope: !343, file: !262, line: 29, type: !9, align: 8)
!343 = distinct !DILexicalBlock(scope: !341, file: !262, line: 29, column: 17)
!344 = !DILocalVariable(name: "initial_capacity", scope: !345, file: !262, line: 30, type: !9, align: 8)
!345 = distinct !DILexicalBlock(scope: !343, file: !262, line: 30, column: 17)
!346 = !DILocalVariable(name: "vector", scope: !347, file: !262, line: 32, type: !268, align: 8)
!347 = distinct !DILexicalBlock(scope: !345, file: !262, line: 32, column: 17)
!348 = !{!310, !349}
!349 = !DITemplateTypeParameter(name: "I", type: !317)
!350 = !DILocation(line: 20, column: 26, scope: !261)
!351 = !DILocation(line: 26, column: 13, scope: !339)
!352 = !DILocation(line: 28, column: 18, scope: !341)
!353 = !DILocation(line: 32, column: 21, scope: !347)
!354 = !DILocalVariable(name: "src", scope: !355, file: !262, line: 35, type: !283, align: 8)
!355 = !DILexicalBlockFile(scope: !356, file: !262, discriminator: 0)
!356 = distinct !DISubprogram(name: "write<alloc::string::String>", linkageName: "_ZN4core3ptr5write17h99555e1150ea1041E", scope: !202, file: !231, line: 1296, type: !357, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !360)
!357 = !DISubroutineType(types: !358)
!358 = !{null, !359, !283}
!359 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::string::String", baseType: !283, size: 64, align: 64, dwarfAddressSpace: 0)
!360 = !{!361, !354}
!361 = !DILocalVariable(name: "dst", scope: !355, file: !262, line: 35, type: !359, align: 8)
!362 = !DILocation(line: 35, column: 21, scope: !355, inlinedAt: !363)
!363 = !DILocation(line: 35, column: 21, scope: !347)
!364 = !DILocalVariable(name: "alloc", scope: !365, file: !262, line: 32, type: !304, align: 1)
!365 = !DILexicalBlockFile(scope: !366, file: !262, discriminator: 0)
!366 = distinct !DISubprogram(name: "with_capacity_in<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h5626a2ccbe0d52eeE", scope: !268, file: !367, line: 640, type: !368, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !370)
!367 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "ccced07f4d2284e276bdff9c5cb81e82")
!368 = !DISubroutineType(types: !369)
!369 = !{!268, !9, !304}
!370 = !{!371, !364}
!371 = !DILocalVariable(name: "capacity", scope: !365, file: !262, line: 32, type: !9, align: 8)
!372 = !DILocation(line: 32, column: 34, scope: !365, inlinedAt: !373)
!373 = !DILocation(line: 483, column: 9, scope: !374, inlinedAt: !380)
!374 = distinct !DISubprogram(name: "with_capacity<alloc::string::String>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h62815ddb97c39705E", scope: !268, file: !367, line: 482, type: !375, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !377)
!375 = !DISubroutineType(types: !376)
!376 = !{!268, !9}
!377 = !{!378}
!378 = !DILocalVariable(name: "capacity", scope: !379, file: !262, line: 32, type: !9, align: 8)
!379 = !DILexicalBlockFile(scope: !374, file: !262, discriminator: 0)
!380 = !DILocation(line: 32, column: 34, scope: !345)
!381 = !DILocalVariable(name: "alloc", scope: !382, file: !262, line: 32, type: !304, align: 1)
!382 = !DILexicalBlockFile(scope: !383, file: !262, discriminator: 0)
!383 = distinct !DISubprogram(name: "with_capacity_in<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17hed101de70160d9e1E", scope: !271, file: !384, line: 130, type: !385, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !387)
!384 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/raw_vec.rs", directory: "", checksumkind: CSK_MD5, checksum: "7882a816b01a8bc5234f4586c1b0290b")
!385 = !DISubroutineType(types: !386)
!386 = !{!271, !9, !304}
!387 = !{!388, !381}
!388 = !DILocalVariable(name: "capacity", scope: !382, file: !262, line: 32, type: !9, align: 8)
!389 = !DILocation(line: 32, column: 34, scope: !382, inlinedAt: !390)
!390 = !DILocation(line: 641, column: 20, scope: !366, inlinedAt: !373)
!391 = !DILocation(line: 26, column: 13, scope: !261)
!392 = !DILocation(line: 26, column: 32, scope: !261)
!393 = !DILocation(line: 45, column: 5, scope: !261)
!394 = !{i8 0, i8 2}
!395 = !DILocation(line: 26, column: 26, scope: !261)
!396 = !DILocation(line: 27, column: 28, scope: !397, inlinedAt: !401)
!397 = !DILexicalBlockFile(scope: !398, file: !262, discriminator: 0)
!398 = distinct !DISubprogram(name: "new<alloc::string::String>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17h5ac1aaa8a7b6d26dE", scope: !268, file: !367, line: 424, type: !399, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !19)
!399 = !DISubroutineType(types: !400)
!400 = !{!268}
!401 = !DILocation(line: 27, column: 28, scope: !261)
!402 = !DILocation(line: 28, column: 18, scope: !261)
!403 = !DILocation(line: 29, column: 34, scope: !341)
!404 = !DILocation(line: 39, column: 13, scope: !261)
!405 = !DILocation(line: 29, column: 22, scope: !341)
!406 = !DILocation(line: 29, column: 22, scope: !343)
!407 = !DILocation(line: 31, column: 61, scope: !343)
!408 = !DILocalVariable(name: "self", scope: !409, file: !262, line: 31, type: !9, align: 8)
!409 = !DILexicalBlockFile(scope: !410, file: !262, discriminator: 0)
!410 = distinct !DISubprogram(name: "saturating_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_add17haf0fb58f21d60319E", scope: !412, file: !411, line: 1048, type: !414, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !416)
!411 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "510cfe98475d713af9de72a29146058c")
!412 = !DINamespace(name: "{impl#11}", scope: !413)
!413 = !DINamespace(name: "num", scope: !53)
!414 = !DISubroutineType(types: !415)
!415 = !{!9, !9, !9}
!416 = !{!408, !417}
!417 = !DILocalVariable(name: "rhs", scope: !409, file: !262, line: 31, type: !9, align: 8)
!418 = !DILocation(line: 31, column: 61, scope: !409, inlinedAt: !407)
!419 = !DILocalVariable(name: "v2", scope: !420, file: !262, line: 31, type: !9, align: 8)
!420 = !DILexicalBlockFile(scope: !421, file: !262, discriminator: 0)
!421 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17hd61ef7cba9f6ff48E", scope: !131, file: !422, line: 1278, type: !414, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !425, retainedNodes: !423)
!422 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "381f61764ec5ac4111e955260ff27c96")
!423 = !{!424, !419}
!424 = !DILocalVariable(name: "v1", scope: !420, file: !262, line: 31, type: !9, align: 8)
!425 = !{!426}
!426 = !DITemplateTypeParameter(name: "T", type: !9)
!427 = !DILocation(line: 31, column: 21, scope: !420, inlinedAt: !428)
!428 = !DILocation(line: 31, column: 21, scope: !343)
!429 = !DILocation(line: 30, column: 21, scope: !345)
!430 = !DILocation(line: 32, column: 53, scope: !345)
!431 = !DILocation(line: 32, column: 34, scope: !379, inlinedAt: !380)
!432 = !DILocation(line: 35, column: 32, scope: !347)
!433 = !DILocation(line: 39, column: 13, scope: !345)
!434 = !DILocation(line: 35, column: 53, scope: !347)
!435 = !DILocation(line: 36, column: 21, scope: !347)
!436 = !DILocalVariable(name: "self", scope: !437, file: !262, line: 36, type: !441, align: 8)
!437 = !DILexicalBlockFile(scope: !438, file: !262, discriminator: 0)
!438 = distinct !DISubprogram(name: "set_len<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h4e41381969fa82b6E", scope: !268, file: !367, line: 1301, type: !439, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !442)
!439 = !DISubroutineType(types: !440)
!440 = !{null, !441, !9}
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<alloc::string::String, alloc::alloc::Global>", baseType: !268, size: 64, align: 64, dwarfAddressSpace: 0)
!442 = !{!436, !443}
!443 = !DILocalVariable(name: "new_len", scope: !437, file: !262, line: 36, type: !9, align: 8)
!444 = !DILocation(line: 36, column: 21, scope: !437, inlinedAt: !435)
!445 = !DILocation(line: 38, column: 17, scope: !347)
!446 = !DILocation(line: 43, column: 64, scope: !339)
!447 = !{i64 8}
!448 = !DILocation(line: 43, column: 9, scope: !339)
!449 = !DILocation(line: 20, column: 5, scope: !261)
!450 = !DILocation(line: 44, column: 9, scope: !339)
!451 = !DILocation(line: 45, column: 6, scope: !261)
!452 = distinct !DISubprogram(name: "from_iter<alloc::vec::Vec<u8, alloc::alloc::Global>, &mut shlex::bytes::Shlex>", linkageName: "_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17hf80895153a7e894bE", scope: !263, file: !262, line: 20, type: !453, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !489, retainedNodes: !477)
!453 = !DISubroutineType(types: !454)
!454 = !{!455, !476}
!455 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", scope: !265, file: !2, size: 192, align: 64, elements: !456, templateParams: !474, identifier: "b31461026a26ea75cb6f5ed18efaed5a")
!456 = !{!457, !475}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !455, file: !2, baseType: !458, size: 128, align: 64)
!458 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", scope: !144, file: !2, size: 128, align: 64, elements: !459, templateParams: !474, identifier: "570e9b05071899f7d2735e8cf3f7dd97")
!459 = !{!460, !472, !473}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !458, file: !2, baseType: !461, size: 64, align: 64)
!461 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<alloc::vec::Vec<u8, alloc::alloc::Global>>", scope: !275, file: !2, size: 64, align: 64, elements: !462, templateParams: !468, identifier: "7f6656b2777f18ea1ea5ebe28971e2c6")
!462 = !{!463, !470}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !461, file: !2, baseType: !464, size: 64, align: 64)
!464 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::vec::Vec<u8, alloc::alloc::Global>>", scope: !279, file: !2, size: 64, align: 64, elements: !465, templateParams: !468, identifier: "e35ddf322d97c7d5c67ada9c34438221")
!465 = !{!466}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !464, file: !2, baseType: !467, size: 64, align: 64)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !287, size: 64, align: 64, dwarfAddressSpace: 0)
!468 = !{!469}
!469 = !DITemplateTypeParameter(name: "T", type: !287)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !461, file: !2, baseType: !471, align: 8)
!471 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<alloc::vec::Vec<u8, alloc::alloc::Global>>", scope: !301, file: !2, align: 8, elements: !19, templateParams: !468, identifier: "5d31c1dddecf3905428dc42fe037dafc")
!472 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !458, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !458, file: !2, baseType: !304, align: 8)
!474 = !{!469, !307}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !455, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut shlex::bytes::Shlex", baseType: !321, size: 64, align: 64, dwarfAddressSpace: 0)
!477 = !{!478, !479, !481, !483, !485, !487}
!478 = !DILocalVariable(name: "iterator", arg: 1, scope: !452, file: !262, line: 20, type: !476)
!479 = !DILocalVariable(name: "vector", scope: !480, file: !262, line: 26, type: !455, align: 8)
!480 = distinct !DILexicalBlock(scope: !452, file: !262, line: 26, column: 9)
!481 = !DILocalVariable(name: "element", scope: !482, file: !262, line: 28, type: !287, align: 8)
!482 = distinct !DILexicalBlock(scope: !452, file: !262, line: 28, column: 13)
!483 = !DILocalVariable(name: "lower", scope: !484, file: !262, line: 29, type: !9, align: 8)
!484 = distinct !DILexicalBlock(scope: !482, file: !262, line: 29, column: 17)
!485 = !DILocalVariable(name: "initial_capacity", scope: !486, file: !262, line: 30, type: !9, align: 8)
!486 = distinct !DILexicalBlock(scope: !484, file: !262, line: 30, column: 17)
!487 = !DILocalVariable(name: "vector", scope: !488, file: !262, line: 32, type: !455, align: 8)
!488 = distinct !DILexicalBlock(scope: !486, file: !262, line: 32, column: 17)
!489 = !{!469, !490}
!490 = !DITemplateTypeParameter(name: "I", type: !476)
!491 = !DILocation(line: 20, column: 26, scope: !452)
!492 = !DILocation(line: 26, column: 13, scope: !480)
!493 = !DILocation(line: 28, column: 18, scope: !482)
!494 = !DILocation(line: 32, column: 21, scope: !488)
!495 = !DILocalVariable(name: "src", scope: !496, file: !262, line: 35, type: !287, align: 8)
!496 = !DILexicalBlockFile(scope: !497, file: !262, discriminator: 0)
!497 = distinct !DISubprogram(name: "write<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr5write17ha68d31d17dda85f7E", scope: !202, file: !231, line: 1296, type: !498, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !501)
!498 = !DISubroutineType(types: !499)
!499 = !{null, !500, !287}
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !287, size: 64, align: 64, dwarfAddressSpace: 0)
!501 = !{!502, !495}
!502 = !DILocalVariable(name: "dst", scope: !496, file: !262, line: 35, type: !500, align: 8)
!503 = !DILocation(line: 35, column: 21, scope: !496, inlinedAt: !504)
!504 = !DILocation(line: 35, column: 21, scope: !488)
!505 = !DILocalVariable(name: "alloc", scope: !506, file: !262, line: 32, type: !304, align: 1)
!506 = !DILexicalBlockFile(scope: !507, file: !262, discriminator: 0)
!507 = distinct !DISubprogram(name: "with_capacity_in<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hd9348190813418b1E", scope: !455, file: !367, line: 640, type: !508, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !510)
!508 = !DISubroutineType(types: !509)
!509 = !{!455, !9, !304}
!510 = !{!511, !505}
!511 = !DILocalVariable(name: "capacity", scope: !506, file: !262, line: 32, type: !9, align: 8)
!512 = !DILocation(line: 32, column: 34, scope: !506, inlinedAt: !513)
!513 = !DILocation(line: 483, column: 9, scope: !514, inlinedAt: !520)
!514 = distinct !DISubprogram(name: "with_capacity<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17he6070a218c571b9aE", scope: !455, file: !367, line: 482, type: !515, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !517)
!515 = !DISubroutineType(types: !516)
!516 = !{!455, !9}
!517 = !{!518}
!518 = !DILocalVariable(name: "capacity", scope: !519, file: !262, line: 32, type: !9, align: 8)
!519 = !DILexicalBlockFile(scope: !514, file: !262, discriminator: 0)
!520 = !DILocation(line: 32, column: 34, scope: !486)
!521 = !DILocalVariable(name: "alloc", scope: !522, file: !262, line: 32, type: !304, align: 1)
!522 = !DILexicalBlockFile(scope: !523, file: !262, discriminator: 0)
!523 = distinct !DISubprogram(name: "with_capacity_in<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h96b209f6280037d5E", scope: !458, file: !384, line: 130, type: !524, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !526)
!524 = !DISubroutineType(types: !525)
!525 = !{!458, !9, !304}
!526 = !{!527, !521}
!527 = !DILocalVariable(name: "capacity", scope: !522, file: !262, line: 32, type: !9, align: 8)
!528 = !DILocation(line: 32, column: 34, scope: !522, inlinedAt: !529)
!529 = !DILocation(line: 641, column: 20, scope: !507, inlinedAt: !513)
!530 = !DILocation(line: 26, column: 13, scope: !452)
!531 = !DILocation(line: 26, column: 32, scope: !452)
!532 = !DILocation(line: 45, column: 5, scope: !452)
!533 = !DILocation(line: 26, column: 26, scope: !452)
!534 = !DILocation(line: 27, column: 28, scope: !535, inlinedAt: !539)
!535 = !DILexicalBlockFile(scope: !536, file: !262, discriminator: 0)
!536 = distinct !DISubprogram(name: "new<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17h15c30a4a16658344E", scope: !455, file: !367, line: 424, type: !537, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !19)
!537 = !DISubroutineType(types: !538)
!538 = !{!455}
!539 = !DILocation(line: 27, column: 28, scope: !452)
!540 = !DILocation(line: 28, column: 18, scope: !452)
!541 = !DILocation(line: 29, column: 34, scope: !482)
!542 = !DILocation(line: 39, column: 13, scope: !452)
!543 = !DILocation(line: 29, column: 22, scope: !482)
!544 = !DILocation(line: 29, column: 22, scope: !484)
!545 = !DILocation(line: 31, column: 61, scope: !484)
!546 = !DILocalVariable(name: "self", scope: !547, file: !262, line: 31, type: !9, align: 8)
!547 = !DILexicalBlockFile(scope: !548, file: !262, discriminator: 0)
!548 = distinct !DISubprogram(name: "saturating_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_add17haf0fb58f21d60319E", scope: !412, file: !411, line: 1048, type: !414, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !549)
!549 = !{!546, !550}
!550 = !DILocalVariable(name: "rhs", scope: !547, file: !262, line: 31, type: !9, align: 8)
!551 = !DILocation(line: 31, column: 61, scope: !547, inlinedAt: !545)
!552 = !DILocalVariable(name: "v2", scope: !553, file: !262, line: 31, type: !9, align: 8)
!553 = !DILexicalBlockFile(scope: !554, file: !262, discriminator: 0)
!554 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17hd61ef7cba9f6ff48E", scope: !131, file: !422, line: 1278, type: !414, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !425, retainedNodes: !555)
!555 = !{!556, !552}
!556 = !DILocalVariable(name: "v1", scope: !553, file: !262, line: 31, type: !9, align: 8)
!557 = !DILocation(line: 31, column: 21, scope: !553, inlinedAt: !558)
!558 = !DILocation(line: 31, column: 21, scope: !484)
!559 = !DILocation(line: 30, column: 21, scope: !486)
!560 = !DILocation(line: 32, column: 53, scope: !486)
!561 = !DILocation(line: 32, column: 34, scope: !519, inlinedAt: !520)
!562 = !DILocation(line: 35, column: 32, scope: !488)
!563 = !DILocation(line: 39, column: 13, scope: !486)
!564 = !DILocation(line: 35, column: 53, scope: !488)
!565 = !DILocation(line: 36, column: 21, scope: !488)
!566 = !DILocalVariable(name: "self", scope: !567, file: !262, line: 36, type: !571, align: 8)
!567 = !DILexicalBlockFile(scope: !568, file: !262, discriminator: 0)
!568 = distinct !DISubprogram(name: "set_len<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hf271e6aa267f59ffE", scope: !455, file: !367, line: 1301, type: !569, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !572)
!569 = !DISubroutineType(types: !570)
!570 = !{null, !571, !9}
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", baseType: !455, size: 64, align: 64, dwarfAddressSpace: 0)
!572 = !{!566, !573}
!573 = !DILocalVariable(name: "new_len", scope: !567, file: !262, line: 36, type: !9, align: 8)
!574 = !DILocation(line: 36, column: 21, scope: !567, inlinedAt: !565)
!575 = !DILocation(line: 38, column: 17, scope: !488)
!576 = !DILocation(line: 43, column: 64, scope: !480)
!577 = !DILocation(line: 43, column: 9, scope: !480)
!578 = !DILocation(line: 20, column: 5, scope: !452)
!579 = !DILocation(line: 44, column: 9, scope: !480)
!580 = !DILocation(line: 45, column: 6, scope: !452)
!581 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h2d3767c9df7a2bc5E", scope: !583, file: !582, line: 770, type: !584, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !586)
!582 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "856acc92efd7925b83dd1e3c577ddbdc")
!583 = !DINamespace(name: "{impl#16}", scope: !279)
!584 = !DISubroutineType(types: !585)
!585 = !{!296, !293}
!586 = !{!587}
!587 = !DILocalVariable(name: "unique", arg: 1, scope: !581, file: !582, line: 770, type: !293)
!588 = !DILocation(line: 770, column: 13, scope: !581)
!589 = !DILocation(line: 773, column: 41, scope: !581)
!590 = !DILocalVariable(name: "self", scope: !591, file: !582, line: 773, type: !293, align: 8)
!591 = !DILexicalBlockFile(scope: !592, file: !582, discriminator: 0)
!592 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h085f07d7bba47fe8E", scope: !293, file: !593, line: 103, type: !594, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !597)
!593 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/unique.rs", directory: "", checksumkind: CSK_MD5, checksum: "acdefab5f14df6e5aef1141fd6b768c9")
!594 = !DISubroutineType(types: !595)
!595 = !{!596, !293}
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !124, size: 64, align: 64, dwarfAddressSpace: 0)
!597 = !{!590}
!598 = !DILocation(line: 773, column: 41, scope: !591, inlinedAt: !589)
!599 = !DILocalVariable(name: "self", scope: !600, file: !582, line: 773, type: !296, align: 8)
!600 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9a87f4e9cb3e4acdE", scope: !296, file: !582, line: 330, type: !601, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !603)
!601 = !DISubroutineType(types: !602)
!602 = !{!596, !296}
!603 = !{!599}
!604 = !DILocation(line: 773, column: 41, scope: !600, inlinedAt: !605)
!605 = !DILocation(line: 104, column: 9, scope: !592, inlinedAt: !589)
!606 = !DILocalVariable(name: "ptr", scope: !607, file: !582, line: 773, type: !596, align: 8)
!607 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hfaafb5192c9d4d91E", scope: !296, file: !582, line: 196, type: !608, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !610)
!608 = !DISubroutineType(types: !609)
!609 = !{!296, !596}
!610 = !{!606}
!611 = !DILocation(line: 773, column: 18, scope: !607, inlinedAt: !612)
!612 = !DILocation(line: 773, column: 18, scope: !581)
!613 = !DILocation(line: 774, column: 6, scope: !581)
!614 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hd9b1e84b4e136ef5E", scope: !616, file: !615, line: 116, type: !618, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !644)
!615 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/collections/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "9cfb71cd3b32f7eb830f45a756b00675")
!616 = !DINamespace(name: "{impl#1}", scope: !617)
!617 = !DINamespace(name: "collections", scope: !145)
!618 = !DISubroutineType(types: !619)
!619 = !{!620, !623}
!620 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveError", scope: !617, file: !2, size: 128, align: 64, elements: !621, templateParams: !19, identifier: "9329beb58cfce2a468bff9d53d352901")
!621 = !{!622}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !620, file: !2, baseType: !623, size: 128, align: 64)
!623 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveErrorKind", scope: !617, file: !2, size: 128, align: 64, elements: !624, templateParams: !19, identifier: "b80f03a2018170445eea4dcb9e8ba251")
!624 = !{!625}
!625 = !DICompositeType(tag: DW_TAG_variant_part, scope: !623, file: !2, size: 128, align: 64, elements: !626, templateParams: !19, identifier: "dd437972ee979c0cb5a8f1e81729b7e4", discriminator: !643)
!626 = !{!627, !629}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "CapacityOverflow", scope: !625, file: !2, baseType: !628, size: 128, align: 64, extraData: i64 0)
!628 = !DICompositeType(tag: DW_TAG_structure_type, name: "CapacityOverflow", scope: !623, file: !2, size: 128, align: 64, elements: !19, identifier: "9b997f4b8909a73a8576324b89f9b258")
!629 = !DIDerivedType(tag: DW_TAG_member, name: "AllocError", scope: !625, file: !2, baseType: !630, size: 128, align: 64)
!630 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !623, file: !2, size: 128, align: 64, elements: !631, templateParams: !19, identifier: "43ad075de287371ebe4e53de3e5ecf3d")
!631 = !{!632, !642}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !630, file: !2, baseType: !633, size: 128, align: 64)
!633 = !DICompositeType(tag: DW_TAG_structure_type, name: "Layout", scope: !634, file: !2, size: 128, align: 64, elements: !636, templateParams: !19, identifier: "6727bf1318ffccbbbfc5e6dc0dfc8722")
!634 = !DINamespace(name: "layout", scope: !635)
!635 = !DINamespace(name: "alloc", scope: !53)
!636 = !{!637, !638}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !633, file: !2, baseType: !9, size: 64, align: 64)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !633, file: !2, baseType: !639, size: 64, align: 64, offset: 64)
!639 = !DICompositeType(tag: DW_TAG_structure_type, name: "ValidAlign", scope: !51, file: !2, size: 64, align: 64, elements: !640, templateParams: !19, identifier: "e392ecbcb8f7df9e6beb2b20857b4b5a")
!640 = !{!641}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !639, file: !2, baseType: !50, size: 64, align: 64)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "non_exhaustive", scope: !630, file: !2, baseType: !7, align: 8)
!643 = !DIDerivedType(tag: DW_TAG_member, scope: !623, file: !2, baseType: !54, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!644 = !{!645}
!645 = !DILocalVariable(name: "kind", arg: 1, scope: !614, file: !615, line: 116, type: !623)
!646 = !DILocation(line: 116, column: 13, scope: !614)
!647 = !DILocation(line: 117, column: 9, scope: !614)
!648 = !DILocation(line: 118, column: 6, scope: !614)
!649 = !{i64 0, i64 -9223372036854775807}
!650 = distinct !DISubprogram(name: "spec_extend<u8, alloc::alloc::Global>", linkageName: "_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17h267153515388f5d3E", scope: !652, file: !651, line: 83, type: !654, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !657)
!651 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/spec_extend.rs", directory: "", checksumkind: CSK_MD5, checksum: "f621a160b67dfe2bb567901fc380da7e")
!652 = !DINamespace(name: "{impl#4}", scope: !653)
!653 = !DINamespace(name: "spec_extend", scope: !265)
!654 = !DISubroutineType(types: !655)
!655 = !{null, !656, !324}
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !287, size: 64, align: 64, dwarfAddressSpace: 0)
!657 = !{!658, !659, !660}
!658 = !DILocalVariable(name: "self", arg: 1, scope: !650, file: !651, line: 83, type: !656)
!659 = !DILocalVariable(name: "iterator", arg: 2, scope: !650, file: !651, line: 83, type: !324)
!660 = !DILocalVariable(name: "slice", scope: !661, file: !651, line: 84, type: !662, align: 8)
!661 = distinct !DILexicalBlock(scope: !650, file: !651, line: 84, column: 9)
!662 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u8]", file: !2, size: 128, align: 64, elements: !663, templateParams: !19, identifier: "7d49e60d2ca720f66806f7375f860e2")
!663 = !{!664, !665}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !662, file: !2, baseType: !165, size: 64, align: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !662, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!666 = !DILocation(line: 83, column: 20, scope: !650)
!667 = !DILocation(line: 83, column: 31, scope: !650)
!668 = !DILocation(line: 84, column: 21, scope: !650)
!669 = !DILocation(line: 84, column: 13, scope: !661)
!670 = !DILocation(line: 85, column: 18, scope: !661)
!671 = !DILocation(line: 86, column: 6, scope: !650)
!672 = distinct !DISubprogram(name: "from_residual<alloc::borrow::Cow<str>, shlex::QuoteError, shlex::QuoteError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc75bc6a3a9354f0cE", scope: !674, file: !673, line: 2132, type: !676, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !745, retainedNodes: !741)
!673 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "376d3f50f2b6d030dde9244768e6c6e1")
!674 = !DINamespace(name: "{impl#28}", scope: !675)
!675 = !DINamespace(name: "result", scope: !53)
!676 = !DISubroutineType(types: !677)
!677 = !{!678, !714, !732}
!678 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::borrow::Cow<str>, shlex::QuoteError>", scope: !675, file: !2, size: 256, align: 64, elements: !679, templateParams: !19, identifier: "e939c1f5f3676c0f60220badb6ffa96f")
!679 = !{!680}
!680 = !DICompositeType(tag: DW_TAG_variant_part, scope: !678, file: !2, size: 256, align: 64, elements: !681, templateParams: !19, identifier: "f8166a9bcd5bf068a5e473f1f22f895c", discriminator: !713)
!681 = !{!682, !709}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !680, file: !2, baseType: !683, size: 256, align: 64)
!683 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !678, file: !2, size: 256, align: 64, elements: !684, templateParams: !706, identifier: "57806f5b618de839745e701fd7091e5")
!684 = !{!685}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !683, file: !2, baseType: !686, size: 256, align: 64)
!686 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cow<str>", scope: !687, file: !2, size: 256, align: 64, elements: !688, templateParams: !19, identifier: "34e332c053278c4862619046963d922a")
!687 = !DINamespace(name: "borrow", scope: !145)
!688 = !{!689}
!689 = !DICompositeType(tag: DW_TAG_variant_part, scope: !686, file: !2, size: 256, align: 64, elements: !690, templateParams: !19, identifier: "2c3904cfa9cbc526e8c619a3d174937", discriminator: !705)
!690 = !{!691, !701}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "Borrowed", scope: !689, file: !2, baseType: !692, size: 256, align: 64, extraData: i64 0)
!692 = !DICompositeType(tag: DW_TAG_structure_type, name: "Borrowed", scope: !686, file: !2, size: 256, align: 64, elements: !693, templateParams: !699, identifier: "4529cbaf689c075970b78a78f2381fa1")
!693 = !{!694}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !692, file: !2, baseType: !695, size: 128, align: 64, offset: 64)
!695 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !696, templateParams: !19, identifier: "c603ebb2af364502ef89131a86c6ad9b")
!696 = !{!697, !698}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !695, file: !2, baseType: !165, size: 64, align: 64)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !695, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!699 = !{!700}
!700 = !DITemplateTypeParameter(name: "B", type: !124)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "Owned", scope: !689, file: !2, baseType: !702, size: 256, align: 64, extraData: i64 1)
!702 = !DICompositeType(tag: DW_TAG_structure_type, name: "Owned", scope: !686, file: !2, size: 256, align: 64, elements: !703, templateParams: !699, identifier: "ac9a717621aff4f8596b2a038d0718fb")
!703 = !{!704}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !702, file: !2, baseType: !283, size: 192, align: 64, offset: 64)
!705 = !DIDerivedType(tag: DW_TAG_member, scope: !686, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!706 = !{!707, !708}
!707 = !DITemplateTypeParameter(name: "T", type: !686)
!708 = !DITemplateTypeParameter(name: "E", type: !12)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !680, file: !2, baseType: !710, size: 256, align: 64, extraData: i64 2)
!710 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !678, file: !2, size: 256, align: 64, elements: !711, templateParams: !706, identifier: "6f7b19e97eab9a8df634544906ec330c")
!711 = !{!712}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !710, file: !2, baseType: !12, align: 8)
!713 = !DIDerivedType(tag: DW_TAG_member, scope: !678, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!714 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, shlex::QuoteError>", scope: !675, file: !2, align: 8, elements: !715, templateParams: !19, identifier: "eddf018056f2089772f511f4ae08ea0a")
!715 = !{!716}
!716 = !DICompositeType(tag: DW_TAG_variant_part, scope: !714, file: !2, align: 8, elements: !717, templateParams: !19, identifier: "cd8efa46dce79ceb9968f1db7f45a152")
!717 = !{!718, !728}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !716, file: !2, baseType: !719, align: 8)
!719 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !714, file: !2, align: 8, elements: !720, templateParams: !726, identifier: "3c5c0b4e4bfb71695da7bdb23974aa2")
!720 = !{!721}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !719, file: !2, baseType: !722, align: 8)
!722 = !DICompositeType(tag: DW_TAG_structure_type, name: "Infallible", scope: !723, file: !2, align: 8, elements: !724, templateParams: !19, identifier: "54da939063c7c2baf203c9f582cd0995")
!723 = !DINamespace(name: "convert", scope: !53)
!724 = !{!725}
!725 = !DICompositeType(tag: DW_TAG_variant_part, scope: !722, file: !2, align: 8, elements: !19, identifier: "8a046f69014feadb4a5e941e4277afe9")
!726 = !{!727, !708}
!727 = !DITemplateTypeParameter(name: "T", type: !722)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !716, file: !2, baseType: !729, align: 8)
!729 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !714, file: !2, align: 8, elements: !730, templateParams: !726, identifier: "f99aeeabb174b5fec789f89d945ab405")
!730 = !{!731}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !729, file: !2, baseType: !12, align: 8)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !733, size: 64, align: 64, dwarfAddressSpace: 0)
!733 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !734, file: !2, size: 192, align: 64, elements: !736, templateParams: !19, identifier: "ef576a844c237f54e9e75bf7bba044c0")
!734 = !DINamespace(name: "location", scope: !735)
!735 = !DINamespace(name: "panic", scope: !53)
!736 = !{!737, !738, !740}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !733, file: !2, baseType: !695, size: 128, align: 64)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !733, file: !2, baseType: !739, size: 32, align: 32, offset: 128)
!739 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !733, file: !2, baseType: !739, size: 32, align: 32, offset: 160)
!741 = !{!742, !743}
!742 = !DILocalVariable(name: "residual", arg: 1, scope: !672, file: !673, line: 2132, type: !714)
!743 = !DILocalVariable(name: "e", scope: !744, file: !673, line: 2134, type: !12, align: 1)
!744 = distinct !DILexicalBlock(scope: !672, file: !673, line: 2134, column: 13)
!745 = !{!707, !708, !746}
!746 = !DITemplateTypeParameter(name: "F", type: !12)
!747 = !DILocation(line: 2132, column: 22, scope: !672)
!748 = !DILocation(line: 2134, column: 17, scope: !744)
!749 = !DILocation(line: 2134, column: 27, scope: !744)
!750 = !DILocation(line: 2134, column: 23, scope: !744)
!751 = !DILocation(line: 2136, column: 6, scope: !672)
!752 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN41_$LT$bool$u20$as$u20$core..fmt..Debug$GT$3fmt17h1956df0bbfc1bb9dE", scope: !754, file: !753, line: 2390, type: !755, scopeLine: 2390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !806)
!753 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "18dcc19de419985ae78d2bd8ed07e5dc")
!754 = !DINamespace(name: "{impl#14}", scope: !123)
!755 = !DISubroutineType(types: !756)
!756 = !{!757, !28, !774}
!757 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !675, file: !2, size: 8, align: 8, elements: !758, templateParams: !19, identifier: "d239d58a8e95223cd52e3ad2c36d40d7")
!758 = !{!759}
!759 = !DICompositeType(tag: DW_TAG_variant_part, scope: !757, file: !2, size: 8, align: 8, elements: !760, templateParams: !19, identifier: "1fa2591b965a13cd50e38802b1727ca", discriminator: !773)
!760 = !{!761, !769}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !759, file: !2, baseType: !762, size: 8, align: 8, extraData: i64 0)
!762 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !757, file: !2, size: 8, align: 8, elements: !763, templateParams: !765, identifier: "cea751326735c343faf647063a65ad14")
!763 = !{!764}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !762, file: !2, baseType: !7, align: 8, offset: 8)
!765 = !{!766, !767}
!766 = !DITemplateTypeParameter(name: "T", type: !7)
!767 = !DITemplateTypeParameter(name: "E", type: !768)
!768 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !123, file: !2, align: 8, elements: !19, identifier: "87e319c059f1d372f32b0a49f33ec3cc")
!769 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !759, file: !2, baseType: !770, size: 8, align: 8, extraData: i64 1)
!770 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !757, file: !2, size: 8, align: 8, elements: !771, templateParams: !765, identifier: "6c6eb84ed910506586b60ba90dbaa2c")
!771 = !{!772}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !770, file: !2, baseType: !768, align: 8, offset: 8)
!773 = !DIDerivedType(tag: DW_TAG_member, scope: !757, file: !2, baseType: !124, size: 8, align: 8, flags: DIFlagArtificial)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !775, size: 64, align: 64, dwarfAddressSpace: 0)
!775 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !123, file: !2, size: 512, align: 64, elements: !776, templateParams: !19, identifier: "6e9ffaec9b89ebb810272bb66e7b2042")
!776 = !{!777, !778, !780, !781, !794, !795}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !775, file: !2, baseType: !739, size: 32, align: 32, offset: 384)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !775, file: !2, baseType: !779, size: 32, align: 32, offset: 416)
!779 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !775, file: !2, baseType: !120, size: 8, align: 8, offset: 448)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !775, file: !2, baseType: !782, size: 128, align: 64)
!782 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !783, file: !2, size: 128, align: 64, elements: !784, templateParams: !19, identifier: "5190463b0687da274ab794ccaf9d1fd8")
!783 = !DINamespace(name: "option", scope: !53)
!784 = !{!785}
!785 = !DICompositeType(tag: DW_TAG_variant_part, scope: !782, file: !2, size: 128, align: 64, elements: !786, templateParams: !19, identifier: "db59d501e5f76645f4edce4cdbfeb328", discriminator: !793)
!786 = !{!787, !789}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !785, file: !2, baseType: !788, size: 128, align: 64, extraData: i64 0)
!788 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !782, file: !2, size: 128, align: 64, elements: !19, templateParams: !425, identifier: "a1c5f3dead8f24ccdada7bc2feedd145")
!789 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !785, file: !2, baseType: !790, size: 128, align: 64, extraData: i64 1)
!790 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !782, file: !2, size: 128, align: 64, elements: !791, templateParams: !425, identifier: "3ad875242c049b8143d7577f4eb10d1a")
!791 = !{!792}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !790, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, scope: !782, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !775, file: !2, baseType: !782, size: 128, align: 64, offset: 128)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !775, file: !2, baseType: !796, size: 128, align: 64, offset: 256)
!796 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !797, templateParams: !19, identifier: "3d4f80cd5361aaff4f795dd09efb8db1")
!797 = !{!798, !801}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !796, file: !2, baseType: !799, size: 64, align: 64)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64, align: 64, dwarfAddressSpace: 0)
!800 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !19, identifier: "abb712b259efc5e79bb67900edf24920")
!801 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !796, file: !2, baseType: !802, size: 64, align: 64, offset: 64)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !803, size: 64, align: 64, dwarfAddressSpace: 0)
!803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 64, elements: !804)
!804 = !{!805}
!805 = !DISubrange(count: 3, lowerBound: 0)
!806 = !{!807, !808}
!807 = !DILocalVariable(name: "self", arg: 1, scope: !752, file: !753, line: 2390, type: !28)
!808 = !DILocalVariable(name: "f", arg: 2, scope: !752, file: !753, line: 2390, type: !774)
!809 = !DILocation(line: 2390, column: 12, scope: !752)
!810 = !DILocation(line: 2390, column: 19, scope: !752)
!811 = !DILocation(line: 2391, column: 9, scope: !752)
!812 = !DILocation(line: 2392, column: 6, scope: !752)
!813 = distinct !DISubprogram(name: "fmt<shlex::bytes::Quoter>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7adee208db613555E", scope: !814, file: !753, line: 2361, type: !815, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !821, retainedNodes: !818)
!814 = !DINamespace(name: "{impl#59}", scope: !123)
!815 = !DISubroutineType(types: !816)
!816 = !{!757, !817, !774}
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&shlex::bytes::Quoter", baseType: !38, size: 64, align: 64, dwarfAddressSpace: 0)
!818 = !{!819, !820}
!819 = !DILocalVariable(name: "self", arg: 1, scope: !813, file: !753, line: 2361, type: !817)
!820 = !DILocalVariable(name: "f", arg: 2, scope: !813, file: !753, line: 2361, type: !774)
!821 = !{!822}
!822 = !DITemplateTypeParameter(name: "T", type: !39)
!823 = !DILocation(line: 2361, column: 20, scope: !813)
!824 = !DILocation(line: 2361, column: 27, scope: !813)
!825 = !DILocation(line: 2361, column: 71, scope: !813)
!826 = !{i64 1}
!827 = !DILocation(line: 2361, column: 62, scope: !813)
!828 = !DILocation(line: 2361, column: 84, scope: !813)
!829 = distinct !DISubprogram(name: "fmt<bool>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7c8c0b1db793cd4eE", scope: !814, file: !753, line: 2361, type: !830, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !836, retainedNodes: !833)
!830 = !DISubroutineType(types: !831)
!831 = !{!757, !832, !774}
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&bool", baseType: !28, size: 64, align: 64, dwarfAddressSpace: 0)
!833 = !{!834, !835}
!834 = !DILocalVariable(name: "self", arg: 1, scope: !829, file: !753, line: 2361, type: !832)
!835 = !DILocalVariable(name: "f", arg: 2, scope: !829, file: !753, line: 2361, type: !774)
!836 = !{!837}
!837 = !DITemplateTypeParameter(name: "T", type: !29)
!838 = !DILocation(line: 2361, column: 20, scope: !829)
!839 = !DILocation(line: 2361, column: 27, scope: !829)
!840 = !DILocation(line: 2361, column: 71, scope: !829)
!841 = !DILocation(line: 2361, column: 62, scope: !829)
!842 = !DILocation(line: 2361, column: 84, scope: !829)
!843 = distinct !DISubprogram(name: "default", linkageName: "_ZN47_$LT$bool$u20$as$u20$core..default..Default$GT$7default17h8e6c38a7341174e1E", scope: !845, file: !844, line: 196, type: !847, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !19)
!844 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/default.rs", directory: "", checksumkind: CSK_MD5, checksum: "e927882ee7f4d20d5b0acfd634a49f54")
!845 = !DINamespace(name: "{impl#1}", scope: !846)
!846 = !DINamespace(name: "default", scope: !53)
!847 = !DISubroutineType(types: !848)
!848 = !{!29}
!849 = !DILocation(line: 198, column: 14, scope: !843)
!850 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3Ord3max17haa98f192bff214e2E", scope: !851, file: !422, line: 800, type: !414, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !855, retainedNodes: !852)
!851 = !DINamespace(name: "Ord", scope: !131)
!852 = !{!853, !854}
!853 = !DILocalVariable(name: "self", arg: 1, scope: !850, file: !422, line: 800, type: !9)
!854 = !DILocalVariable(name: "other", arg: 2, scope: !850, file: !422, line: 800, type: !9)
!855 = !{!856}
!856 = !DITemplateTypeParameter(name: "Self", type: !9)
!857 = !DILocation(line: 800, column: 12, scope: !850)
!858 = !DILocation(line: 800, column: 18, scope: !850)
!859 = !DILocation(line: 808, column: 15, scope: !850)
!860 = !{i8 -1, i8 2}
!861 = !DILocation(line: 812, column: 5, scope: !850)
!862 = !DILocation(line: 808, column: 9, scope: !850)
!863 = !DILocation(line: 809, column: 49, scope: !850)
!864 = !DILocation(line: 810, column: 34, scope: !850)
!865 = !DILocation(line: 800, column: 5, scope: !850)
!866 = !DILocation(line: 812, column: 6, scope: !850)
!867 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hf38661dffacb58dfE", scope: !868, file: !422, line: 1436, type: !870, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !872)
!868 = !DINamespace(name: "{impl#55}", scope: !869)
!869 = !DINamespace(name: "impls", scope: !131)
!870 = !DISubroutineType(types: !871)
!871 = !{!130, !186, !186}
!872 = !{!873, !874}
!873 = !DILocalVariable(name: "self", arg: 1, scope: !867, file: !422, line: 1436, type: !186)
!874 = !DILocalVariable(name: "other", arg: 2, scope: !867, file: !422, line: 1436, type: !186)
!875 = !DILocation(line: 1436, column: 24, scope: !867)
!876 = !DILocation(line: 1436, column: 31, scope: !867)
!877 = !DILocation(line: 1439, column: 24, scope: !867)
!878 = !DILocation(line: 1439, column: 32, scope: !867)
!879 = !DILocation(line: 1440, column: 29, scope: !867)
!880 = !DILocation(line: 1440, column: 38, scope: !867)
!881 = !DILocation(line: 1439, column: 41, scope: !867)
!882 = !DILocation(line: 1439, column: 21, scope: !867)
!883 = !DILocation(line: 1442, column: 18, scope: !867)
!884 = !DILocation(line: 1441, column: 28, scope: !867)
!885 = !DILocation(line: 1440, column: 26, scope: !867)
!886 = !DILocation(line: 1440, column: 47, scope: !867)
!887 = distinct !DISubprogram(name: "eq", linkageName: "_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h95de183702012a16E", scope: !888, file: !422, line: 1334, type: !889, scopeLine: 1334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !891)
!888 = !DINamespace(name: "{impl#22}", scope: !869)
!889 = !DISubroutineType(types: !890)
!890 = !{!29, !333, !333}
!891 = !{!892, !893}
!892 = !DILocalVariable(name: "self", arg: 1, scope: !887, file: !422, line: 1334, type: !333)
!893 = !DILocalVariable(name: "other", arg: 2, scope: !887, file: !422, line: 1334, type: !333)
!894 = !DILocation(line: 1334, column: 23, scope: !887)
!895 = !DILocation(line: 1334, column: 30, scope: !887)
!896 = !DILocation(line: 1334, column: 52, scope: !887)
!897 = !DILocation(line: 1334, column: 63, scope: !887)
!898 = !DILocation(line: 1334, column: 73, scope: !887)
!899 = distinct !DISubprogram(name: "checked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17haccc7065f0a07782E", scope: !412, file: !411, line: 438, type: !900, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !902)
!900 = !DISubroutineType(types: !901)
!901 = !{!782, !9, !9}
!902 = !{!903, !904, !905, !907}
!903 = !DILocalVariable(name: "self", arg: 1, scope: !899, file: !411, line: 438, type: !9)
!904 = !DILocalVariable(name: "rhs", arg: 2, scope: !899, file: !411, line: 438, type: !9)
!905 = !DILocalVariable(name: "a", scope: !906, file: !411, line: 439, type: !9, align: 8)
!906 = distinct !DILexicalBlock(scope: !899, file: !411, line: 439, column: 13)
!907 = !DILocalVariable(name: "b", scope: !906, file: !411, line: 439, type: !29, align: 1)
!908 = !DILocation(line: 438, column: 34, scope: !899)
!909 = !DILocation(line: 438, column: 40, scope: !899)
!910 = !DILocation(line: 439, column: 26, scope: !899)
!911 = !DILocalVariable(name: "self", scope: !912, file: !411, line: 439, type: !9, align: 8)
!912 = distinct !DISubprogram(name: "overflowing_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17he3f36ecce9400a82E", scope: !412, file: !411, line: 1506, type: !913, scopeLine: 1506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !919)
!913 = !DISubroutineType(types: !914)
!914 = !{!915, !9, !9}
!915 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !916, templateParams: !19, identifier: "23309350ccb628a7900e37caa17b1249")
!916 = !{!917, !918}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !915, file: !2, baseType: !9, size: 64, align: 64)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !915, file: !2, baseType: !29, size: 8, align: 8, offset: 64)
!919 = !{!911, !920, !921, !923}
!920 = !DILocalVariable(name: "rhs", scope: !912, file: !411, line: 439, type: !9, align: 8)
!921 = !DILocalVariable(name: "a", scope: !922, file: !411, line: 439, type: !54, align: 8)
!922 = distinct !DILexicalBlock(scope: !912, file: !411, line: 1507, column: 13)
!923 = !DILocalVariable(name: "b", scope: !922, file: !411, line: 439, type: !29, align: 1)
!924 = !DILocation(line: 439, column: 26, scope: !912, inlinedAt: !910)
!925 = !DILocation(line: 439, column: 47, scope: !899)
!926 = !DILocation(line: 439, column: 26, scope: !922, inlinedAt: !910)
!927 = !DILocation(line: 439, column: 18, scope: !899)
!928 = !DILocation(line: 439, column: 18, scope: !906)
!929 = !DILocation(line: 439, column: 21, scope: !899)
!930 = !DILocation(line: 439, column: 21, scope: !906)
!931 = !DILocation(line: 440, column: 16, scope: !906)
!932 = !DILocation(line: 440, column: 42, scope: !906)
!933 = !DILocation(line: 440, column: 13, scope: !906)
!934 = !DILocation(line: 440, column: 30, scope: !906)
!935 = !DILocation(line: 441, column: 10, scope: !899)
!936 = !{i64 0, i64 2}
!937 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h3cb4555aa44341dcE", scope: !412, file: !411, line: 555, type: !900, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !938)
!938 = !{!939, !940, !941, !943}
!939 = !DILocalVariable(name: "self", arg: 1, scope: !937, file: !411, line: 555, type: !9)
!940 = !DILocalVariable(name: "rhs", arg: 2, scope: !937, file: !411, line: 555, type: !9)
!941 = !DILocalVariable(name: "a", scope: !942, file: !411, line: 556, type: !9, align: 8)
!942 = distinct !DILexicalBlock(scope: !937, file: !411, line: 556, column: 13)
!943 = !DILocalVariable(name: "b", scope: !942, file: !411, line: 556, type: !29, align: 1)
!944 = !DILocation(line: 555, column: 34, scope: !937)
!945 = !DILocation(line: 555, column: 40, scope: !937)
!946 = !DILocation(line: 556, column: 26, scope: !937)
!947 = !DILocalVariable(name: "self", scope: !948, file: !411, line: 556, type: !9, align: 8)
!948 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17hce0beb250bffdecdE", scope: !412, file: !411, line: 1688, type: !913, scopeLine: 1688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !949)
!949 = !{!947, !950, !951, !953}
!950 = !DILocalVariable(name: "rhs", scope: !948, file: !411, line: 556, type: !9, align: 8)
!951 = !DILocalVariable(name: "a", scope: !952, file: !411, line: 556, type: !54, align: 8)
!952 = distinct !DILexicalBlock(scope: !948, file: !411, line: 1689, column: 13)
!953 = !DILocalVariable(name: "b", scope: !952, file: !411, line: 556, type: !29, align: 1)
!954 = !DILocation(line: 556, column: 26, scope: !948, inlinedAt: !946)
!955 = !DILocation(line: 556, column: 47, scope: !937)
!956 = !DILocation(line: 556, column: 26, scope: !952, inlinedAt: !946)
!957 = !DILocation(line: 556, column: 18, scope: !937)
!958 = !DILocation(line: 556, column: 18, scope: !942)
!959 = !DILocation(line: 556, column: 21, scope: !937)
!960 = !DILocation(line: 556, column: 21, scope: !942)
!961 = !DILocation(line: 557, column: 16, scope: !942)
!962 = !DILocation(line: 557, column: 42, scope: !942)
!963 = !DILocation(line: 557, column: 13, scope: !942)
!964 = !DILocation(line: 557, column: 30, scope: !942)
!965 = !DILocation(line: 558, column: 10, scope: !937)
!966 = distinct !DISubprogram(name: "drop_in_place<&bool>", linkageName: "_ZN4core3ptr29drop_in_place$LT$$RF$bool$GT$17heab9a6d544e941efE", scope: !202, file: !231, line: 487, type: !967, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !972, retainedNodes: !970)
!967 = !DISubroutineType(types: !968)
!968 = !{null, !969}
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &bool", baseType: !28, size: 64, align: 64, dwarfAddressSpace: 0)
!970 = !{!971}
!971 = !DILocalVariable(arg: 1, scope: !966, file: !231, line: 487, type: !969)
!972 = !{!973}
!973 = !DITemplateTypeParameter(name: "T", type: !28)
!974 = !DILocation(line: 487, column: 1, scope: !966)
!975 = distinct !DISubprogram(name: "drop_in_place<shlex::QuoteError>", linkageName: "_ZN4core3ptr38drop_in_place$LT$shlex..QuoteError$GT$17h82f7a6c6f5d18258E", scope: !202, file: !231, line: 487, type: !976, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !981, retainedNodes: !979)
!976 = !DISubroutineType(types: !977)
!977 = !{null, !978}
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut shlex::QuoteError", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!979 = !{!980}
!980 = !DILocalVariable(arg: 1, scope: !975, file: !231, line: 487, type: !978)
!981 = !{!982}
!982 = !DITemplateTypeParameter(name: "T", type: !12)
!983 = !DILocation(line: 487, column: 1, scope: !975)
!984 = distinct !DISubprogram(name: "drop_in_place<alloc::string::String>", linkageName: "_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h0ccb537bb1763a95E", scope: !202, file: !231, line: 487, type: !985, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !987)
!985 = !DISubroutineType(types: !986)
!986 = !{null, !359}
!987 = !{!988}
!988 = !DILocalVariable(arg: 1, scope: !984, file: !231, line: 487, type: !359)
!989 = !DILocation(line: 487, column: 1, scope: !984)
!990 = distinct !DISubprogram(name: "drop_in_place<&shlex::bytes::Quoter>", linkageName: "_ZN4core3ptr45drop_in_place$LT$$RF$shlex..bytes..Quoter$GT$17hc6fba3347a275927E", scope: !202, file: !231, line: 487, type: !991, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !996, retainedNodes: !994)
!991 = !DISubroutineType(types: !992)
!992 = !{null, !993}
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &shlex::bytes::Quoter", baseType: !38, size: 64, align: 64, dwarfAddressSpace: 0)
!994 = !{!995}
!995 = !DILocalVariable(arg: 1, scope: !990, file: !231, line: 487, type: !993)
!996 = !{!997}
!997 = !DITemplateTypeParameter(name: "T", type: !38)
!998 = !DILocation(line: 487, column: 1, scope: !990)
!999 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9be70052c8106a2bE", scope: !202, file: !231, line: 487, type: !1000, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !1002)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{null, !500}
!1002 = !{!1003}
!1003 = !DILocalVariable(arg: 1, scope: !999, file: !231, line: 487, type: !500)
!1004 = !DILocation(line: 487, column: 1, scope: !999)
!1005 = distinct !DISubprogram(name: "drop_in_place<[alloc::string::String]>", linkageName: "_ZN4core3ptr52drop_in_place$LT$$u5b$alloc..string..String$u5d$$GT$17hfc116486bc61bf0bE", scope: !202, file: !231, line: 487, type: !1006, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !1013)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{null, !1008}
!1008 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [alloc::string::String]", file: !2, size: 128, align: 64, elements: !1009, templateParams: !19, identifier: "e8de22f5cdef262e5773597c42460b24")
!1009 = !{!1010, !1012}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1008, file: !2, baseType: !1011, size: 64, align: 64)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64, align: 64, dwarfAddressSpace: 0)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1008, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1013 = !{!1014}
!1014 = !DILocalVariable(arg: 1, scope: !1005, file: !231, line: 487, type: !1008)
!1015 = !DILocation(line: 487, column: 1, scope: !1005)
!1016 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h6bca65cdf95edcf1E", scope: !202, file: !231, line: 487, type: !1017, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1022, retainedNodes: !1020)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{null, !1019}
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !290, size: 64, align: 64, dwarfAddressSpace: 0)
!1020 = !{!1021}
!1021 = !DILocalVariable(arg: 1, scope: !1016, file: !231, line: 487, type: !1019)
!1022 = !{!1023}
!1023 = !DITemplateTypeParameter(name: "T", type: !290)
!1024 = !DILocation(line: 487, column: 1, scope: !1016)
!1025 = distinct !DISubprogram(name: "drop_in_place<[alloc::vec::Vec<u8, alloc::alloc::Global>]>", linkageName: "_ZN4core3ptr56drop_in_place$LT$$u5b$alloc..vec..Vec$LT$u8$GT$$u5d$$GT$17h32913744221ce31fE", scope: !202, file: !231, line: 487, type: !1026, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !1033)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{null, !1028}
!1028 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [alloc::vec::Vec<u8, alloc::alloc::Global>]", file: !2, size: 128, align: 64, elements: !1029, templateParams: !19, identifier: "861f0578e2343684c035820c299be69a")
!1029 = !{!1030, !1032}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1028, file: !2, baseType: !1031, size: 64, align: 64)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64, align: 64, dwarfAddressSpace: 0)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1028, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1033 = !{!1034}
!1034 = !DILocalVariable(arg: 1, scope: !1025, file: !231, line: 487, type: !1028)
!1035 = !DILocation(line: 487, column: 1, scope: !1025)
!1036 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<alloc::string::String, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h9e3b3be1cd4c1522E", scope: !202, file: !231, line: 487, type: !1037, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1042, retainedNodes: !1040)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{null, !1039}
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<alloc::string::String, alloc::alloc::Global>", baseType: !268, size: 64, align: 64, dwarfAddressSpace: 0)
!1040 = !{!1041}
!1041 = !DILocalVariable(arg: 1, scope: !1036, file: !231, line: 487, type: !1039)
!1042 = !{!1043}
!1043 = !DITemplateTypeParameter(name: "T", type: !268)
!1044 = !DILocation(line: 487, column: 1, scope: !1036)
!1045 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr69drop_in_place$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17h6d0efc2a132f28d7E", scope: !202, file: !231, line: 487, type: !1046, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1051, retainedNodes: !1049)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{null, !1048}
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", baseType: !455, size: 64, align: 64, dwarfAddressSpace: 0)
!1049 = !{!1050}
!1050 = !DILocalVariable(arg: 1, scope: !1045, file: !231, line: 487, type: !1048)
!1051 = !{!1052}
!1052 = !DITemplateTypeParameter(name: "T", type: !455)
!1053 = !DILocation(line: 487, column: 1, scope: !1045)
!1054 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<alloc::string::String>>", linkageName: "_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h82977a0c0dd68079E", scope: !202, file: !231, line: 487, type: !1055, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1071, retainedNodes: !1069)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{null, !1057}
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<alloc::string::String>", baseType: !1058, size: 64, align: 64, dwarfAddressSpace: 0)
!1058 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::string::String>", scope: !783, file: !2, size: 192, align: 64, elements: !1059, templateParams: !19, identifier: "e57ba4b2645742ac80028345ae3e3b7e")
!1059 = !{!1060}
!1060 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1058, file: !2, size: 192, align: 64, elements: !1061, templateParams: !19, identifier: "543e21bd6ff6b14b475ba99e29f0198a", discriminator: !1068)
!1061 = !{!1062, !1064}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1060, file: !2, baseType: !1063, size: 192, align: 64, extraData: i64 0)
!1063 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1058, file: !2, size: 192, align: 64, elements: !19, templateParams: !309, identifier: "ec22a260f66480db9e9c99b9abc35989")
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1060, file: !2, baseType: !1065, size: 192, align: 64)
!1065 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1058, file: !2, size: 192, align: 64, elements: !1066, templateParams: !309, identifier: "10653187bab481cceda9c29be1112f74")
!1066 = !{!1067}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1065, file: !2, baseType: !283, size: 192, align: 64)
!1068 = !DIDerivedType(tag: DW_TAG_member, scope: !1058, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!1069 = !{!1070}
!1070 = !DILocalVariable(arg: 1, scope: !1054, file: !231, line: 487, type: !1057)
!1071 = !{!1072}
!1072 = !DITemplateTypeParameter(name: "T", type: !1058)
!1073 = !DILocation(line: 487, column: 1, scope: !1054)
!1074 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<alloc::string::String, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr72drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..string..String$GT$$GT$17h10ffe8f32d11d714E", scope: !202, file: !231, line: 487, type: !1075, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1080, retainedNodes: !1078)
!1075 = !DISubroutineType(types: !1076)
!1076 = !{null, !1077}
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<alloc::string::String, alloc::alloc::Global>", baseType: !271, size: 64, align: 64, dwarfAddressSpace: 0)
!1078 = !{!1079}
!1079 = !DILocalVariable(arg: 1, scope: !1074, file: !231, line: 487, type: !1077)
!1080 = !{!1081}
!1081 = !DITemplateTypeParameter(name: "T", type: !271)
!1082 = !DILocation(line: 487, column: 1, scope: !1074)
!1083 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<alloc::vec::Vec<u8, alloc::alloc::Global>>>", linkageName: "_ZN4core3ptr74drop_in_place$LT$core..option..Option$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17h6f4a85b44fafafe7E", scope: !202, file: !231, line: 487, type: !1084, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1100, retainedNodes: !1098)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{null, !1086}
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<alloc::vec::Vec<u8, alloc::alloc::Global>>", baseType: !1087, size: 64, align: 64, dwarfAddressSpace: 0)
!1087 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::vec::Vec<u8, alloc::alloc::Global>>", scope: !783, file: !2, size: 192, align: 64, elements: !1088, templateParams: !19, identifier: "dc4f4158d169e3f7a5a50934f87d6ff3")
!1088 = !{!1089}
!1089 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1087, file: !2, size: 192, align: 64, elements: !1090, templateParams: !19, identifier: "c33d34f4ee315dc5fa94e7e9736f62f7", discriminator: !1097)
!1090 = !{!1091, !1093}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1089, file: !2, baseType: !1092, size: 192, align: 64, extraData: i64 0)
!1092 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1087, file: !2, size: 192, align: 64, elements: !19, templateParams: !468, identifier: "c2c3e851ac25f521210381fa206befa4")
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1089, file: !2, baseType: !1094, size: 192, align: 64)
!1094 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1087, file: !2, size: 192, align: 64, elements: !1095, templateParams: !468, identifier: "90ed56773ef1bddbdb75a75019b61a6d")
!1095 = !{!1096}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1094, file: !2, baseType: !287, size: 192, align: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, scope: !1087, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!1098 = !{!1099}
!1099 = !DILocalVariable(arg: 1, scope: !1083, file: !231, line: 487, type: !1086)
!1100 = !{!1101}
!1101 = !DITemplateTypeParameter(name: "T", type: !1087)
!1102 = !DILocation(line: 487, column: 1, scope: !1083)
!1103 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr76drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17hc128c0e4cb8733f3E", scope: !202, file: !231, line: 487, type: !1104, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1109, retainedNodes: !1107)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{null, !1106}
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", baseType: !458, size: 64, align: 64, dwarfAddressSpace: 0)
!1107 = !{!1108}
!1108 = !DILocalVariable(arg: 1, scope: !1103, file: !231, line: 487, type: !1106)
!1109 = !{!1110}
!1110 = !DITemplateTypeParameter(name: "T", type: !458)
!1111 = !DILocation(line: 487, column: 1, scope: !1103)
!1112 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hc5605095dafcae08E", scope: !296, file: !582, line: 218, type: !1113, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1128)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!1115, !596}
!1115 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::ptr::non_null::NonNull<u8>>", scope: !783, file: !2, size: 64, align: 64, elements: !1116, templateParams: !19, identifier: "73e5c906163f964bd09052518b6d2dc5")
!1116 = !{!1117}
!1117 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1115, file: !2, size: 64, align: 64, elements: !1118, templateParams: !19, identifier: "60204c6c6496841dbff7e7ec5dea5282", discriminator: !1127)
!1118 = !{!1119, !1123}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1117, file: !2, baseType: !1120, size: 64, align: 64, extraData: i64 0)
!1120 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1115, file: !2, size: 64, align: 64, elements: !19, templateParams: !1121, identifier: "b393050474aeb0631755d975367153e1")
!1121 = !{!1122}
!1122 = !DITemplateTypeParameter(name: "T", type: !296)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1117, file: !2, baseType: !1124, size: 64, align: 64)
!1124 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1115, file: !2, size: 64, align: 64, elements: !1125, templateParams: !1121, identifier: "a01a0b695bfd5d94759ea5c77533b9ea")
!1125 = !{!1126}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1124, file: !2, baseType: !296, size: 64, align: 64)
!1127 = !DIDerivedType(tag: DW_TAG_member, scope: !1115, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!1128 = !{!1129}
!1129 = !DILocalVariable(name: "ptr", arg: 1, scope: !1112, file: !582, line: 218, type: !596)
!1130 = !DILocation(line: 218, column: 22, scope: !1112)
!1131 = !DILocalVariable(name: "metadata", scope: !1132, file: !582, line: 219, type: !7, align: 1)
!1132 = !DILexicalBlockFile(scope: !1133, file: !582, discriminator: 0)
!1133 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h60f6d629b03ad8dfE", scope: !253, file: !252, line: 127, type: !1134, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1137)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{!596, !1136, !7}
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!1137 = !{!1138, !1131}
!1138 = !DILocalVariable(name: "data_address", scope: !1132, file: !582, line: 219, type: !1136, align: 8)
!1139 = !DILocation(line: 219, column: 13, scope: !1132, inlinedAt: !1140)
!1140 = !DILocation(line: 668, column: 5, scope: !1141, inlinedAt: !1144)
!1141 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17heb8f9a3561934949E", scope: !202, file: !231, line: 667, type: !1142, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !19)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!596}
!1144 = !DILocation(line: 38, column: 41, scope: !1145, inlinedAt: !1154)
!1145 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hf43662837fe7ba09E", scope: !1147, file: !1146, line: 35, type: !1149, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1151)
!1146 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "6672664af50614ec3c026afd55307af7")
!1147 = !DINamespace(name: "{impl#0}", scope: !1148)
!1148 = !DINamespace(name: "mut_ptr", scope: !202)
!1149 = !DISubroutineType(types: !1150)
!1150 = !{!29, !596}
!1151 = !{!1152}
!1152 = !DILocalVariable(name: "self", scope: !1153, file: !582, line: 219, type: !596, align: 8)
!1153 = !DILexicalBlockFile(scope: !1145, file: !582, discriminator: 0)
!1154 = !DILocation(line: 219, column: 13, scope: !1112)
!1155 = !DILocation(line: 219, column: 13, scope: !1153, inlinedAt: !1154)
!1156 = !DILocalVariable(name: "self", scope: !1157, file: !582, line: 219, type: !596, align: 8)
!1157 = !DILexicalBlockFile(scope: !1158, file: !582, discriminator: 0)
!1158 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h6e2b59b730b34919E", scope: !1147, file: !1146, line: 707, type: !1159, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1161)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{!29, !596, !596}
!1161 = !{!1156, !1162}
!1162 = !DILocalVariable(name: "other", scope: !1157, file: !582, line: 219, type: !596, align: 8)
!1163 = !DILocation(line: 219, column: 13, scope: !1157, inlinedAt: !1164)
!1164 = !DILocation(line: 38, column: 9, scope: !1145, inlinedAt: !1154)
!1165 = !DILocation(line: 219, column: 13, scope: !1166, inlinedAt: !1173)
!1166 = !DILexicalBlockFile(scope: !1167, file: !582, discriminator: 0)
!1167 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17hc7a864aee44084faE", scope: !202, file: !231, line: 569, type: !1168, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1172, retainedNodes: !1170)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!1136, !9}
!1170 = !{!1171}
!1171 = !DILocalVariable(name: "addr", scope: !1166, file: !582, line: 219, type: !9, align: 8)
!1172 = !{!766}
!1173 = !DILocation(line: 668, column: 24, scope: !1141, inlinedAt: !1144)
!1174 = !DILocation(line: 219, column: 12, scope: !1112)
!1175 = !DILocation(line: 223, column: 13, scope: !1112)
!1176 = !DILocation(line: 219, column: 9, scope: !1112)
!1177 = !DILocation(line: 221, column: 47, scope: !1112)
!1178 = !DILocalVariable(name: "ptr", scope: !1179, file: !582, line: 221, type: !596, align: 8)
!1179 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hfaafb5192c9d4d91E", scope: !296, file: !582, line: 196, type: !608, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1180)
!1180 = !{!1178}
!1181 = !DILocation(line: 221, column: 27, scope: !1179, inlinedAt: !1182)
!1182 = !DILocation(line: 221, column: 27, scope: !1112)
!1183 = !DILocation(line: 221, column: 13, scope: !1112)
!1184 = !DILocation(line: 225, column: 6, scope: !1112)
!1185 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN4core3str8converts19from_utf8_unchecked17h9f5110cfd4f03ad3E", scope: !1187, file: !1186, line: 170, type: !1189, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !1191)
!1186 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/converts.rs", directory: "", checksumkind: CSK_MD5, checksum: "459d256946ab11c35b95264d728167a0")
!1187 = !DINamespace(name: "converts", scope: !1188)
!1188 = !DINamespace(name: "str", scope: !53)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!695, !662}
!1191 = !{!1192}
!1192 = !DILocalVariable(name: "v", arg: 1, scope: !1185, file: !1186, line: 170, type: !662)
!1193 = !DILocation(line: 170, column: 41, scope: !1185)
!1194 = !DILocation(line: 173, column: 14, scope: !1185)
!1195 = !DILocation(line: 174, column: 2, scope: !1185)
!1196 = distinct !DISubprogram(name: "by_ref<shlex::bytes::Shlex>", linkageName: "_ZN4core4iter6traits8iterator8Iterator6by_ref17h4ba759d08463b75dE", scope: !1198, file: !1197, line: 1714, type: !1202, scopeLine: 1714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1206, retainedNodes: !1204)
!1197 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/traits/iterator.rs", directory: "", checksumkind: CSK_MD5, checksum: "a0295b930225b37fba81d1ded0ab2716")
!1198 = !DINamespace(name: "Iterator", scope: !1199)
!1199 = !DINamespace(name: "iterator", scope: !1200)
!1200 = !DINamespace(name: "traits", scope: !1201)
!1201 = !DINamespace(name: "iter", scope: !53)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!476, !476}
!1204 = !{!1205}
!1205 = !DILocalVariable(name: "self", arg: 1, scope: !1196, file: !1197, line: 1714, type: !476)
!1206 = !{!1207}
!1207 = !DITemplateTypeParameter(name: "Self", type: !321)
!1208 = !DILocation(line: 1714, column: 15, scope: !1196)
!1209 = !DILocation(line: 1719, column: 6, scope: !1196)
!1210 = distinct !DISubprogram(name: "by_ref<shlex::Shlex>", linkageName: "_ZN4core4iter6traits8iterator8Iterator6by_ref17ha02f8a5de378d359E", scope: !1198, file: !1197, line: 1714, type: !1211, scopeLine: 1714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1215, retainedNodes: !1213)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!317, !317}
!1213 = !{!1214}
!1214 = !DILocalVariable(name: "self", arg: 1, scope: !1210, file: !1197, line: 1714, type: !317)
!1215 = !{!1216}
!1216 = !DITemplateTypeParameter(name: "Self", type: !318)
!1217 = !DILocation(line: 1714, column: 15, scope: !1210)
!1218 = !DILocation(line: 1719, column: 6, scope: !1210)
!1219 = distinct !DISubprogram(name: "collect<&mut shlex::bytes::Shlex, alloc::vec::Vec<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect17h2ef59b44caa76a53E", scope: !1198, file: !1197, line: 1832, type: !453, scopeLine: 1832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1222, retainedNodes: !1220)
!1220 = !{!1221}
!1221 = !DILocalVariable(name: "self", arg: 1, scope: !1219, file: !1197, line: 1832, type: !476)
!1222 = !{!1223, !1224}
!1223 = !DITemplateTypeParameter(name: "Self", type: !476)
!1224 = !DITemplateTypeParameter(name: "B", type: !455)
!1225 = !DILocation(line: 1832, column: 45, scope: !1219)
!1226 = !DILocation(line: 1836, column: 9, scope: !1219)
!1227 = !DILocation(line: 1837, column: 6, scope: !1219)
!1228 = distinct !DISubprogram(name: "collect<&mut shlex::Shlex, alloc::vec::Vec<alloc::string::String, alloc::alloc::Global>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect17ha461a06ed692ab48E", scope: !1198, file: !1197, line: 1832, type: !266, scopeLine: 1832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1231, retainedNodes: !1229)
!1229 = !{!1230}
!1230 = !DILocalVariable(name: "self", arg: 1, scope: !1228, file: !1197, line: 1832, type: !317)
!1231 = !{!1232, !1233}
!1232 = !DITemplateTypeParameter(name: "Self", type: !317)
!1233 = !DITemplateTypeParameter(name: "B", type: !268)
!1234 = !DILocation(line: 1832, column: 45, scope: !1228)
!1235 = !DILocation(line: 1836, column: 9, scope: !1228)
!1236 = !DILocation(line: 1837, column: 6, scope: !1228)
!1237 = distinct !DISubprogram(name: "size_hint<shlex::Shlex>", linkageName: "_ZN4core4iter6traits8iterator8Iterator9size_hint17h950b9391cc9a8154E", scope: !1198, file: !1197, line: 215, type: !1238, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1215, retainedNodes: !1245)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!1240, !1244}
!1240 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, core::option::Option<usize>)", file: !2, size: 192, align: 64, elements: !1241, templateParams: !19, identifier: "f906b68f221a6503b6525b65c4ce4669")
!1241 = !{!1242, !1243}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1240, file: !2, baseType: !9, size: 64, align: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1240, file: !2, baseType: !782, size: 128, align: 64, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&shlex::Shlex", baseType: !318, size: 64, align: 64, dwarfAddressSpace: 0)
!1245 = !{!1246}
!1246 = !DILocalVariable(name: "self", arg: 1, scope: !1237, file: !1197, line: 215, type: !1244)
!1247 = !DILocation(line: 215, column: 18, scope: !1237)
!1248 = !DILocation(line: 216, column: 13, scope: !1237)
!1249 = !DILocation(line: 216, column: 9, scope: !1237)
!1250 = !DILocation(line: 217, column: 6, scope: !1237)
!1251 = distinct !DISubprogram(name: "size_hint<shlex::bytes::Shlex>", linkageName: "_ZN4core4iter6traits8iterator8Iterator9size_hint17hf31b4a86f58bf893E", scope: !1198, file: !1197, line: 215, type: !1252, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1206, retainedNodes: !1255)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{!1240, !1254}
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&shlex::bytes::Shlex", baseType: !321, size: 64, align: 64, dwarfAddressSpace: 0)
!1255 = !{!1256}
!1256 = !DILocalVariable(name: "self", arg: 1, scope: !1251, file: !1197, line: 215, type: !1254)
!1257 = !DILocation(line: 215, column: 18, scope: !1251)
!1258 = !DILocation(line: 216, column: 13, scope: !1251)
!1259 = !DILocation(line: 216, column: 9, scope: !1251)
!1260 = !DILocation(line: 217, column: 6, scope: !1251)
!1261 = distinct !DISubprogram(name: "from_size_valid_align", linkageName: "_ZN4core5alloc6layout6Layout21from_size_valid_align17h9cc74eb999b1e403E", scope: !633, file: !1262, line: 77, type: !1263, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !1282)
!1262 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/alloc/layout.rs", directory: "", checksumkind: CSK_MD5, checksum: "2d0ac208ee70c69b94b07d38255a5525")
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!1265, !9, !639}
!1265 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", scope: !675, file: !2, size: 128, align: 64, elements: !1266, templateParams: !19, identifier: "61ed90a3a60bf5c9da25fda9753d7b5")
!1266 = !{!1267}
!1267 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1265, file: !2, size: 128, align: 64, elements: !1268, templateParams: !19, identifier: "e7bb3560bfa0d3445ee2359cfbf9e5fe", discriminator: !1281)
!1268 = !{!1269, !1277}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1267, file: !2, baseType: !1270, size: 128, align: 64)
!1270 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1265, file: !2, size: 128, align: 64, elements: !1271, templateParams: !1273, identifier: "1efd2a987c8fa52528b02bba0275d8c7")
!1271 = !{!1272}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1270, file: !2, baseType: !633, size: 128, align: 64)
!1273 = !{!1274, !1275}
!1274 = !DITemplateTypeParameter(name: "T", type: !633)
!1275 = !DITemplateTypeParameter(name: "E", type: !1276)
!1276 = !DICompositeType(tag: DW_TAG_structure_type, name: "LayoutError", scope: !634, file: !2, align: 8, elements: !19, identifier: "6e89e1d1b17d37435f7b87cb1d5cb26d")
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1267, file: !2, baseType: !1278, size: 128, align: 64, extraData: i64 0)
!1278 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1265, file: !2, size: 128, align: 64, elements: !1279, templateParams: !1273, identifier: "9488fb9df60d2b7e722ab2cffead9e28")
!1279 = !{!1280}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1278, file: !2, baseType: !1276, align: 8)
!1281 = !DIDerivedType(tag: DW_TAG_member, scope: !1265, file: !2, baseType: !54, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!1282 = !{!1283, !1284}
!1283 = !DILocalVariable(name: "size", arg: 1, scope: !1261, file: !1262, line: 77, type: !9)
!1284 = !DILocalVariable(name: "align", arg: 2, scope: !1261, file: !1262, line: 77, type: !639)
!1285 = !DILocation(line: 77, column: 36, scope: !1261)
!1286 = !DILocation(line: 77, column: 49, scope: !1261)
!1287 = !DILocalVariable(name: "self", scope: !1288, file: !1262, line: 92, type: !1291, align: 8)
!1288 = !DILexicalBlockFile(scope: !1289, file: !1262, discriminator: 0)
!1289 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h80c50717bd3ed3c3E", scope: !1291, file: !1290, line: 82, type: !1295, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !1297)
!1290 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/nonzero.rs", directory: "", checksumkind: CSK_MD5, checksum: "f51cb88dd069db0b7fcd2123d03b69c9")
!1291 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonZeroUsize", scope: !1292, file: !2, size: 64, align: 64, elements: !1293, templateParams: !19, identifier: "c6c54dffb7a9517405cc55666c804e7")
!1292 = !DINamespace(name: "nonzero", scope: !413)
!1293 = !{!1294}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1291, file: !2, baseType: !9, size: 64, align: 64)
!1295 = !DISubroutineType(types: !1296)
!1296 = !{!9, !1291}
!1297 = !{!1287}
!1298 = !DILocation(line: 92, column: 42, scope: !1288, inlinedAt: !1299)
!1299 = !DILocation(line: 92, column: 42, scope: !1261)
!1300 = !DILocalVariable(name: "self", scope: !1301, file: !1262, line: 92, type: !639, align: 8)
!1301 = !DILexicalBlockFile(scope: !1302, file: !1262, discriminator: 0)
!1302 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17hcb3f9b7ba4faab99E", scope: !639, file: !1303, line: 39, type: !1304, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !1306)
!1303 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/valid_align.rs", directory: "", checksumkind: CSK_MD5, checksum: "681d44917f5a26aec3d3954431def51e")
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!1291, !639}
!1306 = !{!1300}
!1307 = !DILocation(line: 92, column: 42, scope: !1301, inlinedAt: !1299)
!1308 = !{i64 1, i64 -9223372036854775807}
!1309 = !DILocalVariable(name: "n", scope: !1310, file: !1262, line: 92, type: !9, align: 8)
!1310 = !DILexicalBlockFile(scope: !1311, file: !1262, discriminator: 0)
!1311 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h9ea4e200ee3011edE", scope: !1291, file: !1290, line: 56, type: !1312, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !1314)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!1291, !9}
!1314 = !{!1309, !1315}
!1315 = !DILocalVariable(name: "runtime", scope: !1316, file: !1262, line: 92, type: !1318, align: 8)
!1316 = !DILexicalBlockFile(scope: !1317, file: !1262, discriminator: 0)
!1317 = distinct !DILexicalBlock(scope: !1311, file: !181, line: 2336, column: 13)
!1318 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1319, file: !2, size: 64, align: 64, elements: !1321, templateParams: !19, identifier: "cbed2d88a1ec7b20c4ad53e8c9863d89")
!1319 = !DINamespace(name: "new_unchecked", scope: !1320)
!1320 = !DINamespace(name: "{impl#35}", scope: !1292)
!1321 = !{!1322}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__n", scope: !1318, file: !2, baseType: !186, size: 64, align: 64)
!1323 = !DILocation(line: 92, column: 42, scope: !1310, inlinedAt: !1324)
!1324 = !DILocation(line: 41, column: 18, scope: !1302, inlinedAt: !1299)
!1325 = !DILocation(line: 92, column: 41, scope: !1261)
!1326 = !DILocation(line: 92, column: 19, scope: !1261)
!1327 = !DILocation(line: 92, column: 12, scope: !1261)
!1328 = !DILocation(line: 97, column: 12, scope: !1261)
!1329 = !DILocation(line: 97, column: 9, scope: !1261)
!1330 = !DILocation(line: 98, column: 6, scope: !1261)
!1331 = !DILocation(line: 93, column: 20, scope: !1261)
!1332 = distinct !DISubprogram(name: "array<u8>", linkageName: "_ZN4core5alloc6layout6Layout5array17h1323d54702b1344aE", scope: !633, file: !1262, line: 416, type: !1333, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1335)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{!1265, !9}
!1335 = !{!1336, !1337, !1339, !1354}
!1336 = !DILocalVariable(name: "n", arg: 1, scope: !1332, file: !1262, line: 416, type: !9)
!1337 = !DILocalVariable(name: "array_size", scope: !1338, file: !1262, line: 417, type: !9, align: 8)
!1338 = distinct !DILexicalBlock(scope: !1332, file: !1262, line: 417, column: 9)
!1339 = !DILocalVariable(name: "residual", scope: !1340, file: !1262, line: 417, type: !1341, align: 1)
!1340 = distinct !DILexicalBlock(scope: !1332, file: !1262, line: 417, column: 79)
!1341 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::layout::LayoutError>", scope: !675, file: !2, align: 8, elements: !1342, templateParams: !19, identifier: "2408e7ead4450472646681a937f2eed")
!1342 = !{!1343}
!1343 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1341, file: !2, align: 8, elements: !1344, templateParams: !19, identifier: "6cbcec323d74ab47f813265a09655e1e")
!1344 = !{!1345, !1350}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1343, file: !2, baseType: !1346, align: 8)
!1346 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1341, file: !2, align: 8, elements: !1347, templateParams: !1349, identifier: "40ec0a271e0cb2d34d257ba58fdead82")
!1347 = !{!1348}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1346, file: !2, baseType: !722, align: 8)
!1349 = !{!727, !1275}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1343, file: !2, baseType: !1351, align: 8)
!1351 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1341, file: !2, align: 8, elements: !1352, templateParams: !1349, identifier: "72611e72c15211a4d55dae520b84155f")
!1352 = !{!1353}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1351, file: !2, baseType: !1276, align: 8)
!1354 = !DILocalVariable(name: "val", scope: !1355, file: !1262, line: 417, type: !9, align: 8)
!1355 = distinct !DILexicalBlock(scope: !1332, file: !1262, line: 417, column: 26)
!1356 = !DILocation(line: 416, column: 21, scope: !1332)
!1357 = !DILocalVariable(name: "self", scope: !1358, file: !1262, line: 417, type: !1380, align: 8)
!1358 = !DILexicalBlockFile(scope: !1359, file: !1262, discriminator: 0)
!1359 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6458f2601bd6fc39E", scope: !1360, file: !673, line: 2117, type: !1361, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1388, retainedNodes: !1394)
!1360 = !DINamespace(name: "{impl#27}", scope: !675)
!1361 = !DISubroutineType(types: !1362)
!1362 = !{!1363, !1380}
!1363 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>", scope: !1364, file: !2, size: 128, align: 64, elements: !1365, templateParams: !19, identifier: "ce5c98f9de0798e97388caf7b24b4edc")
!1364 = !DINamespace(name: "control_flow", scope: !169)
!1365 = !{!1366}
!1366 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1363, file: !2, size: 128, align: 64, elements: !1367, templateParams: !19, identifier: "6bdd8e43359c9849ce58ffeff4bb9b82", discriminator: !1379)
!1367 = !{!1368, !1375}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !1366, file: !2, baseType: !1369, size: 128, align: 64, extraData: i64 0)
!1369 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !1363, file: !2, size: 128, align: 64, elements: !1370, templateParams: !1372, identifier: "b6fdadee5e49b7207145efbc9b42a94a")
!1370 = !{!1371}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1369, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1372 = !{!1373, !1374}
!1373 = !DITemplateTypeParameter(name: "B", type: !1341)
!1374 = !DITemplateTypeParameter(name: "C", type: !9)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !1366, file: !2, baseType: !1376, size: 128, align: 64, extraData: i64 1)
!1376 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !1363, file: !2, size: 128, align: 64, elements: !1377, templateParams: !1372, identifier: "b5889c00b354165f6e6f55dba1990157")
!1377 = !{!1378}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1376, file: !2, baseType: !1341, align: 8, offset: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, scope: !1363, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!1380 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, core::alloc::layout::LayoutError>", scope: !675, file: !2, size: 128, align: 64, elements: !1381, templateParams: !19, identifier: "c2a525df37a04684d727d3bb68e24786")
!1381 = !{!1382}
!1382 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1380, file: !2, size: 128, align: 64, elements: !1383, templateParams: !19, identifier: "59922648ff1b36fe1aa289683c505c74", discriminator: !1393)
!1383 = !{!1384, !1389}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1382, file: !2, baseType: !1385, size: 128, align: 64, extraData: i64 0)
!1385 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1380, file: !2, size: 128, align: 64, elements: !1386, templateParams: !1388, identifier: "98a9acae3d260aa3de9b86f4a7044881")
!1386 = !{!1387}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1385, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1388 = !{!426, !1275}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1382, file: !2, baseType: !1390, size: 128, align: 64, extraData: i64 1)
!1390 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1380, file: !2, size: 128, align: 64, elements: !1391, templateParams: !1388, identifier: "3430eaa712a080f75cd3b02585f182")
!1391 = !{!1392}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1390, file: !2, baseType: !1276, align: 8, offset: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, scope: !1380, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!1394 = !{!1357, !1395, !1398}
!1395 = !DILocalVariable(name: "v", scope: !1396, file: !1262, line: 417, type: !9, align: 8)
!1396 = !DILexicalBlockFile(scope: !1397, file: !1262, discriminator: 0)
!1397 = distinct !DILexicalBlock(scope: !1359, file: !673, line: 2119, column: 13)
!1398 = !DILocalVariable(name: "e", scope: !1399, file: !1262, line: 417, type: !1276, align: 1)
!1399 = !DILexicalBlockFile(scope: !1400, file: !1262, discriminator: 0)
!1400 = distinct !DILexicalBlock(scope: !1359, file: !673, line: 2120, column: 13)
!1401 = !DILocation(line: 417, column: 26, scope: !1358, inlinedAt: !1402)
!1402 = !DILocation(line: 417, column: 26, scope: !1332)
!1403 = !DILocalVariable(name: "self", scope: !1404, file: !1262, line: 417, type: !782, align: 8)
!1404 = !DILexicalBlockFile(scope: !1405, file: !1262, discriminator: 0)
!1405 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h6780dcf9fcb4c398E", scope: !782, file: !1406, line: 1051, type: !1407, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1388, retainedNodes: !1409)
!1406 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "86a5483c3993f03690545387e943de77")
!1407 = !DISubroutineType(types: !1408)
!1408 = !{!1380, !782, !1276}
!1409 = !{!1403, !1410, !1411}
!1410 = !DILocalVariable(name: "err", scope: !1404, file: !1262, line: 417, type: !1276, align: 1)
!1411 = !DILocalVariable(name: "v", scope: !1412, file: !1262, line: 417, type: !9, align: 8)
!1412 = !DILexicalBlockFile(scope: !1413, file: !1262, discriminator: 0)
!1413 = distinct !DILexicalBlock(scope: !1405, file: !1406, line: 1056, column: 13)
!1414 = !DILocation(line: 417, column: 26, scope: !1404, inlinedAt: !1402)
!1415 = !DILocation(line: 417, column: 79, scope: !1340)
!1416 = !DILocalVariable(name: "residual", scope: !1417, file: !1262, line: 417, type: !1341, align: 1)
!1417 = !DILexicalBlockFile(scope: !1418, file: !1262, discriminator: 0)
!1418 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h17f8ce7bc0f0f313E", scope: !674, file: !673, line: 2132, type: !1419, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1425, retainedNodes: !1421)
!1419 = !DISubroutineType(types: !1420)
!1420 = !{!1265, !1341, !732}
!1421 = !{!1416, !1422}
!1422 = !DILocalVariable(name: "e", scope: !1423, file: !1262, line: 417, type: !1276, align: 1)
!1423 = !DILexicalBlockFile(scope: !1424, file: !1262, discriminator: 0)
!1424 = distinct !DILexicalBlock(scope: !1418, file: !673, line: 2134, column: 13)
!1425 = !{!1274, !1275, !1426}
!1426 = !DITemplateTypeParameter(name: "F", type: !1276)
!1427 = !DILocation(line: 417, column: 26, scope: !1417, inlinedAt: !1428)
!1428 = !DILocation(line: 417, column: 26, scope: !1340)
!1429 = !DILocation(line: 417, column: 26, scope: !1399, inlinedAt: !1402)
!1430 = !DILocation(line: 417, column: 26, scope: !1423, inlinedAt: !1428)
!1431 = !DILocation(line: 417, column: 26, scope: !1412, inlinedAt: !1402)
!1432 = !DILocation(line: 417, column: 26, scope: !1396, inlinedAt: !1402)
!1433 = !DILocation(line: 417, column: 26, scope: !1355)
!1434 = !DILocation(line: 417, column: 13, scope: !1338)
!1435 = !DILocation(line: 419, column: 51, scope: !1436, inlinedAt: !1441)
!1436 = !DILexicalBlockFile(scope: !1437, file: !1262, discriminator: 0)
!1437 = distinct !DISubprogram(name: "align_of<u8>", linkageName: "_ZN4core3mem8align_of17h28287c577310b20eE", scope: !52, file: !1438, line: 464, type: !1439, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !19)
!1438 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "27c8869548c9dcb65186c5584c2586f6")
!1439 = !DISubroutineType(types: !1440)
!1440 = !{!9}
!1441 = !DILocation(line: 56, column: 44, scope: !1442, inlinedAt: !1445)
!1442 = distinct !DISubprogram(name: "of<u8>", linkageName: "_ZN4core3mem11valid_align10ValidAlign2of17h80f1c296523d762dE", scope: !639, file: !1303, line: 54, type: !1443, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !19)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!639}
!1445 = !DILocation(line: 419, column: 51, scope: !1338)
!1446 = !DILocalVariable(name: "align", scope: !1447, file: !1262, line: 419, type: !9, align: 8)
!1447 = !DILexicalBlockFile(scope: !1448, file: !1262, discriminator: 0)
!1448 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h952cdfb6f07cf01aE", scope: !639, file: !1303, line: 29, type: !1449, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !1451)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{!639, !9}
!1451 = !{!1446, !1452}
!1452 = !DILocalVariable(name: "runtime", scope: !1453, file: !1262, line: 419, type: !1455, align: 8)
!1453 = !DILexicalBlockFile(scope: !1454, file: !1262, discriminator: 0)
!1454 = distinct !DILexicalBlock(scope: !1448, file: !181, line: 2336, column: 13)
!1455 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1456, file: !2, size: 64, align: 64, elements: !1458, templateParams: !19, identifier: "a24236e50785a0359acaebf14a869a84")
!1456 = !DINamespace(name: "new_unchecked", scope: !1457)
!1457 = !DINamespace(name: "{impl#0}", scope: !51)
!1458 = !{!1459}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__align", scope: !1455, file: !2, baseType: !186, size: 64, align: 64)
!1460 = !DILocation(line: 419, column: 51, scope: !1447, inlinedAt: !1461)
!1461 = !DILocation(line: 56, column: 18, scope: !1442, inlinedAt: !1445)
!1462 = !DILocation(line: 420, column: 6, scope: !1332)
!1463 = !DILocation(line: 419, column: 9, scope: !1338)
!1464 = distinct !DISubprogram(name: "array<alloc::string::String>", linkageName: "_ZN4core5alloc6layout6Layout5array17h277941258703e322E", scope: !633, file: !1262, line: 416, type: !1333, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !1465)
!1465 = !{!1466, !1467, !1469, !1471}
!1466 = !DILocalVariable(name: "n", arg: 1, scope: !1464, file: !1262, line: 416, type: !9)
!1467 = !DILocalVariable(name: "array_size", scope: !1468, file: !1262, line: 417, type: !9, align: 8)
!1468 = distinct !DILexicalBlock(scope: !1464, file: !1262, line: 417, column: 9)
!1469 = !DILocalVariable(name: "residual", scope: !1470, file: !1262, line: 417, type: !1341, align: 1)
!1470 = distinct !DILexicalBlock(scope: !1464, file: !1262, line: 417, column: 79)
!1471 = !DILocalVariable(name: "val", scope: !1472, file: !1262, line: 417, type: !9, align: 8)
!1472 = distinct !DILexicalBlock(scope: !1464, file: !1262, line: 417, column: 26)
!1473 = !DILocation(line: 416, column: 21, scope: !1464)
!1474 = !DILocalVariable(name: "self", scope: !1475, file: !1262, line: 417, type: !1380, align: 8)
!1475 = !DILexicalBlockFile(scope: !1476, file: !1262, discriminator: 0)
!1476 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6458f2601bd6fc39E", scope: !1360, file: !673, line: 2117, type: !1361, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1388, retainedNodes: !1477)
!1477 = !{!1474, !1478, !1481}
!1478 = !DILocalVariable(name: "v", scope: !1479, file: !1262, line: 417, type: !9, align: 8)
!1479 = !DILexicalBlockFile(scope: !1480, file: !1262, discriminator: 0)
!1480 = distinct !DILexicalBlock(scope: !1476, file: !673, line: 2119, column: 13)
!1481 = !DILocalVariable(name: "e", scope: !1482, file: !1262, line: 417, type: !1276, align: 1)
!1482 = !DILexicalBlockFile(scope: !1483, file: !1262, discriminator: 0)
!1483 = distinct !DILexicalBlock(scope: !1476, file: !673, line: 2120, column: 13)
!1484 = !DILocation(line: 417, column: 26, scope: !1475, inlinedAt: !1485)
!1485 = !DILocation(line: 417, column: 26, scope: !1464)
!1486 = !DILocalVariable(name: "self", scope: !1487, file: !1262, line: 417, type: !782, align: 8)
!1487 = !DILexicalBlockFile(scope: !1488, file: !1262, discriminator: 0)
!1488 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h6780dcf9fcb4c398E", scope: !782, file: !1406, line: 1051, type: !1407, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1388, retainedNodes: !1489)
!1489 = !{!1486, !1490, !1491}
!1490 = !DILocalVariable(name: "err", scope: !1487, file: !1262, line: 417, type: !1276, align: 1)
!1491 = !DILocalVariable(name: "v", scope: !1492, file: !1262, line: 417, type: !9, align: 8)
!1492 = !DILexicalBlockFile(scope: !1493, file: !1262, discriminator: 0)
!1493 = distinct !DILexicalBlock(scope: !1488, file: !1406, line: 1056, column: 13)
!1494 = !DILocation(line: 417, column: 26, scope: !1487, inlinedAt: !1485)
!1495 = !DILocation(line: 417, column: 79, scope: !1470)
!1496 = !DILocalVariable(name: "residual", scope: !1497, file: !1262, line: 417, type: !1341, align: 1)
!1497 = !DILexicalBlockFile(scope: !1498, file: !1262, discriminator: 0)
!1498 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h17f8ce7bc0f0f313E", scope: !674, file: !673, line: 2132, type: !1419, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1425, retainedNodes: !1499)
!1499 = !{!1496, !1500}
!1500 = !DILocalVariable(name: "e", scope: !1501, file: !1262, line: 417, type: !1276, align: 1)
!1501 = !DILexicalBlockFile(scope: !1502, file: !1262, discriminator: 0)
!1502 = distinct !DILexicalBlock(scope: !1498, file: !673, line: 2134, column: 13)
!1503 = !DILocation(line: 417, column: 26, scope: !1497, inlinedAt: !1504)
!1504 = !DILocation(line: 417, column: 26, scope: !1470)
!1505 = !DILocation(line: 417, column: 26, scope: !1482, inlinedAt: !1485)
!1506 = !DILocation(line: 417, column: 26, scope: !1501, inlinedAt: !1504)
!1507 = !DILocation(line: 417, column: 26, scope: !1492, inlinedAt: !1485)
!1508 = !DILocation(line: 417, column: 26, scope: !1479, inlinedAt: !1485)
!1509 = !DILocation(line: 417, column: 26, scope: !1472)
!1510 = !DILocation(line: 417, column: 13, scope: !1468)
!1511 = !DILocation(line: 419, column: 51, scope: !1512, inlinedAt: !1514)
!1512 = !DILexicalBlockFile(scope: !1513, file: !1262, discriminator: 0)
!1513 = distinct !DISubprogram(name: "align_of<alloc::string::String>", linkageName: "_ZN4core3mem8align_of17ha0b5ffdd0f69c51dE", scope: !52, file: !1438, line: 464, type: !1439, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !19)
!1514 = !DILocation(line: 56, column: 44, scope: !1515, inlinedAt: !1516)
!1515 = distinct !DISubprogram(name: "of<alloc::string::String>", linkageName: "_ZN4core3mem11valid_align10ValidAlign2of17h0302aa8c7024ac52E", scope: !639, file: !1303, line: 54, type: !1443, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !19)
!1516 = !DILocation(line: 419, column: 51, scope: !1468)
!1517 = !DILocalVariable(name: "align", scope: !1518, file: !1262, line: 419, type: !9, align: 8)
!1518 = !DILexicalBlockFile(scope: !1519, file: !1262, discriminator: 0)
!1519 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h952cdfb6f07cf01aE", scope: !639, file: !1303, line: 29, type: !1449, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !1520)
!1520 = !{!1517, !1521}
!1521 = !DILocalVariable(name: "runtime", scope: !1522, file: !1262, line: 419, type: !1455, align: 8)
!1522 = !DILexicalBlockFile(scope: !1523, file: !1262, discriminator: 0)
!1523 = distinct !DILexicalBlock(scope: !1519, file: !181, line: 2336, column: 13)
!1524 = !DILocation(line: 419, column: 51, scope: !1518, inlinedAt: !1525)
!1525 = !DILocation(line: 56, column: 18, scope: !1515, inlinedAt: !1516)
!1526 = !DILocation(line: 420, column: 6, scope: !1464)
!1527 = !DILocation(line: 419, column: 9, scope: !1468)
!1528 = distinct !DISubprogram(name: "array<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core5alloc6layout6Layout5array17h2e3ae26bf90eeeb2E", scope: !633, file: !1262, line: 416, type: !1333, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !1529)
!1529 = !{!1530, !1531, !1533, !1535}
!1530 = !DILocalVariable(name: "n", arg: 1, scope: !1528, file: !1262, line: 416, type: !9)
!1531 = !DILocalVariable(name: "array_size", scope: !1532, file: !1262, line: 417, type: !9, align: 8)
!1532 = distinct !DILexicalBlock(scope: !1528, file: !1262, line: 417, column: 9)
!1533 = !DILocalVariable(name: "residual", scope: !1534, file: !1262, line: 417, type: !1341, align: 1)
!1534 = distinct !DILexicalBlock(scope: !1528, file: !1262, line: 417, column: 79)
!1535 = !DILocalVariable(name: "val", scope: !1536, file: !1262, line: 417, type: !9, align: 8)
!1536 = distinct !DILexicalBlock(scope: !1528, file: !1262, line: 417, column: 26)
!1537 = !DILocation(line: 416, column: 21, scope: !1528)
!1538 = !DILocalVariable(name: "self", scope: !1539, file: !1262, line: 417, type: !1380, align: 8)
!1539 = !DILexicalBlockFile(scope: !1540, file: !1262, discriminator: 0)
!1540 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6458f2601bd6fc39E", scope: !1360, file: !673, line: 2117, type: !1361, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1388, retainedNodes: !1541)
!1541 = !{!1538, !1542, !1545}
!1542 = !DILocalVariable(name: "v", scope: !1543, file: !1262, line: 417, type: !9, align: 8)
!1543 = !DILexicalBlockFile(scope: !1544, file: !1262, discriminator: 0)
!1544 = distinct !DILexicalBlock(scope: !1540, file: !673, line: 2119, column: 13)
!1545 = !DILocalVariable(name: "e", scope: !1546, file: !1262, line: 417, type: !1276, align: 1)
!1546 = !DILexicalBlockFile(scope: !1547, file: !1262, discriminator: 0)
!1547 = distinct !DILexicalBlock(scope: !1540, file: !673, line: 2120, column: 13)
!1548 = !DILocation(line: 417, column: 26, scope: !1539, inlinedAt: !1549)
!1549 = !DILocation(line: 417, column: 26, scope: !1528)
!1550 = !DILocalVariable(name: "self", scope: !1551, file: !1262, line: 417, type: !782, align: 8)
!1551 = !DILexicalBlockFile(scope: !1552, file: !1262, discriminator: 0)
!1552 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h6780dcf9fcb4c398E", scope: !782, file: !1406, line: 1051, type: !1407, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1388, retainedNodes: !1553)
!1553 = !{!1550, !1554, !1555}
!1554 = !DILocalVariable(name: "err", scope: !1551, file: !1262, line: 417, type: !1276, align: 1)
!1555 = !DILocalVariable(name: "v", scope: !1556, file: !1262, line: 417, type: !9, align: 8)
!1556 = !DILexicalBlockFile(scope: !1557, file: !1262, discriminator: 0)
!1557 = distinct !DILexicalBlock(scope: !1552, file: !1406, line: 1056, column: 13)
!1558 = !DILocation(line: 417, column: 26, scope: !1551, inlinedAt: !1549)
!1559 = !DILocation(line: 417, column: 79, scope: !1534)
!1560 = !DILocalVariable(name: "residual", scope: !1561, file: !1262, line: 417, type: !1341, align: 1)
!1561 = !DILexicalBlockFile(scope: !1562, file: !1262, discriminator: 0)
!1562 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h17f8ce7bc0f0f313E", scope: !674, file: !673, line: 2132, type: !1419, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1425, retainedNodes: !1563)
!1563 = !{!1560, !1564}
!1564 = !DILocalVariable(name: "e", scope: !1565, file: !1262, line: 417, type: !1276, align: 1)
!1565 = !DILexicalBlockFile(scope: !1566, file: !1262, discriminator: 0)
!1566 = distinct !DILexicalBlock(scope: !1562, file: !673, line: 2134, column: 13)
!1567 = !DILocation(line: 417, column: 26, scope: !1561, inlinedAt: !1568)
!1568 = !DILocation(line: 417, column: 26, scope: !1534)
!1569 = !DILocation(line: 417, column: 26, scope: !1546, inlinedAt: !1549)
!1570 = !DILocation(line: 417, column: 26, scope: !1565, inlinedAt: !1568)
!1571 = !DILocation(line: 417, column: 26, scope: !1556, inlinedAt: !1549)
!1572 = !DILocation(line: 417, column: 26, scope: !1543, inlinedAt: !1549)
!1573 = !DILocation(line: 417, column: 26, scope: !1536)
!1574 = !DILocation(line: 417, column: 13, scope: !1532)
!1575 = !DILocation(line: 419, column: 51, scope: !1576, inlinedAt: !1578)
!1576 = !DILexicalBlockFile(scope: !1577, file: !1262, discriminator: 0)
!1577 = distinct !DISubprogram(name: "align_of<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3mem8align_of17h14dbce2cac815896E", scope: !52, file: !1438, line: 464, type: !1439, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !19)
!1578 = !DILocation(line: 56, column: 44, scope: !1579, inlinedAt: !1580)
!1579 = distinct !DISubprogram(name: "of<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3mem11valid_align10ValidAlign2of17hdb15eee0d7cc6721E", scope: !639, file: !1303, line: 54, type: !1443, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !19)
!1580 = !DILocation(line: 419, column: 51, scope: !1532)
!1581 = !DILocalVariable(name: "align", scope: !1582, file: !1262, line: 419, type: !9, align: 8)
!1582 = !DILexicalBlockFile(scope: !1583, file: !1262, discriminator: 0)
!1583 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h952cdfb6f07cf01aE", scope: !639, file: !1303, line: 29, type: !1449, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !1584)
!1584 = !{!1581, !1585}
!1585 = !DILocalVariable(name: "runtime", scope: !1586, file: !1262, line: 419, type: !1455, align: 8)
!1586 = !DILexicalBlockFile(scope: !1587, file: !1262, discriminator: 0)
!1587 = distinct !DILexicalBlock(scope: !1583, file: !181, line: 2336, column: 13)
!1588 = !DILocation(line: 419, column: 51, scope: !1582, inlinedAt: !1589)
!1589 = !DILocation(line: 56, column: 18, scope: !1579, inlinedAt: !1580)
!1590 = !DILocation(line: 420, column: 6, scope: !1528)
!1591 = !DILocation(line: 419, column: 9, scope: !1532)
!1592 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFull, 2>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h5274fd43326ea4feE", scope: !1594, file: !1593, line: 285, type: !1596, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1606, retainedNodes: !1603)
!1593 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/array/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e237aff39bff30ac55984ee183267020")
!1594 = !DINamespace(name: "{impl#15}", scope: !1595)
!1595 = !DINamespace(name: "array", scope: !53)
!1596 = !DISubroutineType(types: !1597)
!1597 = !{!662, !1598, !1602, !732}
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[u8; 2]", baseType: !1599, size: 64, align: 64, dwarfAddressSpace: 0)
!1599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !124, size: 16, align: 8, elements: !1600)
!1600 = !{!1601}
!1601 = !DISubrange(count: 2, lowerBound: 0)
!1602 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFull", scope: !168, file: !2, align: 8, elements: !19, identifier: "63a67109926f3a3dc00488fbc228c0f9")
!1603 = !{!1604, !1605}
!1604 = !DILocalVariable(name: "self", arg: 1, scope: !1592, file: !1593, line: 285, type: !1598)
!1605 = !DILocalVariable(name: "index", arg: 2, scope: !1592, file: !1593, line: 285, type: !1602)
!1606 = !{!191, !1607}
!1607 = !DITemplateTypeParameter(name: "I", type: !1602)
!1608 = !DILocation(line: 285, column: 14, scope: !1592)
!1609 = !DILocation(line: 285, column: 21, scope: !1592)
!1610 = !DILocation(line: 286, column: 22, scope: !1592)
!1611 = !DILocation(line: 286, column: 9, scope: !1592)
!1612 = !DILocation(line: 287, column: 6, scope: !1592)
!1613 = distinct !DISubprogram(name: "split_at_unchecked<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$18split_at_unchecked17h5a8b7e7a010699f3E", scope: !1615, file: !1614, line: 1628, type: !1616, scopeLine: 1628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1622)
!1614 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "7e4712ab5341970456c5be6b0829b712")
!1615 = !DINamespace(name: "{impl#0}", scope: !159)
!1616 = !DISubroutineType(types: !1617)
!1617 = !{!1618, !662, !9}
!1618 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&[u8], &[u8])", file: !2, size: 256, align: 64, elements: !1619, templateParams: !19, identifier: "b857a816d3efa1935fe97c10c9a0b646")
!1619 = !{!1620, !1621}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1618, file: !2, baseType: !662, size: 128, align: 64)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1618, file: !2, baseType: !662, size: 128, align: 64, offset: 128)
!1622 = !{!1623, !1624}
!1623 = !DILocalVariable(name: "self", arg: 1, scope: !1613, file: !1614, line: 1628, type: !662)
!1624 = !DILocalVariable(name: "mid", arg: 2, scope: !1613, file: !1614, line: 1628, type: !9)
!1625 = !DILocation(line: 1628, column: 38, scope: !1613)
!1626 = !DILocation(line: 1628, column: 45, scope: !1613)
!1627 = !DILocalVariable(name: "index", scope: !1628, file: !1614, line: 1630, type: !1631, align: 8)
!1628 = distinct !DISubprogram(name: "get_unchecked<u8, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h29d5ec84679fbd41E", scope: !1615, file: !1614, line: 398, type: !1629, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1636, retainedNodes: !1634)
!1629 = !DISubroutineType(types: !1630)
!1630 = !{!662, !662, !1631}
!1631 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !168, file: !2, size: 64, align: 64, elements: !1632, templateParams: !173, identifier: "e254bd9803ca1fe3c70093646958bde2")
!1632 = !{!1633}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1631, file: !2, baseType: !9, size: 64, align: 64)
!1634 = !{!1635, !1627}
!1635 = !DILocalVariable(name: "self", scope: !1628, file: !1614, line: 1630, type: !662, align: 8)
!1636 = !{!191, !1637}
!1637 = !DITemplateTypeParameter(name: "I", type: !1631)
!1638 = !DILocation(line: 1630, column: 19, scope: !1628, inlinedAt: !1639)
!1639 = !DILocation(line: 1630, column: 19, scope: !1613)
!1640 = !DILocalVariable(name: "index", scope: !1641, file: !1614, line: 1630, type: !1644, align: 8)
!1641 = distinct !DISubprogram(name: "get_unchecked<u8, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h65fd574e0f55f519E", scope: !1615, file: !1614, line: 398, type: !1642, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1649, retainedNodes: !1647)
!1642 = !DISubroutineType(types: !1643)
!1643 = !{!662, !662, !1644}
!1644 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<usize>", scope: !168, file: !2, size: 64, align: 64, elements: !1645, templateParams: !173, identifier: "a58758f4d6a6e1468075e24121943e64")
!1645 = !{!1646}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1644, file: !2, baseType: !9, size: 64, align: 64)
!1647 = !{!1648, !1640}
!1648 = !DILocalVariable(name: "self", scope: !1641, file: !1614, line: 1630, type: !662, align: 8)
!1649 = !{!191, !1650}
!1650 = !DITemplateTypeParameter(name: "I", type: !1644)
!1651 = !DILocation(line: 1630, column: 46, scope: !1641, inlinedAt: !1652)
!1652 = !DILocation(line: 1630, column: 46, scope: !1613)
!1653 = !DILocation(line: 1630, column: 38, scope: !1613)
!1654 = !DILocalVariable(name: "self", scope: !1655, file: !1614, line: 1630, type: !1631, align: 8)
!1655 = !DILexicalBlockFile(scope: !1656, file: !1614, discriminator: 0)
!1656 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hf99cdd63ccb6c112E", scope: !1657, file: !156, line: 338, type: !1658, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1660)
!1657 = !DINamespace(name: "{impl#4}", scope: !158)
!1658 = !DISubroutineType(types: !1659)
!1659 = !{!162, !1631, !162}
!1660 = !{!1654, !1661}
!1661 = !DILocalVariable(name: "slice", scope: !1655, file: !1614, line: 1630, type: !162, align: 8)
!1662 = !DILocation(line: 1630, column: 19, scope: !1655, inlinedAt: !1663)
!1663 = !DILocation(line: 405, column: 20, scope: !1628, inlinedAt: !1639)
!1664 = !DILocation(line: 1630, column: 65, scope: !1613)
!1665 = !DILocalVariable(name: "self", scope: !1666, file: !1614, line: 1630, type: !1644, align: 8)
!1666 = !DILexicalBlockFile(scope: !1667, file: !1614, discriminator: 0)
!1667 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hc0afac50fab9b149E", scope: !1668, file: !156, line: 376, type: !1669, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1671)
!1668 = !DINamespace(name: "{impl#5}", scope: !158)
!1669 = !DISubroutineType(types: !1670)
!1670 = !{!162, !1644, !162}
!1671 = !{!1665, !1672}
!1672 = !DILocalVariable(name: "slice", scope: !1666, file: !1614, line: 1630, type: !162, align: 8)
!1673 = !DILocation(line: 1630, column: 46, scope: !1666, inlinedAt: !1674)
!1674 = !DILocation(line: 405, column: 20, scope: !1641, inlinedAt: !1652)
!1675 = !DILocalVariable(name: "self", scope: !1676, file: !1614, line: 1630, type: !162, align: 8)
!1676 = !DILexicalBlockFile(scope: !1677, file: !1614, discriminator: 0)
!1677 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h72b2754d0778d651E", scope: !200, file: !199, line: 1365, type: !1678, scopeLine: 1365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1680)
!1678 = !DISubroutineType(types: !1679)
!1679 = !{!9, !162}
!1680 = !{!1675}
!1681 = !DILocation(line: 1630, column: 46, scope: !1676, inlinedAt: !1682)
!1682 = !DILocation(line: 378, column: 31, scope: !1667, inlinedAt: !1674)
!1683 = !DILocalVariable(name: "ptr", scope: !1684, file: !1614, line: 1630, type: !162, align: 8)
!1684 = !DILexicalBlockFile(scope: !1685, file: !1614, discriminator: 0)
!1685 = distinct !DISubprogram(name: "metadata<[u8]>", linkageName: "_ZN4core3ptr8metadata8metadata17hdee96660ff9ebbbfE", scope: !253, file: !252, line: 93, type: !1678, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1686)
!1686 = !{!1683}
!1687 = !DILocation(line: 1630, column: 46, scope: !1684, inlinedAt: !1688)
!1688 = !DILocation(line: 1366, column: 9, scope: !1677, inlinedAt: !1682)
!1689 = !DILocation(line: 1630, column: 18, scope: !1613)
!1690 = !DILocation(line: 1631, column: 6, scope: !1613)
!1691 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h9d58ef0a71d56975E", scope: !1615, file: !1614, line: 129, type: !1692, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1694)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!9, !662}
!1694 = !{!1695}
!1695 = !DILocalVariable(name: "self", arg: 1, scope: !1691, file: !1614, line: 129, type: !662)
!1696 = !DILocation(line: 129, column: 22, scope: !1691)
!1697 = !DILocation(line: 137, column: 18, scope: !1691)
!1698 = !DILocation(line: 138, column: 6, scope: !1691)
!1699 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h4aacd776e8fe9725E", scope: !1615, file: !1614, line: 734, type: !1700, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1702)
!1700 = !DISubroutineType(types: !1701)
!1701 = !{!324, !662}
!1702 = !{!1703}
!1703 = !DILocalVariable(name: "self", arg: 1, scope: !1699, file: !1614, line: 734, type: !662)
!1704 = !DILocation(line: 734, column: 17, scope: !1699)
!1705 = !DILocation(line: 735, column: 9, scope: !1699)
!1706 = !DILocation(line: 736, column: 6, scope: !1699)
!1707 = distinct !DISubprogram(name: "is_empty<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hdfd8f1d2de4b48ecE", scope: !1615, file: !1614, line: 152, type: !1708, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1710)
!1708 = !DISubroutineType(types: !1709)
!1709 = !{!29, !662}
!1710 = !{!1711}
!1711 = !DILocalVariable(name: "self", arg: 1, scope: !1707, file: !1614, line: 152, type: !662)
!1712 = !DILocation(line: 152, column: 27, scope: !1707)
!1713 = !DILocation(line: 153, column: 9, scope: !1707)
!1714 = !DILocation(line: 154, column: 6, scope: !1707)
!1715 = distinct !DISubprogram(name: "split_at<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8split_at17h6a8dc46ce288b406E", scope: !1615, file: !1614, line: 1544, type: !1716, scopeLine: 1544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1718)
!1716 = !DISubroutineType(types: !1717)
!1717 = !{!1618, !662, !9, !732}
!1718 = !{!1719, !1720}
!1719 = !DILocalVariable(name: "self", arg: 1, scope: !1715, file: !1614, line: 1544, type: !662)
!1720 = !DILocalVariable(name: "mid", arg: 2, scope: !1715, file: !1614, line: 1544, type: !9)
!1721 = !DILocation(line: 1544, column: 21, scope: !1715)
!1722 = !DILocation(line: 1544, column: 28, scope: !1715)
!1723 = !DILocation(line: 1545, column: 17, scope: !1715)
!1724 = !DILocation(line: 1545, column: 9, scope: !1715)
!1725 = !DILocation(line: 1548, column: 18, scope: !1715)
!1726 = !DILocation(line: 1549, column: 6, scope: !1715)
!1727 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17haeedc00e2d6d278cE", scope: !324, file: !1728, line: 88, type: !1700, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1729)
!1728 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "36678af40fdc22d7150f6f91e11271b3")
!1729 = !{!1730, !1731, !1733}
!1730 = !DILocalVariable(name: "slice", arg: 1, scope: !1727, file: !1728, line: 88, type: !662)
!1731 = !DILocalVariable(name: "ptr", scope: !1732, file: !1728, line: 89, type: !205, align: 8)
!1732 = distinct !DILexicalBlock(scope: !1727, file: !1728, line: 89, column: 9)
!1733 = !DILocalVariable(name: "end", scope: !1734, file: !1728, line: 94, type: !205, align: 8)
!1734 = distinct !DILexicalBlock(scope: !1732, file: !1728, line: 94, column: 13)
!1735 = !DILocation(line: 88, column: 23, scope: !1727)
!1736 = !DILocation(line: 94, column: 17, scope: !1734)
!1737 = !DILocalVariable(name: "metadata", scope: !1738, file: !1728, line: 92, type: !7, align: 1)
!1738 = !DILexicalBlockFile(scope: !1739, file: !1728, discriminator: 0)
!1739 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hc9fa830dd3c9579eE", scope: !253, file: !252, line: 110, type: !1740, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1742)
!1740 = !DISubroutineType(types: !1741)
!1741 = !{!205, !6, !7}
!1742 = !{!1743, !1737}
!1743 = !DILocalVariable(name: "data_address", scope: !1738, file: !1728, line: 92, type: !6, align: 8)
!1744 = !DILocation(line: 92, column: 21, scope: !1738, inlinedAt: !1745)
!1745 = !DILocation(line: 513, column: 5, scope: !1746, inlinedAt: !1749)
!1746 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17h80c0ae80c0ce3496E", scope: !202, file: !231, line: 512, type: !1747, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !19)
!1747 = !DISubroutineType(types: !1748)
!1748 = !{!205}
!1749 = !DILocation(line: 39, column: 43, scope: !1750, inlinedAt: !1756)
!1750 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h9ebbdb0cd46f0881E", scope: !211, file: !199, line: 36, type: !1751, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1753)
!1751 = !DISubroutineType(types: !1752)
!1752 = !{!29, !205}
!1753 = !{!1754}
!1754 = !DILocalVariable(name: "self", scope: !1755, file: !1728, line: 92, type: !205, align: 8)
!1755 = !DILexicalBlockFile(scope: !1750, file: !1728, discriminator: 0)
!1756 = !DILocation(line: 92, column: 21, scope: !1732)
!1757 = !DILocation(line: 89, column: 19, scope: !1727)
!1758 = !DILocalVariable(name: "self", scope: !1759, file: !1728, line: 89, type: !662, align: 8)
!1759 = !DILexicalBlockFile(scope: !1760, file: !1728, discriminator: 0)
!1760 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h77aa096a15fe9fd5E", scope: !1615, file: !1614, line: 476, type: !1761, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1763)
!1761 = !DISubroutineType(types: !1762)
!1762 = !{!205, !662}
!1763 = !{!1758}
!1764 = !DILocation(line: 89, column: 19, scope: !1759, inlinedAt: !1757)
!1765 = !DILocation(line: 89, column: 13, scope: !1732)
!1766 = !DILocation(line: 92, column: 21, scope: !1755, inlinedAt: !1756)
!1767 = !DILocalVariable(name: "self", scope: !1768, file: !1728, line: 92, type: !205, align: 8)
!1768 = !DILexicalBlockFile(scope: !1769, file: !1728, discriminator: 0)
!1769 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h8a1c34964f7ad5b9E", scope: !211, file: !199, line: 777, type: !1770, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1772)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{!29, !205, !205}
!1772 = !{!1767, !1773}
!1773 = !DILocalVariable(name: "other", scope: !1768, file: !1728, line: 92, type: !205, align: 8)
!1774 = !DILocation(line: 92, column: 21, scope: !1768, inlinedAt: !1775)
!1775 = !DILocation(line: 39, column: 9, scope: !1750, inlinedAt: !1756)
!1776 = !DILocation(line: 92, column: 21, scope: !1777, inlinedAt: !1783)
!1777 = !DILexicalBlockFile(scope: !1778, file: !1728, discriminator: 0)
!1778 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h2b2fa68b7e93d261E", scope: !202, file: !231, line: 538, type: !1779, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1172, retainedNodes: !1781)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{!6, !9}
!1781 = !{!1782}
!1782 = !DILocalVariable(name: "addr", scope: !1777, file: !1728, line: 92, type: !9, align: 8)
!1783 = !DILocation(line: 513, column: 20, scope: !1746, inlinedAt: !1749)
!1784 = !DILocation(line: 92, column: 20, scope: !1732)
!1785 = !DILocation(line: 92, column: 13, scope: !1732)
!1786 = !DILocation(line: 94, column: 26, scope: !1732)
!1787 = !DILocation(line: 95, column: 17, scope: !1732)
!1788 = !DILocalVariable(name: "self", scope: !1789, file: !1728, line: 95, type: !205, align: 8)
!1789 = !DILexicalBlockFile(scope: !1790, file: !1728, discriminator: 0)
!1790 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h2325359d8de270a6E", scope: !211, file: !199, line: 1042, type: !212, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1791)
!1791 = !{!1788, !1792}
!1792 = !DILocalVariable(name: "count", scope: !1789, file: !1728, line: 95, type: !9, align: 8)
!1793 = !DILocation(line: 95, column: 17, scope: !1789, inlinedAt: !1787)
!1794 = !DILocation(line: 95, column: 49, scope: !1732)
!1795 = !DILocalVariable(name: "self", scope: !1796, file: !1728, line: 95, type: !205, align: 8)
!1796 = !DILexicalBlockFile(scope: !1797, file: !1728, discriminator: 0)
!1797 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hacbe0d025ee0b42eE", scope: !211, file: !199, line: 536, type: !221, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1798)
!1798 = !{!1795, !1799}
!1799 = !DILocalVariable(name: "count", scope: !1796, file: !1728, line: 95, type: !223, align: 8)
!1800 = !DILocation(line: 95, column: 17, scope: !1796, inlinedAt: !1801)
!1801 = !DILocation(line: 1046, column: 9, scope: !1790, inlinedAt: !1787)
!1802 = !DILocation(line: 97, column: 17, scope: !1732)
!1803 = !DILocalVariable(name: "self", scope: !1804, file: !1728, line: 97, type: !205, align: 8)
!1804 = !DILexicalBlockFile(scope: !1805, file: !1728, discriminator: 0)
!1805 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h87c4685356d97309E", scope: !211, file: !199, line: 871, type: !212, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1806)
!1806 = !{!1803, !1807}
!1807 = !DILocalVariable(name: "count", scope: !1804, file: !1728, line: 97, type: !9, align: 8)
!1808 = !DILocation(line: 97, column: 17, scope: !1804, inlinedAt: !1802)
!1809 = !DILocation(line: 97, column: 25, scope: !1732)
!1810 = !DILocalVariable(name: "self", scope: !1811, file: !1728, line: 97, type: !205, align: 8)
!1811 = !DILexicalBlockFile(scope: !1812, file: !1728, discriminator: 0)
!1812 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hb3715e24a1729836E", scope: !211, file: !199, line: 453, type: !221, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1813)
!1813 = !{!1810, !1814}
!1814 = !DILocalVariable(name: "count", scope: !1811, file: !1728, line: 97, type: !223, align: 8)
!1815 = !DILocation(line: 97, column: 17, scope: !1811, inlinedAt: !1816)
!1816 = !DILocation(line: 876, column: 18, scope: !1805, inlinedAt: !1802)
!1817 = !DILocation(line: 94, column: 23, scope: !1732)
!1818 = !DILocation(line: 100, column: 48, scope: !1734)
!1819 = !DILocalVariable(name: "ptr", scope: !1820, file: !1728, line: 100, type: !596, align: 8)
!1820 = !DILexicalBlockFile(scope: !1821, file: !1728, discriminator: 0)
!1821 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hfaafb5192c9d4d91E", scope: !296, file: !582, line: 196, type: !608, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1822)
!1822 = !{!1819}
!1823 = !DILocation(line: 100, column: 25, scope: !1820, inlinedAt: !1824)
!1824 = !DILocation(line: 100, column: 25, scope: !1734)
!1825 = !DILocation(line: 100, column: 64, scope: !1734)
!1826 = !DILocation(line: 100, column: 13, scope: !1734)
!1827 = !DILocation(line: 102, column: 6, scope: !1727)
!1828 = distinct !DISubprogram(name: "as_slice<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hc742c99cd5f50b44E", scope: !324, file: !1728, line: 130, type: !1829, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1832)
!1829 = !DISubroutineType(types: !1830)
!1830 = !{!662, !1831}
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::slice::iter::Iter<u8>", baseType: !324, size: 64, align: 64, dwarfAddressSpace: 0)
!1832 = !{!1833}
!1833 = !DILocalVariable(name: "self", arg: 1, scope: !1828, file: !1728, line: 130, type: !1831)
!1834 = !DILocation(line: 130, column: 21, scope: !1828)
!1835 = !DILocalVariable(name: "len", scope: !1836, file: !1728, line: 131, type: !9, align: 8)
!1836 = !DILexicalBlockFile(scope: !1837, file: !1728, discriminator: 0)
!1837 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17h24dd8ef5468a932fE", scope: !1839, file: !1838, line: 90, type: !1840, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1842)
!1838 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "bc05ab33aeb77226885613c6dc511a0a")
!1839 = !DINamespace(name: "raw", scope: !159)
!1840 = !DISubroutineType(types: !1841)
!1841 = !{!662, !205, !9}
!1842 = !{!1843, !1835, !1844}
!1843 = !DILocalVariable(name: "data", scope: !1836, file: !1728, line: 131, type: !205, align: 8)
!1844 = !DILocalVariable(name: "runtime", scope: !1845, file: !1728, line: 131, type: !1847, align: 8)
!1845 = !DILexicalBlockFile(scope: !1846, file: !1728, discriminator: 0)
!1846 = distinct !DILexicalBlock(scope: !1837, file: !181, line: 2336, column: 13)
!1847 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !1848, file: !2, size: 128, align: 64, elements: !1849, templateParams: !19, identifier: "ca6adac9bf5585e57d20f143c4c8a4b5")
!1848 = !DINamespace(name: "from_raw_parts", scope: !1839)
!1849 = !{!1850, !1852}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__data", scope: !1847, file: !2, baseType: !1851, size: 64, align: 64)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const u8", baseType: !205, size: 64, align: 64, dwarfAddressSpace: 0)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__len", scope: !1847, file: !2, baseType: !186, size: 64, align: 64, offset: 64)
!1853 = !DILocation(line: 131, column: 9, scope: !1836, inlinedAt: !1854)
!1854 = !DILocation(line: 78, column: 26, scope: !1855, inlinedAt: !1869)
!1855 = distinct !DISubprogram(name: "make_slice<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17h7877f74c6c65398bE", scope: !324, file: !1856, line: 74, type: !1829, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1857)
!1856 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "41903112aef4079fb81d70967f52d92d")
!1857 = !{!1858, !1860, !1863, !1866}
!1858 = !DILocalVariable(name: "self", scope: !1859, file: !1728, line: 131, type: !1831, align: 8)
!1859 = !DILexicalBlockFile(scope: !1855, file: !1728, discriminator: 0)
!1860 = !DILocalVariable(name: "start", scope: !1861, file: !1728, line: 131, type: !296, align: 8)
!1861 = !DILexicalBlockFile(scope: !1862, file: !1728, discriminator: 0)
!1862 = distinct !DILexicalBlock(scope: !1855, file: !1856, line: 18, column: 9)
!1863 = !DILocalVariable(name: "size", scope: !1864, file: !1728, line: 131, type: !9, align: 8)
!1864 = !DILexicalBlockFile(scope: !1865, file: !1728, discriminator: 0)
!1865 = distinct !DILexicalBlock(scope: !1862, file: !1856, line: 19, column: 9)
!1866 = !DILocalVariable(name: "diff", scope: !1867, file: !1728, line: 131, type: !9, align: 8)
!1867 = !DILexicalBlockFile(scope: !1868, file: !1728, discriminator: 0)
!1868 = distinct !DILexicalBlock(scope: !1865, file: !1856, line: 29, column: 13)
!1869 = !DILocation(line: 131, column: 9, scope: !1828)
!1870 = !DILocation(line: 131, column: 9, scope: !1859, inlinedAt: !1869)
!1871 = !DILocalVariable(name: "self", scope: !1872, file: !1728, line: 131, type: !296, align: 8)
!1872 = !DILexicalBlockFile(scope: !1873, file: !1728, discriminator: 0)
!1873 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9a87f4e9cb3e4acdE", scope: !296, file: !582, line: 330, type: !601, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1874)
!1874 = !{!1871}
!1875 = !DILocation(line: 131, column: 9, scope: !1872, inlinedAt: !1876)
!1876 = !DILocation(line: 78, column: 41, scope: !1855, inlinedAt: !1869)
!1877 = !DILocation(line: 131, column: 9, scope: !1861, inlinedAt: !1869)
!1878 = !DILocation(line: 131, column: 9, scope: !1879, inlinedAt: !1881)
!1879 = !DILexicalBlockFile(scope: !1880, file: !1728, discriminator: 0)
!1880 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17h0a97709d6dd4aaceE", scope: !52, file: !1438, line: 314, type: !1439, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !19)
!1881 = !DILocation(line: 41, column: 5, scope: !1882, inlinedAt: !1885)
!1882 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17hffd71c0c9251dcc7E", scope: !325, file: !1728, line: 40, type: !1883, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !19)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{!9, !205}
!1885 = !DILocation(line: 19, column: 20, scope: !1862, inlinedAt: !1869)
!1886 = !DILocation(line: 131, column: 9, scope: !1864, inlinedAt: !1869)
!1887 = !DILocalVariable(name: "self", scope: !1888, file: !1728, line: 131, type: !205, align: 8)
!1888 = !DILexicalBlockFile(scope: !1889, file: !1728, discriminator: 0)
!1889 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hba9f781fadb3dbc2E", scope: !211, file: !199, line: 178, type: !1883, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1890)
!1890 = !{!1887}
!1891 = !DILocation(line: 131, column: 9, scope: !1888, inlinedAt: !1892)
!1892 = !DILocation(line: 23, column: 13, scope: !1865, inlinedAt: !1869)
!1893 = !DILocalVariable(name: "self", scope: !1894, file: !1728, line: 131, type: !9, align: 8)
!1894 = !DILexicalBlockFile(scope: !1895, file: !1728, discriminator: 0)
!1895 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h5e8f57e42e99a91fE", scope: !412, file: !411, line: 1231, type: !414, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !1896)
!1896 = !{!1893, !1897}
!1897 = !DILocalVariable(name: "rhs", scope: !1894, file: !1728, line: 131, type: !9, align: 8)
!1898 = !DILocation(line: 131, column: 9, scope: !1894, inlinedAt: !1892)
!1899 = !DILocalVariable(name: "self", scope: !1900, file: !1728, line: 131, type: !205, align: 8)
!1900 = !DILexicalBlockFile(scope: !1901, file: !1728, discriminator: 0)
!1901 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hba9f781fadb3dbc2E", scope: !211, file: !199, line: 178, type: !1883, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1902)
!1902 = !{!1899}
!1903 = !DILocation(line: 131, column: 9, scope: !1900, inlinedAt: !1904)
!1904 = !DILocation(line: 29, column: 47, scope: !1865, inlinedAt: !1869)
!1905 = !DILocalVariable(name: "self", scope: !1906, file: !1728, line: 131, type: !296, align: 8)
!1906 = !DILexicalBlockFile(scope: !1907, file: !1728, discriminator: 0)
!1907 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9a87f4e9cb3e4acdE", scope: !296, file: !582, line: 330, type: !601, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1908)
!1908 = !{!1905}
!1909 = !DILocation(line: 131, column: 9, scope: !1906, inlinedAt: !1910)
!1910 = !DILocation(line: 29, column: 65, scope: !1865, inlinedAt: !1869)
!1911 = !DILocalVariable(name: "self", scope: !1912, file: !1728, line: 131, type: !596, align: 8)
!1912 = !DILexicalBlockFile(scope: !1913, file: !1728, discriminator: 0)
!1913 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h2ee5bd2f378bcc94E", scope: !1147, file: !1146, line: 184, type: !1914, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1916)
!1914 = !DISubroutineType(types: !1915)
!1915 = !{!9, !596}
!1916 = !{!1911}
!1917 = !DILocation(line: 131, column: 9, scope: !1912, inlinedAt: !1910)
!1918 = !DILocation(line: 131, column: 9, scope: !1867, inlinedAt: !1869)
!1919 = !DILocalVariable(name: "data", scope: !1920, file: !1728, line: 131, type: !205, align: 8)
!1920 = !DILexicalBlockFile(scope: !1921, file: !1728, discriminator: 0)
!1921 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h7373ca004d48ab52E", scope: !202, file: !231, line: 695, type: !232, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1922)
!1922 = !{!1919, !1923}
!1923 = !DILocalVariable(name: "len", scope: !1920, file: !1728, line: 131, type: !9, align: 8)
!1924 = !DILocation(line: 131, column: 9, scope: !1920, inlinedAt: !1925)
!1925 = !DILocation(line: 97, column: 11, scope: !1837, inlinedAt: !1854)
!1926 = !DILocalVariable(name: "self", scope: !1927, file: !1728, line: 131, type: !205, align: 8)
!1927 = !DILexicalBlockFile(scope: !1928, file: !1728, discriminator: 0)
!1928 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hd6b9d95b1a9f609dE", scope: !211, file: !199, line: 46, type: !242, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !245, retainedNodes: !1929)
!1929 = !{!1926}
!1930 = !DILocation(line: 131, column: 9, scope: !1927, inlinedAt: !1931)
!1931 = !DILocation(line: 696, column: 20, scope: !1921, inlinedAt: !1925)
!1932 = !DILocalVariable(name: "data_address", scope: !1933, file: !1728, line: 131, type: !6, align: 8)
!1933 = !DILexicalBlockFile(scope: !1934, file: !1728, discriminator: 0)
!1934 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hd02f965c5715a8d2E", scope: !253, file: !252, line: 110, type: !254, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1935)
!1935 = !{!1932, !1936}
!1936 = !DILocalVariable(name: "metadata", scope: !1933, file: !1728, line: 131, type: !9, align: 8)
!1937 = !DILocation(line: 131, column: 9, scope: !1933, inlinedAt: !1938)
!1938 = !DILocation(line: 696, column: 5, scope: !1921, inlinedAt: !1925)
!1939 = !DILocation(line: 132, column: 6, scope: !1828)
!1940 = !DILocalVariable(name: "self", scope: !1941, file: !1728, line: 131, type: !296, align: 8)
!1941 = !DILexicalBlockFile(scope: !1942, file: !1728, discriminator: 0)
!1942 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9a87f4e9cb3e4acdE", scope: !296, file: !582, line: 330, type: !601, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1943)
!1943 = !{!1940}
!1944 = !DILocation(line: 131, column: 9, scope: !1941, inlinedAt: !1945)
!1945 = !DILocation(line: 23, column: 43, scope: !1865, inlinedAt: !1869)
!1946 = !DILocalVariable(name: "self", scope: !1947, file: !1728, line: 131, type: !596, align: 8)
!1947 = !DILexicalBlockFile(scope: !1948, file: !1728, discriminator: 0)
!1948 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h2ee5bd2f378bcc94E", scope: !1147, file: !1146, line: 184, type: !1914, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1949)
!1949 = !{!1946}
!1950 = !DILocation(line: 131, column: 9, scope: !1947, inlinedAt: !1945)
!1951 = distinct !DISubprogram(name: "into_iter<u8>", linkageName: "_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h673ba194fd678fa9E", scope: !1952, file: !1728, line: 23, type: !1700, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1953)
!1952 = !DINamespace(name: "{impl#0}", scope: !325)
!1953 = !{!1954}
!1954 = !DILocalVariable(name: "self", arg: 1, scope: !1951, file: !1728, line: 23, type: !662)
!1955 = !DILocation(line: 23, column: 18, scope: !1951)
!1956 = !DILocation(line: 24, column: 9, scope: !1951)
!1957 = !DILocalVariable(name: "self", scope: !1958, file: !1728, line: 24, type: !662, align: 8)
!1958 = !DILexicalBlockFile(scope: !1959, file: !1728, discriminator: 0)
!1959 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h4aacd776e8fe9725E", scope: !1615, file: !1614, line: 734, type: !1700, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !1960)
!1960 = !{!1957}
!1961 = !DILocation(line: 24, column: 9, scope: !1958, inlinedAt: !1956)
!1962 = !DILocation(line: 25, column: 6, scope: !1951)
!1963 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFull>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h5d7184cc4ed0a15fE", scope: !1964, file: !156, line: 17, type: !1965, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1606, retainedNodes: !1967)
!1964 = !DINamespace(name: "{impl#0}", scope: !158)
!1965 = !DISubroutineType(types: !1966)
!1966 = !{!662, !662, !1602, !732}
!1967 = !{!1968, !1969}
!1968 = !DILocalVariable(name: "self", arg: 1, scope: !1963, file: !156, line: 17, type: !662)
!1969 = !DILocalVariable(name: "index", arg: 2, scope: !1963, file: !156, line: 17, type: !1602)
!1970 = !DILocation(line: 17, column: 14, scope: !1963)
!1971 = !DILocation(line: 17, column: 21, scope: !1963)
!1972 = !DILocation(line: 18, column: 9, scope: !1963)
!1973 = !DILocation(line: 19, column: 6, scope: !1963)
!1974 = distinct !DISubprogram(name: "map<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::string::String, shlex::{impl#1}::next::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h53bfbfe835d9c253E", scope: !1087, file: !1406, line: 923, type: !1975, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1985, retainedNodes: !1980)
!1975 = !DISubroutineType(types: !1976)
!1976 = !{!1058, !1087, !1977}
!1977 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1978, file: !2, align: 8, elements: !19, identifier: "7795f8c2901a2a225da748727876b8b2")
!1978 = !DINamespace(name: "next", scope: !1979)
!1979 = !DINamespace(name: "{impl#1}", scope: !13)
!1980 = !{!1981, !1982, !1983}
!1981 = !DILocalVariable(name: "self", arg: 1, scope: !1974, file: !1406, line: 923, type: !1087)
!1982 = !DILocalVariable(name: "f", arg: 2, scope: !1974, file: !1406, line: 923, type: !1977)
!1983 = !DILocalVariable(name: "x", scope: !1984, file: !1406, line: 929, type: !287, align: 8)
!1984 = distinct !DILexicalBlock(scope: !1974, file: !1406, line: 929, column: 13)
!1985 = !{!469, !1986, !1987}
!1986 = !DITemplateTypeParameter(name: "U", type: !283)
!1987 = !DITemplateTypeParameter(name: "F", type: !1977)
!1988 = !DILocation(line: 923, column: 28, scope: !1974)
!1989 = !DILocation(line: 923, column: 34, scope: !1974)
!1990 = !DILocation(line: 929, column: 18, scope: !1984)
!1991 = !DILocation(line: 928, column: 15, scope: !1974)
!1992 = !DILocation(line: 928, column: 9, scope: !1974)
!1993 = !DILocation(line: 930, column: 21, scope: !1974)
!1994 = !DILocation(line: 929, column: 18, scope: !1974)
!1995 = !DILocation(line: 929, column: 29, scope: !1984)
!1996 = !DILocation(line: 929, column: 31, scope: !1984)
!1997 = !DILocation(line: 929, column: 24, scope: !1984)
!1998 = !DILocation(line: 929, column: 33, scope: !1974)
!1999 = !DILocation(line: 932, column: 5, scope: !1974)
!2000 = !DILocation(line: 932, column: 6, scope: !1974)
!2001 = distinct !DISubprogram(name: "copied<u8>", linkageName: "_ZN4core6option19Option$LT$$RF$T$GT$6copied17ha9fbd977121fc3d6E", scope: !2002, file: !1406, line: 1748, type: !2013, scopeLine: 1748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2026)
!2002 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&u8>", scope: !783, file: !2, size: 64, align: 64, elements: !2003, templateParams: !19, identifier: "bbf278434900ebc767cf4d1ba91a7023")
!2003 = !{!2004}
!2004 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2002, file: !2, size: 64, align: 64, elements: !2005, templateParams: !19, identifier: "101fb69dcd65b49303b4d10b55dcffb", discriminator: !2012)
!2005 = !{!2006, !2008}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2004, file: !2, baseType: !2007, size: 64, align: 64, extraData: i64 0)
!2007 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2002, file: !2, size: 64, align: 64, elements: !19, templateParams: !331, identifier: "bd32561e41222bd8701ecbec194b1aa7")
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2004, file: !2, baseType: !2009, size: 64, align: 64)
!2009 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2002, file: !2, size: 64, align: 64, elements: !2010, templateParams: !331, identifier: "728806a049c182f2a5c33d7fd0303de1")
!2010 = !{!2011}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2009, file: !2, baseType: !333, size: 64, align: 64)
!2012 = !DIDerivedType(tag: DW_TAG_member, scope: !2002, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!2013 = !DISubroutineType(types: !2014)
!2014 = !{!2015, !2002}
!2015 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u8>", scope: !783, file: !2, size: 16, align: 8, elements: !2016, templateParams: !19, identifier: "65ae0e18105bdc577eb3ca49b06b3677")
!2016 = !{!2017}
!2017 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2015, file: !2, size: 16, align: 8, elements: !2018, templateParams: !19, identifier: "88432b888f172e6554107ea8099bcf12", discriminator: !2025)
!2018 = !{!2019, !2021}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2017, file: !2, baseType: !2020, size: 16, align: 8, extraData: i64 0)
!2020 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2015, file: !2, size: 16, align: 8, elements: !19, templateParams: !190, identifier: "6864665ee9c789837278808653d08bd9")
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2017, file: !2, baseType: !2022, size: 16, align: 8, extraData: i64 1)
!2022 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2015, file: !2, size: 16, align: 8, elements: !2023, templateParams: !190, identifier: "14747ccbd03bf6e789eba9ee51901f26")
!2023 = !{!2024}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2022, file: !2, baseType: !124, size: 8, align: 8, offset: 8)
!2025 = !DIDerivedType(tag: DW_TAG_member, scope: !2015, file: !2, baseType: !124, size: 8, align: 8, flags: DIFlagArtificial)
!2026 = !{!2027, !2028}
!2027 = !DILocalVariable(name: "self", arg: 1, scope: !2001, file: !1406, line: 1748, type: !2002)
!2028 = !DILocalVariable(name: "v", scope: !2029, file: !1406, line: 1755, type: !124, align: 1)
!2029 = distinct !DILexicalBlock(scope: !2001, file: !1406, line: 1755, column: 13)
!2030 = !DILocation(line: 1748, column: 25, scope: !2001)
!2031 = !DILocation(line: 1754, column: 15, scope: !2001)
!2032 = !DILocation(line: 1754, column: 9, scope: !2001)
!2033 = !DILocation(line: 1756, column: 21, scope: !2001)
!2034 = !DILocation(line: 1755, column: 19, scope: !2001)
!2035 = !DILocation(line: 1755, column: 19, scope: !2029)
!2036 = !DILocation(line: 1755, column: 25, scope: !2029)
!2037 = !DILocation(line: 1755, column: 31, scope: !2001)
!2038 = !DILocation(line: 1758, column: 6, scope: !2001)
!2039 = distinct !DISubprogram(name: "unwrap<alloc::borrow::Cow<[u8]>, shlex::QuoteError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h24a86ad913b8503bE", scope: !2040, file: !673, line: 1101, type: !2068, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2061, retainedNodes: !2070)
!2040 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::borrow::Cow<[u8]>, shlex::QuoteError>", scope: !675, file: !2, size: 256, align: 64, elements: !2041, templateParams: !19, identifier: "f395d60f99f39dd09a55f7d9adccadb0")
!2041 = !{!2042}
!2042 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2040, file: !2, size: 256, align: 64, elements: !2043, templateParams: !19, identifier: "cd8d99ca68ada164666b7739813cff13", discriminator: !2067)
!2043 = !{!2044, !2063}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2042, file: !2, baseType: !2045, size: 256, align: 64)
!2045 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2040, file: !2, size: 256, align: 64, elements: !2046, templateParams: !2061, identifier: "b16a9ffc4cfd5b7c422bc78e3f928c16")
!2046 = !{!2047}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2045, file: !2, baseType: !2048, size: 256, align: 64)
!2048 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cow<[u8]>", scope: !687, file: !2, size: 256, align: 64, elements: !2049, templateParams: !19, identifier: "28bdba6c85a845436ff7a8fe67f37686")
!2049 = !{!2050}
!2050 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2048, file: !2, size: 256, align: 64, elements: !2051, templateParams: !19, identifier: "b37c1aa7ef8144f4f46e929d4653bb15", discriminator: !2060)
!2051 = !{!2052, !2056}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "Borrowed", scope: !2050, file: !2, baseType: !2053, size: 256, align: 64, extraData: i64 0)
!2053 = !DICompositeType(tag: DW_TAG_structure_type, name: "Borrowed", scope: !2048, file: !2, size: 256, align: 64, elements: !2054, templateParams: !699, identifier: "c51eefd1126c403d3a0ae72608e976d8")
!2054 = !{!2055}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2053, file: !2, baseType: !662, size: 128, align: 64, offset: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "Owned", scope: !2050, file: !2, baseType: !2057, size: 256, align: 64, extraData: i64 1)
!2057 = !DICompositeType(tag: DW_TAG_structure_type, name: "Owned", scope: !2048, file: !2, size: 256, align: 64, elements: !2058, templateParams: !699, identifier: "a159e2165670c242bd000892f7e5d9c1")
!2058 = !{!2059}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2057, file: !2, baseType: !287, size: 192, align: 64, offset: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, scope: !2048, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!2061 = !{!2062, !708}
!2062 = !DITemplateTypeParameter(name: "T", type: !2048)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2042, file: !2, baseType: !2064, size: 256, align: 64, extraData: i64 2)
!2064 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2040, file: !2, size: 256, align: 64, elements: !2065, templateParams: !2061, identifier: "8a307edf2ec2f709d0a98bbd7d88232d")
!2065 = !{!2066}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2064, file: !2, baseType: !12, align: 8)
!2067 = !DIDerivedType(tag: DW_TAG_member, scope: !2040, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!2068 = !DISubroutineType(types: !2069)
!2069 = !{!2048, !2040, !732}
!2070 = !{!2071, !2072, !2074}
!2071 = !DILocalVariable(name: "self", arg: 1, scope: !2039, file: !673, line: 1101, type: !2040)
!2072 = !DILocalVariable(name: "t", scope: !2073, file: !673, line: 1106, type: !2048, align: 8)
!2073 = distinct !DILexicalBlock(scope: !2039, file: !673, line: 1106, column: 13)
!2074 = !DILocalVariable(name: "e", scope: !2075, file: !673, line: 1107, type: !12, align: 1)
!2075 = distinct !DILexicalBlock(scope: !2039, file: !673, line: 1107, column: 13)
!2076 = !DILocation(line: 1106, column: 16, scope: !2073)
!2077 = !DILocation(line: 1101, column: 19, scope: !2039)
!2078 = !DILocation(line: 1107, column: 17, scope: !2075)
!2079 = !DILocation(line: 1105, column: 15, scope: !2039)
!2080 = !{i64 0, i64 3}
!2081 = !DILocation(line: 1105, column: 9, scope: !2039)
!2082 = !DILocation(line: 1106, column: 16, scope: !2039)
!2083 = !DILocation(line: 1109, column: 6, scope: !2039)
!2084 = !DILocation(line: 1107, column: 84, scope: !2075)
!2085 = !DILocation(line: 1107, column: 23, scope: !2075)
!2086 = !DILocation(line: 1107, column: 86, scope: !2039)
!2087 = !DILocation(line: 1101, column: 5, scope: !2039)
!2088 = distinct !DISubprogram(name: "unwrap<alloc::borrow::Cow<str>, shlex::QuoteError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h52fdcc2fb596ca3cE", scope: !678, file: !673, line: 1101, type: !2089, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !706, retainedNodes: !2091)
!2089 = !DISubroutineType(types: !2090)
!2090 = !{!686, !678, !732}
!2091 = !{!2092, !2093, !2095}
!2092 = !DILocalVariable(name: "self", arg: 1, scope: !2088, file: !673, line: 1101, type: !678)
!2093 = !DILocalVariable(name: "t", scope: !2094, file: !673, line: 1106, type: !686, align: 8)
!2094 = distinct !DILexicalBlock(scope: !2088, file: !673, line: 1106, column: 13)
!2095 = !DILocalVariable(name: "e", scope: !2096, file: !673, line: 1107, type: !12, align: 1)
!2096 = distinct !DILexicalBlock(scope: !2088, file: !673, line: 1107, column: 13)
!2097 = !DILocation(line: 1106, column: 16, scope: !2094)
!2098 = !DILocation(line: 1101, column: 19, scope: !2088)
!2099 = !DILocation(line: 1107, column: 17, scope: !2096)
!2100 = !DILocation(line: 1105, column: 15, scope: !2088)
!2101 = !DILocation(line: 1105, column: 9, scope: !2088)
!2102 = !DILocation(line: 1106, column: 16, scope: !2088)
!2103 = !DILocation(line: 1109, column: 6, scope: !2088)
!2104 = !DILocation(line: 1107, column: 84, scope: !2096)
!2105 = !DILocation(line: 1107, column: 23, scope: !2096)
!2106 = !DILocation(line: 1107, column: 86, scope: !2088)
!2107 = !DILocation(line: 1101, column: 5, scope: !2088)
!2108 = distinct !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveError, alloc::raw_vec::finish_grow::{closure_env#1}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h3901e85ad527814eE", scope: !2109, file: !673, line: 852, type: !2129, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2158, retainedNodes: !2151)
!2109 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", scope: !675, file: !2, size: 128, align: 64, elements: !2110, templateParams: !19, identifier: "326c2eceea8ace7e7c754e4033de99df")
!2110 = !{!2111}
!2111 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2109, file: !2, size: 128, align: 64, elements: !2112, templateParams: !19, identifier: "55535437789a1bb6b6e72f8531454ed7", discriminator: !2128)
!2112 = !{!2113, !2124}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2111, file: !2, baseType: !2114, size: 128, align: 64)
!2114 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2109, file: !2, size: 128, align: 64, elements: !2115, templateParams: !2120, identifier: "ba797c89d5b07ad053fbf7cf4701a55")
!2115 = !{!2116}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2114, file: !2, baseType: !2117, size: 128, align: 64)
!2117 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8]>", scope: !279, file: !2, size: 128, align: 64, elements: !2118, templateParams: !190, identifier: "5fc58ef498feac33c505ded838596228")
!2118 = !{!2119}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2117, file: !2, baseType: !162, size: 128, align: 64)
!2120 = !{!2121, !2122}
!2121 = !DITemplateTypeParameter(name: "T", type: !2117)
!2122 = !DITemplateTypeParameter(name: "E", type: !2123)
!2123 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !635, file: !2, align: 8, elements: !19, identifier: "34d6c5a45c099706becbbcb30500973a")
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2111, file: !2, baseType: !2125, size: 128, align: 64, extraData: i64 0)
!2125 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2109, file: !2, size: 128, align: 64, elements: !2126, templateParams: !2120, identifier: "136305b53d5a9b78b331b3b0fa91ec26")
!2126 = !{!2127}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2125, file: !2, baseType: !2123, align: 8)
!2128 = !DIDerivedType(tag: DW_TAG_member, scope: !2109, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!2129 = !DISubroutineType(types: !2130)
!2130 = !{!2131, !2109, !2146}
!2131 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", scope: !675, file: !2, size: 192, align: 64, elements: !2132, templateParams: !19, identifier: "601fd7588d09095b28b20a9eb093c288")
!2132 = !{!2133}
!2133 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2131, file: !2, size: 192, align: 64, elements: !2134, templateParams: !19, identifier: "3025750a6e319fc619c06f01e4832005", discriminator: !2145)
!2134 = !{!2135, !2141}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2133, file: !2, baseType: !2136, size: 192, align: 64, extraData: i64 0)
!2136 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2131, file: !2, size: 192, align: 64, elements: !2137, templateParams: !2139, identifier: "c3a563ea9d0ebe44c356aab410dc20ec")
!2137 = !{!2138}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2136, file: !2, baseType: !2117, size: 128, align: 64, offset: 64)
!2139 = !{!2121, !2140}
!2140 = !DITemplateTypeParameter(name: "E", type: !620)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2133, file: !2, baseType: !2142, size: 192, align: 64, extraData: i64 1)
!2142 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2131, file: !2, size: 192, align: 64, elements: !2143, templateParams: !2139, identifier: "b98766a8ef41cfa7c1a20700f8c2ac67")
!2143 = !{!2144}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2142, file: !2, baseType: !620, size: 128, align: 64, offset: 64)
!2145 = !DIDerivedType(tag: DW_TAG_member, scope: !2131, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!2146 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<alloc::alloc::Global>", scope: !2147, file: !2, size: 64, align: 64, elements: !2148, templateParams: !19, identifier: "d5ca5ecf61bc300819ddcb9ae83470a1")
!2147 = !DINamespace(name: "finish_grow", scope: !144)
!2148 = !{!2149}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__new_layout", scope: !2146, file: !2, baseType: !2150, size: 64, align: 64)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::alloc::layout::Layout", baseType: !633, size: 64, align: 64, dwarfAddressSpace: 0)
!2151 = !{!2152, !2153, !2154, !2156}
!2152 = !DILocalVariable(name: "self", arg: 1, scope: !2108, file: !673, line: 852, type: !2109)
!2153 = !DILocalVariable(name: "op", arg: 2, scope: !2108, file: !673, line: 852, type: !2146)
!2154 = !DILocalVariable(name: "t", scope: !2155, file: !673, line: 854, type: !2117, align: 8)
!2155 = distinct !DILexicalBlock(scope: !2108, file: !673, line: 854, column: 13)
!2156 = !DILocalVariable(name: "e", scope: !2157, file: !673, line: 855, type: !2123, align: 1)
!2157 = distinct !DILexicalBlock(scope: !2108, file: !673, line: 855, column: 13)
!2158 = !{!2121, !2122, !2159, !2160}
!2159 = !DITemplateTypeParameter(name: "F", type: !620)
!2160 = !DITemplateTypeParameter(name: "O", type: !2146)
!2161 = !DILocation(line: 852, column: 42, scope: !2108)
!2162 = !DILocation(line: 852, column: 48, scope: !2108)
!2163 = !DILocation(line: 855, column: 17, scope: !2157)
!2164 = !DILocation(line: 853, column: 15, scope: !2108)
!2165 = !DILocation(line: 853, column: 9, scope: !2108)
!2166 = !DILocation(line: 854, column: 16, scope: !2108)
!2167 = !DILocation(line: 854, column: 16, scope: !2155)
!2168 = !DILocation(line: 854, column: 22, scope: !2155)
!2169 = !DILocation(line: 854, column: 26, scope: !2108)
!2170 = !DILocation(line: 855, column: 27, scope: !2157)
!2171 = !DILocation(line: 855, column: 23, scope: !2157)
!2172 = !DILocation(line: 855, column: 32, scope: !2108)
!2173 = !DILocation(line: 857, column: 5, scope: !2108)
!2174 = !DILocation(line: 857, column: 6, scope: !2108)
!2175 = distinct !DISubprogram(name: "map_err<(), alloc::collections::TryReserveError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::handle_reserve::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha550cd7b6afb3594E", scope: !2176, file: !673, line: 852, type: !2190, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2216, retainedNodes: !2209)
!2176 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveError>", scope: !675, file: !2, size: 128, align: 64, elements: !2177, templateParams: !19, identifier: "4b89620c7f2c166f553026a950f3f2d2")
!2177 = !{!2178}
!2178 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2176, file: !2, size: 128, align: 64, elements: !2179, templateParams: !19, identifier: "7cb265f2a07c8821328b46cc3c388b7f", discriminator: !2189)
!2179 = !{!2180, !2185}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2178, file: !2, baseType: !2181, size: 128, align: 64, extraData: i64 -9223372036854775807)
!2181 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2176, file: !2, size: 128, align: 64, elements: !2182, templateParams: !2184, identifier: "fdce6ff40bcf3f7ab3b51ba04b7afc44")
!2182 = !{!2183}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2181, file: !2, baseType: !7, align: 8)
!2184 = !{!766, !2140}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2178, file: !2, baseType: !2186, size: 128, align: 64)
!2186 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2176, file: !2, size: 128, align: 64, elements: !2187, templateParams: !2184, identifier: "d84ca0f977a325112ceaab4e30797620")
!2187 = !{!2188}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2186, file: !2, baseType: !620, size: 128, align: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, scope: !2176, file: !2, baseType: !54, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!2190 = !DISubroutineType(types: !2191)
!2191 = !{!2192, !2176, !2207}
!2192 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveErrorKind>", scope: !675, file: !2, size: 128, align: 64, elements: !2193, templateParams: !19, identifier: "cdc62e1ada228a0a3eeb1363cc168dd1")
!2193 = !{!2194}
!2194 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2192, file: !2, size: 128, align: 64, elements: !2195, templateParams: !19, identifier: "c07cde87a483df02fa92a38d58df4905", discriminator: !2206)
!2195 = !{!2196, !2202}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2194, file: !2, baseType: !2197, size: 128, align: 64, extraData: i64 -9223372036854775807)
!2197 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2192, file: !2, size: 128, align: 64, elements: !2198, templateParams: !2200, identifier: "ef69269b9f8a8dcfd892b17f0cd69f3b")
!2198 = !{!2199}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2197, file: !2, baseType: !7, align: 8)
!2200 = !{!766, !2201}
!2201 = !DITemplateTypeParameter(name: "E", type: !623)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2194, file: !2, baseType: !2203, size: 128, align: 64)
!2203 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2192, file: !2, size: 128, align: 64, elements: !2204, templateParams: !2200, identifier: "d1e764ecae8c88012ac4b46bb3413624")
!2204 = !{!2205}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2203, file: !2, baseType: !623, size: 128, align: 64)
!2206 = !DIDerivedType(tag: DW_TAG_member, scope: !2192, file: !2, baseType: !54, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!2207 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !2208, file: !2, align: 8, elements: !19, identifier: "38662dde61d7b1e78dacba2cb2773d17")
!2208 = !DINamespace(name: "handle_reserve", scope: !144)
!2209 = !{!2210, !2211, !2212, !2214}
!2210 = !DILocalVariable(name: "self", arg: 1, scope: !2175, file: !673, line: 852, type: !2176)
!2211 = !DILocalVariable(name: "op", arg: 2, scope: !2175, file: !673, line: 852, type: !2207)
!2212 = !DILocalVariable(name: "t", scope: !2213, file: !673, line: 854, type: !7, align: 1)
!2213 = distinct !DILexicalBlock(scope: !2175, file: !673, line: 854, column: 13)
!2214 = !DILocalVariable(name: "e", scope: !2215, file: !673, line: 855, type: !620, align: 8)
!2215 = distinct !DILexicalBlock(scope: !2175, file: !673, line: 855, column: 13)
!2216 = !{!766, !2140, !2217, !2218}
!2217 = !DITemplateTypeParameter(name: "F", type: !623)
!2218 = !DITemplateTypeParameter(name: "O", type: !2207)
!2219 = !DILocation(line: 852, column: 42, scope: !2175)
!2220 = !DILocation(line: 852, column: 48, scope: !2175)
!2221 = !DILocation(line: 854, column: 16, scope: !2213)
!2222 = !DILocation(line: 853, column: 15, scope: !2175)
!2223 = !{i64 0, i64 -9223372036854775806}
!2224 = !DILocation(line: 853, column: 9, scope: !2175)
!2225 = !DILocation(line: 854, column: 22, scope: !2213)
!2226 = !DILocation(line: 854, column: 26, scope: !2175)
!2227 = !DILocation(line: 855, column: 17, scope: !2175)
!2228 = !DILocation(line: 855, column: 17, scope: !2215)
!2229 = !DILocation(line: 855, column: 27, scope: !2215)
!2230 = !DILocation(line: 855, column: 23, scope: !2215)
!2231 = !DILocation(line: 855, column: 32, scope: !2175)
!2232 = !DILocation(line: 857, column: 5, scope: !2175)
!2233 = !DILocation(line: 857, column: 6, scope: !2175)
!2234 = distinct !DISubprogram(name: "map_err<core::alloc::layout::Layout, core::alloc::layout::LayoutError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::finish_grow::{closure_env#0}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hdcb1b1e7211b2039E", scope: !1265, file: !673, line: 852, type: !2235, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2259, retainedNodes: !2252)
!2235 = !DISubroutineType(types: !2236)
!2236 = !{!2237, !1265, !2251}
!2237 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", scope: !675, file: !2, size: 192, align: 64, elements: !2238, templateParams: !19, identifier: "b9de8b8c009cd0becb59806c6ce8cc5f")
!2238 = !{!2239}
!2239 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2237, file: !2, size: 192, align: 64, elements: !2240, templateParams: !19, identifier: "2c02efbe3ea4d75026f025a2705c6c96", discriminator: !2250)
!2240 = !{!2241, !2246}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2239, file: !2, baseType: !2242, size: 192, align: 64, extraData: i64 0)
!2242 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2237, file: !2, size: 192, align: 64, elements: !2243, templateParams: !2245, identifier: "d52268884abf5d8c9a943cd013eaf021")
!2243 = !{!2244}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2242, file: !2, baseType: !633, size: 128, align: 64, offset: 64)
!2245 = !{!1274, !2201}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2239, file: !2, baseType: !2247, size: 192, align: 64, extraData: i64 1)
!2247 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2237, file: !2, size: 192, align: 64, elements: !2248, templateParams: !2245, identifier: "8793f3a2507382c45ebef37ef1c4bc40")
!2248 = !{!2249}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2247, file: !2, baseType: !623, size: 128, align: 64, offset: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, scope: !2237, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!2251 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::alloc::Global>", scope: !2147, file: !2, align: 8, elements: !19, identifier: "f2bae2d168b0d8fd3c59ff569110796d")
!2252 = !{!2253, !2254, !2255, !2257}
!2253 = !DILocalVariable(name: "self", arg: 1, scope: !2234, file: !673, line: 852, type: !1265)
!2254 = !DILocalVariable(name: "op", arg: 2, scope: !2234, file: !673, line: 852, type: !2251)
!2255 = !DILocalVariable(name: "t", scope: !2256, file: !673, line: 854, type: !633, align: 8)
!2256 = distinct !DILexicalBlock(scope: !2234, file: !673, line: 854, column: 13)
!2257 = !DILocalVariable(name: "e", scope: !2258, file: !673, line: 855, type: !1276, align: 1)
!2258 = distinct !DILexicalBlock(scope: !2234, file: !673, line: 855, column: 13)
!2259 = !{!1274, !1275, !2217, !2260}
!2260 = !DITemplateTypeParameter(name: "O", type: !2251)
!2261 = !DILocation(line: 852, column: 42, scope: !2234)
!2262 = !DILocation(line: 852, column: 48, scope: !2234)
!2263 = !DILocation(line: 855, column: 17, scope: !2258)
!2264 = !DILocation(line: 853, column: 15, scope: !2234)
!2265 = !DILocation(line: 853, column: 9, scope: !2234)
!2266 = !DILocation(line: 854, column: 16, scope: !2234)
!2267 = !DILocation(line: 854, column: 16, scope: !2256)
!2268 = !DILocation(line: 854, column: 22, scope: !2256)
!2269 = !DILocation(line: 854, column: 26, scope: !2234)
!2270 = !DILocation(line: 855, column: 27, scope: !2258)
!2271 = !DILocation(line: 855, column: 23, scope: !2258)
!2272 = !DILocation(line: 855, column: 32, scope: !2234)
!2273 = !DILocation(line: 857, column: 5, scope: !2234)
!2274 = !DILocation(line: 857, column: 6, scope: !2234)
!2275 = distinct !DISubprogram(name: "from<core::alloc::AllocError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2fbee86a55f307ceE", scope: !2277, file: !2276, line: 559, type: !2278, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2282, retainedNodes: !2280)
!2276 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e9a22d2b51b4cfd278a09c9d531e27c4")
!2277 = !DINamespace(name: "{impl#4}", scope: !723)
!2278 = !DISubroutineType(types: !2279)
!2279 = !{null, !2123}
!2280 = !{!2281}
!2281 = !DILocalVariable(name: "t", arg: 1, scope: !2275, file: !2276, line: 559, type: !2123)
!2282 = !{!2283}
!2283 = !DITemplateTypeParameter(name: "T", type: !2123)
!2284 = !DILocation(line: 559, column: 13, scope: !2275)
!2285 = !DILocation(line: 561, column: 6, scope: !2275)
!2286 = distinct !DISubprogram(name: "from<core::alloc::layout::LayoutError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h53d72257060e3473E", scope: !2277, file: !2276, line: 559, type: !2287, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2291, retainedNodes: !2289)
!2287 = !DISubroutineType(types: !2288)
!2288 = !{null, !1276}
!2289 = !{!2290}
!2290 = !DILocalVariable(name: "t", arg: 1, scope: !2286, file: !2276, line: 559, type: !1276)
!2291 = !{!2292}
!2292 = !DITemplateTypeParameter(name: "T", type: !1276)
!2293 = !DILocation(line: 559, column: 13, scope: !2286)
!2294 = !DILocation(line: 561, column: 6, scope: !2286)
!2295 = distinct !DISubprogram(name: "from<alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha098773fc34e53f9E", scope: !2277, file: !2276, line: 559, type: !2296, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2300, retainedNodes: !2298)
!2296 = !DISubroutineType(types: !2297)
!2297 = !{!620, !620}
!2298 = !{!2299}
!2299 = !DILocalVariable(name: "t", arg: 1, scope: !2295, file: !2276, line: 559, type: !620)
!2300 = !{!2301}
!2301 = !DITemplateTypeParameter(name: "T", type: !620)
!2302 = !DILocation(line: 559, column: 13, scope: !2295)
!2303 = !DILocation(line: 561, column: 6, scope: !2295)
!2304 = distinct !DISubprogram(name: "from<shlex::QuoteError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha57a116830ea7e61E", scope: !2277, file: !2276, line: 559, type: !2305, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !981, retainedNodes: !2307)
!2305 = !DISubroutineType(types: !2306)
!2306 = !{null, !12}
!2307 = !{!2308}
!2308 = !DILocalVariable(name: "t", arg: 1, scope: !2304, file: !2276, line: 559, type: !12)
!2309 = !DILocation(line: 559, column: 13, scope: !2304)
!2310 = !DILocation(line: 561, column: 6, scope: !2304)
!2311 = distinct !DISubprogram(name: "into<core::ptr::unique::Unique<u8>, core::ptr::non_null::NonNull<u8>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h2b90392b95753282E", scope: !2312, file: !2276, line: 549, type: !584, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2315, retainedNodes: !2313)
!2312 = !DINamespace(name: "{impl#3}", scope: !723)
!2313 = !{!2314}
!2314 = !DILocalVariable(name: "self", arg: 1, scope: !2311, file: !2276, line: 549, type: !293)
!2315 = !{!2316, !2317}
!2316 = !DITemplateTypeParameter(name: "T", type: !293)
!2317 = !DITemplateTypeParameter(name: "U", type: !296)
!2318 = !DILocation(line: 549, column: 13, scope: !2311)
!2319 = !DILocation(line: 550, column: 9, scope: !2311)
!2320 = !DILocation(line: 551, column: 6, scope: !2311)
!2321 = distinct !DISubprogram(name: "into<&str, alloc::borrow::Cow<str>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h70efd7bf57560094E", scope: !2312, file: !2276, line: 549, type: !2322, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2326, retainedNodes: !2324)
!2322 = !DISubroutineType(types: !2323)
!2323 = !{!686, !695}
!2324 = !{!2325}
!2325 = !DILocalVariable(name: "self", arg: 1, scope: !2321, file: !2276, line: 549, type: !695)
!2326 = !{!2327, !2328}
!2327 = !DITemplateTypeParameter(name: "T", type: !695)
!2328 = !DITemplateTypeParameter(name: "U", type: !686)
!2329 = !DILocation(line: 549, column: 13, scope: !2321)
!2330 = !DILocation(line: 550, column: 9, scope: !2321)
!2331 = !DILocation(line: 551, column: 6, scope: !2321)
!2332 = distinct !DISubprogram(name: "into<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::borrow::Cow<[u8]>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h7abf799581f2b754E", scope: !2312, file: !2276, line: 549, type: !2333, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2337, retainedNodes: !2335)
!2333 = !DISubroutineType(types: !2334)
!2334 = !{!2048, !287}
!2335 = !{!2336}
!2336 = !DILocalVariable(name: "self", arg: 1, scope: !2332, file: !2276, line: 549, type: !287)
!2337 = !{!469, !2338}
!2338 = !DITemplateTypeParameter(name: "U", type: !2048)
!2339 = !DILocation(line: 549, column: 13, scope: !2332)
!2340 = !DILocation(line: 550, column: 17, scope: !2332)
!2341 = !DILocation(line: 550, column: 9, scope: !2332)
!2342 = !DILocation(line: 551, column: 6, scope: !2332)
!2343 = distinct !DISubprogram(name: "into<&[u8], alloc::borrow::Cow<[u8]>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h9f5b2bfd9c5e1a67E", scope: !2312, file: !2276, line: 549, type: !2344, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2348, retainedNodes: !2346)
!2344 = !DISubroutineType(types: !2345)
!2345 = !{!2048, !662}
!2346 = !{!2347}
!2347 = !DILocalVariable(name: "self", arg: 1, scope: !2343, file: !2276, line: 549, type: !662)
!2348 = !{!2349, !2338}
!2349 = !DITemplateTypeParameter(name: "T", type: !662)
!2350 = !DILocation(line: 549, column: 13, scope: !2343)
!2351 = !DILocation(line: 550, column: 9, scope: !2343)
!2352 = !DILocation(line: 551, column: 6, scope: !2343)
!2353 = distinct !DISubprogram(name: "into<alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbe9ccf7077ea30d7E", scope: !2312, file: !2276, line: 549, type: !618, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2356, retainedNodes: !2354)
!2354 = !{!2355}
!2355 = !DILocalVariable(name: "self", arg: 1, scope: !2353, file: !2276, line: 549, type: !623)
!2356 = !{!2357, !2358}
!2357 = !DITemplateTypeParameter(name: "T", type: !623)
!2358 = !DITemplateTypeParameter(name: "U", type: !620)
!2359 = !DILocation(line: 549, column: 13, scope: !2353)
!2360 = !DILocation(line: 550, column: 9, scope: !2353)
!2361 = !DILocation(line: 551, column: 6, scope: !2353)
!2362 = distinct !DISubprogram(name: "into<alloc::string::String, alloc::borrow::Cow<str>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17he05d00e77084f0ffE", scope: !2312, file: !2276, line: 549, type: !2363, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2367, retainedNodes: !2365)
!2363 = !DISubroutineType(types: !2364)
!2364 = !{!686, !283}
!2365 = !{!2366}
!2366 = !DILocalVariable(name: "self", arg: 1, scope: !2362, file: !2276, line: 549, type: !283)
!2367 = !{!310, !2328}
!2368 = !DILocation(line: 549, column: 13, scope: !2362)
!2369 = !DILocation(line: 550, column: 17, scope: !2362)
!2370 = !DILocation(line: 550, column: 9, scope: !2362)
!2371 = !DILocation(line: 551, column: 6, scope: !2362)
!2372 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17hec81cd16a2af355aE", scope: !287, file: !367, line: 424, type: !2373, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !19)
!2373 = !DISubroutineType(types: !2374)
!2374 = !{!287}
!2375 = !DILocation(line: 425, column: 20, scope: !2372)
!2376 = !DILocation(line: 425, column: 9, scope: !2372)
!2377 = !DILocation(line: 426, column: 6, scope: !2372)
!2378 = distinct !DISubprogram(name: "as_mut_ptr<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1d53eb0dd4b79cbfE", scope: !455, file: !367, line: 1204, type: !2379, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !2381)
!2379 = !DISubroutineType(types: !2380)
!2380 = !{!500, !571}
!2381 = !{!2382, !2383}
!2382 = !DILocalVariable(name: "self", arg: 1, scope: !2378, file: !367, line: 1204, type: !571)
!2383 = !DILocalVariable(name: "ptr", scope: !2384, file: !367, line: 1207, type: !500, align: 8)
!2384 = distinct !DILexicalBlock(scope: !2378, file: !367, line: 1207, column: 9)
!2385 = !DILocation(line: 1204, column: 23, scope: !2378)
!2386 = !DILocalVariable(name: "metadata", scope: !2387, file: !367, line: 1209, type: !7, align: 1)
!2387 = !DILexicalBlockFile(scope: !2388, file: !367, discriminator: 0)
!2388 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h60f6d629b03ad8dfE", scope: !253, file: !252, line: 127, type: !1134, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2389)
!2389 = !{!2390, !2386}
!2390 = !DILocalVariable(name: "data_address", scope: !2387, file: !367, line: 1209, type: !1136, align: 8)
!2391 = !DILocation(line: 1209, column: 21, scope: !2387, inlinedAt: !2392)
!2392 = !DILocation(line: 668, column: 5, scope: !2393, inlinedAt: !2394)
!2393 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17heb8f9a3561934949E", scope: !202, file: !231, line: 667, type: !1142, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !19)
!2394 = !DILocation(line: 38, column: 41, scope: !2395, inlinedAt: !2401)
!2395 = distinct !DISubprogram(name: "is_null<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h0401a792746516daE", scope: !1147, file: !1146, line: 35, type: !2396, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !2398)
!2396 = !DISubroutineType(types: !2397)
!2397 = !{!29, !500}
!2398 = !{!2399}
!2399 = !DILocalVariable(name: "self", scope: !2400, file: !367, line: 1209, type: !500, align: 8)
!2400 = !DILexicalBlockFile(scope: !2395, file: !367, discriminator: 0)
!2401 = !DILocation(line: 1209, column: 21, scope: !2384)
!2402 = !DILocation(line: 1207, column: 19, scope: !2378)
!2403 = !DILocalVariable(name: "self", scope: !2404, file: !367, line: 1207, type: !2408, align: 8)
!2404 = !DILexicalBlockFile(scope: !2405, file: !367, discriminator: 0)
!2405 = distinct !DISubprogram(name: "ptr<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hf48f77da96d28424E", scope: !458, file: !384, line: 223, type: !2406, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !2409)
!2406 = !DISubroutineType(types: !2407)
!2407 = !{!500, !2408}
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", baseType: !458, size: 64, align: 64, dwarfAddressSpace: 0)
!2409 = !{!2403}
!2410 = !DILocation(line: 1207, column: 19, scope: !2404, inlinedAt: !2402)
!2411 = !DILocalVariable(name: "self", scope: !2412, file: !367, line: 1207, type: !461, align: 8)
!2412 = !DILexicalBlockFile(scope: !2413, file: !367, discriminator: 0)
!2413 = distinct !DISubprogram(name: "as_ptr<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17heaf4bff5865274b7E", scope: !461, file: !593, line: 103, type: !2414, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !2416)
!2414 = !DISubroutineType(types: !2415)
!2415 = !{!500, !461}
!2416 = !{!2411}
!2417 = !DILocation(line: 1207, column: 19, scope: !2412, inlinedAt: !2418)
!2418 = !DILocation(line: 224, column: 9, scope: !2405, inlinedAt: !2402)
!2419 = !DILocalVariable(name: "self", scope: !2420, file: !367, line: 1207, type: !464, align: 8)
!2420 = !DILexicalBlockFile(scope: !2421, file: !367, discriminator: 0)
!2421 = distinct !DISubprogram(name: "as_ptr<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h3b260fc4361efc10E", scope: !464, file: !582, line: 330, type: !2422, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !2424)
!2422 = !DISubroutineType(types: !2423)
!2423 = !{!500, !464}
!2424 = !{!2419}
!2425 = !DILocation(line: 1207, column: 19, scope: !2420, inlinedAt: !2426)
!2426 = !DILocation(line: 104, column: 9, scope: !2413, inlinedAt: !2418)
!2427 = !DILocation(line: 1207, column: 13, scope: !2384)
!2428 = !DILocation(line: 1209, column: 21, scope: !2400, inlinedAt: !2401)
!2429 = !DILocalVariable(name: "self", scope: !2430, file: !367, line: 1209, type: !596, align: 8)
!2430 = !DILexicalBlockFile(scope: !2431, file: !367, discriminator: 0)
!2431 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h6e2b59b730b34919E", scope: !1147, file: !1146, line: 707, type: !1159, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2432)
!2432 = !{!2429, !2433}
!2433 = !DILocalVariable(name: "other", scope: !2430, file: !367, line: 1209, type: !596, align: 8)
!2434 = !DILocation(line: 1209, column: 21, scope: !2430, inlinedAt: !2435)
!2435 = !DILocation(line: 38, column: 9, scope: !2395, inlinedAt: !2401)
!2436 = !DILocation(line: 1209, column: 21, scope: !2437, inlinedAt: !2441)
!2437 = !DILexicalBlockFile(scope: !2438, file: !367, discriminator: 0)
!2438 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17hc7a864aee44084faE", scope: !202, file: !231, line: 569, type: !1168, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1172, retainedNodes: !2439)
!2439 = !{!2440}
!2440 = !DILocalVariable(name: "addr", scope: !2437, file: !367, line: 1209, type: !9, align: 8)
!2441 = !DILocation(line: 668, column: 24, scope: !2393, inlinedAt: !2394)
!2442 = !DILocation(line: 1209, column: 20, scope: !2384)
!2443 = !DILocation(line: 1209, column: 13, scope: !2384)
!2444 = !DILocation(line: 1212, column: 6, scope: !2378)
!2445 = distinct !DISubprogram(name: "as_mut_ptr<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h44fbfd7f7c84c396E", scope: !268, file: !367, line: 1204, type: !2446, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !2448)
!2446 = !DISubroutineType(types: !2447)
!2447 = !{!359, !441}
!2448 = !{!2449, !2450}
!2449 = !DILocalVariable(name: "self", arg: 1, scope: !2445, file: !367, line: 1204, type: !441)
!2450 = !DILocalVariable(name: "ptr", scope: !2451, file: !367, line: 1207, type: !359, align: 8)
!2451 = distinct !DILexicalBlock(scope: !2445, file: !367, line: 1207, column: 9)
!2452 = !DILocation(line: 1204, column: 23, scope: !2445)
!2453 = !DILocalVariable(name: "metadata", scope: !2454, file: !367, line: 1209, type: !7, align: 1)
!2454 = !DILexicalBlockFile(scope: !2455, file: !367, discriminator: 0)
!2455 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h60f6d629b03ad8dfE", scope: !253, file: !252, line: 127, type: !1134, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2456)
!2456 = !{!2457, !2453}
!2457 = !DILocalVariable(name: "data_address", scope: !2454, file: !367, line: 1209, type: !1136, align: 8)
!2458 = !DILocation(line: 1209, column: 21, scope: !2454, inlinedAt: !2459)
!2459 = !DILocation(line: 668, column: 5, scope: !2460, inlinedAt: !2461)
!2460 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17heb8f9a3561934949E", scope: !202, file: !231, line: 667, type: !1142, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !19)
!2461 = !DILocation(line: 38, column: 41, scope: !2462, inlinedAt: !2468)
!2462 = distinct !DISubprogram(name: "is_null<alloc::string::String>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h23635ba885e07f8fE", scope: !1147, file: !1146, line: 35, type: !2463, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !2465)
!2463 = !DISubroutineType(types: !2464)
!2464 = !{!29, !359}
!2465 = !{!2466}
!2466 = !DILocalVariable(name: "self", scope: !2467, file: !367, line: 1209, type: !359, align: 8)
!2467 = !DILexicalBlockFile(scope: !2462, file: !367, discriminator: 0)
!2468 = !DILocation(line: 1209, column: 21, scope: !2451)
!2469 = !DILocation(line: 1207, column: 19, scope: !2445)
!2470 = !DILocalVariable(name: "self", scope: !2471, file: !367, line: 1207, type: !2475, align: 8)
!2471 = !DILexicalBlockFile(scope: !2472, file: !367, discriminator: 0)
!2472 = distinct !DISubprogram(name: "ptr<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17he86e8bc854f68971E", scope: !271, file: !384, line: 223, type: !2473, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !2476)
!2473 = !DISubroutineType(types: !2474)
!2474 = !{!359, !2475}
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<alloc::string::String, alloc::alloc::Global>", baseType: !271, size: 64, align: 64, dwarfAddressSpace: 0)
!2476 = !{!2470}
!2477 = !DILocation(line: 1207, column: 19, scope: !2471, inlinedAt: !2469)
!2478 = !DILocalVariable(name: "self", scope: !2479, file: !367, line: 1207, type: !274, align: 8)
!2479 = !DILexicalBlockFile(scope: !2480, file: !367, discriminator: 0)
!2480 = distinct !DISubprogram(name: "as_ptr<alloc::string::String>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hc52c51585682edfbE", scope: !274, file: !593, line: 103, type: !2481, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !2483)
!2481 = !DISubroutineType(types: !2482)
!2482 = !{!359, !274}
!2483 = !{!2478}
!2484 = !DILocation(line: 1207, column: 19, scope: !2479, inlinedAt: !2485)
!2485 = !DILocation(line: 224, column: 9, scope: !2472, inlinedAt: !2469)
!2486 = !DILocalVariable(name: "self", scope: !2487, file: !367, line: 1207, type: !278, align: 8)
!2487 = !DILexicalBlockFile(scope: !2488, file: !367, discriminator: 0)
!2488 = distinct !DISubprogram(name: "as_ptr<alloc::string::String>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc136d2737ee99db8E", scope: !278, file: !582, line: 330, type: !2489, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !2491)
!2489 = !DISubroutineType(types: !2490)
!2490 = !{!359, !278}
!2491 = !{!2486}
!2492 = !DILocation(line: 1207, column: 19, scope: !2487, inlinedAt: !2493)
!2493 = !DILocation(line: 104, column: 9, scope: !2480, inlinedAt: !2485)
!2494 = !DILocation(line: 1207, column: 13, scope: !2451)
!2495 = !DILocation(line: 1209, column: 21, scope: !2467, inlinedAt: !2468)
!2496 = !DILocalVariable(name: "self", scope: !2497, file: !367, line: 1209, type: !596, align: 8)
!2497 = !DILexicalBlockFile(scope: !2498, file: !367, discriminator: 0)
!2498 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h6e2b59b730b34919E", scope: !1147, file: !1146, line: 707, type: !1159, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2499)
!2499 = !{!2496, !2500}
!2500 = !DILocalVariable(name: "other", scope: !2497, file: !367, line: 1209, type: !596, align: 8)
!2501 = !DILocation(line: 1209, column: 21, scope: !2497, inlinedAt: !2502)
!2502 = !DILocation(line: 38, column: 9, scope: !2462, inlinedAt: !2468)
!2503 = !DILocation(line: 1209, column: 21, scope: !2504, inlinedAt: !2508)
!2504 = !DILexicalBlockFile(scope: !2505, file: !367, discriminator: 0)
!2505 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17hc7a864aee44084faE", scope: !202, file: !231, line: 569, type: !1168, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1172, retainedNodes: !2506)
!2506 = !{!2507}
!2507 = !DILocalVariable(name: "addr", scope: !2504, file: !367, line: 1209, type: !9, align: 8)
!2508 = !DILocation(line: 668, column: 24, scope: !2460, inlinedAt: !2461)
!2509 = !DILocation(line: 1209, column: 20, scope: !2451)
!2510 = !DILocation(line: 1209, column: 13, scope: !2451)
!2511 = !DILocation(line: 1212, column: 6, scope: !2445)
!2512 = distinct !DISubprogram(name: "as_mut_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hcdf3ffb91c360be2E", scope: !287, file: !367, line: 1204, type: !2513, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !2515)
!2513 = !DISubroutineType(types: !2514)
!2514 = !{!596, !656}
!2515 = !{!2516, !2517}
!2516 = !DILocalVariable(name: "self", arg: 1, scope: !2512, file: !367, line: 1204, type: !656)
!2517 = !DILocalVariable(name: "ptr", scope: !2518, file: !367, line: 1207, type: !596, align: 8)
!2518 = distinct !DILexicalBlock(scope: !2512, file: !367, line: 1207, column: 9)
!2519 = !DILocation(line: 1204, column: 23, scope: !2512)
!2520 = !DILocalVariable(name: "metadata", scope: !2521, file: !367, line: 1209, type: !7, align: 1)
!2521 = !DILexicalBlockFile(scope: !2522, file: !367, discriminator: 0)
!2522 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h60f6d629b03ad8dfE", scope: !253, file: !252, line: 127, type: !1134, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2523)
!2523 = !{!2524, !2520}
!2524 = !DILocalVariable(name: "data_address", scope: !2521, file: !367, line: 1209, type: !1136, align: 8)
!2525 = !DILocation(line: 1209, column: 21, scope: !2521, inlinedAt: !2526)
!2526 = !DILocation(line: 668, column: 5, scope: !2527, inlinedAt: !2528)
!2527 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17heb8f9a3561934949E", scope: !202, file: !231, line: 667, type: !1142, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !19)
!2528 = !DILocation(line: 38, column: 41, scope: !2529, inlinedAt: !2533)
!2529 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hf43662837fe7ba09E", scope: !1147, file: !1146, line: 35, type: !1149, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2530)
!2530 = !{!2531}
!2531 = !DILocalVariable(name: "self", scope: !2532, file: !367, line: 1209, type: !596, align: 8)
!2532 = !DILexicalBlockFile(scope: !2529, file: !367, discriminator: 0)
!2533 = !DILocation(line: 1209, column: 21, scope: !2518)
!2534 = !DILocation(line: 1207, column: 19, scope: !2512)
!2535 = !DILocalVariable(name: "self", scope: !2536, file: !367, line: 1207, type: !2540, align: 8)
!2536 = !DILexicalBlockFile(scope: !2537, file: !367, discriminator: 0)
!2537 = distinct !DISubprogram(name: "ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h8722aba4f3cf1aebE", scope: !290, file: !384, line: 223, type: !2538, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !2541)
!2538 = !DISubroutineType(types: !2539)
!2539 = !{!596, !2540}
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !290, size: 64, align: 64, dwarfAddressSpace: 0)
!2541 = !{!2535}
!2542 = !DILocation(line: 1207, column: 19, scope: !2536, inlinedAt: !2534)
!2543 = !DILocalVariable(name: "self", scope: !2544, file: !367, line: 1207, type: !293, align: 8)
!2544 = !DILexicalBlockFile(scope: !2545, file: !367, discriminator: 0)
!2545 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h085f07d7bba47fe8E", scope: !293, file: !593, line: 103, type: !594, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2546)
!2546 = !{!2543}
!2547 = !DILocation(line: 1207, column: 19, scope: !2544, inlinedAt: !2548)
!2548 = !DILocation(line: 224, column: 9, scope: !2537, inlinedAt: !2534)
!2549 = !DILocalVariable(name: "self", scope: !2550, file: !367, line: 1207, type: !296, align: 8)
!2550 = !DILexicalBlockFile(scope: !2551, file: !367, discriminator: 0)
!2551 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9a87f4e9cb3e4acdE", scope: !296, file: !582, line: 330, type: !601, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2552)
!2552 = !{!2549}
!2553 = !DILocation(line: 1207, column: 19, scope: !2550, inlinedAt: !2554)
!2554 = !DILocation(line: 104, column: 9, scope: !2545, inlinedAt: !2548)
!2555 = !DILocation(line: 1207, column: 13, scope: !2518)
!2556 = !DILocation(line: 1209, column: 21, scope: !2532, inlinedAt: !2533)
!2557 = !DILocalVariable(name: "self", scope: !2558, file: !367, line: 1209, type: !596, align: 8)
!2558 = !DILexicalBlockFile(scope: !2559, file: !367, discriminator: 0)
!2559 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h6e2b59b730b34919E", scope: !1147, file: !1146, line: 707, type: !1159, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2560)
!2560 = !{!2557, !2561}
!2561 = !DILocalVariable(name: "other", scope: !2558, file: !367, line: 1209, type: !596, align: 8)
!2562 = !DILocation(line: 1209, column: 21, scope: !2558, inlinedAt: !2563)
!2563 = !DILocation(line: 38, column: 9, scope: !2529, inlinedAt: !2533)
!2564 = !DILocation(line: 1209, column: 21, scope: !2565, inlinedAt: !2569)
!2565 = !DILexicalBlockFile(scope: !2566, file: !367, discriminator: 0)
!2566 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17hc7a864aee44084faE", scope: !202, file: !231, line: 569, type: !1168, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1172, retainedNodes: !2567)
!2567 = !{!2568}
!2568 = !DILocalVariable(name: "addr", scope: !2565, file: !367, line: 1209, type: !9, align: 8)
!2569 = !DILocation(line: 668, column: 24, scope: !2527, inlinedAt: !2528)
!2570 = !DILocation(line: 1209, column: 20, scope: !2518)
!2571 = !DILocation(line: 1209, column: 13, scope: !2518)
!2572 = !DILocation(line: 1212, column: 6, scope: !2512)
!2573 = distinct !DISubprogram(name: "append_elements<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17hb2969b658d1a96daE", scope: !287, file: !367, line: 1832, type: !2574, scopeLine: 1832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !2576)
!2574 = !DISubroutineType(types: !2575)
!2575 = !{null, !656, !162}
!2576 = !{!2577, !2578, !2579, !2581}
!2577 = !DILocalVariable(name: "self", arg: 1, scope: !2573, file: !367, line: 1832, type: !656)
!2578 = !DILocalVariable(name: "other", arg: 2, scope: !2573, file: !367, line: 1832, type: !162)
!2579 = !DILocalVariable(name: "count", scope: !2580, file: !367, line: 1833, type: !9, align: 8)
!2580 = distinct !DILexicalBlock(scope: !2573, file: !367, line: 1833, column: 9)
!2581 = !DILocalVariable(name: "len", scope: !2582, file: !367, line: 1835, type: !9, align: 8)
!2582 = distinct !DILexicalBlock(scope: !2580, file: !367, line: 1835, column: 9)
!2583 = !DILocation(line: 1832, column: 31, scope: !2573)
!2584 = !DILocation(line: 1832, column: 42, scope: !2573)
!2585 = !DILocalVariable(name: "runtime", scope: !2586, file: !367, line: 1836, type: !2597, align: 8)
!2586 = !DILexicalBlockFile(scope: !2587, file: !367, discriminator: 0)
!2587 = distinct !DILexicalBlock(scope: !2588, file: !181, line: 2336, column: 13)
!2588 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17hb814e87504d112eeE", scope: !2589, file: !181, line: 2458, type: !2590, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2592)
!2589 = !DINamespace(name: "intrinsics", scope: !53)
!2590 = !DISubroutineType(types: !2591)
!2591 = !{null, !205, !596, !9}
!2592 = !{!2593, !2595, !2596, !2585}
!2593 = !DILocalVariable(name: "src", scope: !2594, file: !367, line: 1836, type: !205, align: 8)
!2594 = !DILexicalBlockFile(scope: !2588, file: !367, discriminator: 0)
!2595 = !DILocalVariable(name: "dst", scope: !2594, file: !367, line: 1836, type: !596, align: 8)
!2596 = !DILocalVariable(name: "count", scope: !2594, file: !367, line: 1836, type: !9, align: 8)
!2597 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !2598, file: !2, size: 192, align: 64, elements: !2599, templateParams: !19, identifier: "fb5d8c4998ddcc045cba0da9a8307400")
!2598 = !DINamespace(name: "copy_nonoverlapping", scope: !2589)
!2599 = !{!2600, !2601, !2603}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__src", scope: !2597, file: !2, baseType: !1851, size: 64, align: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__dst", scope: !2597, file: !2, baseType: !2602, size: 64, align: 64, offset: 64)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut u8", baseType: !596, size: 64, align: 64, dwarfAddressSpace: 0)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__count", scope: !2597, file: !2, baseType: !186, size: 64, align: 64, offset: 128)
!2604 = !DILocation(line: 1836, column: 18, scope: !2586, inlinedAt: !2605)
!2605 = !DILocation(line: 1836, column: 18, scope: !2582)
!2606 = !DILocation(line: 1833, column: 30, scope: !2573)
!2607 = !DILocation(line: 1833, column: 13, scope: !2580)
!2608 = !DILocation(line: 1834, column: 9, scope: !2580)
!2609 = !DILocation(line: 1835, column: 19, scope: !2580)
!2610 = !DILocalVariable(name: "self", scope: !2611, file: !367, line: 1835, type: !2614, align: 8)
!2611 = distinct !DISubprogram(name: "len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h9d647b606adfe0c2E", scope: !287, file: !367, line: 1945, type: !2612, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !2615)
!2612 = !DISubroutineType(types: !2613)
!2613 = !{!9, !2614}
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !287, size: 64, align: 64, dwarfAddressSpace: 0)
!2615 = !{!2610}
!2616 = !DILocation(line: 1835, column: 19, scope: !2611, inlinedAt: !2609)
!2617 = !DILocation(line: 1835, column: 13, scope: !2582)
!2618 = !DILocation(line: 1836, column: 43, scope: !2582)
!2619 = !DILocation(line: 1836, column: 18, scope: !2594, inlinedAt: !2605)
!2620 = !DILocation(line: 1836, column: 62, scope: !2582)
!2621 = !DILocalVariable(name: "self", scope: !2622, file: !367, line: 1836, type: !596, align: 8)
!2622 = !DILexicalBlockFile(scope: !2623, file: !367, discriminator: 0)
!2623 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h305297f93d26d39bE", scope: !1147, file: !1146, line: 985, type: !2624, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2626)
!2624 = !DISubroutineType(types: !2625)
!2625 = !{!596, !596, !9}
!2626 = !{!2621, !2627}
!2627 = !DILocalVariable(name: "count", scope: !2622, file: !367, line: 1836, type: !9, align: 8)
!2628 = !DILocation(line: 1836, column: 62, scope: !2622, inlinedAt: !2620)
!2629 = !DILocation(line: 1836, column: 84, scope: !2582)
!2630 = !DILocalVariable(name: "self", scope: !2631, file: !367, line: 1836, type: !596, align: 8)
!2631 = !DILexicalBlockFile(scope: !2632, file: !367, discriminator: 0)
!2632 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hc6cc4dbd9902a0dfE", scope: !1147, file: !1146, line: 465, type: !2633, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2635)
!2633 = !DISubroutineType(types: !2634)
!2634 = !{!596, !596, !223}
!2635 = !{!2630, !2636}
!2636 = !DILocalVariable(name: "count", scope: !2631, file: !367, line: 1836, type: !223, align: 8)
!2637 = !DILocation(line: 1836, column: 62, scope: !2631, inlinedAt: !2638)
!2638 = !DILocation(line: 990, column: 18, scope: !2623, inlinedAt: !2620)
!2639 = !DILocation(line: 1836, column: 90, scope: !2582)
!2640 = !DILocation(line: 1837, column: 9, scope: !2582)
!2641 = !DILocation(line: 1838, column: 6, scope: !2573)
!2642 = distinct !DISubprogram(name: "extend_desugared<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global, &mut shlex::bytes::Shlex>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17he1ab28677aee018aE", scope: !455, file: !367, line: 2740, type: !2643, scopeLine: 2740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2654, retainedNodes: !2645)
!2643 = !DISubroutineType(types: !2644)
!2644 = !{null, !571, !476}
!2645 = !{!2646, !2647, !2648, !2650, !2652}
!2646 = !DILocalVariable(name: "self", arg: 1, scope: !2642, file: !367, line: 2740, type: !571)
!2647 = !DILocalVariable(name: "iterator", arg: 2, scope: !2642, file: !367, line: 2740, type: !476)
!2648 = !DILocalVariable(name: "element", scope: !2649, file: !367, line: 2748, type: !287, align: 8)
!2649 = distinct !DILexicalBlock(scope: !2642, file: !367, line: 2748, column: 51)
!2650 = !DILocalVariable(name: "len", scope: !2651, file: !367, line: 2749, type: !9, align: 8)
!2651 = distinct !DILexicalBlock(scope: !2649, file: !367, line: 2749, column: 13)
!2652 = !DILocalVariable(name: "lower", scope: !2653, file: !367, line: 2751, type: !9, align: 8)
!2653 = distinct !DILexicalBlock(scope: !2651, file: !367, line: 2751, column: 17)
!2654 = !{!469, !307, !490}
!2655 = !DILocation(line: 2740, column: 48, scope: !2642)
!2656 = !DILocation(line: 2740, column: 59, scope: !2642)
!2657 = !DILocation(line: 2748, column: 24, scope: !2649)
!2658 = !DILocalVariable(name: "src", scope: !2659, file: !367, line: 2755, type: !287, align: 8)
!2659 = !DILexicalBlockFile(scope: !2660, file: !367, discriminator: 0)
!2660 = distinct !DISubprogram(name: "write<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr5write17ha68d31d17dda85f7E", scope: !202, file: !231, line: 1296, type: !498, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !2661)
!2661 = !{!2662, !2658}
!2662 = !DILocalVariable(name: "dst", scope: !2659, file: !367, line: 2755, type: !500, align: 8)
!2663 = !DILocation(line: 2755, column: 17, scope: !2659, inlinedAt: !2664)
!2664 = !DILocation(line: 2755, column: 17, scope: !2651)
!2665 = !DILocation(line: 2748, column: 9, scope: !2642)
!2666 = !DILocation(line: 2748, column: 35, scope: !2649)
!2667 = !DILocation(line: 2762, column: 5, scope: !2642)
!2668 = !DILocation(line: 2748, column: 19, scope: !2649)
!2669 = !DILocation(line: 2749, column: 23, scope: !2649)
!2670 = !DILocalVariable(name: "self", scope: !2671, file: !367, line: 2749, type: !2674, align: 8)
!2671 = distinct !DISubprogram(name: "len<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h309bb123d6910952E", scope: !455, file: !367, line: 1945, type: !2672, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !2675)
!2672 = !DISubroutineType(types: !2673)
!2673 = !{!9, !2674}
!2674 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::Vec<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", baseType: !455, size: 64, align: 64, dwarfAddressSpace: 0)
!2675 = !{!2670}
!2676 = !DILocation(line: 2749, column: 23, scope: !2671, inlinedAt: !2669)
!2677 = !DILocation(line: 2749, column: 17, scope: !2651)
!2678 = !DILocation(line: 2750, column: 23, scope: !2651)
!2679 = !DILocalVariable(name: "self", scope: !2680, file: !367, line: 2750, type: !2674, align: 8)
!2680 = distinct !DISubprogram(name: "capacity<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17h21e82abda22fafc7E", scope: !455, file: !367, line: 817, type: !2672, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !2681)
!2681 = !{!2679}
!2682 = !DILocation(line: 2750, column: 23, scope: !2680, inlinedAt: !2678)
!2683 = !DILocalVariable(name: "self", scope: !2684, file: !367, line: 2750, type: !2408, align: 8)
!2684 = !DILexicalBlockFile(scope: !2685, file: !367, discriminator: 0)
!2685 = distinct !DISubprogram(name: "capacity<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17hb8879b0653ef4503E", scope: !458, file: !384, line: 231, type: !2686, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !2688)
!2686 = !DISubroutineType(types: !2687)
!2687 = !{!9, !2408}
!2688 = !{!2683}
!2689 = !DILocation(line: 2750, column: 23, scope: !2684, inlinedAt: !2690)
!2690 = !DILocation(line: 818, column: 9, scope: !2680, inlinedAt: !2678)
!2691 = !DILocation(line: 2762, column: 6, scope: !2642)
!2692 = !DILocation(line: 2750, column: 16, scope: !2651)
!2693 = !DILocation(line: 2755, column: 28, scope: !2651)
!2694 = !DILocation(line: 2751, column: 34, scope: !2651)
!2695 = !DILocation(line: 2761, column: 9, scope: !2642)
!2696 = !DILocation(line: 2751, column: 22, scope: !2651)
!2697 = !DILocation(line: 2751, column: 22, scope: !2653)
!2698 = !DILocation(line: 2752, column: 30, scope: !2653)
!2699 = !DILocalVariable(name: "self", scope: !2700, file: !367, line: 2752, type: !9, align: 8)
!2700 = !DILexicalBlockFile(scope: !2701, file: !367, discriminator: 0)
!2701 = distinct !DISubprogram(name: "saturating_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_add17haf0fb58f21d60319E", scope: !412, file: !411, line: 1048, type: !414, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !2702)
!2702 = !{!2699, !2703}
!2703 = !DILocalVariable(name: "rhs", scope: !2700, file: !367, line: 2752, type: !9, align: 8)
!2704 = !DILocation(line: 2752, column: 30, scope: !2700, inlinedAt: !2698)
!2705 = !DILocation(line: 2752, column: 17, scope: !2653)
!2706 = !DILocation(line: 2750, column: 13, scope: !2651)
!2707 = !DILocalVariable(name: "self", scope: !2708, file: !367, line: 2755, type: !500, align: 8)
!2708 = !DILexicalBlockFile(scope: !2709, file: !367, discriminator: 0)
!2709 = distinct !DISubprogram(name: "add<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h44546ab6a47bf750E", scope: !1147, file: !1146, line: 985, type: !2710, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !2712)
!2710 = !DISubroutineType(types: !2711)
!2711 = !{!500, !500, !9}
!2712 = !{!2707, !2713}
!2713 = !DILocalVariable(name: "count", scope: !2708, file: !367, line: 2755, type: !9, align: 8)
!2714 = !DILocation(line: 2755, column: 28, scope: !2708, inlinedAt: !2693)
!2715 = !DILocation(line: 2755, column: 50, scope: !2651)
!2716 = !DILocalVariable(name: "self", scope: !2717, file: !367, line: 2755, type: !500, align: 8)
!2717 = !DILexicalBlockFile(scope: !2718, file: !367, discriminator: 0)
!2718 = distinct !DISubprogram(name: "offset<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h49502546839ee8f7E", scope: !1147, file: !1146, line: 465, type: !2719, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !2721)
!2719 = !DISubroutineType(types: !2720)
!2720 = !{!500, !500, !223}
!2721 = !{!2716, !2722}
!2722 = !DILocalVariable(name: "count", scope: !2717, file: !367, line: 2755, type: !223, align: 8)
!2723 = !DILocation(line: 2755, column: 28, scope: !2717, inlinedAt: !2724)
!2724 = !DILocation(line: 990, column: 18, scope: !2709, inlinedAt: !2693)
!2725 = !DILocation(line: 2755, column: 56, scope: !2651)
!2726 = !DILocation(line: 2759, column: 17, scope: !2651)
!2727 = !DILocalVariable(name: "self", scope: !2728, file: !367, line: 2759, type: !571, align: 8)
!2728 = distinct !DISubprogram(name: "set_len<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hf271e6aa267f59ffE", scope: !455, file: !367, line: 1301, type: !569, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !2729)
!2729 = !{!2727, !2730}
!2730 = !DILocalVariable(name: "new_len", scope: !2728, file: !367, line: 2759, type: !9, align: 8)
!2731 = !DILocation(line: 2759, column: 17, scope: !2728, inlinedAt: !2726)
!2732 = !DILocation(line: 2759, column: 30, scope: !2651)
!2733 = !DILocation(line: 2740, column: 5, scope: !2642)
!2734 = distinct !DISubprogram(name: "extend_desugared<alloc::string::String, alloc::alloc::Global, &mut shlex::Shlex>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17he4304560f5c1483cE", scope: !268, file: !367, line: 2740, type: !2735, scopeLine: 2740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2746, retainedNodes: !2737)
!2735 = !DISubroutineType(types: !2736)
!2736 = !{null, !441, !317}
!2737 = !{!2738, !2739, !2740, !2742, !2744}
!2738 = !DILocalVariable(name: "self", arg: 1, scope: !2734, file: !367, line: 2740, type: !441)
!2739 = !DILocalVariable(name: "iterator", arg: 2, scope: !2734, file: !367, line: 2740, type: !317)
!2740 = !DILocalVariable(name: "element", scope: !2741, file: !367, line: 2748, type: !283, align: 8)
!2741 = distinct !DILexicalBlock(scope: !2734, file: !367, line: 2748, column: 51)
!2742 = !DILocalVariable(name: "len", scope: !2743, file: !367, line: 2749, type: !9, align: 8)
!2743 = distinct !DILexicalBlock(scope: !2741, file: !367, line: 2749, column: 13)
!2744 = !DILocalVariable(name: "lower", scope: !2745, file: !367, line: 2751, type: !9, align: 8)
!2745 = distinct !DILexicalBlock(scope: !2743, file: !367, line: 2751, column: 17)
!2746 = !{!310, !307, !349}
!2747 = !DILocation(line: 2740, column: 48, scope: !2734)
!2748 = !DILocation(line: 2740, column: 59, scope: !2734)
!2749 = !DILocation(line: 2748, column: 24, scope: !2741)
!2750 = !DILocalVariable(name: "src", scope: !2751, file: !367, line: 2755, type: !283, align: 8)
!2751 = !DILexicalBlockFile(scope: !2752, file: !367, discriminator: 0)
!2752 = distinct !DISubprogram(name: "write<alloc::string::String>", linkageName: "_ZN4core3ptr5write17h99555e1150ea1041E", scope: !202, file: !231, line: 1296, type: !357, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !2753)
!2753 = !{!2754, !2750}
!2754 = !DILocalVariable(name: "dst", scope: !2751, file: !367, line: 2755, type: !359, align: 8)
!2755 = !DILocation(line: 2755, column: 17, scope: !2751, inlinedAt: !2756)
!2756 = !DILocation(line: 2755, column: 17, scope: !2743)
!2757 = !DILocation(line: 2748, column: 9, scope: !2734)
!2758 = !DILocation(line: 2748, column: 35, scope: !2741)
!2759 = !DILocation(line: 2762, column: 5, scope: !2734)
!2760 = !DILocation(line: 2748, column: 19, scope: !2741)
!2761 = !DILocation(line: 2749, column: 23, scope: !2741)
!2762 = !DILocalVariable(name: "self", scope: !2763, file: !367, line: 2749, type: !2766, align: 8)
!2763 = distinct !DISubprogram(name: "len<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17ha48c3855a8922d86E", scope: !268, file: !367, line: 1945, type: !2764, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !2767)
!2764 = !DISubroutineType(types: !2765)
!2765 = !{!9, !2766}
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::Vec<alloc::string::String, alloc::alloc::Global>", baseType: !268, size: 64, align: 64, dwarfAddressSpace: 0)
!2767 = !{!2762}
!2768 = !DILocation(line: 2749, column: 23, scope: !2763, inlinedAt: !2761)
!2769 = !DILocation(line: 2749, column: 17, scope: !2743)
!2770 = !DILocation(line: 2750, column: 23, scope: !2743)
!2771 = !DILocalVariable(name: "self", scope: !2772, file: !367, line: 2750, type: !2766, align: 8)
!2772 = distinct !DISubprogram(name: "capacity<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17hd5f46f37ac07dbd2E", scope: !268, file: !367, line: 817, type: !2764, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !2773)
!2773 = !{!2771}
!2774 = !DILocation(line: 2750, column: 23, scope: !2772, inlinedAt: !2770)
!2775 = !DILocalVariable(name: "self", scope: !2776, file: !367, line: 2750, type: !2475, align: 8)
!2776 = !DILexicalBlockFile(scope: !2777, file: !367, discriminator: 0)
!2777 = distinct !DISubprogram(name: "capacity<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h81c59b7ae0edc895E", scope: !271, file: !384, line: 231, type: !2778, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !2780)
!2778 = !DISubroutineType(types: !2779)
!2779 = !{!9, !2475}
!2780 = !{!2775}
!2781 = !DILocation(line: 2750, column: 23, scope: !2776, inlinedAt: !2782)
!2782 = !DILocation(line: 818, column: 9, scope: !2772, inlinedAt: !2770)
!2783 = !DILocation(line: 2762, column: 6, scope: !2734)
!2784 = !DILocation(line: 2750, column: 16, scope: !2743)
!2785 = !DILocation(line: 2755, column: 28, scope: !2743)
!2786 = !DILocation(line: 2751, column: 34, scope: !2743)
!2787 = !DILocation(line: 2761, column: 9, scope: !2734)
!2788 = !DILocation(line: 2751, column: 22, scope: !2743)
!2789 = !DILocation(line: 2751, column: 22, scope: !2745)
!2790 = !DILocation(line: 2752, column: 30, scope: !2745)
!2791 = !DILocalVariable(name: "self", scope: !2792, file: !367, line: 2752, type: !9, align: 8)
!2792 = !DILexicalBlockFile(scope: !2793, file: !367, discriminator: 0)
!2793 = distinct !DISubprogram(name: "saturating_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_add17haf0fb58f21d60319E", scope: !412, file: !411, line: 1048, type: !414, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !2794)
!2794 = !{!2791, !2795}
!2795 = !DILocalVariable(name: "rhs", scope: !2792, file: !367, line: 2752, type: !9, align: 8)
!2796 = !DILocation(line: 2752, column: 30, scope: !2792, inlinedAt: !2790)
!2797 = !DILocation(line: 2752, column: 17, scope: !2745)
!2798 = !DILocation(line: 2750, column: 13, scope: !2743)
!2799 = !DILocalVariable(name: "self", scope: !2800, file: !367, line: 2755, type: !359, align: 8)
!2800 = !DILexicalBlockFile(scope: !2801, file: !367, discriminator: 0)
!2801 = distinct !DISubprogram(name: "add<alloc::string::String>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hc58938627b812a11E", scope: !1147, file: !1146, line: 985, type: !2802, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !2804)
!2802 = !DISubroutineType(types: !2803)
!2803 = !{!359, !359, !9}
!2804 = !{!2799, !2805}
!2805 = !DILocalVariable(name: "count", scope: !2800, file: !367, line: 2755, type: !9, align: 8)
!2806 = !DILocation(line: 2755, column: 28, scope: !2800, inlinedAt: !2785)
!2807 = !DILocation(line: 2755, column: 50, scope: !2743)
!2808 = !DILocalVariable(name: "self", scope: !2809, file: !367, line: 2755, type: !359, align: 8)
!2809 = !DILexicalBlockFile(scope: !2810, file: !367, discriminator: 0)
!2810 = distinct !DISubprogram(name: "offset<alloc::string::String>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h5446f84d15a13ad1E", scope: !1147, file: !1146, line: 465, type: !2811, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !2813)
!2811 = !DISubroutineType(types: !2812)
!2812 = !{!359, !359, !223}
!2813 = !{!2808, !2814}
!2814 = !DILocalVariable(name: "count", scope: !2809, file: !367, line: 2755, type: !223, align: 8)
!2815 = !DILocation(line: 2755, column: 28, scope: !2809, inlinedAt: !2816)
!2816 = !DILocation(line: 990, column: 18, scope: !2801, inlinedAt: !2785)
!2817 = !DILocation(line: 2755, column: 56, scope: !2743)
!2818 = !DILocation(line: 2759, column: 17, scope: !2743)
!2819 = !DILocalVariable(name: "self", scope: !2820, file: !367, line: 2759, type: !441, align: 8)
!2820 = distinct !DISubprogram(name: "set_len<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h4e41381969fa82b6E", scope: !268, file: !367, line: 1301, type: !439, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !2821)
!2821 = !{!2819, !2822}
!2822 = !DILocalVariable(name: "new_len", scope: !2820, file: !367, line: 2759, type: !9, align: 8)
!2823 = !DILocation(line: 2759, column: 17, scope: !2820, inlinedAt: !2818)
!2824 = !DILocation(line: 2759, column: 30, scope: !2743)
!2825 = !DILocation(line: 2740, column: 5, scope: !2734)
!2826 = distinct !DISubprogram(name: "extend_from_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17hbdc1b7fc228aa866E", scope: !287, file: !367, line: 2282, type: !2827, scopeLine: 2282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !2829)
!2827 = !DISubroutineType(types: !2828)
!2828 = !{null, !656, !662}
!2829 = !{!2830, !2831}
!2830 = !DILocalVariable(name: "self", arg: 1, scope: !2826, file: !367, line: 2282, type: !656)
!2831 = !DILocalVariable(name: "other", arg: 2, scope: !2826, file: !367, line: 2282, type: !662)
!2832 = !DILocation(line: 2282, column: 30, scope: !2826)
!2833 = !DILocation(line: 2282, column: 41, scope: !2826)
!2834 = !DILocation(line: 2283, column: 26, scope: !2826)
!2835 = !DILocalVariable(name: "self", scope: !2836, file: !367, line: 2283, type: !662, align: 8)
!2836 = !DILexicalBlockFile(scope: !2837, file: !367, discriminator: 0)
!2837 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h4aacd776e8fe9725E", scope: !1615, file: !1614, line: 734, type: !1700, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2838)
!2838 = !{!2835}
!2839 = !DILocation(line: 2283, column: 26, scope: !2836, inlinedAt: !2834)
!2840 = !DILocation(line: 2283, column: 9, scope: !2826)
!2841 = !DILocation(line: 2284, column: 6, scope: !2826)
!2842 = distinct !DISubprogram(name: "push<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h4b04564bca214e51E", scope: !287, file: !367, line: 1763, type: !2843, scopeLine: 1763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !2845)
!2843 = !DISubroutineType(types: !2844)
!2844 = !{null, !656, !124}
!2845 = !{!2846, !2847, !2848}
!2846 = !DILocalVariable(name: "self", arg: 1, scope: !2842, file: !367, line: 1763, type: !656)
!2847 = !DILocalVariable(name: "value", arg: 2, scope: !2842, file: !367, line: 1763, type: !124)
!2848 = !DILocalVariable(name: "end", scope: !2849, file: !367, line: 1770, type: !596, align: 8)
!2849 = distinct !DILexicalBlock(scope: !2842, file: !367, line: 1770, column: 13)
!2850 = !DILocation(line: 1763, column: 17, scope: !2842)
!2851 = !DILocation(line: 1763, column: 28, scope: !2842)
!2852 = !DILocalVariable(name: "src", scope: !2853, file: !367, line: 1771, type: !124, align: 1)
!2853 = !DILexicalBlockFile(scope: !2854, file: !367, discriminator: 0)
!2854 = distinct !DISubprogram(name: "write<u8>", linkageName: "_ZN4core3ptr5write17hec6cfa0d0cbb25caE", scope: !202, file: !231, line: 1296, type: !2855, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2857)
!2855 = !DISubroutineType(types: !2856)
!2856 = !{null, !596, !124}
!2857 = !{!2858, !2852}
!2858 = !DILocalVariable(name: "dst", scope: !2853, file: !367, line: 1771, type: !596, align: 8)
!2859 = !DILocation(line: 1771, column: 13, scope: !2853, inlinedAt: !2860)
!2860 = !DILocation(line: 1771, column: 13, scope: !2849)
!2861 = !DILocation(line: 1766, column: 12, scope: !2842)
!2862 = !DILocation(line: 1766, column: 24, scope: !2842)
!2863 = !DILocalVariable(name: "self", scope: !2864, file: !367, line: 1766, type: !2540, align: 8)
!2864 = !DILexicalBlockFile(scope: !2865, file: !367, discriminator: 0)
!2865 = distinct !DISubprogram(name: "capacity<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17hc1eac8527fb7a211E", scope: !290, file: !384, line: 231, type: !2866, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !2868)
!2866 = !DISubroutineType(types: !2867)
!2867 = !{!9, !2540}
!2868 = !{!2863}
!2869 = !DILocation(line: 1766, column: 24, scope: !2864, inlinedAt: !2862)
!2870 = !DILocation(line: 1770, column: 23, scope: !2842)
!2871 = !DILocation(line: 1767, column: 13, scope: !2842)
!2872 = !DILocation(line: 1767, column: 39, scope: !2842)
!2873 = !DILocation(line: 1774, column: 5, scope: !2842)
!2874 = !DILocation(line: 1766, column: 9, scope: !2842)
!2875 = !DILocalVariable(name: "self", scope: !2876, file: !367, line: 1770, type: !596, align: 8)
!2876 = !DILexicalBlockFile(scope: !2877, file: !367, discriminator: 0)
!2877 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h305297f93d26d39bE", scope: !1147, file: !1146, line: 985, type: !2624, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2878)
!2878 = !{!2875, !2879}
!2879 = !DILocalVariable(name: "count", scope: !2876, file: !367, line: 1770, type: !9, align: 8)
!2880 = !DILocation(line: 1770, column: 23, scope: !2876, inlinedAt: !2870)
!2881 = !DILocation(line: 1770, column: 45, scope: !2842)
!2882 = !DILocalVariable(name: "self", scope: !2883, file: !367, line: 1770, type: !596, align: 8)
!2883 = !DILexicalBlockFile(scope: !2884, file: !367, discriminator: 0)
!2884 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hc6cc4dbd9902a0dfE", scope: !1147, file: !1146, line: 465, type: !2633, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2885)
!2885 = !{!2882, !2886}
!2886 = !DILocalVariable(name: "count", scope: !2883, file: !367, line: 1770, type: !223, align: 8)
!2887 = !DILocation(line: 1770, column: 23, scope: !2883, inlinedAt: !2888)
!2888 = !DILocation(line: 990, column: 18, scope: !2877, inlinedAt: !2870)
!2889 = !DILocation(line: 1770, column: 17, scope: !2849)
!2890 = !DILocation(line: 1771, column: 24, scope: !2849)
!2891 = !DILocation(line: 1771, column: 29, scope: !2849)
!2892 = !DILocation(line: 1772, column: 13, scope: !2849)
!2893 = !DILocation(line: 1774, column: 6, scope: !2842)
!2894 = !DILocation(line: 1763, column: 5, scope: !2842)
!2895 = distinct !DISubprogram(name: "reserve<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h95de801c96019b2eE", scope: !455, file: !367, line: 840, type: !569, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !2896)
!2896 = !{!2897, !2898}
!2897 = !DILocalVariable(name: "self", arg: 1, scope: !2895, file: !367, line: 840, type: !571)
!2898 = !DILocalVariable(name: "additional", arg: 2, scope: !2895, file: !367, line: 840, type: !9)
!2899 = !DILocation(line: 840, column: 20, scope: !2895)
!2900 = !DILocation(line: 840, column: 31, scope: !2895)
!2901 = !DILocation(line: 841, column: 9, scope: !2895)
!2902 = !DILocation(line: 841, column: 26, scope: !2895)
!2903 = !DILocation(line: 842, column: 6, scope: !2895)
!2904 = distinct !DISubprogram(name: "reserve<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hb08e379da2f6496dE", scope: !268, file: !367, line: 840, type: !439, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !2905)
!2905 = !{!2906, !2907}
!2906 = !DILocalVariable(name: "self", arg: 1, scope: !2904, file: !367, line: 840, type: !441)
!2907 = !DILocalVariable(name: "additional", arg: 2, scope: !2904, file: !367, line: 840, type: !9)
!2908 = !DILocation(line: 840, column: 20, scope: !2904)
!2909 = !DILocation(line: 840, column: 31, scope: !2904)
!2910 = !DILocation(line: 841, column: 9, scope: !2904)
!2911 = !DILocation(line: 841, column: 26, scope: !2904)
!2912 = !DILocation(line: 842, column: 6, scope: !2904)
!2913 = distinct !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hbfb27bc36448b560E", scope: !287, file: !367, line: 840, type: !2914, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !2916)
!2914 = !DISubroutineType(types: !2915)
!2915 = !{null, !656, !9}
!2916 = !{!2917, !2918}
!2917 = !DILocalVariable(name: "self", arg: 1, scope: !2913, file: !367, line: 840, type: !656)
!2918 = !DILocalVariable(name: "additional", arg: 2, scope: !2913, file: !367, line: 840, type: !9)
!2919 = !DILocation(line: 840, column: 20, scope: !2913)
!2920 = !DILocation(line: 840, column: 31, scope: !2913)
!2921 = !DILocation(line: 841, column: 9, scope: !2913)
!2922 = !DILocation(line: 841, column: 26, scope: !2913)
!2923 = !DILocation(line: 842, column: 6, scope: !2913)
!2924 = distinct !DISubprogram(name: "is_empty<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$8is_empty17h11a978bc7669e728E", scope: !287, file: !367, line: 1961, type: !2925, scopeLine: 1961, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !2927)
!2925 = !DISubroutineType(types: !2926)
!2926 = !{!29, !2614}
!2927 = !{!2928}
!2928 = !DILocalVariable(name: "self", arg: 1, scope: !2924, file: !367, line: 1961, type: !2614)
!2929 = !DILocation(line: 1961, column: 21, scope: !2924)
!2930 = !DILocation(line: 1962, column: 9, scope: !2924)
!2931 = !DILocalVariable(name: "self", scope: !2932, file: !367, line: 1962, type: !2614, align: 8)
!2932 = distinct !DISubprogram(name: "len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h9d647b606adfe0c2E", scope: !287, file: !367, line: 1945, type: !2612, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !2933)
!2933 = !{!2931}
!2934 = !DILocation(line: 1962, column: 9, scope: !2932, inlinedAt: !2930)
!2935 = !DILocation(line: 1963, column: 6, scope: !2924)
!2936 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN5alloc3vec3cow110_$LT$impl$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$alloc..borrow..Cow$LT$$u5b$T$u5d$$GT$$GT$4from17hb5c0b0b17f6bdda3E", scope: !2938, file: !2937, line: 14, type: !2344, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2940)
!2937 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/cow.rs", directory: "", checksumkind: CSK_MD5, checksum: "3cb90244443c514221e2495104f2c2d9")
!2938 = !DINamespace(name: "{impl#0}", scope: !2939)
!2939 = !DINamespace(name: "cow", scope: !265)
!2940 = !{!2941}
!2941 = !DILocalVariable(name: "s", arg: 1, scope: !2936, file: !2937, line: 14, type: !662)
!2942 = !DILocation(line: 14, column: 13, scope: !2936)
!2943 = !DILocation(line: 15, column: 9, scope: !2936)
!2944 = !DILocation(line: 16, column: 6, scope: !2936)
!2945 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN5alloc3vec3cow119_$LT$impl$u20$core..convert..From$LT$alloc..vec..Vec$LT$T$GT$$GT$$u20$for$u20$alloc..borrow..Cow$LT$$u5b$T$u5d$$GT$$GT$4from17he4b14b6007cc4beaE", scope: !2946, file: !2937, line: 27, type: !2333, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2947)
!2946 = !DINamespace(name: "{impl#1}", scope: !2939)
!2947 = !{!2948}
!2948 = !DILocalVariable(name: "v", arg: 1, scope: !2945, file: !2937, line: 27, type: !287)
!2949 = !DILocation(line: 27, column: 13, scope: !2945)
!2950 = !DILocation(line: 28, column: 20, scope: !2945)
!2951 = !DILocation(line: 28, column: 9, scope: !2945)
!2952 = !DILocation(line: 29, column: 6, scope: !2945)
!2953 = distinct !DISubprogram(name: "alloc_impl", linkageName: "_ZN5alloc5alloc6Global10alloc_impl17hc2fbb81af54cdef1E", scope: !304, file: !2954, line: 172, type: !2955, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !2958)
!2954 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/alloc.rs", directory: "", checksumkind: CSK_MD5, checksum: "b6c7758b12bd6b7f0705d9bc90e671ea")
!2955 = !DISubroutineType(types: !2956)
!2956 = !{!2109, !2957, !633, !29}
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::alloc::Global", baseType: !304, size: 64, align: 64, dwarfAddressSpace: 0)
!2958 = !{!2959, !2960, !2961, !2962, !2964, !2966, !2968, !2983}
!2959 = !DILocalVariable(name: "self", arg: 1, scope: !2953, file: !2954, line: 172, type: !2957)
!2960 = !DILocalVariable(name: "layout", arg: 2, scope: !2953, file: !2954, line: 172, type: !633)
!2961 = !DILocalVariable(name: "zeroed", arg: 3, scope: !2953, file: !2954, line: 172, type: !29)
!2962 = !DILocalVariable(name: "size", scope: !2963, file: !2954, line: 176, type: !9, align: 8)
!2963 = distinct !DILexicalBlock(scope: !2953, file: !2954, line: 176, column: 13)
!2964 = !DILocalVariable(name: "raw_ptr", scope: !2965, file: !2954, line: 177, type: !596, align: 8)
!2965 = distinct !DILexicalBlock(scope: !2963, file: !2954, line: 177, column: 17)
!2966 = !DILocalVariable(name: "ptr", scope: !2967, file: !2954, line: 178, type: !296, align: 8)
!2967 = distinct !DILexicalBlock(scope: !2965, file: !2954, line: 178, column: 17)
!2968 = !DILocalVariable(name: "residual", scope: !2969, file: !2954, line: 178, type: !2970, align: 1)
!2969 = distinct !DILexicalBlock(scope: !2965, file: !2954, line: 178, column: 66)
!2970 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::AllocError>", scope: !675, file: !2, align: 8, elements: !2971, templateParams: !19, identifier: "572d358f2a12b97961cfb71e38e53f04")
!2971 = !{!2972}
!2972 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2970, file: !2, align: 8, elements: !2973, templateParams: !19, identifier: "88663002e18d2fe1148d606c86c1d5ff")
!2973 = !{!2974, !2979}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2972, file: !2, baseType: !2975, align: 8)
!2975 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2970, file: !2, align: 8, elements: !2976, templateParams: !2978, identifier: "be577e6defde51b29863ecc8d4e2e22a")
!2976 = !{!2977}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2975, file: !2, baseType: !722, align: 8)
!2978 = !{!727, !2122}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2972, file: !2, baseType: !2980, align: 8)
!2980 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2970, file: !2, align: 8, elements: !2981, templateParams: !2978, identifier: "1bce49b0456cc0581bfad8a74808f72")
!2981 = !{!2982}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2980, file: !2, baseType: !2123, align: 8)
!2983 = !DILocalVariable(name: "val", scope: !2984, file: !2954, line: 178, type: !296, align: 8)
!2984 = distinct !DILexicalBlock(scope: !2965, file: !2954, line: 178, column: 27)
!2985 = !DILocation(line: 172, column: 19, scope: !2953)
!2986 = !DILocation(line: 172, column: 26, scope: !2953)
!2987 = !DILocation(line: 172, column: 42, scope: !2953)
!2988 = !DILocalVariable(name: "data", scope: !2989, file: !2954, line: 174, type: !296, align: 8)
!2989 = !DILexicalBlockFile(scope: !2990, file: !2954, discriminator: 0)
!2990 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h582fa23464ddbdfaE", scope: !2117, file: !582, line: 487, type: !2991, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !2993)
!2991 = !DISubroutineType(types: !2992)
!2992 = !{!2117, !296, !9}
!2993 = !{!2988, !2994}
!2994 = !DILocalVariable(name: "len", scope: !2989, file: !2954, line: 174, type: !9, align: 8)
!2995 = !DILocation(line: 174, column: 21, scope: !2989, inlinedAt: !2996)
!2996 = !DILocation(line: 174, column: 21, scope: !2953)
!2997 = !DILocation(line: 177, column: 21, scope: !2965)
!2998 = !DILocalVariable(name: "layout", scope: !2999, file: !2954, line: 177, type: !633, align: 8)
!2999 = distinct !DISubprogram(name: "alloc_zeroed", linkageName: "_ZN5alloc5alloc12alloc_zeroed17h53453ff50b010d79E", scope: !305, file: !2954, line: 165, type: !3000, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3002)
!3000 = !DISubroutineType(types: !3001)
!3001 = !{!596, !633}
!3002 = !{!2998}
!3003 = !DILocation(line: 177, column: 43, scope: !2999, inlinedAt: !3004)
!3004 = !DILocation(line: 177, column: 43, scope: !2963)
!3005 = !DILocalVariable(name: "layout", scope: !3006, file: !2954, line: 177, type: !633, align: 8)
!3006 = distinct !DISubprogram(name: "alloc", linkageName: "_ZN5alloc5alloc5alloc17h22f37e6b7880b94aE", scope: !305, file: !2954, line: 94, type: !3000, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3007)
!3007 = !{!3005}
!3008 = !DILocation(line: 177, column: 73, scope: !3006, inlinedAt: !3009)
!3009 = !DILocation(line: 177, column: 73, scope: !2963)
!3010 = !DILocalVariable(name: "self", scope: !3011, file: !2954, line: 178, type: !3031, align: 8)
!3011 = !DILexicalBlockFile(scope: !3012, file: !2954, discriminator: 0)
!3012 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h01a7ddb0e89b86b0E", scope: !1360, file: !673, line: 2117, type: !3013, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !3039, retainedNodes: !3045)
!3013 = !DISubroutineType(types: !3014)
!3014 = !{!3015, !3031}
!3015 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>", scope: !1364, file: !2, size: 64, align: 64, elements: !3016, templateParams: !19, identifier: "7f8c65b25026163a60482c903b940372")
!3016 = !{!3017}
!3017 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3015, file: !2, size: 64, align: 64, elements: !3018, templateParams: !19, identifier: "a5a8c50ac5e6502472acbdda15ae7613", discriminator: !3030)
!3018 = !{!3019, !3026}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3017, file: !2, baseType: !3020, size: 64, align: 64)
!3020 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3015, file: !2, size: 64, align: 64, elements: !3021, templateParams: !3023, identifier: "d2ac067f6845ce1e8a08fbb330350406")
!3021 = !{!3022}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3020, file: !2, baseType: !296, size: 64, align: 64)
!3023 = !{!3024, !3025}
!3024 = !DITemplateTypeParameter(name: "B", type: !2970)
!3025 = !DITemplateTypeParameter(name: "C", type: !296)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3017, file: !2, baseType: !3027, size: 64, align: 64, extraData: i64 0)
!3027 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3015, file: !2, size: 64, align: 64, elements: !3028, templateParams: !3023, identifier: "81bddfbc89a9f0c5cc1c72e49b9ff534")
!3028 = !{!3029}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3027, file: !2, baseType: !2970, align: 8)
!3030 = !DIDerivedType(tag: DW_TAG_member, scope: !3015, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!3031 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", scope: !675, file: !2, size: 64, align: 64, elements: !3032, templateParams: !19, identifier: "e71566aa277061ca8abc5a83ae5b9729")
!3032 = !{!3033}
!3033 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3031, file: !2, size: 64, align: 64, elements: !3034, templateParams: !19, identifier: "4a74327c407a883ea599f67b3290ba83", discriminator: !3044)
!3034 = !{!3035, !3040}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !3033, file: !2, baseType: !3036, size: 64, align: 64)
!3036 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !3031, file: !2, size: 64, align: 64, elements: !3037, templateParams: !3039, identifier: "71a196ee6c186d8bac41245f54989593")
!3037 = !{!3038}
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3036, file: !2, baseType: !296, size: 64, align: 64)
!3039 = !{!1122, !2122}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !3033, file: !2, baseType: !3041, size: 64, align: 64, extraData: i64 0)
!3041 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !3031, file: !2, size: 64, align: 64, elements: !3042, templateParams: !3039, identifier: "fc861602d066f2f1f51a40a0537349e6")
!3042 = !{!3043}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3041, file: !2, baseType: !2123, align: 8)
!3044 = !DIDerivedType(tag: DW_TAG_member, scope: !3031, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!3045 = !{!3010, !3046, !3049}
!3046 = !DILocalVariable(name: "v", scope: !3047, file: !2954, line: 178, type: !296, align: 8)
!3047 = !DILexicalBlockFile(scope: !3048, file: !2954, discriminator: 0)
!3048 = distinct !DILexicalBlock(scope: !3012, file: !673, line: 2119, column: 13)
!3049 = !DILocalVariable(name: "e", scope: !3050, file: !2954, line: 178, type: !2123, align: 1)
!3050 = !DILexicalBlockFile(scope: !3051, file: !2954, discriminator: 0)
!3051 = distinct !DILexicalBlock(scope: !3012, file: !673, line: 2120, column: 13)
!3052 = !DILocation(line: 178, column: 27, scope: !3011, inlinedAt: !3053)
!3053 = !DILocation(line: 178, column: 27, scope: !2965)
!3054 = !DILocalVariable(name: "self", scope: !3055, file: !2954, line: 178, type: !1115, align: 8)
!3055 = !DILexicalBlockFile(scope: !3056, file: !2954, discriminator: 0)
!3056 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hd22b751f10fe1dc2E", scope: !1115, file: !1406, line: 1051, type: !3057, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !3039, retainedNodes: !3059)
!3057 = !DISubroutineType(types: !3058)
!3058 = !{!3031, !1115, !2123}
!3059 = !{!3054, !3060, !3061}
!3060 = !DILocalVariable(name: "err", scope: !3055, file: !2954, line: 178, type: !2123, align: 1)
!3061 = !DILocalVariable(name: "v", scope: !3062, file: !2954, line: 178, type: !296, align: 8)
!3062 = !DILexicalBlockFile(scope: !3063, file: !2954, discriminator: 0)
!3063 = distinct !DILexicalBlock(scope: !3056, file: !1406, line: 1056, column: 13)
!3064 = !DILocation(line: 178, column: 27, scope: !3055, inlinedAt: !3053)
!3065 = !DILocation(line: 178, column: 66, scope: !2969)
!3066 = !DILocalVariable(name: "residual", scope: !3067, file: !2954, line: 178, type: !2970, align: 1)
!3067 = !DILexicalBlockFile(scope: !3068, file: !2954, discriminator: 0)
!3068 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h732f17c38d230dc6E", scope: !674, file: !673, line: 2132, type: !3069, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !3075, retainedNodes: !3071)
!3069 = !DISubroutineType(types: !3070)
!3070 = !{!2109, !2970, !732}
!3071 = !{!3066, !3072}
!3072 = !DILocalVariable(name: "e", scope: !3073, file: !2954, line: 178, type: !2123, align: 1)
!3073 = !DILexicalBlockFile(scope: !3074, file: !2954, discriminator: 0)
!3074 = distinct !DILexicalBlock(scope: !3068, file: !673, line: 2134, column: 13)
!3075 = !{!2121, !2122, !3076}
!3076 = !DITemplateTypeParameter(name: "F", type: !2123)
!3077 = !DILocation(line: 178, column: 27, scope: !3067, inlinedAt: !3078)
!3078 = !DILocation(line: 178, column: 27, scope: !2969)
!3079 = !DILocalVariable(name: "self", scope: !3080, file: !2954, line: 174, type: !1291, align: 8)
!3080 = !DILexicalBlockFile(scope: !3081, file: !2954, discriminator: 0)
!3081 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h80c50717bd3ed3c3E", scope: !1291, file: !1290, line: 82, type: !1295, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3082)
!3082 = !{!3079}
!3083 = !DILocation(line: 174, column: 51, scope: !3080, inlinedAt: !3084)
!3084 = !DILocation(line: 131, column: 9, scope: !3085, inlinedAt: !3091)
!3085 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h70611acb1b9cd6d8E", scope: !633, file: !1262, line: 130, type: !3086, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3088)
!3086 = !DISubroutineType(types: !3087)
!3087 = !{!9, !2150}
!3088 = !{!3089}
!3089 = !DILocalVariable(name: "self", scope: !3090, file: !2954, line: 174, type: !2150, align: 8)
!3090 = !DILexicalBlockFile(scope: !3085, file: !2954, discriminator: 0)
!3091 = !DILocation(line: 205, column: 71, scope: !3092, inlinedAt: !3098)
!3092 = distinct !DISubprogram(name: "dangling", linkageName: "_ZN4core5alloc6layout6Layout8dangling17h917d06d5acafb339E", scope: !633, file: !1262, line: 203, type: !3093, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3095)
!3093 = !DISubroutineType(types: !3094)
!3094 = !{!296, !2150}
!3095 = !{!3096}
!3096 = !DILocalVariable(name: "self", scope: !3097, file: !2954, line: 174, type: !2150, align: 8)
!3097 = !DILexicalBlockFile(scope: !3092, file: !2954, discriminator: 0)
!3098 = !DILocation(line: 174, column: 51, scope: !2953)
!3099 = !DILocalVariable(name: "self", scope: !3100, file: !2954, line: 174, type: !639, align: 8)
!3100 = !DILexicalBlockFile(scope: !3101, file: !2954, discriminator: 0)
!3101 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17hcb3f9b7ba4faab99E", scope: !639, file: !1303, line: 39, type: !1304, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3102)
!3102 = !{!3099}
!3103 = !DILocation(line: 174, column: 51, scope: !3100, inlinedAt: !3084)
!3104 = !DILocalVariable(name: "self", scope: !3105, file: !2954, line: 177, type: !1291, align: 8)
!3105 = !DILexicalBlockFile(scope: !3106, file: !2954, discriminator: 0)
!3106 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h80c50717bd3ed3c3E", scope: !1291, file: !1290, line: 82, type: !1295, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3107)
!3107 = !{!3104}
!3108 = !DILocation(line: 177, column: 43, scope: !3105, inlinedAt: !3109)
!3109 = !DILocation(line: 131, column: 9, scope: !3110, inlinedAt: !3114)
!3110 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h70611acb1b9cd6d8E", scope: !633, file: !1262, line: 130, type: !3086, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3111)
!3111 = !{!3112}
!3112 = !DILocalVariable(name: "self", scope: !3113, file: !2954, line: 177, type: !2150, align: 8)
!3113 = !DILexicalBlockFile(scope: !3110, file: !2954, discriminator: 0)
!3114 = !DILocation(line: 166, column: 49, scope: !2999, inlinedAt: !3004)
!3115 = !DILocalVariable(name: "self", scope: !3116, file: !2954, line: 177, type: !639, align: 8)
!3116 = !DILexicalBlockFile(scope: !3117, file: !2954, discriminator: 0)
!3117 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17hcb3f9b7ba4faab99E", scope: !639, file: !1303, line: 39, type: !1304, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3118)
!3118 = !{!3115}
!3119 = !DILocation(line: 177, column: 43, scope: !3116, inlinedAt: !3109)
!3120 = !DILocalVariable(name: "self", scope: !3121, file: !2954, line: 177, type: !1291, align: 8)
!3121 = !DILexicalBlockFile(scope: !3122, file: !2954, discriminator: 0)
!3122 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h80c50717bd3ed3c3E", scope: !1291, file: !1290, line: 82, type: !1295, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3123)
!3123 = !{!3120}
!3124 = !DILocation(line: 177, column: 73, scope: !3121, inlinedAt: !3125)
!3125 = !DILocation(line: 131, column: 9, scope: !3126, inlinedAt: !3130)
!3126 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h70611acb1b9cd6d8E", scope: !633, file: !1262, line: 130, type: !3086, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3127)
!3127 = !{!3128}
!3128 = !DILocalVariable(name: "self", scope: !3129, file: !2954, line: 177, type: !2150, align: 8)
!3129 = !DILexicalBlockFile(scope: !3126, file: !2954, discriminator: 0)
!3130 = !DILocation(line: 95, column: 42, scope: !3006, inlinedAt: !3009)
!3131 = !DILocalVariable(name: "self", scope: !3132, file: !2954, line: 177, type: !639, align: 8)
!3132 = !DILexicalBlockFile(scope: !3133, file: !2954, discriminator: 0)
!3133 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17hcb3f9b7ba4faab99E", scope: !639, file: !1303, line: 39, type: !1304, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3134)
!3134 = !{!3131}
!3135 = !DILocation(line: 177, column: 73, scope: !3132, inlinedAt: !3125)
!3136 = !DILocation(line: 178, column: 27, scope: !3050, inlinedAt: !3053)
!3137 = !DILocation(line: 178, column: 27, scope: !3073, inlinedAt: !3078)
!3138 = !DILocation(line: 173, column: 15, scope: !2953)
!3139 = !DILocalVariable(name: "self", scope: !3140, file: !2954, line: 173, type: !2150, align: 8)
!3140 = !DILexicalBlockFile(scope: !3141, file: !2954, discriminator: 0)
!3141 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h9bed3e949fe567faE", scope: !633, file: !1262, line: 120, type: !3086, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3142)
!3142 = !{!3139}
!3143 = !DILocation(line: 173, column: 15, scope: !3140, inlinedAt: !3138)
!3144 = !DILocation(line: 173, column: 9, scope: !2953)
!3145 = !DILocation(line: 174, column: 51, scope: !3097, inlinedAt: !3098)
!3146 = !DILocation(line: 174, column: 51, scope: !3090, inlinedAt: !3091)
!3147 = !DILocalVariable(name: "n", scope: !3148, file: !2954, line: 174, type: !9, align: 8)
!3148 = !DILexicalBlockFile(scope: !3149, file: !2954, discriminator: 0)
!3149 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h9ea4e200ee3011edE", scope: !1291, file: !1290, line: 56, type: !1312, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3150)
!3150 = !{!3147, !3151}
!3151 = !DILocalVariable(name: "runtime", scope: !3152, file: !2954, line: 174, type: !1318, align: 8)
!3152 = !DILexicalBlockFile(scope: !3153, file: !2954, discriminator: 0)
!3153 = distinct !DILexicalBlock(scope: !3149, file: !181, line: 2336, column: 13)
!3154 = !DILocation(line: 174, column: 51, scope: !3148, inlinedAt: !3155)
!3155 = !DILocation(line: 41, column: 18, scope: !3101, inlinedAt: !3084)
!3156 = !DILocalVariable(name: "addr", scope: !3157, file: !2954, line: 174, type: !9, align: 8)
!3157 = !DILexicalBlockFile(scope: !3158, file: !2954, discriminator: 0)
!3158 = distinct !DISubprogram(name: "invalid_mut<u8>", linkageName: "_ZN4core3ptr11invalid_mut17h7462506acdbcb241E", scope: !202, file: !231, line: 569, type: !3159, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3161)
!3159 = !DISubroutineType(types: !3160)
!3160 = !{!596, !9}
!3161 = !{!3156}
!3162 = !DILocation(line: 174, column: 51, scope: !3157, inlinedAt: !3163)
!3163 = !DILocation(line: 205, column: 41, scope: !3092, inlinedAt: !3098)
!3164 = !DILocalVariable(name: "ptr", scope: !3165, file: !2954, line: 174, type: !596, align: 8)
!3165 = !DILexicalBlockFile(scope: !3166, file: !2954, discriminator: 0)
!3166 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hfaafb5192c9d4d91E", scope: !296, file: !582, line: 196, type: !608, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3167)
!3167 = !{!3164}
!3168 = !DILocation(line: 174, column: 51, scope: !3165, inlinedAt: !3169)
!3169 = !DILocation(line: 205, column: 18, scope: !3092, inlinedAt: !3098)
!3170 = !DILocation(line: 176, column: 13, scope: !2953)
!3171 = !DILocation(line: 176, column: 13, scope: !2963)
!3172 = !DILocation(line: 177, column: 34, scope: !2963)
!3173 = !DILocation(line: 177, column: 79, scope: !2963)
!3174 = !DILocalVariable(name: "self", scope: !3175, file: !2954, line: 177, type: !2150, align: 8)
!3175 = !DILexicalBlockFile(scope: !3176, file: !2954, discriminator: 0)
!3176 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h9bed3e949fe567faE", scope: !633, file: !1262, line: 120, type: !3086, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3177)
!3177 = !{!3174}
!3178 = !DILocation(line: 177, column: 73, scope: !3175, inlinedAt: !3179)
!3179 = !DILocation(line: 95, column: 27, scope: !3006, inlinedAt: !3009)
!3180 = !DILocation(line: 177, column: 73, scope: !3129, inlinedAt: !3130)
!3181 = !DILocalVariable(name: "n", scope: !3182, file: !2954, line: 177, type: !9, align: 8)
!3182 = !DILexicalBlockFile(scope: !3183, file: !2954, discriminator: 0)
!3183 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h9ea4e200ee3011edE", scope: !1291, file: !1290, line: 56, type: !1312, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3184)
!3184 = !{!3181, !3185}
!3185 = !DILocalVariable(name: "runtime", scope: !3186, file: !2954, line: 177, type: !1318, align: 8)
!3186 = !DILexicalBlockFile(scope: !3187, file: !2954, discriminator: 0)
!3187 = distinct !DILexicalBlock(scope: !3183, file: !181, line: 2336, column: 13)
!3188 = !DILocation(line: 177, column: 73, scope: !3182, inlinedAt: !3189)
!3189 = !DILocation(line: 41, column: 18, scope: !3133, inlinedAt: !3125)
!3190 = !DILocation(line: 177, column: 56, scope: !2963)
!3191 = !DILocalVariable(name: "self", scope: !3192, file: !2954, line: 177, type: !2150, align: 8)
!3192 = !DILexicalBlockFile(scope: !3193, file: !2954, discriminator: 0)
!3193 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h9bed3e949fe567faE", scope: !633, file: !1262, line: 120, type: !3086, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3194)
!3194 = !{!3191}
!3195 = !DILocation(line: 177, column: 43, scope: !3192, inlinedAt: !3196)
!3196 = !DILocation(line: 166, column: 34, scope: !2999, inlinedAt: !3004)
!3197 = !DILocation(line: 177, column: 43, scope: !3113, inlinedAt: !3114)
!3198 = !DILocalVariable(name: "n", scope: !3199, file: !2954, line: 177, type: !9, align: 8)
!3199 = !DILexicalBlockFile(scope: !3200, file: !2954, discriminator: 0)
!3200 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h9ea4e200ee3011edE", scope: !1291, file: !1290, line: 56, type: !1312, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3201)
!3201 = !{!3198, !3202}
!3202 = !DILocalVariable(name: "runtime", scope: !3203, file: !2954, line: 177, type: !1318, align: 8)
!3203 = !DILexicalBlockFile(scope: !3204, file: !2954, discriminator: 0)
!3204 = distinct !DILexicalBlock(scope: !3200, file: !181, line: 2336, column: 13)
!3205 = !DILocation(line: 177, column: 43, scope: !3199, inlinedAt: !3206)
!3206 = !DILocation(line: 41, column: 18, scope: !3117, inlinedAt: !3109)
!3207 = !DILocation(line: 177, column: 31, scope: !2963)
!3208 = !DILocation(line: 178, column: 40, scope: !2965)
!3209 = !DILocation(line: 178, column: 27, scope: !3062, inlinedAt: !3053)
!3210 = !DILocation(line: 178, column: 27, scope: !3047, inlinedAt: !3053)
!3211 = !DILocation(line: 178, column: 27, scope: !2984)
!3212 = !DILocation(line: 178, column: 21, scope: !2967)
!3213 = !DILocation(line: 179, column: 50, scope: !2967)
!3214 = !DILocalVariable(name: "data", scope: !3215, file: !2954, line: 179, type: !296, align: 8)
!3215 = !DILexicalBlockFile(scope: !3216, file: !2954, discriminator: 0)
!3216 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h582fa23464ddbdfaE", scope: !2117, file: !582, line: 487, type: !2991, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3217)
!3217 = !{!3214, !3218}
!3218 = !DILocalVariable(name: "len", scope: !3215, file: !2954, line: 179, type: !9, align: 8)
!3219 = !DILocation(line: 179, column: 20, scope: !3215, inlinedAt: !3220)
!3220 = !DILocation(line: 179, column: 20, scope: !2967)
!3221 = !DILocation(line: 179, column: 55, scope: !2967)
!3222 = !DILocalVariable(name: "self", scope: !3223, file: !2954, line: 179, type: !296, align: 8)
!3223 = !DILexicalBlockFile(scope: !3224, file: !2954, discriminator: 0)
!3224 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9a87f4e9cb3e4acdE", scope: !296, file: !582, line: 330, type: !601, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3225)
!3225 = !{!3222}
!3226 = !DILocation(line: 179, column: 20, scope: !3223, inlinedAt: !3227)
!3227 = !DILocation(line: 489, column: 70, scope: !3216, inlinedAt: !3220)
!3228 = !DILocalVariable(name: "data", scope: !3229, file: !2954, line: 179, type: !596, align: 8)
!3229 = !DILexicalBlockFile(scope: !3230, file: !2954, discriminator: 0)
!3230 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h82575882ad160146E", scope: !202, file: !231, line: 727, type: !3231, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3237)
!3231 = !DISubroutineType(types: !3232)
!3232 = !{!3233, !596, !9}
!3233 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [u8]", file: !2, size: 128, align: 64, elements: !3234, templateParams: !19, identifier: "2081d302591cc0e6b89f57ab75a79c1e")
!3234 = !{!3235, !3236}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3233, file: !2, baseType: !165, size: 64, align: 64)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3233, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3237 = !{!3228, !3238}
!3238 = !DILocalVariable(name: "len", scope: !3229, file: !2954, line: 179, type: !9, align: 8)
!3239 = !DILocation(line: 179, column: 20, scope: !3229, inlinedAt: !3240)
!3240 = !DILocation(line: 489, column: 38, scope: !3216, inlinedAt: !3220)
!3241 = !DILocalVariable(name: "self", scope: !3242, file: !2954, line: 179, type: !596, align: 8)
!3242 = !DILexicalBlockFile(scope: !3243, file: !2954, discriminator: 0)
!3243 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h956ec4b8830b0e64E", scope: !1147, file: !1146, line: 45, type: !3244, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !245, retainedNodes: !3246)
!3244 = !DISubroutineType(types: !3245)
!3245 = !{!1136, !596}
!3246 = !{!3241}
!3247 = !DILocation(line: 179, column: 20, scope: !3242, inlinedAt: !3248)
!3248 = !DILocation(line: 728, column: 24, scope: !3230, inlinedAt: !3240)
!3249 = !DILocalVariable(name: "data_address", scope: !3250, file: !2954, line: 179, type: !1136, align: 8)
!3250 = !DILexicalBlockFile(scope: !3251, file: !2954, discriminator: 0)
!3251 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hada98796b0bf4d19E", scope: !253, file: !252, line: 127, type: !3252, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3254)
!3252 = !DISubroutineType(types: !3253)
!3253 = !{!3233, !1136, !9}
!3254 = !{!3249, !3255}
!3255 = !DILocalVariable(name: "metadata", scope: !3250, file: !2954, line: 179, type: !9, align: 8)
!3256 = !DILocation(line: 179, column: 20, scope: !3250, inlinedAt: !3257)
!3257 = !DILocation(line: 728, column: 5, scope: !3230, inlinedAt: !3240)
!3258 = !DILocalVariable(name: "ptr", scope: !3259, file: !2954, line: 179, type: !3233, align: 8)
!3259 = !DILexicalBlockFile(scope: !3260, file: !2954, discriminator: 0)
!3260 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h4d893ff6217c3a18E", scope: !2117, file: !582, line: 196, type: !3261, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3263)
!3261 = !DISubroutineType(types: !3262)
!3262 = !{!2117, !3233}
!3263 = !{!3258}
!3264 = !DILocation(line: 179, column: 20, scope: !3259, inlinedAt: !3265)
!3265 = !DILocation(line: 489, column: 18, scope: !3216, inlinedAt: !3220)
!3266 = !DILocation(line: 179, column: 17, scope: !2967)
!3267 = !DILocation(line: 180, column: 13, scope: !2953)
!3268 = !DILocation(line: 182, column: 6, scope: !2953)
!3269 = !DILocalVariable(name: "self", scope: !3270, file: !2954, line: 174, type: !296, align: 8)
!3270 = !DILexicalBlockFile(scope: !3271, file: !2954, discriminator: 0)
!3271 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9a87f4e9cb3e4acdE", scope: !296, file: !582, line: 330, type: !601, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3272)
!3272 = !{!3269}
!3273 = !DILocation(line: 174, column: 21, scope: !3270, inlinedAt: !3274)
!3274 = !DILocation(line: 489, column: 70, scope: !2990, inlinedAt: !2996)
!3275 = !DILocalVariable(name: "data", scope: !3276, file: !2954, line: 174, type: !596, align: 8)
!3276 = !DILexicalBlockFile(scope: !3277, file: !2954, discriminator: 0)
!3277 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h82575882ad160146E", scope: !202, file: !231, line: 727, type: !3231, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3278)
!3278 = !{!3275, !3279}
!3279 = !DILocalVariable(name: "len", scope: !3276, file: !2954, line: 174, type: !9, align: 8)
!3280 = !DILocation(line: 174, column: 21, scope: !3276, inlinedAt: !3281)
!3281 = !DILocation(line: 489, column: 38, scope: !2990, inlinedAt: !2996)
!3282 = !DILocalVariable(name: "self", scope: !3283, file: !2954, line: 174, type: !596, align: 8)
!3283 = !DILexicalBlockFile(scope: !3284, file: !2954, discriminator: 0)
!3284 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h956ec4b8830b0e64E", scope: !1147, file: !1146, line: 45, type: !3244, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !245, retainedNodes: !3285)
!3285 = !{!3282}
!3286 = !DILocation(line: 174, column: 21, scope: !3283, inlinedAt: !3287)
!3287 = !DILocation(line: 728, column: 24, scope: !3277, inlinedAt: !3281)
!3288 = !DILocalVariable(name: "data_address", scope: !3289, file: !2954, line: 174, type: !1136, align: 8)
!3289 = !DILexicalBlockFile(scope: !3290, file: !2954, discriminator: 0)
!3290 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hada98796b0bf4d19E", scope: !253, file: !252, line: 127, type: !3252, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3291)
!3291 = !{!3288, !3292}
!3292 = !DILocalVariable(name: "metadata", scope: !3289, file: !2954, line: 174, type: !9, align: 8)
!3293 = !DILocation(line: 174, column: 21, scope: !3289, inlinedAt: !3294)
!3294 = !DILocation(line: 728, column: 5, scope: !3277, inlinedAt: !3281)
!3295 = !DILocalVariable(name: "ptr", scope: !3296, file: !2954, line: 174, type: !3233, align: 8)
!3296 = !DILexicalBlockFile(scope: !3297, file: !2954, discriminator: 0)
!3297 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h4d893ff6217c3a18E", scope: !2117, file: !582, line: 196, type: !3261, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3298)
!3298 = !{!3295}
!3299 = !DILocation(line: 174, column: 21, scope: !3296, inlinedAt: !3300)
!3300 = !DILocation(line: 489, column: 18, scope: !2990, inlinedAt: !2996)
!3301 = !DILocation(line: 174, column: 18, scope: !2953)
!3302 = !DILocation(line: 174, column: 72, scope: !2953)
!3303 = distinct !DISubprogram(name: "grow_impl", linkageName: "_ZN5alloc5alloc6Global9grow_impl17h09b2f7ca3556491fE", scope: !304, file: !2954, line: 186, type: !3304, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3306)
!3304 = !DISubroutineType(types: !3305)
!3305 = !{!2109, !2957, !296, !633, !633, !29}
!3306 = !{!3307, !3308, !3309, !3310, !3311, !3312, !3314, !3315, !3317, !3319, !3321, !3323, !3325, !3327, !3329, !3331}
!3307 = !DILocalVariable(name: "self", arg: 1, scope: !3303, file: !2954, line: 187, type: !2957)
!3308 = !DILocalVariable(name: "ptr", arg: 2, scope: !3303, file: !2954, line: 188, type: !296)
!3309 = !DILocalVariable(name: "old_layout", arg: 3, scope: !3303, file: !2954, line: 189, type: !633)
!3310 = !DILocalVariable(name: "new_layout", arg: 4, scope: !3303, file: !2954, line: 190, type: !633)
!3311 = !DILocalVariable(name: "zeroed", arg: 5, scope: !3303, file: !2954, line: 191, type: !29)
!3312 = !DILocalVariable(name: "old_size", scope: !3313, file: !2954, line: 203, type: !9, align: 8)
!3313 = distinct !DILexicalBlock(scope: !3303, file: !2954, line: 203, column: 13)
!3314 = !DILocalVariable(name: "old_size", scope: !3313, file: !2954, line: 203, type: !186, align: 8)
!3315 = !DILocalVariable(name: "new_size", scope: !3316, file: !2954, line: 204, type: !9, align: 8)
!3316 = distinct !DILexicalBlock(scope: !3313, file: !2954, line: 204, column: 17)
!3317 = !DILocalVariable(name: "raw_ptr", scope: !3318, file: !2954, line: 209, type: !596, align: 8)
!3318 = distinct !DILexicalBlock(scope: !3316, file: !2954, line: 209, column: 17)
!3319 = !DILocalVariable(name: "ptr", scope: !3320, file: !2954, line: 210, type: !296, align: 8)
!3320 = distinct !DILexicalBlock(scope: !3318, file: !2954, line: 210, column: 17)
!3321 = !DILocalVariable(name: "residual", scope: !3322, file: !2954, line: 210, type: !2970, align: 1)
!3322 = distinct !DILexicalBlock(scope: !3318, file: !2954, line: 210, column: 66)
!3323 = !DILocalVariable(name: "val", scope: !3324, file: !2954, line: 210, type: !296, align: 8)
!3324 = distinct !DILexicalBlock(scope: !3318, file: !2954, line: 210, column: 27)
!3325 = !DILocalVariable(name: "old_size", scope: !3326, file: !2954, line: 222, type: !9, align: 8)
!3326 = distinct !DILexicalBlock(scope: !3303, file: !2954, line: 222, column: 13)
!3327 = !DILocalVariable(name: "new_ptr", scope: !3328, file: !2954, line: 223, type: !2117, align: 8)
!3328 = distinct !DILexicalBlock(scope: !3326, file: !2954, line: 223, column: 17)
!3329 = !DILocalVariable(name: "residual", scope: !3330, file: !2954, line: 223, type: !2970, align: 1)
!3330 = distinct !DILexicalBlock(scope: !3326, file: !2954, line: 223, column: 66)
!3331 = !DILocalVariable(name: "val", scope: !3332, file: !2954, line: 223, type: !2117, align: 8)
!3332 = distinct !DILexicalBlock(scope: !3326, file: !2954, line: 223, column: 31)
!3333 = !DILocation(line: 187, column: 9, scope: !3303)
!3334 = !DILocation(line: 188, column: 9, scope: !3303)
!3335 = !DILocation(line: 189, column: 9, scope: !3303)
!3336 = !DILocation(line: 190, column: 9, scope: !3303)
!3337 = !DILocation(line: 191, column: 9, scope: !3303)
!3338 = !DILocalVariable(name: "layout", scope: !3339, file: !2954, line: 209, type: !633, align: 8)
!3339 = distinct !DISubprogram(name: "realloc", linkageName: "_ZN5alloc5alloc7realloc17hdfa11972222af479E", scope: !305, file: !2954, line: 131, type: !3340, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3342)
!3340 = !DISubroutineType(types: !3341)
!3341 = !{!596, !596, !633, !9}
!3342 = !{!3343, !3338, !3344}
!3343 = !DILocalVariable(name: "ptr", scope: !3339, file: !2954, line: 209, type: !596, align: 8)
!3344 = !DILocalVariable(name: "new_size", scope: !3339, file: !2954, line: 209, type: !9, align: 8)
!3345 = !DILocation(line: 209, column: 31, scope: !3339, inlinedAt: !3346)
!3346 = !DILocation(line: 209, column: 31, scope: !3316)
!3347 = !DILocalVariable(name: "self", scope: !3348, file: !2954, line: 210, type: !3031, align: 8)
!3348 = !DILexicalBlockFile(scope: !3349, file: !2954, discriminator: 0)
!3349 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h01a7ddb0e89b86b0E", scope: !1360, file: !673, line: 2117, type: !3013, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !3039, retainedNodes: !3350)
!3350 = !{!3347, !3351, !3354}
!3351 = !DILocalVariable(name: "v", scope: !3352, file: !2954, line: 210, type: !296, align: 8)
!3352 = !DILexicalBlockFile(scope: !3353, file: !2954, discriminator: 0)
!3353 = distinct !DILexicalBlock(scope: !3349, file: !673, line: 2119, column: 13)
!3354 = !DILocalVariable(name: "e", scope: !3355, file: !2954, line: 210, type: !2123, align: 1)
!3355 = !DILexicalBlockFile(scope: !3356, file: !2954, discriminator: 0)
!3356 = distinct !DILexicalBlock(scope: !3349, file: !673, line: 2120, column: 13)
!3357 = !DILocation(line: 210, column: 27, scope: !3348, inlinedAt: !3358)
!3358 = !DILocation(line: 210, column: 27, scope: !3318)
!3359 = !DILocalVariable(name: "self", scope: !3360, file: !2954, line: 210, type: !1115, align: 8)
!3360 = !DILexicalBlockFile(scope: !3361, file: !2954, discriminator: 0)
!3361 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hd22b751f10fe1dc2E", scope: !1115, file: !1406, line: 1051, type: !3057, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !3039, retainedNodes: !3362)
!3362 = !{!3359, !3363, !3364}
!3363 = !DILocalVariable(name: "err", scope: !3360, file: !2954, line: 210, type: !2123, align: 1)
!3364 = !DILocalVariable(name: "v", scope: !3365, file: !2954, line: 210, type: !296, align: 8)
!3365 = !DILexicalBlockFile(scope: !3366, file: !2954, discriminator: 0)
!3366 = distinct !DILexicalBlock(scope: !3361, file: !1406, line: 1056, column: 13)
!3367 = !DILocation(line: 210, column: 27, scope: !3360, inlinedAt: !3358)
!3368 = !DILocation(line: 210, column: 66, scope: !3322)
!3369 = !DILocalVariable(name: "residual", scope: !3370, file: !2954, line: 210, type: !2970, align: 1)
!3370 = !DILexicalBlockFile(scope: !3371, file: !2954, discriminator: 0)
!3371 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h732f17c38d230dc6E", scope: !674, file: !673, line: 2132, type: !3069, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !3075, retainedNodes: !3372)
!3372 = !{!3369, !3373}
!3373 = !DILocalVariable(name: "e", scope: !3374, file: !2954, line: 210, type: !2123, align: 1)
!3374 = !DILexicalBlockFile(scope: !3375, file: !2954, discriminator: 0)
!3375 = distinct !DILexicalBlock(scope: !3371, file: !673, line: 2134, column: 13)
!3376 = !DILocation(line: 210, column: 27, scope: !3370, inlinedAt: !3377)
!3377 = !DILocation(line: 210, column: 27, scope: !3322)
!3378 = !DILocalVariable(name: "self", scope: !3379, file: !2954, line: 223, type: !2109, align: 8)
!3379 = !DILexicalBlockFile(scope: !3380, file: !2954, discriminator: 0)
!3380 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h94541cb46a9bcb18E", scope: !1360, file: !673, line: 2117, type: !3381, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2120, retainedNodes: !3398)
!3381 = !DISubroutineType(types: !3382)
!3382 = !{!3383, !2109}
!3383 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>", scope: !1364, file: !2, size: 128, align: 64, elements: !3384, templateParams: !19, identifier: "742106b60153cc66c591376c04358a32")
!3384 = !{!3385}
!3385 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3383, file: !2, size: 128, align: 64, elements: !3386, templateParams: !19, identifier: "51e560db12d8945267902f7758889ab2", discriminator: !3397)
!3386 = !{!3387, !3393}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3385, file: !2, baseType: !3388, size: 128, align: 64)
!3388 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3383, file: !2, size: 128, align: 64, elements: !3389, templateParams: !3391, identifier: "7a7db6f08dd8181ffbc0406581832086")
!3389 = !{!3390}
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3388, file: !2, baseType: !2117, size: 128, align: 64)
!3391 = !{!3024, !3392}
!3392 = !DITemplateTypeParameter(name: "C", type: !2117)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3385, file: !2, baseType: !3394, size: 128, align: 64, extraData: i64 0)
!3394 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3383, file: !2, size: 128, align: 64, elements: !3395, templateParams: !3391, identifier: "520e4a70aaf12c465e959335c5fb5ede")
!3395 = !{!3396}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3394, file: !2, baseType: !2970, align: 8)
!3397 = !DIDerivedType(tag: DW_TAG_member, scope: !3383, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!3398 = !{!3378, !3399, !3402}
!3399 = !DILocalVariable(name: "v", scope: !3400, file: !2954, line: 223, type: !2117, align: 8)
!3400 = !DILexicalBlockFile(scope: !3401, file: !2954, discriminator: 0)
!3401 = distinct !DILexicalBlock(scope: !3380, file: !673, line: 2119, column: 13)
!3402 = !DILocalVariable(name: "e", scope: !3403, file: !2954, line: 223, type: !2123, align: 1)
!3403 = !DILexicalBlockFile(scope: !3404, file: !2954, discriminator: 0)
!3404 = distinct !DILexicalBlock(scope: !3380, file: !673, line: 2120, column: 13)
!3405 = !DILocation(line: 223, column: 31, scope: !3379, inlinedAt: !3406)
!3406 = !DILocation(line: 223, column: 31, scope: !3326)
!3407 = !DILocation(line: 223, column: 66, scope: !3330)
!3408 = !DILocalVariable(name: "residual", scope: !3409, file: !2954, line: 223, type: !2970, align: 1)
!3409 = !DILexicalBlockFile(scope: !3410, file: !2954, discriminator: 0)
!3410 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h732f17c38d230dc6E", scope: !674, file: !673, line: 2132, type: !3069, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !3075, retainedNodes: !3411)
!3411 = !{!3408, !3412}
!3412 = !DILocalVariable(name: "e", scope: !3413, file: !2954, line: 223, type: !2123, align: 1)
!3413 = !DILexicalBlockFile(scope: !3414, file: !2954, discriminator: 0)
!3414 = distinct !DILexicalBlock(scope: !3410, file: !673, line: 2134, column: 13)
!3415 = !DILocation(line: 223, column: 31, scope: !3409, inlinedAt: !3416)
!3416 = !DILocation(line: 223, column: 31, scope: !3330)
!3417 = !DILocalVariable(name: "self", scope: !3418, file: !2954, line: 203, type: !1291, align: 8)
!3418 = !DILexicalBlockFile(scope: !3419, file: !2954, discriminator: 0)
!3419 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h80c50717bd3ed3c3E", scope: !1291, file: !1290, line: 82, type: !1295, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3420)
!3420 = !{!3417}
!3421 = !DILocation(line: 203, column: 25, scope: !3418, inlinedAt: !3422)
!3422 = !DILocation(line: 131, column: 9, scope: !3423, inlinedAt: !3427)
!3423 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h70611acb1b9cd6d8E", scope: !633, file: !1262, line: 130, type: !3086, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3424)
!3424 = !{!3425}
!3425 = !DILocalVariable(name: "self", scope: !3426, file: !2954, line: 203, type: !2150, align: 8)
!3426 = !DILexicalBlockFile(scope: !3423, file: !2954, discriminator: 0)
!3427 = !DILocation(line: 203, column: 25, scope: !3303)
!3428 = !DILocalVariable(name: "self", scope: !3429, file: !2954, line: 203, type: !639, align: 8)
!3429 = !DILexicalBlockFile(scope: !3430, file: !2954, discriminator: 0)
!3430 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17hcb3f9b7ba4faab99E", scope: !639, file: !1303, line: 39, type: !1304, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3431)
!3431 = !{!3428}
!3432 = !DILocation(line: 203, column: 25, scope: !3429, inlinedAt: !3422)
!3433 = !DILocalVariable(name: "self", scope: !3434, file: !2954, line: 203, type: !1291, align: 8)
!3434 = !DILexicalBlockFile(scope: !3435, file: !2954, discriminator: 0)
!3435 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h80c50717bd3ed3c3E", scope: !1291, file: !1290, line: 82, type: !1295, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3436)
!3436 = !{!3433}
!3437 = !DILocation(line: 203, column: 47, scope: !3434, inlinedAt: !3438)
!3438 = !DILocation(line: 131, column: 9, scope: !3439, inlinedAt: !3443)
!3439 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h70611acb1b9cd6d8E", scope: !633, file: !1262, line: 130, type: !3086, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3440)
!3440 = !{!3441}
!3441 = !DILocalVariable(name: "self", scope: !3442, file: !2954, line: 203, type: !2150, align: 8)
!3442 = !DILexicalBlockFile(scope: !3439, file: !2954, discriminator: 0)
!3443 = !DILocation(line: 203, column: 47, scope: !3303)
!3444 = !DILocalVariable(name: "self", scope: !3445, file: !2954, line: 203, type: !639, align: 8)
!3445 = !DILexicalBlockFile(scope: !3446, file: !2954, discriminator: 0)
!3446 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17hcb3f9b7ba4faab99E", scope: !639, file: !1303, line: 39, type: !1304, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3447)
!3447 = !{!3444}
!3448 = !DILocation(line: 203, column: 47, scope: !3445, inlinedAt: !3438)
!3449 = !DILocalVariable(name: "self", scope: !3450, file: !2954, line: 209, type: !1291, align: 8)
!3450 = !DILexicalBlockFile(scope: !3451, file: !2954, discriminator: 0)
!3451 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h80c50717bd3ed3c3E", scope: !1291, file: !1290, line: 82, type: !1295, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3452)
!3452 = !{!3449}
!3453 = !DILocation(line: 209, column: 31, scope: !3450, inlinedAt: !3454)
!3454 = !DILocation(line: 131, column: 9, scope: !3455, inlinedAt: !3459)
!3455 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h70611acb1b9cd6d8E", scope: !633, file: !1262, line: 130, type: !3086, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3456)
!3456 = !{!3457}
!3457 = !DILocalVariable(name: "self", scope: !3458, file: !2954, line: 209, type: !2150, align: 8)
!3458 = !DILexicalBlockFile(scope: !3455, file: !2954, discriminator: 0)
!3459 = !DILocation(line: 132, column: 49, scope: !3339, inlinedAt: !3346)
!3460 = !DILocalVariable(name: "self", scope: !3461, file: !2954, line: 209, type: !639, align: 8)
!3461 = !DILexicalBlockFile(scope: !3462, file: !2954, discriminator: 0)
!3462 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17hcb3f9b7ba4faab99E", scope: !639, file: !1303, line: 39, type: !1304, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3463)
!3463 = !{!3460}
!3464 = !DILocation(line: 209, column: 31, scope: !3461, inlinedAt: !3454)
!3465 = !DILocation(line: 210, column: 27, scope: !3355, inlinedAt: !3358)
!3466 = !DILocation(line: 210, column: 27, scope: !3374, inlinedAt: !3377)
!3467 = !DILocation(line: 223, column: 31, scope: !3403, inlinedAt: !3406)
!3468 = !DILocation(line: 223, column: 31, scope: !3413, inlinedAt: !3416)
!3469 = !DILocalVariable(name: "self", scope: !3470, file: !2954, line: 224, type: !296, align: 8)
!3470 = !DILexicalBlockFile(scope: !3471, file: !2954, discriminator: 0)
!3471 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9a87f4e9cb3e4acdE", scope: !296, file: !582, line: 330, type: !601, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3472)
!3472 = !{!3469}
!3473 = !DILocation(line: 224, column: 56, scope: !3470, inlinedAt: !3474)
!3474 = !DILocation(line: 553, column: 9, scope: !3475, inlinedAt: !3481)
!3475 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hd051024d9816467fE", scope: !2117, file: !582, line: 552, type: !3476, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3478)
!3476 = !DISubroutineType(types: !3477)
!3477 = !{!596, !2117}
!3478 = !{!3479}
!3479 = !DILocalVariable(name: "self", scope: !3480, file: !2954, line: 224, type: !2117, align: 8)
!3480 = !DILexicalBlockFile(scope: !3475, file: !2954, discriminator: 0)
!3481 = !DILocation(line: 224, column: 56, scope: !3328)
!3482 = !DILocalVariable(name: "runtime", scope: !3483, file: !2954, line: 224, type: !2597, align: 8)
!3483 = !DILexicalBlockFile(scope: !3484, file: !2954, discriminator: 0)
!3484 = distinct !DILexicalBlock(scope: !3485, file: !181, line: 2336, column: 13)
!3485 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17hb814e87504d112eeE", scope: !2589, file: !181, line: 2458, type: !2590, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3486)
!3486 = !{!3487, !3489, !3490, !3482}
!3487 = !DILocalVariable(name: "src", scope: !3488, file: !2954, line: 224, type: !205, align: 8)
!3488 = !DILexicalBlockFile(scope: !3485, file: !2954, discriminator: 0)
!3489 = !DILocalVariable(name: "dst", scope: !3488, file: !2954, line: 224, type: !596, align: 8)
!3490 = !DILocalVariable(name: "count", scope: !3488, file: !2954, line: 224, type: !9, align: 8)
!3491 = !DILocation(line: 224, column: 17, scope: !3483, inlinedAt: !3492)
!3492 = !DILocation(line: 224, column: 17, scope: !3328)
!3493 = !DILocation(line: 198, column: 15, scope: !3303)
!3494 = !DILocalVariable(name: "self", scope: !3495, file: !2954, line: 198, type: !2150, align: 8)
!3495 = !DILexicalBlockFile(scope: !3496, file: !2954, discriminator: 0)
!3496 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h9bed3e949fe567faE", scope: !633, file: !1262, line: 120, type: !3086, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3497)
!3497 = !{!3494}
!3498 = !DILocation(line: 198, column: 15, scope: !3495, inlinedAt: !3493)
!3499 = !DILocation(line: 198, column: 9, scope: !3303)
!3500 = !DILocation(line: 199, column: 34, scope: !3303)
!3501 = !DILocation(line: 199, column: 18, scope: !3303)
!3502 = !DILocation(line: 203, column: 25, scope: !3426, inlinedAt: !3427)
!3503 = !DILocalVariable(name: "n", scope: !3504, file: !2954, line: 203, type: !9, align: 8)
!3504 = !DILexicalBlockFile(scope: !3505, file: !2954, discriminator: 0)
!3505 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h9ea4e200ee3011edE", scope: !1291, file: !1290, line: 56, type: !1312, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3506)
!3506 = !{!3503, !3507}
!3507 = !DILocalVariable(name: "runtime", scope: !3508, file: !2954, line: 203, type: !1318, align: 8)
!3508 = !DILexicalBlockFile(scope: !3509, file: !2954, discriminator: 0)
!3509 = distinct !DILexicalBlock(scope: !3505, file: !181, line: 2336, column: 13)
!3510 = !DILocation(line: 203, column: 25, scope: !3504, inlinedAt: !3511)
!3511 = !DILocation(line: 41, column: 18, scope: !3430, inlinedAt: !3422)
!3512 = !DILocation(line: 203, column: 47, scope: !3442, inlinedAt: !3443)
!3513 = !DILocalVariable(name: "n", scope: !3514, file: !2954, line: 203, type: !9, align: 8)
!3514 = !DILexicalBlockFile(scope: !3515, file: !2954, discriminator: 0)
!3515 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h9ea4e200ee3011edE", scope: !1291, file: !1290, line: 56, type: !1312, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3516)
!3516 = !{!3513, !3517}
!3517 = !DILocalVariable(name: "runtime", scope: !3518, file: !2954, line: 203, type: !1318, align: 8)
!3518 = !DILexicalBlockFile(scope: !3519, file: !2954, discriminator: 0)
!3519 = distinct !DILexicalBlock(scope: !3515, file: !181, line: 2336, column: 13)
!3520 = !DILocation(line: 203, column: 47, scope: !3514, inlinedAt: !3521)
!3521 = !DILocation(line: 41, column: 18, scope: !3446, inlinedAt: !3438)
!3522 = !DILocation(line: 222, column: 13, scope: !3303)
!3523 = !DILocation(line: 222, column: 13, scope: !3326)
!3524 = !DILocation(line: 223, column: 47, scope: !3326)
!3525 = !DILocation(line: 203, column: 13, scope: !3303)
!3526 = !DILocation(line: 203, column: 13, scope: !3313)
!3527 = !DILocation(line: 204, column: 32, scope: !3313)
!3528 = !DILocalVariable(name: "self", scope: !3529, file: !2954, line: 204, type: !2150, align: 8)
!3529 = !DILexicalBlockFile(scope: !3530, file: !2954, discriminator: 0)
!3530 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h9bed3e949fe567faE", scope: !633, file: !1262, line: 120, type: !3086, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3531)
!3531 = !{!3528}
!3532 = !DILocation(line: 204, column: 32, scope: !3529, inlinedAt: !3527)
!3533 = !DILocation(line: 204, column: 21, scope: !3316)
!3534 = !DILocation(line: 207, column: 48, scope: !3316)
!3535 = !DILocalVariable(name: "self", scope: !3536, file: !2954, line: 207, type: !2150, align: 8)
!3536 = !DILexicalBlockFile(scope: !3537, file: !2954, discriminator: 0)
!3537 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h9bed3e949fe567faE", scope: !633, file: !1262, line: 120, type: !3086, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3538)
!3538 = !{!3535}
!3539 = !DILocation(line: 207, column: 48, scope: !3536, inlinedAt: !3534)
!3540 = !DILocation(line: 207, column: 36, scope: !3316)
!3541 = !DILocation(line: 207, column: 17, scope: !3316)
!3542 = !DILocation(line: 209, column: 39, scope: !3316)
!3543 = !DILocalVariable(name: "self", scope: !3544, file: !2954, line: 209, type: !296, align: 8)
!3544 = !DILexicalBlockFile(scope: !3545, file: !2954, discriminator: 0)
!3545 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9a87f4e9cb3e4acdE", scope: !296, file: !582, line: 330, type: !601, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3546)
!3546 = !{!3543}
!3547 = !DILocation(line: 209, column: 39, scope: !3544, inlinedAt: !3542)
!3548 = !DILocation(line: 209, column: 53, scope: !3316)
!3549 = !DILocation(line: 209, column: 65, scope: !3316)
!3550 = !DILocalVariable(name: "self", scope: !3551, file: !2954, line: 209, type: !2150, align: 8)
!3551 = !DILexicalBlockFile(scope: !3552, file: !2954, discriminator: 0)
!3552 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h9bed3e949fe567faE", scope: !633, file: !1262, line: 120, type: !3086, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3553)
!3553 = !{!3550}
!3554 = !DILocation(line: 209, column: 31, scope: !3551, inlinedAt: !3555)
!3555 = !DILocation(line: 132, column: 34, scope: !3339, inlinedAt: !3346)
!3556 = !DILocation(line: 209, column: 31, scope: !3458, inlinedAt: !3459)
!3557 = !DILocalVariable(name: "n", scope: !3558, file: !2954, line: 209, type: !9, align: 8)
!3558 = !DILexicalBlockFile(scope: !3559, file: !2954, discriminator: 0)
!3559 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h9ea4e200ee3011edE", scope: !1291, file: !1290, line: 56, type: !1312, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3560)
!3560 = !{!3557, !3561}
!3561 = !DILocalVariable(name: "runtime", scope: !3562, file: !2954, line: 209, type: !1318, align: 8)
!3562 = !DILexicalBlockFile(scope: !3563, file: !2954, discriminator: 0)
!3563 = distinct !DILexicalBlock(scope: !3559, file: !181, line: 2336, column: 13)
!3564 = !DILocation(line: 209, column: 31, scope: !3558, inlinedAt: !3565)
!3565 = !DILocation(line: 41, column: 18, scope: !3462, inlinedAt: !3454)
!3566 = !DILocation(line: 209, column: 21, scope: !3318)
!3567 = !DILocation(line: 210, column: 27, scope: !3365, inlinedAt: !3358)
!3568 = !DILocation(line: 210, column: 27, scope: !3352, inlinedAt: !3358)
!3569 = !DILocation(line: 210, column: 27, scope: !3324)
!3570 = !DILocation(line: 210, column: 21, scope: !3320)
!3571 = !DILocation(line: 211, column: 20, scope: !3320)
!3572 = !DILocation(line: 1, column: 1, scope: !3573)
!3573 = !DILexicalBlockFile(scope: !3303, file: !3574, discriminator: 0)
!3574 = !DIFile(filename: "src/lib.rs", directory: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0", checksumkind: CSK_MD5, checksum: "0be19040ef8b9a3fcdb6ec1c278a269f")
!3575 = !DILocation(line: 229, column: 6, scope: !3303)
!3576 = !DILocation(line: 214, column: 50, scope: !3320)
!3577 = !DILocalVariable(name: "data", scope: !3578, file: !2954, line: 214, type: !296, align: 8)
!3578 = !DILexicalBlockFile(scope: !3579, file: !2954, discriminator: 0)
!3579 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h582fa23464ddbdfaE", scope: !2117, file: !582, line: 487, type: !2991, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3580)
!3580 = !{!3577, !3581}
!3581 = !DILocalVariable(name: "len", scope: !3578, file: !2954, line: 214, type: !9, align: 8)
!3582 = !DILocation(line: 214, column: 20, scope: !3578, inlinedAt: !3583)
!3583 = !DILocation(line: 214, column: 20, scope: !3320)
!3584 = !DILocation(line: 214, column: 55, scope: !3320)
!3585 = !DILocalVariable(name: "self", scope: !3586, file: !2954, line: 214, type: !296, align: 8)
!3586 = !DILexicalBlockFile(scope: !3587, file: !2954, discriminator: 0)
!3587 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9a87f4e9cb3e4acdE", scope: !296, file: !582, line: 330, type: !601, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3588)
!3588 = !{!3585}
!3589 = !DILocation(line: 214, column: 20, scope: !3586, inlinedAt: !3590)
!3590 = !DILocation(line: 489, column: 70, scope: !3579, inlinedAt: !3583)
!3591 = !DILocalVariable(name: "data", scope: !3592, file: !2954, line: 214, type: !596, align: 8)
!3592 = !DILexicalBlockFile(scope: !3593, file: !2954, discriminator: 0)
!3593 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h82575882ad160146E", scope: !202, file: !231, line: 727, type: !3231, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3594)
!3594 = !{!3591, !3595}
!3595 = !DILocalVariable(name: "len", scope: !3592, file: !2954, line: 214, type: !9, align: 8)
!3596 = !DILocation(line: 214, column: 20, scope: !3592, inlinedAt: !3597)
!3597 = !DILocation(line: 489, column: 38, scope: !3579, inlinedAt: !3583)
!3598 = !DILocalVariable(name: "self", scope: !3599, file: !2954, line: 214, type: !596, align: 8)
!3599 = !DILexicalBlockFile(scope: !3600, file: !2954, discriminator: 0)
!3600 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h956ec4b8830b0e64E", scope: !1147, file: !1146, line: 45, type: !3244, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !245, retainedNodes: !3601)
!3601 = !{!3598}
!3602 = !DILocation(line: 214, column: 20, scope: !3599, inlinedAt: !3603)
!3603 = !DILocation(line: 728, column: 24, scope: !3593, inlinedAt: !3597)
!3604 = !DILocalVariable(name: "data_address", scope: !3605, file: !2954, line: 214, type: !1136, align: 8)
!3605 = !DILexicalBlockFile(scope: !3606, file: !2954, discriminator: 0)
!3606 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hada98796b0bf4d19E", scope: !253, file: !252, line: 127, type: !3252, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3607)
!3607 = !{!3604, !3608}
!3608 = !DILocalVariable(name: "metadata", scope: !3605, file: !2954, line: 214, type: !9, align: 8)
!3609 = !DILocation(line: 214, column: 20, scope: !3605, inlinedAt: !3610)
!3610 = !DILocation(line: 728, column: 5, scope: !3593, inlinedAt: !3597)
!3611 = !DILocalVariable(name: "ptr", scope: !3612, file: !2954, line: 214, type: !3233, align: 8)
!3612 = !DILexicalBlockFile(scope: !3613, file: !2954, discriminator: 0)
!3613 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h4d893ff6217c3a18E", scope: !2117, file: !582, line: 196, type: !3261, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3614)
!3614 = !{!3611}
!3615 = !DILocation(line: 214, column: 20, scope: !3612, inlinedAt: !3616)
!3616 = !DILocation(line: 489, column: 18, scope: !3579, inlinedAt: !3583)
!3617 = !DILocation(line: 214, column: 17, scope: !3320)
!3618 = !DILocation(line: 215, column: 13, scope: !3303)
!3619 = !DILocation(line: 212, column: 21, scope: !3320)
!3620 = !DILocalVariable(name: "self", scope: !3621, file: !2954, line: 212, type: !596, align: 8)
!3621 = !DILexicalBlockFile(scope: !3622, file: !2954, discriminator: 0)
!3622 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h305297f93d26d39bE", scope: !1147, file: !1146, line: 985, type: !2624, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3623)
!3623 = !{!3620, !3624}
!3624 = !DILocalVariable(name: "count", scope: !3621, file: !2954, line: 212, type: !9, align: 8)
!3625 = !DILocation(line: 212, column: 21, scope: !3621, inlinedAt: !3619)
!3626 = !DILocation(line: 212, column: 33, scope: !3320)
!3627 = !DILocalVariable(name: "self", scope: !3628, file: !2954, line: 212, type: !596, align: 8)
!3628 = !DILexicalBlockFile(scope: !3629, file: !2954, discriminator: 0)
!3629 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hc6cc4dbd9902a0dfE", scope: !1147, file: !1146, line: 465, type: !2633, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3630)
!3630 = !{!3627, !3631}
!3631 = !DILocalVariable(name: "count", scope: !3628, file: !2954, line: 212, type: !223, align: 8)
!3632 = !DILocation(line: 212, column: 21, scope: !3628, inlinedAt: !3633)
!3633 = !DILocation(line: 990, column: 18, scope: !3622, inlinedAt: !3619)
!3634 = !DILocalVariable(name: "self", scope: !3635, file: !2954, line: 212, type: !596, align: 8)
!3635 = !DILexicalBlockFile(scope: !3636, file: !2954, discriminator: 0)
!3636 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17h4789fa4b6bd6b262E", scope: !1147, file: !1146, line: 1441, type: !3637, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3639)
!3637 = !DISubroutineType(types: !3638)
!3638 = !{null, !596, !124, !9}
!3639 = !{!3634, !3640, !3641}
!3640 = !DILocalVariable(name: "val", scope: !3635, file: !2954, line: 212, type: !124, align: 1)
!3641 = !DILocalVariable(name: "count", scope: !3635, file: !2954, line: 212, type: !9, align: 8)
!3642 = !DILocation(line: 212, column: 21, scope: !3635, inlinedAt: !3619)
!3643 = !DILocation(line: 212, column: 58, scope: !3320)
!3644 = !DILocalVariable(name: "dst", scope: !3645, file: !2954, line: 212, type: !596, align: 8)
!3645 = !DILexicalBlockFile(scope: !3646, file: !2954, discriminator: 0)
!3646 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core10intrinsics11write_bytes17h6e059fa2f3c06af2E", scope: !2589, file: !181, line: 2613, type: !3637, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3647)
!3647 = !{!3644, !3648, !3649, !3650}
!3648 = !DILocalVariable(name: "val", scope: !3645, file: !2954, line: 212, type: !124, align: 1)
!3649 = !DILocalVariable(name: "count", scope: !3645, file: !2954, line: 212, type: !9, align: 8)
!3650 = !DILocalVariable(name: "runtime", scope: !3651, file: !2954, line: 212, type: !3653, align: 8)
!3651 = !DILexicalBlockFile(scope: !3652, file: !2954, discriminator: 0)
!3652 = distinct !DILexicalBlock(scope: !3646, file: !181, line: 2336, column: 13)
!3653 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !3654, file: !2, size: 64, align: 64, elements: !3655, templateParams: !19, identifier: "6002da543977e8e7318dc1c6e6a51af")
!3654 = !DINamespace(name: "write_bytes", scope: !2589)
!3655 = !{!3656}
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__dst", scope: !3653, file: !2, baseType: !2602, size: 64, align: 64)
!3657 = !DILocation(line: 212, column: 21, scope: !3645, inlinedAt: !3658)
!3658 = !DILocation(line: 1446, column: 18, scope: !3636, inlinedAt: !3619)
!3659 = !DILocation(line: 211, column: 17, scope: !3320)
!3660 = !DILocation(line: 223, column: 31, scope: !3400, inlinedAt: !3406)
!3661 = !DILocation(line: 223, column: 31, scope: !3332)
!3662 = !DILocation(line: 223, column: 21, scope: !3328)
!3663 = !DILocation(line: 224, column: 42, scope: !3328)
!3664 = !DILocalVariable(name: "self", scope: !3665, file: !2954, line: 224, type: !296, align: 8)
!3665 = !DILexicalBlockFile(scope: !3666, file: !2954, discriminator: 0)
!3666 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9a87f4e9cb3e4acdE", scope: !296, file: !582, line: 330, type: !601, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3667)
!3667 = !{!3664}
!3668 = !DILocation(line: 224, column: 42, scope: !3665, inlinedAt: !3663)
!3669 = !DILocation(line: 224, column: 17, scope: !3488, inlinedAt: !3492)
!3670 = !DILocation(line: 224, column: 56, scope: !3480, inlinedAt: !3481)
!3671 = !DILocalVariable(name: "self", scope: !3672, file: !2954, line: 224, type: !2117, align: 8)
!3672 = !DILexicalBlockFile(scope: !3673, file: !2954, discriminator: 0)
!3673 = distinct !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h583958f262aef4deE", scope: !2117, file: !582, line: 532, type: !3674, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3676)
!3674 = !DISubroutineType(types: !3675)
!3675 = !{!296, !2117}
!3676 = !{!3671}
!3677 = !DILocation(line: 224, column: 56, scope: !3672, inlinedAt: !3474)
!3678 = !DILocalVariable(name: "self", scope: !3679, file: !2954, line: 224, type: !2117, align: 8)
!3679 = !DILexicalBlockFile(scope: !3680, file: !2954, discriminator: 0)
!3680 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf80eb1f9846f7798E", scope: !2117, file: !582, line: 330, type: !3681, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3683)
!3681 = !DISubroutineType(types: !3682)
!3682 = !{!3233, !2117}
!3683 = !{!3678}
!3684 = !DILocation(line: 224, column: 56, scope: !3679, inlinedAt: !3685)
!3685 = !DILocation(line: 534, column: 41, scope: !3673, inlinedAt: !3474)
!3686 = !DILocalVariable(name: "self", scope: !3687, file: !2954, line: 224, type: !3233, align: 8)
!3687 = !DILexicalBlockFile(scope: !3688, file: !2954, discriminator: 0)
!3688 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h3f8ea9b590ebaabaE", scope: !3689, file: !1146, line: 1778, type: !3690, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3692)
!3689 = !DINamespace(name: "{impl#1}", scope: !1148)
!3690 = !DISubroutineType(types: !3691)
!3691 = !{!596, !3233}
!3692 = !{!3686}
!3693 = !DILocation(line: 224, column: 56, scope: !3687, inlinedAt: !3685)
!3694 = !DILocalVariable(name: "ptr", scope: !3695, file: !2954, line: 224, type: !596, align: 8)
!3695 = !DILexicalBlockFile(scope: !3696, file: !2954, discriminator: 0)
!3696 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hfaafb5192c9d4d91E", scope: !296, file: !582, line: 196, type: !608, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !3697)
!3697 = !{!3694}
!3698 = !DILocation(line: 224, column: 56, scope: !3695, inlinedAt: !3699)
!3699 = !DILocation(line: 534, column: 18, scope: !3673, inlinedAt: !3474)
!3700 = !DILocation(line: 224, column: 78, scope: !3328)
!3701 = !DILocation(line: 225, column: 38, scope: !3328)
!3702 = !DILocation(line: 225, column: 17, scope: !3328)
!3703 = !DILocation(line: 226, column: 17, scope: !3328)
!3704 = !DILocation(line: 227, column: 13, scope: !3303)
!3705 = !DILocation(line: 199, column: 52, scope: !3303)
!3706 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc6string108_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..borrow..Cow$LT$str$GT$$GT$4from17h14dc4de5d838698fE", scope: !3708, file: !3707, line: 2741, type: !2363, scopeLine: 2741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3709)
!3707 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/string.rs", directory: "", checksumkind: CSK_MD5, checksum: "e1c2cdf24b94f38a53da13b30e8aa8ef")
!3708 = !DINamespace(name: "{impl#57}", scope: !284)
!3709 = !{!3710}
!3710 = !DILocalVariable(name: "s", arg: 1, scope: !3706, file: !3707, line: 2741, type: !283)
!3711 = !DILocation(line: 2741, column: 13, scope: !3706)
!3712 = !DILocation(line: 2742, column: 20, scope: !3706)
!3713 = !DILocation(line: 2742, column: 9, scope: !3706)
!3714 = !DILocation(line: 2743, column: 6, scope: !3706)
!3715 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN5alloc6string6String19from_utf8_unchecked17h3c17280b4df2ae37E", scope: !283, file: !3707, line: 844, type: !3716, scopeLine: 844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3718)
!3716 = !DISubroutineType(types: !3717)
!3717 = !{!283, !287}
!3718 = !{!3719}
!3719 = !DILocalVariable(name: "bytes", arg: 1, scope: !3715, file: !3707, line: 844, type: !287)
!3720 = !DILocation(line: 844, column: 39, scope: !3715)
!3721 = !DILocation(line: 845, column: 23, scope: !3715)
!3722 = !DILocation(line: 845, column: 9, scope: !3715)
!3723 = !DILocation(line: 846, column: 6, scope: !3715)
!3724 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc6string94_$LT$impl$u20$core..convert..From$LT$$RF$str$GT$$u20$for$u20$alloc..borrow..Cow$LT$str$GT$$GT$4from17h95b3d82f164bc25bE", scope: !3725, file: !3707, line: 2718, type: !2322, scopeLine: 2718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3726)
!3725 = !DINamespace(name: "{impl#56}", scope: !284)
!3726 = !{!3727}
!3727 = !DILocalVariable(name: "s", arg: 1, scope: !3724, file: !3707, line: 2718, type: !695)
!3728 = !DILocation(line: 2718, column: 13, scope: !3724)
!3729 = !DILocation(line: 2719, column: 9, scope: !3724)
!3730 = !DILocation(line: 2720, column: 6, scope: !3724)
!3731 = distinct !DISubprogram(name: "finish_grow<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow17h83a782e0c7d1deaeE", scope: !144, file: !384, line: 448, type: !3732, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !3805, retainedNodes: !3752)
!3732 = !DISubroutineType(types: !3733)
!3733 = !{!2131, !1265, !3734, !3751}
!3734 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", scope: !783, file: !2, size: 192, align: 64, elements: !3735, templateParams: !19, identifier: "2441bf159aec13ad0ba597f59aeb1a1")
!3735 = !{!3736}
!3736 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3734, file: !2, size: 192, align: 64, elements: !3737, templateParams: !19, identifier: "d785942d6e728cf8ed28d4d1a571b7a3", discriminator: !3750)
!3737 = !{!3738, !3746}
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3736, file: !2, baseType: !3739, size: 192, align: 64, extraData: i64 0)
!3739 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3734, file: !2, size: 192, align: 64, elements: !19, templateParams: !3740, identifier: "4d71821a6a04b7dadd5f931d25e98cb2")
!3740 = !{!3741}
!3741 = !DITemplateTypeParameter(name: "T", type: !3742)
!3742 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)", file: !2, size: 192, align: 64, elements: !3743, templateParams: !19, identifier: "c358a41279bc49b48121f0f71b1b3c8")
!3743 = !{!3744, !3745}
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3742, file: !2, baseType: !296, size: 64, align: 64)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !3742, file: !2, baseType: !633, size: 128, align: 64, offset: 64)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3736, file: !2, baseType: !3747, size: 192, align: 64)
!3747 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3734, file: !2, size: 192, align: 64, elements: !3748, templateParams: !3740, identifier: "3a54c5b1a06a194b358330f440d65fe5")
!3748 = !{!3749}
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3747, file: !2, baseType: !3742, size: 192, align: 64)
!3750 = !DIDerivedType(tag: DW_TAG_member, scope: !3734, file: !2, baseType: !54, size: 64, align: 64, offset: 128, flags: DIFlagArtificial)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::alloc::Global", baseType: !304, size: 64, align: 64, dwarfAddressSpace: 0)
!3752 = !{!3753, !3754, !3755, !3756, !3758, !3773, !3775, !3790, !3792, !3794, !3796, !3797, !3801, !3802}
!3753 = !DILocalVariable(name: "new_layout", arg: 1, scope: !3731, file: !384, line: 449, type: !1265)
!3754 = !DILocalVariable(name: "current_memory", arg: 2, scope: !3731, file: !384, line: 450, type: !3734)
!3755 = !DILocalVariable(name: "alloc", arg: 3, scope: !3731, file: !384, line: 451, type: !3751)
!3756 = !DILocalVariable(name: "new_layout", scope: !3757, file: !384, line: 457, type: !633, align: 8)
!3757 = distinct !DILexicalBlock(scope: !3731, file: !384, line: 457, column: 5)
!3758 = !DILocalVariable(name: "residual", scope: !3759, file: !384, line: 457, type: !3760, align: 8)
!3759 = distinct !DILexicalBlock(scope: !3731, file: !384, line: 457, column: 62)
!3760 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>", scope: !675, file: !2, size: 128, align: 64, elements: !3761, templateParams: !19, identifier: "5ef5f21a6f46a0206241b0c7f330dfa3")
!3761 = !{!3762}
!3762 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3760, file: !2, size: 128, align: 64, elements: !3763, templateParams: !19, identifier: "cb4858a3f71ae3f451b3ee0e26a669a0")
!3763 = !{!3764, !3769}
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !3762, file: !2, baseType: !3765, size: 128, align: 64)
!3765 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !3760, file: !2, size: 128, align: 64, elements: !3766, templateParams: !3768, identifier: "416344365d509c704ad8ffe5dcfb70fa")
!3766 = !{!3767}
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3765, file: !2, baseType: !722, align: 8)
!3768 = !{!727, !2201}
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !3762, file: !2, baseType: !3770, size: 128, align: 64)
!3770 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !3760, file: !2, size: 128, align: 64, elements: !3771, templateParams: !3768, identifier: "554770741a2c8057e7f8529a99308bf0")
!3771 = !{!3772}
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3770, file: !2, baseType: !623, size: 128, align: 64)
!3773 = !DILocalVariable(name: "val", scope: !3774, file: !384, line: 457, type: !633, align: 8)
!3774 = distinct !DILexicalBlock(scope: !3731, file: !384, line: 457, column: 22)
!3775 = !DILocalVariable(name: "residual", scope: !3776, file: !384, line: 459, type: !3777, align: 8)
!3776 = distinct !DILexicalBlock(scope: !3757, file: !384, line: 459, column: 35)
!3777 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveError>", scope: !675, file: !2, size: 128, align: 64, elements: !3778, templateParams: !19, identifier: "c0cf86a3acbcbe62e1045ffe1b8697")
!3778 = !{!3779}
!3779 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3777, file: !2, size: 128, align: 64, elements: !3780, templateParams: !19, identifier: "542941ded386c5d0b8832b89b5bc0159")
!3780 = !{!3781, !3786}
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !3779, file: !2, baseType: !3782, size: 128, align: 64)
!3782 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !3777, file: !2, size: 128, align: 64, elements: !3783, templateParams: !3785, identifier: "172bc5836ee47c35d518a78511939b12")
!3783 = !{!3784}
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3782, file: !2, baseType: !722, align: 8)
!3785 = !{!727, !2140}
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !3779, file: !2, baseType: !3787, size: 128, align: 64)
!3787 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !3777, file: !2, size: 128, align: 64, elements: !3788, templateParams: !3785, identifier: "adf3f686a95f61b9c3558b4df539adb8")
!3788 = !{!3789}
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3787, file: !2, baseType: !620, size: 128, align: 64)
!3790 = !DILocalVariable(name: "val", scope: !3791, file: !384, line: 459, type: !7, align: 1)
!3791 = distinct !DILexicalBlock(scope: !3757, file: !384, line: 459, column: 5)
!3792 = !DILocalVariable(name: "memory", scope: !3793, file: !384, line: 461, type: !2109, align: 8)
!3793 = distinct !DILexicalBlock(scope: !3757, file: !384, line: 461, column: 5)
!3794 = !DILocalVariable(name: "ptr", scope: !3795, file: !384, line: 461, type: !296, align: 8)
!3795 = distinct !DILexicalBlock(scope: !3757, file: !384, line: 461, column: 66)
!3796 = !DILocalVariable(name: "old_layout", scope: !3795, file: !384, line: 461, type: !633, align: 8)
!3797 = !DILocalVariable(name: "left_val", scope: !3798, file: !384, line: 462, type: !186, align: 8)
!3798 = !DILexicalBlockFile(scope: !3799, file: !384, discriminator: 0)
!3799 = distinct !DILexicalBlock(scope: !3795, file: !3800, line: 39, column: 13)
!3800 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "92818cc67b0fce20f16574f7676a5426")
!3801 = !DILocalVariable(name: "right_val", scope: !3798, file: !384, line: 462, type: !186, align: 8)
!3802 = !DILocalVariable(name: "kind", scope: !3803, file: !384, line: 462, type: !137, align: 1)
!3803 = !DILexicalBlockFile(scope: !3804, file: !384, discriminator: 0)
!3804 = distinct !DILexicalBlock(scope: !3799, file: !3800, line: 41, column: 21)
!3805 = !{!307}
!3806 = !DILocation(line: 449, column: 5, scope: !3731)
!3807 = !DILocation(line: 450, column: 5, scope: !3731)
!3808 = !DILocation(line: 451, column: 5, scope: !3731)
!3809 = !DILocation(line: 457, column: 9, scope: !3757)
!3810 = !DILocalVariable(name: "self", scope: !3811, file: !384, line: 457, type: !2237, align: 8)
!3811 = !DILexicalBlockFile(scope: !3812, file: !384, discriminator: 0)
!3812 = distinct !DISubprogram(name: "branch<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha0b963e5ecfbbc5aE", scope: !1360, file: !673, line: 2117, type: !3813, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2245, retainedNodes: !3831)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{!3815, !2237}
!3815 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", scope: !1364, file: !2, size: 192, align: 64, elements: !3816, templateParams: !19, identifier: "30c77f8de40d27cc25bb1f117e102368")
!3816 = !{!3817}
!3817 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3815, file: !2, size: 192, align: 64, elements: !3818, templateParams: !19, identifier: "873dd87a14009e5aa4571f77c2255abd", discriminator: !3830)
!3818 = !{!3819, !3826}
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3817, file: !2, baseType: !3820, size: 192, align: 64, extraData: i64 0)
!3820 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3815, file: !2, size: 192, align: 64, elements: !3821, templateParams: !3823, identifier: "44b658dc6aeebfb637fc0f71177a37ae")
!3821 = !{!3822}
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3820, file: !2, baseType: !633, size: 128, align: 64, offset: 64)
!3823 = !{!3824, !3825}
!3824 = !DITemplateTypeParameter(name: "B", type: !3760)
!3825 = !DITemplateTypeParameter(name: "C", type: !633)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3817, file: !2, baseType: !3827, size: 192, align: 64, extraData: i64 1)
!3827 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3815, file: !2, size: 192, align: 64, elements: !3828, templateParams: !3823, identifier: "a45e3c8f49f3878b531df9d7bb0c1ddb")
!3828 = !{!3829}
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3827, file: !2, baseType: !3760, size: 128, align: 64, offset: 64)
!3830 = !DIDerivedType(tag: DW_TAG_member, scope: !3815, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!3831 = !{!3810, !3832, !3835}
!3832 = !DILocalVariable(name: "v", scope: !3833, file: !384, line: 457, type: !633, align: 8)
!3833 = !DILexicalBlockFile(scope: !3834, file: !384, discriminator: 0)
!3834 = distinct !DILexicalBlock(scope: !3812, file: !673, line: 2119, column: 13)
!3835 = !DILocalVariable(name: "e", scope: !3836, file: !384, line: 457, type: !623, align: 8)
!3836 = !DILexicalBlockFile(scope: !3837, file: !384, discriminator: 0)
!3837 = distinct !DILexicalBlock(scope: !3812, file: !673, line: 2120, column: 13)
!3838 = !DILocation(line: 457, column: 22, scope: !3811, inlinedAt: !3839)
!3839 = !DILocation(line: 457, column: 22, scope: !3731)
!3840 = !DILocalVariable(name: "residual", scope: !3841, file: !384, line: 457, type: !3760, align: 8)
!3841 = !DILexicalBlockFile(scope: !3842, file: !384, discriminator: 0)
!3842 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h54e2067ed5b4fadbE", scope: !674, file: !673, line: 2132, type: !3843, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !3849, retainedNodes: !3845)
!3843 = !DISubroutineType(types: !3844)
!3844 = !{!2131, !3760, !732}
!3845 = !{!3840, !3846}
!3846 = !DILocalVariable(name: "e", scope: !3847, file: !384, line: 457, type: !623, align: 8)
!3847 = !DILexicalBlockFile(scope: !3848, file: !384, discriminator: 0)
!3848 = distinct !DILexicalBlock(scope: !3842, file: !673, line: 2134, column: 13)
!3849 = !{!2121, !2201, !2159}
!3850 = !DILocation(line: 457, column: 22, scope: !3841, inlinedAt: !3851)
!3851 = !DILocation(line: 457, column: 22, scope: !3759)
!3852 = !DILocalVariable(name: "self", scope: !3853, file: !384, line: 459, type: !2176, align: 8)
!3853 = !DILexicalBlockFile(scope: !3854, file: !384, discriminator: 0)
!3854 = distinct !DISubprogram(name: "branch<(), alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hda9c20ee1f5053b5E", scope: !1360, file: !673, line: 2117, type: !3855, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2184, retainedNodes: !3873)
!3855 = !DISubroutineType(types: !3856)
!3856 = !{!3857, !2176}
!3857 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, ()>", scope: !1364, file: !2, size: 128, align: 64, elements: !3858, templateParams: !19, identifier: "dd182185d8f5b2b7cb5665cc5c5ccb07")
!3858 = !{!3859}
!3859 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3857, file: !2, size: 128, align: 64, elements: !3860, templateParams: !19, identifier: "57751adeae8e77576883f29d0a97ac09", discriminator: !3872)
!3860 = !{!3861, !3868}
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3859, file: !2, baseType: !3862, size: 128, align: 64, extraData: i64 -9223372036854775807)
!3862 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3857, file: !2, size: 128, align: 64, elements: !3863, templateParams: !3865, identifier: "35a87d623a367fdaec857f7d914f3ad9")
!3863 = !{!3864}
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3862, file: !2, baseType: !7, align: 8)
!3865 = !{!3866, !3867}
!3866 = !DITemplateTypeParameter(name: "B", type: !3777)
!3867 = !DITemplateTypeParameter(name: "C", type: !7)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3859, file: !2, baseType: !3869, size: 128, align: 64)
!3869 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3857, file: !2, size: 128, align: 64, elements: !3870, templateParams: !3865, identifier: "f5790c13a1dcecaf1cf858de99ad1734")
!3870 = !{!3871}
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3869, file: !2, baseType: !3777, size: 128, align: 64)
!3872 = !DIDerivedType(tag: DW_TAG_member, scope: !3857, file: !2, baseType: !54, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!3873 = !{!3852, !3874, !3877}
!3874 = !DILocalVariable(name: "v", scope: !3875, file: !384, line: 459, type: !7, align: 1)
!3875 = !DILexicalBlockFile(scope: !3876, file: !384, discriminator: 0)
!3876 = distinct !DILexicalBlock(scope: !3854, file: !673, line: 2119, column: 13)
!3877 = !DILocalVariable(name: "e", scope: !3878, file: !384, line: 459, type: !620, align: 8)
!3878 = !DILexicalBlockFile(scope: !3879, file: !384, discriminator: 0)
!3879 = distinct !DILexicalBlock(scope: !3854, file: !673, line: 2120, column: 13)
!3880 = !DILocation(line: 459, column: 5, scope: !3853, inlinedAt: !3881)
!3881 = !DILocation(line: 459, column: 5, scope: !3757)
!3882 = !DILocalVariable(name: "residual", scope: !3883, file: !384, line: 459, type: !3777, align: 8)
!3883 = !DILexicalBlockFile(scope: !3884, file: !384, discriminator: 0)
!3884 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hdb533a3f42eb30a0E", scope: !674, file: !673, line: 2132, type: !3885, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !3891, retainedNodes: !3887)
!3885 = !DISubroutineType(types: !3886)
!3886 = !{!2131, !3777, !732}
!3887 = !{!3882, !3888}
!3888 = !DILocalVariable(name: "e", scope: !3889, file: !384, line: 459, type: !620, align: 8)
!3889 = !DILexicalBlockFile(scope: !3890, file: !384, discriminator: 0)
!3890 = distinct !DILexicalBlock(scope: !3884, file: !673, line: 2134, column: 13)
!3891 = !{!2121, !2140, !2159}
!3892 = !DILocation(line: 459, column: 5, scope: !3883, inlinedAt: !3893)
!3893 = !DILocation(line: 459, column: 5, scope: !3776)
!3894 = !DILocation(line: 459, column: 5, scope: !3791)
!3895 = !DILocation(line: 461, column: 9, scope: !3793)
!3896 = !DILocation(line: 461, column: 36, scope: !3795)
!3897 = !DILocation(line: 459, column: 5, scope: !3875, inlinedAt: !3881)
!3898 = !DILocalVariable(name: "self", scope: !3899, file: !384, line: 465, type: !1291, align: 8)
!3899 = !DILexicalBlockFile(scope: !3900, file: !384, discriminator: 0)
!3900 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h80c50717bd3ed3c3E", scope: !1291, file: !1290, line: 82, type: !1295, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3901)
!3901 = !{!3898}
!3902 = !DILocation(line: 465, column: 32, scope: !3899, inlinedAt: !3903)
!3903 = !DILocation(line: 131, column: 9, scope: !3904, inlinedAt: !3908)
!3904 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h70611acb1b9cd6d8E", scope: !633, file: !1262, line: 130, type: !3086, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3905)
!3905 = !{!3906}
!3906 = !DILocalVariable(name: "self", scope: !3907, file: !384, line: 465, type: !2150, align: 8)
!3907 = !DILexicalBlockFile(scope: !3904, file: !384, discriminator: 0)
!3908 = !DILocation(line: 465, column: 32, scope: !3795)
!3909 = !DILocalVariable(name: "self", scope: !3910, file: !384, line: 465, type: !639, align: 8)
!3910 = !DILexicalBlockFile(scope: !3911, file: !384, discriminator: 0)
!3911 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17hcb3f9b7ba4faab99E", scope: !639, file: !1303, line: 39, type: !1304, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3912)
!3912 = !{!3909}
!3913 = !DILocation(line: 465, column: 32, scope: !3910, inlinedAt: !3903)
!3914 = !DILocalVariable(name: "self", scope: !3915, file: !384, line: 465, type: !1291, align: 8)
!3915 = !DILexicalBlockFile(scope: !3916, file: !384, discriminator: 0)
!3916 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h80c50717bd3ed3c3E", scope: !1291, file: !1290, line: 82, type: !1295, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3917)
!3917 = !{!3914}
!3918 = !DILocation(line: 465, column: 54, scope: !3915, inlinedAt: !3919)
!3919 = !DILocation(line: 131, column: 9, scope: !3920, inlinedAt: !3924)
!3920 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h70611acb1b9cd6d8E", scope: !633, file: !1262, line: 130, type: !3086, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3921)
!3921 = !{!3922}
!3922 = !DILocalVariable(name: "self", scope: !3923, file: !384, line: 465, type: !2150, align: 8)
!3923 = !DILexicalBlockFile(scope: !3920, file: !384, discriminator: 0)
!3924 = !DILocation(line: 465, column: 54, scope: !3795)
!3925 = !DILocalVariable(name: "self", scope: !3926, file: !384, line: 465, type: !639, align: 8)
!3926 = !DILexicalBlockFile(scope: !3927, file: !384, discriminator: 0)
!3927 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17hcb3f9b7ba4faab99E", scope: !639, file: !1303, line: 39, type: !1304, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3928)
!3928 = !{!3925}
!3929 = !DILocation(line: 465, column: 54, scope: !3926, inlinedAt: !3919)
!3930 = !DILocation(line: 457, column: 22, scope: !3833, inlinedAt: !3839)
!3931 = !DILocation(line: 457, column: 22, scope: !3836, inlinedAt: !3839)
!3932 = !DILocation(line: 457, column: 22, scope: !3774)
!3933 = !DILocation(line: 459, column: 5, scope: !3934, inlinedAt: !3881)
!3934 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17he80a0530a617158bE", scope: !144, file: !384, line: 505, type: !3935, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3937)
!3935 = !DISubroutineType(types: !3936)
!3936 = !{!2176, !9}
!3937 = !{!3938}
!3938 = !DILocalVariable(name: "alloc_size", scope: !3934, file: !384, line: 459, type: !9, align: 8)
!3939 = !DILocation(line: 457, column: 62, scope: !3731)
!3940 = !DILocation(line: 457, column: 62, scope: !3759)
!3941 = !DILocation(line: 457, column: 22, scope: !3847, inlinedAt: !3851)
!3942 = !DILocalVariable(name: "kind", scope: !3943, file: !384, line: 457, type: !623, align: 8)
!3943 = !DILexicalBlockFile(scope: !3944, file: !384, discriminator: 0)
!3944 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hd9b1e84b4e136ef5E", scope: !616, file: !615, line: 116, type: !618, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3945)
!3945 = !{!3942}
!3946 = !DILocation(line: 457, column: 22, scope: !3943, inlinedAt: !3947)
!3947 = !DILocation(line: 2134, column: 27, scope: !3848, inlinedAt: !3851)
!3948 = !DILocation(line: 1, column: 1, scope: !3949)
!3949 = !DILexicalBlockFile(scope: !3731, file: !3574, discriminator: 0)
!3950 = !DILocation(line: 473, column: 2, scope: !3731)
!3951 = !DILocation(line: 459, column: 5, scope: !3878, inlinedAt: !3881)
!3952 = !DILocation(line: 461, column: 25, scope: !3795)
!3953 = !DILocation(line: 459, column: 35, scope: !3757)
!3954 = !DILocation(line: 459, column: 35, scope: !3776)
!3955 = !DILocation(line: 459, column: 5, scope: !3889, inlinedAt: !3893)
!3956 = !DILocation(line: 1, column: 1, scope: !3957)
!3957 = !DILexicalBlockFile(scope: !3757, file: !3574, discriminator: 0)
!3958 = !DILocation(line: 461, column: 31, scope: !3795)
!3959 = !DILocation(line: 465, column: 32, scope: !3907, inlinedAt: !3908)
!3960 = !DILocalVariable(name: "n", scope: !3961, file: !384, line: 465, type: !9, align: 8)
!3961 = !DILexicalBlockFile(scope: !3962, file: !384, discriminator: 0)
!3962 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h9ea4e200ee3011edE", scope: !1291, file: !1290, line: 56, type: !1312, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3963)
!3963 = !{!3960, !3964}
!3964 = !DILocalVariable(name: "runtime", scope: !3965, file: !384, line: 465, type: !1318, align: 8)
!3965 = !DILexicalBlockFile(scope: !3966, file: !384, discriminator: 0)
!3966 = distinct !DILexicalBlock(scope: !3962, file: !181, line: 2336, column: 13)
!3967 = !DILocation(line: 465, column: 32, scope: !3961, inlinedAt: !3968)
!3968 = !DILocation(line: 41, column: 18, scope: !3911, inlinedAt: !3903)
!3969 = !DILocation(line: 465, column: 54, scope: !3923, inlinedAt: !3924)
!3970 = !DILocalVariable(name: "n", scope: !3971, file: !384, line: 465, type: !9, align: 8)
!3971 = !DILexicalBlockFile(scope: !3972, file: !384, discriminator: 0)
!3972 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h9ea4e200ee3011edE", scope: !1291, file: !1290, line: 56, type: !1312, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !3973)
!3973 = !{!3970, !3974}
!3974 = !DILocalVariable(name: "runtime", scope: !3975, file: !384, line: 465, type: !1318, align: 8)
!3975 = !DILexicalBlockFile(scope: !3976, file: !384, discriminator: 0)
!3976 = distinct !DILexicalBlock(scope: !3972, file: !181, line: 2336, column: 13)
!3977 = !DILocation(line: 465, column: 54, scope: !3971, inlinedAt: !3978)
!3978 = !DILocation(line: 41, column: 18, scope: !3927, inlinedAt: !3919)
!3979 = !DILocation(line: 465, column: 13, scope: !3795)
!3980 = !DILocation(line: 469, column: 24, scope: !3757)
!3981 = !DILocation(line: 469, column: 9, scope: !3757)
!3982 = !DILocation(line: 461, column: 18, scope: !3757)
!3983 = !DILocation(line: 472, column: 5, scope: !3793)
!3984 = !DILocation(line: 472, column: 20, scope: !3793)
!3985 = !DILocation(line: 466, column: 29, scope: !3795)
!3986 = !DILocation(line: 466, column: 41, scope: !3795)
!3987 = !DILocation(line: 466, column: 13, scope: !3795)
!3988 = distinct !DISubprogram(name: "{closure#0}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h97a170dbd3a498e1E", scope: !2147, file: !384, line: 457, type: !3989, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !3805, retainedNodes: !3991)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{!623, !2251, !1276}
!3991 = !{!3992, !3993}
!3992 = !DILocalVariable(arg: 1, scope: !3988, file: !384, line: 457, type: !2251)
!3993 = !DILocalVariable(arg: 2, scope: !3988, file: !384, line: 457, type: !1276)
!3994 = !DILocation(line: 457, column: 41, scope: !3988)
!3995 = !DILocation(line: 457, column: 42, scope: !3988)
!3996 = !DILocation(line: 457, column: 45, scope: !3988)
!3997 = !DILocation(line: 457, column: 44, scope: !3988)
!3998 = distinct !DISubprogram(name: "{closure#1}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17he0a883c58d680d64E", scope: !2147, file: !384, line: 472, type: !3999, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !3805, retainedNodes: !4001)
!3999 = !DISubroutineType(types: !4000)
!4000 = !{!620, !2146, !2123}
!4001 = !{!4002, !4003}
!4002 = !DILocalVariable(name: "new_layout", scope: !3998, file: !384, line: 457, type: !633, align: 8)
!4003 = !DILocalVariable(arg: 2, scope: !3998, file: !384, line: 472, type: !2123)
!4004 = !DILocation(line: 457, column: 9, scope: !3998)
!4005 = !DILocation(line: 472, column: 21, scope: !3998)
!4006 = !DILocation(line: 472, column: 45, scope: !3998)
!4007 = !DILocation(line: 472, column: 24, scope: !3998)
!4008 = !DILocation(line: 472, column: 23, scope: !3998)
!4009 = distinct !DISubprogram(name: "handle_reserve", linkageName: "_ZN5alloc7raw_vec14handle_reserve17h3cd82cf6d0832ad5E", scope: !144, file: !384, line: 487, type: !4010, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !4012)
!4010 = !DISubroutineType(types: !4011)
!4011 = !{null, !2176}
!4012 = !{!4013, !4014}
!4013 = !DILocalVariable(name: "result", arg: 1, scope: !4009, file: !384, line: 487, type: !2176)
!4014 = !DILocalVariable(name: "layout", scope: !4015, file: !384, line: 490, type: !633, align: 8)
!4015 = distinct !DILexicalBlock(scope: !4009, file: !384, line: 490, column: 9)
!4016 = !DILocation(line: 487, column: 19, scope: !4009)
!4017 = !DILocation(line: 488, column: 11, scope: !4009)
!4018 = !DILocation(line: 488, column: 5, scope: !4009)
!4019 = !DILocation(line: 493, column: 2, scope: !4009)
!4020 = !DILocation(line: 489, column: 34, scope: !4009)
!4021 = !DILocation(line: 490, column: 26, scope: !4009)
!4022 = !DILocation(line: 490, column: 26, scope: !4015)
!4023 = !DILocation(line: 490, column: 43, scope: !4015)
!4024 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17haae58e62989b1474E", scope: !2208, file: !384, line: 488, type: !4025, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !4027)
!4025 = !DISubroutineType(types: !4026)
!4026 = !{!623, !2207, !620}
!4027 = !{!4028, !4029}
!4028 = !DILocalVariable(name: "e", arg: 2, scope: !4024, file: !384, line: 488, type: !620)
!4029 = !DILocalVariable(arg: 1, scope: !4024, file: !384, line: 488, type: !2207)
!4030 = !DILocation(line: 488, column: 26, scope: !4024)
!4031 = !DILocation(line: 488, column: 27, scope: !4024)
!4032 = !DILocation(line: 488, column: 30, scope: !4024)
!4033 = !DILocalVariable(name: "self", scope: !4034, file: !384, line: 488, type: !4038, align: 8)
!4034 = !DILexicalBlockFile(scope: !4035, file: !384, discriminator: 0)
!4035 = distinct !DISubprogram(name: "kind", linkageName: "_ZN5alloc11collections15TryReserveError4kind17hc5706f581b3beae1E", scope: !620, file: !615, line: 74, type: !4036, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !4039)
!4036 = !DISubroutineType(types: !4037)
!4037 = !{!623, !4038}
!4038 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveError", baseType: !620, size: 64, align: 64, dwarfAddressSpace: 0)
!4039 = !{!4033}
!4040 = !DILocation(line: 488, column: 30, scope: !4034, inlinedAt: !4032)
!4041 = !DILocalVariable(name: "self", scope: !4042, file: !384, line: 488, type: !4047, align: 8)
!4042 = !DILexicalBlockFile(scope: !4043, file: !384, discriminator: 0)
!4043 = distinct !DISubprogram(name: "clone", linkageName: "_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h0e5bb48ccf811b11E", scope: !4044, file: !615, line: 80, type: !4045, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !4048)
!4044 = !DINamespace(name: "{impl#10}", scope: !617)
!4045 = !DISubroutineType(types: !4046)
!4046 = !{!623, !4047}
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveErrorKind", baseType: !623, size: 64, align: 64, dwarfAddressSpace: 0)
!4048 = !{!4041, !4049, !4052}
!4049 = !DILocalVariable(name: "__self_0", scope: !4050, file: !384, line: 488, type: !2150, align: 8)
!4050 = !DILexicalBlockFile(scope: !4051, file: !384, discriminator: 0)
!4051 = distinct !DILexicalBlock(scope: !4043, file: !615, line: 80, column: 10)
!4052 = !DILocalVariable(name: "__self_1", scope: !4050, file: !384, line: 488, type: !4053, align: 8)
!4053 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!4054 = !DILocation(line: 488, column: 30, scope: !4042, inlinedAt: !4055)
!4055 = !DILocation(line: 75, column: 9, scope: !4035, inlinedAt: !4032)
!4056 = !DILocation(line: 488, column: 30, scope: !4050, inlinedAt: !4055)
!4057 = !DILocalVariable(name: "self", scope: !4058, file: !384, line: 488, type: !2150, align: 8)
!4058 = !DILexicalBlockFile(scope: !4059, file: !384, discriminator: 0)
!4059 = distinct !DISubprogram(name: "clone", linkageName: "_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17hda1ab16449b1d427E", scope: !4060, file: !1262, line: 35, type: !4061, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !4063)
!4060 = !DINamespace(name: "{impl#3}", scope: !634)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{!633, !2150}
!4063 = !{!4057}
!4064 = !DILocation(line: 488, column: 30, scope: !4058, inlinedAt: !4065)
!4065 = !DILocation(line: 94, column: 9, scope: !4051, inlinedAt: !4055)
!4066 = !DILocation(line: 488, column: 29, scope: !4024)
!4067 = distinct !DISubprogram(name: "allocate_in<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hefc8b9238314a383E", scope: !271, file: !384, line: 169, type: !4068, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !4070)
!4068 = !DISubroutineType(types: !4069)
!4069 = !{!271, !9, !143, !304}
!4070 = !{!4071, !4072, !4073, !4074, !4076, !4078, !4080, !4082}
!4071 = !DILocalVariable(name: "capacity", arg: 1, scope: !4067, file: !384, line: 169, type: !9)
!4072 = !DILocalVariable(name: "init", arg: 2, scope: !4067, file: !384, line: 169, type: !143)
!4073 = !DILocalVariable(name: "alloc", arg: 3, scope: !4067, file: !384, line: 169, type: !304)
!4074 = !DILocalVariable(name: "layout", scope: !4075, file: !384, line: 176, type: !633, align: 8)
!4075 = distinct !DILexicalBlock(scope: !4067, file: !384, line: 176, column: 13)
!4076 = !DILocalVariable(name: "layout", scope: !4077, file: !384, line: 177, type: !633, align: 8)
!4077 = distinct !DILexicalBlock(scope: !4067, file: !384, line: 177, column: 17)
!4078 = !DILocalVariable(name: "result", scope: !4079, file: !384, line: 184, type: !2109, align: 8)
!4079 = distinct !DILexicalBlock(scope: !4075, file: !384, line: 184, column: 13)
!4080 = !DILocalVariable(name: "ptr", scope: !4081, file: !384, line: 188, type: !2117, align: 8)
!4081 = distinct !DILexicalBlock(scope: !4079, file: !384, line: 188, column: 13)
!4082 = !DILocalVariable(name: "ptr", scope: !4083, file: !384, line: 189, type: !2117, align: 8)
!4083 = distinct !DILexicalBlock(scope: !4079, file: !384, line: 189, column: 17)
!4084 = !DILocation(line: 169, column: 20, scope: !4067)
!4085 = !DILocation(line: 169, column: 37, scope: !4067)
!4086 = !DILocation(line: 169, column: 54, scope: !4067)
!4087 = !DILocation(line: 184, column: 17, scope: !4079)
!4088 = !DILocalVariable(name: "self", scope: !4089, file: !384, line: 197, type: !278, align: 8)
!4089 = !DILexicalBlockFile(scope: !4090, file: !384, discriminator: 0)
!4090 = distinct !DISubprogram(name: "as_ptr<alloc::string::String>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc136d2737ee99db8E", scope: !278, file: !582, line: 330, type: !2489, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !4091)
!4091 = !{!4088}
!4092 = !DILocation(line: 197, column: 53, scope: !4089, inlinedAt: !4093)
!4093 = !DILocation(line: 197, column: 53, scope: !4081)
!4094 = !DILocation(line: 171, column: 12, scope: !4067)
!4095 = !DILocation(line: 171, column: 40, scope: !4067)
!4096 = !DILocation(line: 176, column: 32, scope: !4067)
!4097 = !DILocation(line: 172, column: 26, scope: !4067)
!4098 = !DILocation(line: 172, column: 13, scope: !4067)
!4099 = !DILocation(line: 202, column: 5, scope: !4067)
!4100 = !DILocation(line: 171, column: 9, scope: !4067)
!4101 = !DILocation(line: 202, column: 6, scope: !4067)
!4102 = !DILocation(line: 176, column: 26, scope: !4067)
!4103 = !DILocation(line: 177, column: 20, scope: !4067)
!4104 = !DILocation(line: 177, column: 20, scope: !4077)
!4105 = !DILocation(line: 177, column: 31, scope: !4077)
!4106 = !DILocation(line: 176, column: 17, scope: !4075)
!4107 = !DILocation(line: 180, column: 19, scope: !4108, inlinedAt: !4111)
!4108 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17he80a0530a617158bE", scope: !144, file: !384, line: 505, type: !3935, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !4109)
!4109 = !{!4110}
!4110 = !DILocalVariable(name: "alloc_size", scope: !4108, file: !384, line: 180, type: !9, align: 8)
!4111 = !DILocation(line: 180, column: 19, scope: !4075)
!4112 = !DILocation(line: 180, column: 13, scope: !4075)
!4113 = !DILocation(line: 178, column: 27, scope: !4067)
!4114 = !DILocation(line: 184, column: 32, scope: !4075)
!4115 = !DILocation(line: 184, column: 26, scope: !4075)
!4116 = !DILocation(line: 182, column: 27, scope: !4075)
!4117 = !DILocation(line: 185, column: 45, scope: !4075)
!4118 = !DILocation(line: 186, column: 38, scope: !4075)
!4119 = !DILocation(line: 186, column: 66, scope: !4075)
!4120 = !DILocation(line: 188, column: 29, scope: !4079)
!4121 = !DILocation(line: 188, column: 23, scope: !4079)
!4122 = !DILocation(line: 185, column: 66, scope: !4075)
!4123 = !DILocation(line: 189, column: 20, scope: !4079)
!4124 = !DILocation(line: 189, column: 20, scope: !4083)
!4125 = !DILocation(line: 189, column: 28, scope: !4083)
!4126 = !DILocation(line: 188, column: 17, scope: !4081)
!4127 = !DILocalVariable(name: "self", scope: !4128, file: !384, line: 197, type: !2117, align: 8)
!4128 = !DILexicalBlockFile(scope: !4129, file: !384, discriminator: 0)
!4129 = distinct !DISubprogram(name: "cast<[u8], alloc::string::String>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h3795fab45731c158E", scope: !2117, file: !582, line: 453, type: !4130, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4133, retainedNodes: !4132)
!4130 = !DISubroutineType(types: !4131)
!4131 = !{!278, !2117}
!4132 = !{!4127}
!4133 = !{!191, !1986}
!4134 = !DILocation(line: 197, column: 53, scope: !4128, inlinedAt: !4093)
!4135 = !DILocalVariable(name: "self", scope: !4136, file: !384, line: 197, type: !2117, align: 8)
!4136 = !DILexicalBlockFile(scope: !4137, file: !384, discriminator: 0)
!4137 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf80eb1f9846f7798E", scope: !2117, file: !582, line: 330, type: !3681, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !4138)
!4138 = !{!4135}
!4139 = !DILocation(line: 197, column: 53, scope: !4136, inlinedAt: !4140)
!4140 = !DILocation(line: 455, column: 41, scope: !4129, inlinedAt: !4093)
!4141 = !DILocalVariable(name: "ptr", scope: !4142, file: !384, line: 197, type: !359, align: 8)
!4142 = !DILexicalBlockFile(scope: !4143, file: !384, discriminator: 0)
!4143 = distinct !DISubprogram(name: "new_unchecked<alloc::string::String>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h07043c3523989784E", scope: !278, file: !582, line: 196, type: !4144, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !4146)
!4144 = !DISubroutineType(types: !4145)
!4145 = !{!278, !359}
!4146 = !{!4141}
!4147 = !DILocation(line: 197, column: 53, scope: !4142, inlinedAt: !4148)
!4148 = !DILocation(line: 455, column: 18, scope: !4129, inlinedAt: !4093)
!4149 = !DILocalVariable(name: "ptr", scope: !4150, file: !384, line: 197, type: !359, align: 8)
!4150 = !DILexicalBlockFile(scope: !4151, file: !384, discriminator: 0)
!4151 = distinct !DISubprogram(name: "new_unchecked<alloc::string::String>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17he6add0a40bf0dd47E", scope: !274, file: !593, line: 85, type: !4152, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !4154)
!4152 = !DISubroutineType(types: !4153)
!4153 = !{!274, !359}
!4154 = !{!4149}
!4155 = !DILocation(line: 197, column: 31, scope: !4150, inlinedAt: !4156)
!4156 = !DILocation(line: 197, column: 31, scope: !4081)
!4157 = !DILocalVariable(name: "ptr", scope: !4158, file: !384, line: 197, type: !359, align: 8)
!4158 = !DILexicalBlockFile(scope: !4159, file: !384, discriminator: 0)
!4159 = distinct !DISubprogram(name: "new_unchecked<alloc::string::String>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h07043c3523989784E", scope: !278, file: !582, line: 196, type: !4144, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !4160)
!4160 = !{!4157}
!4161 = !DILocation(line: 197, column: 31, scope: !4158, inlinedAt: !4162)
!4162 = !DILocation(line: 87, column: 36, scope: !4151, inlinedAt: !4156)
!4163 = !DILocation(line: 196, column: 13, scope: !4081)
!4164 = !DILocation(line: 190, column: 27, scope: !4079)
!4165 = !DILocation(line: 169, column: 5, scope: !4067)
!4166 = distinct !DISubprogram(name: "allocate_in<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hff10a4c41025bd83E", scope: !458, file: !384, line: 169, type: !4167, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !4169)
!4167 = !DISubroutineType(types: !4168)
!4168 = !{!458, !9, !143, !304}
!4169 = !{!4170, !4171, !4172, !4173, !4175, !4177, !4179, !4181}
!4170 = !DILocalVariable(name: "capacity", arg: 1, scope: !4166, file: !384, line: 169, type: !9)
!4171 = !DILocalVariable(name: "init", arg: 2, scope: !4166, file: !384, line: 169, type: !143)
!4172 = !DILocalVariable(name: "alloc", arg: 3, scope: !4166, file: !384, line: 169, type: !304)
!4173 = !DILocalVariable(name: "layout", scope: !4174, file: !384, line: 176, type: !633, align: 8)
!4174 = distinct !DILexicalBlock(scope: !4166, file: !384, line: 176, column: 13)
!4175 = !DILocalVariable(name: "layout", scope: !4176, file: !384, line: 177, type: !633, align: 8)
!4176 = distinct !DILexicalBlock(scope: !4166, file: !384, line: 177, column: 17)
!4177 = !DILocalVariable(name: "result", scope: !4178, file: !384, line: 184, type: !2109, align: 8)
!4178 = distinct !DILexicalBlock(scope: !4174, file: !384, line: 184, column: 13)
!4179 = !DILocalVariable(name: "ptr", scope: !4180, file: !384, line: 188, type: !2117, align: 8)
!4180 = distinct !DILexicalBlock(scope: !4178, file: !384, line: 188, column: 13)
!4181 = !DILocalVariable(name: "ptr", scope: !4182, file: !384, line: 189, type: !2117, align: 8)
!4182 = distinct !DILexicalBlock(scope: !4178, file: !384, line: 189, column: 17)
!4183 = !DILocation(line: 169, column: 20, scope: !4166)
!4184 = !DILocation(line: 169, column: 37, scope: !4166)
!4185 = !DILocation(line: 169, column: 54, scope: !4166)
!4186 = !DILocation(line: 184, column: 17, scope: !4178)
!4187 = !DILocalVariable(name: "self", scope: !4188, file: !384, line: 197, type: !464, align: 8)
!4188 = !DILexicalBlockFile(scope: !4189, file: !384, discriminator: 0)
!4189 = distinct !DISubprogram(name: "as_ptr<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h3b260fc4361efc10E", scope: !464, file: !582, line: 330, type: !2422, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !4190)
!4190 = !{!4187}
!4191 = !DILocation(line: 197, column: 53, scope: !4188, inlinedAt: !4192)
!4192 = !DILocation(line: 197, column: 53, scope: !4180)
!4193 = !DILocation(line: 171, column: 12, scope: !4166)
!4194 = !DILocation(line: 171, column: 40, scope: !4166)
!4195 = !DILocation(line: 176, column: 32, scope: !4166)
!4196 = !DILocation(line: 172, column: 26, scope: !4166)
!4197 = !DILocation(line: 172, column: 13, scope: !4166)
!4198 = !DILocation(line: 202, column: 5, scope: !4166)
!4199 = !DILocation(line: 171, column: 9, scope: !4166)
!4200 = !DILocation(line: 202, column: 6, scope: !4166)
!4201 = !DILocation(line: 176, column: 26, scope: !4166)
!4202 = !DILocation(line: 177, column: 20, scope: !4166)
!4203 = !DILocation(line: 177, column: 20, scope: !4176)
!4204 = !DILocation(line: 177, column: 31, scope: !4176)
!4205 = !DILocation(line: 176, column: 17, scope: !4174)
!4206 = !DILocation(line: 180, column: 19, scope: !4207, inlinedAt: !4210)
!4207 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17he80a0530a617158bE", scope: !144, file: !384, line: 505, type: !3935, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !4208)
!4208 = !{!4209}
!4209 = !DILocalVariable(name: "alloc_size", scope: !4207, file: !384, line: 180, type: !9, align: 8)
!4210 = !DILocation(line: 180, column: 19, scope: !4174)
!4211 = !DILocation(line: 180, column: 13, scope: !4174)
!4212 = !DILocation(line: 178, column: 27, scope: !4166)
!4213 = !DILocation(line: 184, column: 32, scope: !4174)
!4214 = !DILocation(line: 184, column: 26, scope: !4174)
!4215 = !DILocation(line: 182, column: 27, scope: !4174)
!4216 = !DILocation(line: 185, column: 45, scope: !4174)
!4217 = !DILocation(line: 186, column: 38, scope: !4174)
!4218 = !DILocation(line: 186, column: 66, scope: !4174)
!4219 = !DILocation(line: 188, column: 29, scope: !4178)
!4220 = !DILocation(line: 188, column: 23, scope: !4178)
!4221 = !DILocation(line: 185, column: 66, scope: !4174)
!4222 = !DILocation(line: 189, column: 20, scope: !4178)
!4223 = !DILocation(line: 189, column: 20, scope: !4182)
!4224 = !DILocation(line: 189, column: 28, scope: !4182)
!4225 = !DILocation(line: 188, column: 17, scope: !4180)
!4226 = !DILocalVariable(name: "self", scope: !4227, file: !384, line: 197, type: !2117, align: 8)
!4227 = !DILexicalBlockFile(scope: !4228, file: !384, discriminator: 0)
!4228 = distinct !DISubprogram(name: "cast<[u8], alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17ha5211c129b93036fE", scope: !2117, file: !582, line: 453, type: !4229, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4232, retainedNodes: !4231)
!4229 = !DISubroutineType(types: !4230)
!4230 = !{!464, !2117}
!4231 = !{!4226}
!4232 = !{!191, !4233}
!4233 = !DITemplateTypeParameter(name: "U", type: !287)
!4234 = !DILocation(line: 197, column: 53, scope: !4227, inlinedAt: !4192)
!4235 = !DILocalVariable(name: "self", scope: !4236, file: !384, line: 197, type: !2117, align: 8)
!4236 = !DILexicalBlockFile(scope: !4237, file: !384, discriminator: 0)
!4237 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf80eb1f9846f7798E", scope: !2117, file: !582, line: 330, type: !3681, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !4238)
!4238 = !{!4235}
!4239 = !DILocation(line: 197, column: 53, scope: !4236, inlinedAt: !4240)
!4240 = !DILocation(line: 455, column: 41, scope: !4228, inlinedAt: !4192)
!4241 = !DILocalVariable(name: "ptr", scope: !4242, file: !384, line: 197, type: !500, align: 8)
!4242 = !DILexicalBlockFile(scope: !4243, file: !384, discriminator: 0)
!4243 = distinct !DISubprogram(name: "new_unchecked<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h775194bf7ae51db4E", scope: !464, file: !582, line: 196, type: !4244, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !4246)
!4244 = !DISubroutineType(types: !4245)
!4245 = !{!464, !500}
!4246 = !{!4241}
!4247 = !DILocation(line: 197, column: 53, scope: !4242, inlinedAt: !4248)
!4248 = !DILocation(line: 455, column: 18, scope: !4228, inlinedAt: !4192)
!4249 = !DILocalVariable(name: "ptr", scope: !4250, file: !384, line: 197, type: !500, align: 8)
!4250 = !DILexicalBlockFile(scope: !4251, file: !384, discriminator: 0)
!4251 = distinct !DISubprogram(name: "new_unchecked<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h4dfdfd289d2178a7E", scope: !461, file: !593, line: 85, type: !4252, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !4254)
!4252 = !DISubroutineType(types: !4253)
!4253 = !{!461, !500}
!4254 = !{!4249}
!4255 = !DILocation(line: 197, column: 31, scope: !4250, inlinedAt: !4256)
!4256 = !DILocation(line: 197, column: 31, scope: !4180)
!4257 = !DILocalVariable(name: "ptr", scope: !4258, file: !384, line: 197, type: !500, align: 8)
!4258 = !DILexicalBlockFile(scope: !4259, file: !384, discriminator: 0)
!4259 = distinct !DISubprogram(name: "new_unchecked<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h775194bf7ae51db4E", scope: !464, file: !582, line: 196, type: !4244, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !4260)
!4260 = !{!4257}
!4261 = !DILocation(line: 197, column: 31, scope: !4258, inlinedAt: !4262)
!4262 = !DILocation(line: 87, column: 36, scope: !4251, inlinedAt: !4256)
!4263 = !DILocation(line: 196, column: 13, scope: !4180)
!4264 = !DILocation(line: 190, column: 27, scope: !4178)
!4265 = !DILocation(line: 169, column: 5, scope: !4166)
!4266 = distinct !DISubprogram(name: "needs_to_grow<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h490b3846561cd739E", scope: !271, file: !384, line: 360, type: !4267, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !4269)
!4267 = !DISubroutineType(types: !4268)
!4268 = !{!29, !2475, !9, !9}
!4269 = !{!4270, !4271, !4272}
!4270 = !DILocalVariable(name: "self", arg: 1, scope: !4266, file: !384, line: 360, type: !2475)
!4271 = !DILocalVariable(name: "len", arg: 2, scope: !4266, file: !384, line: 360, type: !9)
!4272 = !DILocalVariable(name: "additional", arg: 3, scope: !4266, file: !384, line: 360, type: !9)
!4273 = !DILocation(line: 360, column: 22, scope: !4266)
!4274 = !DILocation(line: 360, column: 29, scope: !4266)
!4275 = !DILocation(line: 360, column: 41, scope: !4266)
!4276 = !DILocalVariable(name: "self", scope: !4277, file: !384, line: 361, type: !9, align: 8)
!4277 = !DILexicalBlockFile(scope: !4278, file: !384, discriminator: 0)
!4278 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h5e8f57e42e99a91fE", scope: !412, file: !411, line: 1231, type: !414, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !4279)
!4279 = !{!4276, !4280}
!4280 = !DILocalVariable(name: "rhs", scope: !4277, file: !384, line: 361, type: !9, align: 8)
!4281 = !DILocation(line: 361, column: 22, scope: !4277, inlinedAt: !4282)
!4282 = !DILocation(line: 361, column: 22, scope: !4266)
!4283 = !DILocalVariable(name: "self", scope: !4284, file: !384, line: 361, type: !2475, align: 8)
!4284 = distinct !DISubprogram(name: "capacity<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h81c59b7ae0edc895E", scope: !271, file: !384, line: 231, type: !2778, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !4285)
!4285 = !{!4283}
!4286 = !DILocation(line: 361, column: 22, scope: !4284, inlinedAt: !4282)
!4287 = !DILocation(line: 361, column: 51, scope: !4266)
!4288 = !DILocation(line: 361, column: 9, scope: !4266)
!4289 = !DILocation(line: 362, column: 6, scope: !4266)
!4290 = distinct !DISubprogram(name: "needs_to_grow<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h8afd9d8b5c1bd8f3E", scope: !290, file: !384, line: 360, type: !4291, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !4293)
!4291 = !DISubroutineType(types: !4292)
!4292 = !{!29, !2540, !9, !9}
!4293 = !{!4294, !4295, !4296}
!4294 = !DILocalVariable(name: "self", arg: 1, scope: !4290, file: !384, line: 360, type: !2540)
!4295 = !DILocalVariable(name: "len", arg: 2, scope: !4290, file: !384, line: 360, type: !9)
!4296 = !DILocalVariable(name: "additional", arg: 3, scope: !4290, file: !384, line: 360, type: !9)
!4297 = !DILocation(line: 360, column: 22, scope: !4290)
!4298 = !DILocation(line: 360, column: 29, scope: !4290)
!4299 = !DILocation(line: 360, column: 41, scope: !4290)
!4300 = !DILocalVariable(name: "self", scope: !4301, file: !384, line: 361, type: !9, align: 8)
!4301 = !DILexicalBlockFile(scope: !4302, file: !384, discriminator: 0)
!4302 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h5e8f57e42e99a91fE", scope: !412, file: !411, line: 1231, type: !414, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !4303)
!4303 = !{!4300, !4304}
!4304 = !DILocalVariable(name: "rhs", scope: !4301, file: !384, line: 361, type: !9, align: 8)
!4305 = !DILocation(line: 361, column: 22, scope: !4301, inlinedAt: !4306)
!4306 = !DILocation(line: 361, column: 22, scope: !4290)
!4307 = !DILocalVariable(name: "self", scope: !4308, file: !384, line: 361, type: !2540, align: 8)
!4308 = distinct !DISubprogram(name: "capacity<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17hc1eac8527fb7a211E", scope: !290, file: !384, line: 231, type: !2866, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !4309)
!4309 = !{!4307}
!4310 = !DILocation(line: 361, column: 22, scope: !4308, inlinedAt: !4306)
!4311 = !DILocation(line: 361, column: 51, scope: !4290)
!4312 = !DILocation(line: 361, column: 9, scope: !4290)
!4313 = !DILocation(line: 362, column: 6, scope: !4290)
!4314 = distinct !DISubprogram(name: "needs_to_grow<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hf1193977a1c32428E", scope: !458, file: !384, line: 360, type: !4315, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !4317)
!4315 = !DISubroutineType(types: !4316)
!4316 = !{!29, !2408, !9, !9}
!4317 = !{!4318, !4319, !4320}
!4318 = !DILocalVariable(name: "self", arg: 1, scope: !4314, file: !384, line: 360, type: !2408)
!4319 = !DILocalVariable(name: "len", arg: 2, scope: !4314, file: !384, line: 360, type: !9)
!4320 = !DILocalVariable(name: "additional", arg: 3, scope: !4314, file: !384, line: 360, type: !9)
!4321 = !DILocation(line: 360, column: 22, scope: !4314)
!4322 = !DILocation(line: 360, column: 29, scope: !4314)
!4323 = !DILocation(line: 360, column: 41, scope: !4314)
!4324 = !DILocalVariable(name: "self", scope: !4325, file: !384, line: 361, type: !9, align: 8)
!4325 = !DILexicalBlockFile(scope: !4326, file: !384, discriminator: 0)
!4326 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h5e8f57e42e99a91fE", scope: !412, file: !411, line: 1231, type: !414, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !4327)
!4327 = !{!4324, !4328}
!4328 = !DILocalVariable(name: "rhs", scope: !4325, file: !384, line: 361, type: !9, align: 8)
!4329 = !DILocation(line: 361, column: 22, scope: !4325, inlinedAt: !4330)
!4330 = !DILocation(line: 361, column: 22, scope: !4314)
!4331 = !DILocalVariable(name: "self", scope: !4332, file: !384, line: 361, type: !2408, align: 8)
!4332 = distinct !DISubprogram(name: "capacity<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17hb8879b0653ef4503E", scope: !458, file: !384, line: 231, type: !2686, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !4333)
!4333 = !{!4331}
!4334 = !DILocation(line: 361, column: 22, scope: !4332, inlinedAt: !4330)
!4335 = !DILocation(line: 361, column: 51, scope: !4314)
!4336 = !DILocation(line: 361, column: 9, scope: !4314)
!4337 = !DILocation(line: 362, column: 6, scope: !4314)
!4338 = distinct !DISubprogram(name: "current_memory<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h228271933e00ee8dE", scope: !290, file: !384, line: 240, type: !4339, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !4341)
!4339 = !DISubroutineType(types: !4340)
!4340 = !{!3734, !2540}
!4341 = !{!4342, !4343}
!4342 = !DILocalVariable(name: "self", arg: 1, scope: !4338, file: !384, line: 240, type: !2540)
!4343 = !DILocalVariable(name: "layout", scope: !4344, file: !384, line: 247, type: !633, align: 8)
!4344 = distinct !DILexicalBlock(scope: !4338, file: !384, line: 247, column: 17)
!4345 = !DILocation(line: 240, column: 23, scope: !4338)
!4346 = !DILocalVariable(name: "self", scope: !4347, file: !384, line: 247, type: !1265, align: 8)
!4347 = !DILexicalBlockFile(scope: !4348, file: !384, discriminator: 0)
!4348 = distinct !DISubprogram(name: "unwrap_unchecked<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17he7d3bf597e89129bE", scope: !1265, file: !673, line: 1520, type: !4349, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1273, retainedNodes: !4351)
!4349 = !DISubroutineType(types: !4350)
!4350 = !{!633, !1265, !732}
!4351 = !{!4346, !4352}
!4352 = !DILocalVariable(name: "t", scope: !4353, file: !384, line: 247, type: !633, align: 8)
!4353 = !DILexicalBlockFile(scope: !4354, file: !384, discriminator: 0)
!4354 = distinct !DILexicalBlock(scope: !4348, file: !673, line: 1523, column: 13)
!4355 = !DILocation(line: 247, column: 30, scope: !4347, inlinedAt: !4356)
!4356 = !DILocation(line: 247, column: 30, scope: !4338)
!4357 = !DILocalVariable(name: "pointer", scope: !4358, file: !384, line: 248, type: !296, align: 8)
!4358 = !DILexicalBlockFile(scope: !4359, file: !384, discriminator: 0)
!4359 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h10db60bd453db30fE", scope: !4360, file: !593, line: 190, type: !4361, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !4363)
!4360 = !DINamespace(name: "{impl#11}", scope: !275)
!4361 = !DISubroutineType(types: !4362)
!4362 = !{!293, !296}
!4363 = !{!4357}
!4364 = !DILocation(line: 248, column: 23, scope: !4358, inlinedAt: !4365)
!4365 = !DILocation(line: 137, column: 9, scope: !4366, inlinedAt: !4374)
!4366 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17he6185c8f9506e253E", scope: !293, file: !593, line: 136, type: !4367, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4372, retainedNodes: !4369)
!4367 = !DISubroutineType(types: !4368)
!4368 = !{!293, !293}
!4369 = !{!4370}
!4370 = !DILocalVariable(name: "self", scope: !4371, file: !384, line: 248, type: !293, align: 8)
!4371 = !DILexicalBlockFile(scope: !4366, file: !384, discriminator: 0)
!4372 = !{!191, !4373}
!4373 = !DITemplateTypeParameter(name: "U", type: !124)
!4374 = !DILocation(line: 248, column: 23, scope: !4344)
!4375 = !DILocation(line: 241, column: 12, scope: !4338)
!4376 = !DILocation(line: 241, column: 40, scope: !4338)
!4377 = !DILocation(line: 247, column: 49, scope: !4338)
!4378 = !DILocation(line: 242, column: 13, scope: !4338)
!4379 = !DILocation(line: 241, column: 9, scope: !4338)
!4380 = !DILocation(line: 251, column: 6, scope: !4338)
!4381 = !DILocation(line: 247, column: 30, scope: !4353, inlinedAt: !4356)
!4382 = !DILocation(line: 247, column: 21, scope: !4344)
!4383 = !DILocation(line: 248, column: 23, scope: !4371, inlinedAt: !4374)
!4384 = !DILocalVariable(name: "self", scope: !4385, file: !384, line: 248, type: !296, align: 8)
!4385 = !DILexicalBlockFile(scope: !4386, file: !384, discriminator: 0)
!4386 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h0158c1349cea3e09E", scope: !296, file: !582, line: 453, type: !4387, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4372, retainedNodes: !4389)
!4387 = !DISubroutineType(types: !4388)
!4388 = !{!296, !296}
!4389 = !{!4384}
!4390 = !DILocation(line: 248, column: 23, scope: !4385, inlinedAt: !4391)
!4391 = !DILocation(line: 137, column: 22, scope: !4366, inlinedAt: !4374)
!4392 = !DILocalVariable(name: "self", scope: !4393, file: !384, line: 248, type: !296, align: 8)
!4393 = !DILexicalBlockFile(scope: !4394, file: !384, discriminator: 0)
!4394 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9a87f4e9cb3e4acdE", scope: !296, file: !582, line: 330, type: !601, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !4395)
!4395 = !{!4392}
!4396 = !DILocation(line: 248, column: 23, scope: !4393, inlinedAt: !4397)
!4397 = !DILocation(line: 455, column: 41, scope: !4386, inlinedAt: !4391)
!4398 = !DILocalVariable(name: "ptr", scope: !4399, file: !384, line: 248, type: !596, align: 8)
!4399 = !DILexicalBlockFile(scope: !4400, file: !384, discriminator: 0)
!4400 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hfaafb5192c9d4d91E", scope: !296, file: !582, line: 196, type: !608, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !4401)
!4401 = !{!4398}
!4402 = !DILocation(line: 248, column: 23, scope: !4399, inlinedAt: !4403)
!4403 = !DILocation(line: 455, column: 18, scope: !4386, inlinedAt: !4391)
!4404 = !DILocation(line: 247, column: 30, scope: !4405, inlinedAt: !4411)
!4405 = !DILexicalBlockFile(scope: !4406, file: !384, discriminator: 0)
!4406 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h3603131b564d906eE", scope: !4408, file: !4407, line: 100, type: !4409, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !19)
!4407 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/hint.rs", directory: "", checksumkind: CSK_MD5, checksum: "b50bd4586a98539d3cdc821cfaa5e2e7")
!4408 = !DINamespace(name: "hint", scope: !53)
!4409 = !DISubroutineType(types: !4410)
!4410 = !{null}
!4411 = !DILocation(line: 1525, column: 32, scope: !4348, inlinedAt: !4356)
!4412 = !DILocation(line: 248, column: 22, scope: !4344)
!4413 = !DILocation(line: 248, column: 17, scope: !4344)
!4414 = distinct !DISubprogram(name: "current_memory<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h35125d36e3ff79c5E", scope: !271, file: !384, line: 240, type: !4415, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !4417)
!4415 = !DISubroutineType(types: !4416)
!4416 = !{!3734, !2475}
!4417 = !{!4418, !4419}
!4418 = !DILocalVariable(name: "self", arg: 1, scope: !4414, file: !384, line: 240, type: !2475)
!4419 = !DILocalVariable(name: "layout", scope: !4420, file: !384, line: 247, type: !633, align: 8)
!4420 = distinct !DILexicalBlock(scope: !4414, file: !384, line: 247, column: 17)
!4421 = !DILocation(line: 240, column: 23, scope: !4414)
!4422 = !DILocalVariable(name: "self", scope: !4423, file: !384, line: 247, type: !1265, align: 8)
!4423 = !DILexicalBlockFile(scope: !4424, file: !384, discriminator: 0)
!4424 = distinct !DISubprogram(name: "unwrap_unchecked<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17he7d3bf597e89129bE", scope: !1265, file: !673, line: 1520, type: !4349, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1273, retainedNodes: !4425)
!4425 = !{!4422, !4426}
!4426 = !DILocalVariable(name: "t", scope: !4427, file: !384, line: 247, type: !633, align: 8)
!4427 = !DILexicalBlockFile(scope: !4428, file: !384, discriminator: 0)
!4428 = distinct !DILexicalBlock(scope: !4424, file: !673, line: 1523, column: 13)
!4429 = !DILocation(line: 247, column: 30, scope: !4423, inlinedAt: !4430)
!4430 = !DILocation(line: 247, column: 30, scope: !4414)
!4431 = !DILocalVariable(name: "pointer", scope: !4432, file: !384, line: 248, type: !296, align: 8)
!4432 = !DILexicalBlockFile(scope: !4433, file: !384, discriminator: 0)
!4433 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h10db60bd453db30fE", scope: !4360, file: !593, line: 190, type: !4361, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !4434)
!4434 = !{!4431}
!4435 = !DILocation(line: 248, column: 23, scope: !4432, inlinedAt: !4436)
!4436 = !DILocation(line: 137, column: 9, scope: !4437, inlinedAt: !4444)
!4437 = distinct !DISubprogram(name: "cast<alloc::string::String, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h7cbc822d04441277E", scope: !274, file: !593, line: 136, type: !4438, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4443, retainedNodes: !4440)
!4438 = !DISubroutineType(types: !4439)
!4439 = !{!293, !274}
!4440 = !{!4441}
!4441 = !DILocalVariable(name: "self", scope: !4442, file: !384, line: 248, type: !274, align: 8)
!4442 = !DILexicalBlockFile(scope: !4437, file: !384, discriminator: 0)
!4443 = !{!310, !4373}
!4444 = !DILocation(line: 248, column: 23, scope: !4420)
!4445 = !DILocation(line: 241, column: 12, scope: !4414)
!4446 = !DILocation(line: 241, column: 40, scope: !4414)
!4447 = !DILocation(line: 247, column: 49, scope: !4414)
!4448 = !DILocation(line: 242, column: 13, scope: !4414)
!4449 = !DILocation(line: 241, column: 9, scope: !4414)
!4450 = !DILocation(line: 251, column: 6, scope: !4414)
!4451 = !DILocation(line: 247, column: 30, scope: !4427, inlinedAt: !4430)
!4452 = !DILocation(line: 247, column: 21, scope: !4420)
!4453 = !DILocation(line: 248, column: 23, scope: !4442, inlinedAt: !4444)
!4454 = !DILocalVariable(name: "self", scope: !4455, file: !384, line: 248, type: !278, align: 8)
!4455 = !DILexicalBlockFile(scope: !4456, file: !384, discriminator: 0)
!4456 = distinct !DISubprogram(name: "cast<alloc::string::String, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h2bf7923871b9888bE", scope: !278, file: !582, line: 453, type: !4457, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4443, retainedNodes: !4459)
!4457 = !DISubroutineType(types: !4458)
!4458 = !{!296, !278}
!4459 = !{!4454}
!4460 = !DILocation(line: 248, column: 23, scope: !4455, inlinedAt: !4461)
!4461 = !DILocation(line: 137, column: 22, scope: !4437, inlinedAt: !4444)
!4462 = !DILocalVariable(name: "self", scope: !4463, file: !384, line: 248, type: !278, align: 8)
!4463 = !DILexicalBlockFile(scope: !4464, file: !384, discriminator: 0)
!4464 = distinct !DISubprogram(name: "as_ptr<alloc::string::String>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc136d2737ee99db8E", scope: !278, file: !582, line: 330, type: !2489, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !4465)
!4465 = !{!4462}
!4466 = !DILocation(line: 248, column: 23, scope: !4463, inlinedAt: !4467)
!4467 = !DILocation(line: 455, column: 41, scope: !4456, inlinedAt: !4461)
!4468 = !DILocalVariable(name: "ptr", scope: !4469, file: !384, line: 248, type: !596, align: 8)
!4469 = !DILexicalBlockFile(scope: !4470, file: !384, discriminator: 0)
!4470 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hfaafb5192c9d4d91E", scope: !296, file: !582, line: 196, type: !608, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !4471)
!4471 = !{!4468}
!4472 = !DILocation(line: 248, column: 23, scope: !4469, inlinedAt: !4473)
!4473 = !DILocation(line: 455, column: 18, scope: !4456, inlinedAt: !4461)
!4474 = !DILocation(line: 247, column: 30, scope: !4475, inlinedAt: !4477)
!4475 = !DILexicalBlockFile(scope: !4476, file: !384, discriminator: 0)
!4476 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h3603131b564d906eE", scope: !4408, file: !4407, line: 100, type: !4409, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !19)
!4477 = !DILocation(line: 1525, column: 32, scope: !4424, inlinedAt: !4430)
!4478 = !DILocation(line: 248, column: 22, scope: !4420)
!4479 = !DILocation(line: 248, column: 17, scope: !4420)
!4480 = distinct !DISubprogram(name: "current_memory<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h9bfd32aebd2503ffE", scope: !458, file: !384, line: 240, type: !4481, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !4483)
!4481 = !DISubroutineType(types: !4482)
!4482 = !{!3734, !2408}
!4483 = !{!4484, !4485}
!4484 = !DILocalVariable(name: "self", arg: 1, scope: !4480, file: !384, line: 240, type: !2408)
!4485 = !DILocalVariable(name: "layout", scope: !4486, file: !384, line: 247, type: !633, align: 8)
!4486 = distinct !DILexicalBlock(scope: !4480, file: !384, line: 247, column: 17)
!4487 = !DILocation(line: 240, column: 23, scope: !4480)
!4488 = !DILocalVariable(name: "self", scope: !4489, file: !384, line: 247, type: !1265, align: 8)
!4489 = !DILexicalBlockFile(scope: !4490, file: !384, discriminator: 0)
!4490 = distinct !DISubprogram(name: "unwrap_unchecked<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17he7d3bf597e89129bE", scope: !1265, file: !673, line: 1520, type: !4349, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1273, retainedNodes: !4491)
!4491 = !{!4488, !4492}
!4492 = !DILocalVariable(name: "t", scope: !4493, file: !384, line: 247, type: !633, align: 8)
!4493 = !DILexicalBlockFile(scope: !4494, file: !384, discriminator: 0)
!4494 = distinct !DILexicalBlock(scope: !4490, file: !673, line: 1523, column: 13)
!4495 = !DILocation(line: 247, column: 30, scope: !4489, inlinedAt: !4496)
!4496 = !DILocation(line: 247, column: 30, scope: !4480)
!4497 = !DILocalVariable(name: "pointer", scope: !4498, file: !384, line: 248, type: !296, align: 8)
!4498 = !DILexicalBlockFile(scope: !4499, file: !384, discriminator: 0)
!4499 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h10db60bd453db30fE", scope: !4360, file: !593, line: 190, type: !4361, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !4500)
!4500 = !{!4497}
!4501 = !DILocation(line: 248, column: 23, scope: !4498, inlinedAt: !4502)
!4502 = !DILocation(line: 137, column: 9, scope: !4503, inlinedAt: !4510)
!4503 = distinct !DISubprogram(name: "cast<alloc::vec::Vec<u8, alloc::alloc::Global>, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hc1a107d558bf9fc3E", scope: !461, file: !593, line: 136, type: !4504, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4509, retainedNodes: !4506)
!4504 = !DISubroutineType(types: !4505)
!4505 = !{!293, !461}
!4506 = !{!4507}
!4507 = !DILocalVariable(name: "self", scope: !4508, file: !384, line: 248, type: !461, align: 8)
!4508 = !DILexicalBlockFile(scope: !4503, file: !384, discriminator: 0)
!4509 = !{!469, !4373}
!4510 = !DILocation(line: 248, column: 23, scope: !4486)
!4511 = !DILocation(line: 241, column: 12, scope: !4480)
!4512 = !DILocation(line: 241, column: 40, scope: !4480)
!4513 = !DILocation(line: 247, column: 49, scope: !4480)
!4514 = !DILocation(line: 242, column: 13, scope: !4480)
!4515 = !DILocation(line: 241, column: 9, scope: !4480)
!4516 = !DILocation(line: 251, column: 6, scope: !4480)
!4517 = !DILocation(line: 247, column: 30, scope: !4493, inlinedAt: !4496)
!4518 = !DILocation(line: 247, column: 21, scope: !4486)
!4519 = !DILocation(line: 248, column: 23, scope: !4508, inlinedAt: !4510)
!4520 = !DILocalVariable(name: "self", scope: !4521, file: !384, line: 248, type: !464, align: 8)
!4521 = !DILexicalBlockFile(scope: !4522, file: !384, discriminator: 0)
!4522 = distinct !DISubprogram(name: "cast<alloc::vec::Vec<u8, alloc::alloc::Global>, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hbc0dbf2511f7251fE", scope: !464, file: !582, line: 453, type: !4523, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4509, retainedNodes: !4525)
!4523 = !DISubroutineType(types: !4524)
!4524 = !{!296, !464}
!4525 = !{!4520}
!4526 = !DILocation(line: 248, column: 23, scope: !4521, inlinedAt: !4527)
!4527 = !DILocation(line: 137, column: 22, scope: !4503, inlinedAt: !4510)
!4528 = !DILocalVariable(name: "self", scope: !4529, file: !384, line: 248, type: !464, align: 8)
!4529 = !DILexicalBlockFile(scope: !4530, file: !384, discriminator: 0)
!4530 = distinct !DISubprogram(name: "as_ptr<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h3b260fc4361efc10E", scope: !464, file: !582, line: 330, type: !2422, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !4531)
!4531 = !{!4528}
!4532 = !DILocation(line: 248, column: 23, scope: !4529, inlinedAt: !4533)
!4533 = !DILocation(line: 455, column: 41, scope: !4522, inlinedAt: !4527)
!4534 = !DILocalVariable(name: "ptr", scope: !4535, file: !384, line: 248, type: !596, align: 8)
!4535 = !DILexicalBlockFile(scope: !4536, file: !384, discriminator: 0)
!4536 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hfaafb5192c9d4d91E", scope: !296, file: !582, line: 196, type: !608, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !4537)
!4537 = !{!4534}
!4538 = !DILocation(line: 248, column: 23, scope: !4535, inlinedAt: !4539)
!4539 = !DILocation(line: 455, column: 18, scope: !4522, inlinedAt: !4527)
!4540 = !DILocation(line: 247, column: 30, scope: !4541, inlinedAt: !4543)
!4541 = !DILexicalBlockFile(scope: !4542, file: !384, discriminator: 0)
!4542 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h3603131b564d906eE", scope: !4408, file: !4407, line: 100, type: !4409, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !19)
!4543 = !DILocation(line: 1525, column: 32, scope: !4490, inlinedAt: !4496)
!4544 = !DILocation(line: 248, column: 22, scope: !4486)
!4545 = !DILocation(line: 248, column: 17, scope: !4486)
!4546 = distinct !DISubprogram(name: "grow_amortized<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h19faf0dbda2ba0ddE", scope: !271, file: !384, line: 379, type: !4547, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !4550)
!4547 = !DISubroutineType(types: !4548)
!4548 = !{!2176, !4549, !9, !9}
!4549 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<alloc::string::String, alloc::alloc::Global>", baseType: !271, size: 64, align: 64, dwarfAddressSpace: 0)
!4550 = !{!4551, !4552, !4553, !4554, !4556, !4558, !4560, !4562, !4564, !4566, !4568, !4570}
!4551 = !DILocalVariable(name: "self", arg: 1, scope: !4546, file: !384, line: 379, type: !4549)
!4552 = !DILocalVariable(name: "len", arg: 2, scope: !4546, file: !384, line: 379, type: !9)
!4553 = !DILocalVariable(name: "additional", arg: 3, scope: !4546, file: !384, line: 379, type: !9)
!4554 = !DILocalVariable(name: "required_cap", scope: !4555, file: !384, line: 390, type: !9, align: 8)
!4555 = distinct !DILexicalBlock(scope: !4546, file: !384, line: 390, column: 9)
!4556 = !DILocalVariable(name: "residual", scope: !4557, file: !384, line: 390, type: !3760, align: 8)
!4557 = distinct !DILexicalBlock(scope: !4546, file: !384, line: 390, column: 79)
!4558 = !DILocalVariable(name: "val", scope: !4559, file: !384, line: 390, type: !9, align: 8)
!4559 = distinct !DILexicalBlock(scope: !4546, file: !384, line: 390, column: 28)
!4560 = !DILocalVariable(name: "cap", scope: !4561, file: !384, line: 394, type: !9, align: 8)
!4561 = distinct !DILexicalBlock(scope: !4555, file: !384, line: 394, column: 9)
!4562 = !DILocalVariable(name: "cap", scope: !4563, file: !384, line: 395, type: !9, align: 8)
!4563 = distinct !DILexicalBlock(scope: !4561, file: !384, line: 395, column: 9)
!4564 = !DILocalVariable(name: "new_layout", scope: !4565, file: !384, line: 397, type: !1265, align: 8)
!4565 = distinct !DILexicalBlock(scope: !4563, file: !384, line: 397, column: 9)
!4566 = !DILocalVariable(name: "ptr", scope: !4567, file: !384, line: 400, type: !2117, align: 8)
!4567 = distinct !DILexicalBlock(scope: !4565, file: !384, line: 400, column: 9)
!4568 = !DILocalVariable(name: "residual", scope: !4569, file: !384, line: 400, type: !3777, align: 8)
!4569 = distinct !DILexicalBlock(scope: !4565, file: !384, line: 400, column: 82)
!4570 = !DILocalVariable(name: "val", scope: !4571, file: !384, line: 400, type: !2117, align: 8)
!4571 = distinct !DILexicalBlock(scope: !4565, file: !384, line: 400, column: 19)
!4572 = !DILocation(line: 379, column: 23, scope: !4546)
!4573 = !DILocation(line: 379, column: 34, scope: !4546)
!4574 = !DILocation(line: 379, column: 46, scope: !4546)
!4575 = !DILocalVariable(name: "self", scope: !4576, file: !384, line: 390, type: !4594, align: 8)
!4576 = !DILexicalBlockFile(scope: !4577, file: !384, discriminator: 0)
!4577 = distinct !DISubprogram(name: "branch<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcec044461c716b28E", scope: !1360, file: !673, line: 2117, type: !4578, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4602, retainedNodes: !4608)
!4578 = !DISubroutineType(types: !4579)
!4579 = !{!4580, !4594}
!4580 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", scope: !1364, file: !2, size: 192, align: 64, elements: !4581, templateParams: !19, identifier: "aaa47d4c01b9e814e1128564379fb1ed")
!4581 = !{!4582}
!4582 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4580, file: !2, size: 192, align: 64, elements: !4583, templateParams: !19, identifier: "52bc498f97dcf0aebe4be722096289fa", discriminator: !4593)
!4583 = !{!4584, !4589}
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !4582, file: !2, baseType: !4585, size: 192, align: 64, extraData: i64 0)
!4585 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !4580, file: !2, size: 192, align: 64, elements: !4586, templateParams: !4588, identifier: "aa7cd1170a8c6991d015bac63ac068a0")
!4586 = !{!4587}
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4585, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4588 = !{!3824, !1374}
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !4582, file: !2, baseType: !4590, size: 192, align: 64, extraData: i64 1)
!4590 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !4580, file: !2, size: 192, align: 64, elements: !4591, templateParams: !4588, identifier: "364459b0de7a7982990d34cdf2f986eb")
!4591 = !{!4592}
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4590, file: !2, baseType: !3760, size: 128, align: 64, offset: 64)
!4593 = !DIDerivedType(tag: DW_TAG_member, scope: !4580, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!4594 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, alloc::collections::TryReserveErrorKind>", scope: !675, file: !2, size: 192, align: 64, elements: !4595, templateParams: !19, identifier: "3631237889770fa7267d5501216770d")
!4595 = !{!4596}
!4596 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4594, file: !2, size: 192, align: 64, elements: !4597, templateParams: !19, identifier: "1d1f45ee59d9f1cfc391058ed79e0cae", discriminator: !4607)
!4597 = !{!4598, !4603}
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !4596, file: !2, baseType: !4599, size: 192, align: 64, extraData: i64 0)
!4599 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !4594, file: !2, size: 192, align: 64, elements: !4600, templateParams: !4602, identifier: "e350c9849d9dffdf1ffb40e48a20f918")
!4600 = !{!4601}
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4599, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4602 = !{!426, !2201}
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !4596, file: !2, baseType: !4604, size: 192, align: 64, extraData: i64 1)
!4604 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !4594, file: !2, size: 192, align: 64, elements: !4605, templateParams: !4602, identifier: "4805f2b2529d263fd0f1d3d0e43e54f8")
!4605 = !{!4606}
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4604, file: !2, baseType: !623, size: 128, align: 64, offset: 64)
!4607 = !DIDerivedType(tag: DW_TAG_member, scope: !4594, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!4608 = !{!4575, !4609, !4612}
!4609 = !DILocalVariable(name: "v", scope: !4610, file: !384, line: 390, type: !9, align: 8)
!4610 = !DILexicalBlockFile(scope: !4611, file: !384, discriminator: 0)
!4611 = distinct !DILexicalBlock(scope: !4577, file: !673, line: 2119, column: 13)
!4612 = !DILocalVariable(name: "e", scope: !4613, file: !384, line: 390, type: !623, align: 8)
!4613 = !DILexicalBlockFile(scope: !4614, file: !384, discriminator: 0)
!4614 = distinct !DILexicalBlock(scope: !4577, file: !673, line: 2120, column: 13)
!4615 = !DILocation(line: 390, column: 28, scope: !4576, inlinedAt: !4616)
!4616 = !DILocation(line: 390, column: 28, scope: !4546)
!4617 = !DILocalVariable(name: "self", scope: !4618, file: !384, line: 390, type: !782, align: 8)
!4618 = !DILexicalBlockFile(scope: !4619, file: !384, discriminator: 0)
!4619 = distinct !DISubprogram(name: "ok_or<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17he1444fd073259a2bE", scope: !782, file: !1406, line: 1051, type: !4620, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4602, retainedNodes: !4622)
!4620 = !DISubroutineType(types: !4621)
!4621 = !{!4594, !782, !623}
!4622 = !{!4617, !4623, !4624}
!4623 = !DILocalVariable(name: "err", scope: !4618, file: !384, line: 390, type: !623, align: 8)
!4624 = !DILocalVariable(name: "v", scope: !4625, file: !384, line: 390, type: !9, align: 8)
!4625 = !DILexicalBlockFile(scope: !4626, file: !384, discriminator: 0)
!4626 = distinct !DILexicalBlock(scope: !4619, file: !1406, line: 1056, column: 13)
!4627 = !DILocation(line: 390, column: 28, scope: !4618, inlinedAt: !4616)
!4628 = !DILocalVariable(name: "residual", scope: !4629, file: !384, line: 390, type: !3760, align: 8)
!4629 = !DILexicalBlockFile(scope: !4630, file: !384, discriminator: 0)
!4630 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17ha1bd8d6d957d5ff3E", scope: !674, file: !673, line: 2132, type: !4631, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4637, retainedNodes: !4633)
!4631 = !DISubroutineType(types: !4632)
!4632 = !{!2176, !3760, !732}
!4633 = !{!4628, !4634}
!4634 = !DILocalVariable(name: "e", scope: !4635, file: !384, line: 390, type: !623, align: 8)
!4635 = !DILexicalBlockFile(scope: !4636, file: !384, discriminator: 0)
!4636 = distinct !DILexicalBlock(scope: !4630, file: !673, line: 2134, column: 13)
!4637 = !{!766, !2201, !2159}
!4638 = !DILocation(line: 390, column: 28, scope: !4629, inlinedAt: !4639)
!4639 = !DILocation(line: 390, column: 28, scope: !4557)
!4640 = !DILocalVariable(name: "self", scope: !4641, file: !384, line: 400, type: !2131, align: 8)
!4641 = !DILexicalBlockFile(scope: !4642, file: !384, discriminator: 0)
!4642 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h3980e28b06ff374bE", scope: !1360, file: !673, line: 2117, type: !4643, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2139, retainedNodes: !4659)
!4643 = !DISubroutineType(types: !4644)
!4644 = !{!4645, !2131}
!4645 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", scope: !1364, file: !2, size: 192, align: 64, elements: !4646, templateParams: !19, identifier: "79c6e5125639b127cfa81db755c4cffd")
!4646 = !{!4647}
!4647 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4645, file: !2, size: 192, align: 64, elements: !4648, templateParams: !19, identifier: "bdca6637e968c25e4fe4c2dfef1c199f", discriminator: !4658)
!4648 = !{!4649, !4654}
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !4647, file: !2, baseType: !4650, size: 192, align: 64, extraData: i64 0)
!4650 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !4645, file: !2, size: 192, align: 64, elements: !4651, templateParams: !4653, identifier: "15ba5a416f94883524aa415e9e484c18")
!4651 = !{!4652}
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4650, file: !2, baseType: !2117, size: 128, align: 64, offset: 64)
!4653 = !{!3866, !3392}
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !4647, file: !2, baseType: !4655, size: 192, align: 64, extraData: i64 1)
!4655 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !4645, file: !2, size: 192, align: 64, elements: !4656, templateParams: !4653, identifier: "e100a24ff060842f7e06542fb969c57c")
!4656 = !{!4657}
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4655, file: !2, baseType: !3777, size: 128, align: 64, offset: 64)
!4658 = !DIDerivedType(tag: DW_TAG_member, scope: !4645, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!4659 = !{!4640, !4660, !4663}
!4660 = !DILocalVariable(name: "v", scope: !4661, file: !384, line: 400, type: !2117, align: 8)
!4661 = !DILexicalBlockFile(scope: !4662, file: !384, discriminator: 0)
!4662 = distinct !DILexicalBlock(scope: !4642, file: !673, line: 2119, column: 13)
!4663 = !DILocalVariable(name: "e", scope: !4664, file: !384, line: 400, type: !620, align: 8)
!4664 = !DILexicalBlockFile(scope: !4665, file: !384, discriminator: 0)
!4665 = distinct !DILexicalBlock(scope: !4642, file: !673, line: 2120, column: 13)
!4666 = !DILocation(line: 400, column: 19, scope: !4641, inlinedAt: !4667)
!4667 = !DILocation(line: 400, column: 19, scope: !4565)
!4668 = !DILocalVariable(name: "residual", scope: !4669, file: !384, line: 400, type: !3777, align: 8)
!4669 = !DILexicalBlockFile(scope: !4670, file: !384, discriminator: 0)
!4670 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3bf45320b2fb67cfE", scope: !674, file: !673, line: 2132, type: !4671, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4677, retainedNodes: !4673)
!4671 = !DISubroutineType(types: !4672)
!4672 = !{!2176, !3777, !732}
!4673 = !{!4668, !4674}
!4674 = !DILocalVariable(name: "e", scope: !4675, file: !384, line: 400, type: !620, align: 8)
!4675 = !DILexicalBlockFile(scope: !4676, file: !384, discriminator: 0)
!4676 = distinct !DILexicalBlock(scope: !4670, file: !673, line: 2134, column: 13)
!4677 = !{!766, !2140, !2159}
!4678 = !DILocation(line: 400, column: 19, scope: !4669, inlinedAt: !4679)
!4679 = !DILocation(line: 400, column: 19, scope: !4569)
!4680 = !DILocation(line: 383, column: 12, scope: !4546)
!4681 = !DILocation(line: 386, column: 24, scope: !4546)
!4682 = !DILocation(line: 390, column: 62, scope: !4546)
!4683 = !DILocation(line: 390, column: 28, scope: !4625, inlinedAt: !4616)
!4684 = !DILocation(line: 390, column: 28, scope: !4610, inlinedAt: !4616)
!4685 = !DILocation(line: 390, column: 28, scope: !4613, inlinedAt: !4616)
!4686 = !DILocation(line: 390, column: 28, scope: !4559)
!4687 = !DILocation(line: 390, column: 13, scope: !4555)
!4688 = !DILocation(line: 394, column: 28, scope: !4555)
!4689 = !DILocalVariable(name: "v1", scope: !4690, file: !384, line: 394, type: !9, align: 8)
!4690 = !DILexicalBlockFile(scope: !4691, file: !384, discriminator: 0)
!4691 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17hd61ef7cba9f6ff48E", scope: !131, file: !422, line: 1278, type: !414, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !425, retainedNodes: !4692)
!4692 = !{!4689, !4693}
!4693 = !DILocalVariable(name: "v2", scope: !4690, file: !384, line: 394, type: !9, align: 8)
!4694 = !DILocation(line: 394, column: 19, scope: !4690, inlinedAt: !4695)
!4695 = !DILocation(line: 394, column: 19, scope: !4555)
!4696 = !DILocation(line: 394, column: 42, scope: !4555)
!4697 = !DILocation(line: 394, column: 13, scope: !4561)
!4698 = !DILocation(line: 390, column: 79, scope: !4546)
!4699 = !DILocation(line: 390, column: 79, scope: !4557)
!4700 = !DILocation(line: 390, column: 28, scope: !4635, inlinedAt: !4639)
!4701 = !DILocalVariable(name: "kind", scope: !4702, file: !384, line: 390, type: !623, align: 8)
!4702 = !DILexicalBlockFile(scope: !4703, file: !384, discriminator: 0)
!4703 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hd9b1e84b4e136ef5E", scope: !616, file: !615, line: 116, type: !618, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !4704)
!4704 = !{!4701}
!4705 = !DILocation(line: 390, column: 28, scope: !4702, inlinedAt: !4706)
!4706 = !DILocation(line: 2134, column: 27, scope: !4636, inlinedAt: !4639)
!4707 = !DILocation(line: 1, column: 1, scope: !4708)
!4708 = !DILexicalBlockFile(scope: !4546, file: !3574, discriminator: 0)
!4709 = !DILocation(line: 395, column: 52, scope: !4561)
!4710 = !DILocalVariable(name: "v2", scope: !4711, file: !384, line: 395, type: !9, align: 8)
!4711 = !DILexicalBlockFile(scope: !4712, file: !384, discriminator: 0)
!4712 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17hd61ef7cba9f6ff48E", scope: !131, file: !422, line: 1278, type: !414, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !425, retainedNodes: !4713)
!4713 = !{!4714, !4710}
!4714 = !DILocalVariable(name: "v1", scope: !4711, file: !384, line: 395, type: !9, align: 8)
!4715 = !DILocation(line: 395, column: 19, scope: !4711, inlinedAt: !4716)
!4716 = !DILocation(line: 395, column: 19, scope: !4561)
!4717 = !DILocation(line: 395, column: 13, scope: !4563)
!4718 = !DILocation(line: 397, column: 26, scope: !4563)
!4719 = !DILocation(line: 397, column: 13, scope: !4565)
!4720 = !DILocation(line: 400, column: 43, scope: !4565)
!4721 = !DILocation(line: 400, column: 66, scope: !4565)
!4722 = !DILocation(line: 400, column: 19, scope: !4661, inlinedAt: !4667)
!4723 = !DILocation(line: 400, column: 19, scope: !4664, inlinedAt: !4667)
!4724 = !DILocation(line: 400, column: 19, scope: !4571)
!4725 = !DILocation(line: 400, column: 13, scope: !4567)
!4726 = !DILocation(line: 401, column: 9, scope: !4567)
!4727 = !DILocation(line: 400, column: 82, scope: !4565)
!4728 = !DILocation(line: 400, column: 82, scope: !4569)
!4729 = !DILocation(line: 400, column: 19, scope: !4675, inlinedAt: !4679)
!4730 = !DILocation(line: 1, column: 1, scope: !4731)
!4731 = !DILexicalBlockFile(scope: !4555, file: !3574, discriminator: 0)
!4732 = !DILocation(line: 403, column: 6, scope: !4546)
!4733 = !DILocation(line: 402, column: 9, scope: !4567)
!4734 = !DILocation(line: 386, column: 20, scope: !4546)
!4735 = distinct !DISubprogram(name: "grow_amortized<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h3173f2e9cd926648E", scope: !290, file: !384, line: 379, type: !4736, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !4739)
!4736 = !DISubroutineType(types: !4737)
!4737 = !{!2176, !4738, !9, !9}
!4738 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !290, size: 64, align: 64, dwarfAddressSpace: 0)
!4739 = !{!4740, !4741, !4742, !4743, !4745, !4747, !4749, !4751, !4753, !4755, !4757, !4759}
!4740 = !DILocalVariable(name: "self", arg: 1, scope: !4735, file: !384, line: 379, type: !4738)
!4741 = !DILocalVariable(name: "len", arg: 2, scope: !4735, file: !384, line: 379, type: !9)
!4742 = !DILocalVariable(name: "additional", arg: 3, scope: !4735, file: !384, line: 379, type: !9)
!4743 = !DILocalVariable(name: "required_cap", scope: !4744, file: !384, line: 390, type: !9, align: 8)
!4744 = distinct !DILexicalBlock(scope: !4735, file: !384, line: 390, column: 9)
!4745 = !DILocalVariable(name: "residual", scope: !4746, file: !384, line: 390, type: !3760, align: 8)
!4746 = distinct !DILexicalBlock(scope: !4735, file: !384, line: 390, column: 79)
!4747 = !DILocalVariable(name: "val", scope: !4748, file: !384, line: 390, type: !9, align: 8)
!4748 = distinct !DILexicalBlock(scope: !4735, file: !384, line: 390, column: 28)
!4749 = !DILocalVariable(name: "cap", scope: !4750, file: !384, line: 394, type: !9, align: 8)
!4750 = distinct !DILexicalBlock(scope: !4744, file: !384, line: 394, column: 9)
!4751 = !DILocalVariable(name: "cap", scope: !4752, file: !384, line: 395, type: !9, align: 8)
!4752 = distinct !DILexicalBlock(scope: !4750, file: !384, line: 395, column: 9)
!4753 = !DILocalVariable(name: "new_layout", scope: !4754, file: !384, line: 397, type: !1265, align: 8)
!4754 = distinct !DILexicalBlock(scope: !4752, file: !384, line: 397, column: 9)
!4755 = !DILocalVariable(name: "ptr", scope: !4756, file: !384, line: 400, type: !2117, align: 8)
!4756 = distinct !DILexicalBlock(scope: !4754, file: !384, line: 400, column: 9)
!4757 = !DILocalVariable(name: "residual", scope: !4758, file: !384, line: 400, type: !3777, align: 8)
!4758 = distinct !DILexicalBlock(scope: !4754, file: !384, line: 400, column: 82)
!4759 = !DILocalVariable(name: "val", scope: !4760, file: !384, line: 400, type: !2117, align: 8)
!4760 = distinct !DILexicalBlock(scope: !4754, file: !384, line: 400, column: 19)
!4761 = !DILocation(line: 379, column: 23, scope: !4735)
!4762 = !DILocation(line: 379, column: 34, scope: !4735)
!4763 = !DILocation(line: 379, column: 46, scope: !4735)
!4764 = !DILocalVariable(name: "self", scope: !4765, file: !384, line: 390, type: !4594, align: 8)
!4765 = !DILexicalBlockFile(scope: !4766, file: !384, discriminator: 0)
!4766 = distinct !DISubprogram(name: "branch<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcec044461c716b28E", scope: !1360, file: !673, line: 2117, type: !4578, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4602, retainedNodes: !4767)
!4767 = !{!4764, !4768, !4771}
!4768 = !DILocalVariable(name: "v", scope: !4769, file: !384, line: 390, type: !9, align: 8)
!4769 = !DILexicalBlockFile(scope: !4770, file: !384, discriminator: 0)
!4770 = distinct !DILexicalBlock(scope: !4766, file: !673, line: 2119, column: 13)
!4771 = !DILocalVariable(name: "e", scope: !4772, file: !384, line: 390, type: !623, align: 8)
!4772 = !DILexicalBlockFile(scope: !4773, file: !384, discriminator: 0)
!4773 = distinct !DILexicalBlock(scope: !4766, file: !673, line: 2120, column: 13)
!4774 = !DILocation(line: 390, column: 28, scope: !4765, inlinedAt: !4775)
!4775 = !DILocation(line: 390, column: 28, scope: !4735)
!4776 = !DILocalVariable(name: "self", scope: !4777, file: !384, line: 390, type: !782, align: 8)
!4777 = !DILexicalBlockFile(scope: !4778, file: !384, discriminator: 0)
!4778 = distinct !DISubprogram(name: "ok_or<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17he1444fd073259a2bE", scope: !782, file: !1406, line: 1051, type: !4620, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4602, retainedNodes: !4779)
!4779 = !{!4776, !4780, !4781}
!4780 = !DILocalVariable(name: "err", scope: !4777, file: !384, line: 390, type: !623, align: 8)
!4781 = !DILocalVariable(name: "v", scope: !4782, file: !384, line: 390, type: !9, align: 8)
!4782 = !DILexicalBlockFile(scope: !4783, file: !384, discriminator: 0)
!4783 = distinct !DILexicalBlock(scope: !4778, file: !1406, line: 1056, column: 13)
!4784 = !DILocation(line: 390, column: 28, scope: !4777, inlinedAt: !4775)
!4785 = !DILocalVariable(name: "residual", scope: !4786, file: !384, line: 390, type: !3760, align: 8)
!4786 = !DILexicalBlockFile(scope: !4787, file: !384, discriminator: 0)
!4787 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17ha1bd8d6d957d5ff3E", scope: !674, file: !673, line: 2132, type: !4631, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4637, retainedNodes: !4788)
!4788 = !{!4785, !4789}
!4789 = !DILocalVariable(name: "e", scope: !4790, file: !384, line: 390, type: !623, align: 8)
!4790 = !DILexicalBlockFile(scope: !4791, file: !384, discriminator: 0)
!4791 = distinct !DILexicalBlock(scope: !4787, file: !673, line: 2134, column: 13)
!4792 = !DILocation(line: 390, column: 28, scope: !4786, inlinedAt: !4793)
!4793 = !DILocation(line: 390, column: 28, scope: !4746)
!4794 = !DILocalVariable(name: "self", scope: !4795, file: !384, line: 400, type: !2131, align: 8)
!4795 = !DILexicalBlockFile(scope: !4796, file: !384, discriminator: 0)
!4796 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h3980e28b06ff374bE", scope: !1360, file: !673, line: 2117, type: !4643, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2139, retainedNodes: !4797)
!4797 = !{!4794, !4798, !4801}
!4798 = !DILocalVariable(name: "v", scope: !4799, file: !384, line: 400, type: !2117, align: 8)
!4799 = !DILexicalBlockFile(scope: !4800, file: !384, discriminator: 0)
!4800 = distinct !DILexicalBlock(scope: !4796, file: !673, line: 2119, column: 13)
!4801 = !DILocalVariable(name: "e", scope: !4802, file: !384, line: 400, type: !620, align: 8)
!4802 = !DILexicalBlockFile(scope: !4803, file: !384, discriminator: 0)
!4803 = distinct !DILexicalBlock(scope: !4796, file: !673, line: 2120, column: 13)
!4804 = !DILocation(line: 400, column: 19, scope: !4795, inlinedAt: !4805)
!4805 = !DILocation(line: 400, column: 19, scope: !4754)
!4806 = !DILocalVariable(name: "residual", scope: !4807, file: !384, line: 400, type: !3777, align: 8)
!4807 = !DILexicalBlockFile(scope: !4808, file: !384, discriminator: 0)
!4808 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3bf45320b2fb67cfE", scope: !674, file: !673, line: 2132, type: !4671, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4677, retainedNodes: !4809)
!4809 = !{!4806, !4810}
!4810 = !DILocalVariable(name: "e", scope: !4811, file: !384, line: 400, type: !620, align: 8)
!4811 = !DILexicalBlockFile(scope: !4812, file: !384, discriminator: 0)
!4812 = distinct !DILexicalBlock(scope: !4808, file: !673, line: 2134, column: 13)
!4813 = !DILocation(line: 400, column: 19, scope: !4807, inlinedAt: !4814)
!4814 = !DILocation(line: 400, column: 19, scope: !4758)
!4815 = !DILocation(line: 383, column: 12, scope: !4735)
!4816 = !DILocation(line: 386, column: 24, scope: !4735)
!4817 = !DILocation(line: 390, column: 62, scope: !4735)
!4818 = !DILocation(line: 390, column: 28, scope: !4782, inlinedAt: !4775)
!4819 = !DILocation(line: 390, column: 28, scope: !4769, inlinedAt: !4775)
!4820 = !DILocation(line: 390, column: 28, scope: !4772, inlinedAt: !4775)
!4821 = !DILocation(line: 390, column: 28, scope: !4748)
!4822 = !DILocation(line: 390, column: 13, scope: !4744)
!4823 = !DILocation(line: 394, column: 28, scope: !4744)
!4824 = !DILocalVariable(name: "v1", scope: !4825, file: !384, line: 394, type: !9, align: 8)
!4825 = !DILexicalBlockFile(scope: !4826, file: !384, discriminator: 0)
!4826 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17hd61ef7cba9f6ff48E", scope: !131, file: !422, line: 1278, type: !414, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !425, retainedNodes: !4827)
!4827 = !{!4824, !4828}
!4828 = !DILocalVariable(name: "v2", scope: !4825, file: !384, line: 394, type: !9, align: 8)
!4829 = !DILocation(line: 394, column: 19, scope: !4825, inlinedAt: !4830)
!4830 = !DILocation(line: 394, column: 19, scope: !4744)
!4831 = !DILocation(line: 394, column: 42, scope: !4744)
!4832 = !DILocation(line: 394, column: 13, scope: !4750)
!4833 = !DILocation(line: 390, column: 79, scope: !4735)
!4834 = !DILocation(line: 390, column: 79, scope: !4746)
!4835 = !DILocation(line: 390, column: 28, scope: !4790, inlinedAt: !4793)
!4836 = !DILocalVariable(name: "kind", scope: !4837, file: !384, line: 390, type: !623, align: 8)
!4837 = !DILexicalBlockFile(scope: !4838, file: !384, discriminator: 0)
!4838 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hd9b1e84b4e136ef5E", scope: !616, file: !615, line: 116, type: !618, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !4839)
!4839 = !{!4836}
!4840 = !DILocation(line: 390, column: 28, scope: !4837, inlinedAt: !4841)
!4841 = !DILocation(line: 2134, column: 27, scope: !4791, inlinedAt: !4793)
!4842 = !DILocation(line: 1, column: 1, scope: !4843)
!4843 = !DILexicalBlockFile(scope: !4735, file: !3574, discriminator: 0)
!4844 = !DILocation(line: 395, column: 52, scope: !4750)
!4845 = !DILocalVariable(name: "v2", scope: !4846, file: !384, line: 395, type: !9, align: 8)
!4846 = !DILexicalBlockFile(scope: !4847, file: !384, discriminator: 0)
!4847 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17hd61ef7cba9f6ff48E", scope: !131, file: !422, line: 1278, type: !414, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !425, retainedNodes: !4848)
!4848 = !{!4849, !4845}
!4849 = !DILocalVariable(name: "v1", scope: !4846, file: !384, line: 395, type: !9, align: 8)
!4850 = !DILocation(line: 395, column: 19, scope: !4846, inlinedAt: !4851)
!4851 = !DILocation(line: 395, column: 19, scope: !4750)
!4852 = !DILocation(line: 395, column: 13, scope: !4752)
!4853 = !DILocation(line: 397, column: 26, scope: !4752)
!4854 = !DILocation(line: 397, column: 13, scope: !4754)
!4855 = !DILocation(line: 400, column: 43, scope: !4754)
!4856 = !DILocation(line: 400, column: 66, scope: !4754)
!4857 = !DILocation(line: 400, column: 19, scope: !4799, inlinedAt: !4805)
!4858 = !DILocation(line: 400, column: 19, scope: !4802, inlinedAt: !4805)
!4859 = !DILocation(line: 400, column: 19, scope: !4760)
!4860 = !DILocation(line: 400, column: 13, scope: !4756)
!4861 = !DILocation(line: 401, column: 9, scope: !4756)
!4862 = !DILocation(line: 400, column: 82, scope: !4754)
!4863 = !DILocation(line: 400, column: 82, scope: !4758)
!4864 = !DILocation(line: 400, column: 19, scope: !4811, inlinedAt: !4814)
!4865 = !DILocation(line: 1, column: 1, scope: !4866)
!4866 = !DILexicalBlockFile(scope: !4744, file: !3574, discriminator: 0)
!4867 = !DILocation(line: 403, column: 6, scope: !4735)
!4868 = !DILocation(line: 402, column: 9, scope: !4756)
!4869 = !DILocation(line: 386, column: 20, scope: !4735)
!4870 = distinct !DISubprogram(name: "grow_amortized<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hd22e0de602bec0ddE", scope: !458, file: !384, line: 379, type: !4871, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !4874)
!4871 = !DISubroutineType(types: !4872)
!4872 = !{!2176, !4873, !9, !9}
!4873 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", baseType: !458, size: 64, align: 64, dwarfAddressSpace: 0)
!4874 = !{!4875, !4876, !4877, !4878, !4880, !4882, !4884, !4886, !4888, !4890, !4892, !4894}
!4875 = !DILocalVariable(name: "self", arg: 1, scope: !4870, file: !384, line: 379, type: !4873)
!4876 = !DILocalVariable(name: "len", arg: 2, scope: !4870, file: !384, line: 379, type: !9)
!4877 = !DILocalVariable(name: "additional", arg: 3, scope: !4870, file: !384, line: 379, type: !9)
!4878 = !DILocalVariable(name: "required_cap", scope: !4879, file: !384, line: 390, type: !9, align: 8)
!4879 = distinct !DILexicalBlock(scope: !4870, file: !384, line: 390, column: 9)
!4880 = !DILocalVariable(name: "residual", scope: !4881, file: !384, line: 390, type: !3760, align: 8)
!4881 = distinct !DILexicalBlock(scope: !4870, file: !384, line: 390, column: 79)
!4882 = !DILocalVariable(name: "val", scope: !4883, file: !384, line: 390, type: !9, align: 8)
!4883 = distinct !DILexicalBlock(scope: !4870, file: !384, line: 390, column: 28)
!4884 = !DILocalVariable(name: "cap", scope: !4885, file: !384, line: 394, type: !9, align: 8)
!4885 = distinct !DILexicalBlock(scope: !4879, file: !384, line: 394, column: 9)
!4886 = !DILocalVariable(name: "cap", scope: !4887, file: !384, line: 395, type: !9, align: 8)
!4887 = distinct !DILexicalBlock(scope: !4885, file: !384, line: 395, column: 9)
!4888 = !DILocalVariable(name: "new_layout", scope: !4889, file: !384, line: 397, type: !1265, align: 8)
!4889 = distinct !DILexicalBlock(scope: !4887, file: !384, line: 397, column: 9)
!4890 = !DILocalVariable(name: "ptr", scope: !4891, file: !384, line: 400, type: !2117, align: 8)
!4891 = distinct !DILexicalBlock(scope: !4889, file: !384, line: 400, column: 9)
!4892 = !DILocalVariable(name: "residual", scope: !4893, file: !384, line: 400, type: !3777, align: 8)
!4893 = distinct !DILexicalBlock(scope: !4889, file: !384, line: 400, column: 82)
!4894 = !DILocalVariable(name: "val", scope: !4895, file: !384, line: 400, type: !2117, align: 8)
!4895 = distinct !DILexicalBlock(scope: !4889, file: !384, line: 400, column: 19)
!4896 = !DILocation(line: 379, column: 23, scope: !4870)
!4897 = !DILocation(line: 379, column: 34, scope: !4870)
!4898 = !DILocation(line: 379, column: 46, scope: !4870)
!4899 = !DILocalVariable(name: "self", scope: !4900, file: !384, line: 390, type: !4594, align: 8)
!4900 = !DILexicalBlockFile(scope: !4901, file: !384, discriminator: 0)
!4901 = distinct !DISubprogram(name: "branch<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcec044461c716b28E", scope: !1360, file: !673, line: 2117, type: !4578, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4602, retainedNodes: !4902)
!4902 = !{!4899, !4903, !4906}
!4903 = !DILocalVariable(name: "v", scope: !4904, file: !384, line: 390, type: !9, align: 8)
!4904 = !DILexicalBlockFile(scope: !4905, file: !384, discriminator: 0)
!4905 = distinct !DILexicalBlock(scope: !4901, file: !673, line: 2119, column: 13)
!4906 = !DILocalVariable(name: "e", scope: !4907, file: !384, line: 390, type: !623, align: 8)
!4907 = !DILexicalBlockFile(scope: !4908, file: !384, discriminator: 0)
!4908 = distinct !DILexicalBlock(scope: !4901, file: !673, line: 2120, column: 13)
!4909 = !DILocation(line: 390, column: 28, scope: !4900, inlinedAt: !4910)
!4910 = !DILocation(line: 390, column: 28, scope: !4870)
!4911 = !DILocalVariable(name: "self", scope: !4912, file: !384, line: 390, type: !782, align: 8)
!4912 = !DILexicalBlockFile(scope: !4913, file: !384, discriminator: 0)
!4913 = distinct !DISubprogram(name: "ok_or<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17he1444fd073259a2bE", scope: !782, file: !1406, line: 1051, type: !4620, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4602, retainedNodes: !4914)
!4914 = !{!4911, !4915, !4916}
!4915 = !DILocalVariable(name: "err", scope: !4912, file: !384, line: 390, type: !623, align: 8)
!4916 = !DILocalVariable(name: "v", scope: !4917, file: !384, line: 390, type: !9, align: 8)
!4917 = !DILexicalBlockFile(scope: !4918, file: !384, discriminator: 0)
!4918 = distinct !DILexicalBlock(scope: !4913, file: !1406, line: 1056, column: 13)
!4919 = !DILocation(line: 390, column: 28, scope: !4912, inlinedAt: !4910)
!4920 = !DILocalVariable(name: "residual", scope: !4921, file: !384, line: 390, type: !3760, align: 8)
!4921 = !DILexicalBlockFile(scope: !4922, file: !384, discriminator: 0)
!4922 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17ha1bd8d6d957d5ff3E", scope: !674, file: !673, line: 2132, type: !4631, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4637, retainedNodes: !4923)
!4923 = !{!4920, !4924}
!4924 = !DILocalVariable(name: "e", scope: !4925, file: !384, line: 390, type: !623, align: 8)
!4925 = !DILexicalBlockFile(scope: !4926, file: !384, discriminator: 0)
!4926 = distinct !DILexicalBlock(scope: !4922, file: !673, line: 2134, column: 13)
!4927 = !DILocation(line: 390, column: 28, scope: !4921, inlinedAt: !4928)
!4928 = !DILocation(line: 390, column: 28, scope: !4881)
!4929 = !DILocalVariable(name: "self", scope: !4930, file: !384, line: 400, type: !2131, align: 8)
!4930 = !DILexicalBlockFile(scope: !4931, file: !384, discriminator: 0)
!4931 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h3980e28b06ff374bE", scope: !1360, file: !673, line: 2117, type: !4643, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2139, retainedNodes: !4932)
!4932 = !{!4929, !4933, !4936}
!4933 = !DILocalVariable(name: "v", scope: !4934, file: !384, line: 400, type: !2117, align: 8)
!4934 = !DILexicalBlockFile(scope: !4935, file: !384, discriminator: 0)
!4935 = distinct !DILexicalBlock(scope: !4931, file: !673, line: 2119, column: 13)
!4936 = !DILocalVariable(name: "e", scope: !4937, file: !384, line: 400, type: !620, align: 8)
!4937 = !DILexicalBlockFile(scope: !4938, file: !384, discriminator: 0)
!4938 = distinct !DILexicalBlock(scope: !4931, file: !673, line: 2120, column: 13)
!4939 = !DILocation(line: 400, column: 19, scope: !4930, inlinedAt: !4940)
!4940 = !DILocation(line: 400, column: 19, scope: !4889)
!4941 = !DILocalVariable(name: "residual", scope: !4942, file: !384, line: 400, type: !3777, align: 8)
!4942 = !DILexicalBlockFile(scope: !4943, file: !384, discriminator: 0)
!4943 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3bf45320b2fb67cfE", scope: !674, file: !673, line: 2132, type: !4671, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4677, retainedNodes: !4944)
!4944 = !{!4941, !4945}
!4945 = !DILocalVariable(name: "e", scope: !4946, file: !384, line: 400, type: !620, align: 8)
!4946 = !DILexicalBlockFile(scope: !4947, file: !384, discriminator: 0)
!4947 = distinct !DILexicalBlock(scope: !4943, file: !673, line: 2134, column: 13)
!4948 = !DILocation(line: 400, column: 19, scope: !4942, inlinedAt: !4949)
!4949 = !DILocation(line: 400, column: 19, scope: !4893)
!4950 = !DILocation(line: 383, column: 12, scope: !4870)
!4951 = !DILocation(line: 386, column: 24, scope: !4870)
!4952 = !DILocation(line: 390, column: 62, scope: !4870)
!4953 = !DILocation(line: 390, column: 28, scope: !4917, inlinedAt: !4910)
!4954 = !DILocation(line: 390, column: 28, scope: !4904, inlinedAt: !4910)
!4955 = !DILocation(line: 390, column: 28, scope: !4907, inlinedAt: !4910)
!4956 = !DILocation(line: 390, column: 28, scope: !4883)
!4957 = !DILocation(line: 390, column: 13, scope: !4879)
!4958 = !DILocation(line: 394, column: 28, scope: !4879)
!4959 = !DILocalVariable(name: "v1", scope: !4960, file: !384, line: 394, type: !9, align: 8)
!4960 = !DILexicalBlockFile(scope: !4961, file: !384, discriminator: 0)
!4961 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17hd61ef7cba9f6ff48E", scope: !131, file: !422, line: 1278, type: !414, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !425, retainedNodes: !4962)
!4962 = !{!4959, !4963}
!4963 = !DILocalVariable(name: "v2", scope: !4960, file: !384, line: 394, type: !9, align: 8)
!4964 = !DILocation(line: 394, column: 19, scope: !4960, inlinedAt: !4965)
!4965 = !DILocation(line: 394, column: 19, scope: !4879)
!4966 = !DILocation(line: 394, column: 42, scope: !4879)
!4967 = !DILocation(line: 394, column: 13, scope: !4885)
!4968 = !DILocation(line: 390, column: 79, scope: !4870)
!4969 = !DILocation(line: 390, column: 79, scope: !4881)
!4970 = !DILocation(line: 390, column: 28, scope: !4925, inlinedAt: !4928)
!4971 = !DILocalVariable(name: "kind", scope: !4972, file: !384, line: 390, type: !623, align: 8)
!4972 = !DILexicalBlockFile(scope: !4973, file: !384, discriminator: 0)
!4973 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hd9b1e84b4e136ef5E", scope: !616, file: !615, line: 116, type: !618, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !4974)
!4974 = !{!4971}
!4975 = !DILocation(line: 390, column: 28, scope: !4972, inlinedAt: !4976)
!4976 = !DILocation(line: 2134, column: 27, scope: !4926, inlinedAt: !4928)
!4977 = !DILocation(line: 1, column: 1, scope: !4978)
!4978 = !DILexicalBlockFile(scope: !4870, file: !3574, discriminator: 0)
!4979 = !DILocation(line: 395, column: 52, scope: !4885)
!4980 = !DILocalVariable(name: "v2", scope: !4981, file: !384, line: 395, type: !9, align: 8)
!4981 = !DILexicalBlockFile(scope: !4982, file: !384, discriminator: 0)
!4982 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17hd61ef7cba9f6ff48E", scope: !131, file: !422, line: 1278, type: !414, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !425, retainedNodes: !4983)
!4983 = !{!4984, !4980}
!4984 = !DILocalVariable(name: "v1", scope: !4981, file: !384, line: 395, type: !9, align: 8)
!4985 = !DILocation(line: 395, column: 19, scope: !4981, inlinedAt: !4986)
!4986 = !DILocation(line: 395, column: 19, scope: !4885)
!4987 = !DILocation(line: 395, column: 13, scope: !4887)
!4988 = !DILocation(line: 397, column: 26, scope: !4887)
!4989 = !DILocation(line: 397, column: 13, scope: !4889)
!4990 = !DILocation(line: 400, column: 43, scope: !4889)
!4991 = !DILocation(line: 400, column: 66, scope: !4889)
!4992 = !DILocation(line: 400, column: 19, scope: !4934, inlinedAt: !4940)
!4993 = !DILocation(line: 400, column: 19, scope: !4937, inlinedAt: !4940)
!4994 = !DILocation(line: 400, column: 19, scope: !4895)
!4995 = !DILocation(line: 400, column: 13, scope: !4891)
!4996 = !DILocation(line: 401, column: 9, scope: !4891)
!4997 = !DILocation(line: 400, column: 82, scope: !4889)
!4998 = !DILocation(line: 400, column: 82, scope: !4893)
!4999 = !DILocation(line: 400, column: 19, scope: !4946, inlinedAt: !4949)
!5000 = !DILocation(line: 1, column: 1, scope: !5001)
!5001 = !DILexicalBlockFile(scope: !4879, file: !3574, discriminator: 0)
!5002 = !DILocation(line: 403, column: 6, scope: !4870)
!5003 = !DILocation(line: 402, column: 9, scope: !4891)
!5004 = !DILocation(line: 386, column: 20, scope: !4870)
!5005 = distinct !DISubprogram(name: "set_ptr_and_cap<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h5a3646e76d701e77E", scope: !271, file: !384, line: 364, type: !5006, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !5008)
!5006 = !DISubroutineType(types: !5007)
!5007 = !{null, !4549, !2117, !9}
!5008 = !{!5009, !5010, !5011}
!5009 = !DILocalVariable(name: "self", arg: 1, scope: !5005, file: !384, line: 364, type: !4549)
!5010 = !DILocalVariable(name: "ptr", arg: 2, scope: !5005, file: !384, line: 364, type: !2117)
!5011 = !DILocalVariable(name: "cap", arg: 3, scope: !5005, file: !384, line: 364, type: !9)
!5012 = !DILocation(line: 364, column: 24, scope: !5005)
!5013 = !DILocation(line: 364, column: 35, scope: !5005)
!5014 = !DILocation(line: 364, column: 55, scope: !5005)
!5015 = !DILocalVariable(name: "self", scope: !5016, file: !384, line: 368, type: !278, align: 8)
!5016 = !DILexicalBlockFile(scope: !5017, file: !384, discriminator: 0)
!5017 = distinct !DISubprogram(name: "as_ptr<alloc::string::String>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc136d2737ee99db8E", scope: !278, file: !582, line: 330, type: !2489, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !5018)
!5018 = !{!5015}
!5019 = !DILocation(line: 368, column: 51, scope: !5016, inlinedAt: !5020)
!5020 = !DILocation(line: 368, column: 51, scope: !5005)
!5021 = !DILocalVariable(name: "self", scope: !5022, file: !384, line: 368, type: !2117, align: 8)
!5022 = !DILexicalBlockFile(scope: !5023, file: !384, discriminator: 0)
!5023 = distinct !DISubprogram(name: "cast<[u8], alloc::string::String>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h3795fab45731c158E", scope: !2117, file: !582, line: 453, type: !4130, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4133, retainedNodes: !5024)
!5024 = !{!5021}
!5025 = !DILocation(line: 368, column: 51, scope: !5022, inlinedAt: !5020)
!5026 = !DILocalVariable(name: "self", scope: !5027, file: !384, line: 368, type: !2117, align: 8)
!5027 = !DILexicalBlockFile(scope: !5028, file: !384, discriminator: 0)
!5028 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf80eb1f9846f7798E", scope: !2117, file: !582, line: 330, type: !3681, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5029)
!5029 = !{!5026}
!5030 = !DILocation(line: 368, column: 51, scope: !5027, inlinedAt: !5031)
!5031 = !DILocation(line: 455, column: 41, scope: !5023, inlinedAt: !5020)
!5032 = !DILocalVariable(name: "ptr", scope: !5033, file: !384, line: 368, type: !359, align: 8)
!5033 = !DILexicalBlockFile(scope: !5034, file: !384, discriminator: 0)
!5034 = distinct !DISubprogram(name: "new_unchecked<alloc::string::String>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h07043c3523989784E", scope: !278, file: !582, line: 196, type: !4144, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !5035)
!5035 = !{!5032}
!5036 = !DILocation(line: 368, column: 51, scope: !5033, inlinedAt: !5037)
!5037 = !DILocation(line: 455, column: 18, scope: !5023, inlinedAt: !5020)
!5038 = !DILocalVariable(name: "ptr", scope: !5039, file: !384, line: 368, type: !359, align: 8)
!5039 = !DILexicalBlockFile(scope: !5040, file: !384, discriminator: 0)
!5040 = distinct !DISubprogram(name: "new_unchecked<alloc::string::String>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17he6add0a40bf0dd47E", scope: !274, file: !593, line: 85, type: !4152, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !5041)
!5041 = !{!5038}
!5042 = !DILocation(line: 368, column: 29, scope: !5039, inlinedAt: !5043)
!5043 = !DILocation(line: 368, column: 29, scope: !5005)
!5044 = !DILocalVariable(name: "ptr", scope: !5045, file: !384, line: 368, type: !359, align: 8)
!5045 = !DILexicalBlockFile(scope: !5046, file: !384, discriminator: 0)
!5046 = distinct !DISubprogram(name: "new_unchecked<alloc::string::String>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h07043c3523989784E", scope: !278, file: !582, line: 196, type: !4144, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !5047)
!5047 = !{!5044}
!5048 = !DILocation(line: 368, column: 29, scope: !5045, inlinedAt: !5049)
!5049 = !DILocation(line: 87, column: 36, scope: !5040, inlinedAt: !5043)
!5050 = !DILocation(line: 368, column: 9, scope: !5005)
!5051 = !DILocation(line: 369, column: 9, scope: !5005)
!5052 = !DILocation(line: 370, column: 6, scope: !5005)
!5053 = distinct !DISubprogram(name: "set_ptr_and_cap<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h8cbdcbfcd7396978E", scope: !290, file: !384, line: 364, type: !5054, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !5056)
!5054 = !DISubroutineType(types: !5055)
!5055 = !{null, !4738, !2117, !9}
!5056 = !{!5057, !5058, !5059}
!5057 = !DILocalVariable(name: "self", arg: 1, scope: !5053, file: !384, line: 364, type: !4738)
!5058 = !DILocalVariable(name: "ptr", arg: 2, scope: !5053, file: !384, line: 364, type: !2117)
!5059 = !DILocalVariable(name: "cap", arg: 3, scope: !5053, file: !384, line: 364, type: !9)
!5060 = !DILocation(line: 364, column: 24, scope: !5053)
!5061 = !DILocation(line: 364, column: 35, scope: !5053)
!5062 = !DILocation(line: 364, column: 55, scope: !5053)
!5063 = !DILocalVariable(name: "self", scope: !5064, file: !384, line: 368, type: !296, align: 8)
!5064 = !DILexicalBlockFile(scope: !5065, file: !384, discriminator: 0)
!5065 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9a87f4e9cb3e4acdE", scope: !296, file: !582, line: 330, type: !601, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5066)
!5066 = !{!5063}
!5067 = !DILocation(line: 368, column: 51, scope: !5064, inlinedAt: !5068)
!5068 = !DILocation(line: 368, column: 51, scope: !5053)
!5069 = !DILocalVariable(name: "self", scope: !5070, file: !384, line: 368, type: !2117, align: 8)
!5070 = !DILexicalBlockFile(scope: !5071, file: !384, discriminator: 0)
!5071 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hd414ac434bb99064E", scope: !2117, file: !582, line: 453, type: !3674, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4372, retainedNodes: !5072)
!5072 = !{!5069}
!5073 = !DILocation(line: 368, column: 51, scope: !5070, inlinedAt: !5068)
!5074 = !DILocalVariable(name: "self", scope: !5075, file: !384, line: 368, type: !2117, align: 8)
!5075 = !DILexicalBlockFile(scope: !5076, file: !384, discriminator: 0)
!5076 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf80eb1f9846f7798E", scope: !2117, file: !582, line: 330, type: !3681, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5077)
!5077 = !{!5074}
!5078 = !DILocation(line: 368, column: 51, scope: !5075, inlinedAt: !5079)
!5079 = !DILocation(line: 455, column: 41, scope: !5071, inlinedAt: !5068)
!5080 = !DILocalVariable(name: "ptr", scope: !5081, file: !384, line: 368, type: !596, align: 8)
!5081 = !DILexicalBlockFile(scope: !5082, file: !384, discriminator: 0)
!5082 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hfaafb5192c9d4d91E", scope: !296, file: !582, line: 196, type: !608, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5083)
!5083 = !{!5080}
!5084 = !DILocation(line: 368, column: 51, scope: !5081, inlinedAt: !5085)
!5085 = !DILocation(line: 455, column: 18, scope: !5071, inlinedAt: !5068)
!5086 = !DILocalVariable(name: "ptr", scope: !5087, file: !384, line: 368, type: !596, align: 8)
!5087 = !DILexicalBlockFile(scope: !5088, file: !384, discriminator: 0)
!5088 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h322ffc88d03e8d68E", scope: !293, file: !593, line: 85, type: !5089, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5091)
!5089 = !DISubroutineType(types: !5090)
!5090 = !{!293, !596}
!5091 = !{!5086}
!5092 = !DILocation(line: 368, column: 29, scope: !5087, inlinedAt: !5093)
!5093 = !DILocation(line: 368, column: 29, scope: !5053)
!5094 = !DILocalVariable(name: "ptr", scope: !5095, file: !384, line: 368, type: !596, align: 8)
!5095 = !DILexicalBlockFile(scope: !5096, file: !384, discriminator: 0)
!5096 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hfaafb5192c9d4d91E", scope: !296, file: !582, line: 196, type: !608, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5097)
!5097 = !{!5094}
!5098 = !DILocation(line: 368, column: 29, scope: !5095, inlinedAt: !5099)
!5099 = !DILocation(line: 87, column: 36, scope: !5088, inlinedAt: !5093)
!5100 = !DILocation(line: 368, column: 9, scope: !5053)
!5101 = !DILocation(line: 369, column: 9, scope: !5053)
!5102 = !DILocation(line: 370, column: 6, scope: !5053)
!5103 = distinct !DISubprogram(name: "set_ptr_and_cap<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17hff72854179b1f1a2E", scope: !458, file: !384, line: 364, type: !5104, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !5106)
!5104 = !DISubroutineType(types: !5105)
!5105 = !{null, !4873, !2117, !9}
!5106 = !{!5107, !5108, !5109}
!5107 = !DILocalVariable(name: "self", arg: 1, scope: !5103, file: !384, line: 364, type: !4873)
!5108 = !DILocalVariable(name: "ptr", arg: 2, scope: !5103, file: !384, line: 364, type: !2117)
!5109 = !DILocalVariable(name: "cap", arg: 3, scope: !5103, file: !384, line: 364, type: !9)
!5110 = !DILocation(line: 364, column: 24, scope: !5103)
!5111 = !DILocation(line: 364, column: 35, scope: !5103)
!5112 = !DILocation(line: 364, column: 55, scope: !5103)
!5113 = !DILocalVariable(name: "self", scope: !5114, file: !384, line: 368, type: !464, align: 8)
!5114 = !DILexicalBlockFile(scope: !5115, file: !384, discriminator: 0)
!5115 = distinct !DISubprogram(name: "as_ptr<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h3b260fc4361efc10E", scope: !464, file: !582, line: 330, type: !2422, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !5116)
!5116 = !{!5113}
!5117 = !DILocation(line: 368, column: 51, scope: !5114, inlinedAt: !5118)
!5118 = !DILocation(line: 368, column: 51, scope: !5103)
!5119 = !DILocalVariable(name: "self", scope: !5120, file: !384, line: 368, type: !2117, align: 8)
!5120 = !DILexicalBlockFile(scope: !5121, file: !384, discriminator: 0)
!5121 = distinct !DISubprogram(name: "cast<[u8], alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17ha5211c129b93036fE", scope: !2117, file: !582, line: 453, type: !4229, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !4232, retainedNodes: !5122)
!5122 = !{!5119}
!5123 = !DILocation(line: 368, column: 51, scope: !5120, inlinedAt: !5118)
!5124 = !DILocalVariable(name: "self", scope: !5125, file: !384, line: 368, type: !2117, align: 8)
!5125 = !DILexicalBlockFile(scope: !5126, file: !384, discriminator: 0)
!5126 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf80eb1f9846f7798E", scope: !2117, file: !582, line: 330, type: !3681, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5127)
!5127 = !{!5124}
!5128 = !DILocation(line: 368, column: 51, scope: !5125, inlinedAt: !5129)
!5129 = !DILocation(line: 455, column: 41, scope: !5121, inlinedAt: !5118)
!5130 = !DILocalVariable(name: "ptr", scope: !5131, file: !384, line: 368, type: !500, align: 8)
!5131 = !DILexicalBlockFile(scope: !5132, file: !384, discriminator: 0)
!5132 = distinct !DISubprogram(name: "new_unchecked<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h775194bf7ae51db4E", scope: !464, file: !582, line: 196, type: !4244, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !5133)
!5133 = !{!5130}
!5134 = !DILocation(line: 368, column: 51, scope: !5131, inlinedAt: !5135)
!5135 = !DILocation(line: 455, column: 18, scope: !5121, inlinedAt: !5118)
!5136 = !DILocalVariable(name: "ptr", scope: !5137, file: !384, line: 368, type: !500, align: 8)
!5137 = !DILexicalBlockFile(scope: !5138, file: !384, discriminator: 0)
!5138 = distinct !DISubprogram(name: "new_unchecked<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h4dfdfd289d2178a7E", scope: !461, file: !593, line: 85, type: !4252, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !5139)
!5139 = !{!5136}
!5140 = !DILocation(line: 368, column: 29, scope: !5137, inlinedAt: !5141)
!5141 = !DILocation(line: 368, column: 29, scope: !5103)
!5142 = !DILocalVariable(name: "ptr", scope: !5143, file: !384, line: 368, type: !500, align: 8)
!5143 = !DILexicalBlockFile(scope: !5144, file: !384, discriminator: 0)
!5144 = distinct !DISubprogram(name: "new_unchecked<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h775194bf7ae51db4E", scope: !464, file: !582, line: 196, type: !4244, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !5145)
!5145 = !{!5142}
!5146 = !DILocation(line: 368, column: 29, scope: !5143, inlinedAt: !5147)
!5147 = !DILocation(line: 87, column: 36, scope: !5138, inlinedAt: !5141)
!5148 = !DILocation(line: 368, column: 9, scope: !5103)
!5149 = !DILocation(line: 369, column: 9, scope: !5103)
!5150 = !DILocation(line: 370, column: 6, scope: !5103)
!5151 = distinct !DISubprogram(name: "reserve_for_push<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h06fafd2553dd81d4E", scope: !290, file: !384, line: 297, type: !5152, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !5154)
!5152 = !DISubroutineType(types: !5153)
!5153 = !{null, !4738, !9}
!5154 = !{!5155, !5156}
!5155 = !DILocalVariable(name: "self", arg: 1, scope: !5151, file: !384, line: 297, type: !4738)
!5156 = !DILocalVariable(name: "len", arg: 2, scope: !5151, file: !384, line: 297, type: !9)
!5157 = !DILocation(line: 297, column: 29, scope: !5151)
!5158 = !DILocation(line: 297, column: 40, scope: !5151)
!5159 = !DILocation(line: 298, column: 24, scope: !5151)
!5160 = !DILocation(line: 298, column: 9, scope: !5151)
!5161 = !DILocation(line: 299, column: 6, scope: !5151)
!5162 = distinct !DISubprogram(name: "new_in<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h0e80d6a7818cbea6E", scope: !458, file: !384, line: 121, type: !5163, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !5165)
!5163 = !DISubroutineType(types: !5164)
!5164 = !{!458, !304}
!5165 = !{!5166}
!5166 = !DILocalVariable(name: "alloc", arg: 1, scope: !5162, file: !384, line: 121, type: !304)
!5167 = !DILocation(line: 121, column: 25, scope: !5162)
!5168 = !DILocalVariable(name: "pointer", scope: !5169, file: !384, line: 123, type: !464, align: 8)
!5169 = !DILexicalBlockFile(scope: !5170, file: !384, discriminator: 0)
!5170 = distinct !DISubprogram(name: "from<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hba345ae830886f97E", scope: !4360, file: !593, line: 190, type: !5171, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !5173)
!5171 = !DISubroutineType(types: !5172)
!5172 = !{!461, !464}
!5173 = !{!5168}
!5174 = !DILocation(line: 123, column: 21, scope: !5169, inlinedAt: !5175)
!5175 = !DILocation(line: 73, column: 9, scope: !5176, inlinedAt: !5179)
!5176 = distinct !DISubprogram(name: "dangling<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17hdec4bd5df5e01768E", scope: !461, file: !593, line: 72, type: !5177, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !19)
!5177 = !DISubroutineType(types: !5178)
!5178 = !{!461}
!5179 = !DILocation(line: 123, column: 21, scope: !5162)
!5180 = !DILocation(line: 123, column: 21, scope: !5181, inlinedAt: !5183)
!5181 = !DILexicalBlockFile(scope: !5182, file: !384, discriminator: 0)
!5182 = distinct !DISubprogram(name: "align_of<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3mem8align_of17h14dbce2cac815896E", scope: !52, file: !1438, line: 464, type: !1439, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !19)
!5183 = !DILocation(line: 95, column: 52, scope: !5184, inlinedAt: !5191)
!5184 = distinct !DISubprogram(name: "dangling<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17hc4cb8022ce838413E", scope: !464, file: !582, line: 90, type: !5185, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !5187)
!5185 = !DISubroutineType(types: !5186)
!5186 = !{!464}
!5187 = !{!5188}
!5188 = !DILocalVariable(name: "ptr", scope: !5189, file: !384, line: 123, type: !500, align: 8)
!5189 = !DILexicalBlockFile(scope: !5190, file: !384, discriminator: 0)
!5190 = distinct !DILexicalBlock(scope: !5184, file: !582, line: 95, column: 13)
!5191 = !DILocation(line: 73, column: 20, scope: !5176, inlinedAt: !5179)
!5192 = !DILocalVariable(name: "addr", scope: !5193, file: !384, line: 123, type: !9, align: 8)
!5193 = !DILexicalBlockFile(scope: !5194, file: !384, discriminator: 0)
!5194 = distinct !DISubprogram(name: "invalid_mut<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr11invalid_mut17hb80e88231f021d8bE", scope: !202, file: !231, line: 569, type: !5195, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !5197)
!5195 = !DISubroutineType(types: !5196)
!5196 = !{!500, !9}
!5197 = !{!5192}
!5198 = !DILocation(line: 123, column: 21, scope: !5193, inlinedAt: !5199)
!5199 = !DILocation(line: 95, column: 23, scope: !5184, inlinedAt: !5191)
!5200 = !DILocation(line: 123, column: 21, scope: !5189, inlinedAt: !5191)
!5201 = !DILocalVariable(name: "ptr", scope: !5202, file: !384, line: 123, type: !500, align: 8)
!5202 = !DILexicalBlockFile(scope: !5203, file: !384, discriminator: 0)
!5203 = distinct !DISubprogram(name: "new_unchecked<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h775194bf7ae51db4E", scope: !464, file: !582, line: 196, type: !4244, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !5204)
!5204 = !{!5201}
!5205 = !DILocation(line: 123, column: 21, scope: !5202, inlinedAt: !5206)
!5206 = !DILocation(line: 96, column: 13, scope: !5190, inlinedAt: !5191)
!5207 = !DILocation(line: 123, column: 9, scope: !5162)
!5208 = !DILocation(line: 124, column: 6, scope: !5162)
!5209 = !DILocation(line: 124, column: 5, scope: !5162)
!5210 = !DILocation(line: 121, column: 5, scope: !5162)
!5211 = distinct !DISubprogram(name: "new_in<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17ha1c55d931f6b3c06E", scope: !271, file: !384, line: 121, type: !5212, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !5214)
!5212 = !DISubroutineType(types: !5213)
!5213 = !{!271, !304}
!5214 = !{!5215}
!5215 = !DILocalVariable(name: "alloc", arg: 1, scope: !5211, file: !384, line: 121, type: !304)
!5216 = !DILocation(line: 121, column: 25, scope: !5211)
!5217 = !DILocalVariable(name: "pointer", scope: !5218, file: !384, line: 123, type: !278, align: 8)
!5218 = !DILexicalBlockFile(scope: !5219, file: !384, discriminator: 0)
!5219 = distinct !DISubprogram(name: "from<alloc::string::String>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hd8f184c1a2586b53E", scope: !4360, file: !593, line: 190, type: !5220, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !5222)
!5220 = !DISubroutineType(types: !5221)
!5221 = !{!274, !278}
!5222 = !{!5217}
!5223 = !DILocation(line: 123, column: 21, scope: !5218, inlinedAt: !5224)
!5224 = !DILocation(line: 73, column: 9, scope: !5225, inlinedAt: !5228)
!5225 = distinct !DISubprogram(name: "dangling<alloc::string::String>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17he0d9db8b15075bf4E", scope: !274, file: !593, line: 72, type: !5226, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !19)
!5226 = !DISubroutineType(types: !5227)
!5227 = !{!274}
!5228 = !DILocation(line: 123, column: 21, scope: !5211)
!5229 = !DILocation(line: 123, column: 21, scope: !5230, inlinedAt: !5232)
!5230 = !DILexicalBlockFile(scope: !5231, file: !384, discriminator: 0)
!5231 = distinct !DISubprogram(name: "align_of<alloc::string::String>", linkageName: "_ZN4core3mem8align_of17ha0b5ffdd0f69c51dE", scope: !52, file: !1438, line: 464, type: !1439, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !19)
!5232 = !DILocation(line: 95, column: 52, scope: !5233, inlinedAt: !5240)
!5233 = distinct !DISubprogram(name: "dangling<alloc::string::String>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17h9a65ee3ae83bcc74E", scope: !278, file: !582, line: 90, type: !5234, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !5236)
!5234 = !DISubroutineType(types: !5235)
!5235 = !{!278}
!5236 = !{!5237}
!5237 = !DILocalVariable(name: "ptr", scope: !5238, file: !384, line: 123, type: !359, align: 8)
!5238 = !DILexicalBlockFile(scope: !5239, file: !384, discriminator: 0)
!5239 = distinct !DILexicalBlock(scope: !5233, file: !582, line: 95, column: 13)
!5240 = !DILocation(line: 73, column: 20, scope: !5225, inlinedAt: !5228)
!5241 = !DILocalVariable(name: "addr", scope: !5242, file: !384, line: 123, type: !9, align: 8)
!5242 = !DILexicalBlockFile(scope: !5243, file: !384, discriminator: 0)
!5243 = distinct !DISubprogram(name: "invalid_mut<alloc::string::String>", linkageName: "_ZN4core3ptr11invalid_mut17hbc88cc455eed4313E", scope: !202, file: !231, line: 569, type: !5244, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !5246)
!5244 = !DISubroutineType(types: !5245)
!5245 = !{!359, !9}
!5246 = !{!5241}
!5247 = !DILocation(line: 123, column: 21, scope: !5242, inlinedAt: !5248)
!5248 = !DILocation(line: 95, column: 23, scope: !5233, inlinedAt: !5240)
!5249 = !DILocation(line: 123, column: 21, scope: !5238, inlinedAt: !5240)
!5250 = !DILocalVariable(name: "ptr", scope: !5251, file: !384, line: 123, type: !359, align: 8)
!5251 = !DILexicalBlockFile(scope: !5252, file: !384, discriminator: 0)
!5252 = distinct !DISubprogram(name: "new_unchecked<alloc::string::String>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h07043c3523989784E", scope: !278, file: !582, line: 196, type: !4144, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !5253)
!5253 = !{!5250}
!5254 = !DILocation(line: 123, column: 21, scope: !5251, inlinedAt: !5255)
!5255 = !DILocation(line: 96, column: 13, scope: !5239, inlinedAt: !5240)
!5256 = !DILocation(line: 123, column: 9, scope: !5211)
!5257 = !DILocation(line: 124, column: 6, scope: !5211)
!5258 = !DILocation(line: 124, column: 5, scope: !5211)
!5259 = !DILocation(line: 121, column: 5, scope: !5211)
!5260 = distinct !DISubprogram(name: "reserve<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hb30ec92957c0cdd1E", scope: !271, file: !384, line: 274, type: !5261, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !5263)
!5261 = !DISubroutineType(types: !5262)
!5262 = !{null, !4549, !9, !9}
!5263 = !{!5264, !5265, !5266}
!5264 = !DILocalVariable(name: "self", arg: 1, scope: !5260, file: !384, line: 274, type: !4549)
!5265 = !DILocalVariable(name: "len", arg: 2, scope: !5260, file: !384, line: 274, type: !9)
!5266 = !DILocalVariable(name: "additional", arg: 3, scope: !5260, file: !384, line: 274, type: !9)
!5267 = !DILocation(line: 274, column: 20, scope: !5260)
!5268 = !DILocation(line: 274, column: 31, scope: !5260)
!5269 = !DILocation(line: 274, column: 43, scope: !5260)
!5270 = !DILocation(line: 288, column: 12, scope: !5260)
!5271 = !DILocation(line: 291, column: 6, scope: !5260)
!5272 = !DILocation(line: 289, column: 13, scope: !5260)
!5273 = !DILocation(line: 288, column: 9, scope: !5260)
!5274 = distinct !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hcd8ff809399e9831E", scope: !290, file: !384, line: 274, type: !5275, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !5277)
!5275 = !DISubroutineType(types: !5276)
!5276 = !{null, !4738, !9, !9}
!5277 = !{!5278, !5279, !5280}
!5278 = !DILocalVariable(name: "self", arg: 1, scope: !5274, file: !384, line: 274, type: !4738)
!5279 = !DILocalVariable(name: "len", arg: 2, scope: !5274, file: !384, line: 274, type: !9)
!5280 = !DILocalVariable(name: "additional", arg: 3, scope: !5274, file: !384, line: 274, type: !9)
!5281 = !DILocation(line: 274, column: 20, scope: !5274)
!5282 = !DILocation(line: 274, column: 31, scope: !5274)
!5283 = !DILocation(line: 274, column: 43, scope: !5274)
!5284 = !DILocation(line: 288, column: 12, scope: !5274)
!5285 = !DILocation(line: 291, column: 6, scope: !5274)
!5286 = !DILocation(line: 289, column: 13, scope: !5274)
!5287 = !DILocation(line: 288, column: 9, scope: !5274)
!5288 = distinct !DISubprogram(name: "reserve<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hce75b963db962c72E", scope: !458, file: !384, line: 274, type: !5289, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !5291)
!5289 = !DISubroutineType(types: !5290)
!5290 = !{null, !4873, !9, !9}
!5291 = !{!5292, !5293, !5294}
!5292 = !DILocalVariable(name: "self", arg: 1, scope: !5288, file: !384, line: 274, type: !4873)
!5293 = !DILocalVariable(name: "len", arg: 2, scope: !5288, file: !384, line: 274, type: !9)
!5294 = !DILocalVariable(name: "additional", arg: 3, scope: !5288, file: !384, line: 274, type: !9)
!5295 = !DILocation(line: 274, column: 20, scope: !5288)
!5296 = !DILocation(line: 274, column: 31, scope: !5288)
!5297 = !DILocation(line: 274, column: 43, scope: !5288)
!5298 = !DILocation(line: 288, column: 12, scope: !5288)
!5299 = !DILocation(line: 291, column: 6, scope: !5288)
!5300 = !DILocation(line: 289, column: 13, scope: !5288)
!5301 = !DILocation(line: 288, column: 9, scope: !5288)
!5302 = distinct !DISubprogram(name: "do_reserve_and_handle<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h213d6a59b0aaaeb0E", scope: !5303, file: !384, line: 280, type: !5275, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !5305)
!5303 = !DINamespace(name: "reserve", scope: !5304)
!5304 = !DINamespace(name: "{impl#1}", scope: !144)
!5305 = !{!5306, !5307, !5308}
!5306 = !DILocalVariable(name: "slf", arg: 1, scope: !5302, file: !384, line: 281, type: !4738)
!5307 = !DILocalVariable(name: "len", arg: 2, scope: !5302, file: !384, line: 282, type: !9)
!5308 = !DILocalVariable(name: "additional", arg: 3, scope: !5302, file: !384, line: 283, type: !9)
!5309 = !DILocation(line: 281, column: 13, scope: !5302)
!5310 = !DILocation(line: 282, column: 13, scope: !5302)
!5311 = !DILocation(line: 283, column: 13, scope: !5302)
!5312 = !DILocation(line: 285, column: 28, scope: !5302)
!5313 = !DILocation(line: 285, column: 13, scope: !5302)
!5314 = !DILocation(line: 286, column: 10, scope: !5302)
!5315 = distinct !DISubprogram(name: "do_reserve_and_handle<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h9944ef45732f9fb5E", scope: !5303, file: !384, line: 280, type: !5289, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !5316)
!5316 = !{!5317, !5318, !5319}
!5317 = !DILocalVariable(name: "slf", arg: 1, scope: !5315, file: !384, line: 281, type: !4873)
!5318 = !DILocalVariable(name: "len", arg: 2, scope: !5315, file: !384, line: 282, type: !9)
!5319 = !DILocalVariable(name: "additional", arg: 3, scope: !5315, file: !384, line: 283, type: !9)
!5320 = !DILocation(line: 281, column: 13, scope: !5315)
!5321 = !DILocation(line: 282, column: 13, scope: !5315)
!5322 = !DILocation(line: 283, column: 13, scope: !5315)
!5323 = !DILocation(line: 285, column: 28, scope: !5315)
!5324 = !DILocation(line: 285, column: 13, scope: !5315)
!5325 = !DILocation(line: 286, column: 10, scope: !5315)
!5326 = distinct !DISubprogram(name: "do_reserve_and_handle<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hdabeb82f97321281E", scope: !5303, file: !384, line: 280, type: !5261, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !5327)
!5327 = !{!5328, !5329, !5330}
!5328 = !DILocalVariable(name: "slf", arg: 1, scope: !5326, file: !384, line: 281, type: !4549)
!5329 = !DILocalVariable(name: "len", arg: 2, scope: !5326, file: !384, line: 282, type: !9)
!5330 = !DILocalVariable(name: "additional", arg: 3, scope: !5326, file: !384, line: 283, type: !9)
!5331 = !DILocation(line: 281, column: 13, scope: !5326)
!5332 = !DILocation(line: 282, column: 13, scope: !5326)
!5333 = !DILocation(line: 283, column: 13, scope: !5326)
!5334 = !DILocation(line: 285, column: 28, scope: !5326)
!5335 = !DILocation(line: 285, column: 13, scope: !5326)
!5336 = !DILocation(line: 286, column: 10, scope: !5326)
!5337 = distinct !DISubprogram(name: "into_iter<core::slice::iter::Iter<u8>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h3255d46da8ee5f13E", scope: !5339, file: !5338, line: 271, type: !5341, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !5345, retainedNodes: !5343)
!5338 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "73b4070628f6fcec74cccccb11afa9ef")
!5339 = !DINamespace(name: "{impl#0}", scope: !5340)
!5340 = !DINamespace(name: "collect", scope: !1200)
!5341 = !DISubroutineType(types: !5342)
!5342 = !{!324, !324}
!5343 = !{!5344}
!5344 = !DILocalVariable(name: "self", arg: 1, scope: !5337, file: !5338, line: 271, type: !324)
!5345 = !{!5346}
!5346 = !DITemplateTypeParameter(name: "I", type: !324)
!5347 = !DILocation(line: 271, column: 18, scope: !5337)
!5348 = !DILocation(line: 273, column: 6, scope: !5337)
!5349 = distinct !DISubprogram(name: "into_iter<&mut shlex::Shlex>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4b899a1828012f61E", scope: !5339, file: !5338, line: 271, type: !1211, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !5352, retainedNodes: !5350)
!5350 = !{!5351}
!5351 = !DILocalVariable(name: "self", arg: 1, scope: !5349, file: !5338, line: 271, type: !317)
!5352 = !{!349}
!5353 = !DILocation(line: 271, column: 18, scope: !5349)
!5354 = !DILocation(line: 273, column: 6, scope: !5349)
!5355 = distinct !DISubprogram(name: "into_iter<&mut shlex::bytes::Shlex>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hffd5f359feb96646E", scope: !5339, file: !5338, line: 271, type: !1202, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !5358, retainedNodes: !5356)
!5356 = !{!5357}
!5357 = !DILocalVariable(name: "self", arg: 1, scope: !5355, file: !5338, line: 271, type: !476)
!5358 = !{!490}
!5359 = !DILocation(line: 271, column: 18, scope: !5355)
!5360 = !DILocation(line: 273, column: 6, scope: !5355)
!5361 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h10f1cbbb1fbc68f3E", scope: !5362, file: !2954, line: 246, type: !5363, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !5365)
!5362 = !DINamespace(name: "{impl#1}", scope: !305)
!5363 = !DISubroutineType(types: !5364)
!5364 = !{null, !2957, !296, !633}
!5365 = !{!5366, !5367, !5368}
!5366 = !DILocalVariable(name: "self", arg: 1, scope: !5361, file: !2954, line: 246, type: !2957)
!5367 = !DILocalVariable(name: "ptr", arg: 2, scope: !5361, file: !2954, line: 246, type: !296)
!5368 = !DILocalVariable(name: "layout", arg: 3, scope: !5361, file: !2954, line: 246, type: !633)
!5369 = !DILocation(line: 246, column: 26, scope: !5361)
!5370 = !DILocation(line: 246, column: 33, scope: !5361)
!5371 = !DILocation(line: 246, column: 51, scope: !5361)
!5372 = !DILocalVariable(name: "layout", scope: !5373, file: !2954, line: 250, type: !633, align: 8)
!5373 = distinct !DISubprogram(name: "dealloc", linkageName: "_ZN5alloc5alloc7dealloc17h9e1d997274d515d7E", scope: !305, file: !2954, line: 112, type: !5374, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !5376)
!5374 = !DISubroutineType(types: !5375)
!5375 = !{null, !596, !633}
!5376 = !{!5377, !5372}
!5377 = !DILocalVariable(name: "ptr", scope: !5373, file: !2954, line: 250, type: !596, align: 8)
!5378 = !DILocation(line: 250, column: 22, scope: !5373, inlinedAt: !5379)
!5379 = !DILocation(line: 250, column: 22, scope: !5361)
!5380 = !DILocalVariable(name: "self", scope: !5381, file: !2954, line: 250, type: !1291, align: 8)
!5381 = !DILexicalBlockFile(scope: !5382, file: !2954, discriminator: 0)
!5382 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h80c50717bd3ed3c3E", scope: !1291, file: !1290, line: 82, type: !1295, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !5383)
!5383 = !{!5380}
!5384 = !DILocation(line: 250, column: 22, scope: !5381, inlinedAt: !5385)
!5385 = !DILocation(line: 131, column: 9, scope: !5386, inlinedAt: !5390)
!5386 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h70611acb1b9cd6d8E", scope: !633, file: !1262, line: 130, type: !3086, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !5387)
!5387 = !{!5388}
!5388 = !DILocalVariable(name: "self", scope: !5389, file: !2954, line: 250, type: !2150, align: 8)
!5389 = !DILexicalBlockFile(scope: !5386, file: !2954, discriminator: 0)
!5390 = !DILocation(line: 113, column: 49, scope: !5373, inlinedAt: !5379)
!5391 = !DILocalVariable(name: "self", scope: !5392, file: !2954, line: 250, type: !639, align: 8)
!5392 = !DILexicalBlockFile(scope: !5393, file: !2954, discriminator: 0)
!5393 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17hcb3f9b7ba4faab99E", scope: !639, file: !1303, line: 39, type: !1304, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !5394)
!5394 = !{!5391}
!5395 = !DILocation(line: 250, column: 22, scope: !5392, inlinedAt: !5385)
!5396 = !DILocation(line: 247, column: 12, scope: !5361)
!5397 = !DILocalVariable(name: "self", scope: !5398, file: !2954, line: 247, type: !2150, align: 8)
!5398 = !DILexicalBlockFile(scope: !5399, file: !2954, discriminator: 0)
!5399 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h9bed3e949fe567faE", scope: !633, file: !1262, line: 120, type: !3086, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !5400)
!5400 = !{!5397}
!5401 = !DILocation(line: 247, column: 12, scope: !5398, inlinedAt: !5396)
!5402 = !DILocation(line: 247, column: 9, scope: !5361)
!5403 = !DILocation(line: 250, column: 30, scope: !5361)
!5404 = !DILocalVariable(name: "self", scope: !5405, file: !2954, line: 250, type: !296, align: 8)
!5405 = !DILexicalBlockFile(scope: !5406, file: !2954, discriminator: 0)
!5406 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9a87f4e9cb3e4acdE", scope: !296, file: !582, line: 330, type: !601, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5407)
!5407 = !{!5404}
!5408 = !DILocation(line: 250, column: 30, scope: !5405, inlinedAt: !5403)
!5409 = !DILocation(line: 250, column: 44, scope: !5361)
!5410 = !DILocalVariable(name: "self", scope: !5411, file: !2954, line: 250, type: !2150, align: 8)
!5411 = !DILexicalBlockFile(scope: !5412, file: !2954, discriminator: 0)
!5412 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h9bed3e949fe567faE", scope: !633, file: !1262, line: 120, type: !3086, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !5413)
!5413 = !{!5410}
!5414 = !DILocation(line: 250, column: 22, scope: !5411, inlinedAt: !5415)
!5415 = !DILocation(line: 113, column: 34, scope: !5373, inlinedAt: !5379)
!5416 = !DILocation(line: 250, column: 22, scope: !5389, inlinedAt: !5390)
!5417 = !DILocalVariable(name: "n", scope: !5418, file: !2954, line: 250, type: !9, align: 8)
!5418 = !DILexicalBlockFile(scope: !5419, file: !2954, discriminator: 0)
!5419 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h9ea4e200ee3011edE", scope: !1291, file: !1290, line: 56, type: !1312, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !5420)
!5420 = !{!5417, !5421}
!5421 = !DILocalVariable(name: "runtime", scope: !5422, file: !2954, line: 250, type: !1318, align: 8)
!5422 = !DILexicalBlockFile(scope: !5423, file: !2954, discriminator: 0)
!5423 = distinct !DILexicalBlock(scope: !5419, file: !181, line: 2336, column: 13)
!5424 = !DILocation(line: 250, column: 22, scope: !5418, inlinedAt: !5425)
!5425 = !DILocation(line: 41, column: 18, scope: !5393, inlinedAt: !5385)
!5426 = !DILocation(line: 252, column: 6, scope: !5361)
!5427 = distinct !DISubprogram(name: "allocate_zeroed", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h7576dccf7966c983E", scope: !5362, file: !2954, line: 241, type: !5428, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !5430)
!5428 = !DISubroutineType(types: !5429)
!5429 = !{!2109, !2957, !633}
!5430 = !{!5431, !5432}
!5431 = !DILocalVariable(name: "self", arg: 1, scope: !5427, file: !2954, line: 241, type: !2957)
!5432 = !DILocalVariable(name: "layout", arg: 2, scope: !5427, file: !2954, line: 241, type: !633)
!5433 = !DILocation(line: 241, column: 24, scope: !5427)
!5434 = !DILocation(line: 241, column: 31, scope: !5427)
!5435 = !DILocation(line: 242, column: 9, scope: !5427)
!5436 = !DILocation(line: 243, column: 6, scope: !5427)
!5437 = distinct !DISubprogram(name: "grow", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17hd07a347df9bed584E", scope: !5362, file: !2954, line: 255, type: !5438, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !5440)
!5438 = !DISubroutineType(types: !5439)
!5439 = !{!2109, !2957, !296, !633, !633}
!5440 = !{!5441, !5442, !5443, !5444}
!5441 = !DILocalVariable(name: "self", arg: 1, scope: !5437, file: !2954, line: 256, type: !2957)
!5442 = !DILocalVariable(name: "ptr", arg: 2, scope: !5437, file: !2954, line: 257, type: !296)
!5443 = !DILocalVariable(name: "old_layout", arg: 3, scope: !5437, file: !2954, line: 258, type: !633)
!5444 = !DILocalVariable(name: "new_layout", arg: 4, scope: !5437, file: !2954, line: 259, type: !633)
!5445 = !DILocation(line: 256, column: 9, scope: !5437)
!5446 = !DILocation(line: 257, column: 9, scope: !5437)
!5447 = !DILocation(line: 258, column: 9, scope: !5437)
!5448 = !DILocation(line: 259, column: 9, scope: !5437)
!5449 = !DILocation(line: 262, column: 18, scope: !5437)
!5450 = !DILocation(line: 263, column: 6, scope: !5437)
!5451 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hadeb8784519b0211E", scope: !5362, file: !2954, line: 236, type: !5428, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !5452)
!5452 = !{!5453, !5454}
!5453 = !DILocalVariable(name: "self", arg: 1, scope: !5451, file: !2954, line: 236, type: !2957)
!5454 = !DILocalVariable(name: "layout", arg: 2, scope: !5451, file: !2954, line: 236, type: !633)
!5455 = !DILocation(line: 236, column: 17, scope: !5451)
!5456 = !DILocation(line: 236, column: 24, scope: !5451)
!5457 = !DILocation(line: 237, column: 9, scope: !5451)
!5458 = !DILocation(line: 238, column: 6, scope: !5451)
!5459 = distinct !DISubprogram(name: "drop<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7a7d7ae2f5ea9ac8E", scope: !5460, file: !367, line: 2915, type: !5461, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !5463)
!5460 = !DINamespace(name: "{impl#28}", scope: !265)
!5461 = !DISubroutineType(types: !5462)
!5462 = !{null, !441}
!5463 = !{!5464}
!5464 = !DILocalVariable(name: "self", arg: 1, scope: !5459, file: !367, line: 2915, type: !441)
!5465 = !DILocation(line: 2915, column: 13, scope: !5459)
!5466 = !DILocation(line: 2920, column: 62, scope: !5459)
!5467 = !DILocalVariable(name: "data", scope: !5468, file: !367, line: 2920, type: !359, align: 8)
!5468 = !DILexicalBlockFile(scope: !5469, file: !367, discriminator: 0)
!5469 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<alloc::string::String>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h8a29abd4f55e9391E", scope: !202, file: !231, line: 727, type: !5470, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !5472)
!5470 = !DISubroutineType(types: !5471)
!5471 = !{!1008, !359, !9}
!5472 = !{!5467, !5473}
!5473 = !DILocalVariable(name: "len", scope: !5468, file: !367, line: 2920, type: !9, align: 8)
!5474 = !DILocation(line: 2920, column: 32, scope: !5468, inlinedAt: !5475)
!5475 = !DILocation(line: 2920, column: 32, scope: !5459)
!5476 = !DILocation(line: 2920, column: 81, scope: !5459)
!5477 = !DILocalVariable(name: "self", scope: !5478, file: !367, line: 2920, type: !359, align: 8)
!5478 = !DILexicalBlockFile(scope: !5479, file: !367, discriminator: 0)
!5479 = distinct !DISubprogram(name: "cast<alloc::string::String, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h75bf07856a687bd6E", scope: !1147, file: !1146, line: 45, type: !5480, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !5483, retainedNodes: !5482)
!5480 = !DISubroutineType(types: !5481)
!5481 = !{!1136, !359}
!5482 = !{!5477}
!5483 = !{!310, !246}
!5484 = !DILocation(line: 2920, column: 32, scope: !5478, inlinedAt: !5485)
!5485 = !DILocation(line: 728, column: 24, scope: !5469, inlinedAt: !5475)
!5486 = !DILocalVariable(name: "data_address", scope: !5487, file: !367, line: 2920, type: !1136, align: 8)
!5487 = !DILexicalBlockFile(scope: !5488, file: !367, discriminator: 0)
!5488 = distinct !DISubprogram(name: "from_raw_parts_mut<[alloc::string::String]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hbdc7e7318606cd28E", scope: !253, file: !252, line: 127, type: !5489, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !309, retainedNodes: !5491)
!5489 = !DISubroutineType(types: !5490)
!5490 = !{!1008, !1136, !9}
!5491 = !{!5486, !5492}
!5492 = !DILocalVariable(name: "metadata", scope: !5487, file: !367, line: 2920, type: !9, align: 8)
!5493 = !DILocation(line: 2920, column: 32, scope: !5487, inlinedAt: !5494)
!5494 = !DILocation(line: 728, column: 5, scope: !5469, inlinedAt: !5475)
!5495 = !DILocation(line: 2920, column: 13, scope: !5459)
!5496 = !DILocation(line: 2923, column: 6, scope: !5459)
!5497 = distinct !DISubprogram(name: "drop<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc7415b397fcc6441E", scope: !5460, file: !367, line: 2915, type: !5498, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !5500)
!5498 = !DISubroutineType(types: !5499)
!5499 = !{null, !571}
!5500 = !{!5501}
!5501 = !DILocalVariable(name: "self", arg: 1, scope: !5497, file: !367, line: 2915, type: !571)
!5502 = !DILocation(line: 2915, column: 13, scope: !5497)
!5503 = !DILocation(line: 2920, column: 62, scope: !5497)
!5504 = !DILocalVariable(name: "data", scope: !5505, file: !367, line: 2920, type: !500, align: 8)
!5505 = !DILexicalBlockFile(scope: !5506, file: !367, discriminator: 0)
!5506 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h653db2b0f3e2535aE", scope: !202, file: !231, line: 727, type: !5507, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !5509)
!5507 = !DISubroutineType(types: !5508)
!5508 = !{!1028, !500, !9}
!5509 = !{!5504, !5510}
!5510 = !DILocalVariable(name: "len", scope: !5505, file: !367, line: 2920, type: !9, align: 8)
!5511 = !DILocation(line: 2920, column: 32, scope: !5505, inlinedAt: !5512)
!5512 = !DILocation(line: 2920, column: 32, scope: !5497)
!5513 = !DILocation(line: 2920, column: 81, scope: !5497)
!5514 = !DILocalVariable(name: "self", scope: !5515, file: !367, line: 2920, type: !500, align: 8)
!5515 = !DILexicalBlockFile(scope: !5516, file: !367, discriminator: 0)
!5516 = distinct !DISubprogram(name: "cast<alloc::vec::Vec<u8, alloc::alloc::Global>, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h729d69028809d239E", scope: !1147, file: !1146, line: 45, type: !5517, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !5520, retainedNodes: !5519)
!5517 = !DISubroutineType(types: !5518)
!5518 = !{!1136, !500}
!5519 = !{!5514}
!5520 = !{!469, !246}
!5521 = !DILocation(line: 2920, column: 32, scope: !5515, inlinedAt: !5522)
!5522 = !DILocation(line: 728, column: 24, scope: !5506, inlinedAt: !5512)
!5523 = !DILocalVariable(name: "data_address", scope: !5524, file: !367, line: 2920, type: !1136, align: 8)
!5524 = !DILexicalBlockFile(scope: !5525, file: !367, discriminator: 0)
!5525 = distinct !DISubprogram(name: "from_raw_parts_mut<[alloc::vec::Vec<u8, alloc::alloc::Global>]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hbd4a122df562c622E", scope: !253, file: !252, line: 127, type: !5526, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !468, retainedNodes: !5528)
!5526 = !DISubroutineType(types: !5527)
!5527 = !{!1028, !1136, !9}
!5528 = !{!5523, !5529}
!5529 = !DILocalVariable(name: "metadata", scope: !5524, file: !367, line: 2920, type: !9, align: 8)
!5530 = !DILocation(line: 2920, column: 32, scope: !5524, inlinedAt: !5531)
!5531 = !DILocation(line: 728, column: 5, scope: !5506, inlinedAt: !5512)
!5532 = !DILocation(line: 2920, column: 13, scope: !5497)
!5533 = !DILocation(line: 2923, column: 6, scope: !5497)
!5534 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc7f5fc59ecf6d01fE", scope: !5460, file: !367, line: 2915, type: !5535, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !5537)
!5535 = !DISubroutineType(types: !5536)
!5536 = !{null, !656}
!5537 = !{!5538}
!5538 = !DILocalVariable(name: "self", arg: 1, scope: !5534, file: !367, line: 2915, type: !656)
!5539 = !DILocation(line: 2915, column: 13, scope: !5534)
!5540 = !DILocation(line: 2920, column: 62, scope: !5534)
!5541 = !DILocalVariable(name: "data", scope: !5542, file: !367, line: 2920, type: !596, align: 8)
!5542 = !DILexicalBlockFile(scope: !5543, file: !367, discriminator: 0)
!5543 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h82575882ad160146E", scope: !202, file: !231, line: 727, type: !3231, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5544)
!5544 = !{!5541, !5545}
!5545 = !DILocalVariable(name: "len", scope: !5542, file: !367, line: 2920, type: !9, align: 8)
!5546 = !DILocation(line: 2920, column: 32, scope: !5542, inlinedAt: !5547)
!5547 = !DILocation(line: 2920, column: 32, scope: !5534)
!5548 = !DILocation(line: 2920, column: 81, scope: !5534)
!5549 = !DILocalVariable(name: "self", scope: !5550, file: !367, line: 2920, type: !596, align: 8)
!5550 = !DILexicalBlockFile(scope: !5551, file: !367, discriminator: 0)
!5551 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h956ec4b8830b0e64E", scope: !1147, file: !1146, line: 45, type: !3244, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !245, retainedNodes: !5552)
!5552 = !{!5549}
!5553 = !DILocation(line: 2920, column: 32, scope: !5550, inlinedAt: !5554)
!5554 = !DILocation(line: 728, column: 24, scope: !5543, inlinedAt: !5547)
!5555 = !DILocalVariable(name: "data_address", scope: !5556, file: !367, line: 2920, type: !1136, align: 8)
!5556 = !DILexicalBlockFile(scope: !5557, file: !367, discriminator: 0)
!5557 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hada98796b0bf4d19E", scope: !253, file: !252, line: 127, type: !3252, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5558)
!5558 = !{!5555, !5559}
!5559 = !DILocalVariable(name: "metadata", scope: !5556, file: !367, line: 2920, type: !9, align: 8)
!5560 = !DILocation(line: 2920, column: 32, scope: !5556, inlinedAt: !5561)
!5561 = !DILocation(line: 728, column: 5, scope: !5543, inlinedAt: !5547)
!5562 = !DILocation(line: 2920, column: 13, scope: !5534)
!5563 = !DILocation(line: 2923, column: 6, scope: !5534)
!5564 = distinct !DISubprogram(name: "eq<u8>", linkageName: "_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h8ef90b888a549fe8E", scope: !5565, file: !1406, line: 515, type: !5566, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5569)
!5565 = !DINamespace(name: "{impl#42}", scope: !783)
!5566 = !DISubroutineType(types: !5567)
!5567 = !{!29, !5568, !5568}
!5568 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<u8>", baseType: !2015, size: 64, align: 64, dwarfAddressSpace: 0)
!5569 = !{!5570, !5571, !5572, !5574, !5576, !5578}
!5570 = !DILocalVariable(name: "self", arg: 1, scope: !5564, file: !1406, line: 515, type: !5568)
!5571 = !DILocalVariable(name: "other", arg: 2, scope: !5564, file: !1406, line: 515, type: !5568)
!5572 = !DILocalVariable(name: "__self_tag", scope: !5573, file: !1406, line: 515, type: !223, align: 8)
!5573 = distinct !DILexicalBlock(scope: !5564, file: !1406, line: 515, column: 16)
!5574 = !DILocalVariable(name: "__arg1_tag", scope: !5575, file: !1406, line: 515, type: !223, align: 8)
!5575 = distinct !DILexicalBlock(scope: !5573, file: !1406, line: 515, column: 16)
!5576 = !DILocalVariable(name: "__self_0", scope: !5577, file: !1406, line: 526, type: !333, align: 8)
!5577 = distinct !DILexicalBlock(scope: !5575, file: !1406, line: 515, column: 16)
!5578 = !DILocalVariable(name: "__arg1_0", scope: !5577, file: !1406, line: 526, type: !333, align: 8)
!5579 = !DILocation(line: 515, column: 16, scope: !5564)
!5580 = !DILocation(line: 515, column: 16, scope: !5573)
!5581 = !DILocation(line: 515, column: 16, scope: !5575)
!5582 = !DILocation(line: 526, column: 56, scope: !5575)
!5583 = !DILocation(line: 526, column: 56, scope: !5577)
!5584 = !DILocation(line: 515, column: 24, scope: !5575)
!5585 = !DILocation(line: 515, column: 25, scope: !5564)
!5586 = distinct !DISubprogram(name: "next<shlex::bytes::Shlex>", linkageName: "_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h795a6a2b04c995d4E", scope: !5587, file: !1197, line: 3824, type: !5588, scopeLine: 3824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !5593, retainedNodes: !5591)
!5587 = !DINamespace(name: "{impl#0}", scope: !1199)
!5588 = !DISubroutineType(types: !5589)
!5589 = !{!1087, !5590}
!5590 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut &mut shlex::bytes::Shlex", baseType: !476, size: 64, align: 64, dwarfAddressSpace: 0)
!5591 = !{!5592}
!5592 = !DILocalVariable(name: "self", arg: 1, scope: !5586, file: !1197, line: 3824, type: !5590)
!5593 = !{!5594}
!5594 = !DITemplateTypeParameter(name: "I", type: !321)
!5595 = !DILocation(line: 3824, column: 13, scope: !5586)
!5596 = !DILocation(line: 3825, column: 9, scope: !5586)
!5597 = !DILocation(line: 3826, column: 6, scope: !5586)
!5598 = distinct !DISubprogram(name: "next<shlex::Shlex>", linkageName: "_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9b785dd58a3365a0E", scope: !5587, file: !1197, line: 3824, type: !5599, scopeLine: 3824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !5604, retainedNodes: !5602)
!5599 = !DISubroutineType(types: !5600)
!5600 = !{!1058, !5601}
!5601 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut &mut shlex::Shlex", baseType: !317, size: 64, align: 64, dwarfAddressSpace: 0)
!5602 = !{!5603}
!5603 = !DILocalVariable(name: "self", arg: 1, scope: !5598, file: !1197, line: 3824, type: !5601)
!5604 = !{!5605}
!5605 = !DITemplateTypeParameter(name: "I", type: !318)
!5606 = !DILocation(line: 3824, column: 13, scope: !5598)
!5607 = !DILocation(line: 3825, column: 9, scope: !5598)
!5608 = !DILocation(line: 3826, column: 6, scope: !5598)
!5609 = distinct !DISubprogram(name: "size_hint<shlex::Shlex>", linkageName: "_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h29385024be338a39E", scope: !5587, file: !1197, line: 3827, type: !5610, scopeLine: 3827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !5604, retainedNodes: !5613)
!5610 = !DISubroutineType(types: !5611)
!5611 = !{!1240, !5612}
!5612 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&mut shlex::Shlex", baseType: !317, size: 64, align: 64, dwarfAddressSpace: 0)
!5613 = !{!5614}
!5614 = !DILocalVariable(name: "self", arg: 1, scope: !5609, file: !1197, line: 3827, type: !5612)
!5615 = !DILocation(line: 3827, column: 18, scope: !5609)
!5616 = !DILocation(line: 3828, column: 9, scope: !5609)
!5617 = !DILocation(line: 3829, column: 6, scope: !5609)
!5618 = distinct !DISubprogram(name: "size_hint<shlex::bytes::Shlex>", linkageName: "_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17ha9dd4646d3c6cae6E", scope: !5587, file: !1197, line: 3827, type: !5619, scopeLine: 3827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !5593, retainedNodes: !5622)
!5619 = !DISubroutineType(types: !5620)
!5620 = !{!1240, !5621}
!5621 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&mut shlex::bytes::Shlex", baseType: !476, size: 64, align: 64, dwarfAddressSpace: 0)
!5622 = !{!5623}
!5623 = !DILocalVariable(name: "self", arg: 1, scope: !5618, file: !1197, line: 3827, type: !5621)
!5624 = !DILocation(line: 3827, column: 18, scope: !5618)
!5625 = !DILocation(line: 3828, column: 9, scope: !5618)
!5626 = !DILocation(line: 3829, column: 6, scope: !5618)
!5627 = distinct !DISubprogram(name: "drop<alloc::string::String, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h358a7a200ca8ad64E", scope: !5628, file: !384, line: 477, type: !5629, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !315, retainedNodes: !5631)
!5628 = !DINamespace(name: "{impl#3}", scope: !144)
!5629 = !DISubroutineType(types: !5630)
!5630 = !{null, !4549}
!5631 = !{!5632, !5633, !5635}
!5632 = !DILocalVariable(name: "self", arg: 1, scope: !5627, file: !384, line: 477, type: !4549)
!5633 = !DILocalVariable(name: "ptr", scope: !5634, file: !384, line: 478, type: !296, align: 8)
!5634 = distinct !DILexicalBlock(scope: !5627, file: !384, line: 478, column: 60)
!5635 = !DILocalVariable(name: "layout", scope: !5634, file: !384, line: 478, type: !633, align: 8)
!5636 = !DILocation(line: 477, column: 13, scope: !5627)
!5637 = !DILocation(line: 478, column: 38, scope: !5634)
!5638 = !DILocation(line: 478, column: 16, scope: !5634)
!5639 = !DILocation(line: 478, column: 22, scope: !5634)
!5640 = !DILocation(line: 478, column: 27, scope: !5634)
!5641 = !DILocation(line: 479, column: 22, scope: !5634)
!5642 = !DILocation(line: 481, column: 6, scope: !5627)
!5643 = !DILocation(line: 478, column: 9, scope: !5627)
!5644 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6b624f5a037c2fdaE", scope: !5628, file: !384, line: 477, type: !5645, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !306, retainedNodes: !5647)
!5645 = !DISubroutineType(types: !5646)
!5646 = !{null, !4738}
!5647 = !{!5648, !5649, !5651}
!5648 = !DILocalVariable(name: "self", arg: 1, scope: !5644, file: !384, line: 477, type: !4738)
!5649 = !DILocalVariable(name: "ptr", scope: !5650, file: !384, line: 478, type: !296, align: 8)
!5650 = distinct !DILexicalBlock(scope: !5644, file: !384, line: 478, column: 60)
!5651 = !DILocalVariable(name: "layout", scope: !5650, file: !384, line: 478, type: !633, align: 8)
!5652 = !DILocation(line: 477, column: 13, scope: !5644)
!5653 = !DILocation(line: 478, column: 38, scope: !5650)
!5654 = !DILocation(line: 478, column: 16, scope: !5650)
!5655 = !DILocation(line: 478, column: 22, scope: !5650)
!5656 = !DILocation(line: 478, column: 27, scope: !5650)
!5657 = !DILocation(line: 479, column: 22, scope: !5650)
!5658 = !DILocation(line: 481, column: 6, scope: !5644)
!5659 = !DILocation(line: 478, column: 9, scope: !5644)
!5660 = distinct !DISubprogram(name: "drop<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9c8e6b8471c842a4E", scope: !5628, file: !384, line: 477, type: !5661, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !474, retainedNodes: !5663)
!5661 = !DISubroutineType(types: !5662)
!5662 = !{null, !4873}
!5663 = !{!5664, !5665, !5667}
!5664 = !DILocalVariable(name: "self", arg: 1, scope: !5660, file: !384, line: 477, type: !4873)
!5665 = !DILocalVariable(name: "ptr", scope: !5666, file: !384, line: 478, type: !296, align: 8)
!5666 = distinct !DILexicalBlock(scope: !5660, file: !384, line: 478, column: 60)
!5667 = !DILocalVariable(name: "layout", scope: !5666, file: !384, line: 478, type: !633, align: 8)
!5668 = !DILocation(line: 477, column: 13, scope: !5660)
!5669 = !DILocation(line: 478, column: 38, scope: !5666)
!5670 = !DILocation(line: 478, column: 16, scope: !5666)
!5671 = !DILocation(line: 478, column: 22, scope: !5666)
!5672 = !DILocation(line: 478, column: 27, scope: !5666)
!5673 = !DILocation(line: 479, column: 22, scope: !5666)
!5674 = !DILocation(line: 481, column: 6, scope: !5660)
!5675 = !DILocation(line: 478, column: 9, scope: !5660)
!5676 = distinct !DISubprogram(name: "branch<alloc::borrow::Cow<[u8]>, shlex::QuoteError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf1291636b0c5e5fdE", scope: !1360, file: !673, line: 2117, type: !5677, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !2061, retainedNodes: !5695)
!5677 = !DISubroutineType(types: !5678)
!5678 = !{!5679, !2040}
!5679 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, shlex::QuoteError>, alloc::borrow::Cow<[u8]>>", scope: !1364, file: !2, size: 256, align: 64, elements: !5680, templateParams: !19, identifier: "b152536b9427d78200754d181cb635f")
!5680 = !{!5681}
!5681 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5679, file: !2, size: 256, align: 64, elements: !5682, templateParams: !19, identifier: "114b031be2d05259e9d626eb0a065ecf", discriminator: !5694)
!5682 = !{!5683, !5690}
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !5681, file: !2, baseType: !5684, size: 256, align: 64)
!5684 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !5679, file: !2, size: 256, align: 64, elements: !5685, templateParams: !5687, identifier: "c7c63fceb1f6b7967826cb88e02583c")
!5685 = !{!5686}
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5684, file: !2, baseType: !2048, size: 256, align: 64)
!5687 = !{!5688, !5689}
!5688 = !DITemplateTypeParameter(name: "B", type: !714)
!5689 = !DITemplateTypeParameter(name: "C", type: !2048)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !5681, file: !2, baseType: !5691, size: 256, align: 64, extraData: i64 2)
!5691 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !5679, file: !2, size: 256, align: 64, elements: !5692, templateParams: !5687, identifier: "cd57284ec2fad719493a37457cf5753b")
!5692 = !{!5693}
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5691, file: !2, baseType: !714, align: 8)
!5694 = !DIDerivedType(tag: DW_TAG_member, scope: !5679, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!5695 = !{!5696, !5697, !5699}
!5696 = !DILocalVariable(name: "self", arg: 1, scope: !5676, file: !673, line: 2117, type: !2040)
!5697 = !DILocalVariable(name: "v", scope: !5698, file: !673, line: 2119, type: !2048, align: 8)
!5698 = distinct !DILexicalBlock(scope: !5676, file: !673, line: 2119, column: 13)
!5699 = !DILocalVariable(name: "e", scope: !5700, file: !673, line: 2120, type: !12, align: 1)
!5700 = distinct !DILexicalBlock(scope: !5676, file: !673, line: 2120, column: 13)
!5701 = !DILocation(line: 2117, column: 15, scope: !5676)
!5702 = !DILocation(line: 2119, column: 16, scope: !5698)
!5703 = !DILocation(line: 2120, column: 17, scope: !5700)
!5704 = !DILocation(line: 2118, column: 15, scope: !5676)
!5705 = !DILocation(line: 2118, column: 9, scope: !5676)
!5706 = !DILocation(line: 2119, column: 16, scope: !5676)
!5707 = !DILocation(line: 2119, column: 44, scope: !5698)
!5708 = !DILocation(line: 2119, column: 22, scope: !5698)
!5709 = !DILocation(line: 2119, column: 45, scope: !5676)
!5710 = !DILocation(line: 2120, column: 42, scope: !5700)
!5711 = !DILocation(line: 2120, column: 23, scope: !5700)
!5712 = !DILocation(line: 2120, column: 48, scope: !5676)
!5713 = !DILocation(line: 2122, column: 6, scope: !5676)
!5714 = distinct !DISubprogram(name: "any<u8, shlex::bytes::{impl#2}::quote::{closure_env#0}>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17h353834cac3225960E", scope: !5715, file: !1856, line: 236, type: !5716, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !5727, retainedNodes: !5722)
!5715 = !DINamespace(name: "{impl#181}", scope: !325)
!5716 = !DISubroutineType(types: !5717)
!5717 = !{!29, !5718, !5719}
!5718 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<u8>", baseType: !324, size: 64, align: 64, dwarfAddressSpace: 0)
!5719 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !5720, file: !2, align: 8, elements: !19, identifier: "e91cc85543fd6caed4aabbd03b738f76")
!5720 = !DINamespace(name: "quote", scope: !5721)
!5721 = !DINamespace(name: "{impl#2}", scope: !40)
!5722 = !{!5723, !5724, !5725}
!5723 = !DILocalVariable(name: "self", arg: 1, scope: !5714, file: !1856, line: 236, type: !5718)
!5724 = !DILocalVariable(name: "f", arg: 2, scope: !5714, file: !1856, line: 236, type: !5719)
!5725 = !DILocalVariable(name: "x", scope: !5726, file: !1856, line: 241, type: !333, align: 8)
!5726 = distinct !DILexicalBlock(scope: !5714, file: !1856, line: 241, column: 49)
!5727 = !{!191, !5728}
!5728 = !DITemplateTypeParameter(name: "F", type: !5719)
!5729 = !DILocation(line: 236, column: 23, scope: !5714)
!5730 = !DILocation(line: 236, column: 34, scope: !5714)
!5731 = !DILocation(line: 241, column: 17, scope: !5714)
!5732 = !DILocation(line: 241, column: 37, scope: !5726)
!5733 = !DILocation(line: 247, column: 13, scope: !5714)
!5734 = !DILocation(line: 241, column: 27, scope: !5726)
!5735 = !DILocation(line: 241, column: 32, scope: !5726)
!5736 = !DILocation(line: 242, column: 24, scope: !5726)
!5737 = !DILocation(line: 246, column: 17, scope: !5714)
!5738 = !DILocation(line: 247, column: 14, scope: !5714)
!5739 = !DILocation(line: 236, column: 13, scope: !5714)
!5740 = !DILocation(line: 243, column: 32, scope: !5726)
!5741 = distinct !DISubprogram(name: "next<u8>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hda0a6e501ff7d1c6E", scope: !5715, file: !1856, line: 134, type: !5742, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5744)
!5742 = !DISubroutineType(types: !5743)
!5743 = !{!2002, !5718}
!5744 = !{!5745}
!5745 = !DILocalVariable(name: "self", arg: 1, scope: !5741, file: !1856, line: 134, type: !5718)
!5746 = !DILocation(line: 134, column: 21, scope: !5741)
!5747 = !DILocalVariable(name: "metadata", scope: !5748, file: !1856, line: 142, type: !7, align: 1)
!5748 = !DILexicalBlockFile(scope: !5749, file: !1856, discriminator: 0)
!5749 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h60f6d629b03ad8dfE", scope: !253, file: !252, line: 127, type: !1134, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5750)
!5750 = !{!5751, !5747}
!5751 = !DILocalVariable(name: "data_address", scope: !5748, file: !1856, line: 142, type: !1136, align: 8)
!5752 = !DILocation(line: 142, column: 29, scope: !5748, inlinedAt: !5753)
!5753 = !DILocation(line: 668, column: 5, scope: !5754, inlinedAt: !5755)
!5754 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17heb8f9a3561934949E", scope: !202, file: !231, line: 667, type: !1142, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !19)
!5755 = !DILocation(line: 38, column: 41, scope: !5756, inlinedAt: !5760)
!5756 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hf43662837fe7ba09E", scope: !1147, file: !1146, line: 35, type: !1149, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5757)
!5757 = !{!5758}
!5758 = !DILocalVariable(name: "self", scope: !5759, file: !1856, line: 142, type: !596, align: 8)
!5759 = !DILexicalBlockFile(scope: !5756, file: !1856, discriminator: 0)
!5760 = !DILocation(line: 142, column: 29, scope: !5741)
!5761 = !DILocalVariable(name: "metadata", scope: !5762, file: !1856, line: 144, type: !7, align: 1)
!5762 = !DILexicalBlockFile(scope: !5763, file: !1856, discriminator: 0)
!5763 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hc9fa830dd3c9579eE", scope: !253, file: !252, line: 110, type: !1740, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5764)
!5764 = !{!5765, !5761}
!5765 = !DILocalVariable(name: "data_address", scope: !5762, file: !1856, line: 144, type: !6, align: 8)
!5766 = !DILocation(line: 144, column: 33, scope: !5762, inlinedAt: !5767)
!5767 = !DILocation(line: 513, column: 5, scope: !5768, inlinedAt: !5769)
!5768 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17h80c0ae80c0ce3496E", scope: !202, file: !231, line: 512, type: !1747, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !19)
!5769 = !DILocation(line: 39, column: 43, scope: !5770, inlinedAt: !5774)
!5770 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h9ebbdb0cd46f0881E", scope: !211, file: !199, line: 36, type: !1751, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5771)
!5771 = !{!5772}
!5772 = !DILocalVariable(name: "self", scope: !5773, file: !1856, line: 144, type: !205, align: 8)
!5773 = !DILexicalBlockFile(scope: !5770, file: !1856, discriminator: 0)
!5774 = !DILocation(line: 144, column: 33, scope: !5741)
!5775 = !DILocalVariable(name: "self", scope: !5776, file: !1856, line: 142, type: !296, align: 8)
!5776 = !DILexicalBlockFile(scope: !5777, file: !1856, discriminator: 0)
!5777 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9a87f4e9cb3e4acdE", scope: !296, file: !582, line: 330, type: !601, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5778)
!5778 = !{!5775}
!5779 = !DILocation(line: 142, column: 29, scope: !5776, inlinedAt: !5760)
!5780 = !DILocation(line: 142, column: 29, scope: !5759, inlinedAt: !5760)
!5781 = !DILocalVariable(name: "self", scope: !5782, file: !1856, line: 142, type: !596, align: 8)
!5782 = !DILexicalBlockFile(scope: !5783, file: !1856, discriminator: 0)
!5783 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h6e2b59b730b34919E", scope: !1147, file: !1146, line: 707, type: !1159, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5784)
!5784 = !{!5781, !5785}
!5785 = !DILocalVariable(name: "other", scope: !5782, file: !1856, line: 142, type: !596, align: 8)
!5786 = !DILocation(line: 142, column: 29, scope: !5782, inlinedAt: !5787)
!5787 = !DILocation(line: 38, column: 9, scope: !5756, inlinedAt: !5760)
!5788 = !DILocation(line: 142, column: 29, scope: !5789, inlinedAt: !5793)
!5789 = !DILexicalBlockFile(scope: !5790, file: !1856, discriminator: 0)
!5790 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17hc7a864aee44084faE", scope: !202, file: !231, line: 569, type: !1168, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1172, retainedNodes: !5791)
!5791 = !{!5792}
!5792 = !DILocalVariable(name: "addr", scope: !5789, file: !1856, line: 142, type: !9, align: 8)
!5793 = !DILocation(line: 668, column: 24, scope: !5754, inlinedAt: !5755)
!5794 = !DILocation(line: 142, column: 28, scope: !5741)
!5795 = !DILocation(line: 142, column: 21, scope: !5741)
!5796 = !DILocation(line: 143, column: 24, scope: !5741)
!5797 = !DILocation(line: 143, column: 21, scope: !5741)
!5798 = !DILocation(line: 144, column: 33, scope: !5773, inlinedAt: !5774)
!5799 = !DILocalVariable(name: "self", scope: !5800, file: !1856, line: 144, type: !205, align: 8)
!5800 = !DILexicalBlockFile(scope: !5801, file: !1856, discriminator: 0)
!5801 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h8a1c34964f7ad5b9E", scope: !211, file: !199, line: 777, type: !1770, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5802)
!5802 = !{!5799, !5803}
!5803 = !DILocalVariable(name: "other", scope: !5800, file: !1856, line: 144, type: !205, align: 8)
!5804 = !DILocation(line: 144, column: 33, scope: !5800, inlinedAt: !5805)
!5805 = !DILocation(line: 39, column: 9, scope: !5770, inlinedAt: !5774)
!5806 = !DILocation(line: 144, column: 33, scope: !5807, inlinedAt: !5811)
!5807 = !DILexicalBlockFile(scope: !5808, file: !1856, discriminator: 0)
!5808 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h2b2fa68b7e93d261E", scope: !202, file: !231, line: 538, type: !1779, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !1172, retainedNodes: !5809)
!5809 = !{!5810}
!5810 = !DILocalVariable(name: "addr", scope: !5807, file: !1856, line: 144, type: !9, align: 8)
!5811 = !DILocation(line: 513, column: 20, scope: !5768, inlinedAt: !5769)
!5812 = !DILocation(line: 144, column: 32, scope: !5741)
!5813 = !DILocation(line: 144, column: 25, scope: !5741)
!5814 = !DILocation(line: 146, column: 24, scope: !5741)
!5815 = !DILocalVariable(name: "self", scope: !5816, file: !1856, line: 146, type: !296, align: 8)
!5816 = !DILexicalBlockFile(scope: !5817, file: !1856, discriminator: 0)
!5817 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9a87f4e9cb3e4acdE", scope: !296, file: !582, line: 330, type: !601, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5818)
!5818 = !{!5815}
!5819 = !DILocation(line: 146, column: 24, scope: !5816, inlinedAt: !5820)
!5820 = !DILocation(line: 8, column: 9, scope: !5741)
!5821 = !DILocation(line: 149, column: 30, scope: !5741)
!5822 = !DILocalVariable(name: "self", scope: !5823, file: !1856, line: 149, type: !5718, align: 8)
!5823 = distinct !DISubprogram(name: "post_inc_start<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17hc3c6c33fea458895E", scope: !324, file: !1856, line: 85, type: !5824, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5826)
!5824 = !DISubroutineType(types: !5825)
!5825 = !{!205, !5718, !223}
!5826 = !{!5822, !5827, !5828}
!5827 = !DILocalVariable(name: "offset", scope: !5823, file: !1856, line: 149, type: !223, align: 8)
!5828 = !DILocalVariable(name: "old", scope: !5829, file: !1856, line: 149, type: !596, align: 8)
!5829 = distinct !DILexicalBlock(scope: !5823, file: !1856, line: 90, column: 21)
!5830 = !DILocation(line: 149, column: 30, scope: !5823, inlinedAt: !5831)
!5831 = !DILocation(line: 53, column: 47, scope: !5741)
!5832 = !DILocation(line: 147, column: 25, scope: !5741)
!5833 = !DILocation(line: 146, column: 21, scope: !5741)
!5834 = !DILocation(line: 152, column: 14, scope: !5741)
!5835 = !DILocalVariable(name: "self", scope: !5836, file: !1856, line: 149, type: !205, align: 8)
!5836 = !DILexicalBlockFile(scope: !5837, file: !1856, discriminator: 0)
!5837 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hacbe0d025ee0b42eE", scope: !211, file: !199, line: 536, type: !221, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5838)
!5838 = !{!5835, !5839}
!5839 = !DILocalVariable(name: "count", scope: !5836, file: !1856, line: 149, type: !223, align: 8)
!5840 = !DILocation(line: 149, column: 30, scope: !5836, inlinedAt: !5841)
!5841 = !DILocation(line: 67, column: 29, scope: !5823, inlinedAt: !5831)
!5842 = !DILocalVariable(name: "self", scope: !5843, file: !1856, line: 149, type: !296, align: 8)
!5843 = !DILexicalBlockFile(scope: !5844, file: !1856, discriminator: 0)
!5844 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9a87f4e9cb3e4acdE", scope: !296, file: !582, line: 330, type: !601, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5845)
!5845 = !{!5842}
!5846 = !DILocation(line: 149, column: 30, scope: !5843, inlinedAt: !5847)
!5847 = !DILocation(line: 90, column: 31, scope: !5823, inlinedAt: !5831)
!5848 = !DILocation(line: 149, column: 30, scope: !5829, inlinedAt: !5831)
!5849 = !DILocalVariable(name: "self", scope: !5850, file: !1856, line: 149, type: !296, align: 8)
!5850 = !DILexicalBlockFile(scope: !5851, file: !1856, discriminator: 0)
!5851 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9a87f4e9cb3e4acdE", scope: !296, file: !582, line: 330, type: !601, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5852)
!5852 = !{!5849}
!5853 = !DILocation(line: 149, column: 30, scope: !5850, inlinedAt: !5854)
!5854 = !DILocation(line: 93, column: 64, scope: !5829, inlinedAt: !5831)
!5855 = !DILocalVariable(name: "self", scope: !5856, file: !1856, line: 149, type: !596, align: 8)
!5856 = !DILexicalBlockFile(scope: !5857, file: !1856, discriminator: 0)
!5857 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hc6cc4dbd9902a0dfE", scope: !1147, file: !1146, line: 465, type: !2633, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5858)
!5858 = !{!5855, !5859}
!5859 = !DILocalVariable(name: "count", scope: !5856, file: !1856, line: 149, type: !223, align: 8)
!5860 = !DILocation(line: 149, column: 30, scope: !5856, inlinedAt: !5854)
!5861 = !DILocalVariable(name: "ptr", scope: !5862, file: !1856, line: 149, type: !596, align: 8)
!5862 = !DILexicalBlockFile(scope: !5863, file: !1856, discriminator: 0)
!5863 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hfaafb5192c9d4d91E", scope: !296, file: !582, line: 196, type: !608, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5864)
!5864 = !{!5861}
!5865 = !DILocation(line: 149, column: 30, scope: !5862, inlinedAt: !5866)
!5866 = !DILocation(line: 93, column: 41, scope: !5829, inlinedAt: !5831)
!5867 = !DILocation(line: 149, column: 25, scope: !5741)
!5868 = !DILocalVariable(name: "self", scope: !5869, file: !1856, line: 149, type: !296, align: 8)
!5869 = !DILexicalBlockFile(scope: !5870, file: !1856, discriminator: 0)
!5870 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9a87f4e9cb3e4acdE", scope: !296, file: !582, line: 330, type: !601, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5871)
!5871 = !{!5868}
!5872 = !DILocation(line: 149, column: 30, scope: !5869, inlinedAt: !5873)
!5873 = !DILocation(line: 88, column: 21, scope: !5823, inlinedAt: !5831)
!5874 = distinct !DISubprogram(name: "from_iter<alloc::vec::Vec<u8, alloc::alloc::Global>, &mut shlex::bytes::Shlex>", linkageName: "_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h0f3f6e13d4f9205aE", scope: !5875, file: !367, line: 2647, type: !453, scopeLine: 2647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !489, retainedNodes: !5876)
!5875 = !DINamespace(name: "{impl#18}", scope: !265)
!5876 = !{!5877}
!5877 = !DILocalVariable(name: "iter", arg: 1, scope: !5874, file: !367, line: 2647, type: !476)
!5878 = !DILocation(line: 2647, column: 45, scope: !5874)
!5879 = !DILocation(line: 2648, column: 59, scope: !5874)
!5880 = !DILocation(line: 2648, column: 9, scope: !5874)
!5881 = !DILocation(line: 2649, column: 6, scope: !5874)
!5882 = distinct !DISubprogram(name: "from_iter<alloc::string::String, &mut shlex::Shlex>", linkageName: "_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17hbc35f6bdd17ee206E", scope: !5875, file: !367, line: 2647, type: !266, scopeLine: 2647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !348, retainedNodes: !5883)
!5883 = !{!5884}
!5884 = !DILocalVariable(name: "iter", arg: 1, scope: !5882, file: !367, line: 2647, type: !317)
!5885 = !DILocation(line: 2647, column: 45, scope: !5882)
!5886 = !DILocation(line: 2648, column: 59, scope: !5882)
!5887 = !DILocation(line: 2648, column: 9, scope: !5882)
!5888 = !DILocation(line: 2649, column: 6, scope: !5882)
!5889 = distinct !DISubprogram(name: "spec_extend<alloc::vec::Vec<u8, alloc::alloc::Global>, &mut shlex::bytes::Shlex, alloc::alloc::Global>", linkageName: "_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h1f6bfb8f2681e93fE", scope: !5890, file: !651, line: 17, type: !2643, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !5894, retainedNodes: !5891)
!5890 = !DINamespace(name: "{impl#0}", scope: !653)
!5891 = !{!5892, !5893}
!5892 = !DILocalVariable(name: "self", arg: 1, scope: !5889, file: !651, line: 17, type: !571)
!5893 = !DILocalVariable(name: "iter", arg: 2, scope: !5889, file: !651, line: 17, type: !476)
!5894 = !{!469, !490, !307}
!5895 = !DILocation(line: 17, column: 28, scope: !5889)
!5896 = !DILocation(line: 17, column: 39, scope: !5889)
!5897 = !DILocation(line: 18, column: 9, scope: !5889)
!5898 = !DILocation(line: 19, column: 6, scope: !5889)
!5899 = distinct !DISubprogram(name: "spec_extend<alloc::string::String, &mut shlex::Shlex, alloc::alloc::Global>", linkageName: "_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17hc39477a9218591a1E", scope: !5890, file: !651, line: 17, type: !2735, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !5903, retainedNodes: !5900)
!5900 = !{!5901, !5902}
!5901 = !DILocalVariable(name: "self", arg: 1, scope: !5899, file: !651, line: 17, type: !441)
!5902 = !DILocalVariable(name: "iter", arg: 2, scope: !5899, file: !651, line: 17, type: !317)
!5903 = !{!310, !349, !307}
!5904 = !DILocation(line: 17, column: 28, scope: !5899)
!5905 = !DILocation(line: 17, column: 39, scope: !5899)
!5906 = !DILocation(line: 18, column: 9, scope: !5899)
!5907 = !DILocation(line: 19, column: 6, scope: !5899)
!5908 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hb10d86222b139743E", scope: !5909, file: !156, line: 432, type: !5910, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !190, retainedNodes: !5912)
!5909 = !DINamespace(name: "{impl#6}", scope: !158)
!5910 = !DISubroutineType(types: !5911)
!5911 = !{!662, !1602, !662, !732}
!5912 = !{!5913, !5914}
!5913 = !DILocalVariable(name: "self", arg: 1, scope: !5908, file: !156, line: 432, type: !1602)
!5914 = !DILocalVariable(name: "slice", arg: 2, scope: !5908, file: !156, line: 432, type: !662)
!5915 = !DILocation(line: 432, column: 14, scope: !5908)
!5916 = !DILocation(line: 432, column: 20, scope: !5908)
!5917 = !DILocation(line: 434, column: 6, scope: !5908)
!5918 = distinct !DISubprogram(name: "from_iter<alloc::vec::Vec<u8, alloc::alloc::Global>, &mut shlex::bytes::Shlex>", linkageName: "_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h912cbfffe893d2c0E", scope: !5920, file: !5919, line: 32, type: !453, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !489, retainedNodes: !5922)
!5919 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/spec_from_iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "b039a84bf3a4bff93117713671450099")
!5920 = !DINamespace(name: "{impl#0}", scope: !5921)
!5921 = !DINamespace(name: "spec_from_iter", scope: !265)
!5922 = !{!5923}
!5923 = !DILocalVariable(name: "iterator", arg: 1, scope: !5918, file: !5919, line: 32, type: !476)
!5924 = !DILocation(line: 32, column: 26, scope: !5918)
!5925 = !DILocation(line: 33, column: 9, scope: !5918)
!5926 = !DILocation(line: 34, column: 6, scope: !5918)
!5927 = distinct !DISubprogram(name: "from_iter<alloc::string::String, &mut shlex::Shlex>", linkageName: "_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h932cf989e67b51c3E", scope: !5920, file: !5919, line: 32, type: !266, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !348, retainedNodes: !5928)
!5928 = !{!5929}
!5929 = !DILocalVariable(name: "iterator", arg: 1, scope: !5927, file: !5919, line: 32, type: !317)
!5930 = !DILocation(line: 32, column: 26, scope: !5927)
!5931 = !DILocation(line: 33, column: 9, scope: !5927)
!5932 = !DILocation(line: 34, column: 6, scope: !5927)
!5933 = distinct !DISubprogram(name: "new", linkageName: "_ZN5shlex5bytes5Shlex3new17h828b6896c0f4e720E", scope: !321, file: !5934, line: 52, type: !5935, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !5937)
!5934 = !DIFile(filename: "src/bytes.rs", directory: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/shlex-1.3.0", checksumkind: CSK_MD5, checksum: "2edad97df4e5d67c9787ee83d20d5f71")
!5935 = !DISubroutineType(types: !5936)
!5936 = !{!321, !662}
!5937 = !{!5938}
!5938 = !DILocalVariable(name: "in_bytes", arg: 1, scope: !5933, file: !5934, line: 52, type: !662)
!5939 = !DILocation(line: 52, column: 16, scope: !5933)
!5940 = !DILocation(line: 54, column: 22, scope: !5933)
!5941 = !DILocation(line: 53, column: 9, scope: !5933)
!5942 = !DILocation(line: 58, column: 6, scope: !5933)
!5943 = distinct !DISubprogram(name: "parse_word", linkageName: "_ZN5shlex5bytes5Shlex10parse_word17h8fe796b90f88bf53E", scope: !321, file: !5934, line: 60, type: !5944, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !5946)
!5944 = !DISubroutineType(types: !5945)
!5945 = !{!1087, !476, !124}
!5946 = !{!5947, !5948, !5949, !5951, !5953}
!5947 = !DILocalVariable(name: "self", arg: 1, scope: !5943, file: !5934, line: 60, type: !476)
!5948 = !DILocalVariable(name: "ch", arg: 2, scope: !5943, file: !5934, line: 60, type: !124)
!5949 = !DILocalVariable(name: "result", scope: !5950, file: !5934, line: 61, type: !287, align: 8)
!5950 = distinct !DILexicalBlock(scope: !5943, file: !5934, line: 61, column: 9)
!5951 = !DILocalVariable(name: "ch2", scope: !5952, file: !5934, line: 72, type: !124, align: 1)
!5952 = distinct !DILexicalBlock(scope: !5950, file: !5934, line: 72, column: 61)
!5953 = !DILocalVariable(name: "ch2", scope: !5954, file: !5934, line: 81, type: !124, align: 1)
!5954 = distinct !DILexicalBlock(scope: !5950, file: !5934, line: 81, column: 49)
!5955 = !DILocation(line: 60, column: 19, scope: !5943)
!5956 = !DILocation(line: 60, column: 30, scope: !5943)
!5957 = !DILocation(line: 61, column: 13, scope: !5950)
!5958 = !DILocation(line: 61, column: 35, scope: !5943)
!5959 = !DILocation(line: 63, column: 19, scope: !5950)
!5960 = !DILocation(line: 63, column: 13, scope: !5950)
!5961 = !DILocation(line: 79, column: 36, scope: !5950)
!5962 = !DILocation(line: 79, column: 24, scope: !5950)
!5963 = !DILocation(line: 64, column: 41, scope: !5950)
!5964 = !DILocation(line: 68, column: 42, scope: !5950)
!5965 = !DILocation(line: 72, column: 44, scope: !5952)
!5966 = !DILocation(line: 83, column: 14, scope: !5950)
!5967 = !DILocation(line: 83, column: 9, scope: !5950)
!5968 = !DILocation(line: 84, column: 6, scope: !5943)
!5969 = !DILocation(line: 84, column: 5, scope: !5943)
!5970 = !DILocation(line: 81, column: 32, scope: !5954)
!5971 = !DILocation(line: 72, column: 32, scope: !5952)
!5972 = !DILocation(line: 72, column: 37, scope: !5952)
!5973 = !DILocation(line: 73, column: 24, scope: !5952)
!5974 = !DILocation(line: 75, column: 21, scope: !5950)
!5975 = !DILocation(line: 76, column: 28, scope: !5950)
!5976 = !DILocation(line: 1, column: 1, scope: !5977)
!5977 = !DILexicalBlockFile(scope: !5950, file: !3574, discriminator: 0)
!5978 = !DILocation(line: 73, column: 44, scope: !5952)
!5979 = !DILocation(line: 68, column: 32, scope: !5950)
!5980 = !DILocation(line: 69, column: 21, scope: !5950)
!5981 = !DILocation(line: 70, column: 28, scope: !5950)
!5982 = !DILocation(line: 64, column: 31, scope: !5950)
!5983 = !DILocation(line: 65, column: 21, scope: !5950)
!5984 = !DILocation(line: 66, column: 28, scope: !5950)
!5985 = !DILocation(line: 81, column: 20, scope: !5954)
!5986 = !DILocation(line: 60, column: 5, scope: !5943)
!5987 = !DILocation(line: 81, column: 25, scope: !5954)
!5988 = !DILocation(line: 81, column: 51, scope: !5954)
!5989 = !DILocation(line: 62, column: 9, scope: !5950)
!5990 = distinct !DISubprogram(name: "parse_double", linkageName: "_ZN5shlex5bytes5Shlex12parse_double17h9967600541d5b3e7E", scope: !321, file: !5934, line: 86, type: !5991, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6008)
!5991 = !DISubroutineType(types: !5992)
!5992 = !{!5993, !476, !656}
!5993 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), ()>", scope: !675, file: !2, size: 8, align: 8, elements: !5994, templateParams: !19, identifier: "6dea95873e167e7aa255bb4a480c6c2")
!5994 = !{!5995}
!5995 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5993, file: !2, size: 8, align: 8, elements: !5996, templateParams: !19, identifier: "2efae428314ef57eeeefbe01d3794c62", discriminator: !6007)
!5996 = !{!5997, !6003}
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5995, file: !2, baseType: !5998, size: 8, align: 8, extraData: i64 0)
!5998 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5993, file: !2, size: 8, align: 8, elements: !5999, templateParams: !6001, identifier: "51a856b9cbe68768bf705b09f45630b8")
!5999 = !{!6000}
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5998, file: !2, baseType: !7, align: 8, offset: 8)
!6001 = !{!766, !6002}
!6002 = !DITemplateTypeParameter(name: "E", type: !7)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5995, file: !2, baseType: !6004, size: 8, align: 8, extraData: i64 1)
!6004 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5993, file: !2, size: 8, align: 8, elements: !6005, templateParams: !6001, identifier: "bba102c9c506621757ba0c74b617293c")
!6005 = !{!6006}
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6004, file: !2, baseType: !7, align: 8, offset: 8)
!6007 = !DIDerivedType(tag: DW_TAG_member, scope: !5993, file: !2, baseType: !124, size: 8, align: 8, flags: DIFlagArtificial)
!6008 = !{!6009, !6010, !6011, !6013}
!6009 = !DILocalVariable(name: "self", arg: 1, scope: !5990, file: !5934, line: 86, type: !476)
!6010 = !DILocalVariable(name: "result", arg: 2, scope: !5990, file: !5934, line: 86, type: !656)
!6011 = !DILocalVariable(name: "ch2", scope: !6012, file: !5934, line: 88, type: !124, align: 1)
!6012 = distinct !DILexicalBlock(scope: !5990, file: !5934, line: 88, column: 49)
!6013 = !DILocalVariable(name: "ch3", scope: !6014, file: !5934, line: 91, type: !124, align: 1)
!6014 = distinct !DILexicalBlock(scope: !6012, file: !5934, line: 91, column: 61)
!6015 = !DILocation(line: 86, column: 21, scope: !5990)
!6016 = !DILocation(line: 86, column: 32, scope: !5990)
!6017 = !DILocation(line: 87, column: 9, scope: !5990)
!6018 = !DILocation(line: 88, column: 32, scope: !6012)
!6019 = !DILocation(line: 88, column: 20, scope: !6012)
!6020 = !DILocation(line: 88, column: 25, scope: !6012)
!6021 = !DILocation(line: 89, column: 23, scope: !6012)
!6022 = !DILocation(line: 89, column: 17, scope: !6012)
!6023 = !DILocation(line: 108, column: 24, scope: !5990)
!6024 = !DILocation(line: 108, column: 17, scope: !5990)
!6025 = !DILocation(line: 111, column: 6, scope: !5990)
!6026 = !DILocation(line: 105, column: 28, scope: !6012)
!6027 = !DILocation(line: 91, column: 44, scope: !6014)
!6028 = !DILocation(line: 104, column: 37, scope: !6012)
!6029 = !DILocation(line: 104, column: 30, scope: !6012)
!6030 = !DILocation(line: 91, column: 32, scope: !6014)
!6031 = !DILocation(line: 91, column: 37, scope: !6014)
!6032 = !DILocation(line: 92, column: 35, scope: !6014)
!6033 = !DILocation(line: 92, column: 29, scope: !6014)
!6034 = !DILocation(line: 101, column: 36, scope: !6012)
!6035 = !DILocation(line: 1, column: 1, scope: !6036)
!6036 = !DILexicalBlockFile(scope: !6012, file: !3574, discriminator: 0)
!6037 = !DILocation(line: 98, column: 40, scope: !6014)
!6038 = !DILocation(line: 94, column: 61, scope: !6014)
!6039 = !DILocation(line: 98, column: 65, scope: !6014)
!6040 = distinct !DISubprogram(name: "parse_single", linkageName: "_ZN5shlex5bytes5Shlex12parse_single17h5b1a443dfc519d8cE", scope: !321, file: !5934, line: 113, type: !5991, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6041)
!6041 = !{!6042, !6043, !6044}
!6042 = !DILocalVariable(name: "self", arg: 1, scope: !6040, file: !5934, line: 113, type: !476)
!6043 = !DILocalVariable(name: "result", arg: 2, scope: !6040, file: !5934, line: 113, type: !656)
!6044 = !DILocalVariable(name: "ch2", scope: !6045, file: !5934, line: 115, type: !124, align: 1)
!6045 = distinct !DILexicalBlock(scope: !6040, file: !5934, line: 115, column: 49)
!6046 = !DILocation(line: 113, column: 21, scope: !6040)
!6047 = !DILocation(line: 113, column: 32, scope: !6040)
!6048 = !DILocation(line: 114, column: 9, scope: !6040)
!6049 = !DILocation(line: 115, column: 32, scope: !6045)
!6050 = !DILocation(line: 115, column: 20, scope: !6045)
!6051 = !DILocation(line: 115, column: 25, scope: !6045)
!6052 = !DILocation(line: 116, column: 23, scope: !6045)
!6053 = !DILocation(line: 116, column: 17, scope: !6045)
!6054 = !DILocation(line: 121, column: 24, scope: !6040)
!6055 = !DILocation(line: 121, column: 17, scope: !6040)
!6056 = !DILocation(line: 124, column: 6, scope: !6040)
!6057 = !DILocation(line: 117, column: 38, scope: !6045)
!6058 = !DILocation(line: 1, column: 1, scope: !6059)
!6059 = !DILexicalBlockFile(scope: !6040, file: !3574, discriminator: 0)
!6060 = !DILocation(line: 118, column: 28, scope: !6045)
!6061 = distinct !DISubprogram(name: "next_char", linkageName: "_ZN5shlex5bytes5Shlex9next_char17h96135a24a4e32e39E", scope: !321, file: !5934, line: 126, type: !6062, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6064)
!6062 = !DISubroutineType(types: !6063)
!6063 = !{!2015, !476}
!6064 = !{!6065, !6066}
!6065 = !DILocalVariable(name: "self", arg: 1, scope: !6061, file: !5934, line: 126, type: !476)
!6066 = !DILocalVariable(name: "res", scope: !6067, file: !5934, line: 127, type: !2015, align: 1)
!6067 = distinct !DILexicalBlock(scope: !6061, file: !5934, line: 127, column: 9)
!6068 = !DILocation(line: 127, column: 13, scope: !6067)
!6069 = !DILocation(line: 126, column: 18, scope: !6061)
!6070 = !DILocation(line: 127, column: 19, scope: !6061)
!6071 = !DILocation(line: 128, column: 12, scope: !6067)
!6072 = !DILocation(line: 130, column: 6, scope: !6061)
!6073 = !DILocation(line: 128, column: 33, scope: !6067)
!6074 = !DILocation(line: 128, column: 9, scope: !6067)
!6075 = distinct !DISubprogram(name: "next", linkageName: "_ZN78_$LT$shlex..bytes..Shlex$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h78fef5295293fb1fE", scope: !6076, file: !5934, line: 135, type: !6077, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6079)
!6076 = !DINamespace(name: "{impl#1}", scope: !40)
!6077 = !DISubroutineType(types: !6078)
!6078 = !{!1087, !476}
!6079 = !{!6080, !6081, !6083, !6085}
!6080 = !DILocalVariable(name: "self", arg: 1, scope: !6075, file: !5934, line: 135, type: !476)
!6081 = !DILocalVariable(name: "ch", scope: !6082, file: !5934, line: 136, type: !124, align: 1)
!6082 = distinct !DILexicalBlock(scope: !6075, file: !5934, line: 136, column: 48)
!6083 = !DILocalVariable(name: "ch2", scope: !6084, file: !5934, line: 142, type: !124, align: 1)
!6084 = distinct !DILexicalBlock(scope: !6082, file: !5934, line: 142, column: 64)
!6085 = !DILocalVariable(name: "ch2", scope: !6086, file: !5934, line: 148, type: !124, align: 1)
!6086 = distinct !DILexicalBlock(scope: !6082, file: !5934, line: 148, column: 53)
!6087 = !DILocation(line: 135, column: 13, scope: !6075)
!6088 = !DILocation(line: 136, column: 21, scope: !6082)
!6089 = !DILocation(line: 136, column: 31, scope: !6082)
!6090 = !DILocation(line: 136, column: 16, scope: !6082)
!6091 = !DILocation(line: 138, column: 13, scope: !6082)
!6092 = !DILocation(line: 152, column: 13, scope: !6075)
!6093 = !DILocation(line: 136, column: 9, scope: !6075)
!6094 = !DILocation(line: 154, column: 6, scope: !6075)
!6095 = !DILocation(line: 139, column: 23, scope: !6082)
!6096 = !DILocation(line: 139, column: 17, scope: !6082)
!6097 = !DILocation(line: 150, column: 29, scope: !6082)
!6098 = !DILocation(line: 150, column: 13, scope: !6082)
!6099 = !DILocation(line: 148, column: 36, scope: !6086)
!6100 = !DILocation(line: 142, column: 47, scope: !6084)
!6101 = !DILocation(line: 142, column: 35, scope: !6084)
!6102 = !DILocation(line: 142, column: 40, scope: !6084)
!6103 = !DILocation(line: 143, column: 32, scope: !6084)
!6104 = !DILocation(line: 148, column: 24, scope: !6086)
!6105 = !DILocation(line: 148, column: 29, scope: !6086)
!6106 = !DILocation(line: 148, column: 55, scope: !6086)
!6107 = !DILocation(line: 148, column: 81, scope: !6082)
!6108 = distinct !DISubprogram(name: "split", linkageName: "_ZN5shlex5bytes5split17h49c5ba0e0911ad83E", scope: !40, file: !5934, line: 160, type: !6109, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6122)
!6109 = !DISubroutineType(types: !6110)
!6110 = !{!6111, !662}
!6111 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::vec::Vec<alloc::vec::Vec<u8, alloc::alloc::Global>, alloc::alloc::Global>>", scope: !783, file: !2, size: 192, align: 64, elements: !6112, templateParams: !19, identifier: "f8dac801b386783fe41c18a8f440c1e4")
!6112 = !{!6113}
!6113 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6111, file: !2, size: 192, align: 64, elements: !6114, templateParams: !19, identifier: "7e7878d186317b2570a940e5c8f87f5d", discriminator: !6121)
!6114 = !{!6115, !6117}
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6113, file: !2, baseType: !6116, size: 192, align: 64, extraData: i64 0)
!6116 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6111, file: !2, size: 192, align: 64, elements: !19, templateParams: !1051, identifier: "99bb4706a3c31d973b0ea39c802d1fe0")
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6113, file: !2, baseType: !6118, size: 192, align: 64)
!6118 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6111, file: !2, size: 192, align: 64, elements: !6119, templateParams: !1051, identifier: "72b1cfc7e98705fde2a9eb6d930f5c8")
!6119 = !{!6120}
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6118, file: !2, baseType: !455, size: 192, align: 64)
!6121 = !DIDerivedType(tag: DW_TAG_member, scope: !6111, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!6122 = !{!6123, !6124, !6126}
!6123 = !DILocalVariable(name: "in_bytes", arg: 1, scope: !6108, file: !5934, line: 160, type: !662)
!6124 = !DILocalVariable(name: "shl", scope: !6125, file: !5934, line: 161, type: !321, align: 8)
!6125 = distinct !DILexicalBlock(scope: !6108, file: !5934, line: 161, column: 5)
!6126 = !DILocalVariable(name: "res", scope: !6127, file: !5934, line: 162, type: !455, align: 8)
!6127 = distinct !DILexicalBlock(scope: !6125, file: !5934, line: 162, column: 5)
!6128 = !DILocation(line: 160, column: 14, scope: !6108)
!6129 = !DILocation(line: 161, column: 9, scope: !6125)
!6130 = !DILocation(line: 162, column: 9, scope: !6127)
!6131 = !DILocation(line: 161, column: 9, scope: !6108)
!6132 = !DILocation(line: 161, column: 19, scope: !6108)
!6133 = !DILocation(line: 162, column: 15, scope: !6125)
!6134 = !DILocation(line: 163, column: 8, scope: !6127)
!6135 = !DILocation(line: 163, column: 43, scope: !6127)
!6136 = !DILocation(line: 163, column: 38, scope: !6127)
!6137 = !DILocation(line: 163, column: 5, scope: !6127)
!6138 = !DILocation(line: 163, column: 24, scope: !6127)
!6139 = !DILocation(line: 164, column: 1, scope: !6125)
!6140 = !DILocation(line: 164, column: 2, scope: !6108)
!6141 = distinct !DISubprogram(name: "new", linkageName: "_ZN5shlex5bytes6Quoter3new17h63fe65f2f9a9481dE", scope: !39, file: !5934, line: 179, type: !6142, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !19)
!6142 = !DISubroutineType(types: !6143)
!6143 = !{!39}
!6144 = !DILocation(line: 180, column: 9, scope: !6141)
!6145 = !DILocation(line: 181, column: 6, scope: !6141)
!6146 = distinct !DISubprogram(name: "allow_nul", linkageName: "_ZN5shlex5bytes6Quoter9allow_nul17h89a2f8c59372f27dE", scope: !39, file: !5934, line: 186, type: !6147, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6149)
!6147 = !DISubroutineType(types: !6148)
!6148 = !{!39, !39, !29}
!6149 = !{!6150, !6151}
!6150 = !DILocalVariable(name: "self", arg: 1, scope: !6146, file: !5934, line: 186, type: !39)
!6151 = !DILocalVariable(name: "allow", arg: 2, scope: !6146, file: !5934, line: 186, type: !29)
!6152 = !DILocation(line: 186, column: 22, scope: !6146)
!6153 = !DILocation(line: 186, column: 32, scope: !6146)
!6154 = !DILocation(line: 187, column: 9, scope: !6146)
!6155 = !DILocation(line: 188, column: 9, scope: !6146)
!6156 = !DILocation(line: 189, column: 6, scope: !6146)
!6157 = distinct !DISubprogram(name: "quote", linkageName: "_ZN5shlex5bytes6Quoter5quote17h9838e4866ab2a183E", scope: !39, file: !5934, line: 206, type: !6158, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6160)
!6158 = !DISubroutineType(types: !6159)
!6159 = !{!2040, !38, !662}
!6160 = !{!6161, !6162, !6163, !6165, !6167, !6168, !6170}
!6161 = !DILocalVariable(name: "self", arg: 1, scope: !6157, file: !5934, line: 206, type: !38)
!6162 = !DILocalVariable(name: "in_bytes", arg: 2, scope: !6157, file: !5934, line: 206, type: !662)
!6163 = !DILocalVariable(name: "out", scope: !6164, file: !5934, line: 214, type: !287, align: 8)
!6164 = distinct !DILexicalBlock(scope: !6157, file: !5934, line: 214, column: 9)
!6165 = !DILocalVariable(name: "cur_len", scope: !6166, file: !5934, line: 219, type: !9, align: 8)
!6166 = distinct !DILexicalBlock(scope: !6164, file: !5934, line: 219, column: 13)
!6167 = !DILocalVariable(name: "strategy", scope: !6166, file: !5934, line: 219, type: !149, align: 1)
!6168 = !DILocalVariable(name: "cur_chunk", scope: !6169, file: !5934, line: 224, type: !662, align: 8)
!6169 = distinct !DILexicalBlock(scope: !6166, file: !5934, line: 224, column: 13)
!6170 = !DILocalVariable(name: "rest", scope: !6169, file: !5934, line: 224, type: !662, align: 8)
!6171 = !DILocation(line: 206, column: 22, scope: !6157)
!6172 = !DILocation(line: 206, column: 29, scope: !6157)
!6173 = !DILocation(line: 214, column: 13, scope: !6164)
!6174 = !DILocation(line: 219, column: 27, scope: !6166)
!6175 = !DILocation(line: 207, column: 9, scope: !6157)
!6176 = !DILocation(line: 207, column: 12, scope: !6157)
!6177 = !DILocation(line: 211, column: 13, scope: !6157)
!6178 = !DILocation(line: 211, column: 12, scope: !6157)
!6179 = !DILocation(line: 209, column: 23, scope: !6157)
!6180 = !DILocation(line: 209, column: 20, scope: !6157)
!6181 = !DILocation(line: 1, column: 1, scope: !6182)
!6182 = !DILexicalBlockFile(scope: !6157, file: !3574, discriminator: 0)
!6183 = !DILocation(line: 230, column: 6, scope: !6157)
!6184 = !DILocation(line: 211, column: 31, scope: !6157)
!6185 = !DILocation(line: 214, column: 32, scope: !6157)
!6186 = !DILocation(line: 212, column: 20, scope: !6157)
!6187 = !DILocation(line: 215, column: 16, scope: !6164)
!6188 = !DILocation(line: 230, column: 5, scope: !6157)
!6189 = !DILocation(line: 215, column: 15, scope: !6164)
!6190 = !DILocation(line: 229, column: 12, scope: !6164)
!6191 = !DILocation(line: 219, column: 56, scope: !6164)
!6192 = !DILocation(line: 219, column: 39, scope: !6164)
!6193 = !DILocation(line: 219, column: 18, scope: !6164)
!6194 = !DILocation(line: 219, column: 18, scope: !6166)
!6195 = !DILocation(line: 219, column: 27, scope: !6164)
!6196 = !DILocation(line: 220, column: 27, scope: !6166)
!6197 = !DILocation(line: 220, column: 16, scope: !6166)
!6198 = !DILocation(line: 220, column: 45, scope: !6166)
!6199 = !DILocation(line: 220, column: 86, scope: !6166)
!6200 = !DILocation(line: 224, column: 37, scope: !6166)
!6201 = !DILocation(line: 222, column: 27, scope: !6166)
!6202 = !DILocation(line: 222, column: 24, scope: !6166)
!6203 = !DILocation(line: 224, column: 18, scope: !6166)
!6204 = !DILocation(line: 224, column: 18, scope: !6169)
!6205 = !DILocation(line: 224, column: 29, scope: !6166)
!6206 = !DILocation(line: 224, column: 29, scope: !6169)
!6207 = !DILocation(line: 225, column: 21, scope: !6169)
!6208 = !DILocation(line: 225, column: 34, scope: !6169)
!6209 = !DILocation(line: 225, column: 13, scope: !6169)
!6210 = !DILocation(line: 226, column: 13, scope: !6169)
!6211 = !DILocation(line: 227, column: 54, scope: !6169)
!6212 = !{i8 0, i8 3}
!6213 = !DILocation(line: 227, column: 13, scope: !6169)
!6214 = !DILocation(line: 229, column: 9, scope: !6164)
!6215 = !DILocation(line: 206, column: 5, scope: !6157)
!6216 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5shlex5bytes6Quoter5quote28_$u7b$$u7b$closure$u7d$$u7d$17hc21b762c28cc18f4E", scope: !5720, file: !5934, line: 211, type: !6217, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6220)
!6217 = !DISubroutineType(types: !6218)
!6218 = !{!29, !6219, !333}
!6219 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut shlex::bytes::{impl#2}::quote::{closure_env#0}", baseType: !5719, size: 64, align: 64, dwarfAddressSpace: 0)
!6220 = !{!6221, !6223, !6224}
!6221 = !DILocalVariable(name: "b", scope: !6222, file: !5934, line: 211, type: !124, align: 1)
!6222 = distinct !DILexicalBlock(scope: !6216, file: !5934, line: 211, column: 56)
!6223 = !DILocalVariable(arg: 1, scope: !6216, file: !5934, line: 211, type: !6219)
!6224 = !DILocalVariable(arg: 2, scope: !6216, file: !5934, line: 211, type: !333)
!6225 = !DILocation(line: 211, column: 51, scope: !6216)
!6226 = !DILocation(line: 211, column: 52, scope: !6216)
!6227 = !DILocation(line: 211, column: 53, scope: !6216)
!6228 = !DILocation(line: 211, column: 53, scope: !6222)
!6229 = !DILocation(line: 211, column: 56, scope: !6222)
!6230 = !DILocation(line: 211, column: 55, scope: !6216)
!6231 = distinct !DISubprogram(name: "unquoted_ok_fast", linkageName: "_ZN5shlex5bytes16unquoted_ok_fast17h9f5f033708201482E", scope: !40, file: !5934, line: 304, type: !6232, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6234)
!6232 = !DISubroutineType(types: !6233)
!6233 = !{!29, !124}
!6234 = !{!6235}
!6235 = !DILocalVariable(name: "c", arg: 1, scope: !6231, file: !5934, line: 304, type: !124)
!6236 = !DILocation(line: 304, column: 21, scope: !6231)
!6237 = !DILocation(line: 317, column: 6, scope: !6231)
!6238 = !DILocation(line: 317, column: 5, scope: !6231)
!6239 = !DILocation(line: 318, column: 2, scope: !6231)
!6240 = distinct !DISubprogram(name: "single_quoted_ok", linkageName: "_ZN5shlex5bytes16single_quoted_ok17h032cd25b986414ccE", scope: !40, file: !5934, line: 321, type: !6232, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6241)
!6241 = !{!6242}
!6242 = !DILocalVariable(name: "c", arg: 1, scope: !6240, file: !5934, line: 321, type: !124)
!6243 = !DILocation(line: 321, column: 21, scope: !6240)
!6244 = !DILocation(line: 322, column: 5, scope: !6240)
!6245 = !DILocation(line: 332, column: 14, scope: !6240)
!6246 = !DILocation(line: 324, column: 18, scope: !6240)
!6247 = !DILocation(line: 327, column: 17, scope: !6240)
!6248 = !DILocation(line: 331, column: 18, scope: !6240)
!6249 = !DILocation(line: 334, column: 2, scope: !6240)
!6250 = distinct !DISubprogram(name: "double_quoted_ok", linkageName: "_ZN5shlex5bytes16double_quoted_ok17h0a565b1ff623fc71E", scope: !40, file: !5934, line: 337, type: !6232, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6251)
!6251 = !{!6252}
!6252 = !DILocalVariable(name: "c", arg: 1, scope: !6250, file: !5934, line: 337, type: !124)
!6253 = !DILocation(line: 337, column: 21, scope: !6250)
!6254 = !DILocation(line: 338, column: 5, scope: !6250)
!6255 = !DILocation(line: 344, column: 14, scope: !6250)
!6256 = !DILocation(line: 341, column: 24, scope: !6250)
!6257 = !DILocation(line: 343, column: 24, scope: !6250)
!6258 = !DILocation(line: 346, column: 2, scope: !6250)
!6259 = distinct !DISubprogram(name: "quoting_strategy", linkageName: "_ZN5shlex5bytes16quoting_strategy17h4e6af26bd7812e49E", scope: !40, file: !5934, line: 354, type: !6260, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6266)
!6260 = !DISubroutineType(types: !6261)
!6261 = !{!6262, !662}
!6262 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, shlex::bytes::QuotingStrategy)", file: !2, size: 128, align: 64, elements: !6263, templateParams: !19, identifier: "116c43572af421a34791d4a178db342")
!6263 = !{!6264, !6265}
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6262, file: !2, baseType: !9, size: 64, align: 64)
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !6262, file: !2, baseType: !149, size: 8, align: 8, offset: 64)
!6266 = !{!6267, !6268, !6270, !6272, !6274, !6276}
!6267 = !DILocalVariable(name: "in_bytes", arg: 1, scope: !6259, file: !5934, line: 354, type: !662)
!6268 = !DILocalVariable(name: "prev_ok", scope: !6269, file: !5934, line: 359, type: !124, align: 1)
!6269 = distinct !DILexicalBlock(scope: !6259, file: !5934, line: 359, column: 5)
!6270 = !DILocalVariable(name: "i", scope: !6271, file: !5934, line: 360, type: !9, align: 8)
!6271 = distinct !DILexicalBlock(scope: !6269, file: !5934, line: 360, column: 5)
!6272 = !DILocalVariable(name: "c", scope: !6273, file: !5934, line: 370, type: !124, align: 1)
!6273 = distinct !DILexicalBlock(scope: !6271, file: !5934, line: 370, column: 9)
!6274 = !DILocalVariable(name: "cur_ok", scope: !6275, file: !5934, line: 371, type: !124, align: 1)
!6275 = distinct !DILexicalBlock(scope: !6273, file: !5934, line: 371, column: 9)
!6276 = !DILocalVariable(name: "strategy", scope: !6277, file: !5934, line: 403, type: !149, align: 1)
!6277 = distinct !DILexicalBlock(scope: !6271, file: !5934, line: 403, column: 5)
!6278 = !DILocation(line: 354, column: 21, scope: !6259)
!6279 = !DILocation(line: 359, column: 9, scope: !6269)
!6280 = !DILocation(line: 360, column: 9, scope: !6271)
!6281 = !DILocation(line: 371, column: 13, scope: !6275)
!6282 = !DILocation(line: 403, column: 9, scope: !6277)
!6283 = !DILocation(line: 359, column: 23, scope: !6259)
!6284 = !DILocation(line: 360, column: 17, scope: !6269)
!6285 = !DILocation(line: 362, column: 8, scope: !6271)
!6286 = !DILocation(line: 365, column: 9, scope: !6271)
!6287 = !DILocation(line: 366, column: 9, scope: !6271)
!6288 = !DILocation(line: 362, column: 5, scope: !6271)
!6289 = !DILocation(line: 369, column: 11, scope: !6271)
!6290 = !DILocation(line: 403, column: 23, scope: !6271)
!6291 = !DILocation(line: 370, column: 26, scope: !6271)
!6292 = !DILocation(line: 370, column: 17, scope: !6271)
!6293 = !DILocation(line: 370, column: 13, scope: !6273)
!6294 = !DILocation(line: 371, column: 26, scope: !6273)
!6295 = !DILocation(line: 373, column: 12, scope: !6275)
!6296 = !DILocation(line: 380, column: 17, scope: !6275)
!6297 = !DILocation(line: 378, column: 13, scope: !6275)
!6298 = !DILocation(line: 373, column: 9, scope: !6275)
!6299 = !DILocation(line: 391, column: 12, scope: !6275)
!6300 = !DILocation(line: 380, column: 16, scope: !6275)
!6301 = !DILocation(line: 383, column: 17, scope: !6275)
!6302 = !DILocation(line: 381, column: 17, scope: !6275)
!6303 = !DILocation(line: 380, column: 13, scope: !6275)
!6304 = !DILocation(line: 383, column: 16, scope: !6275)
!6305 = !DILocation(line: 386, column: 17, scope: !6275)
!6306 = !DILocation(line: 384, column: 17, scope: !6275)
!6307 = !DILocation(line: 383, column: 13, scope: !6275)
!6308 = !DILocation(line: 386, column: 16, scope: !6275)
!6309 = !DILocation(line: 387, column: 17, scope: !6275)
!6310 = !DILocation(line: 386, column: 13, scope: !6275)
!6311 = !DILocation(line: 398, column: 19, scope: !6275)
!6312 = !DILocation(line: 398, column: 9, scope: !6275)
!6313 = !DILocation(line: 399, column: 9, scope: !6275)
!6314 = !DILocation(line: 369, column: 5, scope: !6271)
!6315 = !DILocation(line: 405, column: 15, scope: !6271)
!6316 = !DILocation(line: 404, column: 9, scope: !6271)
!6317 = !DILocation(line: 403, column: 20, scope: !6271)
!6318 = !DILocation(line: 412, column: 19, scope: !6277)
!6319 = !DILocation(line: 412, column: 5, scope: !6277)
!6320 = !DILocation(line: 407, column: 15, scope: !6271)
!6321 = !DILocation(line: 406, column: 9, scope: !6271)
!6322 = !DILocation(line: 405, column: 12, scope: !6271)
!6323 = !DILocation(line: 410, column: 9, scope: !6271)
!6324 = !DILocation(line: 408, column: 9, scope: !6271)
!6325 = !DILocation(line: 413, column: 6, scope: !6277)
!6326 = !DILocation(line: 413, column: 9, scope: !6277)
!6327 = !DILocation(line: 413, column: 5, scope: !6277)
!6328 = !DILocation(line: 414, column: 2, scope: !6259)
!6329 = distinct !DISubprogram(name: "append_quoted_chunk", linkageName: "_ZN5shlex5bytes19append_quoted_chunk17h8ee57003bd7cce9cE", scope: !40, file: !5934, line: 416, type: !6330, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6332)
!6330 = !DISubroutineType(types: !6331)
!6331 = !{null, !656, !662, !149}
!6332 = !{!6333, !6334, !6335, !6336, !6338}
!6333 = !DILocalVariable(name: "out", arg: 1, scope: !6329, file: !5934, line: 416, type: !656)
!6334 = !DILocalVariable(name: "cur_chunk", arg: 2, scope: !6329, file: !5934, line: 416, type: !662)
!6335 = !DILocalVariable(name: "strategy", arg: 3, scope: !6329, file: !5934, line: 416, type: !149)
!6336 = !DILocalVariable(name: "iter", scope: !6337, file: !5934, line: 430, type: !324, align: 8)
!6337 = distinct !DILexicalBlock(scope: !6329, file: !5934, line: 430, column: 13)
!6338 = !DILocalVariable(name: "c", scope: !6339, file: !5934, line: 430, type: !124, align: 1)
!6339 = distinct !DILexicalBlock(scope: !6337, file: !5934, line: 430, column: 45)
!6340 = !DILocation(line: 416, column: 24, scope: !6329)
!6341 = !DILocation(line: 416, column: 43, scope: !6329)
!6342 = !DILocation(line: 416, column: 61, scope: !6329)
!6343 = !DILocation(line: 430, column: 23, scope: !6337)
!6344 = !DILocation(line: 417, column: 11, scope: !6329)
!6345 = !DILocation(line: 417, column: 5, scope: !6329)
!6346 = !DILocation(line: 419, column: 13, scope: !6329)
!6347 = !DILocation(line: 422, column: 25, scope: !6329)
!6348 = !DILocation(line: 428, column: 25, scope: !6329)
!6349 = !DILocation(line: 428, column: 13, scope: !6329)
!6350 = !DILocation(line: 429, column: 13, scope: !6329)
!6351 = !DILocation(line: 430, column: 23, scope: !6329)
!6352 = !DILocation(line: 430, column: 13, scope: !6337)
!6353 = !DILocation(line: 440, column: 13, scope: !6329)
!6354 = !DILocation(line: 430, column: 18, scope: !6337)
!6355 = !DILocation(line: 430, column: 18, scope: !6339)
!6356 = !DILocation(line: 431, column: 24, scope: !6339)
!6357 = !DILocation(line: 438, column: 17, scope: !6339)
!6358 = !DILocation(line: 435, column: 21, scope: !6339)
!6359 = !DILocation(line: 443, column: 2, scope: !6329)
!6360 = !DILocation(line: 422, column: 13, scope: !6329)
!6361 = !DILocation(line: 423, column: 13, scope: !6329)
!6362 = !DILocation(line: 424, column: 13, scope: !6329)
!6363 = !DILocation(line: 425, column: 13, scope: !6329)
!6364 = distinct !DISubprogram(name: "quote", linkageName: "_ZN5shlex5bytes5quote17hc5a527f2f8f7908cE", scope: !40, file: !5934, line: 484, type: !2344, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6365)
!6365 = !{!6366}
!6366 = !DILocalVariable(name: "in_bytes", arg: 1, scope: !6364, file: !5934, line: 484, type: !662)
!6367 = !DILocation(line: 484, column: 14, scope: !6364)
!6368 = !DILocation(line: 485, column: 5, scope: !6364)
!6369 = !DILocation(line: 486, column: 2, scope: !6364)
!6370 = distinct !DISubprogram(name: "try_quote", linkageName: "_ZN5shlex5bytes9try_quote17hfaa03ad89562c193E", scope: !40, file: !5934, line: 497, type: !6371, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6373)
!6371 = !DISubroutineType(types: !6372)
!6372 = !{!2040, !662}
!6373 = !{!6374}
!6374 = !DILocalVariable(name: "in_bytes", arg: 1, scope: !6370, file: !5934, line: 497, type: !662)
!6375 = !DILocation(line: 497, column: 18, scope: !6370)
!6376 = !DILocation(line: 498, column: 5, scope: !6370)
!6377 = !DILocation(line: 499, column: 2, scope: !6370)
!6378 = distinct !DISubprogram(name: "new", linkageName: "_ZN5shlex5Shlex3new17he724209e1fb6ac31E", scope: !318, file: !3574, line: 61, type: !6379, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6381)
!6379 = !DISubroutineType(types: !6380)
!6380 = !{!318, !695}
!6381 = !{!6382}
!6382 = !DILocalVariable(name: "in_str", arg: 1, scope: !6378, file: !3574, line: 61, type: !695)
!6383 = !DILocation(line: 61, column: 16, scope: !6378)
!6384 = !DILocalVariable(name: "self", arg: 1, scope: !6385, file: !6386, line: 323, type: !695)
!6385 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !6387, file: !6386, line: 323, type: !6388, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6390)
!6386 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "dd49fcee40af5f348df1f9868b20cc92")
!6387 = !DINamespace(name: "{impl#0}", scope: !1188)
!6388 = !DISubroutineType(types: !6389)
!6389 = !{!662, !695}
!6390 = !{!6384}
!6391 = !DILocation(line: 323, column: 27, scope: !6385, inlinedAt: !6392)
!6392 = distinct !DILocation(line: 62, column: 32, scope: !6378)
!6393 = !DILocation(line: 325, column: 18, scope: !6385, inlinedAt: !6392)
!6394 = !DILocation(line: 326, column: 6, scope: !6385, inlinedAt: !6392)
!6395 = !DILocation(line: 62, column: 32, scope: !6378)
!6396 = !DILocation(line: 62, column: 14, scope: !6378)
!6397 = !DILocation(line: 62, column: 9, scope: !6378)
!6398 = !DILocation(line: 63, column: 6, scope: !6378)
!6399 = distinct !DISubprogram(name: "next", linkageName: "_ZN71_$LT$shlex..Shlex$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6979e59542e021cbE", scope: !1979, file: !3574, line: 68, type: !6400, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6402)
!6400 = !DISubroutineType(types: !6401)
!6401 = !{!1058, !317}
!6402 = !{!6403}
!6403 = !DILocalVariable(name: "self", arg: 1, scope: !6399, file: !3574, line: 68, type: !317)
!6404 = !DILocation(line: 68, column: 13, scope: !6399)
!6405 = !DILocation(line: 69, column: 9, scope: !6399)
!6406 = !DILocation(line: 73, column: 6, scope: !6399)
!6407 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN71_$LT$shlex..Shlex$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hf4992ab11c7d8383E", scope: !1978, file: !3574, line: 69, type: !6408, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6410)
!6408 = !DISubroutineType(types: !6409)
!6409 = !{!283, !1977, !287}
!6410 = !{!6411, !6412}
!6411 = !DILocalVariable(name: "byte_word", arg: 2, scope: !6407, file: !3574, line: 69, type: !287)
!6412 = !DILocalVariable(arg: 1, scope: !6407, file: !3574, line: 69, type: !1977)
!6413 = !DILocation(line: 69, column: 27, scope: !6407)
!6414 = !DILocation(line: 69, column: 28, scope: !6407)
!6415 = !DILocation(line: 71, column: 50, scope: !6407)
!6416 = !DILocation(line: 71, column: 22, scope: !6407)
!6417 = !DILocation(line: 69, column: 38, scope: !6407)
!6418 = distinct !DISubprogram(name: "deref", linkageName: "_ZN56_$LT$shlex..Shlex$u20$as$u20$core..ops..deref..Deref$GT$5deref17h261d70947cc36f8fE", scope: !6419, file: !3574, line: 79, type: !6420, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6422)
!6419 = !DINamespace(name: "{impl#2}", scope: !13)
!6420 = !DISubroutineType(types: !6421)
!6421 = !{!1254, !1244}
!6422 = !{!6423}
!6423 = !DILocalVariable(name: "self", arg: 1, scope: !6418, file: !3574, line: 79, type: !1244)
!6424 = !DILocation(line: 79, column: 14, scope: !6418)
!6425 = !DILocation(line: 80, column: 9, scope: !6418)
!6426 = !DILocation(line: 81, column: 6, scope: !6418)
!6427 = distinct !DISubprogram(name: "deref_mut", linkageName: "_ZN59_$LT$shlex..Shlex$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h241d997cae43b6dcE", scope: !6428, file: !3574, line: 85, type: !6429, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6431)
!6428 = !DINamespace(name: "{impl#3}", scope: !13)
!6429 = !DISubroutineType(types: !6430)
!6430 = !{!476, !317}
!6431 = !{!6432}
!6432 = !DILocalVariable(name: "self", arg: 1, scope: !6427, file: !3574, line: 85, type: !317)
!6433 = !DILocation(line: 85, column: 18, scope: !6427)
!6434 = !DILocation(line: 86, column: 9, scope: !6427)
!6435 = !DILocation(line: 87, column: 6, scope: !6427)
!6436 = distinct !DISubprogram(name: "split", linkageName: "_ZN5shlex5split17h66c3dc5de73b0dbdE", scope: !13, file: !3574, line: 92, type: !6437, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6450)
!6437 = !DISubroutineType(types: !6438)
!6438 = !{!6439, !695}
!6439 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::vec::Vec<alloc::string::String, alloc::alloc::Global>>", scope: !783, file: !2, size: 192, align: 64, elements: !6440, templateParams: !19, identifier: "f97bd2d1b0b21e49f16443793f565a81")
!6440 = !{!6441}
!6441 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6439, file: !2, size: 192, align: 64, elements: !6442, templateParams: !19, identifier: "8864d83093a7995e24b1516c9276217d", discriminator: !6449)
!6442 = !{!6443, !6445}
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6441, file: !2, baseType: !6444, size: 192, align: 64, extraData: i64 0)
!6444 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6439, file: !2, size: 192, align: 64, elements: !19, templateParams: !1042, identifier: "ea98c73d2322e76cea1c89159b9d58cb")
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6441, file: !2, baseType: !6446, size: 192, align: 64)
!6446 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6439, file: !2, size: 192, align: 64, elements: !6447, templateParams: !1042, identifier: "477448d9dd31155e12ec64dcd8580a76")
!6447 = !{!6448}
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6446, file: !2, baseType: !268, size: 192, align: 64)
!6449 = !DIDerivedType(tag: DW_TAG_member, scope: !6439, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!6450 = !{!6451, !6452, !6454}
!6451 = !DILocalVariable(name: "in_str", arg: 1, scope: !6436, file: !3574, line: 92, type: !695)
!6452 = !DILocalVariable(name: "shl", scope: !6453, file: !3574, line: 93, type: !318, align: 8)
!6453 = distinct !DILexicalBlock(scope: !6436, file: !3574, line: 93, column: 5)
!6454 = !DILocalVariable(name: "res", scope: !6455, file: !3574, line: 94, type: !268, align: 8)
!6455 = distinct !DILexicalBlock(scope: !6453, file: !3574, line: 94, column: 5)
!6456 = !DILocation(line: 92, column: 14, scope: !6436)
!6457 = !DILocation(line: 93, column: 9, scope: !6453)
!6458 = !DILocation(line: 94, column: 9, scope: !6455)
!6459 = !DILocation(line: 93, column: 9, scope: !6436)
!6460 = !DILocation(line: 93, column: 19, scope: !6436)
!6461 = !DILocation(line: 94, column: 15, scope: !6453)
!6462 = !DILocation(line: 95, column: 8, scope: !6455)
!6463 = !DILocation(line: 96, column: 1, scope: !6453)
!6464 = !DILocation(line: 92, column: 1, scope: !6436)
!6465 = !DILocation(line: 95, column: 43, scope: !6455)
!6466 = !DILocation(line: 95, column: 38, scope: !6455)
!6467 = !DILocation(line: 95, column: 5, scope: !6455)
!6468 = !DILocation(line: 95, column: 24, scope: !6455)
!6469 = !DILocation(line: 96, column: 2, scope: !6436)
!6470 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN56_$LT$shlex..QuoteError$u20$as$u20$core..fmt..Display$GT$3fmt17hb38ae021c7ed55cbE", scope: !6471, file: !3574, line: 120, type: !6472, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6475)
!6471 = !DINamespace(name: "{impl#4}", scope: !13)
!6472 = !DISubroutineType(types: !6473)
!6473 = !{!757, !6474, !774}
!6474 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&shlex::QuoteError", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!6475 = !{!6476, !6477}
!6476 = !DILocalVariable(name: "self", arg: 1, scope: !6470, file: !3574, line: 120, type: !6474)
!6477 = !DILocalVariable(name: "f", arg: 2, scope: !6470, file: !3574, line: 120, type: !774)
!6478 = !DILocation(line: 120, column: 12, scope: !6470)
!6479 = !DILocation(line: 120, column: 19, scope: !6470)
!6480 = !DILocation(line: 122, column: 32, scope: !6470)
!6481 = !DILocation(line: 124, column: 6, scope: !6470)
!6482 = distinct !DISubprogram(name: "new", linkageName: "_ZN5shlex6Quoter3new17hbc9cb6723d45ade4E", scope: !6483, file: !3574, line: 142, type: !6486, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !19)
!6483 = !DICompositeType(tag: DW_TAG_structure_type, name: "Quoter", scope: !13, file: !2, size: 8, align: 8, elements: !6484, templateParams: !19, identifier: "fc9fecc9c52061dcd9ea1b6639f0d1f0")
!6484 = !{!6485}
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !6483, file: !2, baseType: !39, size: 8, align: 8)
!6486 = !DISubroutineType(types: !6487)
!6487 = !{!6483}
!6488 = !DILocation(line: 143, column: 9, scope: !6482)
!6489 = !DILocation(line: 144, column: 6, scope: !6482)
!6490 = distinct !DISubprogram(name: "allow_nul", linkageName: "_ZN5shlex6Quoter9allow_nul17hf52ef9696cc698aeE", scope: !6483, file: !3574, line: 149, type: !6491, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6493)
!6491 = !DISubroutineType(types: !6492)
!6492 = !{!6483, !6483, !29}
!6493 = !{!6494, !6495}
!6494 = !DILocalVariable(name: "self", arg: 1, scope: !6490, file: !3574, line: 149, type: !6483)
!6495 = !DILocalVariable(name: "allow", arg: 2, scope: !6490, file: !3574, line: 149, type: !29)
!6496 = !DILocation(line: 149, column: 22, scope: !6490)
!6497 = !DILocation(line: 149, column: 32, scope: !6490)
!6498 = !DILocation(line: 150, column: 22, scope: !6490)
!6499 = !DILocation(line: 150, column: 9, scope: !6490)
!6500 = !DILocation(line: 151, column: 9, scope: !6490)
!6501 = !DILocation(line: 152, column: 6, scope: !6490)
!6502 = distinct !DISubprogram(name: "quote", linkageName: "_ZN5shlex6Quoter5quote17h3d843418da935af5E", scope: !6483, file: !3574, line: 163, type: !6503, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6506)
!6503 = !DISubroutineType(types: !6504)
!6504 = !{!678, !6505, !695}
!6505 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&shlex::Quoter", baseType: !6483, size: 64, align: 64, dwarfAddressSpace: 0)
!6506 = !{!6507, !6508, !6509, !6511, !6513, !6515}
!6507 = !DILocalVariable(name: "self", arg: 1, scope: !6502, file: !3574, line: 163, type: !6505)
!6508 = !DILocalVariable(name: "in_str", arg: 2, scope: !6502, file: !3574, line: 163, type: !695)
!6509 = !DILocalVariable(name: "residual", scope: !6510, file: !3574, line: 164, type: !714, align: 1)
!6510 = distinct !DILexicalBlock(scope: !6502, file: !3574, line: 164, column: 53)
!6511 = !DILocalVariable(name: "val", scope: !6512, file: !3574, line: 164, type: !2048, align: 8)
!6512 = distinct !DILexicalBlock(scope: !6502, file: !3574, line: 164, column: 18)
!6513 = !DILocalVariable(name: "out", scope: !6514, file: !3574, line: 165, type: !662, align: 8)
!6514 = distinct !DILexicalBlock(scope: !6502, file: !3574, line: 165, column: 13)
!6515 = !DILocalVariable(name: "out", scope: !6516, file: !3574, line: 169, type: !287, align: 8)
!6516 = distinct !DILexicalBlock(scope: !6502, file: !3574, line: 169, column: 13)
!6517 = !DILocation(line: 163, column: 22, scope: !6502)
!6518 = !DILocation(line: 163, column: 29, scope: !6502)
!6519 = !DILocation(line: 164, column: 53, scope: !6510)
!6520 = !DILocation(line: 164, column: 18, scope: !6512)
!6521 = !DILocation(line: 169, column: 24, scope: !6516)
!6522 = !DILocation(line: 323, column: 27, scope: !6385, inlinedAt: !6523)
!6523 = distinct !DILocation(line: 164, column: 35, scope: !6502)
!6524 = !DILocation(line: 325, column: 18, scope: !6385, inlinedAt: !6523)
!6525 = !DILocation(line: 326, column: 6, scope: !6385, inlinedAt: !6523)
!6526 = !DILocation(line: 164, column: 35, scope: !6502)
!6527 = !DILocation(line: 164, column: 18, scope: !6502)
!6528 = !DILocation(line: 164, column: 12, scope: !6502)
!6529 = !DILocation(line: 164, column: 18, scope: !6510)
!6530 = !DILocation(line: 174, column: 6, scope: !6502)
!6531 = !DILocation(line: 165, column: 27, scope: !6502)
!6532 = !DILocation(line: 165, column: 27, scope: !6514)
!6533 = !DILocation(line: 167, column: 26, scope: !6514)
!6534 = !DILocation(line: 169, column: 24, scope: !6502)
!6535 = !DILocation(line: 171, column: 54, scope: !6516)
!6536 = !DILocation(line: 171, column: 26, scope: !6516)
!6537 = !DILocation(line: 171, column: 17, scope: !6516)
!6538 = !DILocation(line: 164, column: 9, scope: !6502)
!6539 = !DILocation(line: 167, column: 17, scope: !6514)
!6540 = distinct !DISubprogram(name: "from", linkageName: "_ZN81_$LT$shlex..Quoter$u20$as$u20$core..convert..From$LT$shlex..bytes..Quoter$GT$$GT$4from17hf153c8106a93afa8E", scope: !6541, file: !3574, line: 178, type: !6542, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6544)
!6541 = !DINamespace(name: "{impl#7}", scope: !13)
!6542 = !DISubroutineType(types: !6543)
!6543 = !{!6483, !39}
!6544 = !{!6545}
!6545 = !DILocalVariable(name: "inner", arg: 1, scope: !6540, file: !3574, line: 178, type: !39)
!6546 = !DILocation(line: 178, column: 13, scope: !6540)
!6547 = !DILocation(line: 179, column: 9, scope: !6540)
!6548 = !DILocation(line: 180, column: 6, scope: !6540)
!6549 = distinct !DISubprogram(name: "from", linkageName: "_ZN5shlex91_$LT$impl$u20$core..convert..From$LT$shlex..Quoter$GT$$u20$for$u20$shlex..bytes..Quoter$GT$4from17hc2a3c465954bfb54E", scope: !6550, file: !3574, line: 184, type: !6551, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6553)
!6550 = !DINamespace(name: "{impl#8}", scope: !13)
!6551 = !DISubroutineType(types: !6552)
!6552 = !{!39, !6483}
!6553 = !{!6554}
!6554 = !DILocalVariable(name: "quoter", arg: 1, scope: !6549, file: !3574, line: 184, type: !6483)
!6555 = !DILocation(line: 184, column: 13, scope: !6549)
!6556 = !DILocation(line: 186, column: 6, scope: !6549)
!6557 = distinct !DISubprogram(name: "quote", linkageName: "_ZN5shlex5quote17hb75e8f7ea673c007E", scope: !13, file: !3574, line: 228, type: !2322, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6558)
!6558 = !{!6559}
!6559 = !DILocalVariable(name: "in_str", arg: 1, scope: !6557, file: !3574, line: 228, type: !695)
!6560 = !DILocation(line: 228, column: 14, scope: !6557)
!6561 = !DILocation(line: 229, column: 5, scope: !6557)
!6562 = !DILocation(line: 230, column: 2, scope: !6557)
!6563 = distinct !DISubprogram(name: "try_quote", linkageName: "_ZN5shlex9try_quote17h27c7dbe72f16afa6E", scope: !13, file: !3574, line: 241, type: !6564, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6566)
!6564 = !DISubroutineType(types: !6565)
!6565 = !{!678, !695}
!6566 = !{!6567}
!6567 = !DILocalVariable(name: "in_str", arg: 1, scope: !6563, file: !3574, line: 241, type: !695)
!6568 = !DILocation(line: 241, column: 18, scope: !6563)
!6569 = !DILocation(line: 242, column: 5, scope: !6563)
!6570 = !DILocation(line: 243, column: 2, scope: !6563)
!6571 = distinct !DISubprogram(name: "default", linkageName: "_ZN63_$LT$shlex..bytes..Quoter$u20$as$u20$core..default..Default$GT$7default17h2a83d232dbe3a039E", scope: !6572, file: !5934, line: 170, type: !6142, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !19)
!6572 = !DINamespace(name: "{impl#3}", scope: !40)
!6573 = !DILocation(line: 172, column: 5, scope: !6571)
!6574 = !DILocation(line: 170, column: 10, scope: !6571)
!6575 = !DILocation(line: 170, column: 17, scope: !6571)
!6576 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN57_$LT$shlex..bytes..Quoter$u20$as$u20$core..fmt..Debug$GT$3fmt17h6f5ef6df0f0025f4E", scope: !6577, file: !5934, line: 170, type: !6578, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6580)
!6577 = !DINamespace(name: "{impl#4}", scope: !40)
!6578 = !DISubroutineType(types: !6579)
!6579 = !{!757, !38, !774}
!6580 = !{!6581, !6582}
!6581 = !DILocalVariable(name: "self", arg: 1, scope: !6576, file: !5934, line: 170, type: !38)
!6582 = !DILocalVariable(name: "f", arg: 2, scope: !6576, file: !5934, line: 170, type: !774)
!6583 = !DILocation(line: 170, column: 19, scope: !6576)
!6584 = !DILocation(line: 172, column: 5, scope: !6576)
!6585 = !DILocation(line: 170, column: 24, scope: !6576)
!6586 = distinct !DISubprogram(name: "eq", linkageName: "_ZN70_$LT$shlex..bytes..QuotingStrategy$u20$as$u20$core..cmp..PartialEq$GT$2eq17h8b7eb91020b6de4fE", scope: !6587, file: !5934, line: 234, type: !6588, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6591)
!6587 = !DINamespace(name: "{impl#7}", scope: !40)
!6588 = !DISubroutineType(types: !6589)
!6589 = !{!29, !6590, !6590}
!6590 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&shlex::bytes::QuotingStrategy", baseType: !149, size: 64, align: 64, dwarfAddressSpace: 0)
!6591 = !{!6592, !6593, !6594, !6596}
!6592 = !DILocalVariable(name: "self", arg: 1, scope: !6586, file: !5934, line: 234, type: !6590)
!6593 = !DILocalVariable(name: "other", arg: 2, scope: !6586, file: !5934, line: 234, type: !6590)
!6594 = !DILocalVariable(name: "__self_tag", scope: !6595, file: !5934, line: 234, type: !223, align: 8)
!6595 = distinct !DILexicalBlock(scope: !6586, file: !5934, line: 234, column: 10)
!6596 = !DILocalVariable(name: "__arg1_tag", scope: !6597, file: !5934, line: 234, type: !223, align: 8)
!6597 = distinct !DILexicalBlock(scope: !6595, file: !5934, line: 234, column: 10)
!6598 = !DILocation(line: 234, column: 10, scope: !6586)
!6599 = !DILocation(line: 234, column: 10, scope: !6595)
!6600 = !DILocation(line: 234, column: 10, scope: !6597)
!6601 = !DILocation(line: 234, column: 19, scope: !6586)
!6602 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN54_$LT$shlex..QuoteError$u20$as$u20$core..fmt..Debug$GT$3fmt17h8843ef8720553fd3E", scope: !6603, file: !3574, line: 110, type: !6472, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6604)
!6603 = !DINamespace(name: "{impl#9}", scope: !13)
!6604 = !{!6605, !6606}
!6605 = !DILocalVariable(name: "self", arg: 1, scope: !6602, file: !3574, line: 110, type: !6474)
!6606 = !DILocalVariable(name: "f", arg: 2, scope: !6602, file: !3574, line: 110, type: !774)
!6607 = !DILocation(line: 110, column: 10, scope: !6602)
!6608 = !DILocation(line: 110, column: 15, scope: !6602)
!6609 = distinct !DISubprogram(name: "default", linkageName: "_ZN56_$LT$shlex..Quoter$u20$as$u20$core..default..Default$GT$7default17hac2f4ca3deae22ffE", scope: !6610, file: !3574, line: 134, type: !6486, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !19)
!6610 = !DINamespace(name: "{impl#19}", scope: !13)
!6611 = !DILocation(line: 136, column: 5, scope: !6609)
!6612 = !DILocation(line: 134, column: 10, scope: !6609)
!6613 = !DILocation(line: 134, column: 17, scope: !6609)
!6614 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN50_$LT$shlex..Quoter$u20$as$u20$core..fmt..Debug$GT$3fmt17h9b3ad2121ba6c26cE", scope: !6615, file: !3574, line: 134, type: !6616, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !47, templateParams: !19, retainedNodes: !6618)
!6615 = !DINamespace(name: "{impl#20}", scope: !13)
!6616 = !DISubroutineType(types: !6617)
!6617 = !{!757, !6505, !774}
!6618 = !{!6619, !6620}
!6619 = !DILocalVariable(name: "self", arg: 1, scope: !6614, file: !3574, line: 134, type: !6505)
!6620 = !DILocalVariable(name: "f", arg: 2, scope: !6614, file: !3574, line: 134, type: !774)
!6621 = !DILocation(line: 134, column: 19, scope: !6614)
!6622 = !DILocation(line: 136, column: 5, scope: !6614)
!6623 = !DILocation(line: 134, column: 24, scope: !6614)
