; ModuleID = 'f128_internal.55a143e5-cgu.0'
source_filename = "f128_internal.55a143e5-cgu.0"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"core::panic::location::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"alloc::string::String" = type { %"alloc::vec::Vec<u8>" }
%"alloc::vec::Vec<u8>" = type { { i8*, i64 }, i64 }
%"core::ffi::c_str::CStr" = type { [0 x i8] }
%"core::fmt::Opaque" = type {}
%"core::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%"core::fmt::Arguments" = type { { [0 x { [0 x i8]*, i64 }]*, i64 }, { i64*, i64 }, { [0 x { i8*, i64* }]*, i64 } }
%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>" = type { i64, [4 x i64] }
%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Err" = type { [1 x i64], %"alloc::ffi::c_str::NulError" }
%"alloc::ffi::c_str::NulError" = type { i64, %"alloc::vec::Vec<u8>" }
%"core::str::error::Utf8Error" = type { i64, { i8, i8 }, [6 x i8] }
%"core::ptr::metadata::PtrComponents<u8>" = type { {}*, {} }
%"core::ptr::metadata::PtrRepr<u8>" = type { [1 x i64] }
%"core::alloc::layout::LayoutError" = type {}
%"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"f128_t::f128" = type { [16 x i8] }
%"core::option::Option<f128_t::f128>" = type { i8, [16 x i8] }
%"core::option::Option<f128_t::f128>::Some" = type { [1 x i8], %"f128_t::f128" }
%"core::result::Result<&str, core::str::error::Utf8Error>" = type { i64, [2 x i64] }
%"core::result::Result<&str, core::str::error::Utf8Error>::Ok" = type { [1 x i64], { [0 x i8]*, i64 } }
%"core::result::Result<&str, core::str::error::Utf8Error>::Err" = type { [1 x i64], %"core::str::error::Utf8Error" }
%"core::alloc::AllocError" = type {}
%"alloc::alloc::Global" = type {}
%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]" = type { i8**, i8**, i64* }
%"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>" = type { [2 x i64], i64 }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some" = type { { i8*, { i64, i64 } } }
%"core::option::Option<alloc::string::String>" = type { {}*, [2 x i64] }
%"core::option::Option<alloc::string::String>::Some" = type { %"alloc::string::String" }
%"ffi::Wrapper" = type { [16 x i8] }
%"core::result::Result<f128_t::f128, ()>" = type { i8, [16 x i8] }
%"unwind::libunwind::_Unwind_Exception" = type { i64, void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [6 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

@alloc998 = private unnamed_addr constant <{}> zeroinitializer, align 8
@alloc505 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc506 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc505, i32 0, i32 0, i32 0), [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc1174 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/mod.rs" }>, align 1
@alloc1175 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1174, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\88\01\00\00\0D\00\00\00" }>, align 8
@alloc1176 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Option::unwrap()` on a `None` value" }>, align 1
@alloc1177 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@vtable.0 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (%"core::str::error::Utf8Error"*)* @"_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17h729935f6d7a41ec4E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"core::str::error::Utf8Error"*, %"core::fmt::Formatter"*)* @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hcce91d8033863515E" to i8*) }>, align 8, !dbg !0
@alloc1181 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"%Qg" }>, align 1
@alloc491 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"%." }>, align 1
@alloc493 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"Qg" }>, align 1
@alloc492 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc491, i32 0, i32 0, i32 0), [8 x i8] c"\02\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc493, i32 0, i32 0, i32 0), [8 x i8] c"\02\00\00\00\00\00\00\00" }>, align 8
@alloc499 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* bitcast (<{}>* @alloc998 to i8*), [8 x i8] zeroinitializer }>, align 8
@alloc519 = private unnamed_addr constant <{ [16 x i8] }> zeroinitializer, align 1
@alloc912 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80" }>, align 1
@0 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\FF?" }>, align 1
@alloc1182 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"not implemented" }>, align 1
@alloc1247 = private unnamed_addr constant <{ [97 x i8] }> <{ [97 x i8] c"/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/f128_internal-0.2.2/src/f128_impl.rs" }>, align 1
@alloc1184 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00\95\00\00\00\09\00\00\00" }>, align 8
@alloc901 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\7F" }>, align 1
@alloc867 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\FF\7F" }>, align 1
@1 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\FF\FF" }>, align 1
@2 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FE\FF" }>, align 1
@3 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FE\7F" }>, align 1
@4 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01" }>, align 1
@alloc1185 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"internal error: entered unreachable code" }>, align 1
@alloc1187 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00\84\01\00\00\12\00\00\00" }>, align 8
@alloc1189 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00\96\01\00\00\16\00\00\00" }>, align 8
@str.1 = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc1191 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00\AF\01\00\00'\00\00\00" }>, align 8
@alloc992 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"not implemented: " }>, align 1
@alloc993 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [17 x i8] }>, <{ [17 x i8] }>* @alloc992, i32 0, i32 0, i32 0), [8 x i8] c"\11\00\00\00\00\00\00\00" }>, align 8
@alloc995 = private unnamed_addr constant <{ [109 x i8] }> <{ [109 x i8] c"This function cannot be accurately implemented with num v0.2.6 - the mantissa type needs to be upped to u128." }>, align 1
@alloc996 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [109 x i8] }>, <{ [109 x i8] }>* @alloc995, i32 0, i32 0, i32 0), [8 x i8] c"m\00\00\00\00\00\00\00" }>, align 8
@alloc1193 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00\22\02\00\00\09\00\00\00" }>, align 8
@alloc1194 = private unnamed_addr constant <{ [23 x i8] }> <{ [23 x i8] c"assertion failed: n > 0" }>, align 1
@alloc1199 = private unnamed_addr constant <{ [94 x i8] }> <{ [94 x i8] c"/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/f128_internal-0.2.2/src/f128_t.rs" }>, align 1
@alloc1196 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc1199, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\D6\00\00\00\09\00\00\00" }>, align 8
@alloc1198 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc1199, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\D8\00\00\00!\00\00\00" }>, align 8
@alloc1200 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc1199, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\D8\00\00\00+\00\00\00" }>, align 8
@alloc1088 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\00\00" }>, align 1
@alloc1202 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00l\02\00\00\01\00\00\00" }>, align 8
@str.2 = internal constant [36 x i8] c"attempt to shift right with overflow"
@alloc1204 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00m\02\00\00\01\00\00\00" }>, align 8
@alloc1206 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00n\02\00\00\01\00\00\00" }>, align 8
@alloc1208 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00o\02\00\00\01\00\00\00" }>, align 8
@alloc1210 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00p\02\00\00\01\00\00\00" }>, align 8
@alloc1212 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00q\02\00\00\01\00\00\00" }>, align 8
@alloc1214 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00s\02\00\00\01\00\00\00" }>, align 8
@alloc1216 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00t\02\00\00\01\00\00\00" }>, align 8
@alloc1218 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00u\02\00\00\01\00\00\00" }>, align 8
@alloc1220 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00v\02\00\00\01\00\00\00" }>, align 8
@alloc1222 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00w\02\00\00\01\00\00\00" }>, align 8
@alloc1224 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00x\02\00\00\01\00\00\00" }>, align 8
@alloc1226 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00\A5\02\00\00\01\00\00\00" }>, align 8
@str.3 = internal constant [35 x i8] c"attempt to shift left with overflow"
@alloc1228 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00\A6\02\00\00\01\00\00\00" }>, align 8
@alloc1230 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00\A7\02\00\00\01\00\00\00" }>, align 8
@alloc1232 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00\A8\02\00\00\01\00\00\00" }>, align 8
@alloc1234 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00\A9\02\00\00\01\00\00\00" }>, align 8
@alloc1236 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00\AA\02\00\00\01\00\00\00" }>, align 8
@alloc1238 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00\AC\02\00\00\01\00\00\00" }>, align 8
@alloc1240 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00\AD\02\00\00\01\00\00\00" }>, align 8
@alloc1242 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00\AE\02\00\00\01\00\00\00" }>, align 8
@alloc1244 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00\AF\02\00\00\01\00\00\00" }>, align 8
@alloc1246 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00\B0\02\00\00\01\00\00\00" }>, align 8
@alloc1248 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [97 x i8] }>, <{ [97 x i8] }>* @alloc1247, i32 0, i32 0, i32 0), [16 x i8] c"a\00\00\00\00\00\00\00\B1\02\00\00\01\00\00\00" }>, align 8

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h3c5f3b3dceabe859E"(i64 %self.0, i64 %self.1, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !142 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !176, metadata !DIExpression()), !dbg !178
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !177, metadata !DIExpression()), !dbg !179
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !180
  br i1 %_3, label %bb1, label %bb2, !dbg !180

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !181
  br i1 %_9, label %bb3, label %bb4, !dbg !181

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17ha5ea6a931f940f05E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0) #12, !dbg !182
  unreachable, !dbg !182

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %5 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h027adc00ed696f09E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1), !dbg !183
  %_17.0 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !183
  %_17.1 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !183
  br label %bb5, !dbg !183

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hc132699ea07ad3eeE(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) #12, !dbg !184
  unreachable, !dbg !184

bb5:                                              ; preds = %bb4
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_17.0, 0, !dbg !185
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %_17.1, 1, !dbg !185
  ret { [0 x i8]*, i64 } %7, !dbg !185
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17he45df862cf1057e5E"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !186 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !194, metadata !DIExpression()), !dbg !196
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !195, metadata !DIExpression()), !dbg !197
  %3 = bitcast { i64, i64 }* %_3 to i64*, !dbg !198
  store i64 0, i64* %3, align 8, !dbg !198
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !198
  store i64 %self, i64* %4, align 8, !dbg !198
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !198
  %6 = load i64, i64* %5, align 8, !dbg !198
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !198
  %8 = load i64, i64* %7, align 8, !dbg !198
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %9 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h3c5f3b3dceabe859E"(i64 %6, i64 %8, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0), !dbg !198
  %10 = extractvalue { [0 x i8]*, i64 } %9, 0, !dbg !198
  %11 = extractvalue { [0 x i8]*, i64 } %9, 1, !dbg !198
  br label %bb1, !dbg !198

bb1:                                              ; preds = %start
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %10, 0, !dbg !199
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %11, 1, !dbg !199
  ret { [0 x i8]*, i64 } %13, !dbg !199
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17hd5d28fb461c84be2E"(i8* %unique) unnamed_addr #0 !dbg !200 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %unique.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  store i8* %unique, i8** %unique.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %unique.dbg.spill, metadata !219, metadata !DIExpression()), !dbg !220
  store i8* %unique, i8** %self.dbg.spill, align 8, !dbg !221
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !222, metadata !DIExpression()), !dbg !230
  store i8* %unique, i8** %self.dbg.spill1, align 8, !dbg !230
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !231, metadata !DIExpression()), !dbg !236
  store i8* %unique, i8** %ptr.dbg.spill, align 8, !dbg !236
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !238, metadata !DIExpression()), !dbg !243
  store i8* %unique, i8** %0, align 8, !dbg !243
  %1 = load i8*, i8** %0, align 8, !dbg !245, !nonnull !26, !noundef !26
  ret i8* %1, !dbg !245
}

; <i32 as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN47_$LT$i32$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hd7c3dd047be86f92E"(i32 %start1, i64 %n) unnamed_addr #0 !dbg !246 {
start:
  %0 = alloca i32, align 4
  %rhs.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca i32, align 4
  %n.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i32, align 4
  store i32 %start1, i32* %start.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %start.dbg.spill, metadata !255, metadata !DIExpression()), !dbg !257
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !256, metadata !DIExpression()), !dbg !258
  store i32 %start1, i32* %self.dbg.spill, align 4, !dbg !259
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill, metadata !260, metadata !DIExpression()), !dbg !269
  %rhs = trunc i64 %n to i32, !dbg !270
  store i32 %rhs, i32* %rhs.dbg.spill, align 4, !dbg !270
  call void @llvm.dbg.declare(metadata i32* %rhs.dbg.spill, metadata !268, metadata !DIExpression()), !dbg !269
  %1 = add nsw i32 %start1, %rhs, !dbg !269
  store i32 %1, i32* %0, align 4, !dbg !269
  %2 = load i32, i32* %0, align 4, !dbg !269
  br label %bb1, !dbg !269

bb1:                                              ; preds = %start
  ret i32 %2, !dbg !271
}

; <i64 as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN47_$LT$i64$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h4e4bc69ac704d107E"(i64 %start1, i64 %n) unnamed_addr #0 !dbg !272 {
start:
  %0 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  store i64 %start1, i64* %start.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !278, metadata !DIExpression()), !dbg !280
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !279, metadata !DIExpression()), !dbg !281
  store i64 %start1, i64* %self.dbg.spill, align 8, !dbg !282
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !283, metadata !DIExpression()), !dbg !291
  store i64 %n, i64* %rhs.dbg.spill, align 8, !dbg !292
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !290, metadata !DIExpression()), !dbg !291
  %1 = add nsw i64 %start1, %n, !dbg !291
  store i64 %1, i64* %0, align 8, !dbg !291
  %2 = load i64, i64* %0, align 8, !dbg !291
  br label %bb1, !dbg !291

bb1:                                              ; preds = %start
  ret i64 %2, !dbg !293
}

; <str as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN47_$LT$str$u20$as$u20$alloc..string..ToString$GT$9to_string17hb40005f8b224a7a6E"(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !294 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_9 = alloca %"alloc::vec::Vec<u8>", align 8
  %bytes = alloca %"alloc::vec::Vec<u8>", align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !318, metadata !DIExpression()), !dbg !319
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %bytes, metadata !320, metadata !DIExpression()), !dbg !325
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0, !dbg !340
  store [0 x i8]* %self.0, [0 x i8]** %4, align 8, !dbg !340
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1, !dbg !340
  store i64 %self.1, i64* %5, align 8, !dbg !340
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !338, metadata !DIExpression()), !dbg !341
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !341
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8, !dbg !341
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !341
  store i64 %self.1, i64* %7, align 8, !dbg !341
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !332, metadata !DIExpression()), !dbg !342
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !342
  store [0 x i8]* %self.0, [0 x i8]** %8, align 8, !dbg !342
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !342
  store i64 %self.1, i64* %9, align 8, !dbg !342
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !343, metadata !DIExpression()), !dbg !351
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !351
  store [0 x i8]* %self.0, [0 x i8]** %10, align 8, !dbg !351
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !351
  store i64 %self.1, i64* %11, align 8, !dbg !351
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !351
  %_6.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !dbg !351, !nonnull !26, !align !353, !noundef !26
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !351
  %_6.1 = load i64, i64* %13, align 8, !dbg !351
  br label %bb2, !dbg !351

bb2:                                              ; preds = %start
; call alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned
  call void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17hd771beb52e788fccE"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %bytes, [0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !342
  br label %bb1, !dbg !342

bb1:                                              ; preds = %bb2
  %14 = bitcast %"alloc::vec::Vec<u8>"* %_9 to i8*, !dbg !325
  %15 = bitcast %"alloc::vec::Vec<u8>"* %bytes to i8*, !dbg !325
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false), !dbg !325
  %16 = bitcast %"alloc::string::String"* %0 to %"alloc::vec::Vec<u8>"*, !dbg !325
  %17 = bitcast %"alloc::vec::Vec<u8>"* %16 to i8*, !dbg !325
  %18 = bitcast %"alloc::vec::Vec<u8>"* %_9 to i8*, !dbg !325
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false), !dbg !325
  ret void, !dbg !354
}

; core::intrinsics::const_eval_select
; Function Attrs: inlinehint nonlazybind uwtable
define { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core10intrinsics17const_eval_select17h9e040f661d44916eE(i8* align 1 %arg.0, i64 %arg.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !355 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %called_at_rt.dbg.spill = alloca {}, align 1
  %_called_in_const.dbg.spill = alloca {}, align 1
  %arg.dbg.spill = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %arg.dbg.spill, i32 0, i32 0
  store i8* %arg.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %arg.dbg.spill, i32 0, i32 1
  store i64 %arg.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %arg.dbg.spill, metadata !377, metadata !DIExpression()), !dbg !385
  call void @llvm.dbg.declare(metadata {}* %_called_in_const.dbg.spill, metadata !378, metadata !DIExpression()), !dbg !386
  call void @llvm.dbg.declare(metadata {}* %called_at_rt.dbg.spill, metadata !379, metadata !DIExpression()), !dbg !387
  %3 = bitcast i8* %arg.0 to [0 x i8]*, !dbg !388
; invoke core::ops::function::FnOnce::call_once
  %4 = invoke { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core3ops8function6FnOnce9call_once17hce1361e6c4a1da9eE([0 x i8]* align 1 %3, i64 %arg.1)
          to label %bb1 unwind label %cleanup, !dbg !388

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !389

cleanup:                                          ; preds = %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %10 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %4, 0, !dbg !388
  %11 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %4, 1, !dbg !388
  br label %bb2, !dbg !389

bb4:                                              ; preds = %bb3
  %12 = bitcast { i8*, i32 }* %0 to i8**, !dbg !390
  %13 = load i8*, i8** %12, align 8, !dbg !390
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !390
  %15 = load i32, i32* %14, align 8, !dbg !390
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0, !dbg !390
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1, !dbg !390
  resume { i8*, i32 } %17, !dbg !390

bb2:                                              ; preds = %bb1
  %18 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } undef, %"core::ffi::c_str::CStr"* %10, 0, !dbg !391
  %19 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } %18, i64 %11, 1, !dbg !391
  ret { %"core::ffi::c_str::CStr"*, i64 } %19, !dbg !391
}

; core::cmp::impls::<impl core::cmp::PartialOrd for i32>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i32$GT$2lt17h1ca8a2a386635526E"(i32* align 4 %self, i32* align 4 %other) unnamed_addr #0 !dbg !392 {
start:
  %other.dbg.spill = alloca i32*, align 8
  %self.dbg.spill = alloca i32*, align 8
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !401, metadata !DIExpression()), !dbg !403
  store i32* %other, i32** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %other.dbg.spill, metadata !402, metadata !DIExpression()), !dbg !404
  %_3 = load i32, i32* %self, align 4, !dbg !405
  %_4 = load i32, i32* %other, align 4, !dbg !406
  %0 = icmp slt i32 %_3, %_4, !dbg !405
  ret i1 %0, !dbg !407
}

; core::cmp::impls::<impl core::cmp::PartialOrd for i64>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i64$GT$2lt17hcc3df5354789fbccE"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #0 !dbg !408 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !414, metadata !DIExpression()), !dbg !416
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !415, metadata !DIExpression()), !dbg !417
  %_3 = load i64, i64* %self, align 8, !dbg !418
  %_4 = load i64, i64* %other, align 8, !dbg !419
  %0 = icmp slt i64 %_3, %_4, !dbg !418
  ret i1 %0, !dbg !420
}

; core::ffi::c_str::CStr::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN4core3ffi5c_str4CStr6as_ptr17h5d031a68d4be8406E(%"core::ffi::c_str::CStr"* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !421 {
start:
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { %"core::ffi::c_str::CStr"*, i64 }, align 8
  %0 = getelementptr inbounds { %"core::ffi::c_str::CStr"*, i64 }, { %"core::ffi::c_str::CStr"*, i64 }* %self.dbg.spill, i32 0, i32 0
  store %"core::ffi::c_str::CStr"* %self.0, %"core::ffi::c_str::CStr"** %0, align 8
  %1 = getelementptr inbounds { %"core::ffi::c_str::CStr"*, i64 }, { %"core::ffi::c_str::CStr"*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { %"core::ffi::c_str::CStr"*, i64 }* %self.dbg.spill, metadata !427, metadata !DIExpression()), !dbg !428
  %self.01 = bitcast %"core::ffi::c_str::CStr"* %self.0 to [0 x i8]*, !dbg !429
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !429
  store [0 x i8]* %self.01, [0 x i8]** %2, align 8, !dbg !429
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !429
  store i64 %self.1, i64* %3, align 8, !dbg !429
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !430, metadata !DIExpression()), !dbg !445
  %4 = bitcast [0 x i8]* %self.01 to i8*, !dbg !445
  ret i8* %4, !dbg !446
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h8f611a8e12f0c43cE(%"alloc::string::String"* align 8 %x) unnamed_addr #0 !dbg !447 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca %"alloc::string::String"*, align 8
  %x.dbg.spill = alloca %"alloc::string::String"*, align 8
  %2 = alloca { i8*, i64* }, align 8
  store %"alloc::string::String"* %x, %"alloc::string::String"** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %x.dbg.spill, metadata !514, metadata !DIExpression()), !dbg !517
  store %"alloc::string::String"* %x, %"alloc::string::String"** %x.dbg.spill1, align 8, !dbg !518
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %x.dbg.spill1, metadata !519, metadata !DIExpression()), !dbg !528
  store i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)* @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h85117fc00f0a3c97E", i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !530
  call void @llvm.dbg.declare(metadata i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !527, metadata !DIExpression()), !dbg !528
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)* @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h85117fc00f0a3c97E" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !528
  %_4 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !528, !nonnull !26, !noundef !26
  br label %bb1, !dbg !528

bb1:                                              ; preds = %start
  %3 = bitcast %"alloc::string::String"* %x to %"core::fmt::Opaque"*, !dbg !528
  store %"core::fmt::Opaque"* %3, %"core::fmt::Opaque"** %0, align 8, !dbg !528
  %_6 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !528, !nonnull !26, !align !353, !noundef !26
  br label %bb2, !dbg !528

bb2:                                              ; preds = %bb1
  %4 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**, !dbg !528
  store %"core::fmt::Opaque"* %_6, %"core::fmt::Opaque"** %4, align 8, !dbg !528
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !528
  %6 = bitcast i64** %5 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !528
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_4, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !528
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !531
  %8 = load i8*, i8** %7, align 8, !dbg !531, !nonnull !26, !align !353, !noundef !26
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !531
  %10 = load i64*, i64** %9, align 8, !dbg !531, !nonnull !26, !noundef !26
  %11 = insertvalue { i8*, i64* } undef, i8* %8, 0, !dbg !531
  %12 = insertvalue { i8*, i64* } %11, i64* %10, 1, !dbg !531
  ret { i8*, i64* } %12, !dbg !531
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hbe3bcef2e7e6b961E(%"core::fmt::Arguments"* align 8 %x) unnamed_addr #0 !dbg !532 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (%"core::fmt::Arguments"*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca %"core::fmt::Arguments"*, align 8
  %x.dbg.spill = alloca %"core::fmt::Arguments"*, align 8
  %2 = alloca { i8*, i64* }, align 8
  store %"core::fmt::Arguments"* %x, %"core::fmt::Arguments"** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Arguments"** %x.dbg.spill, metadata !596, metadata !DIExpression()), !dbg !599
  store %"core::fmt::Arguments"* %x, %"core::fmt::Arguments"** %x.dbg.spill1, align 8, !dbg !600
  call void @llvm.dbg.declare(metadata %"core::fmt::Arguments"** %x.dbg.spill1, metadata !601, metadata !DIExpression()), !dbg !610
  store i1 (%"core::fmt::Arguments"*, %"core::fmt::Formatter"*)* @"_ZN59_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Display$GT$3fmt17h3acc6455b8791ff2E", i1 (%"core::fmt::Arguments"*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !612
  call void @llvm.dbg.declare(metadata i1 (%"core::fmt::Arguments"*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !609, metadata !DIExpression()), !dbg !610
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (%"core::fmt::Arguments"*, %"core::fmt::Formatter"*)* @"_ZN59_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Display$GT$3fmt17h3acc6455b8791ff2E" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !610
  %_4 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !610, !nonnull !26, !noundef !26
  br label %bb1, !dbg !610

bb1:                                              ; preds = %start
  %3 = bitcast %"core::fmt::Arguments"* %x to %"core::fmt::Opaque"*, !dbg !610
  store %"core::fmt::Opaque"* %3, %"core::fmt::Opaque"** %0, align 8, !dbg !610
  %_6 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !610, !nonnull !26, !align !353, !noundef !26
  br label %bb2, !dbg !610

bb2:                                              ; preds = %bb1
  %4 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**, !dbg !610
  store %"core::fmt::Opaque"* %_6, %"core::fmt::Opaque"** %4, align 8, !dbg !610
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !610
  %6 = bitcast i64** %5 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !610
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_4, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !610
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !613
  %8 = load i8*, i8** %7, align 8, !dbg !613, !nonnull !26, !align !353, !noundef !26
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !613
  %10 = load i64*, i64** %9, align 8, !dbg !613, !nonnull !26, !noundef !26
  %11 = insertvalue { i8*, i64* } undef, i8* %8, 0, !dbg !613
  %12 = insertvalue { i8*, i64* } %11, i64* %10, 1, !dbg !613
  ret { i8*, i64* } %12, !dbg !613
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hc9388ccaeaed3d47E(i64* align 8 %x) unnamed_addr #0 !dbg !614 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (i64*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca i64*, align 8
  %x.dbg.spill = alloca i64*, align 8
  %2 = alloca { i8*, i64* }, align 8
  store i64* %x, i64** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill, metadata !619, metadata !DIExpression()), !dbg !620
  store i64* %x, i64** %x.dbg.spill1, align 8, !dbg !621
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill1, metadata !622, metadata !DIExpression()), !dbg !631
  store i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE", i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !633
  call void @llvm.dbg.declare(metadata i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !630, metadata !DIExpression()), !dbg !631
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !631
  %_4 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !631, !nonnull !26, !noundef !26
  br label %bb1, !dbg !631

bb1:                                              ; preds = %start
  %3 = bitcast i64* %x to %"core::fmt::Opaque"*, !dbg !631
  store %"core::fmt::Opaque"* %3, %"core::fmt::Opaque"** %0, align 8, !dbg !631
  %_6 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !631, !nonnull !26, !align !353, !noundef !26
  br label %bb2, !dbg !631

bb2:                                              ; preds = %bb1
  %4 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**, !dbg !631
  store %"core::fmt::Opaque"* %_6, %"core::fmt::Opaque"** %4, align 8, !dbg !631
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !631
  %6 = bitcast i64** %5 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !631
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_4, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !631
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !634
  %8 = load i8*, i8** %7, align 8, !dbg !634, !nonnull !26, !align !353, !noundef !26
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !634
  %10 = load i64*, i64** %9, align 8, !dbg !634, !nonnull !26, !noundef !26
  %11 = insertvalue { i8*, i64* } undef, i8* %8, 0, !dbg !634
  %12 = insertvalue { i8*, i64* } %11, i64* %10, 1, !dbg !634
  ret { i8*, i64* } %12, !dbg !634
}

; core::fmt::Arguments::as_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN4core3fmt9Arguments6as_str17hc018f819405eaff4E(%"core::fmt::Arguments"* align 8 %self) unnamed_addr #0 !dbg !635 {
start:
  %s.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill = alloca %"core::fmt::Arguments"*, align 8
  %_2 = alloca { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }, align 8
  %0 = alloca { i8*, i64 }, align 8
  store %"core::fmt::Arguments"* %self, %"core::fmt::Arguments"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Arguments"** %self.dbg.spill, metadata !652, metadata !DIExpression()), !dbg !656
  %1 = bitcast %"core::fmt::Arguments"* %self to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !657
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %1, i32 0, i32 0, !dbg !657
  %_3.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %2, align 8, !dbg !657, !nonnull !26, !align !658, !noundef !26
  %3 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %1, i32 0, i32 1, !dbg !657
  %_3.1 = load i64, i64* %3, align 8, !dbg !657
  %4 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %self, i32 0, i32 2, !dbg !659
  %5 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %4, i32 0, i32 0, !dbg !659
  %_4.0 = load [0 x { i8*, i64* }]*, [0 x { i8*, i64* }]** %5, align 8, !dbg !659, !nonnull !26, !align !658, !noundef !26
  %6 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %4, i32 0, i32 1, !dbg !659
  %_4.1 = load i64, i64* %6, align 8, !dbg !659
  %7 = bitcast { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !660
  %8 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %7, i32 0, i32 0, !dbg !660
  store [0 x { [0 x i8]*, i64 }]* %_3.0, [0 x { [0 x i8]*, i64 }]** %8, align 8, !dbg !660
  %9 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %7, i32 0, i32 1, !dbg !660
  store i64 %_3.1, i64* %9, align 8, !dbg !660
  %10 = getelementptr inbounds { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }, { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2, i32 0, i32 1, !dbg !660
  %11 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %10, i32 0, i32 0, !dbg !660
  store [0 x { i8*, i64* }]* %_4.0, [0 x { i8*, i64* }]** %11, align 8, !dbg !660
  %12 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %10, i32 0, i32 1, !dbg !660
  store i64 %_4.1, i64* %12, align 8, !dbg !660
  %13 = bitcast { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !661
  %14 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %13, i32 0, i32 0, !dbg !661
  %_21.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %14, align 8, !dbg !661, !nonnull !26, !align !658, !noundef !26
  %15 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %13, i32 0, i32 1, !dbg !661
  %_21.1 = load i64, i64* %15, align 8, !dbg !661
  %_16 = icmp eq i64 %_21.1, 0, !dbg !661
  br i1 %_16, label %bb1, label %bb3, !dbg !661

bb3:                                              ; preds = %start
  %16 = bitcast { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !662
  %17 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %16, i32 0, i32 0, !dbg !662
  %_23.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %17, align 8, !dbg !662, !nonnull !26, !align !658, !noundef !26
  %18 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %16, i32 0, i32 1, !dbg !662
  %_23.1 = load i64, i64* %18, align 8, !dbg !662
  %_13 = icmp eq i64 %_23.1, 1, !dbg !662
  br i1 %_13, label %bb4, label %bb2, !dbg !662

bb1:                                              ; preds = %start
  %19 = getelementptr inbounds { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }, { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2, i32 0, i32 1, !dbg !663
  %20 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 0, !dbg !663
  %_22.0 = load [0 x { i8*, i64* }]*, [0 x { i8*, i64* }]** %20, align 8, !dbg !663, !nonnull !26, !align !658, !noundef !26
  %21 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 1, !dbg !663
  %_22.1 = load i64, i64* %21, align 8, !dbg !663
  %_7 = icmp eq i64 %_22.1, 0, !dbg !663
  br i1 %_7, label %bb5, label %bb2, !dbg !663

bb2:                                              ; preds = %bb4, %bb3, %bb1
  %22 = bitcast { i8*, i64 }* %0 to {}**, !dbg !664
  store {}* null, {}** %22, align 8, !dbg !664
  br label %bb7, !dbg !664

bb5:                                              ; preds = %bb1
  %23 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !665
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 0, !dbg !665
  store [0 x i8]* bitcast (<{}>* @alloc998 to [0 x i8]*), [0 x i8]** %24, align 8, !dbg !665
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 1, !dbg !665
  store i64 0, i64* %25, align 8, !dbg !665
  br label %bb7, !dbg !666

bb7:                                              ; preds = %bb2, %bb6, %bb5
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !667
  %27 = load i8*, i8** %26, align 8, !dbg !667, !align !353
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !667
  %29 = load i64, i64* %28, align 8, !dbg !667
  %30 = insertvalue { i8*, i64 } undef, i8* %27, 0, !dbg !667
  %31 = insertvalue { i8*, i64 } %30, i64 %29, 1, !dbg !667
  ret { i8*, i64 } %31, !dbg !667

bb4:                                              ; preds = %bb3
  %32 = getelementptr inbounds { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }, { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2, i32 0, i32 1, !dbg !668
  %33 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %32, i32 0, i32 0, !dbg !668
  %_24.0 = load [0 x { i8*, i64* }]*, [0 x { i8*, i64* }]** %33, align 8, !dbg !668, !nonnull !26, !align !658, !noundef !26
  %34 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %32, i32 0, i32 1, !dbg !668
  %_24.1 = load i64, i64* %34, align 8, !dbg !668
  %_10 = icmp eq i64 %_24.1, 0, !dbg !668
  br i1 %_10, label %bb6, label %bb2, !dbg !668

bb6:                                              ; preds = %bb4
  %35 = bitcast { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !669
  %36 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %35, i32 0, i32 0, !dbg !669
  %_25.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %36, align 8, !dbg !669, !nonnull !26, !align !658, !noundef !26
  %37 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %35, i32 0, i32 1, !dbg !669
  %_25.1 = load i64, i64* %37, align 8, !dbg !669
  %s = getelementptr inbounds [0 x { [0 x i8]*, i64 }], [0 x { [0 x i8]*, i64 }]* %_25.0, i64 0, i64 0, !dbg !669
  store { [0 x i8]*, i64 }* %s, { [0 x i8]*, i64 }** %s.dbg.spill, align 8, !dbg !669
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %s.dbg.spill, metadata !653, metadata !DIExpression()), !dbg !670
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !671
  %_26.0 = load [0 x i8]*, [0 x i8]** %38, align 8, !dbg !671, !nonnull !26, !align !353, !noundef !26
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !671
  %_26.1 = load i64, i64* %39, align 8, !dbg !671
  %40 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !672
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %40, i32 0, i32 0, !dbg !672
  store [0 x i8]* %_26.0, [0 x i8]** %41, align 8, !dbg !672
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %40, i32 0, i32 1, !dbg !672
  store i64 %_26.1, i64* %42, align 8, !dbg !672
  br label %bb7, !dbg !673
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments6new_v117h747dba7f8d1ace20E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %0, [0 x { [0 x i8]*, i64 }]* align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* align 8 %args.0, i64 %args.1) unnamed_addr #0 !dbg !674 {
start:
  %args.dbg.spill = alloca { [0 x { i8*, i64* }]*, i64 }, align 8
  %pieces.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %_24 = alloca { i64*, i64 }, align 8
  %_16 = alloca %"core::fmt::Arguments", align 8
  %_3 = alloca i8, align 1
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %1, align 8
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, metadata !678, metadata !DIExpression()), !dbg !680
  %3 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %3, align 8
  %4 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, metadata !679, metadata !DIExpression()), !dbg !681
  %_4 = icmp ult i64 %pieces.1, %args.1, !dbg !682
  br i1 %_4, label %bb1, label %bb2, !dbg !682

bb2:                                              ; preds = %start
  %_12 = add i64 %args.1, 1, !dbg !683
  %_9 = icmp ugt i64 %pieces.1, %_12, !dbg !684
  %5 = zext i1 %_9 to i8, !dbg !682
  store i8 %5, i8* %_3, align 1, !dbg !682
  br label %bb3, !dbg !682

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1, !dbg !682
  br label %bb3, !dbg !682

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %_3, align 1, !dbg !682, !range !685, !noundef !26
  %7 = trunc i8 %6 to i1, !dbg !682
  br i1 %7, label %bb4, label %bb6, !dbg !682

bb6:                                              ; preds = %bb3
  %8 = bitcast { i64*, i64 }* %_24 to {}**, !dbg !686
  store {}* null, {}** %8, align 8, !dbg !686
  %9 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !687
  %10 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 0, !dbg !687
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %10, align 8, !dbg !687
  %11 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 1, !dbg !687
  store i64 %pieces.1, i64* %11, align 8, !dbg !687
  %12 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1, !dbg !687
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 0, !dbg !687
  %14 = load i64*, i64** %13, align 8, !dbg !687, !align !658
  %15 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 1, !dbg !687
  %16 = load i64, i64* %15, align 8, !dbg !687
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 0, !dbg !687
  store i64* %14, i64** %17, align 8, !dbg !687
  %18 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 1, !dbg !687
  store i64 %16, i64* %18, align 8, !dbg !687
  %19 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2, !dbg !687
  %20 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 0, !dbg !687
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %20, align 8, !dbg !687
  %21 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 1, !dbg !687
  store i64 %args.1, i64* %21, align 8, !dbg !687
  ret void, !dbg !688

bb4:                                              ; preds = %bb3
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h747dba7f8d1ace20E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_16, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc506 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc998 to [0 x { i8*, i64* }]*), i64 0), !dbg !689
  br label %bb5, !dbg !689

bb5:                                              ; preds = %bb4
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_16, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1175 to %"core::panic::location::Location"*)) #12, !dbg !689
  unreachable, !dbg !689
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core3mem7replace17h1f2405c7174d7886E(i32* align 4 %dest, i32 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !690 {
start:
  %dst.dbg.spill = alloca i32*, align 8
  %result.dbg.spill = alloca i32, align 4
  %slot.dbg.spill = alloca i32, align 4
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill3 = alloca i32, align 4
  %self.dbg.spill = alloca i32*, align 8
  %src.dbg.spill2 = alloca i32*, align 8
  %src.dbg.spill = alloca i32, align 4
  %dest.dbg.spill = alloca i32*, align 8
  %tmp = alloca i32, align 4
  %src1 = alloca i32, align 4
  store i32* %dest, i32** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %dest.dbg.spill, metadata !696, metadata !DIExpression()), !dbg !702
  store i32 %src, i32* %src.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %src.dbg.spill, metadata !697, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i32* %src1, metadata !704, metadata !DIExpression()), !dbg !713
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !715, metadata !DIExpression()), !dbg !734
  store i32* %dest, i32** %src.dbg.spill2, align 8, !dbg !736
  call void @llvm.dbg.declare(metadata i32** %src.dbg.spill2, metadata !723, metadata !DIExpression()), !dbg !737
  %1 = bitcast i32* %tmp to {}*, !dbg !738
  store i32* %tmp, i32** %self.dbg.spill, align 8, !dbg !734
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !745, metadata !DIExpression()), !dbg !752
  %2 = bitcast i32* %tmp to i8*, !dbg !734
  %3 = bitcast i32* %dest to i8*, !dbg !734
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false), !dbg !734
  %self = load i32, i32* %tmp, align 4, !dbg !734
  store i32 %self, i32* %self.dbg.spill3, align 4, !dbg !734
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill3, metadata !754, metadata !DIExpression()), !dbg !760
  br label %bb4, !dbg !760

bb4:                                              ; preds = %start
  store i32 %self, i32* %slot.dbg.spill, align 4, !dbg !760
  call void @llvm.dbg.declare(metadata i32* %slot.dbg.spill, metadata !762, metadata !DIExpression()), !dbg !769
  store i32 %self, i32* %result.dbg.spill, align 4, !dbg !769
  call void @llvm.dbg.declare(metadata i32* %result.dbg.spill, metadata !698, metadata !DIExpression()), !dbg !771
  store i32* %dest, i32** %dst.dbg.spill, align 8, !dbg !772
  call void @llvm.dbg.declare(metadata i32** %dst.dbg.spill, metadata !712, metadata !DIExpression()), !dbg !713
  store i32 %src, i32* %src1, align 4, !dbg !773
  %4 = bitcast i32* %dest to i8*, !dbg !713
  %5 = bitcast i32* %src1 to i8*, !dbg !713
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false), !dbg !713
  ret i32 %self, !dbg !774

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !775

bb1:                                              ; preds = %bb2, %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !776
  %7 = load i8*, i8** %6, align 8, !dbg !776
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !776
  %9 = load i32, i32* %8, align 8, !dbg !776
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !776
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !776
  resume { i8*, i32 } %11, !dbg !776

bb2:                                              ; preds = %bb3
  br label %bb1, !dbg !775
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem7replace17h1fb2341b0515eb1dE(i64* align 8 %dest, i64 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !777 {
start:
  %dst.dbg.spill = alloca i64*, align 8
  %result.dbg.spill = alloca i64, align 8
  %slot.dbg.spill = alloca i64, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill3 = alloca i64, align 8
  %self.dbg.spill = alloca i64*, align 8
  %src.dbg.spill2 = alloca i64*, align 8
  %src.dbg.spill = alloca i64, align 8
  %dest.dbg.spill = alloca i64*, align 8
  %tmp = alloca i64, align 8
  %src1 = alloca i64, align 8
  store i64* %dest, i64** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dest.dbg.spill, metadata !782, metadata !DIExpression()), !dbg !788
  store i64 %src, i64* %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %src.dbg.spill, metadata !783, metadata !DIExpression()), !dbg !789
  call void @llvm.dbg.declare(metadata i64* %src1, metadata !790, metadata !DIExpression()), !dbg !798
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !800, metadata !DIExpression()), !dbg !817
  store i64* %dest, i64** %src.dbg.spill2, align 8, !dbg !819
  call void @llvm.dbg.declare(metadata i64** %src.dbg.spill2, metadata !808, metadata !DIExpression()), !dbg !820
  %1 = bitcast i64* %tmp to {}*, !dbg !821
  store i64* %tmp, i64** %self.dbg.spill, align 8, !dbg !817
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !827, metadata !DIExpression()), !dbg !834
  %2 = bitcast i64* %tmp to i8*, !dbg !817
  %3 = bitcast i64* %dest to i8*, !dbg !817
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !817
  %self = load i64, i64* %tmp, align 8, !dbg !817
  store i64 %self, i64* %self.dbg.spill3, align 8, !dbg !817
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill3, metadata !836, metadata !DIExpression()), !dbg !842
  br label %bb4, !dbg !842

bb4:                                              ; preds = %start
  store i64 %self, i64* %slot.dbg.spill, align 8, !dbg !842
  call void @llvm.dbg.declare(metadata i64* %slot.dbg.spill, metadata !844, metadata !DIExpression()), !dbg !850
  store i64 %self, i64* %result.dbg.spill, align 8, !dbg !850
  call void @llvm.dbg.declare(metadata i64* %result.dbg.spill, metadata !784, metadata !DIExpression()), !dbg !852
  store i64* %dest, i64** %dst.dbg.spill, align 8, !dbg !853
  call void @llvm.dbg.declare(metadata i64** %dst.dbg.spill, metadata !797, metadata !DIExpression()), !dbg !798
  store i64 %src, i64* %src1, align 8, !dbg !854
  %4 = bitcast i64* %dest to i8*, !dbg !798
  %5 = bitcast i64* %src1 to i8*, !dbg !798
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 8, i1 false), !dbg !798
  ret i64 %self, !dbg !855

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !856

bb1:                                              ; preds = %bb2, %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !857
  %7 = load i8*, i8** %6, align 8, !dbg !857
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !857
  %9 = load i32, i32* %8, align 8, !dbg !857
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !857
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !857
  resume { i8*, i32 } %11, !dbg !857

bb2:                                              ; preds = %bb3
  br label %bb1, !dbg !856
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h5440c3808e5cbaa6E"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !858 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill4 = alloca i8, align 1
  %a.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill2 = alloca i64, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i8 }, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !864, metadata !DIExpression()), !dbg !869
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !865, metadata !DIExpression()), !dbg !870
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !871
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !872, metadata !DIExpression()), !dbg !885
  store i64 %rhs, i64* %rhs.dbg.spill2, align 8, !dbg !886
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill2, metadata !881, metadata !DIExpression()), !dbg !885
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !885
  %4 = extractvalue { i64, i1 } %3, 0, !dbg !885
  %5 = extractvalue { i64, i1 } %3, 1, !dbg !885
  %6 = zext i1 %5 to i8, !dbg !885
  %7 = bitcast { i64, i8 }* %1 to i64*, !dbg !885
  store i64 %4, i64* %7, align 8, !dbg !885
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !885
  store i8 %6, i8* %8, align 8, !dbg !885
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !885
  %_13.0 = load i64, i64* %9, align 8, !dbg !885
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !885
  %11 = load i8, i8* %10, align 8, !dbg !885, !range !685, !noundef !26
  %_13.1 = trunc i8 %11 to i1, !dbg !885
  br label %bb5, !dbg !885

bb5:                                              ; preds = %start
  store i64 %_13.0, i64* %a.dbg.spill, align 8, !dbg !885
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !882, metadata !DIExpression()), !dbg !887
  %12 = zext i1 %_13.1 to i8, !dbg !885
  store i8 %12, i8* %b.dbg.spill, align 1, !dbg !885
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !884, metadata !DIExpression()), !dbg !887
  %13 = bitcast { i64, i8 }* %_5 to i64*, !dbg !887
  store i64 %_13.0, i64* %13, align 8, !dbg !887
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !887
  %15 = zext i1 %_13.1 to i8, !dbg !887
  store i8 %15, i8* %14, align 8, !dbg !887
  %16 = bitcast { i64, i8 }* %_5 to i64*, !dbg !888
  %a = load i64, i64* %16, align 8, !dbg !888
  store i64 %a, i64* %a.dbg.spill3, align 8, !dbg !888
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill3, metadata !866, metadata !DIExpression()), !dbg !889
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !890
  %18 = load i8, i8* %17, align 8, !dbg !890, !range !685, !noundef !26
  %b = trunc i8 %18 to i1, !dbg !890
  %19 = zext i1 %b to i8, !dbg !890
  store i8 %19, i8* %b.dbg.spill4, align 1, !dbg !890
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill4, metadata !868, metadata !DIExpression()), !dbg !891
  %20 = call i1 @llvm.expect.i1(i1 %b, i1 false), !dbg !892
  %21 = zext i1 %20 to i8, !dbg !892
  store i8 %21, i8* %0, align 1, !dbg !892
  %22 = load i8, i8* %0, align 1, !dbg !892, !range !685, !noundef !26
  %_8 = trunc i8 %22 to i1, !dbg !892
  br label %bb1, !dbg !892

bb1:                                              ; preds = %bb5
  br i1 %_8, label %bb2, label %bb3, !dbg !892

bb3:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !893
  store i64 %a, i64* %23, align 8, !dbg !893
  %24 = bitcast { i64, i64 }* %2 to i64*, !dbg !893
  store i64 1, i64* %24, align 8, !dbg !893
  br label %bb4, !dbg !894

bb2:                                              ; preds = %bb1
  %25 = bitcast { i64, i64 }* %2 to i64*, !dbg !895
  store i64 0, i64* %25, align 8, !dbg !895
  br label %bb4, !dbg !894

bb4:                                              ; preds = %bb3, %bb2
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !896
  %27 = load i64, i64* %26, align 8, !dbg !896, !range !897, !noundef !26
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !896
  %29 = load i64, i64* %28, align 8, !dbg !896
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !896
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !896
  ret { i64, i64 } %31, !dbg !896
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hc3f16a46991bc285E(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x i8]* align 1 %1, i64 %2) unnamed_addr #0 !dbg !898 {
start:
  %_1.dbg.spill = alloca {}, align 1
  %_2 = alloca { i8*, i64 }, align 8
  %3 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  call void @llvm.dbg.declare(metadata {}* %_1.dbg.spill, metadata !906, metadata !DIExpression()), !dbg !914
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %_2, metadata !907, metadata !DIExpression()), !dbg !914
  %6 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*, !dbg !914
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 0, !dbg !914
  %8 = load [0 x i8]*, [0 x i8]** %7, align 8, !dbg !914, !nonnull !26, !align !353, !noundef !26
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 1, !dbg !914
  %10 = load i64, i64* %9, align 8, !dbg !914
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h0448ba9e8f2e7d08E"(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x i8]* align 1 %8, i64 %10), !dbg !914
  br label %bb1, !dbg !914

bb1:                                              ; preds = %start
  ret void, !dbg !914
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core3ops8function6FnOnce9call_once17hce1361e6c4a1da9eE([0 x i8]* align 1 %0, i64 %1) unnamed_addr #0 !dbg !915 {
start:
  %_1.dbg.spill = alloca {}, align 1
  %_2 = alloca { i8*, i64 }, align 8
  %2 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata {}* %_1.dbg.spill, metadata !919, metadata !DIExpression()), !dbg !924
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %_2, metadata !920, metadata !DIExpression()), !dbg !924
  %5 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*, !dbg !924
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0, !dbg !924
  %7 = load [0 x i8]*, [0 x i8]** %6, align 8, !dbg !924, !nonnull !26, !align !353, !noundef !26
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1, !dbg !924
  %9 = load i64, i64* %8, align 8, !dbg !924
; call core::ffi::c_str::CStr::from_bytes_with_nul_unchecked::rt_impl
  %10 = call { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked7rt_impl17h7896654501f3620cE([0 x i8]* align 1 %7, i64 %9), !dbg !924
  %11 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %10, 0, !dbg !924
  %12 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %10, 1, !dbg !924
  br label %bb1, !dbg !924

bb1:                                              ; preds = %start
  %13 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } undef, %"core::ffi::c_str::CStr"* %11, 0, !dbg !924
  %14 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } %13, i64 %12, 1, !dbg !924
  ret { %"core::ffi::c_str::CStr"*, i64 } %14, !dbg !924
}

; core::ptr::drop_in_place<core::result::Result<alloc::ffi::c_str::CString,alloc::ffi::c_str::NulError>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr105drop_in_place$LT$core..result..Result$LT$alloc..ffi..c_str..CString$C$alloc..ffi..c_str..NulError$GT$$GT$17h594fea4b75c17037E"(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_1) unnamed_addr #1 !dbg !925 {
start:
  %_1.dbg.spill = alloca %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"*, align 8
  store %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_1, %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"** %_1.dbg.spill, metadata !959, metadata !DIExpression()), !dbg !962
  %0 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_1 to i64*, !dbg !962
  %_2 = load i64, i64* %0, align 8, !dbg !962, !range !897, !noundef !26
  %1 = icmp eq i64 %_2, 0, !dbg !962
  br i1 %1, label %bb2, label %bb3, !dbg !962

bb2:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_1 to %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok"*, !dbg !962
  %3 = getelementptr inbounds %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok", %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok"* %2, i32 0, i32 1, !dbg !962
; call core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  call void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h60597de3fa84e837E"({ i8*, i64 }* %3), !dbg !962
  br label %bb1, !dbg !962

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_1 to %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Err"*, !dbg !962
  %5 = getelementptr inbounds %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Err", %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Err"* %4, i32 0, i32 1, !dbg !962
; call core::ptr::drop_in_place<alloc::ffi::c_str::NulError>
  call void @"_ZN4core3ptr48drop_in_place$LT$alloc..ffi..c_str..NulError$GT$17h298172dc09689c5bE"(%"alloc::ffi::c_str::NulError"* %5), !dbg !962
  br label %bb1, !dbg !962

bb1:                                              ; preds = %bb2, %bb3
  ret void, !dbg !962
}

; core::ptr::drop_in_place<alloc::string::String>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"* %_1) unnamed_addr #1 !dbg !963 {
start:
  %_1.dbg.spill = alloca %"alloc::string::String"*, align 8
  store %"alloc::string::String"* %_1, %"alloc::string::String"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %_1.dbg.spill, metadata !968, metadata !DIExpression()), !dbg !969
  %0 = bitcast %"alloc::string::String"* %_1 to %"alloc::vec::Vec<u8>"*, !dbg !969
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h4ddc41bb3ac5cf34E"(%"alloc::vec::Vec<u8>"* %0), !dbg !969
  br label %bb1, !dbg !969

bb1:                                              ; preds = %start
  ret void, !dbg !969
}

; core::ptr::drop_in_place<alloc::vec::Vec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h4ddc41bb3ac5cf34E"(%"alloc::vec::Vec<u8>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !970 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %_1, %"alloc::vec::Vec<u8>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %_1.dbg.spill, metadata !975, metadata !DIExpression()), !dbg !978
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha99a412e3048bf79E"(%"alloc::vec::Vec<u8>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !978

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*, !dbg !978
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  invoke void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h56d5e522baa95bd5E"({ i8*, i64 }* %1) #13
          to label %bb1 unwind label %abort, !dbg !978

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*, !dbg !978
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h56d5e522baa95bd5E"({ i8*, i64 }* %7), !dbg !978
  br label %bb2, !dbg !978

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !978
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #14, !dbg !978
  unreachable, !dbg !978

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !978
  %10 = load i8*, i8** %9, align 8, !dbg !978
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !978
  %12 = load i32, i32* %11, align 8, !dbg !978
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !978
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !978
  resume { i8*, i32 } %14, !dbg !978

bb2:                                              ; preds = %bb4
  ret void, !dbg !978
}

; core::ptr::drop_in_place<alloc::ffi::c_str::CString>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h60597de3fa84e837E"({ i8*, i64 }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !979 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %_1, { i8*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %_1.dbg.spill, metadata !984, metadata !DIExpression()), !dbg !986
; invoke <alloc::ffi::c_str::CString as core::ops::drop::Drop>::drop
  invoke void @"_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfe011c84af25418aE"({ i8*, i64 }* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !986

bb3:                                              ; preds = %cleanup
  %1 = bitcast { i8*, i64 }* %_1 to { [0 x i8]*, i64 }*, !dbg !986
; invoke core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
  invoke void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h0ae3e14fd2f4545aE"({ [0 x i8]*, i64 }* %1) #13
          to label %bb1 unwind label %abort, !dbg !986

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast { i8*, i64 }* %_1 to { [0 x i8]*, i64 }*, !dbg !986
; call core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h0ae3e14fd2f4545aE"({ [0 x i8]*, i64 }* %7), !dbg !986
  br label %bb2, !dbg !986

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !986
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #14, !dbg !986
  unreachable, !dbg !986

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !986
  %10 = load i8*, i8** %9, align 8, !dbg !986
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !986
  %12 = load i32, i32* %11, align 8, !dbg !986
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !986
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !986
  resume { i8*, i32 } %14, !dbg !986

bb2:                                              ; preds = %bb4
  ret void, !dbg !986
}

; core::ptr::drop_in_place<alloc::ffi::c_str::NulError>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr48drop_in_place$LT$alloc..ffi..c_str..NulError$GT$17h298172dc09689c5bE"(%"alloc::ffi::c_str::NulError"* %_1) unnamed_addr #1 !dbg !987 {
start:
  %_1.dbg.spill = alloca %"alloc::ffi::c_str::NulError"*, align 8
  store %"alloc::ffi::c_str::NulError"* %_1, %"alloc::ffi::c_str::NulError"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::ffi::c_str::NulError"** %_1.dbg.spill, metadata !992, metadata !DIExpression()), !dbg !995
  %0 = getelementptr inbounds %"alloc::ffi::c_str::NulError", %"alloc::ffi::c_str::NulError"* %_1, i32 0, i32 1, !dbg !995
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h4ddc41bb3ac5cf34E"(%"alloc::vec::Vec<u8>"* %0), !dbg !995
  br label %bb1, !dbg !995

bb1:                                              ; preds = %start
  ret void, !dbg !995
}

; core::ptr::drop_in_place<core::str::error::Utf8Error>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17h729935f6d7a41ec4E"(%"core::str::error::Utf8Error"* %_1) unnamed_addr #0 !dbg !996 {
start:
  %_1.dbg.spill = alloca %"core::str::error::Utf8Error"*, align 8
  store %"core::str::error::Utf8Error"* %_1, %"core::str::error::Utf8Error"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::error::Utf8Error"** %_1.dbg.spill, metadata !1001, metadata !DIExpression()), !dbg !1004
  ret void, !dbg !1004
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h56d5e522baa95bd5E"({ i8*, i64 }* %_1) unnamed_addr #1 !dbg !1005 {
start:
  %_1.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %_1, { i8*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %_1.dbg.spill, metadata !1010, metadata !DIExpression()), !dbg !1013
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h38c49a3d7a5525cfE"({ i8*, i64 }* align 8 %_1), !dbg !1013
  br label %bb1, !dbg !1013

bb1:                                              ; preds = %start
  ret void, !dbg !1013
}

; core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h0ae3e14fd2f4545aE"({ [0 x i8]*, i64 }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1014 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %_1, { [0 x i8]*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %_1.dbg.spill, metadata !1019, metadata !DIExpression()), !dbg !1022
  br label %bb3, !dbg !1022

bb3:                                              ; preds = %start
  %1 = bitcast { [0 x i8]*, i64 }* %_1 to { i8*, i64 }*, !dbg !1022
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0, !dbg !1022
  %3 = load i8*, i8** %2, align 8, !dbg !1022, !nonnull !26, !noundef !26
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1, !dbg !1022
  %5 = load i64, i64* %4, align 8, !dbg !1022
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17ha9bd49e80e121074E(i8* %3, i64 %5), !dbg !1022
  br label %bb1, !dbg !1022

bb4:                                              ; No predecessors!
  %6 = bitcast { [0 x i8]*, i64 }* %_1 to { i8*, i64 }*, !dbg !1022
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 0, !dbg !1022
  %8 = load i8*, i8** %7, align 8, !dbg !1022, !nonnull !26, !noundef !26
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 1, !dbg !1022
  %10 = load i64, i64* %9, align 8, !dbg !1022
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17ha9bd49e80e121074E(i8* %8, i64 %10) #13
          to label %bb2 unwind label %abort, !dbg !1022

abort:                                            ; preds = %bb4
  %11 = landingpad { i8*, i32 }
          cleanup, !dbg !1022
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #14, !dbg !1022
  unreachable, !dbg !1022

bb2:                                              ; preds = %bb4
  %12 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1022
  %13 = load i8*, i8** %12, align 8, !dbg !1022
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1022
  %15 = load i32, i32* %14, align 8, !dbg !1022
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0, !dbg !1022
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1, !dbg !1022
  resume { i8*, i32 } %17, !dbg !1022

bb1:                                              ; preds = %bb3
  ret void, !dbg !1022
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hc739bec02c7381b9E"(i8* %ptr) unnamed_addr #0 !dbg !1023 {
start:
  %ptr.dbg.spill2 = alloca i8*, align 8
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %_15 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_14 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_5 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1040, metadata !DIExpression()), !dbg !1041
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !1042, metadata !DIExpression()), !dbg !1052
  store i8* %ptr, i8** %self.dbg.spill, align 8, !dbg !1067
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1065, metadata !DIExpression()), !dbg !1068
  store i8* %ptr, i8** %self.dbg.spill1, align 8, !dbg !1068
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !1069, metadata !DIExpression()), !dbg !1076
  %3 = bitcast {}** %1 to i64*, !dbg !1078
  store i64 0, i64* %3, align 8, !dbg !1078
  %data_address = load {}*, {}** %1, align 8, !dbg !1078
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !1078
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1051, metadata !DIExpression()), !dbg !1052
  br label %bb4, !dbg !1078

bb4:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_15 to {}**, !dbg !1052
  store {}* %data_address, {}** %4, align 8, !dbg !1052
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_14 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !1052
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !1052
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_15 to i8*, !dbg !1052
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !1052
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_14 to i8**, !dbg !1052
  %other = load i8*, i8** %8, align 8, !dbg !1052
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !1052
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !1075, metadata !DIExpression()), !dbg !1076
  %9 = icmp eq i8* %ptr, %other, !dbg !1076
  %10 = zext i1 %9 to i8, !dbg !1076
  store i8 %10, i8* %0, align 1, !dbg !1076
  %11 = load i8, i8* %0, align 1, !dbg !1076, !range !685, !noundef !26
  %_3 = trunc i8 %11 to i1, !dbg !1076
  br label %bb5, !dbg !1076

bb5:                                              ; preds = %bb4
  %_2 = xor i1 %_3, true, !dbg !1087
  br i1 %_2, label %bb1, label %bb2, !dbg !1087

bb2:                                              ; preds = %bb5
  %12 = bitcast i8** %2 to {}**, !dbg !1088
  store {}* null, {}** %12, align 8, !dbg !1088
  br label %bb3, !dbg !1089

bb1:                                              ; preds = %bb5
  store i8* %ptr, i8** %ptr.dbg.spill2, align 8, !dbg !1090
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill2, metadata !1091, metadata !DIExpression()), !dbg !1094
  store i8* %ptr, i8** %_5, align 8, !dbg !1094
  %13 = load i8*, i8** %_5, align 8, !dbg !1096, !nonnull !26, !noundef !26
  store i8* %13, i8** %2, align 8, !dbg !1096
  br label %bb3, !dbg !1089

bb3:                                              ; preds = %bb2, %bb1
  %14 = load i8*, i8** %2, align 8, !dbg !1097
  ret i8* %14, !dbg !1097
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h4b80e619f85ebbd6E"({ i64, i64 }* align 8 %self) unnamed_addr #0 !dbg !1098 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !1121, metadata !DIExpression()), !dbg !1124
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17he230a9875d2c47c9E"({ i64, i64 }* align 8 %self), !dbg !1125
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !1125
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !1125
  br label %bb1, !dbg !1125

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !1126
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1, !dbg !1126
  ret { i64, i64 } %4, !dbg !1126
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hb567e932e5e843d6E"({ i32, i32 }* align 4 %self) unnamed_addr #0 !dbg !1127 {
start:
  %self.dbg.spill = alloca { i32, i32 }*, align 8
  store { i32, i32 }* %self, { i32, i32 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32, i32 }** %self.dbg.spill, metadata !1149, metadata !DIExpression()), !dbg !1152
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i32, i32 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h8803c82250012bf8E"({ i32, i32 }* align 4 %self), !dbg !1153
  %1 = extractvalue { i32, i32 } %0, 0, !dbg !1153
  %2 = extractvalue { i32, i32 } %0, 1, !dbg !1153
  br label %bb1, !dbg !1153

bb1:                                              ; preds = %start
  %3 = insertvalue { i32, i32 } undef, i32 %1, 0, !dbg !1154
  %4 = insertvalue { i32, i32 } %3, i32 %2, 1, !dbg !1154
  ret { i32, i32 } %4, !dbg !1154
}

; core::alloc::layout::Layout::from_size_valid_align
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17h8781a35eec593f16E(i64 %size, i64 %align) unnamed_addr #0 !dbg !1155 {
start:
  %n.dbg.spill = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %_11 = alloca { i64, i64 }, align 8
  %self1 = alloca i64, align 8
  %self = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %size, i64* %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !1186, metadata !DIExpression()), !dbg !1188
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !1187, metadata !DIExpression()), !dbg !1189
  call void @llvm.dbg.declare(metadata i64* %self, metadata !1190, metadata !DIExpression()), !dbg !1201
  call void @llvm.dbg.declare(metadata i64* %self1, metadata !1203, metadata !DIExpression()), !dbg !1210
  store i64 %align, i64* %self1, align 8, !dbg !1202
  %_15 = load i64, i64* %self1, align 8, !dbg !1210, !range !1211, !noundef !26
  store i64 %_15, i64* %n.dbg.spill, align 8, !dbg !1210
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1212, metadata !DIExpression()), !dbg !1226
  store i64 %_15, i64* %self, align 8, !dbg !1226
  %_8 = load i64, i64* %self, align 8, !dbg !1201
  %_7 = sub i64 %_8, 1, !dbg !1228
  %_5 = sub i64 9223372036854775807, %_7, !dbg !1229
  %_3 = icmp ugt i64 %size, %_5, !dbg !1230
  br i1 %_3, label %bb1, label %bb2, !dbg !1230

bb2:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %_11 to i64*, !dbg !1231
  store i64 %size, i64* %1, align 8, !dbg !1231
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !1231
  store i64 %align, i64* %2, align 8, !dbg !1231
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 0, !dbg !1232
  %4 = load i64, i64* %3, align 8, !dbg !1232
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !1232
  %6 = load i64, i64* %5, align 8, !dbg !1232, !range !1211, !noundef !26
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1232
  store i64 %4, i64* %7, align 8, !dbg !1232
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1232
  store i64 %6, i64* %8, align 8, !dbg !1232
  br label %bb3, !dbg !1233

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1234
  store i64 0, i64* %9, align 8, !dbg !1234
  br label %bb3, !dbg !1233

bb3:                                              ; preds = %bb2, %bb1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1233
  %11 = load i64, i64* %10, align 8, !dbg !1233
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1233
  %13 = load i64, i64* %12, align 8, !dbg !1233, !range !1235, !noundef !26
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !1233
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !1233
  ret { i64, i64 } %15, !dbg !1233
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hd3d68a432436475dE(i64 %n) unnamed_addr #0 !dbg !1236 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill5 = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill3 = alloca %"core::alloc::layout::LayoutError", align 1
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %n.dbg.spill = alloca i64, align 8
  %self1 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1240, metadata !DIExpression()), !dbg !1265
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !1266, metadata !DIExpression()), !dbg !1311
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !1313, metadata !DIExpression()), !dbg !1324
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %err.dbg.spill, metadata !1320, metadata !DIExpression()), !dbg !1324
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill, metadata !1243, metadata !DIExpression()), !dbg !1325
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill2, metadata !1326, metadata !DIExpression()), !dbg !1338
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !1308, metadata !DIExpression()), !dbg !1340
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill3, metadata !1333, metadata !DIExpression()), !dbg !1341
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h5440c3808e5cbaa6E"(i64 1, i64 %n), !dbg !1312
  store { i64, i64 } %2, { i64, i64 }* %self1, align 8, !dbg !1312
  br label %bb1, !dbg !1312

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %self1 to i64*, !dbg !1324
  %_15 = load i64, i64* %3, align 8, !dbg !1324, !range !897, !noundef !26
  switch i64 %_15, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !1324

bb9:                                              ; preds = %bb1
  unreachable, !dbg !1324

bb8:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %self to i64*, !dbg !1324
  store i64 1, i64* %4, align 8, !dbg !1324
  br label %bb11, !dbg !1324

bb10:                                             ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !1324
  %v = load i64, i64* %5, align 8, !dbg !1324
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !1324
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !1321, metadata !DIExpression()), !dbg !1342
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1342
  store i64 %v, i64* %6, align 8, !dbg !1342
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !1342
  store i64 0, i64* %7, align 8, !dbg !1342
  br label %bb11, !dbg !1324

bb11:                                             ; preds = %bb8, %bb10
  %8 = bitcast { i64, i64 }* %self to i64*, !dbg !1311
  %_18 = load i64, i64* %8, align 8, !dbg !1311, !range !897, !noundef !26
  switch i64 %_18, label %bb13 [
    i64 0, label %bb14
    i64 1, label %bb12
  ], !dbg !1311

bb13:                                             ; preds = %bb11
  unreachable, !dbg !1311

bb14:                                             ; preds = %bb11
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1311
  %v4 = load i64, i64* %9, align 8, !dbg !1311
  store i64 %v4, i64* %v.dbg.spill5, align 8, !dbg !1311
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill5, metadata !1305, metadata !DIExpression()), !dbg !1343
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !1343
  store i64 %v4, i64* %10, align 8, !dbg !1343
  %11 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1343
  store i64 0, i64* %11, align 8, !dbg !1343
  br label %bb2, !dbg !1311

bb12:                                             ; preds = %bb11
  %12 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1340
  store i64 1, i64* %12, align 8, !dbg !1340
  br label %bb2, !dbg !1311

bb2:                                              ; preds = %bb14, %bb12
  %13 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1312
  %_9 = load i64, i64* %13, align 8, !dbg !1312, !range !897, !noundef !26
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !1312

bb4:                                              ; preds = %bb2
  unreachable, !dbg !1312

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !1312
  %val = load i64, i64* %14, align 8, !dbg !1312
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !1312
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !1263, metadata !DIExpression()), !dbg !1344
  store i64 %val, i64* %array_size.dbg.spill, align 8, !dbg !1344
  call void @llvm.dbg.declare(metadata i64* %array_size.dbg.spill, metadata !1241, metadata !DIExpression()), !dbg !1345
  store i64 1, i64* %align.dbg.spill, align 8, !dbg !1346
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !1356, metadata !DIExpression()), !dbg !1370
  store i64 1, i64* %0, align 8, !dbg !1370
  %_14 = load i64, i64* %0, align 8, !dbg !1370, !range !1211, !noundef !26
  br label %bb15, !dbg !1370

bb5:                                              ; preds = %bb2
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2bed783e04bb68bcE"(), !dbg !1341
  br label %bb16, !dbg !1341

bb16:                                             ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1341
  store i64 0, i64* %15, align 8, !dbg !1341
  br label %bb7, !dbg !1372

bb7:                                              ; preds = %bb6, %bb16
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !1372
  %17 = load i64, i64* %16, align 8, !dbg !1372
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1372
  %19 = load i64, i64* %18, align 8, !dbg !1372, !range !1235, !noundef !26
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !1372
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !1372
  ret { i64, i64 } %21, !dbg !1372

bb15:                                             ; preds = %bb3
; call core::alloc::layout::Layout::from_size_valid_align
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17h8781a35eec593f16E(i64 %val, i64 %_14), !dbg !1373
  store { i64, i64 } %22, { i64, i64 }* %1, align 8, !dbg !1373
  br label %bb6, !dbg !1373

bb6:                                              ; preds = %bb15
  br label %bb7, !dbg !1372
}

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h3df2678a0c5e8f1eE"([128 x i8]* align 1 %self, i64 %index, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !1374 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [128 x i8]*, align 8
  store [128 x i8]* %self, [128 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [128 x i8]** %self.dbg.spill, metadata !1385, metadata !DIExpression()), !dbg !1389
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !1386, metadata !DIExpression()), !dbg !1390
  %_4.0 = bitcast [128 x i8]* %self to [0 x i8]*, !dbg !1391
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h2265d1d1eefd74aeE"([0 x i8]* align 1 %_4.0, i64 128, i64 %index, %"core::panic::location::Location"* align 8 %0), !dbg !1392
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0, !dbg !1392
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1, !dbg !1392
  br label %bb1, !dbg !1392

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0, !dbg !1393
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1, !dbg !1393
  ret { [0 x i8]*, i64 } %5, !dbg !1393
}

; core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17hc6d3ce497554ef29E"([16 x i8]* align 1 %self, [16 x i8]* align 1 %other) unnamed_addr #0 !dbg !1394 {
start:
  %other.dbg.spill = alloca [16 x i8]*, align 8
  %self.dbg.spill = alloca [16 x i8]*, align 8
  store [16 x i8]* %self, [16 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [16 x i8]** %self.dbg.spill, metadata !1405, metadata !DIExpression()), !dbg !1410
  store [16 x i8]* %other, [16 x i8]** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [16 x i8]** %other.dbg.spill, metadata !1406, metadata !DIExpression()), !dbg !1411
; call <T as core::array::equality::SpecArrayEq<U,_>>::spec_eq
  %0 = call zeroext i1 @"_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h66243477bd61f162E"([16 x i8]* align 1 %self, [16 x i8]* align 1 %other), !dbg !1412
  br label %bb1, !dbg !1412

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !1413
}

; core::clone::impls::<impl core::clone::Clone for i32>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i32$GT$5clone17h9b2bddbc476572d1E"(i32* align 4 %self) unnamed_addr #0 !dbg !1414 {
start:
  %self.dbg.spill = alloca i32*, align 8
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !1422, metadata !DIExpression()), !dbg !1423
  %0 = load i32, i32* %self, align 4, !dbg !1424
  ret i32 %0, !dbg !1425
}

; core::clone::impls::<impl core::clone::Clone for i64>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i64$GT$5clone17h83f44c00881ad16fE"(i64* align 8 %self) unnamed_addr #0 !dbg !1426 {
start:
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !1431, metadata !DIExpression()), !dbg !1432
  %0 = load i64, i64* %self, align 8, !dbg !1433
  ret i64 %0, !dbg !1434
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17he1bead3ba556669aE"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1435 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1443, metadata !DIExpression()), !dbg !1444
  %2 = bitcast [0 x i8]* %self.0 to i8*, !dbg !1445
  ret i8* %2, !dbg !1446
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h2265d1d1eefd74aeE"([0 x i8]* align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !1447 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1452, metadata !DIExpression()), !dbg !1454
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !1453, metadata !DIExpression()), !dbg !1455
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index
  %3 = call { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17he45df862cf1057e5E"(i64 %index, [0 x i8]* align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0), !dbg !1456
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !1456
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !1456
  br label %bb1, !dbg !1456

bb1:                                              ; preds = %start
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0, !dbg !1457
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1, !dbg !1457
  ret { [0 x i8]*, i64 } %7, !dbg !1457
}

; core::option::Option<T>::map_or_else
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$11map_or_else17h2b746e8d475aa0c8E"(%"alloc::string::String"* sret(%"alloc::string::String") %0, i8* align 1 %1, i64 %2, i64* align 8 %default) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1458 {
start:
  %3 = alloca { i8*, i32 }, align 8
  %t.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %f.dbg.spill = alloca {}, align 1
  %default.dbg.spill = alloca i64*, align 8
  %_12 = alloca i8, align 1
  %_11 = alloca i8, align 1
  %_7 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !1467, metadata !DIExpression()), !dbg !1476
  store i64* %default, i64** %default.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %default.dbg.spill, metadata !1468, metadata !DIExpression()), !dbg !1477
  call void @llvm.dbg.declare(metadata {}* %f.dbg.spill, metadata !1469, metadata !DIExpression()), !dbg !1478
  store i8 1, i8* %_12, align 1, !dbg !1479
  store i8 1, i8* %_11, align 1, !dbg !1479
  %6 = bitcast { i8*, i64 }* %self to {}**, !dbg !1479
  %7 = load {}*, {}** %6, align 8, !dbg !1479
  %8 = icmp eq {}* %7, null, !dbg !1479
  %_4 = select i1 %8, i64 0, i64 1, !dbg !1479
  switch i64 %_4, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !1480

bb2:                                              ; preds = %start
  unreachable, !dbg !1479

bb1:                                              ; preds = %start
  store i8 0, i8* %_12, align 1, !dbg !1481
; invoke alloc::fmt::format::{{closure}}
  invoke void @"_ZN5alloc3fmt6format28_$u7b$$u7b$closure$u7d$$u7d$17ha9d3c5d1098fc22eE"(%"alloc::string::String"* sret(%"alloc::string::String") %0, i64* align 8 %default)
          to label %bb5 unwind label %cleanup, !dbg !1481

bb3:                                              ; preds = %start
  %9 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !1482
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0, !dbg !1482
  %t.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !1482, !nonnull !26, !align !353, !noundef !26
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1, !dbg !1482
  %t.1 = load i64, i64* %11, align 8, !dbg !1482
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !1482
  store [0 x i8]* %t.0, [0 x i8]** %12, align 8, !dbg !1482
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !1482
  store i64 %t.1, i64* %13, align 8, !dbg !1482
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %t.dbg.spill, metadata !1470, metadata !DIExpression()), !dbg !1483
  store i8 0, i8* %_11, align 1, !dbg !1484
  %14 = bitcast { i8*, i64 }* %_7 to { [0 x i8]*, i64 }*, !dbg !1484
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0, !dbg !1484
  store [0 x i8]* %t.0, [0 x i8]** %15, align 8, !dbg !1484
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1, !dbg !1484
  store i64 %t.1, i64* %16, align 8, !dbg !1484
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 0, !dbg !1484
  %18 = load i8*, i8** %17, align 8, !dbg !1484, !nonnull !26, !align !353, !noundef !26
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 1, !dbg !1484
  %20 = load i64, i64* %19, align 8, !dbg !1484
  %21 = bitcast i8* %18 to [0 x i8]*, !dbg !1484
; invoke core::ops::function::FnOnce::call_once
  invoke void @_ZN4core3ops8function6FnOnce9call_once17hc3f16a46991bc285E(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x i8]* align 1 %21, i64 %20)
          to label %bb4 unwind label %cleanup, !dbg !1484

bb14:                                             ; preds = %cleanup
  %22 = load i8, i8* %_11, align 1, !dbg !1485, !range !685, !noundef !26
  %23 = trunc i8 %22 to i1, !dbg !1485
  br i1 %23, label %bb13, label %bb8, !dbg !1485

cleanup:                                          ; preds = %bb1, %bb3
  %24 = landingpad { i8*, i32 }
          cleanup
  %25 = extractvalue { i8*, i32 } %24, 0
  %26 = extractvalue { i8*, i32 } %24, 1
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %25, i8** %27, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %26, i32* %28, align 8
  br label %bb14

bb4:                                              ; preds = %bb3
  br label %bb11, !dbg !1486

bb11:                                             ; preds = %bb5, %bb4
  %29 = load i8, i8* %_11, align 1, !dbg !1485, !range !685, !noundef !26
  %30 = trunc i8 %29 to i1, !dbg !1485
  br i1 %30, label %bb10, label %bb6, !dbg !1485

bb5:                                              ; preds = %bb1
  br label %bb11, !dbg !1487

bb8:                                              ; preds = %bb13, %bb14
  %31 = load i8, i8* %_12, align 1, !dbg !1485, !range !685, !noundef !26
  %32 = trunc i8 %31 to i1, !dbg !1485
  br i1 %32, label %bb15, label %bb9, !dbg !1485

bb13:                                             ; preds = %bb14
  br label %bb8, !dbg !1485

bb6:                                              ; preds = %bb10, %bb11
  %33 = load i8, i8* %_12, align 1, !dbg !1485, !range !685, !noundef !26
  %34 = trunc i8 %33 to i1, !dbg !1485
  br i1 %34, label %bb12, label %bb7, !dbg !1485

bb10:                                             ; preds = %bb11
  br label %bb6, !dbg !1485

bb9:                                              ; preds = %bb15, %bb8
  %35 = bitcast { i8*, i32 }* %3 to i8**, !dbg !1488
  %36 = load i8*, i8** %35, align 8, !dbg !1488
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !1488
  %38 = load i32, i32* %37, align 8, !dbg !1488
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0, !dbg !1488
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1, !dbg !1488
  resume { i8*, i32 } %40, !dbg !1488

bb15:                                             ; preds = %bb8
  br label %bb9, !dbg !1485

bb7:                                              ; preds = %bb12, %bb6
  ret void, !dbg !1489

bb12:                                             ; preds = %bb6
  br label %bb7, !dbg !1485
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$6unwrap17h09baf5fcc786da84E"(%"f128_t::f128"* sret(%"f128_t::f128") %val, %"core::option::Option<f128_t::f128>"* %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !1490 {
start:
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %val, metadata !1513, metadata !DIExpression()), !dbg !1515
  call void @llvm.dbg.declare(metadata %"core::option::Option<f128_t::f128>"* %self, metadata !1512, metadata !DIExpression()), !dbg !1516
  %1 = bitcast %"core::option::Option<f128_t::f128>"* %self to i8*, !dbg !1517
  %2 = load i8, i8* %1, align 1, !dbg !1517, !range !685, !noundef !26
  %3 = trunc i8 %2 to i1, !dbg !1517
  %_2 = zext i1 %3 to i64, !dbg !1517
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !1518

bb2:                                              ; preds = %start
  unreachable, !dbg !1517

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc1176 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 %0) #12, !dbg !1519
  unreachable, !dbg !1519

bb3:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<f128_t::f128>"* %self to %"core::option::Option<f128_t::f128>::Some"*, !dbg !1520
  %5 = getelementptr inbounds %"core::option::Option<f128_t::f128>::Some", %"core::option::Option<f128_t::f128>::Some"* %4, i32 0, i32 1, !dbg !1520
  %6 = bitcast %"f128_t::f128"* %val to i8*, !dbg !1520
  %7 = bitcast %"f128_t::f128"* %5 to i8*, !dbg !1520
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 16, i1 false), !dbg !1520
  ret void, !dbg !1521
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h7c6a2d7f63435a18E"(%"core::result::Result<&str, core::str::error::Utf8Error>"* %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1522 {
start:
  %t.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::str::error::Utf8Error", align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<&str, core::str::error::Utf8Error>"* %self, metadata !1541, metadata !DIExpression()), !dbg !1546
  call void @llvm.dbg.declare(metadata %"core::str::error::Utf8Error"* %e, metadata !1544, metadata !DIExpression()), !dbg !1547
  %2 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to i64*, !dbg !1548
  %_2 = load i64, i64* %2, align 8, !dbg !1548, !range !897, !noundef !26
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !1549

bb2:                                              ; preds = %start
  unreachable, !dbg !1548

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to %"core::result::Result<&str, core::str::error::Utf8Error>::Ok"*, !dbg !1550
  %4 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Ok", %"core::result::Result<&str, core::str::error::Utf8Error>::Ok"* %3, i32 0, i32 1, !dbg !1550
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !1550
  %t.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !dbg !1550, !nonnull !26, !align !353, !noundef !26
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !1550
  %t.1 = load i64, i64* %6, align 8, !dbg !1550
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !1550
  store [0 x i8]* %t.0, [0 x i8]** %7, align 8, !dbg !1550
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !1550
  store i64 %t.1, i64* %8, align 8, !dbg !1550
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %t.dbg.spill, metadata !1542, metadata !DIExpression()), !dbg !1551
  %9 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %t.0, 0, !dbg !1552
  %10 = insertvalue { [0 x i8]*, i64 } %9, i64 %t.1, 1, !dbg !1552
  ret { [0 x i8]*, i64 } %10, !dbg !1552

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to %"core::result::Result<&str, core::str::error::Utf8Error>::Err"*, !dbg !1553
  %12 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Err", %"core::result::Result<&str, core::str::error::Utf8Error>::Err"* %11, i32 0, i32 1, !dbg !1553
  %13 = bitcast %"core::str::error::Utf8Error"* %e to i8*, !dbg !1553
  %14 = bitcast %"core::str::error::Utf8Error"* %12 to i8*, !dbg !1553
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false), !dbg !1553
  %_7.0 = bitcast %"core::str::error::Utf8Error"* %e to {}*, !dbg !1554
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hff48f82f03d418aeE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc1177 to [0 x i8]*), i64 43, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.0 to [3 x i64]*), %"core::panic::location::Location"* align 8 %0) #12
          to label %unreachable unwind label %cleanup, !dbg !1555

bb4:                                              ; preds = %cleanup
  br label %bb5, !dbg !1556

cleanup:                                          ; preds = %bb1
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb4
  %20 = bitcast { i8*, i32 }* %1 to i8**, !dbg !1557
  %21 = load i8*, i8** %20, align 8, !dbg !1557
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !1557
  %23 = load i32, i32* %22, align 8, !dbg !1557
  %24 = insertvalue { i8*, i32 } undef, i8* %21, 0, !dbg !1557
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1, !dbg !1557
  resume { i8*, i32 } %25, !dbg !1557
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2bed783e04bb68bcE"() unnamed_addr #1 !dbg !1558 {
start:
  %t.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %t.dbg.spill, metadata !1564, metadata !DIExpression()), !dbg !1567
  ret void, !dbg !1568
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h5a2efa16e49566acE"() unnamed_addr #1 !dbg !1569 {
start:
  %t.dbg.spill = alloca %"core::alloc::AllocError", align 1
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %t.dbg.spill, metadata !1574, metadata !DIExpression()), !dbg !1577
  ret void, !dbg !1578
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h54abd76d613f16f4E"(i8* %self) unnamed_addr #1 !dbg !1579 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1582, metadata !DIExpression()), !dbg !1586
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17hd5d28fb461c84be2E"(i8* %self), !dbg !1587
  br label %bb1, !dbg !1587

bb1:                                              ; preds = %start
  ret i8* %0, !dbg !1588
}

; <T as alloc::slice::hack::ConvertVec>::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17hb7bb30850b3c25e0E"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %v, [0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1589 {
start:
  %new_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill10 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill9 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %count.dbg.spill8 = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %src.dbg.spill = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill7 = alloca { [0 x i8]*, i64 }, align 8
  %dest.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %0 = alloca { i8*, i32 }, align 8
  %capacity.dbg.spill3 = alloca i64, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %alloc.dbg.spill2 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill1 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_34 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]", align 8
  %_25 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_22 = alloca i8, align 1
  %_16 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %v, metadata !1599, metadata !DIExpression()), !dbg !1601
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !1597, metadata !DIExpression()), !dbg !1602
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !1598, metadata !DIExpression()), !dbg !1603
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill1, metadata !1604, metadata !DIExpression()), !dbg !1612
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill2, metadata !1614, metadata !DIExpression()), !dbg !1622
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]"* %runtime, metadata !1624, metadata !DIExpression()), !dbg !1643
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !1655
  store [0 x i8]* %s.0, [0 x i8]** %3, align 8, !dbg !1655
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !1655
  store i64 %s.1, i64* %4, align 8, !dbg !1655
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1656, metadata !DIExpression()), !dbg !1662
  %5 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_16 to { [0 x i8]*, i64 }*, !dbg !1662
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0, !dbg !1662
  store [0 x i8]* %s.0, [0 x i8]** %6, align 8, !dbg !1662
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1, !dbg !1662
  store i64 %s.1, i64* %7, align 8, !dbg !1662
  %8 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_16 to { i8*, i64 }*, !dbg !1662
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %8, i32 0, i32 1, !dbg !1662
  %capacity = load i64, i64* %9, align 8, !dbg !1662
  store i64 %capacity, i64* %capacity.dbg.spill, align 8, !dbg !1662
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !1611, metadata !DIExpression()), !dbg !1612
  store i64 %capacity, i64* %capacity.dbg.spill3, align 8, !dbg !1612
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill3, metadata !1621, metadata !DIExpression()), !dbg !1622
  store i8 0, i8* %_22, align 1, !dbg !1622
  %10 = load i8, i8* %_22, align 1, !dbg !1622, !range !685, !noundef !26
  %11 = trunc i8 %10 to i1, !dbg !1622
; invoke alloc::raw_vec::RawVec<T,A>::allocate_in
  %12 = invoke { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hb7853e13fe7466c9E"(i64 %capacity, i1 zeroext %11)
          to label %bb6 unwind label %cleanup, !dbg !1622

bb5:                                              ; preds = %bb2, %cleanup
  br i1 false, label %bb4, label %bb3, !dbg !1663

cleanup:                                          ; preds = %start
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb5

bb6:                                              ; preds = %start
  %_18.0 = extractvalue { i8*, i64 } %12, 0, !dbg !1622
  %_18.1 = extractvalue { i8*, i64 } %12, 1, !dbg !1622
  %18 = bitcast %"alloc::vec::Vec<u8>"* %v to { i8*, i64 }*, !dbg !1612
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %18, i32 0, i32 0, !dbg !1612
  store i8* %_18.0, i8** %19, align 8, !dbg !1612
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %18, i32 0, i32 1, !dbg !1612
  store i64 %_18.1, i64* %20, align 8, !dbg !1612
  %21 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %v, i32 0, i32 1, !dbg !1612
  store i64 0, i64* %21, align 8, !dbg !1612
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !1654
  store [0 x i8]* %s.0, [0 x i8]** %22, align 8, !dbg !1654
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !1654
  store i64 %s.1, i64* %23, align 8, !dbg !1654
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill4, metadata !1664, metadata !DIExpression()), !dbg !1670
  %self = bitcast [0 x i8]* %s.0 to i8*, !dbg !1670
  store i8* %self, i8** %self.dbg.spill5, align 8, !dbg !1670
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !1650, metadata !DIExpression()), !dbg !1671
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %dest = invoke i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h34c25918ba95f615E"(%"alloc::vec::Vec<u8>"* align 8 %v)
          to label %bb1 unwind label %cleanup6, !dbg !1672

bb2:                                              ; preds = %cleanup6
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h4ddc41bb3ac5cf34E"(%"alloc::vec::Vec<u8>"* %v) #13
          to label %bb5 unwind label %abort, !dbg !1663

cleanup6:                                         ; preds = %bb6
  %24 = landingpad { i8*, i32 }
          cleanup
  %25 = extractvalue { i8*, i32 } %24, 0
  %26 = extractvalue { i8*, i32 } %24, 1
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %25, i8** %27, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %26, i32* %28, align 8
  br label %bb2

bb1:                                              ; preds = %bb6
  store i8* %dest, i8** %dest.dbg.spill, align 8, !dbg !1672
  call void @llvm.dbg.declare(metadata i8** %dest.dbg.spill, metadata !1652, metadata !DIExpression()), !dbg !1671
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !1673
  store [0 x i8]* %s.0, [0 x i8]** %29, align 8, !dbg !1673
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !1673
  store i64 %s.1, i64* %30, align 8, !dbg !1673
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill7, metadata !1674, metadata !DIExpression()), !dbg !1678
  %31 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_25 to { [0 x i8]*, i64 }*, !dbg !1678
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 0, !dbg !1678
  store [0 x i8]* %s.0, [0 x i8]** %32, align 8, !dbg !1678
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 1, !dbg !1678
  store i64 %s.1, i64* %33, align 8, !dbg !1678
  %34 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_25 to { i8*, i64 }*, !dbg !1678
  %35 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %34, i32 0, i32 1, !dbg !1678
  %count = load i64, i64* %35, align 8, !dbg !1678
  store i64 %count, i64* %count.dbg.spill, align 8, !dbg !1678
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !1653, metadata !DIExpression()), !dbg !1671
  store i8* %self, i8** %src.dbg.spill, align 8, !dbg !1671
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill, metadata !1631, metadata !DIExpression()), !dbg !1679
  store i8* %dest, i8** %dst.dbg.spill, align 8, !dbg !1671
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !1633, metadata !DIExpression()), !dbg !1679
  store i64 %count, i64* %count.dbg.spill8, align 8, !dbg !1671
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill8, metadata !1634, metadata !DIExpression()), !dbg !1679
  %36 = mul i64 %count, 1, !dbg !1679
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dest, i8* align 1 %self, i64 %36, i1 false), !dbg !1679
  store %"alloc::vec::Vec<u8>"* %v, %"alloc::vec::Vec<u8>"** %self.dbg.spill9, align 8, !dbg !1680
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill9, metadata !1681, metadata !DIExpression()), !dbg !1689
  %37 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill10, i32 0, i32 0, !dbg !1690
  store [0 x i8]* %s.0, [0 x i8]** %37, align 8, !dbg !1690
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill10, i32 0, i32 1, !dbg !1690
  store i64 %s.1, i64* %38, align 8, !dbg !1690
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill10, metadata !1691, metadata !DIExpression()), !dbg !1695
  %39 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_34 to { [0 x i8]*, i64 }*, !dbg !1695
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %39, i32 0, i32 0, !dbg !1695
  store [0 x i8]* %s.0, [0 x i8]** %40, align 8, !dbg !1695
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %39, i32 0, i32 1, !dbg !1695
  store i64 %s.1, i64* %41, align 8, !dbg !1695
  %42 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_34 to { i8*, i64 }*, !dbg !1695
  %43 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %42, i32 0, i32 1, !dbg !1695
  %new_len = load i64, i64* %43, align 8, !dbg !1695
  store i64 %new_len, i64* %new_len.dbg.spill, align 8, !dbg !1695
  call void @llvm.dbg.declare(metadata i64* %new_len.dbg.spill, metadata !1688, metadata !DIExpression()), !dbg !1689
  %44 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %v, i32 0, i32 1, !dbg !1689
  store i64 %new_len, i64* %44, align 8, !dbg !1689
  ret void, !dbg !1696

abort:                                            ; preds = %bb2
  %45 = landingpad { i8*, i32 }
          cleanup, !dbg !1697
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #14, !dbg !1697
  unreachable, !dbg !1697

bb3:                                              ; preds = %bb4, %bb5
  %46 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1697
  %47 = load i8*, i8** %46, align 8, !dbg !1697
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1697
  %49 = load i32, i32* %48, align 8, !dbg !1697
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0, !dbg !1697
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1, !dbg !1697
  resume { i8*, i32 } %51, !dbg !1697

bb4:                                              ; preds = %bb5
  br label %bb3, !dbg !1663
}

; <&T as core::convert::AsRef<U>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h070ed05afd8b3047E"({ [0 x i8]*, i64 }* align 8 %self) unnamed_addr #0 !dbg !1698 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill, metadata !1703, metadata !DIExpression()), !dbg !1706
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0, !dbg !1707
  %_3.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !1707, !nonnull !26, !align !353, !noundef !26
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1, !dbg !1707
  %_3.1 = load i64, i64* %1, align 8, !dbg !1707
; call <str as core::convert::AsRef<str>>::as_ref
  %2 = call { [0 x i8]*, i64 } @"_ZN55_$LT$str$u20$as$u20$core..convert..AsRef$LT$str$GT$$GT$6as_ref17h1d480eb17f735610E"([0 x i8]* align 1 %_3.0, i64 %_3.1), !dbg !1708
  %3 = extractvalue { [0 x i8]*, i64 } %2, 0, !dbg !1708
  %4 = extractvalue { [0 x i8]*, i64 } %2, 1, !dbg !1708
  br label %bb1, !dbg !1708

bb1:                                              ; preds = %start
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %3, 0, !dbg !1709
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %4, 1, !dbg !1709
  ret { [0 x i8]*, i64 } %6, !dbg !1709
}

; <str as core::convert::AsRef<str>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN55_$LT$str$u20$as$u20$core..convert..AsRef$LT$str$GT$$GT$6as_ref17h1d480eb17f735610E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1710 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1715, metadata !DIExpression()), !dbg !1716
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %self.0, 0, !dbg !1717
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %self.1, 1, !dbg !1717
  ret { [0 x i8]*, i64 } %3, !dbg !1717
}

; alloc::ffi::c_str::CString::new
; Function Attrs: nonlazybind uwtable
define void @_ZN5alloc3ffi5c_str7CString3new17h0cecf027ce58c664E(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>") %0, [0 x i8]* align 1 %t.0, i64 %t.1) unnamed_addr #1 !dbg !1718 {
start:
  %t.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %t.dbg.spill, i32 0, i32 0
  store [0 x i8]* %t.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %t.dbg.spill, i32 0, i32 1
  store i64 %t.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %t.dbg.spill, metadata !1723, metadata !DIExpression()), !dbg !1724
; call <&str as alloc::ffi::c_str::CString::new::SpecNewImpl>::spec_new_impl
  call void @"_ZN72_$LT$$RF$str$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17h2b2077657056158aE"(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>") %0, [0 x i8]* align 1 %t.0, i64 %t.1), !dbg !1725
  br label %bb1, !dbg !1725

bb1:                                              ; preds = %start
  ret void, !dbg !1726
}

; alloc::fmt::format
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc3fmt6format17heb80f0ac00635400E(%"alloc::string::String"* sret(%"alloc::string::String") %0, %"core::fmt::Arguments"* %args) unnamed_addr #0 !dbg !1727 {
start:
  %_4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Arguments"* %args, metadata !1732, metadata !DIExpression()), !dbg !1733
; call core::fmt::Arguments::as_str
  %1 = call { i8*, i64 } @_ZN4core3fmt9Arguments6as_str17hc018f819405eaff4E(%"core::fmt::Arguments"* align 8 %args), !dbg !1734
  %_2.0 = extractvalue { i8*, i64 } %1, 0, !dbg !1734
  %_2.1 = extractvalue { i8*, i64 } %1, 1, !dbg !1734
  br label %bb1, !dbg !1734

bb1:                                              ; preds = %start
  %2 = bitcast i64** %_4 to %"core::fmt::Arguments"**, !dbg !1735
  store %"core::fmt::Arguments"* %args, %"core::fmt::Arguments"** %2, align 8, !dbg !1735
  %3 = load i64*, i64** %_4, align 8, !dbg !1734, !nonnull !26, !align !658, !noundef !26
; call core::option::Option<T>::map_or_else
  call void @"_ZN4core6option15Option$LT$T$GT$11map_or_else17h2b746e8d475aa0c8E"(%"alloc::string::String"* sret(%"alloc::string::String") %0, i8* align 1 %_2.0, i64 %_2.1, i64* align 8 %3), !dbg !1734
  br label %bb2, !dbg !1734

bb2:                                              ; preds = %bb1
  ret void, !dbg !1736
}

; alloc::fmt::format::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3fmt6format28_$u7b$$u7b$closure$u7d$$u7d$17ha9d3c5d1098fc22eE"(%"alloc::string::String"* sret(%"alloc::string::String") %0, i64* align 8 %1) unnamed_addr #0 !dbg !1737 {
start:
  %_2 = alloca %"core::fmt::Arguments", align 8
  %_1 = alloca i64*, align 8
  store i64* %1, i64** %_1, align 8
  %2 = bitcast i64** %_1 to %"core::fmt::Arguments"**
  %3 = load %"core::fmt::Arguments"*, %"core::fmt::Arguments"** %2, align 8, !nonnull !26, !align !658, !noundef !26
  call void @llvm.dbg.declare(metadata i64** %_1, metadata !1741, metadata !DIExpression(DW_OP_deref)), !dbg !1742
  %4 = bitcast i64** %_1 to %"core::fmt::Arguments"**, !dbg !1743
  %_3 = load %"core::fmt::Arguments"*, %"core::fmt::Arguments"** %4, align 8, !dbg !1743, !nonnull !26, !align !658, !noundef !26
  %5 = bitcast %"core::fmt::Arguments"* %_2 to i8*, !dbg !1743
  %6 = bitcast %"core::fmt::Arguments"* %_3 to i8*, !dbg !1743
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 48, i1 false), !dbg !1743
; call alloc::fmt::format::format_inner
  call void @_ZN5alloc3fmt6format12format_inner17h840d5de64fab0778E(%"alloc::string::String"* sret(%"alloc::string::String") %0, %"core::fmt::Arguments"* %_2), !dbg !1744
  br label %bb1, !dbg !1744

bb1:                                              ; preds = %start
  ret void, !dbg !1745
}

; alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h0448ba9e8f2e7d08E"(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1746 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_7 = alloca %"alloc::vec::Vec<u8>", align 8
  %bytes = alloca %"alloc::vec::Vec<u8>", align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1748, metadata !DIExpression()), !dbg !1749
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %bytes, metadata !1750, metadata !DIExpression()), !dbg !1754
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !1756
  store [0 x i8]* %self.0, [0 x i8]** %4, align 8, !dbg !1756
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !1756
  store i64 %self.1, i64* %5, align 8, !dbg !1756
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !1757, metadata !DIExpression()), !dbg !1761
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !1761
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8, !dbg !1761
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !1761
  store i64 %self.1, i64* %7, align 8, !dbg !1761
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !1761
  %_4.0 = load [0 x i8]*, [0 x i8]** %8, align 8, !dbg !1761, !nonnull !26, !align !353, !noundef !26
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !1761
  %_4.1 = load i64, i64* %9, align 8, !dbg !1761
  br label %bb2, !dbg !1761

bb2:                                              ; preds = %start
; call alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned
  call void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17hd771beb52e788fccE"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %bytes, [0 x i8]* align 1 %_4.0, i64 %_4.1), !dbg !1756
  br label %bb1, !dbg !1756

bb1:                                              ; preds = %bb2
  %10 = bitcast %"alloc::vec::Vec<u8>"* %_7 to i8*, !dbg !1754
  %11 = bitcast %"alloc::vec::Vec<u8>"* %bytes to i8*, !dbg !1754
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !dbg !1754
  %12 = bitcast %"alloc::string::String"* %0 to %"alloc::vec::Vec<u8>"*, !dbg !1754
  %13 = bitcast %"alloc::vec::Vec<u8>"* %12 to i8*, !dbg !1754
  %14 = bitcast %"alloc::vec::Vec<u8>"* %_7 to i8*, !dbg !1754
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false), !dbg !1754
  ret void, !dbg !1762
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h34c25918ba95f615E"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #0 !dbg !1763 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !1767, metadata !DIExpression()), !dbg !1770
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !1771, metadata !DIExpression()), !dbg !1776
  %self1 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !1785
  store { i8*, i64 }* %self1, { i8*, i64 }** %self.dbg.spill2, align 8, !dbg !1785
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill2, metadata !1786, metadata !DIExpression()), !dbg !1793
  %2 = bitcast { i8*, i64 }* %self1 to i8**, !dbg !1793
  %self3 = load i8*, i8** %2, align 8, !dbg !1793, !nonnull !26, !noundef !26
  store i8* %self3, i8** %self.dbg.spill4, align 8, !dbg !1793
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !1794, metadata !DIExpression()), !dbg !1798
  store i8* %self3, i8** %self.dbg.spill5, align 8, !dbg !1798
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !1800, metadata !DIExpression()), !dbg !1804
  store i8* %self3, i8** %ptr.dbg.spill, align 8, !dbg !1804
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1768, metadata !DIExpression()), !dbg !1806
  store i8* %self3, i8** %self.dbg.spill6, align 8, !dbg !1784
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !1782, metadata !DIExpression()), !dbg !1807
  store i8* %self3, i8** %self.dbg.spill7, align 8, !dbg !1807
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !1808, metadata !DIExpression()), !dbg !1813
  %3 = bitcast {}** %1 to i64*, !dbg !1815
  store i64 0, i64* %3, align 8, !dbg !1815
  %data_address = load {}*, {}** %1, align 8, !dbg !1815
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !1815
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1775, metadata !DIExpression()), !dbg !1776
  br label %bb2, !dbg !1815

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to {}**, !dbg !1776
  store {}* %data_address, {}** %4, align 8, !dbg !1776
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !1776
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !1776
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to i8*, !dbg !1776
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !1776
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to i8**, !dbg !1776
  %other = load i8*, i8** %8, align 8, !dbg !1776
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !1776
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !1812, metadata !DIExpression()), !dbg !1813
  %9 = icmp eq i8* %self3, %other, !dbg !1813
  %10 = zext i1 %9 to i8, !dbg !1813
  store i8 %10, i8* %0, align 1, !dbg !1813
  %11 = load i8, i8* %0, align 1, !dbg !1813, !range !685, !noundef !26
  %_5 = trunc i8 %11 to i1, !dbg !1813
  br label %bb3, !dbg !1813

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true, !dbg !1821
  call void @llvm.assume(i1 %_4), !dbg !1822
  br label %bb1, !dbg !1822

bb1:                                              ; preds = %bb3
  ret i8* %self3, !dbg !1823
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf5c71e8a33b2e895E"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #0 !dbg !1824 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_20 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_19 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !1829, metadata !DIExpression()), !dbg !1832
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !1833, metadata !DIExpression()), !dbg !1838
  %self1 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !1847
  store { i8*, i64 }* %self1, { i8*, i64 }** %self.dbg.spill2, align 8, !dbg !1847
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill2, metadata !1848, metadata !DIExpression()), !dbg !1852
  %2 = bitcast { i8*, i64 }* %self1 to i8**, !dbg !1852
  %self3 = load i8*, i8** %2, align 8, !dbg !1852, !nonnull !26, !noundef !26
  store i8* %self3, i8** %self.dbg.spill4, align 8, !dbg !1852
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !1853, metadata !DIExpression()), !dbg !1857
  store i8* %self3, i8** %self.dbg.spill5, align 8, !dbg !1857
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !1859, metadata !DIExpression()), !dbg !1863
  store i8* %self3, i8** %ptr.dbg.spill, align 8, !dbg !1863
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1830, metadata !DIExpression()), !dbg !1865
  store i8* %self3, i8** %self.dbg.spill6, align 8, !dbg !1846
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !1844, metadata !DIExpression()), !dbg !1866
  store i8* %self3, i8** %self.dbg.spill7, align 8, !dbg !1866
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !1867, metadata !DIExpression()), !dbg !1872
  %3 = bitcast {}** %1 to i64*, !dbg !1874
  store i64 0, i64* %3, align 8, !dbg !1874
  %data_address = load {}*, {}** %1, align 8, !dbg !1874
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !1874
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1837, metadata !DIExpression()), !dbg !1838
  br label %bb2, !dbg !1874

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_20 to {}**, !dbg !1838
  store {}* %data_address, {}** %4, align 8, !dbg !1838
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_19 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !1838
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !1838
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_20 to i8*, !dbg !1838
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !1838
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_19 to i8**, !dbg !1838
  %other = load i8*, i8** %8, align 8, !dbg !1838
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !1838
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !1871, metadata !DIExpression()), !dbg !1872
  %9 = icmp eq i8* %self3, %other, !dbg !1872
  %10 = zext i1 %9 to i8, !dbg !1872
  store i8 %10, i8* %0, align 1, !dbg !1872
  %11 = load i8, i8* %0, align 1, !dbg !1872, !range !685, !noundef !26
  %_6 = trunc i8 %11 to i1, !dbg !1872
  br label %bb3, !dbg !1872

bb3:                                              ; preds = %bb2
  %_5 = xor i1 %_6, true, !dbg !1880
  call void @llvm.assume(i1 %_5), !dbg !1881
  br label %bb1, !dbg !1881

bb1:                                              ; preds = %bb3
  ret i8* %self3, !dbg !1882
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h80dd30419e3b1a23E(%"alloc::alloc::Global"* align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #0 !dbg !1883 {
start:
  %ptr.dbg.spill38 = alloca { [0 x i8]*, i64 }, align 8
  %data_address.dbg.spill35 = alloca {}*, align 8
  %self.dbg.spill33 = alloca i8*, align 8
  %data.dbg.spill32 = alloca i8*, align 8
  %self.dbg.spill31 = alloca i8*, align 8
  %ptr.dbg.spill29 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %addr.dbg.spill = alloca i64, align 8
  %n.dbg.spill28 = alloca i64, align 8
  %self.dbg.spill27 = alloca { i64, i64 }*, align 8
  %self.dbg.spill26 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill25 = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill24 = alloca i8*, align 8
  %len.dbg.spill23 = alloca i64, align 8
  %data.dbg.spill22 = alloca i8*, align 8
  %self.dbg.spill21 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill20 = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %n.dbg.spill18 = alloca i64, align 8
  %self.dbg.spill17 = alloca { i64, i64 }*, align 8
  %self.dbg.spill16 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill15 = alloca { i64, i64 }*, align 8
  %self.dbg.spill14 = alloca { i64, i64 }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %self.dbg.spill13 = alloca { i64, i64 }*, align 8
  %e.dbg.spill12 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %residual.dbg.spill5 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %_94 = alloca { i8*, i64 }, align 8
  %_93 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self11 = alloca i64, align 8
  %self10 = alloca i64, align 8
  %self9 = alloca i64, align 8
  %self8 = alloca i64, align 8
  %_51 = alloca { i8*, i64 }, align 8
  %_50 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self7 = alloca i64, align 8
  %self6 = alloca i64, align 8
  %_24 = alloca { i8*, i64 }, align 8
  %self4 = alloca i8*, align 8
  %self3 = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout2 = alloca { i64, i64 }, align 8
  %layout1 = alloca { i64, i64 }, align 8
  %raw_ptr = alloca i8*, align 8
  %data = alloca i8*, align 8
  %_6 = alloca { i8*, i64 }, align 8
  %3 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !1912, metadata !DIExpression()), !dbg !1938
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !1913, metadata !DIExpression()), !dbg !1939
  %6 = zext i1 %zeroed to i8
  store i8 %6, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !1914, metadata !DIExpression()), !dbg !1940
  call void @llvm.dbg.declare(metadata i8** %data, metadata !1941, metadata !DIExpression()), !dbg !1948
  call void @llvm.dbg.declare(metadata i8** %raw_ptr, metadata !1917, metadata !DIExpression()), !dbg !1950
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout1, metadata !1951, metadata !DIExpression()), !dbg !1956
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout2, metadata !1958, metadata !DIExpression()), !dbg !1961
  call void @llvm.dbg.declare(metadata i8** %self3, metadata !1963, metadata !DIExpression()), !dbg !2005
  call void @llvm.dbg.declare(metadata i8** %self4, metadata !2007, metadata !DIExpression()), !dbg !2017
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %err.dbg.spill, metadata !2013, metadata !DIExpression()), !dbg !2017
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !1921, metadata !DIExpression()), !dbg !2018
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill5, metadata !2019, metadata !DIExpression()), !dbg !2030
  call void @llvm.dbg.declare(metadata i64* %self6, metadata !2032, metadata !DIExpression()), !dbg !2036
  call void @llvm.dbg.declare(metadata i64* %self7, metadata !2053, metadata !DIExpression()), !dbg !2057
  call void @llvm.dbg.declare(metadata i64* %self8, metadata !2058, metadata !DIExpression()), !dbg !2062
  call void @llvm.dbg.declare(metadata i64* %self9, metadata !2069, metadata !DIExpression()), !dbg !2073
  call void @llvm.dbg.declare(metadata i64* %self10, metadata !2074, metadata !DIExpression()), !dbg !2078
  call void @llvm.dbg.declare(metadata i64* %self11, metadata !2085, metadata !DIExpression()), !dbg !2089
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !2002, metadata !DIExpression()), !dbg !2090
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill12, metadata !2025, metadata !DIExpression()), !dbg !2091
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill13, align 8, !dbg !2092
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill13, metadata !2093, metadata !DIExpression()), !dbg !2097
  %7 = bitcast { i64, i64 }* %layout to i64*, !dbg !2097
  %_4 = load i64, i64* %7, align 8, !dbg !2097
  %8 = icmp eq i64 %_4, 0, !dbg !2098
  br i1 %8, label %bb2, label %bb1, !dbg !2098

bb2:                                              ; preds = %start
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill26, align 8, !dbg !2052
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill26, metadata !2050, metadata !DIExpression()), !dbg !2099
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill27, align 8, !dbg !2099
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill27, metadata !2043, metadata !DIExpression()), !dbg !2100
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2100
  %10 = load i64, i64* %9, align 8, !dbg !2100, !range !1211, !noundef !26
  store i64 %10, i64* %self7, align 8, !dbg !2100
  %_33 = load i64, i64* %self7, align 8, !dbg !2057, !range !1211, !noundef !26
  store i64 %_33, i64* %n.dbg.spill28, align 8, !dbg !2057
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill28, metadata !2101, metadata !DIExpression()), !dbg !2108
  store i64 %_33, i64* %self6, align 8, !dbg !2108
  %addr = load i64, i64* %self6, align 8, !dbg !2036
  store i64 %addr, i64* %addr.dbg.spill, align 8, !dbg !2036
  call void @llvm.dbg.declare(metadata i64* %addr.dbg.spill, metadata !2110, metadata !DIExpression()), !dbg !2116
  %11 = bitcast i8** %2 to i64*, !dbg !2116
  store i64 %addr, i64* %11, align 8, !dbg !2116
  %ptr = load i8*, i8** %2, align 8, !dbg !2116
  store i8* %ptr, i8** %ptr.dbg.spill29, align 8, !dbg !2116
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill29, metadata !2118, metadata !DIExpression()), !dbg !2122
  br label %bb13, !dbg !2116

bb1:                                              ; preds = %start
  store i64 %_4, i64* %size.dbg.spill, align 8, !dbg !2124
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !1915, metadata !DIExpression()), !dbg !2125
  br i1 %zeroed, label %bb3, label %bb4, !dbg !2126

bb4:                                              ; preds = %bb1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !2127
  %13 = load i64, i64* %12, align 8, !dbg !2127
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2127
  %15 = load i64, i64* %14, align 8, !dbg !2127, !range !1211, !noundef !26
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 0, !dbg !2127
  store i64 %13, i64* %16, align 8, !dbg !2127
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 1, !dbg !2127
  store i64 %15, i64* %17, align 8, !dbg !2127
  store { i64, i64 }* %layout2, { i64, i64 }** %self.dbg.spill16, align 8, !dbg !1961
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill16, metadata !2128, metadata !DIExpression()), !dbg !2132
  %18 = bitcast { i64, i64 }* %layout2 to i64*, !dbg !2132
  %_67 = load i64, i64* %18, align 8, !dbg !2132
  store { i64, i64 }* %layout2, { i64, i64 }** %self.dbg.spill17, align 8, !dbg !1961
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill17, metadata !2082, metadata !DIExpression()), !dbg !2134
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 1, !dbg !2134
  %20 = load i64, i64* %19, align 8, !dbg !2134, !range !1211, !noundef !26
  store i64 %20, i64* %self11, align 8, !dbg !2134
  %_74 = load i64, i64* %self11, align 8, !dbg !2089, !range !1211, !noundef !26
  store i64 %_74, i64* %n.dbg.spill18, align 8, !dbg !2089
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill18, metadata !2135, metadata !DIExpression()), !dbg !2142
  store i64 %_74, i64* %self10, align 8, !dbg !2142
  %_69 = load i64, i64* %self10, align 8, !dbg !2078
  %21 = call i8* @__rust_alloc(i64 %_67, i64 %_69) #15, !dbg !1961
  store i8* %21, i8** %raw_ptr, align 8, !dbg !1961
  br label %bb15, !dbg !1961

bb3:                                              ; preds = %bb1
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !2144
  %23 = load i64, i64* %22, align 8, !dbg !2144
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2144
  %25 = load i64, i64* %24, align 8, !dbg !2144, !range !1211, !noundef !26
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 0, !dbg !2144
  store i64 %23, i64* %26, align 8, !dbg !2144
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !2144
  store i64 %25, i64* %27, align 8, !dbg !2144
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill14, align 8, !dbg !1956
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill14, metadata !2145, metadata !DIExpression()), !dbg !2149
  %28 = bitcast { i64, i64 }* %layout1 to i64*, !dbg !2149
  %_57 = load i64, i64* %28, align 8, !dbg !2149
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill15, align 8, !dbg !1956
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill15, metadata !2066, metadata !DIExpression()), !dbg !2151
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !2151
  %30 = load i64, i64* %29, align 8, !dbg !2151, !range !1211, !noundef !26
  store i64 %30, i64* %self9, align 8, !dbg !2151
  %_64 = load i64, i64* %self9, align 8, !dbg !2073, !range !1211, !noundef !26
  store i64 %_64, i64* %n.dbg.spill, align 8, !dbg !2073
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !2152, metadata !DIExpression()), !dbg !2159
  store i64 %_64, i64* %self8, align 8, !dbg !2159
  %_59 = load i64, i64* %self8, align 8, !dbg !2062
  %31 = call i8* @__rust_alloc_zeroed(i64 %_57, i64 %_59) #15, !dbg !1956
  store i8* %31, i8** %raw_ptr, align 8, !dbg !1956
  br label %bb14, !dbg !1956

bb14:                                             ; preds = %bb3
  br label %bb5, !dbg !2161

bb5:                                              ; preds = %bb15, %bb14
  %_18 = load i8*, i8** %raw_ptr, align 8, !dbg !2162
; call core::ptr::non_null::NonNull<T>::new
  %32 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hc739bec02c7381b9E"(i8* %_18), !dbg !2006
  store i8* %32, i8** %self4, align 8, !dbg !2006
  br label %bb6, !dbg !2006

bb15:                                             ; preds = %bb4
  br label %bb5, !dbg !2161

bb6:                                              ; preds = %bb5
  %33 = bitcast i8** %self4 to {}**, !dbg !2017
  %34 = load {}*, {}** %33, align 8, !dbg !2017
  %35 = icmp eq {}* %34, null, !dbg !2017
  %_77 = select i1 %35, i64 0, i64 1, !dbg !2017
  switch i64 %_77, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ], !dbg !2017

bb17:                                             ; preds = %bb6
  unreachable, !dbg !2017

bb16:                                             ; preds = %bb6
  %36 = bitcast i8** %self3 to {}**, !dbg !2017
  store {}* null, {}** %36, align 8, !dbg !2017
  br label %bb19, !dbg !2017

bb18:                                             ; preds = %bb6
  %v = load i8*, i8** %self4, align 8, !dbg !2017, !nonnull !26, !noundef !26
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !2017
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !2014, metadata !DIExpression()), !dbg !2163
  store i8* %v, i8** %self3, align 8, !dbg !2163
  br label %bb19, !dbg !2017

bb19:                                             ; preds = %bb16, %bb18
  %37 = bitcast i8** %self3 to {}**, !dbg !2005
  %38 = load {}*, {}** %37, align 8, !dbg !2005
  %39 = icmp eq {}* %38, null, !dbg !2005
  %_80 = select i1 %39, i64 1, i64 0, !dbg !2005
  switch i64 %_80, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !2005

bb21:                                             ; preds = %bb19
  unreachable, !dbg !2005

bb22:                                             ; preds = %bb19
  %v19 = load i8*, i8** %self3, align 8, !dbg !2005, !nonnull !26, !noundef !26
  store i8* %v19, i8** %v.dbg.spill20, align 8, !dbg !2005
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill20, metadata !1999, metadata !DIExpression()), !dbg !2164
  store i8* %v19, i8** %_15, align 8, !dbg !2164
  br label %bb7, !dbg !2005

bb20:                                             ; preds = %bb19
  %40 = bitcast i8** %_15 to {}**, !dbg !2090
  store {}* null, {}** %40, align 8, !dbg !2090
  br label %bb7, !dbg !2005

bb7:                                              ; preds = %bb22, %bb20
  %41 = bitcast i8** %_15 to {}**, !dbg !2006
  %42 = load {}*, {}** %41, align 8, !dbg !2006
  %43 = icmp eq {}* %42, null, !dbg !2006
  %_20 = select i1 %43, i64 1, i64 0, !dbg !2006
  switch i64 %_20, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !2006

bb9:                                              ; preds = %bb7
  unreachable, !dbg !2006

bb8:                                              ; preds = %bb7
  %val = load i8*, i8** %_15, align 8, !dbg !2006, !nonnull !26, !noundef !26
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !2006
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !1936, metadata !DIExpression()), !dbg !2165
  store i8* %val, i8** %ptr.dbg.spill, align 8, !dbg !2165
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1919, metadata !DIExpression()), !dbg !2166
  store i8* %val, i8** %data.dbg.spill, align 8, !dbg !2167
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !2168, metadata !DIExpression()), !dbg !2173
  store i64 %_4, i64* %len.dbg.spill, align 8, !dbg !2175
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2172, metadata !DIExpression()), !dbg !2173
  store i8* %val, i8** %self.dbg.spill21, align 8, !dbg !2173
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill21, metadata !2176, metadata !DIExpression()), !dbg !2180
  store i8* %val, i8** %data.dbg.spill22, align 8, !dbg !2180
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill22, metadata !2182, metadata !DIExpression()), !dbg !2193
  store i64 %_4, i64* %len.dbg.spill23, align 8, !dbg !2173
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill23, metadata !2192, metadata !DIExpression()), !dbg !2193
  store i8* %val, i8** %self.dbg.spill24, align 8, !dbg !2193
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill24, metadata !2195, metadata !DIExpression()), !dbg !2203
  %data_address = bitcast i8* %val to {}*, !dbg !2203
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !2203
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !2205, metadata !DIExpression()), !dbg !2212
  store i64 %_4, i64* %metadata.dbg.spill, align 8, !dbg !2193
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !2211, metadata !DIExpression()), !dbg !2212
  %44 = bitcast { i8*, i64 }* %_94 to {}**, !dbg !2212
  store {}* %data_address, {}** %44, align 8, !dbg !2212
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 1, !dbg !2212
  store i64 %_4, i64* %45, align 8, !dbg !2212
  %46 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_93 to { i8*, i64 }*, !dbg !2212
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 0, !dbg !2212
  %48 = load i8*, i8** %47, align 8, !dbg !2212
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 1, !dbg !2212
  %50 = load i64, i64* %49, align 8, !dbg !2212
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 0, !dbg !2212
  store i8* %48, i8** %51, align 8, !dbg !2212
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 1, !dbg !2212
  store i64 %50, i64* %52, align 8, !dbg !2212
  %53 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_93 to { [0 x i8]*, i64 }*, !dbg !2212
  %54 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 0, !dbg !2212
  %ptr.0 = load [0 x i8]*, [0 x i8]** %54, align 8, !dbg !2212
  %55 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 1, !dbg !2212
  %ptr.1 = load i64, i64* %55, align 8, !dbg !2212
  %56 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill25, i32 0, i32 0, !dbg !2212
  store [0 x i8]* %ptr.0, [0 x i8]** %56, align 8, !dbg !2212
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill25, i32 0, i32 1, !dbg !2212
  store i64 %ptr.1, i64* %57, align 8, !dbg !2212
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill25, metadata !2214, metadata !DIExpression()), !dbg !2220
  %58 = bitcast { i8*, i64 }* %_24 to { [0 x i8]*, i64 }*, !dbg !2220
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 0, !dbg !2220
  store [0 x i8]* %ptr.0, [0 x i8]** %59, align 8, !dbg !2220
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 1, !dbg !2220
  store i64 %ptr.1, i64* %60, align 8, !dbg !2220
  %61 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 0, !dbg !2222
  %62 = load i8*, i8** %61, align 8, !dbg !2222, !nonnull !26, !noundef !26
  %63 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !2222
  %64 = load i64, i64* %63, align 8, !dbg !2222
  %65 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !2222
  store i8* %62, i8** %65, align 8, !dbg !2222
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !2222
  store i64 %64, i64* %66, align 8, !dbg !2222
  br label %bb11, !dbg !2223

bb10:                                             ; preds = %bb7
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h5a2efa16e49566acE"(), !dbg !2091
  br label %bb23, !dbg !2091

bb23:                                             ; preds = %bb10
  %67 = bitcast { i8*, i64 }* %3 to {}**, !dbg !2091
  store {}* null, {}** %67, align 8, !dbg !2091
  br label %bb12, !dbg !2224

bb12:                                             ; preds = %bb11, %bb23
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !2224
  %69 = load i8*, i8** %68, align 8, !dbg !2224
  %70 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !2224
  %71 = load i64, i64* %70, align 8, !dbg !2224
  %72 = insertvalue { i8*, i64 } undef, i8* %69, 0, !dbg !2224
  %73 = insertvalue { i8*, i64 } %72, i64 %71, 1, !dbg !2224
  ret { i8*, i64 } %73, !dbg !2224

bb11:                                             ; preds = %bb13, %bb8
  br label %bb12, !dbg !2224

bb13:                                             ; preds = %bb2
  store i8* %ptr, i8** %data, align 8, !dbg !2122
  %self30 = load i8*, i8** %data, align 8, !dbg !1948, !nonnull !26, !noundef !26
  store i8* %self30, i8** %self.dbg.spill31, align 8, !dbg !1948
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill31, metadata !2225, metadata !DIExpression()), !dbg !2229
  store i8* %self30, i8** %data.dbg.spill32, align 8, !dbg !2229
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill32, metadata !2231, metadata !DIExpression()), !dbg !2236
  store i8* %self30, i8** %self.dbg.spill33, align 8, !dbg !2236
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill33, metadata !2238, metadata !DIExpression()), !dbg !2242
  %data_address34 = bitcast i8* %self30 to {}*, !dbg !2242
  store {}* %data_address34, {}** %data_address.dbg.spill35, align 8, !dbg !2242
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill35, metadata !2244, metadata !DIExpression()), !dbg !2249
  %74 = bitcast { i8*, i64 }* %_51 to {}**, !dbg !2249
  store {}* %data_address34, {}** %74, align 8, !dbg !2249
  %75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 1, !dbg !2249
  store i64 0, i64* %75, align 8, !dbg !2249
  %76 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_50 to { i8*, i64 }*, !dbg !2249
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 0, !dbg !2249
  %78 = load i8*, i8** %77, align 8, !dbg !2249
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 1, !dbg !2249
  %80 = load i64, i64* %79, align 8, !dbg !2249
  %81 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %76, i32 0, i32 0, !dbg !2249
  store i8* %78, i8** %81, align 8, !dbg !2249
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %76, i32 0, i32 1, !dbg !2249
  store i64 %80, i64* %82, align 8, !dbg !2249
  %83 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_50 to { [0 x i8]*, i64 }*, !dbg !2249
  %84 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %83, i32 0, i32 0, !dbg !2249
  %ptr.036 = load [0 x i8]*, [0 x i8]** %84, align 8, !dbg !2249
  %85 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %83, i32 0, i32 1, !dbg !2249
  %ptr.137 = load i64, i64* %85, align 8, !dbg !2249
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill38, i32 0, i32 0, !dbg !2249
  store [0 x i8]* %ptr.036, [0 x i8]** %86, align 8, !dbg !2249
  %87 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill38, i32 0, i32 1, !dbg !2249
  store i64 %ptr.137, i64* %87, align 8, !dbg !2249
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill38, metadata !2251, metadata !DIExpression()), !dbg !2255
  %88 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*, !dbg !2255
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 0, !dbg !2255
  store [0 x i8]* %ptr.036, [0 x i8]** %89, align 8, !dbg !2255
  %90 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 1, !dbg !2255
  store i64 %ptr.137, i64* %90, align 8, !dbg !2255
  %91 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !2257
  %92 = load i8*, i8** %91, align 8, !dbg !2257, !nonnull !26, !noundef !26
  %93 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !2257
  %94 = load i64, i64* %93, align 8, !dbg !2257
  %95 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !2257
  store i8* %92, i8** %95, align 8, !dbg !2257
  %96 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !2257
  store i64 %94, i64* %96, align 8, !dbg !2257
  br label %bb11, !dbg !2258
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17ha9bd49e80e121074E(i8* %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2259 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill19 = alloca i8*, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i64 }, align 8
  %self.dbg.spill14 = alloca { i8*, i64 }, align 8
  %self.dbg.spill13 = alloca { i8*, i64 }, align 8
  %3 = alloca i64, align 8
  %align.dbg.spill10 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %size.dbg.spill8 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill7 = alloca { i8*, i64 }, align 8
  %self.dbg.spill4 = alloca { i8*, i64 }*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }, align 8
  %self.dbg.spill1 = alloca { i8*, i64 }*, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64 }, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr, metadata !2268, metadata !DIExpression()), !dbg !2276
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !2269, metadata !DIExpression()), !dbg !2277
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2274, metadata !DIExpression()), !dbg !2278
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !2279, metadata !DIExpression()), !dbg !2283
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !2285, metadata !DIExpression()), !dbg !2292
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill, align 8, !dbg !2301
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !2302, metadata !DIExpression()), !dbg !2309
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill1, align 8, !dbg !2309
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill1, metadata !2310, metadata !DIExpression()), !dbg !2317
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0, !dbg !2317
  %self.0 = load i8*, i8** %8, align 8, !dbg !2317, !nonnull !26, !noundef !26
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1, !dbg !2317
  %self.1 = load i64, i64* %9, align 8, !dbg !2317
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !2317
  store i8* %self.0, i8** %10, align 8, !dbg !2317
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !2317
  store i64 %self.1, i64* %11, align 8, !dbg !2317
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill2, metadata !2319, metadata !DIExpression()), !dbg !2325
  %_22.0 = bitcast i8* %self.0 to [0 x i8]*, !dbg !2325
  %12 = mul nsw i64 %self.1, 1, !dbg !2327
  store i64 %12, i64* %5, align 8, !dbg !2327
  %size = load i64, i64* %5, align 8, !dbg !2327
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !2327
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !2270, metadata !DIExpression()), !dbg !2328
  br label %bb1, !dbg !2327

bb1:                                              ; preds = %start
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill3, align 8, !dbg !2329
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill3, metadata !2330, metadata !DIExpression()), !dbg !2334
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill4, align 8, !dbg !2334
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill4, metadata !2335, metadata !DIExpression()), !dbg !2339
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0, !dbg !2339
  %self.05 = load i8*, i8** %13, align 8, !dbg !2339, !nonnull !26, !noundef !26
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1, !dbg !2339
  %self.16 = load i64, i64* %14, align 8, !dbg !2339
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !2339
  store i8* %self.05, i8** %15, align 8, !dbg !2339
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !2339
  store i64 %self.16, i64* %16, align 8, !dbg !2339
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill7, metadata !2341, metadata !DIExpression()), !dbg !2345
  %_26.0 = bitcast i8* %self.05 to [0 x i8]*, !dbg !2345
  %17 = mul nsw i64 %self.16, 1, !dbg !2347
  store i64 1, i64* %4, align 8, !dbg !2347
  %align = load i64, i64* %4, align 8, !dbg !2347
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !2347
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !2272, metadata !DIExpression()), !dbg !2348
  br label %bb2, !dbg !2347

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill8, align 8, !dbg !2349
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill8, metadata !2350, metadata !DIExpression()), !dbg !2357
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !2359
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !2356, metadata !DIExpression()), !dbg !2357
  store i64 %align, i64* %align.dbg.spill10, align 8, !dbg !2357
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill10, metadata !2360, metadata !DIExpression()), !dbg !2367
  store i64 %align, i64* %3, align 8, !dbg !2367
  %_28 = load i64, i64* %3, align 8, !dbg !2367, !range !1211, !noundef !26
  br label %bb7, !dbg !2367

bb7:                                              ; preds = %bb2
  %18 = bitcast { i64, i64 }* %layout to i64*, !dbg !2357
  store i64 %size, i64* %18, align 8, !dbg !2357
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2357
  store i64 %_28, i64* %19, align 8, !dbg !2357
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0, !dbg !2300
  %self.011 = load i8*, i8** %20, align 8, !dbg !2300, !nonnull !26, !noundef !26
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1, !dbg !2300
  %self.112 = load i64, i64* %21, align 8, !dbg !2300
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill13, i32 0, i32 0, !dbg !2300
  store i8* %self.011, i8** %22, align 8, !dbg !2300
  %23 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill13, i32 0, i32 1, !dbg !2300
  store i64 %self.112, i64* %23, align 8, !dbg !2300
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill13, metadata !2298, metadata !DIExpression()), !dbg !2369
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill14, i32 0, i32 0, !dbg !2369
  store i8* %self.011, i8** %24, align 8, !dbg !2369
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill14, i32 0, i32 1, !dbg !2369
  store i64 %self.112, i64* %25, align 8, !dbg !2369
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill14, metadata !2370, metadata !DIExpression()), !dbg !2376
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill15, i32 0, i32 0, !dbg !2376
  store i8* %self.011, i8** %26, align 8, !dbg !2376
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill15, i32 0, i32 1, !dbg !2376
  store i64 %self.112, i64* %27, align 8, !dbg !2376
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill15, metadata !2378, metadata !DIExpression()), !dbg !2382
  %_37.0 = bitcast i8* %self.011 to [0 x i8]*, !dbg !2382
  %ptr16 = bitcast [0 x i8]* %_37.0 to i8*, !dbg !2376
  store i8* %ptr16, i8** %ptr.dbg.spill, align 8, !dbg !2376
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2384, metadata !DIExpression()), !dbg !2388
  store i8* %ptr16, i8** %pointer, align 8, !dbg !2388
  %_41 = load i8*, i8** %pointer, align 8, !dbg !2292, !nonnull !26, !noundef !26
  store i8* %_41, i8** %unique, align 8, !dbg !2292
  %self = load i8*, i8** %unique, align 8, !dbg !2283, !nonnull !26, !noundef !26
  store i8* %self, i8** %self.dbg.spill17, align 8, !dbg !2283
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !2390, metadata !DIExpression()), !dbg !2394
  store i8* %self, i8** %self.dbg.spill18, align 8, !dbg !2394
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !2396, metadata !DIExpression()), !dbg !2400
  store i8* %self, i8** %ptr.dbg.spill19, align 8, !dbg !2400
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill19, metadata !2402, metadata !DIExpression()), !dbg !2406
  store i8* %self, i8** %_15, align 8, !dbg !2406
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !2408
  %_18.0 = load i64, i64* %28, align 8, !dbg !2408
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2408
  %_18.1 = load i64, i64* %29, align 8, !dbg !2408, !range !1211, !noundef !26
  %30 = load i8*, i8** %_15, align 8, !dbg !2409, !nonnull !26, !noundef !26
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h45bd1516edcc9d3bE"(%"alloc::alloc::Global"* align 1 %alloc, i8* %30, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !2409

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !2410

cleanup:                                          ; preds = %bb7
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  %33 = extractvalue { i8*, i32 } %31, 1
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %33, i32* %35, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !2410

bb6:                                              ; preds = %bb5
  %36 = bitcast { i8*, i32 }* %2 to i8**, !dbg !2411
  %37 = load i8*, i8** %36, align 8, !dbg !2411
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !2411
  %39 = load i32, i32* %38, align 8, !dbg !2411
  %40 = insertvalue { i8*, i32 } undef, i8* %37, 0, !dbg !2411
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1, !dbg !2411
  resume { i8*, i32 } %41, !dbg !2411

bb4:                                              ; preds = %bb3
  ret void, !dbg !2412
}

; alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17hd771beb52e788fccE"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0, [0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !2413 {
start:
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %alloc.dbg.spill1 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2418, metadata !DIExpression()), !dbg !2419
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !2420, metadata !DIExpression()), !dbg !2425
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill1, metadata !2431, metadata !DIExpression()), !dbg !2435
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !2430
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8, !dbg !2430
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !2430
  store i64 %self.1, i64* %4, align 8, !dbg !2430
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !2429, metadata !DIExpression()), !dbg !2437
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !2437
  store [0 x i8]* %self.0, [0 x i8]** %5, align 8, !dbg !2437
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !2437
  store i64 %self.1, i64* %6, align 8, !dbg !2437
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !2424, metadata !DIExpression()), !dbg !2425
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0, !dbg !2425
  store [0 x i8]* %self.0, [0 x i8]** %7, align 8, !dbg !2425
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1, !dbg !2425
  store i64 %self.1, i64* %8, align 8, !dbg !2425
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !2434, metadata !DIExpression()), !dbg !2435
; call <T as alloc::slice::hack::ConvertVec>::to_vec
  call void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17hb7bb30850b3c25e0E"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0, [0 x i8]* align 1 %self.0, i64 %self.1), !dbg !2435
  br label %bb1, !dbg !2435

bb1:                                              ; preds = %start
  ret void, !dbg !2438
}

; alloc::string::String::as_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN5alloc6string6String6as_str17h74b8ff1aa7ae436aE(%"alloc::string::String"* align 8 %self) unnamed_addr #0 !dbg !2439 {
start:
  %self.dbg.spill = alloca %"alloc::string::String"*, align 8
  store %"alloc::string::String"* %self, %"alloc::string::String"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill, metadata !2443, metadata !DIExpression()), !dbg !2444
; call <alloc::string::String as core::ops::deref::Deref>::deref
  %0 = call { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h747584ef08f8105aE"(%"alloc::string::String"* align 8 %self), !dbg !2445
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0, !dbg !2445
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1, !dbg !2445
  br label %bb1, !dbg !2445

bb1:                                              ; preds = %start
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0, !dbg !2446
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1, !dbg !2446
  ret { [0 x i8]*, i64 } %4, !dbg !2446
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hb7853e13fe7466c9E"(i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2447 {
start:
  %ptr.dbg.spill6 = alloca i8*, align 8
  %ptr.dbg.spill5 = alloca i8*, align 8
  %ptr.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill2 = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %layout.dbg.spill1 = alloca { i64, i64 }, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %_46 = alloca i8*, align 8
  %_37 = alloca i8, align 1
  %self = alloca i8*, align 8
  %_31 = alloca i8*, align 8
  %result = alloca { i8*, i64 }, align 8
  %_15 = alloca { i64, i64 }, align 8
  %_10 = alloca { i64, i64 }, align 8
  %_4 = alloca i8, align 1
  %2 = alloca { i8*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i64 %capacity, i64* %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !2451, metadata !DIExpression()), !dbg !2464
  call void @llvm.dbg.declare(metadata i8* %init, metadata !2452, metadata !DIExpression()), !dbg !2465
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !2453, metadata !DIExpression()), !dbg !2466
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %result, metadata !2458, metadata !DIExpression()), !dbg !2467
  call void @llvm.dbg.declare(metadata i8** %self, metadata !2468, metadata !DIExpression()), !dbg !2472
  store i8 1, i8* %_37, align 1, !dbg !2474
  br i1 false, label %bb1, label %bb2, !dbg !2474

bb1:                                              ; preds = %start
  store i8 1, i8* %_4, align 1, !dbg !2474
  br label %bb3, !dbg !2474

bb2:                                              ; preds = %start
  %_6 = icmp eq i64 %capacity, 0, !dbg !2475
  %4 = zext i1 %_6 to i8, !dbg !2474
  store i8 %4, i8* %_4, align 1, !dbg !2474
  br label %bb3, !dbg !2474

bb3:                                              ; preds = %bb1, %bb2
  %5 = load i8, i8* %_4, align 1, !dbg !2474, !range !685, !noundef !26
  %6 = trunc i8 %5 to i1, !dbg !2474
  br i1 %6, label %bb4, label %bb6, !dbg !2474

bb6:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::array
  %7 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hd3d68a432436475dE(i64 %capacity)
          to label %bb7 unwind label %cleanup, !dbg !2476

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_37, align 1, !dbg !2477
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %8 = invoke { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h62b6c4e7cf57a6ceE"()
          to label %bb5 unwind label %cleanup, !dbg !2478

bb26:                                             ; preds = %cleanup
  %9 = load i8, i8* %_37, align 1, !dbg !2479, !range !685, !noundef !26
  %10 = trunc i8 %9 to i1, !dbg !2479
  br i1 %10, label %bb25, label %bb24, !dbg !2479

cleanup:                                          ; preds = %bb20, %bb16, %bb14, %bb11, %bb8, %bb6, %bb4
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb26

bb5:                                              ; preds = %bb4
  store { i8*, i64 } %8, { i8*, i64 }* %2, align 8, !dbg !2478
  br label %bb23, !dbg !2480

bb23:                                             ; preds = %bb22, %bb5
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !2481
  %17 = load i8*, i8** %16, align 8, !dbg !2481, !nonnull !26, !noundef !26
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !2481
  %19 = load i64, i64* %18, align 8, !dbg !2481
  %20 = insertvalue { i8*, i64 } undef, i8* %17, 0, !dbg !2481
  %21 = insertvalue { i8*, i64 } %20, i64 %19, 1, !dbg !2481
  ret { i8*, i64 } %21, !dbg !2481

bb7:                                              ; preds = %bb6
  store { i64, i64 } %7, { i64, i64 }* %_10, align 8, !dbg !2476
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !2476
  %23 = load i64, i64* %22, align 8, !dbg !2476, !range !1235, !noundef !26
  %24 = icmp eq i64 %23, 0, !dbg !2476
  %_12 = select i1 %24, i64 1, i64 0, !dbg !2476
  switch i64 %_12, label %bb9 [
    i64 0, label %bb10
    i64 1, label %bb8
  ], !dbg !2482

bb9:                                              ; preds = %bb7
  unreachable, !dbg !2476

bb10:                                             ; preds = %bb7
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 0, !dbg !2483
  %layout.0 = load i64, i64* %25, align 8, !dbg !2483
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !2483
  %layout.1 = load i64, i64* %26, align 8, !dbg !2483, !range !1211, !noundef !26
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !2483
  store i64 %layout.0, i64* %27, align 8, !dbg !2483
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !2483
  store i64 %layout.1, i64* %28, align 8, !dbg !2483
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !2456, metadata !DIExpression()), !dbg !2484
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 0, !dbg !2485
  store i64 %layout.0, i64* %29, align 8, !dbg !2485
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 1, !dbg !2485
  store i64 %layout.1, i64* %30, align 8, !dbg !2485
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill1, metadata !2454, metadata !DIExpression()), !dbg !2486
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !2487
  store i64 -9223372036854775807, i64* %31, align 8, !dbg !2487
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !2524
  %33 = load i64, i64* %32, align 8, !dbg !2524, !range !2525, !noundef !26
  %34 = sub i64 %33, -9223372036854775807, !dbg !2524
  %35 = icmp eq i64 %34, 0, !dbg !2524
  %_18 = select i1 %35, i64 0, i64 1, !dbg !2524
  switch i64 %_18, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ], !dbg !2526

bb8:                                              ; preds = %bb7
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #12
          to label %unreachable unwind label %cleanup, !dbg !2527

unreachable:                                      ; preds = %bb20, %bb11, %bb8
  unreachable

bb12:                                             ; preds = %bb10
  unreachable, !dbg !2524

bb13:                                             ; preds = %bb10
  %36 = load i8, i8* %init, align 1, !dbg !2528, !range !685, !noundef !26
  %37 = trunc i8 %36 to i1, !dbg !2528
  %_21 = zext i1 %37 to i64, !dbg !2528
  switch i64 %_21, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ], !dbg !2529

bb11:                                             ; preds = %bb10
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #12
          to label %unreachable unwind label %cleanup, !dbg !2530

bb15:                                             ; preds = %bb13
  unreachable, !dbg !2528

bb16:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %38 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h4eaa9050a9471fcfE"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb17 unwind label %cleanup, !dbg !2531

bb14:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %39 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hf8e946c7d2929672E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb18 unwind label %cleanup, !dbg !2532

bb18:                                             ; preds = %bb14
  store { i8*, i64 } %39, { i8*, i64 }* %result, align 8, !dbg !2532
  br label %bb19, !dbg !2533

bb19:                                             ; preds = %bb17, %bb18
  %40 = bitcast { i8*, i64 }* %result to {}**, !dbg !2534
  %41 = load {}*, {}** %40, align 8, !dbg !2534
  %42 = icmp eq {}* %41, null, !dbg !2534
  %_27 = select i1 %42, i64 1, i64 0, !dbg !2534
  switch i64 %_27, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !2535

bb17:                                             ; preds = %bb16
  store { i8*, i64 } %38, { i8*, i64 }* %result, align 8, !dbg !2531
  br label %bb19, !dbg !2536

bb21:                                             ; preds = %bb19
  unreachable, !dbg !2534

bb22:                                             ; preds = %bb19
  %43 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0, !dbg !2537
  %ptr.0 = load i8*, i8** %43, align 8, !dbg !2537, !nonnull !26, !noundef !26
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1, !dbg !2537
  %ptr.1 = load i64, i64* %44, align 8, !dbg !2537
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !2537
  store i8* %ptr.0, i8** %45, align 8, !dbg !2537
  %46 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !2537
  store i64 %ptr.1, i64* %46, align 8, !dbg !2537
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !2462, metadata !DIExpression()), !dbg !2538
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 0, !dbg !2539
  store i8* %ptr.0, i8** %47, align 8, !dbg !2539
  %48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 1, !dbg !2539
  store i64 %ptr.1, i64* %48, align 8, !dbg !2539
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill2, metadata !2460, metadata !DIExpression()), !dbg !2540
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !2473
  store i8* %ptr.0, i8** %49, align 8, !dbg !2473
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !2473
  store i64 %ptr.1, i64* %50, align 8, !dbg !2473
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !2541, metadata !DIExpression()), !dbg !2545
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !2545
  store i8* %ptr.0, i8** %51, align 8, !dbg !2545
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !2545
  store i64 %ptr.1, i64* %52, align 8, !dbg !2545
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !2546, metadata !DIExpression()), !dbg !2550
  %_41.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !2550
  %ptr = bitcast [0 x i8]* %_41.0 to i8*, !dbg !2545
  store i8* %ptr, i8** %ptr.dbg.spill4, align 8, !dbg !2545
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill4, metadata !2552, metadata !DIExpression()), !dbg !2556
  store i8* %ptr, i8** %self, align 8, !dbg !2556
  %_45 = load i8*, i8** %self, align 8, !dbg !2472
  store i8* %_45, i8** %ptr.dbg.spill5, align 8, !dbg !2472
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill5, metadata !2558, metadata !DIExpression()), !dbg !2564
  store i8* %_45, i8** %ptr.dbg.spill6, align 8, !dbg !2564
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill6, metadata !2566, metadata !DIExpression()), !dbg !2570
  store i8* %_45, i8** %_46, align 8, !dbg !2570
  %53 = load i8*, i8** %_46, align 8, !dbg !2564, !nonnull !26, !noundef !26
  store i8* %53, i8** %_31, align 8, !dbg !2564
  %54 = bitcast { i8*, i64 }* %2 to i8**, !dbg !2572
  %55 = load i8*, i8** %_31, align 8, !dbg !2572, !nonnull !26, !noundef !26
  store i8* %55, i8** %54, align 8, !dbg !2572
  %56 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !2572
  store i64 %capacity, i64* %56, align 8, !dbg !2572
  %57 = bitcast { i8*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !2572
  br label %bb23, !dbg !2480

bb20:                                             ; preds = %bb19
; invoke alloc::alloc::handle_alloc_error
  invoke void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64 %layout.0, i64 %layout.1) #12
          to label %unreachable unwind label %cleanup, !dbg !2573

bb24:                                             ; preds = %bb25, %bb26
  %58 = bitcast { i8*, i32 }* %1 to i8**, !dbg !2574
  %59 = load i8*, i8** %58, align 8, !dbg !2574
  %60 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !2574
  %61 = load i32, i32* %60, align 8, !dbg !2574
  %62 = insertvalue { i8*, i32 } undef, i8* %59, 0, !dbg !2574
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1, !dbg !2574
  resume { i8*, i32 } %63, !dbg !2574

bb25:                                             ; preds = %bb26
  br label %bb24, !dbg !2479
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hb676db2ab53775bbE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i8*, i64 }* align 8 %self) unnamed_addr #1 !dbg !2575 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %_11 = alloca i8*, align 8
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !2596, metadata !DIExpression()), !dbg !2599
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !2600, metadata !DIExpression()), !dbg !2609
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !2611, metadata !DIExpression()), !dbg !2615
  br i1 false, label %bb1, label %bb2, !dbg !2624

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !2624
  br label %bb3, !dbg !2624

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !2625
  %_5 = load i64, i64* %1, align 8, !dbg !2625
  %_4 = icmp eq i64 %_5, 0, !dbg !2625
  %2 = zext i1 %_4 to i8, !dbg !2624
  store i8 %2, i8* %_2, align 1, !dbg !2624
  br label %bb3, !dbg !2624

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_2, align 1, !dbg !2624, !range !685, !noundef !26
  %4 = trunc i8 %3 to i1, !dbg !2624
  br i1 %4, label %bb4, label %bb5, !dbg !2624

bb5:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !2626
  %_8 = load i64, i64* %5, align 8, !dbg !2626
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hd3d68a432436475dE(i64 %_8), !dbg !2610
  store { i64, i64 } %6, { i64, i64 }* %self1, align 8, !dbg !2610
  br label %bb6, !dbg !2610

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1, !dbg !2627
  store i64 0, i64* %7, align 8, !dbg !2627
  br label %bb8, !dbg !2628

bb8:                                              ; preds = %bb7, %bb4
  ret void, !dbg !2629

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !2609
  %9 = load i64, i64* %8, align 8, !dbg !2609, !range !1235, !noundef !26
  %10 = icmp eq i64 %9, 0, !dbg !2609
  %_15 = select i1 %10, i64 1, i64 0, !dbg !2609
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !2609

bb10:                                             ; preds = %bb6
  unreachable, !dbg !2609

bb11:                                             ; preds = %bb6
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !2609
  %t.0 = load i64, i64* %11, align 8, !dbg !2609
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !2609
  %t.1 = load i64, i64* %12, align 8, !dbg !2609, !range !1211, !noundef !26
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !2609
  store i64 %t.0, i64* %13, align 8, !dbg !2609
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !2609
  store i64 %t.1, i64* %14, align 8, !dbg !2609
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !2606, metadata !DIExpression()), !dbg !2630
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !2630
  store i64 %t.0, i64* %15, align 8, !dbg !2630
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !2630
  store i64 %t.1, i64* %16, align 8, !dbg !2630
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !2597, metadata !DIExpression()), !dbg !2631
  %17 = bitcast { i8*, i64 }* %self to i8**, !dbg !2623
  %self2 = load i8*, i8** %17, align 8, !dbg !2623, !nonnull !26, !noundef !26
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !2623
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !2621, metadata !DIExpression()), !dbg !2632
  store i8* %self2, i8** %self.dbg.spill4, align 8, !dbg !2632
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !2633, metadata !DIExpression()), !dbg !2639
  store i8* %self2, i8** %self.dbg.spill5, align 8, !dbg !2639
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !2641, metadata !DIExpression()), !dbg !2645
  store i8* %self2, i8** %ptr.dbg.spill, align 8, !dbg !2639
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2647, metadata !DIExpression()), !dbg !2651
  store i8* %self2, i8** %pointer, align 8, !dbg !2651
  %_26 = load i8*, i8** %pointer, align 8, !dbg !2615, !nonnull !26, !noundef !26
  store i8* %_26, i8** %_11, align 8, !dbg !2615
  %18 = load i8*, i8** %_11, align 8, !dbg !2623, !nonnull !26, !noundef !26
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h54abd76d613f16f4E"(i8* %18), !dbg !2623
  br label %bb7, !dbg !2623

bb9:                                              ; preds = %bb6
  unreachable, !dbg !2653

bb7:                                              ; preds = %bb11
  %19 = bitcast { i8*, { i64, i64 } }* %_9 to i8**, !dbg !2661
  store i8* %_10, i8** %19, align 8, !dbg !2661
  %20 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1, !dbg !2661
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !2661
  store i64 %t.0, i64* %21, align 8, !dbg !2661
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !2661
  store i64 %t.1, i64* %22, align 8, !dbg !2661
  %23 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !2662
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %23 to { i8*, { i64, i64 } }*, !dbg !2662
  %25 = bitcast { i8*, { i64, i64 } }* %24 to i8*, !dbg !2662
  %26 = bitcast { i8*, { i64, i64 } }* %_9 to i8*, !dbg !2662
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !2662
  br label %bb8, !dbg !2628
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h62b6c4e7cf57a6ceE"() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2663 {
start:
  %ptr.dbg.spill1 = alloca i8*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %addr.dbg.spill = alloca i64, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %pointer = alloca i8*, align 8
  %_2 = alloca i8*, align 8
  %2 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !2667, metadata !DIExpression()), !dbg !2668
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !2669, metadata !DIExpression()), !dbg !2673
  store i64 1, i64* %addr.dbg.spill, align 8, !dbg !2679
  call void @llvm.dbg.declare(metadata i64* %addr.dbg.spill, metadata !2691, metadata !DIExpression()), !dbg !2695
  %3 = bitcast i8** %1 to i64*, !dbg !2695
  store i64 1, i64* %3, align 8, !dbg !2695
  %ptr = load i8*, i8** %1, align 8, !dbg !2695
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !2695
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2687, metadata !DIExpression()), !dbg !2697
  br label %bb3, !dbg !2695

bb3:                                              ; preds = %start
  store i8* %ptr, i8** %ptr.dbg.spill1, align 8, !dbg !2697
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill1, metadata !2698, metadata !DIExpression()), !dbg !2702
  store i8* %ptr, i8** %pointer, align 8, !dbg !2702
  %_12 = load i8*, i8** %pointer, align 8, !dbg !2673, !nonnull !26, !noundef !26
  store i8* %_12, i8** %_2, align 8, !dbg !2673
  %4 = bitcast { i8*, i64 }* %2 to i8**, !dbg !2704
  %5 = load i8*, i8** %_2, align 8, !dbg !2704, !nonnull !26, !noundef !26
  store i8* %5, i8** %4, align 8, !dbg !2704
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !2704
  store i64 0, i64* %6, align 8, !dbg !2704
  %7 = bitcast { i8*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !2704
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !2705
  %9 = load i8*, i8** %8, align 8, !dbg !2705, !nonnull !26, !noundef !26
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !2705
  %11 = load i64, i64* %10, align 8, !dbg !2705
  %12 = insertvalue { i8*, i64 } undef, i8* %9, 0, !dbg !2705
  %13 = insertvalue { i8*, i64 } %12, i64 %11, 1, !dbg !2705
  ret { i8*, i64 } %13, !dbg !2705

bb1:                                              ; No predecessors!
  br label %bb2, !dbg !2706

bb2:                                              ; preds = %bb1
  %14 = bitcast { i8*, i32 }* %0 to i8**, !dbg !2707
  %15 = load i8*, i8** %14, align 8, !dbg !2707
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !2707
  %17 = load i32, i32* %16, align 8, !dbg !2707
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0, !dbg !2707
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1, !dbg !2707
  resume { i8*, i32 } %19, !dbg !2707
}

; <alloc::string::String as core::fmt::Display>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h85117fc00f0a3c97E"(%"alloc::string::String"* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #0 !dbg !2708 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"alloc::string::String"*, align 8
  store %"alloc::string::String"* %self, %"alloc::string::String"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill, metadata !2711, metadata !DIExpression()), !dbg !2713
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !2712, metadata !DIExpression()), !dbg !2714
; call <alloc::string::String as core::ops::deref::Deref>::deref
  %0 = call { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h747584ef08f8105aE"(%"alloc::string::String"* align 8 %self), !dbg !2715
  %_5.0 = extractvalue { [0 x i8]*, i64 } %0, 0, !dbg !2715
  %_5.1 = extractvalue { [0 x i8]*, i64 } %0, 1, !dbg !2715
  br label %bb1, !dbg !2715

bb1:                                              ; preds = %start
; call <str as core::fmt::Display>::fmt
  %1 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17hde81f4d22eef4d42E"([0 x i8]* align 1 %_5.0, i64 %_5.1, %"core::fmt::Formatter"* align 8 %f), !dbg !2716
  br label %bb2, !dbg !2716

bb2:                                              ; preds = %bb1
  ret i1 %1, !dbg !2717
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h37df8f59f75fdd3cE"(i32 %self.0, i32 %self.1) unnamed_addr #0 !dbg !2718 {
start:
  %self.dbg.spill = alloca { i32, i32 }, align 4
  %0 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self.dbg.spill, i32 0, i32 0
  store i32 %self.0, i32* %0, align 4
  %1 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self.dbg.spill, i32 0, i32 1
  store i32 %self.1, i32* %1, align 4
  call void @llvm.dbg.declare(metadata { i32, i32 }* %self.dbg.spill, metadata !2726, metadata !DIExpression()), !dbg !2729
  %2 = insertvalue { i32, i32 } undef, i32 %self.0, 0, !dbg !2730
  %3 = insertvalue { i32, i32 } %2, i32 %self.1, 1, !dbg !2730
  ret { i32, i32 } %3, !dbg !2730
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h514bad8e1237f4f8E"(i64 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2731 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !2735, metadata !DIExpression()), !dbg !2738
  %2 = insertvalue { i64, i64 } undef, i64 %self.0, 0, !dbg !2739
  %3 = insertvalue { i64, i64 } %2, i64 %self.1, 1, !dbg !2739
  ret { i64, i64 } %3, !dbg !2739
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h45bd1516edcc9d3bE"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1) unnamed_addr #0 !dbg !2740 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca { i64, i64 }*, align 8
  %self.dbg.spill7 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %self3 = alloca i64, align 8
  %self2 = alloca i64, align 8
  %layout1 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !2745, metadata !DIExpression()), !dbg !2748
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2746, metadata !DIExpression()), !dbg !2749
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2747, metadata !DIExpression()), !dbg !2750
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout1, metadata !2751, metadata !DIExpression()), !dbg !2757
  call void @llvm.dbg.declare(metadata i64* %self2, metadata !2759, metadata !DIExpression()), !dbg !2763
  call void @llvm.dbg.declare(metadata i64* %self3, metadata !2770, metadata !DIExpression()), !dbg !2774
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill4, align 8, !dbg !2775
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill4, metadata !2776, metadata !DIExpression()), !dbg !2780
  %4 = bitcast { i64, i64 }* %layout to i64*, !dbg !2780
  %_4 = load i64, i64* %4, align 8, !dbg !2780
  %5 = icmp eq i64 %_4, 0, !dbg !2775
  br i1 %5, label %bb2, label %bb1, !dbg !2775

bb2:                                              ; preds = %start
  br label %bb3, !dbg !2781

bb1:                                              ; preds = %start
  store i8* %ptr, i8** %self.dbg.spill5, align 8, !dbg !2782
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !2783, metadata !DIExpression()), !dbg !2787
  store i8* %ptr, i8** %ptr.dbg.spill6, align 8, !dbg !2787
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill6, metadata !2756, metadata !DIExpression()), !dbg !2757
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !2788
  %7 = load i64, i64* %6, align 8, !dbg !2788
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2788
  %9 = load i64, i64* %8, align 8, !dbg !2788, !range !1211, !noundef !26
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 0, !dbg !2788
  store i64 %7, i64* %10, align 8, !dbg !2788
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !2788
  store i64 %9, i64* %11, align 8, !dbg !2788
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill7, align 8, !dbg !2757
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill7, metadata !2789, metadata !DIExpression()), !dbg !2793
  %12 = bitcast { i64, i64 }* %layout1 to i64*, !dbg !2793
  %_11 = load i64, i64* %12, align 8, !dbg !2793
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill8, align 8, !dbg !2757
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill8, metadata !2767, metadata !DIExpression()), !dbg !2795
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !2795
  %14 = load i64, i64* %13, align 8, !dbg !2795, !range !1211, !noundef !26
  store i64 %14, i64* %self3, align 8, !dbg !2795
  %_18 = load i64, i64* %self3, align 8, !dbg !2774, !range !1211, !noundef !26
  store i64 %_18, i64* %n.dbg.spill, align 8, !dbg !2774
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !2796, metadata !DIExpression()), !dbg !2803
  store i64 %_18, i64* %self2, align 8, !dbg !2803
  %_13 = load i64, i64* %self2, align 8, !dbg !2763
  call void @__rust_dealloc(i8* %ptr, i64 %_11, i64 %_13) #15, !dbg !2757
  br label %bb4, !dbg !2757

bb4:                                              ; preds = %bb1
  br label %bb3, !dbg !2781

bb3:                                              ; preds = %bb2, %bb4
  ret void, !dbg !2805
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hf8e946c7d2929672E"(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !2806 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !2810, metadata !DIExpression()), !dbg !2812
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !2811, metadata !DIExpression()), !dbg !2813
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h80dd30419e3b1a23E(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext true), !dbg !2814
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !2814
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !2814
  br label %bb1, !dbg !2814

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !2815
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !2815
  ret { i8*, i64 } %6, !dbg !2815
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h4eaa9050a9471fcfE"(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !2816 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !2818, metadata !DIExpression()), !dbg !2820
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !2819, metadata !DIExpression()), !dbg !2821
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h80dd30419e3b1a23E(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false), !dbg !2822
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !2822
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !2822
  br label %bb1, !dbg !2822

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !2823
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !2823
  ret { i8*, i64 } %6, !dbg !2823
}

; <alloc::string::String as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h747584ef08f8105aE"(%"alloc::string::String"* align 8 %self) unnamed_addr #0 !dbg !2824 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %len.dbg.spill3 = alloca i64, align 8
  %data.dbg.spill2 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %self.dbg.spill = alloca %"alloc::string::String"*, align 8
  %_18 = alloca { i8*, i64 }, align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store %"alloc::string::String"* %self, %"alloc::string::String"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill, metadata !2827, metadata !DIExpression()), !dbg !2828
  %_5 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*, !dbg !2829
  store %"alloc::vec::Vec<u8>"* %_5, %"alloc::vec::Vec<u8>"** %self.dbg.spill1, align 8, !dbg !2829
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill1, metadata !2830, metadata !DIExpression()), !dbg !2837
; call alloc::vec::Vec<T,A>::as_ptr
  %data = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf5c71e8a33b2e895E"(%"alloc::vec::Vec<u8>"* align 8 %_5), !dbg !2837
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !2837
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !2838, metadata !DIExpression()), !dbg !2855
  br label %bb1, !dbg !2837

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %_5, i32 0, i32 1, !dbg !2837
  %len = load i64, i64* %1, align 8, !dbg !2837
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !2837
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2846, metadata !DIExpression()), !dbg !2855
  store i8* %data, i8** %data.dbg.spill2, align 8, !dbg !2855
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill2, metadata !2857, metadata !DIExpression()), !dbg !2864
  store i64 %len, i64* %len.dbg.spill3, align 8, !dbg !2855
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill3, metadata !2863, metadata !DIExpression()), !dbg !2864
  store i8* %data, i8** %self.dbg.spill4, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !2866, metadata !DIExpression()), !dbg !2872
  %data_address = bitcast i8* %data to {}*, !dbg !2872
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !2872
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !2874, metadata !DIExpression()), !dbg !2881
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !2880, metadata !DIExpression()), !dbg !2881
  %2 = bitcast { i8*, i64 }* %_18 to {}**, !dbg !2881
  store {}* %data_address, {}** %2, align 8, !dbg !2881
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_18, i32 0, i32 1, !dbg !2881
  store i64 %len, i64* %3, align 8, !dbg !2881
  %4 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_17 to { i8*, i64 }*, !dbg !2881
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_18, i32 0, i32 0, !dbg !2881
  %6 = load i8*, i8** %5, align 8, !dbg !2881
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_18, i32 0, i32 1, !dbg !2881
  %8 = load i64, i64* %7, align 8, !dbg !2881
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %4, i32 0, i32 0, !dbg !2881
  store i8* %6, i8** %9, align 8, !dbg !2881
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %4, i32 0, i32 1, !dbg !2881
  store i64 %8, i64* %10, align 8, !dbg !2881
  %11 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_17 to { [0 x i8]*, i64 }*, !dbg !2881
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0, !dbg !2881
  %_10.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !dbg !2881
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1, !dbg !2881
  %_10.1 = load i64, i64* %13, align 8, !dbg !2881
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !2829
  store [0 x i8]* %_10.0, [0 x i8]** %14, align 8, !dbg !2829
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !2829
  store i64 %_10.1, i64* %15, align 8, !dbg !2829
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !2883, metadata !DIExpression()), !dbg !2891
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2891
  store [0 x i8]* %_10.0, [0 x i8]** %16, align 8, !dbg !2891
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2891
  store i64 %_10.1, i64* %17, align 8, !dbg !2891
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2891
  %19 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !2891, !nonnull !26, !align !353, !noundef !26
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2891
  %21 = load i64, i64* %20, align 8, !dbg !2891
  br label %bb2, !dbg !2891

bb2:                                              ; preds = %bb1
  %22 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %19, 0, !dbg !2893
  %23 = insertvalue { [0 x i8]*, i64 } %22, i64 %21, 1, !dbg !2893
  ret { [0 x i8]*, i64 } %23, !dbg !2893
}

; <alloc::ffi::c_str::CString as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfe011c84af25418aE"({ i8*, i64 }* align 8 %self) unnamed_addr #0 !dbg !2894 {
start:
  %0 = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !2900, metadata !DIExpression()), !dbg !2901
  %1 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !2902
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !2902
  %_4.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !dbg !2902, !nonnull !26, !align !353, !noundef !26
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !2902
  %_4.1 = load i64, i64* %3, align 8, !dbg !2902
  %4 = bitcast [0 x i8]* %_4.0 to i8*, !dbg !2902
  %_5.0 = bitcast i8* %4 to [0 x i8]*, !dbg !2902
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !2902
  store [0 x i8]* %_5.0, [0 x i8]** %5, align 8, !dbg !2902
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !2902
  store i64 %_4.1, i64* %6, align 8, !dbg !2902
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !2903, metadata !DIExpression()), !dbg !2913
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !2913
  store [0 x i8]* %_5.0, [0 x i8]** %7, align 8, !dbg !2913
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !2913
  store i64 %_4.1, i64* %8, align 8, !dbg !2913
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !2914, metadata !DIExpression()), !dbg !2931
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !2931
  store [0 x i8]* %_5.0, [0 x i8]** %9, align 8, !dbg !2931
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !2931
  store i64 %_4.1, i64* %10, align 8, !dbg !2931
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !2933, metadata !DIExpression()), !dbg !2940
  %self3 = bitcast [0 x i8]* %_5.0 to i8*, !dbg !2940
  store i8* %self3, i8** %self.dbg.spill4, align 8, !dbg !2940
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !2942, metadata !DIExpression()), !dbg !2949
  store i8* %self3, i8** %self.dbg.spill5, align 8, !dbg !2949
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !2950, metadata !DIExpression()), !dbg !2958
  %11 = getelementptr inbounds i8, i8* %self3, i64 0, !dbg !2958
  store i8* %11, i8** %0, align 8, !dbg !2958
  %_20 = load i8*, i8** %0, align 8, !dbg !2958
  br label %bb1, !dbg !2958

bb1:                                              ; preds = %start
  store i8 0, i8* %_20, align 1, !dbg !2960
  ret void, !dbg !2961
}

; <T as core::array::equality::SpecArrayEq<U,_>>::spec_eq
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h66243477bd61f162E"([16 x i8]* align 1 %a, [16 x i8]* align 1 %b) unnamed_addr #1 !dbg !2962 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill2 = alloca [16 x i8]*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %b.dbg.spill = alloca [16 x i8]*, align 8
  %a.dbg.spill = alloca [16 x i8]*, align 8
  store [16 x i8]* %a, [16 x i8]** %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [16 x i8]** %a.dbg.spill, metadata !2965, metadata !DIExpression()), !dbg !2969
  store [16 x i8]* %b, [16 x i8]** %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [16 x i8]** %b.dbg.spill, metadata !2966, metadata !DIExpression()), !dbg !2970
  %self.0 = bitcast [16 x i8]* %b to [0 x i8]*, !dbg !2971
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !2971
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8, !dbg !2971
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !2971
  store i64 16, i64* %2, align 8, !dbg !2971
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2972, metadata !DIExpression()), !dbg !2976
  %self = bitcast [0 x i8]* %self.0 to i8*, !dbg !2976
  store i8* %self, i8** %self.dbg.spill1, align 8, !dbg !2976
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !2977, metadata !DIExpression()), !dbg !2986
  %_4 = bitcast i8* %self to [16 x i8]*, !dbg !2986
  store [16 x i8]* %_4, [16 x i8]** %b.dbg.spill2, align 8, !dbg !2987
  call void @llvm.dbg.declare(metadata [16 x i8]** %b.dbg.spill2, metadata !2967, metadata !DIExpression()), !dbg !2988
  %3 = bitcast [16 x i8]* %a to i128*, !dbg !2989
  %4 = load i128, i128* %3, align 1, !dbg !2989
  %5 = bitcast [16 x i8]* %_4 to i128*, !dbg !2989
  %6 = load i128, i128* %5, align 1, !dbg !2989
  %7 = icmp eq i128 %4, %6, !dbg !2989
  %8 = zext i1 %7 to i8, !dbg !2989
  store i8 %8, i8* %0, align 1, !dbg !2989
  %9 = load i8, i8* %0, align 1, !dbg !2989, !range !685, !noundef !26
  %10 = trunc i8 %9 to i1, !dbg !2989
  br label %bb1, !dbg !2989

bb1:                                              ; preds = %start
  ret i1 %10, !dbg !2990
}

; <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"core::ffi::c_str::CStr"*, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17ha1630efc3d7688f4E"({ i8*, i64 }* align 8 %self) unnamed_addr #0 !dbg !2991 {
start:
  %bytes.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { i8*, i64 }*, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_8 = alloca { i8*, i64 }, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !2997, metadata !DIExpression()), !dbg !2998
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill1, align 8, !dbg !2999
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill1, metadata !3000, metadata !DIExpression()), !dbg !3005
  %_5 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !3005
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 0, !dbg !3005
  %_6.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !3005, !nonnull !26, !align !353, !noundef !26
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 1, !dbg !3005
  %_6.1 = load i64, i64* %1, align 8, !dbg !3005
  %2 = bitcast [0 x i8]* %_6.0 to i8*, !dbg !3005
  %_7.0 = bitcast i8* %2 to [0 x i8]*, !dbg !3005
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %bytes.dbg.spill, i32 0, i32 0, !dbg !2999
  store [0 x i8]* %_7.0, [0 x i8]** %3, align 8, !dbg !2999
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %bytes.dbg.spill, i32 0, i32 1, !dbg !2999
  store i64 %_6.1, i64* %4, align 8, !dbg !2999
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %bytes.dbg.spill, metadata !3006, metadata !DIExpression()), !dbg !3010
  %5 = bitcast { i8*, i64 }* %_8 to { [0 x i8]*, i64 }*, !dbg !3010
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0, !dbg !3010
  store [0 x i8]* %_7.0, [0 x i8]** %6, align 8, !dbg !3010
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1, !dbg !3010
  store i64 %_6.1, i64* %7, align 8, !dbg !3010
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_8, i32 0, i32 0, !dbg !3010
  %9 = load i8*, i8** %8, align 8, !dbg !3010, !nonnull !26, !align !353, !noundef !26
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_8, i32 0, i32 1, !dbg !3010
  %11 = load i64, i64* %10, align 8, !dbg !3010
; call core::intrinsics::const_eval_select
  %12 = call { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core10intrinsics17const_eval_select17h9e040f661d44916eE(i8* align 1 %9, i64 %11), !dbg !3010
  %13 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %12, 0, !dbg !3010
  %14 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %12, 1, !dbg !3010
  br label %bb1, !dbg !3010

bb1:                                              ; preds = %start
  %15 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } undef, %"core::ffi::c_str::CStr"* %13, 0, !dbg !3012
  %16 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } %15, i64 %14, 1, !dbg !3012
  ret { %"core::ffi::c_str::CStr"*, i64 } %16, !dbg !3012
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha99a412e3048bf79E"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #1 !dbg !3013 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_11 = alloca { i8*, i64 }, align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !3018, metadata !DIExpression()), !dbg !3019
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %data = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h34c25918ba95f615E"(%"alloc::vec::Vec<u8>"* align 8 %self), !dbg !3020
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !3020
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !3021, metadata !DIExpression()), !dbg !3026
  br label %bb1, !dbg !3020

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !3028
  %len = load i64, i64* %0, align 8, !dbg !3028
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !3028
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3025, metadata !DIExpression()), !dbg !3026
  store i8* %data, i8** %self.dbg.spill1, align 8, !dbg !3026
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !3029, metadata !DIExpression()), !dbg !3033
  %data_address = bitcast i8* %data to {}*, !dbg !3033
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !3033
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !3035, metadata !DIExpression()), !dbg !3040
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !3026
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !3039, metadata !DIExpression()), !dbg !3040
  %1 = bitcast { i8*, i64 }* %_11 to {}**, !dbg !3040
  store {}* %data_address, {}** %1, align 8, !dbg !3040
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !3040
  store i64 %len, i64* %2, align 8, !dbg !3040
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_10 to { i8*, i64 }*, !dbg !3040
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 0, !dbg !3040
  %5 = load i8*, i8** %4, align 8, !dbg !3040
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !3040
  %7 = load i64, i64* %6, align 8, !dbg !3040
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !3040
  store i8* %5, i8** %8, align 8, !dbg !3040
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !3040
  store i64 %7, i64* %9, align 8, !dbg !3040
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_10 to { [0 x i8]*, i64 }*, !dbg !3040
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0, !dbg !3040
  %_2.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !3040
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1, !dbg !3040
  %_2.1 = load i64, i64* %12, align 8, !dbg !3040
  br label %bb2, !dbg !3042

bb2:                                              ; preds = %bb1
  ret void, !dbg !3043
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h38c49a3d7a5525cfE"({ i8*, i64 }* align 8 %self) unnamed_addr #1 !dbg !3044 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !3050, metadata !DIExpression()), !dbg !3054
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hb676db2ab53775bbE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i8*, i64 }* align 8 %self), !dbg !3055
  br label %bb1, !dbg !3055

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1, !dbg !3056
  %1 = load i64, i64* %0, align 8, !dbg !3056, !range !1235, !noundef !26
  %2 = icmp eq i64 %1, 0, !dbg !3056
  %_4 = select i1 %2, i64 0, i64 1, !dbg !3056
  %3 = icmp eq i64 %_4, 1, !dbg !3056
  br i1 %3, label %bb2, label %bb4, !dbg !3056

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !3057
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !3057
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !3057
  %ptr = load i8*, i8** %6, align 8, !dbg !3057, !nonnull !26, !noundef !26
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !3057
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3051, metadata !DIExpression()), !dbg !3057
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !3058
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !3058
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !3058
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !3058
  %layout.0 = load i64, i64* %10, align 8, !dbg !3058
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !3058
  %layout.1 = load i64, i64* %11, align 8, !dbg !3058, !range !1211, !noundef !26
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !3058
  store i64 %layout.0, i64* %12, align 8, !dbg !3058
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !3058
  store i64 %layout.1, i64* %13, align 8, !dbg !3058
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !3053, metadata !DIExpression()), !dbg !3058
  %_7 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !3059
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h45bd1516edcc9d3bE"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1), !dbg !3059
  br label %bb3, !dbg !3059

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3060

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !3061
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h8803c82250012bf8E"({ i32, i32 }* align 4 %self) unnamed_addr #0 !dbg !3062 {
start:
  %n.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca { i32, i32 }*, align 8
  %0 = alloca { i32, i32 }, align 4
  store { i32, i32 }* %self, { i32, i32 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32, i32 }** %self.dbg.spill, metadata !3065, metadata !DIExpression()), !dbg !3068
  %_3 = bitcast { i32, i32 }* %self to i32*, !dbg !3069
  %_4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1, !dbg !3070
; call core::cmp::impls::<impl core::cmp::PartialOrd for i32>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i32$GT$2lt17h1ca8a2a386635526E"(i32* align 4 %_3, i32* align 4 %_4), !dbg !3069
  br label %bb1, !dbg !3069

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6, !dbg !3069

bb6:                                              ; preds = %bb1
  %1 = bitcast { i32, i32 }* %0 to i32*, !dbg !3071
  store i32 0, i32* %1, align 4, !dbg !3071
  br label %bb7, !dbg !3072

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i32, i32 }* %self to i32*, !dbg !3073
; call core::clone::impls::<impl core::clone::Clone for i32>::clone
  %_6 = call i32 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i32$GT$5clone17h9b2bddbc476572d1E"(i32* align 4 %_7), !dbg !3073
  br label %bb3, !dbg !3073

bb3:                                              ; preds = %bb2
; call <i32 as core::iter::range::Step>::forward_unchecked
  %n = call i32 @"_ZN47_$LT$i32$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hd7c3dd047be86f92E"(i32 %_6, i64 1), !dbg !3074
  store i32 %n, i32* %n.dbg.spill, align 4, !dbg !3074
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !3066, metadata !DIExpression()), !dbg !3075
  br label %bb4, !dbg !3074

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i32, i32 }* %self to i32*, !dbg !3076
; call core::mem::replace
  %_8 = call i32 @_ZN4core3mem7replace17h1f2405c7174d7886E(i32* align 4 %_10, i32 %n), !dbg !3077
  br label %bb5, !dbg !3077

bb5:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !3078
  store i32 %_8, i32* %2, align 4, !dbg !3078
  %3 = bitcast { i32, i32 }* %0 to i32*, !dbg !3078
  store i32 1, i32* %3, align 4, !dbg !3078
  br label %bb7, !dbg !3072

bb7:                                              ; preds = %bb6, %bb5
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0, !dbg !3079
  %5 = load i32, i32* %4, align 4, !dbg !3079, !range !3080, !noundef !26
  %6 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !3079
  %7 = load i32, i32* %6, align 4, !dbg !3079
  %8 = insertvalue { i32, i32 } undef, i32 %5, 0, !dbg !3079
  %9 = insertvalue { i32, i32 } %8, i32 %7, 1, !dbg !3079
  ret { i32, i32 } %9, !dbg !3079
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17he230a9875d2c47c9E"({ i64, i64 }* align 8 %self) unnamed_addr #0 !dbg !3081 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !3083, metadata !DIExpression()), !dbg !3086
  %_3 = bitcast { i64, i64 }* %self to i64*, !dbg !3087
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !3088
; call core::cmp::impls::<impl core::cmp::PartialOrd for i64>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i64$GT$2lt17hcc3df5354789fbccE"(i64* align 8 %_3, i64* align 8 %_4), !dbg !3087
  br label %bb1, !dbg !3087

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6, !dbg !3087

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !3089
  store i64 0, i64* %1, align 8, !dbg !3089
  br label %bb7, !dbg !3090

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*, !dbg !3091
; call core::clone::impls::<impl core::clone::Clone for i64>::clone
  %_6 = call i64 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i64$GT$5clone17h83f44c00881ad16fE"(i64* align 8 %_7), !dbg !3091
  br label %bb3, !dbg !3091

bb3:                                              ; preds = %bb2
; call <i64 as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN47_$LT$i64$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h4e4bc69ac704d107E"(i64 %_6, i64 1), !dbg !3092
  store i64 %n, i64* %n.dbg.spill, align 8, !dbg !3092
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3084, metadata !DIExpression()), !dbg !3093
  br label %bb4, !dbg !3092

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i64, i64 }* %self to i64*, !dbg !3094
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17h1fb2341b0515eb1dE(i64* align 8 %_10, i64 %n), !dbg !3095
  br label %bb5, !dbg !3095

bb5:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3096
  store i64 %_8, i64* %2, align 8, !dbg !3096
  %3 = bitcast { i64, i64 }* %0 to i64*, !dbg !3096
  store i64 1, i64* %3, align 8, !dbg !3096
  br label %bb7, !dbg !3090

bb7:                                              ; preds = %bb6, %bb5
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3097
  %5 = load i64, i64* %4, align 8, !dbg !3097, !range !897, !noundef !26
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3097
  %7 = load i64, i64* %6, align 8, !dbg !3097
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0, !dbg !3097
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1, !dbg !3097
  ret { i64, i64 } %9, !dbg !3097
}

; f128_internal::f128_impl::<impl core::fmt::Debug for f128_internal::f128_t::f128>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN13f128_internal9f128_impl74_$LT$impl$u20$core..fmt..Debug$u20$for$u20$f128_internal..f128_t..f128$GT$3fmt17ha65970577a7c543cE"(%"f128_t::f128"* align 1 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !3098 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !3106, metadata !DIExpression()), !dbg !3108
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !3107, metadata !DIExpression()), !dbg !3109
; call f128_internal::f128_impl::<impl core::fmt::Display for f128_internal::f128_t::f128>::fmt
  %0 = call zeroext i1 @"_ZN13f128_internal9f128_impl76_$LT$impl$u20$core..fmt..Display$u20$for$u20$f128_internal..f128_t..f128$GT$3fmt17had32567ccc59b64dE"(%"f128_t::f128"* align 1 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !3110
  br label %bb1, !dbg !3110

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !3111
}

; f128_internal::f128_impl::<impl core::fmt::Display for f128_internal::f128_t::f128>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN13f128_internal9f128_impl76_$LT$impl$u20$core..fmt..Display$u20$for$u20$f128_internal..f128_t..f128$GT$3fmt17had32567ccc59b64dE"(%"f128_t::f128"* align 1 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3112 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_36 = alloca [1 x { i8*, i64* }], align 8
  %_29 = alloca %"core::fmt::Arguments", align 8
  %s = alloca %"alloc::string::String", align 8
  %_22 = alloca %"core::option::Option<alloc::string::String>", align 8
  %_16 = alloca [1 x { i8*, i64* }], align 8
  %_9 = alloca %"core::fmt::Arguments", align 8
  %res = alloca %"alloc::string::String", align 8
  %precision = alloca i64, align 8
  %_4 = alloca { i64, i64 }, align 8
  %format = alloca %"alloc::string::String", align 8
  %1 = alloca i8, align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !3115, metadata !DIExpression()), !dbg !3127
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !3116, metadata !DIExpression()), !dbg !3128
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %format, metadata !3117, metadata !DIExpression()), !dbg !3129
  call void @llvm.dbg.declare(metadata i64* %precision, metadata !3119, metadata !DIExpression()), !dbg !3130
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %res, metadata !3121, metadata !DIExpression()), !dbg !3131
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %s, metadata !3125, metadata !DIExpression()), !dbg !3132
; call core::fmt::Formatter::precision
  %2 = call { i64, i64 } @_ZN4core3fmt9Formatter9precision17hf036a45b8bc60186E(%"core::fmt::Formatter"* align 8 %f), !dbg !3133
  store { i64, i64 } %2, { i64, i64 }* %_4, align 8, !dbg !3133
  br label %bb1, !dbg !3133

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %_4 to i64*, !dbg !3134
  %_6 = load i64, i64* %3, align 8, !dbg !3134, !range !897, !noundef !26
  %4 = icmp eq i64 %_6, 1, !dbg !3134
  br i1 %4, label %bb2, label %bb6, !dbg !3134

bb2:                                              ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1, !dbg !3130
  %6 = load i64, i64* %5, align 8, !dbg !3130
  store i64 %6, i64* %precision, align 8, !dbg !3130
; call core::fmt::ArgumentV1::new_display
  %7 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hc9388ccaeaed3d47E(i64* align 8 %precision), !dbg !3135
  %_17.0 = extractvalue { i8*, i64* } %7, 0, !dbg !3135
  %_17.1 = extractvalue { i8*, i64* } %7, 1, !dbg !3135
  br label %bb3, !dbg !3135

bb6:                                              ; preds = %bb1
; call <str as alloc::string::ToString>::to_string
  call void @"_ZN47_$LT$str$u20$as$u20$alloc..string..ToString$GT$9to_string17hb40005f8b224a7a6E"(%"alloc::string::String"* sret(%"alloc::string::String") %format, [0 x i8]* align 1 bitcast (<{ [3 x i8] }>* @alloc1181 to [0 x i8]*), i64 3), !dbg !3136
  br label %bb7, !dbg !3136

bb7:                                              ; preds = %bb5, %bb6
; invoke alloc::string::String::as_str
  %8 = invoke { [0 x i8]*, i64 } @_ZN5alloc6string6String6as_str17h74b8ff1aa7ae436aE(%"alloc::string::String"* align 8 %format)
          to label %bb8 unwind label %cleanup, !dbg !3137

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_16, i64 0, i64 0, !dbg !3135
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %9, i32 0, i32 0, !dbg !3135
  store i8* %_17.0, i8** %10, align 8, !dbg !3135
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %9, i32 0, i32 1, !dbg !3135
  store i64* %_17.1, i64** %11, align 8, !dbg !3135
  %_13.0 = bitcast [1 x { i8*, i64* }]* %_16 to [0 x { i8*, i64* }]*, !dbg !3135
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h747dba7f8d1ace20E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_9, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc492 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_13.0, i64 1), !dbg !3135
  br label %bb4, !dbg !3135

bb4:                                              ; preds = %bb3
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17heb80f0ac00635400E(%"alloc::string::String"* sret(%"alloc::string::String") %res, %"core::fmt::Arguments"* %_9), !dbg !3135
  br label %bb5, !dbg !3135

bb5:                                              ; preds = %bb4
  %12 = bitcast %"alloc::string::String"* %format to i8*, !dbg !3131
  %13 = bitcast %"alloc::string::String"* %res to i8*, !dbg !3131
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !3131
  br label %bb7, !dbg !3138

bb20:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"* %format) #13
          to label %bb21 unwind label %abort, !dbg !3139

cleanup:                                          ; preds = %bb8, %bb7
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb20

bb8:                                              ; preds = %bb7
  %_24.0 = extractvalue { [0 x i8]*, i64 } %8, 0, !dbg !3137
  %_24.1 = extractvalue { [0 x i8]*, i64 } %8, 1, !dbg !3137
; invoke f128_internal::f128_t::f128::to_string_fmt
  invoke void @_ZN13f128_internal6f128_t4f12813to_string_fmt17h23da4fb8c9f33463E(%"core::option::Option<alloc::string::String>"* sret(%"core::option::Option<alloc::string::String>") %_22, %"f128_t::f128"* align 1 %self, [0 x i8]* align 1 %_24.0, i64 %_24.1)
          to label %bb9 unwind label %cleanup, !dbg !3140

bb9:                                              ; preds = %bb8
  %19 = bitcast %"core::option::Option<alloc::string::String>"* %_22 to {}**, !dbg !3140
  %20 = load {}*, {}** %19, align 8, !dbg !3140
  %21 = icmp eq {}* %20, null, !dbg !3140
  %_26 = select i1 %21, i64 0, i64 1, !dbg !3140
  switch i64 %_26, label %bb11 [
    i64 0, label %bb10
    i64 1, label %bb12
  ], !dbg !3141

abort:                                            ; preds = %bb19, %bb18, %bb20
  %22 = landingpad { i8*, i32 }
          cleanup, !dbg !3142
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #14, !dbg !3142
  unreachable, !dbg !3142

bb21:                                             ; preds = %bb19, %bb20
  %23 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3142
  %24 = load i8*, i8** %23, align 8, !dbg !3142
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3142
  %26 = load i32, i32* %25, align 8, !dbg !3142
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0, !dbg !3142
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1, !dbg !3142
  resume { i8*, i32 } %28, !dbg !3142

bb11:                                             ; preds = %bb9
  unreachable, !dbg !3140

bb10:                                             ; preds = %bb9
  store i8 1, i8* %1, align 1, !dbg !3143
  br label %bb16, !dbg !3144

bb12:                                             ; preds = %bb9
  %29 = bitcast %"core::option::Option<alloc::string::String>"* %_22 to %"core::option::Option<alloc::string::String>::Some"*, !dbg !3145
  %30 = bitcast %"core::option::Option<alloc::string::String>::Some"* %29 to %"alloc::string::String"*, !dbg !3145
  %31 = bitcast %"alloc::string::String"* %s to i8*, !dbg !3145
  %32 = bitcast %"alloc::string::String"* %30 to i8*, !dbg !3145
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false), !dbg !3145
; invoke core::fmt::ArgumentV1::new_display
  %33 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h8f611a8e12f0c43cE(%"alloc::string::String"* align 8 %s)
          to label %bb13 unwind label %cleanup1, !dbg !3146

bb18:                                             ; preds = %cleanup1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"* %s) #13
          to label %bb19 unwind label %abort, !dbg !3147

cleanup1:                                         ; preds = %bb14, %bb13, %bb12
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  %36 = extractvalue { i8*, i32 } %34, 1
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %35, i8** %37, align 8
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %36, i32* %38, align 8
  br label %bb18

bb13:                                             ; preds = %bb12
  %_37.0 = extractvalue { i8*, i64* } %33, 0, !dbg !3146
  %_37.1 = extractvalue { i8*, i64* } %33, 1, !dbg !3146
  %39 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_36, i64 0, i64 0, !dbg !3146
  %40 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %39, i32 0, i32 0, !dbg !3146
  store i8* %_37.0, i8** %40, align 8, !dbg !3146
  %41 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %39, i32 0, i32 1, !dbg !3146
  store i64* %_37.1, i64** %41, align 8, !dbg !3146
  %_33.0 = bitcast [1 x { i8*, i64* }]* %_36 to [0 x { i8*, i64* }]*, !dbg !3146
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h747dba7f8d1ace20E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_29, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc499 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 %_33.0, i64 1)
          to label %bb14 unwind label %cleanup1, !dbg !3146

bb14:                                             ; preds = %bb13
; invoke core::fmt::Formatter::write_fmt
  %42 = invoke zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hbc1c5dc5bbe57c4aE(%"core::fmt::Formatter"* align 8 %f, %"core::fmt::Arguments"* %_29)
          to label %bb15 unwind label %cleanup1, !dbg !3146

bb15:                                             ; preds = %bb14
  %43 = zext i1 %42 to i8, !dbg !3146
  store i8 %43, i8* %1, align 1, !dbg !3146
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"* %s)
          to label %bb16 unwind label %cleanup2, !dbg !3147

bb19:                                             ; preds = %cleanup2, %bb18
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"* %format) #13
          to label %bb21 unwind label %abort, !dbg !3139

cleanup2:                                         ; preds = %bb15
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  %46 = extractvalue { i8*, i32 } %44, 1
  %47 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %45, i8** %47, align 8
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %46, i32* %48, align 8
  br label %bb19

bb16:                                             ; preds = %bb10, %bb15
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E"(%"alloc::string::String"* %format), !dbg !3139
  br label %bb17, !dbg !3139

bb17:                                             ; preds = %bb16
  %49 = load i8, i8* %1, align 1, !dbg !3148, !range !685, !noundef !26
  %50 = trunc i8 %49 to i1, !dbg !3148
  ret i1 %50, !dbg !3148
}

; f128_internal::f128_impl::<impl num_traits::identities::Zero for f128_internal::f128_t::f128>::is_zero
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN13f128_internal9f128_impl86_$LT$impl$u20$num_traits..identities..Zero$u20$for$u20$f128_internal..f128_t..f128$GT$7is_zero17h2c35eb98ddb9f669E"(%"f128_t::f128"* align 1 %self) unnamed_addr #1 !dbg !3149 {
start:
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %0 = alloca i8, align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !3154, metadata !DIExpression()), !dbg !3155
  %_3 = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !3156
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_2 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17hc6d3ce497554ef29E"([16 x i8]* align 1 %_3, [16 x i8]* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @alloc519, i32 0, i32 0)), !dbg !3156
  br label %bb4, !dbg !3156

bb4:                                              ; preds = %start
  br i1 %_2, label %bb1, label %bb2, !dbg !3156

bb2:                                              ; preds = %bb4
  %_6 = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !3157
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_5 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17hc6d3ce497554ef29E"([16 x i8]* align 1 %_6, [16 x i8]* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @alloc912, i32 0, i32 0)), !dbg !3157
  br label %bb5, !dbg !3157

bb1:                                              ; preds = %bb4
  store i8 1, i8* %0, align 1, !dbg !3156
  br label %bb3, !dbg !3156

bb3:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !dbg !3158, !range !685, !noundef !26
  %2 = trunc i8 %1 to i1, !dbg !3158
  ret i1 %2, !dbg !3158

bb5:                                              ; preds = %bb2
  %3 = zext i1 %_5 to i8, !dbg !3156
  store i8 %3, i8* %0, align 1, !dbg !3156
  br label %bb3, !dbg !3156
}

; f128_internal::f128_impl::<impl num_traits::identities::Zero for f128_internal::f128_t::f128>::zero
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl86_$LT$impl$u20$num_traits..identities..Zero$u20$for$u20$f128_internal..f128_t..f128$GT$4zero17hd26a5f32ebeb35c9E"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3159 {
start:
  %1 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3162
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @alloc519, i32 0, i32 0, i32 0), i64 16, i1 false), !dbg !3162
  ret void, !dbg !3163
}

; f128_internal::f128_impl::<impl num_traits::identities::One for f128_internal::f128_t::f128>::one
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl85_$LT$impl$u20$num_traits..identities..One$u20$for$u20$f128_internal..f128_t..f128$GT$3one17h923e42da922abdcdE"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3164 {
start:
  %1 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3166
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @0, i32 0, i32 0, i32 0), i64 16, i1 false), !dbg !3166
  ret void, !dbg !3167
}

; f128_internal::f128_impl::<impl num_traits::cast::ToPrimitive for f128_internal::f128_t::f128>::to_i64
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$6to_i6417h1ab6f6bb05e145ecE"(%"f128_t::f128"* align 1 %self) unnamed_addr #1 !dbg !3168 {
start:
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  %0 = alloca { i64, i64 }, align 8
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !3173, metadata !DIExpression()), !dbg !3174
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !3175
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3175
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !3175
  %3 = bitcast %"f128_t::f128"* %_3 to { i64, i64 }*, !dbg !3176
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 1, !dbg !3176
  %_2 = call i64 @f128_to_i64({ i64, i64 } %4), !dbg !3176
  br label %bb1, !dbg !3176

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3177
  store i64 %_2, i64* %5, align 8, !dbg !3177
  %6 = bitcast { i64, i64 }* %0 to i64*, !dbg !3177
  store i64 1, i64* %6, align 8, !dbg !3177
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3178
  %8 = load i64, i64* %7, align 8, !dbg !3178, !range !897, !noundef !26
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3178
  %10 = load i64, i64* %9, align 8, !dbg !3178
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0, !dbg !3178
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1, !dbg !3178
  ret { i64, i64 } %12, !dbg !3178
}

; f128_internal::f128_impl::<impl num_traits::cast::ToPrimitive for f128_internal::f128_t::f128>::to_u64
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$6to_u6417h7129a47eb00e8b01E"(%"f128_t::f128"* align 1 %self) unnamed_addr #1 !dbg !3179 {
start:
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  %0 = alloca { i64, i64 }, align 8
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !3196, metadata !DIExpression()), !dbg !3197
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !3198
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3198
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !3198
  %3 = bitcast %"f128_t::f128"* %_3 to { i64, i64 }*, !dbg !3199
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 1, !dbg !3199
  %_2 = call i64 @f128_to_u64({ i64, i64 } %4), !dbg !3199
  br label %bb1, !dbg !3199

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3200
  store i64 %_2, i64* %5, align 8, !dbg !3200
  %6 = bitcast { i64, i64 }* %0 to i64*, !dbg !3200
  store i64 1, i64* %6, align 8, !dbg !3200
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3201
  %8 = load i64, i64* %7, align 8, !dbg !3201, !range !897, !noundef !26
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3201
  %10 = load i64, i64* %9, align 8, !dbg !3201
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0, !dbg !3201
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1, !dbg !3201
  ret { i64, i64 } %12, !dbg !3201
}

; f128_internal::f128_impl::<impl num_traits::cast::ToPrimitive for f128_internal::f128_t::f128>::to_isize
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8to_isize17h9ad16e7d2371dbccE"(%"f128_t::f128"* align 1 %self) unnamed_addr #1 !dbg !3202 {
start:
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_4 = alloca %"f128_t::f128", align 1
  %0 = alloca { i64, i64 }, align 8
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !3219, metadata !DIExpression()), !dbg !3220
  %1 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !3221
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3221
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !3221
  %3 = bitcast %"f128_t::f128"* %_4 to { i64, i64 }*, !dbg !3222
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 1, !dbg !3222
  %_3 = call i64 @f128_to_i64({ i64, i64 } %4), !dbg !3222
  br label %bb1, !dbg !3222

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3223
  store i64 %_3, i64* %5, align 8, !dbg !3223
  %6 = bitcast { i64, i64 }* %0 to i64*, !dbg !3223
  store i64 1, i64* %6, align 8, !dbg !3223
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3224
  %8 = load i64, i64* %7, align 8, !dbg !3224, !range !897, !noundef !26
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3224
  %10 = load i64, i64* %9, align 8, !dbg !3224
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0, !dbg !3224
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1, !dbg !3224
  ret { i64, i64 } %12, !dbg !3224
}

; f128_internal::f128_impl::<impl num_traits::cast::ToPrimitive for f128_internal::f128_t::f128>::to_i8
; Function Attrs: nonlazybind uwtable
define { i8, i8 } @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$5to_i817h5fec4ce59a698ae3E"(%"f128_t::f128"* align 1 %self) unnamed_addr #1 !dbg !3225 {
start:
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  %0 = alloca { i8, i8 }, align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !3240, metadata !DIExpression()), !dbg !3241
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !3242
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3242
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !3242
  %3 = bitcast %"f128_t::f128"* %_3 to { i64, i64 }*, !dbg !3243
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 1, !dbg !3243
  %_2 = call signext i8 @f128_to_i8({ i64, i64 } %4), !dbg !3243
  br label %bb1, !dbg !3243

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 1, !dbg !3244
  store i8 %_2, i8* %5, align 1, !dbg !3244
  %6 = bitcast { i8, i8 }* %0 to i8*, !dbg !3244
  store i8 1, i8* %6, align 1, !dbg !3244
  %7 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 0, !dbg !3245
  %8 = load i8, i8* %7, align 1, !dbg !3245, !range !685, !noundef !26
  %9 = trunc i8 %8 to i1, !dbg !3245
  %10 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 1, !dbg !3245
  %11 = load i8, i8* %10, align 1, !dbg !3245
  %12 = zext i1 %9 to i8, !dbg !3245
  %13 = insertvalue { i8, i8 } undef, i8 %12, 0, !dbg !3245
  %14 = insertvalue { i8, i8 } %13, i8 %11, 1, !dbg !3245
  ret { i8, i8 } %14, !dbg !3245
}

; f128_internal::f128_impl::<impl num_traits::cast::ToPrimitive for f128_internal::f128_t::f128>::to_i16
; Function Attrs: nonlazybind uwtable
define { i16, i16 } @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$6to_i1617h7c153f2cb76e538dE"(%"f128_t::f128"* align 1 %self) unnamed_addr #1 !dbg !3246 {
start:
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  %0 = alloca { i16, i16 }, align 2
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !3265, metadata !DIExpression()), !dbg !3266
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !3267
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3267
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !3267
  %3 = bitcast %"f128_t::f128"* %_3 to { i64, i64 }*, !dbg !3268
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 1, !dbg !3268
  %_2 = call signext i16 @f128_to_i16({ i64, i64 } %4), !dbg !3268
  br label %bb1, !dbg !3268

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { i16, i16 }, { i16, i16 }* %0, i32 0, i32 1, !dbg !3269
  store i16 %_2, i16* %5, align 2, !dbg !3269
  %6 = bitcast { i16, i16 }* %0 to i16*, !dbg !3269
  store i16 1, i16* %6, align 2, !dbg !3269
  %7 = getelementptr inbounds { i16, i16 }, { i16, i16 }* %0, i32 0, i32 0, !dbg !3270
  %8 = load i16, i16* %7, align 2, !dbg !3270, !range !3271, !noundef !26
  %9 = getelementptr inbounds { i16, i16 }, { i16, i16 }* %0, i32 0, i32 1, !dbg !3270
  %10 = load i16, i16* %9, align 2, !dbg !3270
  %11 = insertvalue { i16, i16 } undef, i16 %8, 0, !dbg !3270
  %12 = insertvalue { i16, i16 } %11, i16 %10, 1, !dbg !3270
  ret { i16, i16 } %12, !dbg !3270
}

; f128_internal::f128_impl::<impl num_traits::cast::ToPrimitive for f128_internal::f128_t::f128>::to_i32
; Function Attrs: nonlazybind uwtable
define { i32, i32 } @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$6to_i3217h26967de9ee03624fE"(%"f128_t::f128"* align 1 %self) unnamed_addr #1 !dbg !3272 {
start:
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  %0 = alloca { i32, i32 }, align 4
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !3276, metadata !DIExpression()), !dbg !3277
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !3278
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3278
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !3278
  %3 = bitcast %"f128_t::f128"* %_3 to { i64, i64 }*, !dbg !3279
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 1, !dbg !3279
  %_2 = call i32 @f128_to_i32({ i64, i64 } %4), !dbg !3279
  br label %bb1, !dbg !3279

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !3280
  store i32 %_2, i32* %5, align 4, !dbg !3280
  %6 = bitcast { i32, i32 }* %0 to i32*, !dbg !3280
  store i32 1, i32* %6, align 4, !dbg !3280
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0, !dbg !3281
  %8 = load i32, i32* %7, align 4, !dbg !3281, !range !3080, !noundef !26
  %9 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !3281
  %10 = load i32, i32* %9, align 4, !dbg !3281
  %11 = insertvalue { i32, i32 } undef, i32 %8, 0, !dbg !3281
  %12 = insertvalue { i32, i32 } %11, i32 %10, 1, !dbg !3281
  ret { i32, i32 } %12, !dbg !3281
}

; f128_internal::f128_impl::<impl num_traits::cast::ToPrimitive for f128_internal::f128_t::f128>::to_usize
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8to_usize17hc53527b89f8f322cE"(%"f128_t::f128"* align 1 %self) unnamed_addr #1 !dbg !3282 {
start:
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_4 = alloca %"f128_t::f128", align 1
  %0 = alloca { i64, i64 }, align 8
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !3286, metadata !DIExpression()), !dbg !3287
  %1 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !3288
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !3288
  %3 = bitcast %"f128_t::f128"* %_4 to { i64, i64 }*, !dbg !3289
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 1, !dbg !3289
  %_3 = call i64 @f128_to_u64({ i64, i64 } %4), !dbg !3289
  br label %bb1, !dbg !3289

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3290
  store i64 %_3, i64* %5, align 8, !dbg !3290
  %6 = bitcast { i64, i64 }* %0 to i64*, !dbg !3290
  store i64 1, i64* %6, align 8, !dbg !3290
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3291
  %8 = load i64, i64* %7, align 8, !dbg !3291, !range !897, !noundef !26
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3291
  %10 = load i64, i64* %9, align 8, !dbg !3291
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0, !dbg !3291
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1, !dbg !3291
  ret { i64, i64 } %12, !dbg !3291
}

; f128_internal::f128_impl::<impl num_traits::cast::ToPrimitive for f128_internal::f128_t::f128>::to_u8
; Function Attrs: nonlazybind uwtable
define { i8, i8 } @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$5to_u817he6eec2db2d7fd82dE"(%"f128_t::f128"* align 1 %self) unnamed_addr #1 !dbg !3292 {
start:
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  %0 = alloca { i8, i8 }, align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !3296, metadata !DIExpression()), !dbg !3297
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !3298
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3298
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !3298
  %3 = bitcast %"f128_t::f128"* %_3 to { i64, i64 }*, !dbg !3299
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 1, !dbg !3299
  %_2 = call zeroext i8 @f128_to_u8({ i64, i64 } %4), !dbg !3299
  br label %bb1, !dbg !3299

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 1, !dbg !3300
  store i8 %_2, i8* %5, align 1, !dbg !3300
  %6 = bitcast { i8, i8 }* %0 to i8*, !dbg !3300
  store i8 1, i8* %6, align 1, !dbg !3300
  %7 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 0, !dbg !3301
  %8 = load i8, i8* %7, align 1, !dbg !3301, !range !685, !noundef !26
  %9 = trunc i8 %8 to i1, !dbg !3301
  %10 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 1, !dbg !3301
  %11 = load i8, i8* %10, align 1, !dbg !3301
  %12 = zext i1 %9 to i8, !dbg !3301
  %13 = insertvalue { i8, i8 } undef, i8 %12, 0, !dbg !3301
  %14 = insertvalue { i8, i8 } %13, i8 %11, 1, !dbg !3301
  ret { i8, i8 } %14, !dbg !3301
}

; f128_internal::f128_impl::<impl num_traits::cast::ToPrimitive for f128_internal::f128_t::f128>::to_u16
; Function Attrs: nonlazybind uwtable
define { i16, i16 } @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$6to_u1617hb8b2b4f2600ae24aE"(%"f128_t::f128"* align 1 %self) unnamed_addr #1 !dbg !3302 {
start:
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  %0 = alloca { i16, i16 }, align 2
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !3319, metadata !DIExpression()), !dbg !3320
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !3321
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3321
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !3321
  %3 = bitcast %"f128_t::f128"* %_3 to { i64, i64 }*, !dbg !3322
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 1, !dbg !3322
  %_2 = call zeroext i16 @f128_to_u16({ i64, i64 } %4), !dbg !3322
  br label %bb1, !dbg !3322

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { i16, i16 }, { i16, i16 }* %0, i32 0, i32 1, !dbg !3323
  store i16 %_2, i16* %5, align 2, !dbg !3323
  %6 = bitcast { i16, i16 }* %0 to i16*, !dbg !3323
  store i16 1, i16* %6, align 2, !dbg !3323
  %7 = getelementptr inbounds { i16, i16 }, { i16, i16 }* %0, i32 0, i32 0, !dbg !3324
  %8 = load i16, i16* %7, align 2, !dbg !3324, !range !3271, !noundef !26
  %9 = getelementptr inbounds { i16, i16 }, { i16, i16 }* %0, i32 0, i32 1, !dbg !3324
  %10 = load i16, i16* %9, align 2, !dbg !3324
  %11 = insertvalue { i16, i16 } undef, i16 %8, 0, !dbg !3324
  %12 = insertvalue { i16, i16 } %11, i16 %10, 1, !dbg !3324
  ret { i16, i16 } %12, !dbg !3324
}

; f128_internal::f128_impl::<impl num_traits::cast::ToPrimitive for f128_internal::f128_t::f128>::to_u32
; Function Attrs: nonlazybind uwtable
define { i32, i32 } @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$6to_u3217h5b464c1b3ed8e54eE"(%"f128_t::f128"* align 1 %self) unnamed_addr #1 !dbg !3325 {
start:
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  %0 = alloca { i32, i32 }, align 4
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !3342, metadata !DIExpression()), !dbg !3343
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !3344
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3344
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !3344
  %3 = bitcast %"f128_t::f128"* %_3 to { i64, i64 }*, !dbg !3345
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 1, !dbg !3345
  %_2 = call i32 @f128_to_u32({ i64, i64 } %4), !dbg !3345
  br label %bb1, !dbg !3345

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !3346
  store i32 %_2, i32* %5, align 4, !dbg !3346
  %6 = bitcast { i32, i32 }* %0 to i32*, !dbg !3346
  store i32 1, i32* %6, align 4, !dbg !3346
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0, !dbg !3347
  %8 = load i32, i32* %7, align 4, !dbg !3347, !range !3080, !noundef !26
  %9 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !3347
  %10 = load i32, i32* %9, align 4, !dbg !3347
  %11 = insertvalue { i32, i32 } undef, i32 %8, 0, !dbg !3347
  %12 = insertvalue { i32, i32 } %11, i32 %10, 1, !dbg !3347
  ret { i32, i32 } %12, !dbg !3347
}

; f128_internal::f128_impl::<impl num_traits::cast::ToPrimitive for f128_internal::f128_t::f128>::to_f32
; Function Attrs: nonlazybind uwtable
define { i32, float } @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$6to_f3217h43ef597661efaa91E"(%"f128_t::f128"* align 1 %self) unnamed_addr #1 !dbg !3348 {
start:
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  %0 = alloca { i32, float }, align 4
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !3366, metadata !DIExpression()), !dbg !3367
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !3368
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3368
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !3368
  %3 = bitcast %"f128_t::f128"* %_3 to { i64, i64 }*, !dbg !3369
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 1, !dbg !3369
  %_2 = call float @f128_to_f32({ i64, i64 } %4), !dbg !3369
  br label %bb1, !dbg !3369

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { i32, float }, { i32, float }* %0, i32 0, i32 1, !dbg !3370
  store float %_2, float* %5, align 4, !dbg !3370
  %6 = bitcast { i32, float }* %0 to i32*, !dbg !3370
  store i32 1, i32* %6, align 4, !dbg !3370
  %7 = getelementptr inbounds { i32, float }, { i32, float }* %0, i32 0, i32 0, !dbg !3371
  %8 = load i32, i32* %7, align 4, !dbg !3371, !range !3080, !noundef !26
  %9 = getelementptr inbounds { i32, float }, { i32, float }* %0, i32 0, i32 1, !dbg !3371
  %10 = load float, float* %9, align 4, !dbg !3371
  %11 = insertvalue { i32, float } undef, i32 %8, 0, !dbg !3371
  %12 = insertvalue { i32, float } %11, float %10, 1, !dbg !3371
  ret { i32, float } %12, !dbg !3371
}

; f128_internal::f128_impl::<impl num_traits::cast::ToPrimitive for f128_internal::f128_t::f128>::to_f64
; Function Attrs: nonlazybind uwtable
define { i64, double } @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$6to_f6417hfa3162fcde8d41efE"(%"f128_t::f128"* align 1 %self) unnamed_addr #1 !dbg !3372 {
start:
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  %0 = alloca { i64, double }, align 8
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !3390, metadata !DIExpression()), !dbg !3391
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !3392
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3392
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !3392
  %3 = bitcast %"f128_t::f128"* %_3 to { i64, i64 }*, !dbg !3393
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 1, !dbg !3393
  %_2 = call double @f128_to_f64({ i64, i64 } %4), !dbg !3393
  br label %bb1, !dbg !3393

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { i64, double }, { i64, double }* %0, i32 0, i32 1, !dbg !3394
  store double %_2, double* %5, align 8, !dbg !3394
  %6 = bitcast { i64, double }* %0 to i64*, !dbg !3394
  store i64 1, i64* %6, align 8, !dbg !3394
  %7 = getelementptr inbounds { i64, double }, { i64, double }* %0, i32 0, i32 0, !dbg !3395
  %8 = load i64, i64* %7, align 8, !dbg !3395, !range !897, !noundef !26
  %9 = getelementptr inbounds { i64, double }, { i64, double }* %0, i32 0, i32 1, !dbg !3395
  %10 = load double, double* %9, align 8, !dbg !3395
  %11 = insertvalue { i64, double } undef, i64 %8, 0, !dbg !3395
  %12 = insertvalue { i64, double } %11, double %10, 1, !dbg !3395
  ret { i64, double } %12, !dbg !3395
}

; f128_internal::f128_impl::<impl num_traits::cast::ToPrimitive for f128_internal::f128_t::f128>::to_i128
; Function Attrs: nonlazybind uwtable
define { i64, i128 } @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$7to_i12817he019db56214c0823E"(%"f128_t::f128"* align 1 %self) unnamed_addr #1 !dbg !3396 {
start:
  %0 = alloca i128, align 8
  %1 = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_4 = alloca %"f128_t::f128", align 1
  %_3 = alloca %"ffi::Wrapper", align 1
  %2 = alloca { i64, i128 }, align 8
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !3414, metadata !DIExpression()), !dbg !3415
  %3 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !3416
  %4 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3416
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !3416
  %5 = bitcast %"f128_t::f128"* %_4 to { i64, i64 }*, !dbg !3417
  %6 = load { i64, i64 }, { i64, i64 }* %5, align 1, !dbg !3417
  %7 = call { i64, i64 } @f128_to_i128({ i64, i64 } %6), !dbg !3417
  store { i64, i64 } %7, { i64, i64 }* %1, align 8, !dbg !3417
  %8 = bitcast %"ffi::Wrapper"* %_3 to i8*, !dbg !3417
  %9 = bitcast { i64, i64 }* %1 to i8*, !dbg !3417
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 8 %9, i64 16, i1 false), !dbg !3417
  br label %bb1, !dbg !3417

bb1:                                              ; preds = %start
  %10 = bitcast i128* %0 to %"ffi::Wrapper"*, !dbg !3418
  %11 = bitcast %"ffi::Wrapper"* %10 to i8*, !dbg !3418
  %12 = bitcast %"ffi::Wrapper"* %_3 to i8*, !dbg !3418
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %12, i64 16, i1 false), !dbg !3418
  %_2 = load i128, i128* %0, align 8, !dbg !3418
  br label %bb2, !dbg !3418

bb2:                                              ; preds = %bb1
  %13 = getelementptr inbounds { i64, i128 }, { i64, i128 }* %2, i32 0, i32 1, !dbg !3419
  store i128 %_2, i128* %13, align 8, !dbg !3419
  %14 = bitcast { i64, i128 }* %2 to i64*, !dbg !3419
  store i64 1, i64* %14, align 8, !dbg !3419
  %15 = getelementptr inbounds { i64, i128 }, { i64, i128 }* %2, i32 0, i32 0, !dbg !3420
  %16 = load i64, i64* %15, align 8, !dbg !3420, !range !897, !noundef !26
  %17 = getelementptr inbounds { i64, i128 }, { i64, i128 }* %2, i32 0, i32 1, !dbg !3420
  %18 = load i128, i128* %17, align 8, !dbg !3420
  %19 = insertvalue { i64, i128 } undef, i64 %16, 0, !dbg !3420
  %20 = insertvalue { i64, i128 } %19, i128 %18, 1, !dbg !3420
  ret { i64, i128 } %20, !dbg !3420
}

; f128_internal::f128_impl::<impl num_traits::cast::ToPrimitive for f128_internal::f128_t::f128>::to_u128
; Function Attrs: nonlazybind uwtable
define { i64, i128 } @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$7to_u12817h4596ff8ce2c10d02E"(%"f128_t::f128"* align 1 %self) unnamed_addr #1 !dbg !3421 {
start:
  %0 = alloca i128, align 8
  %1 = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_4 = alloca %"f128_t::f128", align 1
  %_3 = alloca %"ffi::Wrapper", align 1
  %2 = alloca { i64, i128 }, align 8
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !3439, metadata !DIExpression()), !dbg !3440
  %3 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !3441
  %4 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3441
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !3441
  %5 = bitcast %"f128_t::f128"* %_4 to { i64, i64 }*, !dbg !3442
  %6 = load { i64, i64 }, { i64, i64 }* %5, align 1, !dbg !3442
  %7 = call { i64, i64 } @f128_to_u128({ i64, i64 } %6), !dbg !3442
  store { i64, i64 } %7, { i64, i64 }* %1, align 8, !dbg !3442
  %8 = bitcast %"ffi::Wrapper"* %_3 to i8*, !dbg !3442
  %9 = bitcast { i64, i64 }* %1 to i8*, !dbg !3442
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 8 %9, i64 16, i1 false), !dbg !3442
  br label %bb1, !dbg !3442

bb1:                                              ; preds = %start
  %10 = bitcast i128* %0 to %"ffi::Wrapper"*, !dbg !3443
  %11 = bitcast %"ffi::Wrapper"* %10 to i8*, !dbg !3443
  %12 = bitcast %"ffi::Wrapper"* %_3 to i8*, !dbg !3443
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %12, i64 16, i1 false), !dbg !3443
  %_2 = load i128, i128* %0, align 8, !dbg !3443
  br label %bb2, !dbg !3443

bb2:                                              ; preds = %bb1
  %13 = getelementptr inbounds { i64, i128 }, { i64, i128 }* %2, i32 0, i32 1, !dbg !3444
  store i128 %_2, i128* %13, align 8, !dbg !3444
  %14 = bitcast { i64, i128 }* %2 to i64*, !dbg !3444
  store i64 1, i64* %14, align 8, !dbg !3444
  %15 = getelementptr inbounds { i64, i128 }, { i64, i128 }* %2, i32 0, i32 0, !dbg !3445
  %16 = load i64, i64* %15, align 8, !dbg !3445, !range !897, !noundef !26
  %17 = getelementptr inbounds { i64, i128 }, { i64, i128 }* %2, i32 0, i32 1, !dbg !3445
  %18 = load i128, i128* %17, align 8, !dbg !3445
  %19 = insertvalue { i64, i128 } undef, i64 %16, 0, !dbg !3445
  %20 = insertvalue { i64, i128 } %19, i128 %18, 1, !dbg !3445
  ret { i64, i128 } %20, !dbg !3445
}

; f128_internal::f128_impl::<impl num_traits::cast::FromPrimitive for f128_internal::f128_t::f128>::from_i64
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8from_i6417h1c78b85aba3fc5eeE"(%"core::option::Option<f128_t::f128>"* sret(%"core::option::Option<f128_t::f128>") %0, i64 %n) unnamed_addr #1 !dbg !3446 {
start:
  %1 = alloca { i64, i64 }, align 8
  %n.dbg.spill = alloca i64, align 8
  %_2 = alloca %"f128_t::f128", align 1
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3451, metadata !DIExpression()), !dbg !3452
  %2 = call { i64, i64 } @i64_to_f128(i64 %n), !dbg !3453
  store { i64, i64 } %2, { i64, i64 }* %1, align 8, !dbg !3453
  %3 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3453
  %4 = bitcast { i64, i64 }* %1 to i8*, !dbg !3453
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 8 %4, i64 16, i1 false), !dbg !3453
  br label %bb1, !dbg !3453

bb1:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<f128_t::f128>"* %0 to %"core::option::Option<f128_t::f128>::Some"*, !dbg !3454
  %6 = getelementptr inbounds %"core::option::Option<f128_t::f128>::Some", %"core::option::Option<f128_t::f128>::Some"* %5, i32 0, i32 1, !dbg !3454
  %7 = bitcast %"f128_t::f128"* %6 to i8*, !dbg !3454
  %8 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3454
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 16, i1 false), !dbg !3454
  %9 = bitcast %"core::option::Option<f128_t::f128>"* %0 to i8*, !dbg !3454
  store i8 1, i8* %9, align 1, !dbg !3454
  ret void, !dbg !3455
}

; f128_internal::f128_impl::<impl num_traits::cast::FromPrimitive for f128_internal::f128_t::f128>::from_u64
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8from_u6417hac0286a6f38c0490E"(%"core::option::Option<f128_t::f128>"* sret(%"core::option::Option<f128_t::f128>") %0, i64 %n) unnamed_addr #1 !dbg !3456 {
start:
  %1 = alloca { i64, i64 }, align 8
  %n.dbg.spill = alloca i64, align 8
  %_2 = alloca %"f128_t::f128", align 1
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3460, metadata !DIExpression()), !dbg !3461
  %2 = call { i64, i64 } @u64_to_f128(i64 %n), !dbg !3462
  store { i64, i64 } %2, { i64, i64 }* %1, align 8, !dbg !3462
  %3 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3462
  %4 = bitcast { i64, i64 }* %1 to i8*, !dbg !3462
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 8 %4, i64 16, i1 false), !dbg !3462
  br label %bb1, !dbg !3462

bb1:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<f128_t::f128>"* %0 to %"core::option::Option<f128_t::f128>::Some"*, !dbg !3463
  %6 = getelementptr inbounds %"core::option::Option<f128_t::f128>::Some", %"core::option::Option<f128_t::f128>::Some"* %5, i32 0, i32 1, !dbg !3463
  %7 = bitcast %"f128_t::f128"* %6 to i8*, !dbg !3463
  %8 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3463
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 16, i1 false), !dbg !3463
  %9 = bitcast %"core::option::Option<f128_t::f128>"* %0 to i8*, !dbg !3463
  store i8 1, i8* %9, align 1, !dbg !3463
  ret void, !dbg !3464
}

; f128_internal::f128_impl::<impl num_traits::cast::FromPrimitive for f128_internal::f128_t::f128>::from_isize
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$10from_isize17h075e47b91b250e51E"(%"core::option::Option<f128_t::f128>"* sret(%"core::option::Option<f128_t::f128>") %0, i64 %n) unnamed_addr #1 !dbg !3465 {
start:
  %1 = alloca { i64, i64 }, align 8
  %n.dbg.spill = alloca i64, align 8
  %_2 = alloca %"f128_t::f128", align 1
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3469, metadata !DIExpression()), !dbg !3470
  %2 = call { i64, i64 } @isize_to_f128(i64 %n), !dbg !3471
  store { i64, i64 } %2, { i64, i64 }* %1, align 8, !dbg !3471
  %3 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3471
  %4 = bitcast { i64, i64 }* %1 to i8*, !dbg !3471
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 8 %4, i64 16, i1 false), !dbg !3471
  br label %bb1, !dbg !3471

bb1:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<f128_t::f128>"* %0 to %"core::option::Option<f128_t::f128>::Some"*, !dbg !3472
  %6 = getelementptr inbounds %"core::option::Option<f128_t::f128>::Some", %"core::option::Option<f128_t::f128>::Some"* %5, i32 0, i32 1, !dbg !3472
  %7 = bitcast %"f128_t::f128"* %6 to i8*, !dbg !3472
  %8 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3472
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 16, i1 false), !dbg !3472
  %9 = bitcast %"core::option::Option<f128_t::f128>"* %0 to i8*, !dbg !3472
  store i8 1, i8* %9, align 1, !dbg !3472
  ret void, !dbg !3473
}

; f128_internal::f128_impl::<impl num_traits::cast::FromPrimitive for f128_internal::f128_t::f128>::from_i8
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$7from_i817h12bf0bc69ba15603E"(%"core::option::Option<f128_t::f128>"* sret(%"core::option::Option<f128_t::f128>") %0, i8 %n) unnamed_addr #1 !dbg !3474 {
start:
  %1 = alloca { i64, i64 }, align 8
  %n.dbg.spill = alloca i8, align 1
  %_2 = alloca %"f128_t::f128", align 1
  store i8 %n, i8* %n.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %n.dbg.spill, metadata !3478, metadata !DIExpression()), !dbg !3479
  %2 = call { i64, i64 } @i8_to_f128(i8 signext %n), !dbg !3480
  store { i64, i64 } %2, { i64, i64 }* %1, align 8, !dbg !3480
  %3 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3480
  %4 = bitcast { i64, i64 }* %1 to i8*, !dbg !3480
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 8 %4, i64 16, i1 false), !dbg !3480
  br label %bb1, !dbg !3480

bb1:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<f128_t::f128>"* %0 to %"core::option::Option<f128_t::f128>::Some"*, !dbg !3481
  %6 = getelementptr inbounds %"core::option::Option<f128_t::f128>::Some", %"core::option::Option<f128_t::f128>::Some"* %5, i32 0, i32 1, !dbg !3481
  %7 = bitcast %"f128_t::f128"* %6 to i8*, !dbg !3481
  %8 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3481
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 16, i1 false), !dbg !3481
  %9 = bitcast %"core::option::Option<f128_t::f128>"* %0 to i8*, !dbg !3481
  store i8 1, i8* %9, align 1, !dbg !3481
  ret void, !dbg !3482
}

; f128_internal::f128_impl::<impl num_traits::cast::FromPrimitive for f128_internal::f128_t::f128>::from_i16
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8from_i1617hce43932f3966a542E"(%"core::option::Option<f128_t::f128>"* sret(%"core::option::Option<f128_t::f128>") %0, i16 %n) unnamed_addr #1 !dbg !3483 {
start:
  %1 = alloca { i64, i64 }, align 8
  %n.dbg.spill = alloca i16, align 2
  %_2 = alloca %"f128_t::f128", align 1
  store i16 %n, i16* %n.dbg.spill, align 2
  call void @llvm.dbg.declare(metadata i16* %n.dbg.spill, metadata !3487, metadata !DIExpression()), !dbg !3488
  %2 = call { i64, i64 } @i16_to_f128(i16 signext %n), !dbg !3489
  store { i64, i64 } %2, { i64, i64 }* %1, align 8, !dbg !3489
  %3 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3489
  %4 = bitcast { i64, i64 }* %1 to i8*, !dbg !3489
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 8 %4, i64 16, i1 false), !dbg !3489
  br label %bb1, !dbg !3489

bb1:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<f128_t::f128>"* %0 to %"core::option::Option<f128_t::f128>::Some"*, !dbg !3490
  %6 = getelementptr inbounds %"core::option::Option<f128_t::f128>::Some", %"core::option::Option<f128_t::f128>::Some"* %5, i32 0, i32 1, !dbg !3490
  %7 = bitcast %"f128_t::f128"* %6 to i8*, !dbg !3490
  %8 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3490
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 16, i1 false), !dbg !3490
  %9 = bitcast %"core::option::Option<f128_t::f128>"* %0 to i8*, !dbg !3490
  store i8 1, i8* %9, align 1, !dbg !3490
  ret void, !dbg !3491
}

; f128_internal::f128_impl::<impl num_traits::cast::FromPrimitive for f128_internal::f128_t::f128>::from_i32
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8from_i3217hab0bfa6cf34135e6E"(%"core::option::Option<f128_t::f128>"* sret(%"core::option::Option<f128_t::f128>") %0, i32 %n) unnamed_addr #1 !dbg !3492 {
start:
  %1 = alloca { i64, i64 }, align 8
  %n.dbg.spill = alloca i32, align 4
  %_2 = alloca %"f128_t::f128", align 1
  store i32 %n, i32* %n.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !3496, metadata !DIExpression()), !dbg !3497
  %2 = call { i64, i64 } @i32_to_f128(i32 %n), !dbg !3498
  store { i64, i64 } %2, { i64, i64 }* %1, align 8, !dbg !3498
  %3 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3498
  %4 = bitcast { i64, i64 }* %1 to i8*, !dbg !3498
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 8 %4, i64 16, i1 false), !dbg !3498
  br label %bb1, !dbg !3498

bb1:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<f128_t::f128>"* %0 to %"core::option::Option<f128_t::f128>::Some"*, !dbg !3499
  %6 = getelementptr inbounds %"core::option::Option<f128_t::f128>::Some", %"core::option::Option<f128_t::f128>::Some"* %5, i32 0, i32 1, !dbg !3499
  %7 = bitcast %"f128_t::f128"* %6 to i8*, !dbg !3499
  %8 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3499
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 16, i1 false), !dbg !3499
  %9 = bitcast %"core::option::Option<f128_t::f128>"* %0 to i8*, !dbg !3499
  store i8 1, i8* %9, align 1, !dbg !3499
  ret void, !dbg !3500
}

; f128_internal::f128_impl::<impl num_traits::cast::FromPrimitive for f128_internal::f128_t::f128>::from_usize
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$10from_usize17h388ab638ef870dfcE"(%"core::option::Option<f128_t::f128>"* sret(%"core::option::Option<f128_t::f128>") %0, i64 %n) unnamed_addr #1 !dbg !3501 {
start:
  %1 = alloca { i64, i64 }, align 8
  %n.dbg.spill = alloca i64, align 8
  %_2 = alloca %"f128_t::f128", align 1
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3505, metadata !DIExpression()), !dbg !3506
  %2 = call { i64, i64 } @usize_to_f128(i64 %n), !dbg !3507
  store { i64, i64 } %2, { i64, i64 }* %1, align 8, !dbg !3507
  %3 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3507
  %4 = bitcast { i64, i64 }* %1 to i8*, !dbg !3507
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 8 %4, i64 16, i1 false), !dbg !3507
  br label %bb1, !dbg !3507

bb1:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<f128_t::f128>"* %0 to %"core::option::Option<f128_t::f128>::Some"*, !dbg !3508
  %6 = getelementptr inbounds %"core::option::Option<f128_t::f128>::Some", %"core::option::Option<f128_t::f128>::Some"* %5, i32 0, i32 1, !dbg !3508
  %7 = bitcast %"f128_t::f128"* %6 to i8*, !dbg !3508
  %8 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3508
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 16, i1 false), !dbg !3508
  %9 = bitcast %"core::option::Option<f128_t::f128>"* %0 to i8*, !dbg !3508
  store i8 1, i8* %9, align 1, !dbg !3508
  ret void, !dbg !3509
}

; f128_internal::f128_impl::<impl num_traits::cast::FromPrimitive for f128_internal::f128_t::f128>::from_u8
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$7from_u817h18dfc0580027cd2fE"(%"core::option::Option<f128_t::f128>"* sret(%"core::option::Option<f128_t::f128>") %0, i8 %n) unnamed_addr #1 !dbg !3510 {
start:
  %1 = alloca { i64, i64 }, align 8
  %n.dbg.spill = alloca i8, align 1
  %_2 = alloca %"f128_t::f128", align 1
  store i8 %n, i8* %n.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %n.dbg.spill, metadata !3514, metadata !DIExpression()), !dbg !3515
  %2 = call { i64, i64 } @u8_to_f128(i8 zeroext %n), !dbg !3516
  store { i64, i64 } %2, { i64, i64 }* %1, align 8, !dbg !3516
  %3 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3516
  %4 = bitcast { i64, i64 }* %1 to i8*, !dbg !3516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 8 %4, i64 16, i1 false), !dbg !3516
  br label %bb1, !dbg !3516

bb1:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<f128_t::f128>"* %0 to %"core::option::Option<f128_t::f128>::Some"*, !dbg !3517
  %6 = getelementptr inbounds %"core::option::Option<f128_t::f128>::Some", %"core::option::Option<f128_t::f128>::Some"* %5, i32 0, i32 1, !dbg !3517
  %7 = bitcast %"f128_t::f128"* %6 to i8*, !dbg !3517
  %8 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3517
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 16, i1 false), !dbg !3517
  %9 = bitcast %"core::option::Option<f128_t::f128>"* %0 to i8*, !dbg !3517
  store i8 1, i8* %9, align 1, !dbg !3517
  ret void, !dbg !3518
}

; f128_internal::f128_impl::<impl num_traits::cast::FromPrimitive for f128_internal::f128_t::f128>::from_u16
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8from_u1617h0391065416554e13E"(%"core::option::Option<f128_t::f128>"* sret(%"core::option::Option<f128_t::f128>") %0, i16 %n) unnamed_addr #1 !dbg !3519 {
start:
  %1 = alloca { i64, i64 }, align 8
  %n.dbg.spill = alloca i16, align 2
  %_2 = alloca %"f128_t::f128", align 1
  store i16 %n, i16* %n.dbg.spill, align 2
  call void @llvm.dbg.declare(metadata i16* %n.dbg.spill, metadata !3523, metadata !DIExpression()), !dbg !3524
  %2 = call { i64, i64 } @u16_to_f128(i16 zeroext %n), !dbg !3525
  store { i64, i64 } %2, { i64, i64 }* %1, align 8, !dbg !3525
  %3 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3525
  %4 = bitcast { i64, i64 }* %1 to i8*, !dbg !3525
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 8 %4, i64 16, i1 false), !dbg !3525
  br label %bb1, !dbg !3525

bb1:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<f128_t::f128>"* %0 to %"core::option::Option<f128_t::f128>::Some"*, !dbg !3526
  %6 = getelementptr inbounds %"core::option::Option<f128_t::f128>::Some", %"core::option::Option<f128_t::f128>::Some"* %5, i32 0, i32 1, !dbg !3526
  %7 = bitcast %"f128_t::f128"* %6 to i8*, !dbg !3526
  %8 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3526
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 16, i1 false), !dbg !3526
  %9 = bitcast %"core::option::Option<f128_t::f128>"* %0 to i8*, !dbg !3526
  store i8 1, i8* %9, align 1, !dbg !3526
  ret void, !dbg !3527
}

; f128_internal::f128_impl::<impl num_traits::cast::FromPrimitive for f128_internal::f128_t::f128>::from_u32
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8from_u3217h90cc582233a891feE"(%"core::option::Option<f128_t::f128>"* sret(%"core::option::Option<f128_t::f128>") %0, i32 %n) unnamed_addr #1 !dbg !3528 {
start:
  %1 = alloca { i64, i64 }, align 8
  %n.dbg.spill = alloca i32, align 4
  %_2 = alloca %"f128_t::f128", align 1
  store i32 %n, i32* %n.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !3532, metadata !DIExpression()), !dbg !3533
  %2 = call { i64, i64 } @u32_to_f128(i32 %n), !dbg !3534
  store { i64, i64 } %2, { i64, i64 }* %1, align 8, !dbg !3534
  %3 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3534
  %4 = bitcast { i64, i64 }* %1 to i8*, !dbg !3534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 8 %4, i64 16, i1 false), !dbg !3534
  br label %bb1, !dbg !3534

bb1:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<f128_t::f128>"* %0 to %"core::option::Option<f128_t::f128>::Some"*, !dbg !3535
  %6 = getelementptr inbounds %"core::option::Option<f128_t::f128>::Some", %"core::option::Option<f128_t::f128>::Some"* %5, i32 0, i32 1, !dbg !3535
  %7 = bitcast %"f128_t::f128"* %6 to i8*, !dbg !3535
  %8 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3535
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 16, i1 false), !dbg !3535
  %9 = bitcast %"core::option::Option<f128_t::f128>"* %0 to i8*, !dbg !3535
  store i8 1, i8* %9, align 1, !dbg !3535
  ret void, !dbg !3536
}

; f128_internal::f128_impl::<impl num_traits::cast::FromPrimitive for f128_internal::f128_t::f128>::from_f32
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8from_f3217h446d77124bd87119E"(%"core::option::Option<f128_t::f128>"* sret(%"core::option::Option<f128_t::f128>") %0, float %n) unnamed_addr #1 !dbg !3537 {
start:
  %1 = alloca { i64, i64 }, align 8
  %n.dbg.spill = alloca float, align 4
  %_2 = alloca %"f128_t::f128", align 1
  store float %n, float* %n.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %n.dbg.spill, metadata !3541, metadata !DIExpression()), !dbg !3542
  %2 = call { i64, i64 } @f32_to_f128(float %n), !dbg !3543
  store { i64, i64 } %2, { i64, i64 }* %1, align 8, !dbg !3543
  %3 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3543
  %4 = bitcast { i64, i64 }* %1 to i8*, !dbg !3543
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 8 %4, i64 16, i1 false), !dbg !3543
  br label %bb1, !dbg !3543

bb1:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<f128_t::f128>"* %0 to %"core::option::Option<f128_t::f128>::Some"*, !dbg !3544
  %6 = getelementptr inbounds %"core::option::Option<f128_t::f128>::Some", %"core::option::Option<f128_t::f128>::Some"* %5, i32 0, i32 1, !dbg !3544
  %7 = bitcast %"f128_t::f128"* %6 to i8*, !dbg !3544
  %8 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3544
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 16, i1 false), !dbg !3544
  %9 = bitcast %"core::option::Option<f128_t::f128>"* %0 to i8*, !dbg !3544
  store i8 1, i8* %9, align 1, !dbg !3544
  ret void, !dbg !3545
}

; f128_internal::f128_impl::<impl num_traits::cast::FromPrimitive for f128_internal::f128_t::f128>::from_f64
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8from_f6417h405d983fbd52dc09E"(%"core::option::Option<f128_t::f128>"* sret(%"core::option::Option<f128_t::f128>") %0, double %n) unnamed_addr #1 !dbg !3546 {
start:
  %1 = alloca { i64, i64 }, align 8
  %n.dbg.spill = alloca double, align 8
  %_2 = alloca %"f128_t::f128", align 1
  store double %n, double* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %n.dbg.spill, metadata !3550, metadata !DIExpression()), !dbg !3551
  %2 = call { i64, i64 } @f64_to_f128(double %n), !dbg !3552
  store { i64, i64 } %2, { i64, i64 }* %1, align 8, !dbg !3552
  %3 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3552
  %4 = bitcast { i64, i64 }* %1 to i8*, !dbg !3552
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 8 %4, i64 16, i1 false), !dbg !3552
  br label %bb1, !dbg !3552

bb1:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<f128_t::f128>"* %0 to %"core::option::Option<f128_t::f128>::Some"*, !dbg !3553
  %6 = getelementptr inbounds %"core::option::Option<f128_t::f128>::Some", %"core::option::Option<f128_t::f128>::Some"* %5, i32 0, i32 1, !dbg !3553
  %7 = bitcast %"f128_t::f128"* %6 to i8*, !dbg !3553
  %8 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3553
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 16, i1 false), !dbg !3553
  %9 = bitcast %"core::option::Option<f128_t::f128>"* %0 to i8*, !dbg !3553
  store i8 1, i8* %9, align 1, !dbg !3553
  ret void, !dbg !3554
}

; f128_internal::f128_impl::<impl num_traits::cast::FromPrimitive for f128_internal::f128_t::f128>::from_u128
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$9from_u12817hd9c070e72081bc8cE"(%"core::option::Option<f128_t::f128>"* sret(%"core::option::Option<f128_t::f128>") %0, i128 %n) unnamed_addr #1 !dbg !3555 {
start:
  %1 = alloca { i64, i64 }, align 8
  %n.dbg.spill = alloca i128, align 8
  %_3 = alloca %"ffi::Wrapper", align 1
  %_2 = alloca %"f128_t::f128", align 1
  store i128 %n, i128* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i128* %n.dbg.spill, metadata !3559, metadata !DIExpression()), !dbg !3560
  %2 = bitcast %"ffi::Wrapper"* %_3 to i128*, !dbg !3561
  store i128 %n, i128* %2, align 1, !dbg !3561
  br label %bb1, !dbg !3561

bb1:                                              ; preds = %start
  %3 = bitcast %"ffi::Wrapper"* %_3 to { i64, i64 }*, !dbg !3562
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 1, !dbg !3562
  %5 = call { i64, i64 } @u128_to_f128({ i64, i64 } %4), !dbg !3562
  store { i64, i64 } %5, { i64, i64 }* %1, align 8, !dbg !3562
  %6 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3562
  %7 = bitcast { i64, i64 }* %1 to i8*, !dbg !3562
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 8 %7, i64 16, i1 false), !dbg !3562
  br label %bb2, !dbg !3562

bb2:                                              ; preds = %bb1
  %8 = bitcast %"core::option::Option<f128_t::f128>"* %0 to %"core::option::Option<f128_t::f128>::Some"*, !dbg !3563
  %9 = getelementptr inbounds %"core::option::Option<f128_t::f128>::Some", %"core::option::Option<f128_t::f128>::Some"* %8, i32 0, i32 1, !dbg !3563
  %10 = bitcast %"f128_t::f128"* %9 to i8*, !dbg !3563
  %11 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3563
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %11, i64 16, i1 false), !dbg !3563
  %12 = bitcast %"core::option::Option<f128_t::f128>"* %0 to i8*, !dbg !3563
  store i8 1, i8* %12, align 1, !dbg !3563
  ret void, !dbg !3564
}

; f128_internal::f128_impl::<impl num_traits::cast::FromPrimitive for f128_internal::f128_t::f128>::from_i128
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$9from_i12817haff305b21a312c8fE"(%"core::option::Option<f128_t::f128>"* sret(%"core::option::Option<f128_t::f128>") %0, i128 %n) unnamed_addr #1 !dbg !3565 {
start:
  %1 = alloca { i64, i64 }, align 8
  %n.dbg.spill = alloca i128, align 8
  %_3 = alloca %"ffi::Wrapper", align 1
  %_2 = alloca %"f128_t::f128", align 1
  store i128 %n, i128* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i128* %n.dbg.spill, metadata !3569, metadata !DIExpression()), !dbg !3570
  %2 = bitcast %"ffi::Wrapper"* %_3 to i128*, !dbg !3571
  store i128 %n, i128* %2, align 1, !dbg !3571
  br label %bb1, !dbg !3571

bb1:                                              ; preds = %start
  %3 = bitcast %"ffi::Wrapper"* %_3 to { i64, i64 }*, !dbg !3572
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 1, !dbg !3572
  %5 = call { i64, i64 } @i128_to_f128({ i64, i64 } %4), !dbg !3572
  store { i64, i64 } %5, { i64, i64 }* %1, align 8, !dbg !3572
  %6 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3572
  %7 = bitcast { i64, i64 }* %1 to i8*, !dbg !3572
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 8 %7, i64 16, i1 false), !dbg !3572
  br label %bb2, !dbg !3572

bb2:                                              ; preds = %bb1
  %8 = bitcast %"core::option::Option<f128_t::f128>"* %0 to %"core::option::Option<f128_t::f128>::Some"*, !dbg !3573
  %9 = getelementptr inbounds %"core::option::Option<f128_t::f128>::Some", %"core::option::Option<f128_t::f128>::Some"* %8, i32 0, i32 1, !dbg !3573
  %10 = bitcast %"f128_t::f128"* %9 to i8*, !dbg !3573
  %11 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3573
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %11, i64 16, i1 false), !dbg !3573
  %12 = bitcast %"core::option::Option<f128_t::f128>"* %0 to i8*, !dbg !3573
  store i8 1, i8* %12, align 1, !dbg !3573
  ret void, !dbg !3574
}

; f128_internal::f128_impl::<impl num_traits::Num for f128_internal::f128_t::f128>::from_str_radix
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl73_$LT$impl$u20$num_traits..Num$u20$for$u20$f128_internal..f128_t..f128$GT$14from_str_radix17ha6dc7b930115e4feE"(%"core::result::Result<f128_t::f128, ()>"* sret(%"core::result::Result<f128_t::f128, ()>") %0, [0 x i8]* align 1 %_s.0, i64 %_s.1, i32 %_radix) unnamed_addr #1 !dbg !3575 {
start:
  %_radix.dbg.spill = alloca i32, align 4
  %_s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %_s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_s.dbg.spill, i32 0, i32 1
  store i64 %_s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %_s.dbg.spill, metadata !3595, metadata !DIExpression()), !dbg !3597
  store i32 %_radix, i32* %_radix.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %_radix.dbg.spill, metadata !3596, metadata !DIExpression()), !dbg !3598
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [15 x i8] }>* @alloc1182 to [0 x i8]*), i64 15, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1184 to %"core::panic::location::Location"*)) #12, !dbg !3599
  unreachable, !dbg !3599
}

; f128_internal::f128_impl::<impl num_traits::float::FloatConst for f128_internal::f128_t::f128>::E
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$1E17ha8ea8ebb48591d3eE"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3600 {
start:
  %_1 = alloca [16 x i8], align 1
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 0, !dbg !3602
  store i8 122, i8* %1, align 1, !dbg !3602
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 1, !dbg !3602
  store i8 78, i8* %2, align 1, !dbg !3602
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 2, !dbg !3602
  store i8 64, i8* %3, align 1, !dbg !3602
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 3, !dbg !3602
  store i8 -84, i8* %4, align 1, !dbg !3602
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 4, !dbg !3602
  store i8 -72, i8* %5, align 1, !dbg !3602
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 5, !dbg !3602
  store i8 95, i8* %6, align 1, !dbg !3602
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 6, !dbg !3602
  store i8 53, i8* %7, align 1, !dbg !3602
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 7, !dbg !3602
  store i8 -107, i8* %8, align 1, !dbg !3602
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 8, !dbg !3602
  store i8 118, i8* %9, align 1, !dbg !3602
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 9, !dbg !3602
  store i8 69, i8* %10, align 1, !dbg !3602
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 10, !dbg !3602
  store i8 -79, i8* %11, align 1, !dbg !3602
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 11, !dbg !3602
  store i8 -88, i8* %12, align 1, !dbg !3602
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 12, !dbg !3602
  store i8 -16, i8* %13, align 1, !dbg !3602
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 13, !dbg !3602
  store i8 91, i8* %14, align 1, !dbg !3602
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 14, !dbg !3602
  store i8 0, i8* %15, align 1, !dbg !3602
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 15, !dbg !3602
  store i8 64, i8* %16, align 1, !dbg !3602
  %17 = bitcast %"f128_t::f128"* %0 to [16 x i8]*, !dbg !3603
  %18 = bitcast [16 x i8]* %17 to i8*, !dbg !3603
  %19 = bitcast [16 x i8]* %_1 to i8*, !dbg !3603
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 16, i1 false), !dbg !3603
  ret void, !dbg !3604
}

; f128_internal::f128_impl::<impl num_traits::float::FloatConst for f128_internal::f128_t::f128>::FRAC_1_PI
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$9FRAC_1_PI17h61710fd7fdbe3a74E"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3605 {
start:
  %_1 = alloca [16 x i8], align 1
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 0, !dbg !3606
  store i8 106, i8* %1, align 1, !dbg !3606
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 1, !dbg !3606
  store i8 -22, i8* %2, align 1, !dbg !3606
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 2, !dbg !3606
  store i8 -93, i8* %3, align 1, !dbg !3606
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 3, !dbg !3606
  store i8 -81, i8* %4, align 1, !dbg !3606
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 4, !dbg !3606
  store i8 78, i8* %5, align 1, !dbg !3606
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 5, !dbg !3606
  store i8 -8, i8* %6, align 1, !dbg !3606
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 6, !dbg !3606
  store i8 83, i8* %7, align 1, !dbg !3606
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 7, !dbg !3606
  store i8 42, i8* %8, align 1, !dbg !3606
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 8, !dbg !3606
  store i8 -120, i8* %9, align 1, !dbg !3606
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 9, !dbg !3606
  store i8 -100, i8* %10, align 1, !dbg !3606
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 10, !dbg !3606
  store i8 -36, i8* %11, align 1, !dbg !3606
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 11, !dbg !3606
  store i8 6, i8* %12, align 1, !dbg !3606
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 12, !dbg !3606
  store i8 -13, i8* %13, align 1, !dbg !3606
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 13, !dbg !3606
  store i8 69, i8* %14, align 1, !dbg !3606
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 14, !dbg !3606
  store i8 -3, i8* %15, align 1, !dbg !3606
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 15, !dbg !3606
  store i8 63, i8* %16, align 1, !dbg !3606
  %17 = bitcast %"f128_t::f128"* %0 to [16 x i8]*, !dbg !3607
  %18 = bitcast [16 x i8]* %17 to i8*, !dbg !3607
  %19 = bitcast [16 x i8]* %_1 to i8*, !dbg !3607
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 16, i1 false), !dbg !3607
  ret void, !dbg !3608
}

; f128_internal::f128_impl::<impl num_traits::float::FloatConst for f128_internal::f128_t::f128>::FRAC_1_SQRT_2
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$13FRAC_1_SQRT_217hd2280f09f5a10864E"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3609 {
start:
  %_1 = alloca [16 x i8], align 1
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 0, !dbg !3610
  store i8 -107, i8* %1, align 1, !dbg !3610
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 1, !dbg !3610
  store i8 -22, i8* %2, align 1, !dbg !3610
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 2, !dbg !3610
  store i8 102, i8* %3, align 1, !dbg !3610
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 3, !dbg !3610
  store i8 19, i8* %4, align 1, !dbg !3610
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 4, !dbg !3610
  store i8 -5, i8* %5, align 1, !dbg !3610
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 5, !dbg !3610
  store i8 -78, i8* %6, align 1, !dbg !3610
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 6, !dbg !3610
  store i8 8, i8* %7, align 1, !dbg !3610
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 7, !dbg !3610
  store i8 -55, i8* %8, align 1, !dbg !3610
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 8, !dbg !3610
  store i8 -68, i8* %9, align 1, !dbg !3610
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 9, !dbg !3610
  store i8 -13, i8* %10, align 1, !dbg !3610
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 10, !dbg !3610
  store i8 103, i8* %11, align 1, !dbg !3610
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 11, !dbg !3610
  store i8 -26, i8* %12, align 1, !dbg !3610
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 12, !dbg !3610
  store i8 9, i8* %13, align 1, !dbg !3610
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 13, !dbg !3610
  store i8 106, i8* %14, align 1, !dbg !3610
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 14, !dbg !3610
  store i8 -2, i8* %15, align 1, !dbg !3610
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 15, !dbg !3610
  store i8 63, i8* %16, align 1, !dbg !3610
  %17 = bitcast %"f128_t::f128"* %0 to [16 x i8]*, !dbg !3611
  %18 = bitcast [16 x i8]* %17 to i8*, !dbg !3611
  %19 = bitcast [16 x i8]* %_1 to i8*, !dbg !3611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 16, i1 false), !dbg !3611
  ret void, !dbg !3612
}

; f128_internal::f128_impl::<impl num_traits::float::FloatConst for f128_internal::f128_t::f128>::FRAC_2_PI
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$9FRAC_2_PI17ha1fa2dfe04a89d23E"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3613 {
start:
  %_1 = alloca [16 x i8], align 1
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 0, !dbg !3614
  store i8 106, i8* %1, align 1, !dbg !3614
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 1, !dbg !3614
  store i8 -22, i8* %2, align 1, !dbg !3614
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 2, !dbg !3614
  store i8 -93, i8* %3, align 1, !dbg !3614
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 3, !dbg !3614
  store i8 -81, i8* %4, align 1, !dbg !3614
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 4, !dbg !3614
  store i8 78, i8* %5, align 1, !dbg !3614
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 5, !dbg !3614
  store i8 -8, i8* %6, align 1, !dbg !3614
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 6, !dbg !3614
  store i8 83, i8* %7, align 1, !dbg !3614
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 7, !dbg !3614
  store i8 42, i8* %8, align 1, !dbg !3614
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 8, !dbg !3614
  store i8 -120, i8* %9, align 1, !dbg !3614
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 9, !dbg !3614
  store i8 -100, i8* %10, align 1, !dbg !3614
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 10, !dbg !3614
  store i8 -36, i8* %11, align 1, !dbg !3614
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 11, !dbg !3614
  store i8 6, i8* %12, align 1, !dbg !3614
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 12, !dbg !3614
  store i8 -13, i8* %13, align 1, !dbg !3614
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 13, !dbg !3614
  store i8 69, i8* %14, align 1, !dbg !3614
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 14, !dbg !3614
  store i8 -2, i8* %15, align 1, !dbg !3614
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 15, !dbg !3614
  store i8 63, i8* %16, align 1, !dbg !3614
  %17 = bitcast %"f128_t::f128"* %0 to [16 x i8]*, !dbg !3615
  %18 = bitcast [16 x i8]* %17 to i8*, !dbg !3615
  %19 = bitcast [16 x i8]* %_1 to i8*, !dbg !3615
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 16, i1 false), !dbg !3615
  ret void, !dbg !3616
}

; f128_internal::f128_impl::<impl num_traits::float::FloatConst for f128_internal::f128_t::f128>::FRAC_2_SQRT_PI
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$14FRAC_2_SQRT_PI17h4cbb21ceb255ba1eE"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3617 {
start:
  %_1 = alloca [16 x i8], align 1
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 0, !dbg !3618
  store i8 -2, i8* %1, align 1, !dbg !3618
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 1, !dbg !3618
  store i8 -41, i8* %2, align 1, !dbg !3618
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 2, !dbg !3618
  store i8 -2, i8* %3, align 1, !dbg !3618
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 3, !dbg !3618
  store i8 20, i8* %4, align 1, !dbg !3618
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 4, !dbg !3618
  store i8 -87, i8* %5, align 1, !dbg !3618
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 5, !dbg !3618
  store i8 -29, i8* %6, align 1, !dbg !3618
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 6, !dbg !3618
  store i8 26, i8* %7, align 1, !dbg !3618
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 7, !dbg !3618
  store i8 -47, i8* %8, align 1, !dbg !3618
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 8, !dbg !3618
  store i8 -74, i8* %9, align 1, !dbg !3618
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 9, !dbg !3618
  store i8 41, i8* %10, align 1, !dbg !3618
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 10, !dbg !3618
  store i8 4, i8* %11, align 1, !dbg !3618
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 11, !dbg !3618
  store i8 117, i8* %12, align 1, !dbg !3618
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 12, !dbg !3618
  store i8 -35, i8* %13, align 1, !dbg !3618
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 13, !dbg !3618
  store i8 32, i8* %14, align 1, !dbg !3618
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 14, !dbg !3618
  store i8 -1, i8* %15, align 1, !dbg !3618
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 15, !dbg !3618
  store i8 63, i8* %16, align 1, !dbg !3618
  %17 = bitcast %"f128_t::f128"* %0 to [16 x i8]*, !dbg !3619
  %18 = bitcast [16 x i8]* %17 to i8*, !dbg !3619
  %19 = bitcast [16 x i8]* %_1 to i8*, !dbg !3619
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 16, i1 false), !dbg !3619
  ret void, !dbg !3620
}

; f128_internal::f128_impl::<impl num_traits::float::FloatConst for f128_internal::f128_t::f128>::FRAC_PI_2
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$9FRAC_PI_217hdb28c3241ffbcfb6E"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3621 {
start:
  %_1 = alloca [16 x i8], align 1
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 0, !dbg !3622
  store i8 -72, i8* %1, align 1, !dbg !3622
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 1, !dbg !3622
  store i8 1, i8* %2, align 1, !dbg !3622
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 2, !dbg !3622
  store i8 23, i8* %3, align 1, !dbg !3622
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 3, !dbg !3622
  store i8 -59, i8* %4, align 1, !dbg !3622
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 4, !dbg !3622
  store i8 -116, i8* %5, align 1, !dbg !3622
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 5, !dbg !3622
  store i8 -119, i8* %6, align 1, !dbg !3622
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 6, !dbg !3622
  store i8 105, i8* %7, align 1, !dbg !3622
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 7, !dbg !3622
  store i8 -124, i8* %8, align 1, !dbg !3622
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 8, !dbg !3622
  store i8 -47, i8* %9, align 1, !dbg !3622
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 9, !dbg !3622
  store i8 66, i8* %10, align 1, !dbg !3622
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 10, !dbg !3622
  store i8 68, i8* %11, align 1, !dbg !3622
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 11, !dbg !3622
  store i8 -75, i8* %12, align 1, !dbg !3622
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 12, !dbg !3622
  store i8 31, i8* %13, align 1, !dbg !3622
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 13, !dbg !3622
  store i8 -110, i8* %14, align 1, !dbg !3622
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 14, !dbg !3622
  store i8 -1, i8* %15, align 1, !dbg !3622
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 15, !dbg !3622
  store i8 63, i8* %16, align 1, !dbg !3622
  %17 = bitcast %"f128_t::f128"* %0 to [16 x i8]*, !dbg !3623
  %18 = bitcast [16 x i8]* %17 to i8*, !dbg !3623
  %19 = bitcast [16 x i8]* %_1 to i8*, !dbg !3623
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 16, i1 false), !dbg !3623
  ret void, !dbg !3624
}

; f128_internal::f128_impl::<impl num_traits::float::FloatConst for f128_internal::f128_t::f128>::FRAC_PI_3
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$9FRAC_PI_317hb0f3959f681b2d92E"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3625 {
start:
  %_1 = alloca [16 x i8], align 1
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 0, !dbg !3626
  store i8 123, i8* %1, align 1, !dbg !3626
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 1, !dbg !3626
  store i8 86, i8* %2, align 1, !dbg !3626
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 2, !dbg !3626
  store i8 15, i8* %3, align 1, !dbg !3626
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 3, !dbg !3626
  store i8 46, i8* %4, align 1, !dbg !3626
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 4, !dbg !3626
  store i8 -77, i8* %5, align 1, !dbg !3626
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 5, !dbg !3626
  store i8 91, i8* %6, align 1, !dbg !3626
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 6, !dbg !3626
  store i8 70, i8* %7, align 1, !dbg !3626
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 7, !dbg !3626
  store i8 88, i8* %8, align 1, !dbg !3626
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 8, !dbg !3626
  store i8 54, i8* %9, align 1, !dbg !3626
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 9, !dbg !3626
  store i8 -41, i8* %10, align 1, !dbg !3626
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 10, !dbg !3626
  store i8 -126, i8* %11, align 1, !dbg !3626
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 11, !dbg !3626
  store i8 35, i8* %12, align 1, !dbg !3626
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 12, !dbg !3626
  store i8 21, i8* %13, align 1, !dbg !3626
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 13, !dbg !3626
  store i8 12, i8* %14, align 1, !dbg !3626
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 14, !dbg !3626
  store i8 -1, i8* %15, align 1, !dbg !3626
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 15, !dbg !3626
  store i8 63, i8* %16, align 1, !dbg !3626
  %17 = bitcast %"f128_t::f128"* %0 to [16 x i8]*, !dbg !3627
  %18 = bitcast [16 x i8]* %17 to i8*, !dbg !3627
  %19 = bitcast [16 x i8]* %_1 to i8*, !dbg !3627
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 16, i1 false), !dbg !3627
  ret void, !dbg !3628
}

; f128_internal::f128_impl::<impl num_traits::float::FloatConst for f128_internal::f128_t::f128>::FRAC_PI_4
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$9FRAC_PI_417h36e94dbb41f88258E"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3629 {
start:
  %_1 = alloca [16 x i8], align 1
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 0, !dbg !3630
  store i8 -72, i8* %1, align 1, !dbg !3630
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 1, !dbg !3630
  store i8 1, i8* %2, align 1, !dbg !3630
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 2, !dbg !3630
  store i8 23, i8* %3, align 1, !dbg !3630
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 3, !dbg !3630
  store i8 -59, i8* %4, align 1, !dbg !3630
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 4, !dbg !3630
  store i8 -116, i8* %5, align 1, !dbg !3630
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 5, !dbg !3630
  store i8 -119, i8* %6, align 1, !dbg !3630
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 6, !dbg !3630
  store i8 105, i8* %7, align 1, !dbg !3630
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 7, !dbg !3630
  store i8 -124, i8* %8, align 1, !dbg !3630
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 8, !dbg !3630
  store i8 -47, i8* %9, align 1, !dbg !3630
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 9, !dbg !3630
  store i8 66, i8* %10, align 1, !dbg !3630
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 10, !dbg !3630
  store i8 68, i8* %11, align 1, !dbg !3630
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 11, !dbg !3630
  store i8 -75, i8* %12, align 1, !dbg !3630
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 12, !dbg !3630
  store i8 31, i8* %13, align 1, !dbg !3630
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 13, !dbg !3630
  store i8 -110, i8* %14, align 1, !dbg !3630
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 14, !dbg !3630
  store i8 -2, i8* %15, align 1, !dbg !3630
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 15, !dbg !3630
  store i8 63, i8* %16, align 1, !dbg !3630
  %17 = bitcast %"f128_t::f128"* %0 to [16 x i8]*, !dbg !3631
  %18 = bitcast [16 x i8]* %17 to i8*, !dbg !3631
  %19 = bitcast [16 x i8]* %_1 to i8*, !dbg !3631
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 16, i1 false), !dbg !3631
  ret void, !dbg !3632
}

; f128_internal::f128_impl::<impl num_traits::float::FloatConst for f128_internal::f128_t::f128>::FRAC_PI_6
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$9FRAC_PI_617h356050d9d0a12813E"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3633 {
start:
  %_1 = alloca [16 x i8], align 1
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 0, !dbg !3634
  store i8 123, i8* %1, align 1, !dbg !3634
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 1, !dbg !3634
  store i8 86, i8* %2, align 1, !dbg !3634
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 2, !dbg !3634
  store i8 15, i8* %3, align 1, !dbg !3634
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 3, !dbg !3634
  store i8 46, i8* %4, align 1, !dbg !3634
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 4, !dbg !3634
  store i8 -77, i8* %5, align 1, !dbg !3634
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 5, !dbg !3634
  store i8 91, i8* %6, align 1, !dbg !3634
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 6, !dbg !3634
  store i8 70, i8* %7, align 1, !dbg !3634
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 7, !dbg !3634
  store i8 88, i8* %8, align 1, !dbg !3634
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 8, !dbg !3634
  store i8 54, i8* %9, align 1, !dbg !3634
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 9, !dbg !3634
  store i8 -41, i8* %10, align 1, !dbg !3634
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 10, !dbg !3634
  store i8 -126, i8* %11, align 1, !dbg !3634
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 11, !dbg !3634
  store i8 35, i8* %12, align 1, !dbg !3634
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 12, !dbg !3634
  store i8 21, i8* %13, align 1, !dbg !3634
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 13, !dbg !3634
  store i8 12, i8* %14, align 1, !dbg !3634
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 14, !dbg !3634
  store i8 -2, i8* %15, align 1, !dbg !3634
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 15, !dbg !3634
  store i8 63, i8* %16, align 1, !dbg !3634
  %17 = bitcast %"f128_t::f128"* %0 to [16 x i8]*, !dbg !3635
  %18 = bitcast [16 x i8]* %17 to i8*, !dbg !3635
  %19 = bitcast [16 x i8]* %_1 to i8*, !dbg !3635
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 16, i1 false), !dbg !3635
  ret void, !dbg !3636
}

; f128_internal::f128_impl::<impl num_traits::float::FloatConst for f128_internal::f128_t::f128>::FRAC_PI_8
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$9FRAC_PI_817h8ef52dc9f4935a3fE"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3637 {
start:
  %_1 = alloca [16 x i8], align 1
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 0, !dbg !3638
  store i8 -72, i8* %1, align 1, !dbg !3638
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 1, !dbg !3638
  store i8 1, i8* %2, align 1, !dbg !3638
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 2, !dbg !3638
  store i8 23, i8* %3, align 1, !dbg !3638
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 3, !dbg !3638
  store i8 -59, i8* %4, align 1, !dbg !3638
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 4, !dbg !3638
  store i8 -116, i8* %5, align 1, !dbg !3638
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 5, !dbg !3638
  store i8 -119, i8* %6, align 1, !dbg !3638
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 6, !dbg !3638
  store i8 105, i8* %7, align 1, !dbg !3638
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 7, !dbg !3638
  store i8 -124, i8* %8, align 1, !dbg !3638
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 8, !dbg !3638
  store i8 -47, i8* %9, align 1, !dbg !3638
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 9, !dbg !3638
  store i8 66, i8* %10, align 1, !dbg !3638
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 10, !dbg !3638
  store i8 68, i8* %11, align 1, !dbg !3638
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 11, !dbg !3638
  store i8 -75, i8* %12, align 1, !dbg !3638
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 12, !dbg !3638
  store i8 31, i8* %13, align 1, !dbg !3638
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 13, !dbg !3638
  store i8 -110, i8* %14, align 1, !dbg !3638
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 14, !dbg !3638
  store i8 -3, i8* %15, align 1, !dbg !3638
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 15, !dbg !3638
  store i8 63, i8* %16, align 1, !dbg !3638
  %17 = bitcast %"f128_t::f128"* %0 to [16 x i8]*, !dbg !3639
  %18 = bitcast [16 x i8]* %17 to i8*, !dbg !3639
  %19 = bitcast [16 x i8]* %_1 to i8*, !dbg !3639
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 16, i1 false), !dbg !3639
  ret void, !dbg !3640
}

; f128_internal::f128_impl::<impl num_traits::float::FloatConst for f128_internal::f128_t::f128>::LN_10
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$5LN_1017h0d0271e64249a955E"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3641 {
start:
  %_1 = alloca [16 x i8], align 1
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 0, !dbg !3642
  store i8 -90, i8* %1, align 1, !dbg !3642
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 1, !dbg !3642
  store i8 5, i8* %2, align 1, !dbg !3642
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 2, !dbg !3642
  store i8 87, i8* %3, align 1, !dbg !3642
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 3, !dbg !3642
  store i8 -84, i8* %4, align 1, !dbg !3642
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 4, !dbg !3642
  store i8 -83, i8* %5, align 1, !dbg !3642
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 5, !dbg !3642
  store i8 -44, i8* %6, align 1, !dbg !3642
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 6, !dbg !3642
  store i8 45, i8* %7, align 1, !dbg !3642
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 7, !dbg !3642
  store i8 88, i8* %8, align 1, !dbg !3642
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 8, !dbg !3642
  store i8 81, i8* %9, align 1, !dbg !3642
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 9, !dbg !3642
  store i8 85, i8* %10, align 1, !dbg !3642
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 10, !dbg !3642
  store i8 -69, i8* %11, align 1, !dbg !3642
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 11, !dbg !3642
  store i8 27, i8* %12, align 1, !dbg !3642
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 12, !dbg !3642
  store i8 -69, i8* %13, align 1, !dbg !3642
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 13, !dbg !3642
  store i8 38, i8* %14, align 1, !dbg !3642
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 14, !dbg !3642
  store i8 0, i8* %15, align 1, !dbg !3642
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 15, !dbg !3642
  store i8 64, i8* %16, align 1, !dbg !3642
  %17 = bitcast %"f128_t::f128"* %0 to [16 x i8]*, !dbg !3643
  %18 = bitcast [16 x i8]* %17 to i8*, !dbg !3643
  %19 = bitcast [16 x i8]* %_1 to i8*, !dbg !3643
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 16, i1 false), !dbg !3643
  ret void, !dbg !3644
}

; f128_internal::f128_impl::<impl num_traits::float::FloatConst for f128_internal::f128_t::f128>::LN_2
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$4LN_217h8c17141f17d1579eE"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3645 {
start:
  %_1 = alloca [16 x i8], align 1
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 0, !dbg !3646
  store i8 -26, i8* %1, align 1, !dbg !3646
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 1, !dbg !3646
  store i8 7, i8* %2, align 1, !dbg !3646
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 2, !dbg !3646
  store i8 48, i8* %3, align 1, !dbg !3646
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 3, !dbg !3646
  store i8 103, i8* %4, align 1, !dbg !3646
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 4, !dbg !3646
  store i8 -57, i8* %5, align 1, !dbg !3646
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 5, !dbg !3646
  store i8 -109, i8* %6, align 1, !dbg !3646
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 6, !dbg !3646
  store i8 87, i8* %7, align 1, !dbg !3646
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 7, !dbg !3646
  store i8 -13, i8* %8, align 1, !dbg !3646
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 8, !dbg !3646
  store i8 -98, i8* %9, align 1, !dbg !3646
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 9, !dbg !3646
  store i8 -93, i8* %10, align 1, !dbg !3646
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 10, !dbg !3646
  store i8 -17, i8* %11, align 1, !dbg !3646
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 11, !dbg !3646
  store i8 47, i8* %12, align 1, !dbg !3646
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 12, !dbg !3646
  store i8 -28, i8* %13, align 1, !dbg !3646
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 13, !dbg !3646
  store i8 98, i8* %14, align 1, !dbg !3646
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 14, !dbg !3646
  store i8 -2, i8* %15, align 1, !dbg !3646
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 15, !dbg !3646
  store i8 63, i8* %16, align 1, !dbg !3646
  %17 = bitcast %"f128_t::f128"* %0 to [16 x i8]*, !dbg !3647
  %18 = bitcast [16 x i8]* %17 to i8*, !dbg !3647
  %19 = bitcast [16 x i8]* %_1 to i8*, !dbg !3647
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 16, i1 false), !dbg !3647
  ret void, !dbg !3648
}

; f128_internal::f128_impl::<impl num_traits::float::FloatConst for f128_internal::f128_t::f128>::LOG10_E
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$7LOG10_E17h20616c6ca03dac2aE"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3649 {
start:
  %_1 = alloca [16 x i8], align 1
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 0, !dbg !3650
  store i8 103, i8* %1, align 1, !dbg !3650
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 1, !dbg !3650
  store i8 90, i8* %2, align 1, !dbg !3650
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 2, !dbg !3650
  store i8 95, i8* %3, align 1, !dbg !3650
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 3, !dbg !3650
  store i8 85, i8* %4, align 1, !dbg !3650
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 4, !dbg !3650
  store i8 -73, i8* %5, align 1, !dbg !3650
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 5, !dbg !3650
  store i8 106, i8* %6, align 1, !dbg !3650
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 6, !dbg !3650
  store i8 42, i8* %7, align 1, !dbg !3650
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 7, !dbg !3650
  store i8 -29, i8* %8, align 1, !dbg !3650
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 8, !dbg !3650
  store i8 80, i8* %9, align 1, !dbg !3650
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 9, !dbg !3650
  store i8 110, i8* %10, align 1, !dbg !3650
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 10, !dbg !3650
  store i8 82, i8* %11, align 1, !dbg !3650
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 11, !dbg !3650
  store i8 -79, i8* %12, align 1, !dbg !3650
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 12, !dbg !3650
  store i8 -73, i8* %13, align 1, !dbg !3650
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 13, !dbg !3650
  store i8 -68, i8* %14, align 1, !dbg !3650
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 14, !dbg !3650
  store i8 -3, i8* %15, align 1, !dbg !3650
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 15, !dbg !3650
  store i8 63, i8* %16, align 1, !dbg !3650
  %17 = bitcast %"f128_t::f128"* %0 to [16 x i8]*, !dbg !3651
  %18 = bitcast [16 x i8]* %17 to i8*, !dbg !3651
  %19 = bitcast [16 x i8]* %_1 to i8*, !dbg !3651
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 16, i1 false), !dbg !3651
  ret void, !dbg !3652
}

; f128_internal::f128_impl::<impl num_traits::float::FloatConst for f128_internal::f128_t::f128>::LOG2_E
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$6LOG2_E17h75e19559e7d45773E"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3653 {
start:
  %_1 = alloca [16 x i8], align 1
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 0, !dbg !3654
  store i8 58, i8* %1, align 1, !dbg !3654
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 1, !dbg !3654
  store i8 -46, i8* %2, align 1, !dbg !3654
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 2, !dbg !3654
  store i8 -96, i8* %3, align 1, !dbg !3654
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 3, !dbg !3654
  store i8 -3, i8* %4, align 1, !dbg !3654
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 4, !dbg !3654
  store i8 15, i8* %5, align 1, !dbg !3654
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 5, !dbg !3654
  store i8 125, i8* %6, align 1, !dbg !3654
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 6, !dbg !3654
  store i8 119, i8* %7, align 1, !dbg !3654
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 7, !dbg !3654
  store i8 -31, i8* %8, align 1, !dbg !3654
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 8, !dbg !3654
  store i8 47, i8* %9, align 1, !dbg !3654
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 9, !dbg !3654
  store i8 -72, i8* %10, align 1, !dbg !3654
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 10, !dbg !3654
  store i8 82, i8* %11, align 1, !dbg !3654
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 11, !dbg !3654
  store i8 118, i8* %12, align 1, !dbg !3654
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 12, !dbg !3654
  store i8 84, i8* %13, align 1, !dbg !3654
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 13, !dbg !3654
  store i8 113, i8* %14, align 1, !dbg !3654
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 14, !dbg !3654
  store i8 -1, i8* %15, align 1, !dbg !3654
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 15, !dbg !3654
  store i8 63, i8* %16, align 1, !dbg !3654
  %17 = bitcast %"f128_t::f128"* %0 to [16 x i8]*, !dbg !3655
  %18 = bitcast [16 x i8]* %17 to i8*, !dbg !3655
  %19 = bitcast [16 x i8]* %_1 to i8*, !dbg !3655
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 16, i1 false), !dbg !3655
  ret void, !dbg !3656
}

; f128_internal::f128_impl::<impl num_traits::float::FloatConst for f128_internal::f128_t::f128>::PI
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$2PI17he649ebbf1e5b1378E"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3657 {
start:
  %_1 = alloca [16 x i8], align 1
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 0, !dbg !3658
  store i8 -72, i8* %1, align 1, !dbg !3658
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 1, !dbg !3658
  store i8 1, i8* %2, align 1, !dbg !3658
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 2, !dbg !3658
  store i8 23, i8* %3, align 1, !dbg !3658
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 3, !dbg !3658
  store i8 -59, i8* %4, align 1, !dbg !3658
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 4, !dbg !3658
  store i8 -116, i8* %5, align 1, !dbg !3658
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 5, !dbg !3658
  store i8 -119, i8* %6, align 1, !dbg !3658
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 6, !dbg !3658
  store i8 105, i8* %7, align 1, !dbg !3658
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 7, !dbg !3658
  store i8 -124, i8* %8, align 1, !dbg !3658
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 8, !dbg !3658
  store i8 -47, i8* %9, align 1, !dbg !3658
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 9, !dbg !3658
  store i8 66, i8* %10, align 1, !dbg !3658
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 10, !dbg !3658
  store i8 68, i8* %11, align 1, !dbg !3658
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 11, !dbg !3658
  store i8 -75, i8* %12, align 1, !dbg !3658
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 12, !dbg !3658
  store i8 31, i8* %13, align 1, !dbg !3658
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 13, !dbg !3658
  store i8 -110, i8* %14, align 1, !dbg !3658
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 14, !dbg !3658
  store i8 0, i8* %15, align 1, !dbg !3658
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 15, !dbg !3658
  store i8 64, i8* %16, align 1, !dbg !3658
  %17 = bitcast %"f128_t::f128"* %0 to [16 x i8]*, !dbg !3659
  %18 = bitcast [16 x i8]* %17 to i8*, !dbg !3659
  %19 = bitcast [16 x i8]* %_1 to i8*, !dbg !3659
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 16, i1 false), !dbg !3659
  ret void, !dbg !3660
}

; f128_internal::f128_impl::<impl num_traits::float::FloatConst for f128_internal::f128_t::f128>::SQRT_2
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$6SQRT_217hccf676fe74174e54E"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3661 {
start:
  %_1 = alloca [16 x i8], align 1
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 0, !dbg !3662
  store i8 -106, i8* %1, align 1, !dbg !3662
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 1, !dbg !3662
  store i8 -22, i8* %2, align 1, !dbg !3662
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 2, !dbg !3662
  store i8 102, i8* %3, align 1, !dbg !3662
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 3, !dbg !3662
  store i8 19, i8* %4, align 1, !dbg !3662
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 4, !dbg !3662
  store i8 -5, i8* %5, align 1, !dbg !3662
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 5, !dbg !3662
  store i8 -78, i8* %6, align 1, !dbg !3662
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 6, !dbg !3662
  store i8 8, i8* %7, align 1, !dbg !3662
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 7, !dbg !3662
  store i8 -55, i8* %8, align 1, !dbg !3662
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 8, !dbg !3662
  store i8 -68, i8* %9, align 1, !dbg !3662
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 9, !dbg !3662
  store i8 -13, i8* %10, align 1, !dbg !3662
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 10, !dbg !3662
  store i8 103, i8* %11, align 1, !dbg !3662
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 11, !dbg !3662
  store i8 -26, i8* %12, align 1, !dbg !3662
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 12, !dbg !3662
  store i8 9, i8* %13, align 1, !dbg !3662
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 13, !dbg !3662
  store i8 106, i8* %14, align 1, !dbg !3662
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 14, !dbg !3662
  store i8 -1, i8* %15, align 1, !dbg !3662
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %_1, i64 0, i64 15, !dbg !3662
  store i8 63, i8* %16, align 1, !dbg !3662
  %17 = bitcast %"f128_t::f128"* %0 to [16 x i8]*, !dbg !3663
  %18 = bitcast [16 x i8]* %17 to i8*, !dbg !3663
  %19 = bitcast [16 x i8]* %_1 to i8*, !dbg !3663
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 16, i1 false), !dbg !3663
  ret void, !dbg !3664
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::nan
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3nan17h7841df5582b757caE"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3665 {
start:
  %1 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3667
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @alloc901, i32 0, i32 0, i32 0), i64 16, i1 false), !dbg !3667
  ret void, !dbg !3668
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::infinity
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$8infinity17h143bfcb3f4ba3027E"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3669 {
start:
  %1 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3670
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @alloc867, i32 0, i32 0, i32 0), i64 16, i1 false), !dbg !3670
  ret void, !dbg !3671
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::neg_infinity
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$12neg_infinity17hd9e5733ed9f34120E"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3672 {
start:
  %1 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3673
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @1, i32 0, i32 0, i32 0), i64 16, i1 false), !dbg !3673
  ret void, !dbg !3674
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::neg_zero
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$8neg_zero17h5e955291bfd24d5eE"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3675 {
start:
  %1 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3676
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @alloc912, i32 0, i32 0, i32 0), i64 16, i1 false), !dbg !3676
  ret void, !dbg !3677
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::min_value
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$9min_value17h814a33de68f9c568E"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3678 {
start:
  %1 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3679
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @2, i32 0, i32 0, i32 0), i64 16, i1 false), !dbg !3679
  ret void, !dbg !3680
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::max_value
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$9max_value17hfce5978f0cdaa722E"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3681 {
start:
  %1 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3682
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @3, i32 0, i32 0, i32 0), i64 16, i1 false), !dbg !3682
  ret void, !dbg !3683
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::min_positive_value
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$18min_positive_value17hebae1d7504a8d679E"(%"f128_t::f128"* sret(%"f128_t::f128") %0) unnamed_addr #1 !dbg !3684 {
start:
  %1 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3685
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @4, i32 0, i32 0, i32 0), i64 16, i1 false), !dbg !3685
  ret void, !dbg !3686
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::is_finite
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$9is_finite17h514ec869881acaceE"(%"f128_t::f128"* %self) unnamed_addr #1 !dbg !3687 {
start:
  %_7 = alloca %"f128_t::f128", align 1
  %_4 = alloca %"f128_t::f128", align 1
  %0 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3691, metadata !DIExpression()), !dbg !3692
  %1 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !3693
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3693
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !3693
; call f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::is_infinite
  %_3 = call zeroext i1 @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$11is_infinite17hc1d32e8901a0755fE"(%"f128_t::f128"* %_4), !dbg !3693
  br label %bb4, !dbg !3693

bb4:                                              ; preds = %start
  %_2 = xor i1 %_3, true, !dbg !3694
  br i1 %_2, label %bb2, label %bb1, !dbg !3694

bb1:                                              ; preds = %bb4
  store i8 0, i8* %0, align 1, !dbg !3694
  br label %bb3, !dbg !3694

bb2:                                              ; preds = %bb4
  %3 = bitcast %"f128_t::f128"* %_7 to i8*, !dbg !3695
  %4 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3695
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !3695
; call f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::is_nan
  %_6 = call zeroext i1 @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$6is_nan17h9ffa941bc536160eE"(%"f128_t::f128"* %_7), !dbg !3695
  br label %bb5, !dbg !3695

bb5:                                              ; preds = %bb2
  %_5 = xor i1 %_6, true, !dbg !3696
  %5 = zext i1 %_5 to i8, !dbg !3694
  store i8 %5, i8* %0, align 1, !dbg !3694
  br label %bb3, !dbg !3694

bb3:                                              ; preds = %bb1, %bb5
  %6 = load i8, i8* %0, align 1, !dbg !3697, !range !685, !noundef !26
  %7 = trunc i8 %6 to i1, !dbg !3697
  ret i1 %7, !dbg !3697
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::is_infinite
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$11is_infinite17hc1d32e8901a0755fE"(%"f128_t::f128"* %self) unnamed_addr #1 !dbg !3698 {
start:
  %0 = alloca i128, align 8
  %self.dbg.spill.i1 = alloca %"f128_t::f128"*, align 8
  %_2.i2 = alloca [16 x i8], align 1
  %1 = alloca i128, align 8
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %_2.i = alloca [16 x i8], align 1
  %res.dbg.spill = alloca i128, align 8, !dbg !3703
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3700, metadata !DIExpression()), !dbg !3703
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i1, metadata !3704, metadata !DIExpression()), !dbg !3710
  %2 = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !3712
  %3 = bitcast [16 x i8]* %_2.i2 to i8*, !dbg !3712
  %4 = bitcast [16 x i8]* %2 to i8*, !dbg !3712
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !3712
  %5 = bitcast i128* %0 to [16 x i8]*, !dbg !3713
  %6 = bitcast [16 x i8]* %5 to i8*, !dbg !3713
  %7 = bitcast [16 x i8]* %_2.i2 to i8*, !dbg !3713
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 16, i1 false), !dbg !3713
  %8 = load i128, i128* %0, align 8, !dbg !3713
  br label %bb1, !dbg !3714

bb1:                                              ; preds = %start
  %res = and i128 %8, 170141183460469231731687303715884105727, !dbg !3714
  store i128 %res, i128* %res.dbg.spill, align 8, !dbg !3714
  call void @llvm.dbg.declare(metadata i128* %res.dbg.spill, metadata !3701, metadata !DIExpression()), !dbg !3715
  store %"f128_t::f128"* bitcast (<{ [16 x i8] }>* @alloc867 to %"f128_t::f128"*), %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !3704, metadata !DIExpression()), !dbg !3716
  %9 = bitcast [16 x i8]* %_2.i to i8*, !dbg !3718
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @alloc867, i32 0, i32 0, i32 0), i64 16, i1 false), !dbg !3718
  %10 = bitcast i128* %1 to [16 x i8]*, !dbg !3719
  %11 = bitcast [16 x i8]* %10 to i8*, !dbg !3719
  %12 = bitcast [16 x i8]* %_2.i to i8*, !dbg !3719
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %12, i64 16, i1 false), !dbg !3719
  %13 = load i128, i128* %1, align 8, !dbg !3719
  br label %bb2, !dbg !3720

bb2:                                              ; preds = %bb1
  %14 = icmp eq i128 %res, %13, !dbg !3721
  ret i1 %14, !dbg !3722
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::is_nan
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$6is_nan17h9ffa941bc536160eE"(%"f128_t::f128"* %self) unnamed_addr #1 !dbg !3723 {
start:
  %0 = alloca i128, align 8
  %self.dbg.spill.i1 = alloca %"f128_t::f128"*, align 8
  %_2.i2 = alloca [16 x i8], align 1
  %1 = alloca i128, align 8
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %_2.i = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3725, metadata !DIExpression()), !dbg !3726
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i1, metadata !3704, metadata !DIExpression()), !dbg !3727
  %2 = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !3729
  %3 = bitcast [16 x i8]* %_2.i2 to i8*, !dbg !3729
  %4 = bitcast [16 x i8]* %2 to i8*, !dbg !3729
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !3729
  %5 = bitcast i128* %0 to [16 x i8]*, !dbg !3730
  %6 = bitcast [16 x i8]* %5 to i8*, !dbg !3730
  %7 = bitcast [16 x i8]* %_2.i2 to i8*, !dbg !3730
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 16, i1 false), !dbg !3730
  %8 = load i128, i128* %0, align 8, !dbg !3730
  br label %bb1, !dbg !3731

bb1:                                              ; preds = %start
  %_2 = and i128 %8, 170141183460469231731687303715884105727, !dbg !3732
  store %"f128_t::f128"* bitcast (<{ [16 x i8] }>* @alloc867 to %"f128_t::f128"*), %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !3704, metadata !DIExpression()), !dbg !3733
  %9 = bitcast [16 x i8]* %_2.i to i8*, !dbg !3735
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @alloc867, i32 0, i32 0, i32 0), i64 16, i1 false), !dbg !3735
  %10 = bitcast i128* %1 to [16 x i8]*, !dbg !3736
  %11 = bitcast [16 x i8]* %10 to i8*, !dbg !3736
  %12 = bitcast [16 x i8]* %_2.i to i8*, !dbg !3736
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %12, i64 16, i1 false), !dbg !3736
  %13 = load i128, i128* %1, align 8, !dbg !3736
  br label %bb2, !dbg !3737

bb2:                                              ; preds = %bb1
  %14 = icmp ugt i128 %_2, %13, !dbg !3732
  ret i1 %14, !dbg !3738
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::is_normal
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$9is_normal17h057f4785ab1edaefE"(%"f128_t::f128"* %self) unnamed_addr #1 !dbg !3739 {
start:
  %0 = alloca i128, align 8
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %_2.i = alloca [16 x i8], align 1
  %exp_bits.dbg.spill = alloca i32, align 4
  %_6 = alloca i8, align 1
  %1 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3741, metadata !DIExpression()), !dbg !3744
; call f128_internal::f128_t::f128::exp_bits
  %exp_bits = call i32 @_ZN13f128_internal6f128_t4f1288exp_bits17hb4918e3c047f86c3E(%"f128_t::f128"* align 1 %self), !dbg !3745
  store i32 %exp_bits, i32* %exp_bits.dbg.spill, align 4, !dbg !3745
  call void @llvm.dbg.declare(metadata i32* %exp_bits.dbg.spill, metadata !3742, metadata !DIExpression()), !dbg !3746
  br label %bb1, !dbg !3745

bb1:                                              ; preds = %start
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !3704, metadata !DIExpression()), !dbg !3747
  %2 = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !3749
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !3749
  %4 = bitcast [16 x i8]* %2 to i8*, !dbg !3749
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !3749
  %5 = bitcast i128* %0 to [16 x i8]*, !dbg !3750
  %6 = bitcast [16 x i8]* %5 to i8*, !dbg !3750
  %7 = bitcast [16 x i8]* %_2.i to i8*, !dbg !3750
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 16, i1 false), !dbg !3750
  %8 = load i128, i128* %0, align 8, !dbg !3750
  br label %bb5, !dbg !3751

bb5:                                              ; preds = %bb1
  %9 = icmp eq i128 %8, 0, !dbg !3751
  br i1 %9, label %bb2, label %bb3, !dbg !3751

bb2:                                              ; preds = %bb5
  store i8 1, i8* %1, align 1, !dbg !3751
  br label %bb4, !dbg !3751

bb3:                                              ; preds = %bb5
  %10 = icmp eq i32 %exp_bits, 0, !dbg !3752
  br i1 %10, label %bb6, label %bb7, !dbg !3752

bb6:                                              ; preds = %bb3
  store i8 0, i8* %_6, align 1, !dbg !3752
  br label %bb8, !dbg !3752

bb7:                                              ; preds = %bb3
  %_8 = icmp ne i32 %exp_bits, 32767, !dbg !3753
  %11 = zext i1 %_8 to i8, !dbg !3752
  store i8 %11, i8* %_6, align 1, !dbg !3752
  br label %bb8, !dbg !3752

bb8:                                              ; preds = %bb6, %bb7
  %12 = load i8, i8* %_6, align 1, !dbg !3751, !range !685, !noundef !26
  %13 = trunc i8 %12 to i1, !dbg !3751
  %14 = zext i1 %13 to i8, !dbg !3751
  store i8 %14, i8* %1, align 1, !dbg !3751
  br label %bb4, !dbg !3751

bb4:                                              ; preds = %bb2, %bb8
  %15 = load i8, i8* %1, align 1, !dbg !3754, !range !685, !noundef !26
  %16 = trunc i8 %15 to i1, !dbg !3754
  ret i1 %16, !dbg !3754
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::classify
; Function Attrs: nonlazybind uwtable
define i8 @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$8classify17h35ada12151f97b7dE"(%"f128_t::f128"* %self) unnamed_addr #1 !dbg !3755 {
start:
  %_8 = alloca %"f128_t::f128", align 1
  %_6 = alloca %"f128_t::f128", align 1
  %_4 = alloca %"f128_t::f128", align 1
  %x = alloca { i8, i8, i8 }, align 1
  %0 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3759, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.declare(metadata { i8, i8, i8 }* %x, metadata !3760, metadata !DIExpression()), !dbg !3768
  %1 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !3769
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3769
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !3769
; call f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::is_normal
  %_3 = call zeroext i1 @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$9is_normal17h057f4785ab1edaefE"(%"f128_t::f128"* %_4), !dbg !3769
  br label %bb1, !dbg !3769

bb1:                                              ; preds = %start
  %3 = bitcast %"f128_t::f128"* %_6 to i8*, !dbg !3770
  %4 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3770
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !3770
; call f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::is_finite
  %_5 = call zeroext i1 @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$9is_finite17h514ec869881acaceE"(%"f128_t::f128"* %_6), !dbg !3770
  br label %bb2, !dbg !3770

bb2:                                              ; preds = %bb1
  %5 = bitcast %"f128_t::f128"* %_8 to i8*, !dbg !3771
  %6 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3771
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !3771
; call f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::is_nan
  %_7 = call zeroext i1 @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$6is_nan17h9ffa941bc536160eE"(%"f128_t::f128"* %_8), !dbg !3771
  br label %bb3, !dbg !3771

bb3:                                              ; preds = %bb2
  %7 = bitcast { i8, i8, i8 }* %x to i8*, !dbg !3772
  %8 = zext i1 %_3 to i8, !dbg !3772
  store i8 %8, i8* %7, align 1, !dbg !3772
  %9 = getelementptr inbounds { i8, i8, i8 }, { i8, i8, i8 }* %x, i32 0, i32 1, !dbg !3772
  %10 = zext i1 %_5 to i8, !dbg !3772
  store i8 %10, i8* %9, align 1, !dbg !3772
  %11 = getelementptr inbounds { i8, i8, i8 }, { i8, i8, i8 }* %x, i32 0, i32 2, !dbg !3772
  %12 = zext i1 %_7 to i8, !dbg !3772
  store i8 %12, i8* %11, align 1, !dbg !3772
  %13 = bitcast { i8, i8, i8 }* %x to i8*, !dbg !3773
  %14 = load i8, i8* %13, align 1, !dbg !3773, !range !685, !noundef !26
  %15 = trunc i8 %14 to i1, !dbg !3773
  br i1 %15, label %bb4, label %bb7, !dbg !3773

bb7:                                              ; preds = %bb3
  %16 = getelementptr inbounds { i8, i8, i8 }, { i8, i8, i8 }* %x, i32 0, i32 1, !dbg !3773
  %17 = load i8, i8* %16, align 1, !dbg !3773, !range !685, !noundef !26
  %18 = trunc i8 %17 to i1, !dbg !3773
  br i1 %18, label %bb8, label %bb6, !dbg !3773

bb4:                                              ; preds = %bb3
  %19 = getelementptr inbounds { i8, i8, i8 }, { i8, i8, i8 }* %x, i32 0, i32 1, !dbg !3773
  %20 = load i8, i8* %19, align 1, !dbg !3773, !range !685, !noundef !26
  %21 = trunc i8 %20 to i1, !dbg !3773
  br i1 %21, label %bb5, label %bb6, !dbg !3773

bb6:                                              ; preds = %bb8, %bb7, %bb5, %bb4
  %22 = getelementptr inbounds { i8, i8, i8 }, { i8, i8, i8 }* %x, i32 0, i32 2, !dbg !3773
  %23 = load i8, i8* %22, align 1, !dbg !3773, !range !685, !noundef !26
  %24 = trunc i8 %23 to i1, !dbg !3773
  br i1 %24, label %bb14, label %bb9, !dbg !3773

bb5:                                              ; preds = %bb4
  %25 = getelementptr inbounds { i8, i8, i8 }, { i8, i8, i8 }* %x, i32 0, i32 2, !dbg !3773
  %26 = load i8, i8* %25, align 1, !dbg !3773, !range !685, !noundef !26
  %27 = trunc i8 %26 to i1, !dbg !3773
  br i1 %27, label %bb6, label %bb12, !dbg !3773

bb12:                                             ; preds = %bb5
  store i8 4, i8* %0, align 1, !dbg !3774
  br label %bb15, !dbg !3774

bb15:                                             ; preds = %bb10, %bb14, %bb13, %bb12
  %28 = load i8, i8* %0, align 1, !dbg !3775, !range !3776, !noundef !26
  ret i8 %28, !dbg !3775

bb8:                                              ; preds = %bb7
  %29 = getelementptr inbounds { i8, i8, i8 }, { i8, i8, i8 }* %x, i32 0, i32 2, !dbg !3773
  %30 = load i8, i8* %29, align 1, !dbg !3773, !range !685, !noundef !26
  %31 = trunc i8 %30 to i1, !dbg !3773
  br i1 %31, label %bb6, label %bb13, !dbg !3773

bb13:                                             ; preds = %bb8
  store i8 3, i8* %0, align 1, !dbg !3777
  br label %bb15, !dbg !3777

bb9:                                              ; preds = %bb6
  %32 = getelementptr inbounds { i8, i8, i8 }, { i8, i8, i8 }* %x, i32 0, i32 1, !dbg !3773
  %33 = load i8, i8* %32, align 1, !dbg !3773, !range !685, !noundef !26
  %34 = trunc i8 %33 to i1, !dbg !3773
  br i1 %34, label %bb11, label %bb10, !dbg !3773

bb14:                                             ; preds = %bb6
  store i8 0, i8* %0, align 1, !dbg !3778
  br label %bb15, !dbg !3778

bb10:                                             ; preds = %bb9
  store i8 1, i8* %0, align 1, !dbg !3779
  br label %bb15, !dbg !3779

bb11:                                             ; preds = %bb9
  unreachable, !dbg !3780
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::floor
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5floor17hb7383015855688baE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !3781 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3785, metadata !DIExpression()), !dbg !3786
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3787
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3787
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !3787
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !3788
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !3788
  %6 = call { i64, i64 } @floorq_f({ i64, i64 } %5), !dbg !3788
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !3788
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3788
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !3788
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !3788
  br label %bb1, !dbg !3788

bb1:                                              ; preds = %start
  ret void, !dbg !3789
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::ceil
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4ceil17hcfc4eae11b94c21dE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !3790 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3792, metadata !DIExpression()), !dbg !3793
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3794
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3794
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !3794
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !3795
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !3795
  %6 = call { i64, i64 } @ceilq_f({ i64, i64 } %5), !dbg !3795
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !3795
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3795
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !3795
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !3795
  br label %bb1, !dbg !3795

bb1:                                              ; preds = %start
  ret void, !dbg !3796
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::round
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5round17h95e12bbddccf3f32E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !3797 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3799, metadata !DIExpression()), !dbg !3800
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3801
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3801
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !3801
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !3802
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !3802
  %6 = call { i64, i64 } @roundq_f({ i64, i64 } %5), !dbg !3802
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !3802
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3802
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !3802
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !3802
  br label %bb1, !dbg !3802

bb1:                                              ; preds = %start
  ret void, !dbg !3803
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::trunc
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5trunc17hd2b69f9f3278d777E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !3804 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3806, metadata !DIExpression()), !dbg !3807
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3808
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3808
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !3808
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !3809
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !3809
  %6 = call { i64, i64 } @truncq_f({ i64, i64 } %5), !dbg !3809
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !3809
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3809
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !3809
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !3809
  br label %bb1, !dbg !3809

bb1:                                              ; preds = %start
  ret void, !dbg !3810
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::fract
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5fract17h6b2d6a02f3cc3d39E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !3811 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_3 = alloca %"f128_t::f128", align 1
  %x = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3813, metadata !DIExpression()), !dbg !3816
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3814, metadata !DIExpression()), !dbg !3817
  store i32 0, i32* %x, align 4, !dbg !3818
  %2 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !3819
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3819
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !3819
  %4 = bitcast %"f128_t::f128"* %_3 to { i64, i64 }*, !dbg !3820
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !3820
  %6 = call { i64, i64 } @frexpq_f({ i64, i64 } %5, i32* %x), !dbg !3820
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !3820
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3820
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !3820
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !3820
  br label %bb1, !dbg !3820

bb1:                                              ; preds = %start
  ret void, !dbg !3821
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::abs
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3abs17h0a2a4ce13a36e709E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !3822 {
start:
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3824, metadata !DIExpression()), !dbg !3825
  %1 = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !3826
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 15, !dbg !3826
  %3 = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !3826
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 15, !dbg !3826
  %5 = load i8, i8* %4, align 1, !dbg !3826
  %6 = and i8 %5, 127, !dbg !3826
  store i8 %6, i8* %2, align 1, !dbg !3826
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3827
  %8 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3827
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 16, i1 false), !dbg !3827
  ret void, !dbg !3828
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::signum
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$6signum17hc417a441e7d77aa7E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !3829 {
start:
  %1 = alloca %"f128_t::f128", align 1
  %_6 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3831, metadata !DIExpression()), !dbg !3832
; call f128_internal::f128_impl::<impl core::cmp::PartialEq for f128_internal::f128_t::f128>::eq
  %_2 = call zeroext i1 @"_ZN13f128_internal9f128_impl78_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$f128_internal..f128_t..f128$GT$2eq17h64eb881a5d546e65E"(%"f128_t::f128"* align 1 %self, %"f128_t::f128"* align 1 bitcast (<{ [16 x i8] }>* @alloc901 to %"f128_t::f128"*)), !dbg !3833
  br label %bb1, !dbg !3833

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb3, !dbg !3833

bb3:                                              ; preds = %bb1
  %2 = bitcast %"f128_t::f128"* %_6 to i8*, !dbg !3834
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3834
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !3834
; call f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::is_sign_positive
  %_5 = call zeroext i1 @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$16is_sign_positive17h3a00f4b008e30b09E"(%"f128_t::f128"* %_6), !dbg !3834
  br label %bb4, !dbg !3834

bb2:                                              ; preds = %bb1
  %4 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3835
  %5 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3835
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 16, i1 false), !dbg !3835
  br label %bb7, !dbg !3836

bb7:                                              ; preds = %bb6, %bb5, %bb2
  ret void, !dbg !3836

bb4:                                              ; preds = %bb3
  br i1 %_5, label %bb5, label %bb6, !dbg !3834

bb6:                                              ; preds = %bb4
  %6 = bitcast %"f128_t::f128"* %1 to i8*, !dbg !3837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @0, i32 0, i32 0, i32 0), i64 16, i1 false), !dbg !3837
; call f128_internal::f128_impl::<impl core::ops::arith::Neg for f128_internal::f128_t::f128>::neg
  call void @"_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Neg$u20$for$u20$f128_internal..f128_t..f128$GT$3neg17h526233a1fa0b3b88E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %1), !dbg !3837
  br label %bb7, !dbg !3837

bb5:                                              ; preds = %bb4
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3838
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @0, i32 0, i32 0, i32 0), i64 16, i1 false), !dbg !3838
  br label %bb7, !dbg !3839
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::is_sign_positive
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$16is_sign_positive17h3a00f4b008e30b09E"(%"f128_t::f128"* %self) unnamed_addr #0 !dbg !3840 {
start:
  %0 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3842, metadata !DIExpression()), !dbg !3843
  %1 = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !3844
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 15, !dbg !3844
  %_3 = load i8, i8* %2, align 1, !dbg !3844
  %_2 = and i8 %_3, -128, !dbg !3844
  switch i8 %_2, label %bb1 [
    i8 0, label %bb2
    i8 -128, label %bb3
  ], !dbg !3845

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [40 x i8] }>* @alloc1185 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1187 to %"core::panic::location::Location"*)) #12, !dbg !3846
  unreachable, !dbg !3846

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1, !dbg !3847
  br label %bb4, !dbg !3847

bb3:                                              ; preds = %start
  store i8 0, i8* %0, align 1, !dbg !3848
  br label %bb4, !dbg !3848

bb4:                                              ; preds = %bb2, %bb3
  %3 = load i8, i8* %0, align 1, !dbg !3849, !range !685, !noundef !26
  %4 = trunc i8 %3 to i1, !dbg !3849
  ret i1 %4, !dbg !3849
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::mul_add
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$7mul_add17hd3134a8c746b338cE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, %"f128_t::f128"* %a, %"f128_t::f128"* %b) unnamed_addr #1 !dbg !3850 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_6 = alloca %"f128_t::f128", align 1
  %_5 = alloca %"f128_t::f128", align 1
  %_4 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3854, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %a, metadata !3855, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %b, metadata !3856, metadata !DIExpression()), !dbg !3859
  %2 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !3860
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3860
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !3860
  %4 = bitcast %"f128_t::f128"* %_5 to i8*, !dbg !3861
  %5 = bitcast %"f128_t::f128"* %a to i8*, !dbg !3861
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 16, i1 false), !dbg !3861
  %6 = bitcast %"f128_t::f128"* %_6 to i8*, !dbg !3862
  %7 = bitcast %"f128_t::f128"* %b to i8*, !dbg !3862
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 16, i1 false), !dbg !3862
  %8 = bitcast %"f128_t::f128"* %_4 to { i64, i64 }*, !dbg !3863
  %9 = load { i64, i64 }, { i64, i64 }* %8, align 1, !dbg !3863
  %10 = bitcast %"f128_t::f128"* %_5 to { i64, i64 }*, !dbg !3863
  %11 = load { i64, i64 }, { i64, i64 }* %10, align 1, !dbg !3863
  %12 = bitcast %"f128_t::f128"* %_6 to { i64, i64 }*, !dbg !3863
  %13 = load { i64, i64 }, { i64, i64 }* %12, align 1, !dbg !3863
  %14 = call { i64, i64 } @fmaq_f({ i64, i64 } %9, { i64, i64 } %11, { i64, i64 } %13), !dbg !3863
  store { i64, i64 } %14, { i64, i64 }* %1, align 8, !dbg !3863
  %15 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3863
  %16 = bitcast { i64, i64 }* %1 to i8*, !dbg !3863
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 8 %16, i64 16, i1 false), !dbg !3863
  br label %bb1, !dbg !3863

bb1:                                              ; preds = %start
  ret void, !dbg !3864
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::recip
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5recip17hfbfc7661aea573caE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !3865 {
start:
  %1 = alloca %"f128_t::f128", align 1
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3867, metadata !DIExpression()), !dbg !3868
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3869
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3869
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !3869
  %4 = bitcast %"f128_t::f128"* %1 to i8*, !dbg !3870
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @0, i32 0, i32 0, i32 0), i64 16, i1 false), !dbg !3870
; call f128_internal::f128_impl::<impl core::ops::arith::Div for f128_internal::f128_t::f128>::div
  call void @"_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Div$u20$for$u20$f128_internal..f128_t..f128$GT$3div17h69144dea03b00355E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %1, %"f128_t::f128"* %_2), !dbg !3870
  br label %bb1, !dbg !3870

bb1:                                              ; preds = %start
  ret void, !dbg !3871
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::powi
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4powi17h2aa002d93846b6b6E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i32 %n) unnamed_addr #1 !dbg !3872 {
start:
  %n.dbg.spill = alloca i32, align 4
  %_32 = alloca %"f128_t::f128", align 1
  %_26 = alloca { i32, i32 }, align 4
  %iter1 = alloca { i32, i32 }, align 4
  %_23 = alloca { i32, i32 }, align 4
  %_21 = alloca %"f128_t::f128", align 1
  %_15 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_9 = alloca { i64, i64 }, align 8
  %i = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3876, metadata !DIExpression()), !dbg !3884
  store i32 %n, i32* %n.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !3877, metadata !DIExpression()), !dbg !3885
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %i, metadata !3878, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter, metadata !3880, metadata !DIExpression()), !dbg !3887
  call void @llvm.dbg.declare(metadata { i32, i32 }* %iter1, metadata !3882, metadata !DIExpression()), !dbg !3888
; call <f128_internal::f128_t::f128 as core::clone::Clone>::clone
  call void @"_ZN66_$LT$f128_internal..f128_t..f128$u20$as$u20$core..clone..Clone$GT$5clone17hc02454b05c891117E"(%"f128_t::f128"* sret(%"f128_t::f128") %i, %"f128_t::f128"* align 1 %self), !dbg !3889
  br label %bb1, !dbg !3889

bb1:                                              ; preds = %start
  %1 = icmp eq i32 %n, 0, !dbg !3890
  br i1 %1, label %bb2, label %bb3, !dbg !3890

bb2:                                              ; preds = %bb1
  %2 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3891
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @0, i32 0, i32 0, i32 0), i64 16, i1 false), !dbg !3891
  br label %bb18, !dbg !3892

bb3:                                              ; preds = %bb1
  %_6 = icmp slt i32 %n, 0, !dbg !3893
  br i1 %_6, label %bb4, label %bb5, !dbg !3893

bb5:                                              ; preds = %bb3
  %3 = bitcast { i32, i32 }* %_23 to i32*, !dbg !3894
  store i32 1, i32* %3, align 4, !dbg !3894
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_23, i32 0, i32 1, !dbg !3894
  store i32 %n, i32* %4, align 4, !dbg !3894
  %5 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_23, i32 0, i32 0, !dbg !3894
  %6 = load i32, i32* %5, align 4, !dbg !3894
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_23, i32 0, i32 1, !dbg !3894
  %8 = load i32, i32* %7, align 4, !dbg !3894
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %9 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h37df8f59f75fdd3cE"(i32 %6, i32 %8), !dbg !3894
  %_22.0 = extractvalue { i32, i32 } %9, 0, !dbg !3894
  %_22.1 = extractvalue { i32, i32 } %9, 1, !dbg !3894
  br label %bb12, !dbg !3894

bb4:                                              ; preds = %bb3
  %_11 = sext i32 %n to i64, !dbg !3895
  %10 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %_11, i64 1), !dbg !3895
  %_13.0 = extractvalue { i64, i1 } %10, 0, !dbg !3895
  %_13.1 = extractvalue { i64, i1 } %10, 1, !dbg !3895
  %11 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false), !dbg !3895
  br i1 %11, label %panic, label %bb6, !dbg !3895

bb6:                                              ; preds = %bb4
  %12 = bitcast { i64, i64 }* %_9 to i64*, !dbg !3895
  store i64 %_13.0, i64* %12, align 8, !dbg !3895
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !3895
  store i64 0, i64* %13, align 8, !dbg !3895
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !3895
  %15 = load i64, i64* %14, align 8, !dbg !3895
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !3895
  %17 = load i64, i64* %16, align 8, !dbg !3895
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %18 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h514bad8e1237f4f8E"(i64 %15, i64 %17), !dbg !3895
  %_8.0 = extractvalue { i64, i64 } %18, 0, !dbg !3895
  %_8.1 = extractvalue { i64, i64 } %18, 1, !dbg !3895
  br label %bb7, !dbg !3895

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1189 to %"core::panic::location::Location"*)) #12, !dbg !3895
  unreachable, !dbg !3895

bb7:                                              ; preds = %bb6
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0, !dbg !3895
  store i64 %_8.0, i64* %19, align 8, !dbg !3895
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1, !dbg !3895
  store i64 %_8.1, i64* %20, align 8, !dbg !3895
  br label %bb8, !dbg !3896

bb8:                                              ; preds = %bb10, %bb7
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %21 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h4b80e619f85ebbd6E"({ i64, i64 }* align 8 %iter), !dbg !3887
  store { i64, i64 } %21, { i64, i64 }* %_15, align 8, !dbg !3887
  br label %bb9, !dbg !3887

bb9:                                              ; preds = %bb8
  %22 = bitcast { i64, i64 }* %_15 to i64*, !dbg !3887
  %_18 = load i64, i64* %22, align 8, !dbg !3887, !range !897, !noundef !26
  switch i64 %_18, label %bb11 [
    i64 0, label %bb17
    i64 1, label %bb10
  ], !dbg !3887

bb11:                                             ; preds = %bb9
  unreachable, !dbg !3887

bb17:                                             ; preds = %bb14, %bb9
  %23 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3897
  %24 = bitcast %"f128_t::f128"* %i to i8*, !dbg !3897
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %24, i64 16, i1 false), !dbg !3897
  br label %bb18, !dbg !3892

bb10:                                             ; preds = %bb9
  %25 = bitcast %"f128_t::f128"* %_21 to i8*, !dbg !3898
  %26 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3898
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %26, i64 16, i1 false), !dbg !3898
; call f128_internal::f128_impl::<impl core::ops::arith::DivAssign for f128_internal::f128_t::f128>::div_assign
  call void @"_ZN13f128_internal9f128_impl85_$LT$impl$u20$core..ops..arith..DivAssign$u20$for$u20$f128_internal..f128_t..f128$GT$10div_assign17hab154d055fe8b7d5E"(%"f128_t::f128"* align 1 %i, %"f128_t::f128"* %_21), !dbg !3899
  br label %bb8, !dbg !3899

bb12:                                             ; preds = %bb5
  %27 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter1, i32 0, i32 0, !dbg !3894
  store i32 %_22.0, i32* %27, align 4, !dbg !3894
  %28 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter1, i32 0, i32 1, !dbg !3894
  store i32 %_22.1, i32* %28, align 4, !dbg !3894
  br label %bb13, !dbg !3900

bb13:                                             ; preds = %bb15, %bb12
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %29 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hb567e932e5e843d6E"({ i32, i32 }* align 4 %iter1), !dbg !3888
  store { i32, i32 } %29, { i32, i32 }* %_26, align 4, !dbg !3888
  br label %bb14, !dbg !3888

bb14:                                             ; preds = %bb13
  %30 = bitcast { i32, i32 }* %_26 to i32*, !dbg !3888
  %31 = load i32, i32* %30, align 4, !dbg !3888, !range !3080, !noundef !26
  %_29 = zext i32 %31 to i64, !dbg !3888
  switch i64 %_29, label %bb16 [
    i64 0, label %bb17
    i64 1, label %bb15
  ], !dbg !3888

bb16:                                             ; preds = %bb14
  unreachable, !dbg !3888

bb15:                                             ; preds = %bb14
  %32 = bitcast %"f128_t::f128"* %_32 to i8*, !dbg !3901
  %33 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3901
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %33, i64 16, i1 false), !dbg !3901
; call f128_internal::f128_impl::<impl core::ops::arith::MulAssign for f128_internal::f128_t::f128>::mul_assign
  call void @"_ZN13f128_internal9f128_impl85_$LT$impl$u20$core..ops..arith..MulAssign$u20$for$u20$f128_internal..f128_t..f128$GT$10mul_assign17h11b5717fe6e93731E"(%"f128_t::f128"* align 1 %i, %"f128_t::f128"* %_32), !dbg !3902
  br label %bb13, !dbg !3902

bb18:                                             ; preds = %bb2, %bb17
  ret void, !dbg !3892
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::powf
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4powf17h459b9509ea339f35E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, %"f128_t::f128"* %n) unnamed_addr #1 !dbg !3903 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_4 = alloca %"f128_t::f128", align 1
  %_3 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3907, metadata !DIExpression()), !dbg !3909
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %n, metadata !3908, metadata !DIExpression()), !dbg !3910
  %2 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !3911
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3911
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !3911
  %4 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !3912
  %5 = bitcast %"f128_t::f128"* %n to i8*, !dbg !3912
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 16, i1 false), !dbg !3912
  %6 = bitcast %"f128_t::f128"* %_3 to { i64, i64 }*, !dbg !3913
  %7 = load { i64, i64 }, { i64, i64 }* %6, align 1, !dbg !3913
  %8 = bitcast %"f128_t::f128"* %_4 to { i64, i64 }*, !dbg !3913
  %9 = load { i64, i64 }, { i64, i64 }* %8, align 1, !dbg !3913
  %10 = call { i64, i64 } @powq_f({ i64, i64 } %7, { i64, i64 } %9), !dbg !3913
  store { i64, i64 } %10, { i64, i64 }* %1, align 8, !dbg !3913
  %11 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3913
  %12 = bitcast { i64, i64 }* %1 to i8*, !dbg !3913
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 8 %12, i64 16, i1 false), !dbg !3913
  br label %bb1, !dbg !3913

bb1:                                              ; preds = %start
  ret void, !dbg !3914
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::sqrt
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4sqrt17ha2692d021e03e427E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !3915 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3917, metadata !DIExpression()), !dbg !3918
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3919
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3919
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !3919
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !3920
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !3920
  %6 = call { i64, i64 } @sqrtq_f({ i64, i64 } %5), !dbg !3920
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !3920
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3920
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !3920
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !3920
  br label %bb1, !dbg !3920

bb1:                                              ; preds = %start
  ret void, !dbg !3921
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::exp
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3exp17hf73abe3fc12e4606E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !3922 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3924, metadata !DIExpression()), !dbg !3925
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3926
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3926
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !3926
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !3927
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !3927
  %6 = call { i64, i64 } @expq_f({ i64, i64 } %5), !dbg !3927
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !3927
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3927
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !3927
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !3927
  br label %bb1, !dbg !3927

bb1:                                              ; preds = %start
  ret void, !dbg !3928
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::exp2
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4exp217hd44edf77565ffd0bE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !3929 {
start:
  %1 = alloca %"f128_t::f128", align 1
  %_5 = alloca %"f128_t::f128", align 1
  %_4 = alloca %"core::option::Option<f128_t::f128>", align 1
  %_3 = alloca %"f128_t::f128", align 1
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3931, metadata !DIExpression()), !dbg !3932
; call f128_internal::f128_impl::<impl num_traits::cast::FromPrimitive for f128_internal::f128_t::f128>::from_u8
  call void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$7from_u817h18dfc0580027cd2fE"(%"core::option::Option<f128_t::f128>"* sret(%"core::option::Option<f128_t::f128>") %_4, i8 2), !dbg !3933
  br label %bb1, !dbg !3933

bb1:                                              ; preds = %start
; call core::option::Option<T>::unwrap
  call void @"_ZN4core6option15Option$LT$T$GT$6unwrap17h09baf5fcc786da84E"(%"f128_t::f128"* sret(%"f128_t::f128") %_3, %"core::option::Option<f128_t::f128>"* %_4, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1191 to %"core::panic::location::Location"*)), !dbg !3933
  br label %bb2, !dbg !3933

bb2:                                              ; preds = %bb1
  %2 = bitcast %"f128_t::f128"* %1 to i8*, !dbg !3934
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @0, i32 0, i32 0, i32 0), i64 16, i1 false), !dbg !3934
; call f128_internal::f128_impl::<impl core::ops::arith::Mul for f128_internal::f128_t::f128>::mul
  call void @"_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Mul$u20$for$u20$f128_internal..f128_t..f128$GT$3mul17h3dd26f8691880a4fE"(%"f128_t::f128"* sret(%"f128_t::f128") %_2, %"f128_t::f128"* %1, %"f128_t::f128"* %_3), !dbg !3934
  br label %bb3, !dbg !3934

bb3:                                              ; preds = %bb2
  %3 = bitcast %"f128_t::f128"* %_5 to i8*, !dbg !3935
  %4 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3935
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !3935
; call f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::powf
  call void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4powf17h459b9509ea339f35E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_2, %"f128_t::f128"* %_5), !dbg !3934
  br label %bb4, !dbg !3934

bb4:                                              ; preds = %bb3
  ret void, !dbg !3936
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::ln
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$2ln17h0d31451d0b7e071eE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !3937 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3939, metadata !DIExpression()), !dbg !3940
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3941
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3941
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !3941
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !3942
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !3942
  %6 = call { i64, i64 } @logq_f({ i64, i64 } %5), !dbg !3942
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !3942
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3942
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !3942
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !3942
  br label %bb1, !dbg !3942

bb1:                                              ; preds = %start
  ret void, !dbg !3943
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::log
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3log17h0db57e4c362f4ef4E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, %"f128_t::f128"* %base) unnamed_addr #1 !dbg !3944 {
start:
  %_8 = alloca %"f128_t::f128", align 1
  %_7 = alloca %"f128_t::f128", align 1
  %_6 = alloca %"f128_t::f128", align 1
  %denm = alloca %"f128_t::f128", align 1
  %_4 = alloca %"f128_t::f128", align 1
  %numr = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3946, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %base, metadata !3947, metadata !DIExpression()), !dbg !3953
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %numr, metadata !3948, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %denm, metadata !3950, metadata !DIExpression()), !dbg !3955
  %1 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !3956
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3956
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !3956
; call f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::ln
  call void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$2ln17h0d31451d0b7e071eE"(%"f128_t::f128"* sret(%"f128_t::f128") %numr, %"f128_t::f128"* %_4), !dbg !3956
  br label %bb1, !dbg !3956

bb1:                                              ; preds = %start
  %3 = bitcast %"f128_t::f128"* %_6 to i8*, !dbg !3957
  %4 = bitcast %"f128_t::f128"* %base to i8*, !dbg !3957
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !3957
; call f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::ln
  call void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$2ln17h0d31451d0b7e071eE"(%"f128_t::f128"* sret(%"f128_t::f128") %denm, %"f128_t::f128"* %_6), !dbg !3957
  br label %bb2, !dbg !3957

bb2:                                              ; preds = %bb1
  %5 = bitcast %"f128_t::f128"* %_7 to i8*, !dbg !3958
  %6 = bitcast %"f128_t::f128"* %numr to i8*, !dbg !3958
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !3958
  %7 = bitcast %"f128_t::f128"* %_8 to i8*, !dbg !3959
  %8 = bitcast %"f128_t::f128"* %denm to i8*, !dbg !3959
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 16, i1 false), !dbg !3959
; call f128_internal::f128_impl::<impl core::ops::arith::Div for f128_internal::f128_t::f128>::div
  call void @"_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Div$u20$for$u20$f128_internal..f128_t..f128$GT$3div17h69144dea03b00355E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_7, %"f128_t::f128"* %_8), !dbg !3958
  br label %bb3, !dbg !3958

bb3:                                              ; preds = %bb2
  ret void, !dbg !3960
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::log2
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4log217hc7c04a0d11ed539bE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !3961 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3963, metadata !DIExpression()), !dbg !3964
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3965
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3965
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !3965
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !3966
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !3966
  %6 = call { i64, i64 } @log2q_f({ i64, i64 } %5), !dbg !3966
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !3966
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3966
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !3966
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !3966
  br label %bb1, !dbg !3966

bb1:                                              ; preds = %start
  ret void, !dbg !3967
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::log10
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5log1017h4d2eda8116a83d44E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !3968 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3970, metadata !DIExpression()), !dbg !3971
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !3972
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3972
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !3972
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !3973
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !3973
  %6 = call { i64, i64 } @log10q_f({ i64, i64 } %5), !dbg !3973
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !3973
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !3973
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !3973
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !3973
  br label %bb1, !dbg !3973

bb1:                                              ; preds = %start
  ret void, !dbg !3974
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::max
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3max17h5236e0bc9ac53512E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, %"f128_t::f128"* %other) unnamed_addr #1 !dbg !3975 {
start:
  %b.dbg.spill = alloca i128, align 8
  %1 = alloca i128, align 8
  %a.dbg.spill = alloca i128, align 8
  %2 = alloca i128, align 8
  %_7 = alloca i128, align 8
  %_6 = alloca %"f128_t::f128", align 1
  %_4 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3977, metadata !DIExpression()), !dbg !3983
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %other, metadata !3978, metadata !DIExpression()), !dbg !3984
  %3 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !3985
  %4 = bitcast %"f128_t::f128"* %self to i8*, !dbg !3985
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !3985
  %5 = bitcast i128* %2 to %"f128_t::f128"*, !dbg !3986
  %6 = bitcast %"f128_t::f128"* %5 to i8*, !dbg !3986
  %7 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !3986
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 16, i1 false), !dbg !3986
  %a = load i128, i128* %2, align 8, !dbg !3986
  store i128 %a, i128* %a.dbg.spill, align 8, !dbg !3986
  call void @llvm.dbg.declare(metadata i128* %a.dbg.spill, metadata !3979, metadata !DIExpression()), !dbg !3987
  br label %bb1, !dbg !3986

bb1:                                              ; preds = %start
  %8 = bitcast %"f128_t::f128"* %_6 to i8*, !dbg !3988
  %9 = bitcast %"f128_t::f128"* %other to i8*, !dbg !3988
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %9, i64 16, i1 false), !dbg !3988
  %10 = bitcast i128* %1 to %"f128_t::f128"*, !dbg !3989
  %11 = bitcast %"f128_t::f128"* %10 to i8*, !dbg !3989
  %12 = bitcast %"f128_t::f128"* %_6 to i8*, !dbg !3989
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %12, i64 16, i1 false), !dbg !3989
  %b = load i128, i128* %1, align 8, !dbg !3989
  store i128 %b, i128* %b.dbg.spill, align 8, !dbg !3989
  call void @llvm.dbg.declare(metadata i128* %b.dbg.spill, metadata !3981, metadata !DIExpression()), !dbg !3990
  br label %bb2, !dbg !3989

bb2:                                              ; preds = %bb1
  %_8 = icmp sgt i128 %a, %b, !dbg !3991
  br i1 %_8, label %bb3, label %bb4, !dbg !3991

bb4:                                              ; preds = %bb2
  store i128 %b, i128* %_7, align 8, !dbg !3992
  br label %bb5, !dbg !3993

bb3:                                              ; preds = %bb2
  store i128 %a, i128* %_7, align 8, !dbg !3994
  br label %bb5, !dbg !3993

bb5:                                              ; preds = %bb4, %bb3
  %13 = load i128, i128* %_7, align 8, !dbg !3995
  %14 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !3995
  store i128 %13, i128* %14, align 1, !dbg !3995
  br label %bb6, !dbg !3995

bb6:                                              ; preds = %bb5
  ret void, !dbg !3996
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::min
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3min17h09717e0510d45688E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, %"f128_t::f128"* %other) unnamed_addr #1 !dbg !3997 {
start:
  %b.dbg.spill = alloca i128, align 8
  %1 = alloca i128, align 8
  %a.dbg.spill = alloca i128, align 8
  %2 = alloca i128, align 8
  %_7 = alloca i128, align 8
  %_6 = alloca %"f128_t::f128", align 1
  %_4 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !3999, metadata !DIExpression()), !dbg !4005
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %other, metadata !4000, metadata !DIExpression()), !dbg !4006
  %3 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !4007
  %4 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4007
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !4007
  %5 = bitcast i128* %2 to %"f128_t::f128"*, !dbg !4008
  %6 = bitcast %"f128_t::f128"* %5 to i8*, !dbg !4008
  %7 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !4008
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 16, i1 false), !dbg !4008
  %a = load i128, i128* %2, align 8, !dbg !4008
  store i128 %a, i128* %a.dbg.spill, align 8, !dbg !4008
  call void @llvm.dbg.declare(metadata i128* %a.dbg.spill, metadata !4001, metadata !DIExpression()), !dbg !4009
  br label %bb1, !dbg !4008

bb1:                                              ; preds = %start
  %8 = bitcast %"f128_t::f128"* %_6 to i8*, !dbg !4010
  %9 = bitcast %"f128_t::f128"* %other to i8*, !dbg !4010
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %9, i64 16, i1 false), !dbg !4010
  %10 = bitcast i128* %1 to %"f128_t::f128"*, !dbg !4011
  %11 = bitcast %"f128_t::f128"* %10 to i8*, !dbg !4011
  %12 = bitcast %"f128_t::f128"* %_6 to i8*, !dbg !4011
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %12, i64 16, i1 false), !dbg !4011
  %b = load i128, i128* %1, align 8, !dbg !4011
  store i128 %b, i128* %b.dbg.spill, align 8, !dbg !4011
  call void @llvm.dbg.declare(metadata i128* %b.dbg.spill, metadata !4003, metadata !DIExpression()), !dbg !4012
  br label %bb2, !dbg !4011

bb2:                                              ; preds = %bb1
  %_8 = icmp sgt i128 %a, %b, !dbg !4013
  br i1 %_8, label %bb3, label %bb4, !dbg !4013

bb4:                                              ; preds = %bb2
  store i128 %a, i128* %_7, align 8, !dbg !4014
  br label %bb5, !dbg !4015

bb3:                                              ; preds = %bb2
  store i128 %b, i128* %_7, align 8, !dbg !4016
  br label %bb5, !dbg !4015

bb5:                                              ; preds = %bb4, %bb3
  %13 = load i128, i128* %_7, align 8, !dbg !4017
  %14 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !4017
  store i128 %13, i128* %14, align 1, !dbg !4017
  br label %bb6, !dbg !4017

bb6:                                              ; preds = %bb5
  ret void, !dbg !4018
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::abs_sub
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$7abs_sub17h3d7ad60d378837a9E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, %"f128_t::f128"* %other) unnamed_addr #1 !dbg !4019 {
start:
  %_5 = alloca %"f128_t::f128", align 1
  %_4 = alloca %"f128_t::f128", align 1
  %_3 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4021, metadata !DIExpression()), !dbg !4023
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %other, metadata !4022, metadata !DIExpression()), !dbg !4024
  %1 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !4025
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4025
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4025
  %3 = bitcast %"f128_t::f128"* %_5 to i8*, !dbg !4026
  %4 = bitcast %"f128_t::f128"* %other to i8*, !dbg !4026
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !4026
; call f128_internal::f128_impl::<impl core::ops::arith::Sub for f128_internal::f128_t::f128>::sub
  call void @"_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Sub$u20$for$u20$f128_internal..f128_t..f128$GT$3sub17h56595469bd3ea1c7E"(%"f128_t::f128"* sret(%"f128_t::f128") %_3, %"f128_t::f128"* %_4, %"f128_t::f128"* %_5), !dbg !4027
  br label %bb1, !dbg !4027

bb1:                                              ; preds = %start
; call f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::abs
  call void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3abs17h0a2a4ce13a36e709E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3), !dbg !4027
  br label %bb2, !dbg !4027

bb2:                                              ; preds = %bb1
  ret void, !dbg !4028
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::cbrt
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4cbrt17h8c637a1d211002d9E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !4029 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4031, metadata !DIExpression()), !dbg !4032
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !4033
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4033
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4033
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !4034
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !4034
  %6 = call { i64, i64 } @cbrtq_f({ i64, i64 } %5), !dbg !4034
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !4034
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4034
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !4034
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !4034
  br label %bb1, !dbg !4034

bb1:                                              ; preds = %start
  ret void, !dbg !4035
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::hypot
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5hypot17h0d37e92ae249db61E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, %"f128_t::f128"* %other) unnamed_addr #1 !dbg !4036 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_4 = alloca %"f128_t::f128", align 1
  %_3 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4038, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %other, metadata !4039, metadata !DIExpression()), !dbg !4041
  %2 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4042
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4042
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4042
  %4 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !4043
  %5 = bitcast %"f128_t::f128"* %other to i8*, !dbg !4043
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 16, i1 false), !dbg !4043
  %6 = bitcast %"f128_t::f128"* %_3 to { i64, i64 }*, !dbg !4044
  %7 = load { i64, i64 }, { i64, i64 }* %6, align 1, !dbg !4044
  %8 = bitcast %"f128_t::f128"* %_4 to { i64, i64 }*, !dbg !4044
  %9 = load { i64, i64 }, { i64, i64 }* %8, align 1, !dbg !4044
  %10 = call { i64, i64 } @hypotq_f({ i64, i64 } %7, { i64, i64 } %9), !dbg !4044
  store { i64, i64 } %10, { i64, i64 }* %1, align 8, !dbg !4044
  %11 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4044
  %12 = bitcast { i64, i64 }* %1 to i8*, !dbg !4044
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 8 %12, i64 16, i1 false), !dbg !4044
  br label %bb1, !dbg !4044

bb1:                                              ; preds = %start
  ret void, !dbg !4045
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::sin
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3sin17hf811bf06d209b841E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !4046 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4048, metadata !DIExpression()), !dbg !4049
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !4050
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4050
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4050
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !4051
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !4051
  %6 = call { i64, i64 } @sinq_f({ i64, i64 } %5), !dbg !4051
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !4051
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4051
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !4051
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !4051
  br label %bb1, !dbg !4051

bb1:                                              ; preds = %start
  ret void, !dbg !4052
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::cos
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3cos17hfb45880dea05706eE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !4053 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4055, metadata !DIExpression()), !dbg !4056
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !4057
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4057
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4057
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !4058
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !4058
  %6 = call { i64, i64 } @cosq_f({ i64, i64 } %5), !dbg !4058
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !4058
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4058
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !4058
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !4058
  br label %bb1, !dbg !4058

bb1:                                              ; preds = %start
  ret void, !dbg !4059
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::tan
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3tan17hdb542bc68ca237b7E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !4060 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4062, metadata !DIExpression()), !dbg !4063
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !4064
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4064
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4064
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !4065
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !4065
  %6 = call { i64, i64 } @tanq_f({ i64, i64 } %5), !dbg !4065
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !4065
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4065
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !4065
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !4065
  br label %bb1, !dbg !4065

bb1:                                              ; preds = %start
  ret void, !dbg !4066
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::asin
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4asin17ha845703df54690abE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !4067 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4069, metadata !DIExpression()), !dbg !4070
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !4071
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4071
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4071
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !4072
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !4072
  %6 = call { i64, i64 } @asinq_f({ i64, i64 } %5), !dbg !4072
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !4072
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4072
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !4072
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !4072
  br label %bb1, !dbg !4072

bb1:                                              ; preds = %start
  ret void, !dbg !4073
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::acos
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4acos17h1ba413df410d7458E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !4074 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4076, metadata !DIExpression()), !dbg !4077
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !4078
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4078
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4078
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !4079
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !4079
  %6 = call { i64, i64 } @acosq_f({ i64, i64 } %5), !dbg !4079
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !4079
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4079
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !4079
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !4079
  br label %bb1, !dbg !4079

bb1:                                              ; preds = %start
  ret void, !dbg !4080
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::atan
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4atan17h47b3d890455ebc28E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !4081 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4083, metadata !DIExpression()), !dbg !4084
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !4085
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4085
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4085
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !4086
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !4086
  %6 = call { i64, i64 } @atanq_f({ i64, i64 } %5), !dbg !4086
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !4086
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4086
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !4086
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !4086
  br label %bb1, !dbg !4086

bb1:                                              ; preds = %start
  ret void, !dbg !4087
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::atan2
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5atan217h9533c437e646dd40E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, %"f128_t::f128"* %other) unnamed_addr #1 !dbg !4088 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_4 = alloca %"f128_t::f128", align 1
  %_3 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4090, metadata !DIExpression()), !dbg !4092
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %other, metadata !4091, metadata !DIExpression()), !dbg !4093
  %2 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4094
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4094
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4094
  %4 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !4095
  %5 = bitcast %"f128_t::f128"* %other to i8*, !dbg !4095
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 16, i1 false), !dbg !4095
  %6 = bitcast %"f128_t::f128"* %_3 to { i64, i64 }*, !dbg !4096
  %7 = load { i64, i64 }, { i64, i64 }* %6, align 1, !dbg !4096
  %8 = bitcast %"f128_t::f128"* %_4 to { i64, i64 }*, !dbg !4096
  %9 = load { i64, i64 }, { i64, i64 }* %8, align 1, !dbg !4096
  %10 = call { i64, i64 } @atan2q_f({ i64, i64 } %7, { i64, i64 } %9), !dbg !4096
  store { i64, i64 } %10, { i64, i64 }* %1, align 8, !dbg !4096
  %11 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4096
  %12 = bitcast { i64, i64 }* %1 to i8*, !dbg !4096
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 8 %12, i64 16, i1 false), !dbg !4096
  br label %bb1, !dbg !4096

bb1:                                              ; preds = %start
  ret void, !dbg !4097
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::sin_cos
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$7sin_cos17h5b413e6528b1b9eeE"({ %"f128_t::f128", %"f128_t::f128" }* sret({ %"f128_t::f128", %"f128_t::f128" }) %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !4098 {
start:
  %_5 = alloca %"f128_t::f128", align 1
  %_4 = alloca %"f128_t::f128", align 1
  %_3 = alloca %"f128_t::f128", align 1
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4106, metadata !DIExpression()), !dbg !4107
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4108
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4108
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4108
; call f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::sin
  call void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3sin17hf811bf06d209b841E"(%"f128_t::f128"* sret(%"f128_t::f128") %_2, %"f128_t::f128"* %_3), !dbg !4108
  br label %bb1, !dbg !4108

bb1:                                              ; preds = %start
  %3 = bitcast %"f128_t::f128"* %_5 to i8*, !dbg !4109
  %4 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4109
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !4109
; call f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::cos
  call void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3cos17hfb45880dea05706eE"(%"f128_t::f128"* sret(%"f128_t::f128") %_4, %"f128_t::f128"* %_5), !dbg !4109
  br label %bb2, !dbg !4109

bb2:                                              ; preds = %bb1
  %5 = bitcast { %"f128_t::f128", %"f128_t::f128" }* %0 to %"f128_t::f128"*, !dbg !4110
  %6 = bitcast %"f128_t::f128"* %5 to i8*, !dbg !4110
  %7 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !4110
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 16, i1 false), !dbg !4110
  %8 = getelementptr inbounds { %"f128_t::f128", %"f128_t::f128" }, { %"f128_t::f128", %"f128_t::f128" }* %0, i32 0, i32 1, !dbg !4110
  %9 = bitcast %"f128_t::f128"* %8 to i8*, !dbg !4110
  %10 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !4110
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 1 %10, i64 16, i1 false), !dbg !4110
  ret void, !dbg !4111
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::exp_m1
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$6exp_m117h82b81ce9bea1a15bE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !4112 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4114, metadata !DIExpression()), !dbg !4115
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !4116
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4116
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !4117
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !4117
  %6 = call { i64, i64 } @expm1q_f({ i64, i64 } %5), !dbg !4117
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !4117
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4117
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !4117
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !4117
  br label %bb1, !dbg !4117

bb1:                                              ; preds = %start
  ret void, !dbg !4118
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::ln_1p
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5ln_1p17hcf0e618eea82bcd6E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !4119 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4121, metadata !DIExpression()), !dbg !4122
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !4123
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4123
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4123
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !4124
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !4124
  %6 = call { i64, i64 } @log1pq_f({ i64, i64 } %5), !dbg !4124
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !4124
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4124
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !4124
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !4124
  br label %bb1, !dbg !4124

bb1:                                              ; preds = %start
  ret void, !dbg !4125
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::sinh
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4sinh17h5adabc10dce7788bE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !4126 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4128, metadata !DIExpression()), !dbg !4129
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !4130
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4130
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4130
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !4131
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !4131
  %6 = call { i64, i64 } @sinhq_f({ i64, i64 } %5), !dbg !4131
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !4131
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4131
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !4131
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !4131
  br label %bb1, !dbg !4131

bb1:                                              ; preds = %start
  ret void, !dbg !4132
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::cosh
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4cosh17h3759c11d162a702fE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !4133 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4135, metadata !DIExpression()), !dbg !4136
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !4137
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4137
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4137
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !4138
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !4138
  %6 = call { i64, i64 } @coshq_f({ i64, i64 } %5), !dbg !4138
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !4138
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4138
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !4138
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !4138
  br label %bb1, !dbg !4138

bb1:                                              ; preds = %start
  ret void, !dbg !4139
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::tanh
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4tanh17h67ccd297e54cdbddE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !4140 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4142, metadata !DIExpression()), !dbg !4143
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !4144
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4144
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4144
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !4145
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !4145
  %6 = call { i64, i64 } @tanhq_f({ i64, i64 } %5), !dbg !4145
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !4145
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4145
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !4145
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !4145
  br label %bb1, !dbg !4145

bb1:                                              ; preds = %start
  ret void, !dbg !4146
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::asinh
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5asinh17ha7d150724145b718E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !4147 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4149, metadata !DIExpression()), !dbg !4150
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !4151
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4151
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4151
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !4152
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !4152
  %6 = call { i64, i64 } @asinhq_f({ i64, i64 } %5), !dbg !4152
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !4152
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4152
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !4152
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !4152
  br label %bb1, !dbg !4152

bb1:                                              ; preds = %start
  ret void, !dbg !4153
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::acosh
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5acosh17h55ea5299d1fff320E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !4154 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4156, metadata !DIExpression()), !dbg !4157
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !4158
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4158
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4158
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !4159
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !4159
  %6 = call { i64, i64 } @acoshq_f({ i64, i64 } %5), !dbg !4159
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !4159
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4159
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !4159
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !4159
  br label %bb1, !dbg !4159

bb1:                                              ; preds = %start
  ret void, !dbg !4160
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::atanh
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5atanh17hf29cda5e546198bcE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !4161 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_2 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4163, metadata !DIExpression()), !dbg !4164
  %2 = bitcast %"f128_t::f128"* %_2 to i8*, !dbg !4165
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4165
  %4 = bitcast %"f128_t::f128"* %_2 to { i64, i64 }*, !dbg !4166
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !4166
  %6 = call { i64, i64 } @atanhq_f({ i64, i64 } %5), !dbg !4166
  store { i64, i64 } %6, { i64, i64 }* %1, align 8, !dbg !4166
  %7 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4166
  %8 = bitcast { i64, i64 }* %1 to i8*, !dbg !4166
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 16, i1 false), !dbg !4166
  br label %bb1, !dbg !4166

bb1:                                              ; preds = %start
  ret void, !dbg !4167
}

; f128_internal::f128_impl::<impl num_traits::float::Float for f128_internal::f128_t::f128>::integer_decode
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$14integer_decode17h2e322606532f65abE"({ i64, i16, i8, [5 x i8] }* sret({ i64, i16, i8, [5 x i8] }) %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !4168 {
start:
  %_14 = alloca %"core::fmt::Arguments", align 8
  %_10 = alloca [1 x { i8*, i64* }], align 8
  %_3 = alloca %"core::fmt::Arguments", align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4177, metadata !DIExpression()), !dbg !4178
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h747dba7f8d1ace20E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_14, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc996 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc998 to [0 x { i8*, i64* }]*), i64 0), !dbg !4179
  br label %bb1, !dbg !4179

bb1:                                              ; preds = %start
; call core::fmt::ArgumentV1::new_display
  %1 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hbe3bcef2e7e6b961E(%"core::fmt::Arguments"* align 8 %_14), !dbg !4179
  %_11.0 = extractvalue { i8*, i64* } %1, 0, !dbg !4179
  %_11.1 = extractvalue { i8*, i64* } %1, 1, !dbg !4179
  br label %bb2, !dbg !4179

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_10, i64 0, i64 0, !dbg !4179
  %3 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !4179
  store i8* %_11.0, i8** %3, align 8, !dbg !4179
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !4179
  store i64* %_11.1, i64** %4, align 8, !dbg !4179
  %_7.0 = bitcast [1 x { i8*, i64* }]* %_10 to [0 x { i8*, i64* }]*, !dbg !4179
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h747dba7f8d1ace20E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_3, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc993 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 %_7.0, i64 1), !dbg !4179
  br label %bb3, !dbg !4179

bb3:                                              ; preds = %bb2
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_3, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1193 to %"core::panic::location::Location"*)) #12, !dbg !4179
  unreachable, !dbg !4179
}

; f128_internal::f128_impl::<impl core::ops::arith::Neg for f128_internal::f128_t::f128>::neg
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Neg$u20$for$u20$f128_internal..f128_t..f128$GT$3neg17h526233a1fa0b3b88E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self) unnamed_addr #1 !dbg !4180 {
start:
  %1 = alloca i128, align 8
  %self.dbg.spill.i2 = alloca %"f128_t::f128"*, align 8
  %_2.i3 = alloca [16 x i8], align 1
  %2 = alloca i128, align 8
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %_2.i1 = alloca [16 x i8], align 1
  %_2.i.i = alloca [16 x i8], align 1
  %d.dbg.spill.i = alloca i128, align 8
  %_2.i = alloca [16 x i8], align 1
  %bits = alloca i128, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4183, metadata !DIExpression()), !dbg !4186
  call void @llvm.dbg.declare(metadata i128* %bits, metadata !4184, metadata !DIExpression()), !dbg !4187
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i2, metadata !3704, metadata !DIExpression()), !dbg !4188
  %3 = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4190
  %4 = bitcast [16 x i8]* %_2.i3 to i8*, !dbg !4190
  %5 = bitcast [16 x i8]* %3 to i8*, !dbg !4190
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 16, i1 false), !dbg !4190
  %6 = bitcast i128* %1 to [16 x i8]*, !dbg !4191
  %7 = bitcast [16 x i8]* %6 to i8*, !dbg !4191
  %8 = bitcast [16 x i8]* %_2.i3 to i8*, !dbg !4191
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 16, i1 false), !dbg !4191
  %9 = load i128, i128* %1, align 8, !dbg !4191
  store i128 %9, i128* %bits, align 8, !dbg !4192
  br label %bb1, !dbg !4192

bb1:                                              ; preds = %start
  store %"f128_t::f128"* bitcast (<{ [16 x i8] }>* @alloc912 to %"f128_t::f128"*), %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !3704, metadata !DIExpression()), !dbg !4193
  %10 = bitcast [16 x i8]* %_2.i1 to i8*, !dbg !4195
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @alloc912, i32 0, i32 0, i32 0), i64 16, i1 false), !dbg !4195
  %11 = bitcast i128* %2 to [16 x i8]*, !dbg !4196
  %12 = bitcast [16 x i8]* %11 to i8*, !dbg !4196
  %13 = bitcast [16 x i8]* %_2.i1 to i8*, !dbg !4196
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %13, i64 16, i1 false), !dbg !4196
  %14 = load i128, i128* %2, align 8, !dbg !4196
  br label %bb2, !dbg !4197

bb2:                                              ; preds = %bb1
  %15 = load i128, i128* %bits, align 8, !dbg !4198
  %16 = xor i128 %15, %14, !dbg !4198
  store i128 %16, i128* %bits, align 8, !dbg !4198
  %_6 = load i128, i128* %bits, align 8, !dbg !4199
  store i128 %_6, i128* %d.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i128* %d.dbg.spill.i, metadata !4200, metadata !DIExpression()), !dbg !4205
  %17 = bitcast [16 x i8]* %_2.i to i128*, !dbg !4207
  store i128 %_6, i128* %17, align 1, !dbg !4207
  call void @llvm.dbg.declare(metadata [16 x i8]* %_2.i, metadata !4208, metadata !DIExpression()), !dbg !4213
  %18 = bitcast [16 x i8]* %_2.i.i to i8*, !dbg !4215
  %19 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4215
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 16, i1 false), !dbg !4215
  %20 = bitcast %"f128_t::f128"* %0 to [16 x i8]*, !dbg !4216
  %21 = bitcast [16 x i8]* %20 to i8*, !dbg !4216
  %22 = bitcast [16 x i8]* %_2.i.i to i8*, !dbg !4216
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 %22, i64 16, i1 false), !dbg !4216
  br label %bb3, !dbg !4217

bb3:                                              ; preds = %bb2
  ret void, !dbg !4218
}

; f128_internal::f128_impl::<impl core::ops::arith::Add for f128_internal::f128_t::f128>::add
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Add$u20$for$u20$f128_internal..f128_t..f128$GT$3add17h0758a5ffde91ffccE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, %"f128_t::f128"* %other) unnamed_addr #0 !dbg !4219 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_4 = alloca %"f128_t::f128", align 1
  %_3 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4222, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %other, metadata !4223, metadata !DIExpression()), !dbg !4225
  %2 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4226
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4226
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4226
  %4 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !4227
  %5 = bitcast %"f128_t::f128"* %other to i8*, !dbg !4227
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 16, i1 false), !dbg !4227
  %6 = bitcast %"f128_t::f128"* %_3 to { i64, i64 }*, !dbg !4228
  %7 = load { i64, i64 }, { i64, i64 }* %6, align 1, !dbg !4228
  %8 = bitcast %"f128_t::f128"* %_4 to { i64, i64 }*, !dbg !4228
  %9 = load { i64, i64 }, { i64, i64 }* %8, align 1, !dbg !4228
  %10 = call { i64, i64 } @f128_add({ i64, i64 } %7, { i64, i64 } %9), !dbg !4228
  store { i64, i64 } %10, { i64, i64 }* %1, align 8, !dbg !4228
  %11 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4228
  %12 = bitcast { i64, i64 }* %1 to i8*, !dbg !4228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 8 %12, i64 16, i1 false), !dbg !4228
  br label %bb1, !dbg !4228

bb1:                                              ; preds = %start
  ret void, !dbg !4229
}

; f128_internal::f128_impl::<impl core::ops::arith::Sub for f128_internal::f128_t::f128>::sub
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Sub$u20$for$u20$f128_internal..f128_t..f128$GT$3sub17h56595469bd3ea1c7E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, %"f128_t::f128"* %other) unnamed_addr #0 !dbg !4230 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_4 = alloca %"f128_t::f128", align 1
  %_3 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4233, metadata !DIExpression()), !dbg !4235
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %other, metadata !4234, metadata !DIExpression()), !dbg !4236
  %2 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4237
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4237
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4237
  %4 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !4238
  %5 = bitcast %"f128_t::f128"* %other to i8*, !dbg !4238
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 16, i1 false), !dbg !4238
  %6 = bitcast %"f128_t::f128"* %_3 to { i64, i64 }*, !dbg !4239
  %7 = load { i64, i64 }, { i64, i64 }* %6, align 1, !dbg !4239
  %8 = bitcast %"f128_t::f128"* %_4 to { i64, i64 }*, !dbg !4239
  %9 = load { i64, i64 }, { i64, i64 }* %8, align 1, !dbg !4239
  %10 = call { i64, i64 } @f128_sub({ i64, i64 } %7, { i64, i64 } %9), !dbg !4239
  store { i64, i64 } %10, { i64, i64 }* %1, align 8, !dbg !4239
  %11 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4239
  %12 = bitcast { i64, i64 }* %1 to i8*, !dbg !4239
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 8 %12, i64 16, i1 false), !dbg !4239
  br label %bb1, !dbg !4239

bb1:                                              ; preds = %start
  ret void, !dbg !4240
}

; f128_internal::f128_impl::<impl core::ops::arith::Mul for f128_internal::f128_t::f128>::mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Mul$u20$for$u20$f128_internal..f128_t..f128$GT$3mul17h3dd26f8691880a4fE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, %"f128_t::f128"* %other) unnamed_addr #0 !dbg !4241 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_4 = alloca %"f128_t::f128", align 1
  %_3 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4244, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %other, metadata !4245, metadata !DIExpression()), !dbg !4247
  %2 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4248
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4248
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4248
  %4 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !4249
  %5 = bitcast %"f128_t::f128"* %other to i8*, !dbg !4249
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 16, i1 false), !dbg !4249
  %6 = bitcast %"f128_t::f128"* %_3 to { i64, i64 }*, !dbg !4250
  %7 = load { i64, i64 }, { i64, i64 }* %6, align 1, !dbg !4250
  %8 = bitcast %"f128_t::f128"* %_4 to { i64, i64 }*, !dbg !4250
  %9 = load { i64, i64 }, { i64, i64 }* %8, align 1, !dbg !4250
  %10 = call { i64, i64 } @f128_mul({ i64, i64 } %7, { i64, i64 } %9), !dbg !4250
  store { i64, i64 } %10, { i64, i64 }* %1, align 8, !dbg !4250
  %11 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4250
  %12 = bitcast { i64, i64 }* %1 to i8*, !dbg !4250
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 8 %12, i64 16, i1 false), !dbg !4250
  br label %bb1, !dbg !4250

bb1:                                              ; preds = %start
  ret void, !dbg !4251
}

; f128_internal::f128_impl::<impl core::ops::arith::MulAssign for f128_internal::f128_t::f128>::mul_assign
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl85_$LT$impl$u20$core..ops..arith..MulAssign$u20$for$u20$f128_internal..f128_t..f128$GT$10mul_assign17h11b5717fe6e93731E"(%"f128_t::f128"* align 1 %self, %"f128_t::f128"* %other) unnamed_addr #0 !dbg !4252 {
start:
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_5 = alloca %"f128_t::f128", align 1
  %_4 = alloca %"f128_t::f128", align 1
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4258, metadata !DIExpression()), !dbg !4260
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %other, metadata !4259, metadata !DIExpression()), !dbg !4261
  %0 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !4262
  %1 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4262
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 16, i1 false), !dbg !4262
  %2 = bitcast %"f128_t::f128"* %_5 to i8*, !dbg !4263
  %3 = bitcast %"f128_t::f128"* %other to i8*, !dbg !4263
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4263
; call f128_internal::f128_impl::<impl core::ops::arith::Mul for f128_internal::f128_t::f128>::mul
  call void @"_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Mul$u20$for$u20$f128_internal..f128_t..f128$GT$3mul17h3dd26f8691880a4fE"(%"f128_t::f128"* sret(%"f128_t::f128") %_3, %"f128_t::f128"* %_4, %"f128_t::f128"* %_5), !dbg !4262
  br label %bb1, !dbg !4262

bb1:                                              ; preds = %start
  %4 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4264
  %5 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4264
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 16, i1 false), !dbg !4264
  ret void, !dbg !4265
}

; f128_internal::f128_impl::<impl core::ops::arith::Div for f128_internal::f128_t::f128>::div
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Div$u20$for$u20$f128_internal..f128_t..f128$GT$3div17h69144dea03b00355E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, %"f128_t::f128"* %other) unnamed_addr #0 !dbg !4266 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_4 = alloca %"f128_t::f128", align 1
  %_3 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4269, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %other, metadata !4270, metadata !DIExpression()), !dbg !4272
  %2 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4273
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4273
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4273
  %4 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !4274
  %5 = bitcast %"f128_t::f128"* %other to i8*, !dbg !4274
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 16, i1 false), !dbg !4274
  %6 = bitcast %"f128_t::f128"* %_3 to { i64, i64 }*, !dbg !4275
  %7 = load { i64, i64 }, { i64, i64 }* %6, align 1, !dbg !4275
  %8 = bitcast %"f128_t::f128"* %_4 to { i64, i64 }*, !dbg !4275
  %9 = load { i64, i64 }, { i64, i64 }* %8, align 1, !dbg !4275
  %10 = call { i64, i64 } @f128_div({ i64, i64 } %7, { i64, i64 } %9), !dbg !4275
  store { i64, i64 } %10, { i64, i64 }* %1, align 8, !dbg !4275
  %11 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4275
  %12 = bitcast { i64, i64 }* %1 to i8*, !dbg !4275
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 8 %12, i64 16, i1 false), !dbg !4275
  br label %bb1, !dbg !4275

bb1:                                              ; preds = %start
  ret void, !dbg !4276
}

; f128_internal::f128_impl::<impl core::ops::arith::DivAssign for f128_internal::f128_t::f128>::div_assign
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl85_$LT$impl$u20$core..ops..arith..DivAssign$u20$for$u20$f128_internal..f128_t..f128$GT$10div_assign17hab154d055fe8b7d5E"(%"f128_t::f128"* align 1 %self, %"f128_t::f128"* %other) unnamed_addr #0 !dbg !4277 {
start:
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_5 = alloca %"f128_t::f128", align 1
  %_4 = alloca %"f128_t::f128", align 1
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4280, metadata !DIExpression()), !dbg !4282
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %other, metadata !4281, metadata !DIExpression()), !dbg !4283
  %0 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !4284
  %1 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4284
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 16, i1 false), !dbg !4284
  %2 = bitcast %"f128_t::f128"* %_5 to i8*, !dbg !4285
  %3 = bitcast %"f128_t::f128"* %other to i8*, !dbg !4285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4285
; call f128_internal::f128_impl::<impl core::ops::arith::Div for f128_internal::f128_t::f128>::div
  call void @"_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Div$u20$for$u20$f128_internal..f128_t..f128$GT$3div17h69144dea03b00355E"(%"f128_t::f128"* sret(%"f128_t::f128") %_3, %"f128_t::f128"* %_4, %"f128_t::f128"* %_5), !dbg !4284
  br label %bb1, !dbg !4284

bb1:                                              ; preds = %start
  %4 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4286
  %5 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4286
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 16, i1 false), !dbg !4286
  ret void, !dbg !4287
}

; f128_internal::f128_impl::<impl core::ops::arith::Rem for f128_internal::f128_t::f128>::rem
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Rem$u20$for$u20$f128_internal..f128_t..f128$GT$3rem17h730d929bbdbf3669E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, %"f128_t::f128"* %other) unnamed_addr #0 !dbg !4288 {
start:
  %1 = alloca { i64, i64 }, align 8
  %_4 = alloca %"f128_t::f128", align 1
  %_3 = alloca %"f128_t::f128", align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4291, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %other, metadata !4292, metadata !DIExpression()), !dbg !4294
  %2 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4295
  %3 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4295
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4295
  %4 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !4296
  %5 = bitcast %"f128_t::f128"* %other to i8*, !dbg !4296
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 16, i1 false), !dbg !4296
  %6 = bitcast %"f128_t::f128"* %_3 to { i64, i64 }*, !dbg !4297
  %7 = load { i64, i64 }, { i64, i64 }* %6, align 1, !dbg !4297
  %8 = bitcast %"f128_t::f128"* %_4 to { i64, i64 }*, !dbg !4297
  %9 = load { i64, i64 }, { i64, i64 }* %8, align 1, !dbg !4297
  %10 = call { i64, i64 } @fmodq_f({ i64, i64 } %7, { i64, i64 } %9), !dbg !4297
  store { i64, i64 } %10, { i64, i64 }* %1, align 8, !dbg !4297
  %11 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !4297
  %12 = bitcast { i64, i64 }* %1 to i8*, !dbg !4297
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 8 %12, i64 16, i1 false), !dbg !4297
  br label %bb1, !dbg !4297

bb1:                                              ; preds = %start
  ret void, !dbg !4298
}

; f128_internal::f128_impl::<impl core::cmp::PartialOrd for f128_internal::f128_t::f128>::partial_cmp
; Function Attrs: nonlazybind uwtable
define i8 @"_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$f128_internal..f128_t..f128$GT$11partial_cmp17h3d89024f8e082b9aE"(%"f128_t::f128"* align 1 %self, %"f128_t::f128"* align 1 %other) unnamed_addr #1 !dbg !4299 {
start:
  %gte.dbg.spill = alloca i8, align 1
  %lte.dbg.spill = alloca i8, align 1
  %other.dbg.spill = alloca %"f128_t::f128"*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_9 = alloca { i8, i8 }, align 1
  %_8 = alloca %"f128_t::f128", align 1
  %_7 = alloca %"f128_t::f128", align 1
  %_5 = alloca %"f128_t::f128", align 1
  %_4 = alloca %"f128_t::f128", align 1
  %0 = alloca i8, align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4317, metadata !DIExpression()), !dbg !4323
  store %"f128_t::f128"* %other, %"f128_t::f128"** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %other.dbg.spill, metadata !4318, metadata !DIExpression()), !dbg !4324
  %1 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !4325
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4325
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4325
  %3 = bitcast %"f128_t::f128"* %_5 to i8*, !dbg !4326
  %4 = bitcast %"f128_t::f128"* %other to i8*, !dbg !4326
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !4326
  %5 = bitcast %"f128_t::f128"* %_4 to { i64, i64 }*, !dbg !4327
  %6 = load { i64, i64 }, { i64, i64 }* %5, align 1, !dbg !4327
  %7 = bitcast %"f128_t::f128"* %_5 to { i64, i64 }*, !dbg !4327
  %8 = load { i64, i64 }, { i64, i64 }* %7, align 1, !dbg !4327
  %lte = call zeroext i8 @lteq({ i64, i64 } %6, { i64, i64 } %8), !dbg !4327
  store i8 %lte, i8* %lte.dbg.spill, align 1, !dbg !4327
  call void @llvm.dbg.declare(metadata i8* %lte.dbg.spill, metadata !4319, metadata !DIExpression()), !dbg !4328
  br label %bb1, !dbg !4327

bb1:                                              ; preds = %start
  %9 = bitcast %"f128_t::f128"* %_7 to i8*, !dbg !4329
  %10 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4329
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 1 %10, i64 16, i1 false), !dbg !4329
  %11 = bitcast %"f128_t::f128"* %_8 to i8*, !dbg !4330
  %12 = bitcast %"f128_t::f128"* %other to i8*, !dbg !4330
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %12, i64 16, i1 false), !dbg !4330
  %13 = bitcast %"f128_t::f128"* %_7 to { i64, i64 }*, !dbg !4331
  %14 = load { i64, i64 }, { i64, i64 }* %13, align 1, !dbg !4331
  %15 = bitcast %"f128_t::f128"* %_8 to { i64, i64 }*, !dbg !4331
  %16 = load { i64, i64 }, { i64, i64 }* %15, align 1, !dbg !4331
  %gte = call zeroext i8 @gteq({ i64, i64 } %14, { i64, i64 } %16), !dbg !4331
  store i8 %gte, i8* %gte.dbg.spill, align 1, !dbg !4331
  call void @llvm.dbg.declare(metadata i8* %gte.dbg.spill, metadata !4321, metadata !DIExpression()), !dbg !4332
  br label %bb2, !dbg !4331

bb2:                                              ; preds = %bb1
  %_10 = icmp ne i8 %lte, 0, !dbg !4333
  %_12 = icmp ne i8 %gte, 0, !dbg !4334
  %17 = bitcast { i8, i8 }* %_9 to i8*, !dbg !4335
  %18 = zext i1 %_10 to i8, !dbg !4335
  store i8 %18, i8* %17, align 1, !dbg !4335
  %19 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_9, i32 0, i32 1, !dbg !4335
  %20 = zext i1 %_12 to i8, !dbg !4335
  store i8 %20, i8* %19, align 1, !dbg !4335
  %21 = bitcast { i8, i8 }* %_9 to i8*, !dbg !4336
  %22 = load i8, i8* %21, align 1, !dbg !4336, !range !685, !noundef !26
  %23 = trunc i8 %22 to i1, !dbg !4336
  br i1 %23, label %bb4, label %bb3, !dbg !4336

bb3:                                              ; preds = %bb2
  %24 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_9, i32 0, i32 1, !dbg !4336
  %25 = load i8, i8* %24, align 1, !dbg !4336, !range !685, !noundef !26
  %26 = trunc i8 %25 to i1, !dbg !4336
  br i1 %26, label %bb7, label %bb6, !dbg !4336

bb4:                                              ; preds = %bb2
  %27 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_9, i32 0, i32 1, !dbg !4336
  %28 = load i8, i8* %27, align 1, !dbg !4336, !range !685, !noundef !26
  %29 = trunc i8 %28 to i1, !dbg !4336
  br i1 %29, label %bb5, label %bb8, !dbg !4336

bb8:                                              ; preds = %bb4
  store i8 -1, i8* %0, align 1, !dbg !4337
  br label %bb9, !dbg !4338

bb5:                                              ; preds = %bb4
  store i8 0, i8* %0, align 1, !dbg !4339
  br label %bb9, !dbg !4340

bb9:                                              ; preds = %bb6, %bb7, %bb8, %bb5
  %30 = load i8, i8* %0, align 1, !dbg !4341, !range !4342, !noundef !26
  ret i8 %30, !dbg !4341

bb6:                                              ; preds = %bb3
  store i8 2, i8* %0, align 1, !dbg !4343
  br label %bb9, !dbg !4343

bb7:                                              ; preds = %bb3
  store i8 1, i8* %0, align 1, !dbg !4344
  br label %bb9, !dbg !4345
}

; f128_internal::f128_impl::<impl core::cmp::PartialEq for f128_internal::f128_t::f128>::eq
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN13f128_internal9f128_impl78_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$f128_internal..f128_t..f128$GT$2eq17h64eb881a5d546e65E"(%"f128_t::f128"* align 1 %self, %"f128_t::f128"* align 1 %other) unnamed_addr #1 !dbg !4346 {
start:
  %other.dbg.spill = alloca %"f128_t::f128"*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_5 = alloca %"f128_t::f128", align 1
  %_4 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4351, metadata !DIExpression()), !dbg !4353
  store %"f128_t::f128"* %other, %"f128_t::f128"** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %other.dbg.spill, metadata !4352, metadata !DIExpression()), !dbg !4354
  %0 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !4355
  %1 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4355
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 16, i1 false), !dbg !4355
  %2 = bitcast %"f128_t::f128"* %_5 to i8*, !dbg !4356
  %3 = bitcast %"f128_t::f128"* %other to i8*, !dbg !4356
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4356
  %4 = bitcast %"f128_t::f128"* %_4 to { i64, i64 }*, !dbg !4357
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !4357
  %6 = bitcast %"f128_t::f128"* %_5 to { i64, i64 }*, !dbg !4357
  %7 = load { i64, i64 }, { i64, i64 }* %6, align 1, !dbg !4357
  %_3 = call zeroext i8 @eqq({ i64, i64 } %5, { i64, i64 } %7), !dbg !4357
  br label %bb1, !dbg !4357

bb1:                                              ; preds = %start
  %8 = icmp ne i8 %_3, 0, !dbg !4357
  ret i1 %8, !dbg !4358
}

; f128_internal::f128_impl::<impl core::cmp::PartialEq for f128_internal::f128_t::f128>::ne
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN13f128_internal9f128_impl78_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$f128_internal..f128_t..f128$GT$2ne17hc22ed94833ae6761E"(%"f128_t::f128"* align 1 %self, %"f128_t::f128"* align 1 %other) unnamed_addr #1 !dbg !4359 {
start:
  %other.dbg.spill = alloca %"f128_t::f128"*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_5 = alloca %"f128_t::f128", align 1
  %_4 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4361, metadata !DIExpression()), !dbg !4363
  store %"f128_t::f128"* %other, %"f128_t::f128"** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %other.dbg.spill, metadata !4362, metadata !DIExpression()), !dbg !4364
  %0 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !4365
  %1 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4365
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 16, i1 false), !dbg !4365
  %2 = bitcast %"f128_t::f128"* %_5 to i8*, !dbg !4366
  %3 = bitcast %"f128_t::f128"* %other to i8*, !dbg !4366
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4366
  %4 = bitcast %"f128_t::f128"* %_4 to { i64, i64 }*, !dbg !4367
  %5 = load { i64, i64 }, { i64, i64 }* %4, align 1, !dbg !4367
  %6 = bitcast %"f128_t::f128"* %_5 to { i64, i64 }*, !dbg !4367
  %7 = load { i64, i64 }, { i64, i64 }* %6, align 1, !dbg !4367
  %_3 = call zeroext i8 @neqq({ i64, i64 } %5, { i64, i64 } %7), !dbg !4367
  br label %bb1, !dbg !4367

bb1:                                              ; preds = %start
  %8 = icmp ne i8 %_3, 0, !dbg !4367
  ret i1 %8, !dbg !4368
}

; f128_internal::f128_t::f128::to_string_fmt
; Function Attrs: nonlazybind uwtable
define void @_ZN13f128_internal6f128_t4f12813to_string_fmt17h23da4fb8c9f33463E(%"core::option::Option<alloc::string::String>"* sret(%"core::option::Option<alloc::string::String>") %0, %"f128_t::f128"* align 1 %self, [0 x i8]* align 1 %1, i64 %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4369 {
start:
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %n.dbg.spill2 = alloca i64, align 8
  %n.dbg.spill = alloca i32, align 4
  %e.dbg.spill = alloca { i8*, i64 }, align 8
  %3 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_38 = alloca i8, align 1
  %_36 = alloca %"alloc::string::String", align 8
  %_34 = alloca i64, align 8
  %_29 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  %_20 = alloca %"f128_t::f128", align 1
  %_5 = alloca %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", align 8
  %cstr = alloca { i8*, i64 }, align 8
  %buf = alloca [128 x i8], align 1
  %fmt = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %fmt, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %fmt, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4384, metadata !DIExpression()), !dbg !4398
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %fmt, metadata !4385, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !4386, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %cstr, metadata !4388, metadata !DIExpression()), !dbg !4401
  store i8 0, i8* %_38, align 1, !dbg !4402
  %6 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !4403
  call void @llvm.memset.p0i8.i64(i8* align 1 %6, i8 0, i64 128, i1 false), !dbg !4403
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %7 = invoke { [0 x i8]*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h070ed05afd8b3047E"({ [0 x i8]*, i64 }* align 8 %fmt)
          to label %bb1 unwind label %cleanup, !dbg !4404

bb26:                                             ; preds = %cleanup
  %8 = load i8, i8* %_38, align 1, !dbg !4405, !range !685, !noundef !26
  %9 = trunc i8 %8 to i1, !dbg !4405
  br i1 %9, label %bb25, label %bb19, !dbg !4405

cleanup:                                          ; preds = %bb15, %bb14, %bb13, %bb12, %bb11, %bb9, %bb8, %bb7, %bb6, %bb23, %bb24, %bb22, %bb1, %start
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb26

bb1:                                              ; preds = %start
  %_6.0 = extractvalue { [0 x i8]*, i64 } %7, 0, !dbg !4404
  %_6.1 = extractvalue { [0 x i8]*, i64 } %7, 1, !dbg !4404
; invoke alloc::ffi::c_str::CString::new
  invoke void @_ZN5alloc3ffi5c_str7CString3new17h0cecf027ce58c664E(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>") %_5, [0 x i8]* align 1 %_6.0, i64 %_6.1)
          to label %bb2 unwind label %cleanup, !dbg !4406

bb2:                                              ; preds = %bb1
  %15 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_5 to i64*, !dbg !4406
  %_8 = load i64, i64* %15, align 8, !dbg !4406, !range !897, !noundef !26
  switch i64 %_8, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ], !dbg !4407

bb4:                                              ; preds = %bb2
  unreachable, !dbg !4406

bb5:                                              ; preds = %bb2
  %16 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_5 to %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok"*, !dbg !4408
  %17 = getelementptr inbounds %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok", %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok"* %16, i32 0, i32 1, !dbg !4408
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %17, i32 0, i32 0, !dbg !4408
  %e.0 = load i8*, i8** %18, align 8, !dbg !4408, !nonnull !26, !align !353, !noundef !26
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %17, i32 0, i32 1, !dbg !4408
  %e.1 = load i64, i64* %19, align 8, !dbg !4408
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !4408
  store i8* %e.0, i8** %20, align 8, !dbg !4408
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !4408
  store i64 %e.1, i64* %21, align 8, !dbg !4408
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %e.dbg.spill, metadata !4390, metadata !DIExpression()), !dbg !4409
  store i8 1, i8* %_38, align 1, !dbg !4410
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %cstr, i32 0, i32 0, !dbg !4410
  store i8* %e.0, i8** %22, align 8, !dbg !4410
  %23 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %cstr, i32 0, i32 1, !dbg !4410
  store i64 %e.1, i64* %23, align 8, !dbg !4410
  %24 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_5 to i64*, !dbg !4411
  %_40 = load i64, i64* %24, align 8, !dbg !4411, !range !897, !noundef !26
  %25 = icmp eq i64 %_40, 0, !dbg !4411
  br i1 %25, label %bb23, label %bb24, !dbg !4411

bb3:                                              ; preds = %bb2
  %26 = bitcast %"core::option::Option<alloc::string::String>"* %0 to {}**, !dbg !4412
  store {}* null, {}** %26, align 8, !dbg !4412
  %27 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_5 to i64*, !dbg !4411
  %_39 = load i64, i64* %27, align 8, !dbg !4411, !range !897, !noundef !26
  %28 = icmp eq i64 %_39, 0, !dbg !4411
  br i1 %28, label %bb21, label %bb22, !dbg !4411

bb21:                                             ; preds = %bb22, %bb3
  store i8 0, i8* %_38, align 1, !dbg !4405
  br label %bb18, !dbg !4413

bb22:                                             ; preds = %bb3
; invoke core::ptr::drop_in_place<core::result::Result<alloc::ffi::c_str::CString,alloc::ffi::c_str::NulError>>
  invoke void @"_ZN4core3ptr105drop_in_place$LT$core..result..Result$LT$alloc..ffi..c_str..CString$C$alloc..ffi..c_str..NulError$GT$$GT$17h594fea4b75c17037E"(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_5)
          to label %bb21 unwind label %cleanup, !dbg !4411

bb18:                                             ; preds = %bb17, %bb21
  ret void, !dbg !4414

bb23:                                             ; preds = %bb24, %bb5
  %_13.0 = bitcast [128 x i8]* %buf to [0 x i8]*, !dbg !4415
; invoke core::slice::<impl [T]>::as_mut_ptr
  %_12 = invoke i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17he1bead3ba556669aE"([0 x i8]* align 1 %_13.0, i64 128)
          to label %bb6 unwind label %cleanup, !dbg !4415

bb24:                                             ; preds = %bb5
; invoke core::ptr::drop_in_place<core::result::Result<alloc::ffi::c_str::CString,alloc::ffi::c_str::NulError>>
  invoke void @"_ZN4core3ptr105drop_in_place$LT$core..result..Result$LT$alloc..ffi..c_str..CString$C$alloc..ffi..c_str..NulError$GT$$GT$17h594fea4b75c17037E"(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_5)
          to label %bb23 unwind label %cleanup, !dbg !4411

bb6:                                              ; preds = %bb23
; invoke <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
  %29 = invoke { %"core::ffi::c_str::CStr"*, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17ha1630efc3d7688f4E"({ i8*, i64 }* align 8 %cstr)
          to label %bb7 unwind label %cleanup, !dbg !4416

bb7:                                              ; preds = %bb6
  %_18.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %29, 0, !dbg !4416
  %_18.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %29, 1, !dbg !4416
; invoke core::ffi::c_str::CStr::as_ptr
  %_16 = invoke i8* @_ZN4core3ffi5c_str4CStr6as_ptr17h5d031a68d4be8406E(%"core::ffi::c_str::CStr"* align 1 %_18.0, i64 %_18.1)
          to label %bb8 unwind label %cleanup, !dbg !4416

bb8:                                              ; preds = %bb7
; invoke <f128_internal::f128_t::f128 as core::clone::Clone>::clone
  invoke void @"_ZN66_$LT$f128_internal..f128_t..f128$u20$as$u20$core..clone..Clone$GT$5clone17hc02454b05c891117E"(%"f128_t::f128"* sret(%"f128_t::f128") %_20, %"f128_t::f128"* align 1 %self)
          to label %bb9 unwind label %cleanup, !dbg !4417

bb9:                                              ; preds = %bb8
  %30 = bitcast %"f128_t::f128"* %_20 to { i64, i64 }*, !dbg !4418
  %31 = load { i64, i64 }, { i64, i64 }* %30, align 1, !dbg !4418
  %n = invoke i32 @qtostr(i8* %_12, i64 128, i8* %_16, { i64, i64 } %31)
          to label %bb10 unwind label %cleanup, !dbg !4418

bb10:                                             ; preds = %bb9
  store i32 %n, i32* %n.dbg.spill, align 4, !dbg !4418
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !4392, metadata !DIExpression()), !dbg !4419
  %_23 = icmp sgt i32 %n, 0, !dbg !4420
  %_22 = xor i1 %_23, true, !dbg !4421
  br i1 %_22, label %bb11, label %bb12, !dbg !4421

bb12:                                             ; preds = %bb10
  %n1 = sext i32 %n to i64, !dbg !4422
  store i64 %n1, i64* %n.dbg.spill2, align 8, !dbg !4422
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill2, metadata !4394, metadata !DIExpression()), !dbg !4423
  store i64 %n1, i64* %_34, align 8, !dbg !4424
  %32 = load i64, i64* %_34, align 8, !dbg !4425
; invoke core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %33 = invoke { [0 x i8]*, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h3df2678a0c5e8f1eE"([128 x i8]* align 1 %buf, i64 %32, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1198 to %"core::panic::location::Location"*))
          to label %bb13 unwind label %cleanup, !dbg !4425

bb11:                                             ; preds = %bb10
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [23 x i8] }>* @alloc1194 to [0 x i8]*), i64 23, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1196 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup, !dbg !4421

unreachable:                                      ; preds = %bb11
  unreachable

bb13:                                             ; preds = %bb12
  %_32.0 = extractvalue { [0 x i8]*, i64 } %33, 0, !dbg !4425
  %_32.1 = extractvalue { [0 x i8]*, i64 } %33, 1, !dbg !4425
; invoke core::str::converts::from_utf8
  invoke void @_ZN4core3str8converts9from_utf817h44aac8e9d8892328E(%"core::result::Result<&str, core::str::error::Utf8Error>"* sret(%"core::result::Result<&str, core::str::error::Utf8Error>") %_29, [0 x i8]* align 1 %_32.0, i64 %_32.1)
          to label %bb14 unwind label %cleanup, !dbg !4426

bb14:                                             ; preds = %bb13
; invoke core::result::Result<T,E>::unwrap
  %34 = invoke { [0 x i8]*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h7c6a2d7f63435a18E"(%"core::result::Result<&str, core::str::error::Utf8Error>"* %_29, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1200 to %"core::panic::location::Location"*))
          to label %bb15 unwind label %cleanup, !dbg !4426

bb15:                                             ; preds = %bb14
  %s.0 = extractvalue { [0 x i8]*, i64 } %34, 0, !dbg !4426
  %s.1 = extractvalue { [0 x i8]*, i64 } %34, 1, !dbg !4426
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0, !dbg !4426
  store [0 x i8]* %s.0, [0 x i8]** %35, align 8, !dbg !4426
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1, !dbg !4426
  store i64 %s.1, i64* %36, align 8, !dbg !4426
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !4396, metadata !DIExpression()), !dbg !4427
; invoke <str as alloc::string::ToString>::to_string
  invoke void @"_ZN47_$LT$str$u20$as$u20$alloc..string..ToString$GT$9to_string17hb40005f8b224a7a6E"(%"alloc::string::String"* sret(%"alloc::string::String") %_36, [0 x i8]* align 1 %s.0, i64 %s.1)
          to label %bb16 unwind label %cleanup, !dbg !4428

bb16:                                             ; preds = %bb15
  %37 = bitcast %"core::option::Option<alloc::string::String>"* %0 to %"core::option::Option<alloc::string::String>::Some"*, !dbg !4429
  %38 = bitcast %"core::option::Option<alloc::string::String>::Some"* %37 to %"alloc::string::String"*, !dbg !4429
  %39 = bitcast %"alloc::string::String"* %38 to i8*, !dbg !4429
  %40 = bitcast %"alloc::string::String"* %_36 to i8*, !dbg !4429
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false), !dbg !4429
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h60597de3fa84e837E"({ i8*, i64 }* %cstr)
          to label %bb17 unwind label %cleanup3, !dbg !4405

bb19:                                             ; preds = %cleanup3, %bb25, %bb26
  br label %bb20, !dbg !4413

bb25:                                             ; preds = %bb26
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h60597de3fa84e837E"({ i8*, i64 }* %cstr) #13
          to label %bb19 unwind label %abort, !dbg !4405

abort:                                            ; preds = %bb25
  %41 = landingpad { i8*, i32 }
          cleanup, !dbg !4430
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #14, !dbg !4430
  unreachable, !dbg !4430

cleanup3:                                         ; preds = %bb16
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  %44 = extractvalue { i8*, i32 } %42, 1
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %43, i8** %45, align 8
  %46 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %44, i32* %46, align 8
  br label %bb19

bb17:                                             ; preds = %bb16
  store i8 0, i8* %_38, align 1, !dbg !4405
  br label %bb18, !dbg !4413

bb20:                                             ; preds = %bb19
  %47 = bitcast { i8*, i32 }* %3 to i8**, !dbg !4430
  %48 = load i8*, i8** %47, align 8, !dbg !4430
  %49 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !4430
  %50 = load i32, i32* %49, align 8, !dbg !4430
  %51 = insertvalue { i8*, i32 } undef, i8* %48, 0, !dbg !4430
  %52 = insertvalue { i8*, i32 } %51, i32 %50, 1, !dbg !4430
  resume { i8*, i32 } %52, !dbg !4430
}

; f128_internal::f128_t::f128::exp_bits
; Function Attrs: nonlazybind uwtable
define i32 @_ZN13f128_internal6f128_t4f1288exp_bits17hb4918e3c047f86c3E(%"f128_t::f128"* align 1 %self) unnamed_addr #1 !dbg !4431 {
start:
  %0 = alloca i128, align 8
  %self.dbg.spill.i1 = alloca %"f128_t::f128"*, align 8
  %_2.i2 = alloca [16 x i8], align 1
  %1 = alloca i128, align 8
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %_2.i = alloca [16 x i8], align 1
  %exp_bits.dbg.spill = alloca i128, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4435, metadata !DIExpression()), !dbg !4438
  store %"f128_t::f128"* bitcast (<{ [16 x i8] }>* @alloc867 to %"f128_t::f128"*), %"f128_t::f128"** %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i1, metadata !3704, metadata !DIExpression()), !dbg !4439
  %2 = bitcast [16 x i8]* %_2.i2 to i8*, !dbg !4441
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @alloc867, i32 0, i32 0, i32 0), i64 16, i1 false), !dbg !4441
  %3 = bitcast i128* %0 to [16 x i8]*, !dbg !4442
  %4 = bitcast [16 x i8]* %3 to i8*, !dbg !4442
  %5 = bitcast [16 x i8]* %_2.i2 to i8*, !dbg !4442
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 16, i1 false), !dbg !4442
  %6 = load i128, i128* %0, align 8, !dbg !4442
  store i128 %6, i128* %exp_bits.dbg.spill, align 8, !dbg !4443
  call void @llvm.dbg.declare(metadata i128* %exp_bits.dbg.spill, metadata !4436, metadata !DIExpression()), !dbg !4444
  br label %bb1, !dbg !4443

bb1:                                              ; preds = %start
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !3704, metadata !DIExpression()), !dbg !4445
  %7 = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4447
  %8 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4447
  %9 = bitcast [16 x i8]* %7 to i8*, !dbg !4447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %9, i64 16, i1 false), !dbg !4447
  %10 = bitcast i128* %1 to [16 x i8]*, !dbg !4448
  %11 = bitcast [16 x i8]* %10 to i8*, !dbg !4448
  %12 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4448
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %12, i64 16, i1 false), !dbg !4448
  %13 = load i128, i128* %1, align 8, !dbg !4448
  br label %bb2, !dbg !4449

bb2:                                              ; preds = %bb1
  %_5 = and i128 %13, %6, !dbg !4450
  %_9.0 = lshr i128 %_5, 112, !dbg !4451
  br label %bb3, !dbg !4451

bb3:                                              ; preds = %bb2
  %14 = trunc i128 %_9.0 to i32, !dbg !4451
  ret i32 %14, !dbg !4452
}

; f128_internal::f128_t::f128::fract_bits
; Function Attrs: nonlazybind uwtable
define i128 @_ZN13f128_internal6f128_t4f12810fract_bits17hb63fd840d969f861E(%"f128_t::f128"* align 1 %self) unnamed_addr #1 !dbg !4453 {
start:
  %0 = alloca i128, align 8
  %self.dbg.spill.i1 = alloca %"f128_t::f128"*, align 8
  %_2.i2 = alloca [16 x i8], align 1
  %1 = alloca i128, align 8
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %_2.i = alloca [16 x i8], align 1
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4455, metadata !DIExpression()), !dbg !4456
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i1, metadata !3704, metadata !DIExpression()), !dbg !4457
  %2 = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4459
  %3 = bitcast [16 x i8]* %_2.i2 to i8*, !dbg !4459
  %4 = bitcast [16 x i8]* %2 to i8*, !dbg !4459
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !4459
  %5 = bitcast i128* %0 to [16 x i8]*, !dbg !4460
  %6 = bitcast [16 x i8]* %5 to i8*, !dbg !4460
  %7 = bitcast [16 x i8]* %_2.i2 to i8*, !dbg !4460
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 16, i1 false), !dbg !4460
  %8 = load i128, i128* %0, align 8, !dbg !4460
  br label %bb1, !dbg !4461

bb1:                                              ; preds = %start
  store %"f128_t::f128"* bitcast (<{ [16 x i8] }>* @alloc1088 to %"f128_t::f128"*), %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !3704, metadata !DIExpression()), !dbg !4462
  %9 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4464
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 1 getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @alloc1088, i32 0, i32 0, i32 0), i64 16, i1 false), !dbg !4464
  %10 = bitcast i128* %1 to [16 x i8]*, !dbg !4465
  %11 = bitcast [16 x i8]* %10 to i8*, !dbg !4465
  %12 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4465
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %12, i64 16, i1 false), !dbg !4465
  %13 = load i128, i128* %1, align 8, !dbg !4465
  br label %bb2, !dbg !4466

bb2:                                              ; preds = %bb1
  %14 = and i128 %8, %13, !dbg !4461
  ret i128 %14, !dbg !4467
}

; f128_internal::f128_t::f128::bitwise_eq
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN13f128_internal6f128_t4f12810bitwise_eq17hbf16f9dc3eac3866E(%"f128_t::f128"* %self, %"f128_t::f128"* %other) unnamed_addr #1 !dbg !4468 {
start:
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4472, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %other, metadata !4473, metadata !DIExpression()), !dbg !4475
  %_3 = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4476
  %_4 = bitcast %"f128_t::f128"* %other to [16 x i8]*, !dbg !4477
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %0 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17hc6d3ce497554ef29E"([16 x i8]* align 1 %_3, [16 x i8]* align 1 %_4), !dbg !4476
  br label %bb1, !dbg !4476

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !4478
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<u8> for f128_internal::f128_t::f128>::shr
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$core..ops..bit..Shr$LT$u8$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17he1e0aebb8af27d58E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i8 %other) unnamed_addr #0 !dbg !4479 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i8, align 1
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4484, metadata !DIExpression()), !dbg !4486
  store i8 %other, i8* %other.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %other.dbg.spill, metadata !4485, metadata !DIExpression()), !dbg !4487
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !4493
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4495
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !4495
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4495
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4495
  br label %bb1, !dbg !4496

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !4497
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !4497
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !4497
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !4497
  %_4 = load i128, i128* %1, align 8, !dbg !4497
  br label %bb2, !dbg !4497

bb2:                                              ; preds = %bb1
  %7 = and i8 %other, -128, !dbg !4497
  %_8.1 = icmp ne i8 %7, 0, !dbg !4497
  %8 = zext i8 %other to i128, !dbg !4497
  %9 = and i128 %8, 127, !dbg !4497
  %_8.0 = lshr i128 %_4, %9, !dbg !4497
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4497
  br i1 %10, label %panic, label %bb3, !dbg !4497

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !4498
  store i128 %_8.0, i128* %11, align 1, !dbg !4498
  br label %bb4, !dbg !4498

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1202 to %"core::panic::location::Location"*)) #12, !dbg !4497
  unreachable, !dbg !4497

bb4:                                              ; preds = %bb3
  ret void, !dbg !4499
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<&u8> for &f128_internal::f128_t::f128>::shr
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl95_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$u8$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h1cb486e9bb7ad6bdE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i8* align 1 %other) unnamed_addr #1 !dbg !4500 {
start:
  %other.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4506, metadata !DIExpression()), !dbg !4508
  store i8* %other, i8** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !4507, metadata !DIExpression()), !dbg !4509
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4510
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4510
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4510
  %_4 = load i8, i8* %other, align 1, !dbg !4511
; call f128_internal::f128_impl::<impl core::ops::bit::Shr<u8> for f128_internal::f128_t::f128>::shr
  call void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$core..ops..bit..Shr$LT$u8$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17he1e0aebb8af27d58E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i8 %_4), !dbg !4512
  br label %bb1, !dbg !4512

bb1:                                              ; preds = %start
  ret void, !dbg !4513
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<u16> for f128_internal::f128_t::f128>::shr
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shr$LT$u16$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h2a82f1d573427cf2E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i16 %other) unnamed_addr #0 !dbg !4514 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i16, align 2
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4519, metadata !DIExpression()), !dbg !4521
  store i16 %other, i16* %other.dbg.spill, align 2
  call void @llvm.dbg.declare(metadata i16* %other.dbg.spill, metadata !4520, metadata !DIExpression()), !dbg !4522
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !4523
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4525
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !4525
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4525
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4525
  br label %bb1, !dbg !4526

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !4527
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !4527
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !4527
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !4527
  %_4 = load i128, i128* %1, align 8, !dbg !4527
  br label %bb2, !dbg !4527

bb2:                                              ; preds = %bb1
  %7 = and i16 %other, -128, !dbg !4527
  %_8.1 = icmp ne i16 %7, 0, !dbg !4527
  %8 = zext i16 %other to i128, !dbg !4527
  %9 = and i128 %8, 127, !dbg !4527
  %_8.0 = lshr i128 %_4, %9, !dbg !4527
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4527
  br i1 %10, label %panic, label %bb3, !dbg !4527

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !4528
  store i128 %_8.0, i128* %11, align 1, !dbg !4528
  br label %bb4, !dbg !4528

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1204 to %"core::panic::location::Location"*)) #12, !dbg !4527
  unreachable, !dbg !4527

bb4:                                              ; preds = %bb3
  ret void, !dbg !4529
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<&u16> for &f128_internal::f128_t::f128>::shr
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$u16$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h94c492346ef93255E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i16* align 2 %other) unnamed_addr #1 !dbg !4530 {
start:
  %other.dbg.spill = alloca i16*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4536, metadata !DIExpression()), !dbg !4538
  store i16* %other, i16** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i16** %other.dbg.spill, metadata !4537, metadata !DIExpression()), !dbg !4539
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4540
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4540
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4540
  %_4 = load i16, i16* %other, align 2, !dbg !4541
; call f128_internal::f128_impl::<impl core::ops::bit::Shr<u16> for f128_internal::f128_t::f128>::shr
  call void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shr$LT$u16$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h2a82f1d573427cf2E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i16 %_4), !dbg !4542
  br label %bb1, !dbg !4542

bb1:                                              ; preds = %start
  ret void, !dbg !4543
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<u32> for f128_internal::f128_t::f128>::shr
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shr$LT$u32$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h4309ae0b3b19be72E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i32 %other) unnamed_addr #0 !dbg !4544 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i32, align 4
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4549, metadata !DIExpression()), !dbg !4551
  store i32 %other, i32* %other.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %other.dbg.spill, metadata !4550, metadata !DIExpression()), !dbg !4552
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !4553
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4555
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !4555
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4555
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4555
  br label %bb1, !dbg !4556

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !4557
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !4557
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !4557
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !4557
  %_4 = load i128, i128* %1, align 8, !dbg !4557
  br label %bb2, !dbg !4557

bb2:                                              ; preds = %bb1
  %7 = and i32 %other, -128, !dbg !4557
  %_8.1 = icmp ne i32 %7, 0, !dbg !4557
  %8 = zext i32 %other to i128, !dbg !4557
  %9 = and i128 %8, 127, !dbg !4557
  %_8.0 = lshr i128 %_4, %9, !dbg !4557
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4557
  br i1 %10, label %panic, label %bb3, !dbg !4557

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !4558
  store i128 %_8.0, i128* %11, align 1, !dbg !4558
  br label %bb4, !dbg !4558

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1206 to %"core::panic::location::Location"*)) #12, !dbg !4557
  unreachable, !dbg !4557

bb4:                                              ; preds = %bb3
  ret void, !dbg !4559
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<&u32> for &f128_internal::f128_t::f128>::shr
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$u32$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h5cd407f4cd73e4c9E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i32* align 4 %other) unnamed_addr #1 !dbg !4560 {
start:
  %other.dbg.spill = alloca i32*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4566, metadata !DIExpression()), !dbg !4568
  store i32* %other, i32** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %other.dbg.spill, metadata !4567, metadata !DIExpression()), !dbg !4569
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4570
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4570
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4570
  %_4 = load i32, i32* %other, align 4, !dbg !4571
; call f128_internal::f128_impl::<impl core::ops::bit::Shr<u32> for f128_internal::f128_t::f128>::shr
  call void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shr$LT$u32$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h4309ae0b3b19be72E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i32 %_4), !dbg !4572
  br label %bb1, !dbg !4572

bb1:                                              ; preds = %start
  ret void, !dbg !4573
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<u64> for f128_internal::f128_t::f128>::shr
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shr$LT$u64$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17he12954cd475c0c3bE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i64 %other) unnamed_addr #0 !dbg !4574 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i64, align 8
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4579, metadata !DIExpression()), !dbg !4581
  store i64 %other, i64* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %other.dbg.spill, metadata !4580, metadata !DIExpression()), !dbg !4582
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !4583
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4585
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !4585
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4585
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4585
  br label %bb1, !dbg !4586

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !4587
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !4587
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !4587
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !4587
  %_4 = load i128, i128* %1, align 8, !dbg !4587
  br label %bb2, !dbg !4587

bb2:                                              ; preds = %bb1
  %7 = and i64 %other, -128, !dbg !4587
  %_8.1 = icmp ne i64 %7, 0, !dbg !4587
  %8 = zext i64 %other to i128, !dbg !4587
  %9 = and i128 %8, 127, !dbg !4587
  %_8.0 = lshr i128 %_4, %9, !dbg !4587
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4587
  br i1 %10, label %panic, label %bb3, !dbg !4587

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !4588
  store i128 %_8.0, i128* %11, align 1, !dbg !4588
  br label %bb4, !dbg !4588

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1208 to %"core::panic::location::Location"*)) #12, !dbg !4587
  unreachable, !dbg !4587

bb4:                                              ; preds = %bb3
  ret void, !dbg !4589
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<&u64> for &f128_internal::f128_t::f128>::shr
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$u64$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17hd9cdd1f7a552e6c9E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i64* align 8 %other) unnamed_addr #1 !dbg !4590 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4596, metadata !DIExpression()), !dbg !4598
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !4597, metadata !DIExpression()), !dbg !4599
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4600
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4600
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4600
  %_4 = load i64, i64* %other, align 8, !dbg !4601
; call f128_internal::f128_impl::<impl core::ops::bit::Shr<u64> for f128_internal::f128_t::f128>::shr
  call void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shr$LT$u64$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17he12954cd475c0c3bE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i64 %_4), !dbg !4602
  br label %bb1, !dbg !4602

bb1:                                              ; preds = %start
  ret void, !dbg !4603
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<u128> for f128_internal::f128_t::f128>::shr
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$core..ops..bit..Shr$LT$u128$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17ha0fc1fa06b96eef9E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i128 %other) unnamed_addr #0 !dbg !4604 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i128, align 8
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4609, metadata !DIExpression()), !dbg !4611
  store i128 %other, i128* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i128* %other.dbg.spill, metadata !4610, metadata !DIExpression()), !dbg !4612
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !4613
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4615
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !4615
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4615
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4615
  br label %bb1, !dbg !4616

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !4617
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !4617
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !4617
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !4617
  %_4 = load i128, i128* %1, align 8, !dbg !4617
  br label %bb2, !dbg !4617

bb2:                                              ; preds = %bb1
  %7 = and i128 %other, -128, !dbg !4617
  %_8.1 = icmp ne i128 %7, 0, !dbg !4617
  %8 = and i128 %other, 127, !dbg !4617
  %_8.0 = lshr i128 %_4, %8, !dbg !4617
  %9 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4617
  br i1 %9, label %panic, label %bb3, !dbg !4617

bb3:                                              ; preds = %bb2
  %10 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !4618
  store i128 %_8.0, i128* %10, align 1, !dbg !4618
  br label %bb4, !dbg !4618

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1210 to %"core::panic::location::Location"*)) #12, !dbg !4617
  unreachable, !dbg !4617

bb4:                                              ; preds = %bb3
  ret void, !dbg !4619
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<&u128> for &f128_internal::f128_t::f128>::shr
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl97_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$u128$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h0545889b09938a7eE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i128* align 8 %other) unnamed_addr #1 !dbg !4620 {
start:
  %other.dbg.spill = alloca i128*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4626, metadata !DIExpression()), !dbg !4628
  store i128* %other, i128** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i128** %other.dbg.spill, metadata !4627, metadata !DIExpression()), !dbg !4629
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4630
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4630
  %_4 = load i128, i128* %other, align 8, !dbg !4631
; call f128_internal::f128_impl::<impl core::ops::bit::Shr<u128> for f128_internal::f128_t::f128>::shr
  call void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$core..ops..bit..Shr$LT$u128$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17ha0fc1fa06b96eef9E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i128 %_4), !dbg !4632
  br label %bb1, !dbg !4632

bb1:                                              ; preds = %start
  ret void, !dbg !4633
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<usize> for f128_internal::f128_t::f128>::shr
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl90_$LT$impl$u20$core..ops..bit..Shr$LT$usize$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17hdd7de2446dae2c6dE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i64 %other) unnamed_addr #0 !dbg !4634 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i64, align 8
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4639, metadata !DIExpression()), !dbg !4641
  store i64 %other, i64* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %other.dbg.spill, metadata !4640, metadata !DIExpression()), !dbg !4642
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !4643
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4645
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !4645
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4645
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4645
  br label %bb1, !dbg !4646

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !4647
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !4647
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !4647
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !4647
  %_4 = load i128, i128* %1, align 8, !dbg !4647
  br label %bb2, !dbg !4647

bb2:                                              ; preds = %bb1
  %7 = and i64 %other, -128, !dbg !4647
  %_8.1 = icmp ne i64 %7, 0, !dbg !4647
  %8 = zext i64 %other to i128, !dbg !4647
  %9 = and i128 %8, 127, !dbg !4647
  %_8.0 = lshr i128 %_4, %9, !dbg !4647
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4647
  br i1 %10, label %panic, label %bb3, !dbg !4647

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !4648
  store i128 %_8.0, i128* %11, align 1, !dbg !4648
  br label %bb4, !dbg !4648

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1212 to %"core::panic::location::Location"*)) #12, !dbg !4647
  unreachable, !dbg !4647

bb4:                                              ; preds = %bb3
  ret void, !dbg !4649
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<&usize> for &f128_internal::f128_t::f128>::shr
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl98_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$usize$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h1ff629f3751db810E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i64* align 8 %other) unnamed_addr #1 !dbg !4650 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4655, metadata !DIExpression()), !dbg !4657
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !4656, metadata !DIExpression()), !dbg !4658
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4659
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4659
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4659
  %_4 = load i64, i64* %other, align 8, !dbg !4660
; call f128_internal::f128_impl::<impl core::ops::bit::Shr<usize> for f128_internal::f128_t::f128>::shr
  call void @"_ZN13f128_internal9f128_impl90_$LT$impl$u20$core..ops..bit..Shr$LT$usize$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17hdd7de2446dae2c6dE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i64 %_4), !dbg !4661
  br label %bb1, !dbg !4661

bb1:                                              ; preds = %start
  ret void, !dbg !4662
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<i8> for f128_internal::f128_t::f128>::shr
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$core..ops..bit..Shr$LT$i8$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h1ee5fff5c4a474d5E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i8 %other) unnamed_addr #0 !dbg !4663 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i8, align 1
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4668, metadata !DIExpression()), !dbg !4670
  store i8 %other, i8* %other.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %other.dbg.spill, metadata !4669, metadata !DIExpression()), !dbg !4671
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !4672
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4674
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !4674
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4674
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4674
  br label %bb1, !dbg !4675

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !4676
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !4676
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !4676
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !4676
  %_4 = load i128, i128* %1, align 8, !dbg !4676
  br label %bb2, !dbg !4676

bb2:                                              ; preds = %bb1
  %7 = and i8 %other, -128, !dbg !4676
  %_8.1 = icmp ne i8 %7, 0, !dbg !4676
  %8 = zext i8 %other to i128, !dbg !4676
  %9 = and i128 %8, 127, !dbg !4676
  %_8.0 = lshr i128 %_4, %9, !dbg !4676
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4676
  br i1 %10, label %panic, label %bb3, !dbg !4676

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !4677
  store i128 %_8.0, i128* %11, align 1, !dbg !4677
  br label %bb4, !dbg !4677

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1214 to %"core::panic::location::Location"*)) #12, !dbg !4676
  unreachable, !dbg !4676

bb4:                                              ; preds = %bb3
  ret void, !dbg !4678
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<&i8> for &f128_internal::f128_t::f128>::shr
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl95_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$i8$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17hba2198c21959888bE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i8* align 1 %other) unnamed_addr #1 !dbg !4679 {
start:
  %other.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4685, metadata !DIExpression()), !dbg !4687
  store i8* %other, i8** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !4686, metadata !DIExpression()), !dbg !4688
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4689
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4689
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4689
  %_4 = load i8, i8* %other, align 1, !dbg !4690
; call f128_internal::f128_impl::<impl core::ops::bit::Shr<i8> for f128_internal::f128_t::f128>::shr
  call void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$core..ops..bit..Shr$LT$i8$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h1ee5fff5c4a474d5E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i8 %_4), !dbg !4691
  br label %bb1, !dbg !4691

bb1:                                              ; preds = %start
  ret void, !dbg !4692
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<i16> for f128_internal::f128_t::f128>::shr
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shr$LT$i16$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17haa097268bf2e596aE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i16 %other) unnamed_addr #0 !dbg !4693 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i16, align 2
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4698, metadata !DIExpression()), !dbg !4700
  store i16 %other, i16* %other.dbg.spill, align 2
  call void @llvm.dbg.declare(metadata i16* %other.dbg.spill, metadata !4699, metadata !DIExpression()), !dbg !4701
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !4702
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4704
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !4704
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4704
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4704
  br label %bb1, !dbg !4705

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !4706
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !4706
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !4706
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !4706
  %_4 = load i128, i128* %1, align 8, !dbg !4706
  br label %bb2, !dbg !4706

bb2:                                              ; preds = %bb1
  %7 = and i16 %other, -128, !dbg !4706
  %_8.1 = icmp ne i16 %7, 0, !dbg !4706
  %8 = zext i16 %other to i128, !dbg !4706
  %9 = and i128 %8, 127, !dbg !4706
  %_8.0 = lshr i128 %_4, %9, !dbg !4706
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4706
  br i1 %10, label %panic, label %bb3, !dbg !4706

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !4707
  store i128 %_8.0, i128* %11, align 1, !dbg !4707
  br label %bb4, !dbg !4707

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1216 to %"core::panic::location::Location"*)) #12, !dbg !4706
  unreachable, !dbg !4706

bb4:                                              ; preds = %bb3
  ret void, !dbg !4708
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<&i16> for &f128_internal::f128_t::f128>::shr
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$i16$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h78b571a3f0b0410aE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i16* align 2 %other) unnamed_addr #1 !dbg !4709 {
start:
  %other.dbg.spill = alloca i16*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4715, metadata !DIExpression()), !dbg !4717
  store i16* %other, i16** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i16** %other.dbg.spill, metadata !4716, metadata !DIExpression()), !dbg !4718
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4719
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4719
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4719
  %_4 = load i16, i16* %other, align 2, !dbg !4720
; call f128_internal::f128_impl::<impl core::ops::bit::Shr<i16> for f128_internal::f128_t::f128>::shr
  call void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shr$LT$i16$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17haa097268bf2e596aE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i16 %_4), !dbg !4721
  br label %bb1, !dbg !4721

bb1:                                              ; preds = %start
  ret void, !dbg !4722
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<i32> for f128_internal::f128_t::f128>::shr
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shr$LT$i32$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h0bc2139897889324E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i32 %other) unnamed_addr #0 !dbg !4723 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i32, align 4
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4726, metadata !DIExpression()), !dbg !4728
  store i32 %other, i32* %other.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %other.dbg.spill, metadata !4727, metadata !DIExpression()), !dbg !4729
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !4730
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4732
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !4732
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4732
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4732
  br label %bb1, !dbg !4733

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !4734
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !4734
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !4734
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !4734
  %_4 = load i128, i128* %1, align 8, !dbg !4734
  br label %bb2, !dbg !4734

bb2:                                              ; preds = %bb1
  %7 = and i32 %other, -128, !dbg !4734
  %_8.1 = icmp ne i32 %7, 0, !dbg !4734
  %8 = zext i32 %other to i128, !dbg !4734
  %9 = and i128 %8, 127, !dbg !4734
  %_8.0 = lshr i128 %_4, %9, !dbg !4734
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4734
  br i1 %10, label %panic, label %bb3, !dbg !4734

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !4735
  store i128 %_8.0, i128* %11, align 1, !dbg !4735
  br label %bb4, !dbg !4735

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1218 to %"core::panic::location::Location"*)) #12, !dbg !4734
  unreachable, !dbg !4734

bb4:                                              ; preds = %bb3
  ret void, !dbg !4736
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<&i32> for &f128_internal::f128_t::f128>::shr
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$i32$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h2a1038d5ac56a581E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i32* align 4 %other) unnamed_addr #1 !dbg !4737 {
start:
  %other.dbg.spill = alloca i32*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4742, metadata !DIExpression()), !dbg !4744
  store i32* %other, i32** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %other.dbg.spill, metadata !4743, metadata !DIExpression()), !dbg !4745
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4746
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4746
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4746
  %_4 = load i32, i32* %other, align 4, !dbg !4747
; call f128_internal::f128_impl::<impl core::ops::bit::Shr<i32> for f128_internal::f128_t::f128>::shr
  call void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shr$LT$i32$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h0bc2139897889324E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i32 %_4), !dbg !4748
  br label %bb1, !dbg !4748

bb1:                                              ; preds = %start
  ret void, !dbg !4749
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<i64> for f128_internal::f128_t::f128>::shr
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shr$LT$i64$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h17a07f74147e5956E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i64 %other) unnamed_addr #0 !dbg !4750 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i64, align 8
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4755, metadata !DIExpression()), !dbg !4757
  store i64 %other, i64* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %other.dbg.spill, metadata !4756, metadata !DIExpression()), !dbg !4758
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !4759
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4761
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !4761
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4761
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4761
  br label %bb1, !dbg !4762

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !4763
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !4763
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !4763
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !4763
  %_4 = load i128, i128* %1, align 8, !dbg !4763
  br label %bb2, !dbg !4763

bb2:                                              ; preds = %bb1
  %7 = and i64 %other, -128, !dbg !4763
  %_8.1 = icmp ne i64 %7, 0, !dbg !4763
  %8 = zext i64 %other to i128, !dbg !4763
  %9 = and i128 %8, 127, !dbg !4763
  %_8.0 = lshr i128 %_4, %9, !dbg !4763
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4763
  br i1 %10, label %panic, label %bb3, !dbg !4763

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !4764
  store i128 %_8.0, i128* %11, align 1, !dbg !4764
  br label %bb4, !dbg !4764

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1220 to %"core::panic::location::Location"*)) #12, !dbg !4763
  unreachable, !dbg !4763

bb4:                                              ; preds = %bb3
  ret void, !dbg !4765
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<&i64> for &f128_internal::f128_t::f128>::shr
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$i64$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h3ff27fed31bd5ad4E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i64* align 8 %other) unnamed_addr #1 !dbg !4766 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4771, metadata !DIExpression()), !dbg !4773
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !4772, metadata !DIExpression()), !dbg !4774
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4775
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4775
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4775
  %_4 = load i64, i64* %other, align 8, !dbg !4776
; call f128_internal::f128_impl::<impl core::ops::bit::Shr<i64> for f128_internal::f128_t::f128>::shr
  call void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shr$LT$i64$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h17a07f74147e5956E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i64 %_4), !dbg !4777
  br label %bb1, !dbg !4777

bb1:                                              ; preds = %start
  ret void, !dbg !4778
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<i128> for f128_internal::f128_t::f128>::shr
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$core..ops..bit..Shr$LT$i128$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h6686fd6b8b230e25E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i128 %other) unnamed_addr #0 !dbg !4779 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i128, align 8
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4784, metadata !DIExpression()), !dbg !4786
  store i128 %other, i128* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i128* %other.dbg.spill, metadata !4785, metadata !DIExpression()), !dbg !4787
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !4788
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4790
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !4790
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4790
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4790
  br label %bb1, !dbg !4791

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !4792
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !4792
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !4792
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !4792
  %_4 = load i128, i128* %1, align 8, !dbg !4792
  br label %bb2, !dbg !4792

bb2:                                              ; preds = %bb1
  %7 = and i128 %other, -128, !dbg !4792
  %_8.1 = icmp ne i128 %7, 0, !dbg !4792
  %8 = and i128 %other, 127, !dbg !4792
  %_8.0 = lshr i128 %_4, %8, !dbg !4792
  %9 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4792
  br i1 %9, label %panic, label %bb3, !dbg !4792

bb3:                                              ; preds = %bb2
  %10 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !4793
  store i128 %_8.0, i128* %10, align 1, !dbg !4793
  br label %bb4, !dbg !4793

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1222 to %"core::panic::location::Location"*)) #12, !dbg !4792
  unreachable, !dbg !4792

bb4:                                              ; preds = %bb3
  ret void, !dbg !4794
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<&i128> for &f128_internal::f128_t::f128>::shr
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl97_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$i128$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h57b58e0cb98f1493E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i128* align 8 %other) unnamed_addr #1 !dbg !4795 {
start:
  %other.dbg.spill = alloca i128*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4801, metadata !DIExpression()), !dbg !4803
  store i128* %other, i128** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i128** %other.dbg.spill, metadata !4802, metadata !DIExpression()), !dbg !4804
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4805
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4805
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4805
  %_4 = load i128, i128* %other, align 8, !dbg !4806
; call f128_internal::f128_impl::<impl core::ops::bit::Shr<i128> for f128_internal::f128_t::f128>::shr
  call void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$core..ops..bit..Shr$LT$i128$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h6686fd6b8b230e25E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i128 %_4), !dbg !4807
  br label %bb1, !dbg !4807

bb1:                                              ; preds = %start
  ret void, !dbg !4808
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<isize> for f128_internal::f128_t::f128>::shr
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl90_$LT$impl$u20$core..ops..bit..Shr$LT$isize$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h4309a0ae273898fcE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i64 %other) unnamed_addr #0 !dbg !4809 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i64, align 8
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4814, metadata !DIExpression()), !dbg !4816
  store i64 %other, i64* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %other.dbg.spill, metadata !4815, metadata !DIExpression()), !dbg !4817
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !4818
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4820
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !4820
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4820
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4820
  br label %bb1, !dbg !4821

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !4822
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !4822
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !4822
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !4822
  %_4 = load i128, i128* %1, align 8, !dbg !4822
  br label %bb2, !dbg !4822

bb2:                                              ; preds = %bb1
  %7 = and i64 %other, -128, !dbg !4822
  %_8.1 = icmp ne i64 %7, 0, !dbg !4822
  %8 = zext i64 %other to i128, !dbg !4822
  %9 = and i128 %8, 127, !dbg !4822
  %_8.0 = lshr i128 %_4, %9, !dbg !4822
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4822
  br i1 %10, label %panic, label %bb3, !dbg !4822

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !4823
  store i128 %_8.0, i128* %11, align 1, !dbg !4823
  br label %bb4, !dbg !4823

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1224 to %"core::panic::location::Location"*)) #12, !dbg !4822
  unreachable, !dbg !4822

bb4:                                              ; preds = %bb3
  ret void, !dbg !4824
}

; f128_internal::f128_impl::<impl core::ops::bit::Shr<&isize> for &f128_internal::f128_t::f128>::shr
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl98_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$isize$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h80743e564968f7e4E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i64* align 8 %other) unnamed_addr #1 !dbg !4825 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4831, metadata !DIExpression()), !dbg !4833
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !4832, metadata !DIExpression()), !dbg !4834
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4835
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4835
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4835
  %_4 = load i64, i64* %other, align 8, !dbg !4836
; call f128_internal::f128_impl::<impl core::ops::bit::Shr<isize> for f128_internal::f128_t::f128>::shr
  call void @"_ZN13f128_internal9f128_impl90_$LT$impl$u20$core..ops..bit..Shr$LT$isize$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h4309a0ae273898fcE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i64 %_4), !dbg !4837
  br label %bb1, !dbg !4837

bb1:                                              ; preds = %start
  ret void, !dbg !4838
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<u8> for f128_internal::f128_t::f128>::shl
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$core..ops..bit..Shl$LT$u8$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17hce4bf9da801814e4E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i8 %other) unnamed_addr #0 !dbg !4839 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i8, align 1
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4842, metadata !DIExpression()), !dbg !4844
  store i8 %other, i8* %other.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %other.dbg.spill, metadata !4843, metadata !DIExpression()), !dbg !4845
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !4846
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4848
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !4848
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4848
  br label %bb1, !dbg !4849

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !4850
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !4850
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !4850
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !4850
  %_4 = load i128, i128* %1, align 8, !dbg !4850
  br label %bb2, !dbg !4850

bb2:                                              ; preds = %bb1
  %7 = and i8 %other, -128, !dbg !4850
  %_8.1 = icmp ne i8 %7, 0, !dbg !4850
  %8 = zext i8 %other to i128, !dbg !4850
  %9 = and i128 %8, 127, !dbg !4850
  %_8.0 = shl i128 %_4, %9, !dbg !4850
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4850
  br i1 %10, label %panic, label %bb3, !dbg !4850

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !4851
  store i128 %_8.0, i128* %11, align 1, !dbg !4851
  br label %bb4, !dbg !4851

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([35 x i8]* @str.3 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1226 to %"core::panic::location::Location"*)) #12, !dbg !4850
  unreachable, !dbg !4850

bb4:                                              ; preds = %bb3
  ret void, !dbg !4852
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<&u8> for &f128_internal::f128_t::f128>::shl
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl95_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$u8$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17h5f821a9c8cecd4dbE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i8* align 1 %other) unnamed_addr #1 !dbg !4853 {
start:
  %other.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4856, metadata !DIExpression()), !dbg !4858
  store i8* %other, i8** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !4857, metadata !DIExpression()), !dbg !4859
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4860
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4860
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4860
  %_4 = load i8, i8* %other, align 1, !dbg !4861
; call f128_internal::f128_impl::<impl core::ops::bit::Shl<u8> for f128_internal::f128_t::f128>::shl
  call void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$core..ops..bit..Shl$LT$u8$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17hce4bf9da801814e4E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i8 %_4), !dbg !4862
  br label %bb1, !dbg !4862

bb1:                                              ; preds = %start
  ret void, !dbg !4863
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<u16> for f128_internal::f128_t::f128>::shl
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shl$LT$u16$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h3e3c54ff9b731297E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i16 %other) unnamed_addr #0 !dbg !4864 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i16, align 2
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4867, metadata !DIExpression()), !dbg !4869
  store i16 %other, i16* %other.dbg.spill, align 2
  call void @llvm.dbg.declare(metadata i16* %other.dbg.spill, metadata !4868, metadata !DIExpression()), !dbg !4870
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !4871
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4873
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !4873
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4873
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4873
  br label %bb1, !dbg !4874

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !4875
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !4875
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !4875
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !4875
  %_4 = load i128, i128* %1, align 8, !dbg !4875
  br label %bb2, !dbg !4875

bb2:                                              ; preds = %bb1
  %7 = and i16 %other, -128, !dbg !4875
  %_8.1 = icmp ne i16 %7, 0, !dbg !4875
  %8 = zext i16 %other to i128, !dbg !4875
  %9 = and i128 %8, 127, !dbg !4875
  %_8.0 = shl i128 %_4, %9, !dbg !4875
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4875
  br i1 %10, label %panic, label %bb3, !dbg !4875

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !4876
  store i128 %_8.0, i128* %11, align 1, !dbg !4876
  br label %bb4, !dbg !4876

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([35 x i8]* @str.3 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1228 to %"core::panic::location::Location"*)) #12, !dbg !4875
  unreachable, !dbg !4875

bb4:                                              ; preds = %bb3
  ret void, !dbg !4877
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<&u16> for &f128_internal::f128_t::f128>::shl
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$u16$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17h6bddbe291312f9c9E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i16* align 2 %other) unnamed_addr #1 !dbg !4878 {
start:
  %other.dbg.spill = alloca i16*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4881, metadata !DIExpression()), !dbg !4883
  store i16* %other, i16** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i16** %other.dbg.spill, metadata !4882, metadata !DIExpression()), !dbg !4884
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4885
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4885
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4885
  %_4 = load i16, i16* %other, align 2, !dbg !4886
; call f128_internal::f128_impl::<impl core::ops::bit::Shl<u16> for f128_internal::f128_t::f128>::shl
  call void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shl$LT$u16$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h3e3c54ff9b731297E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i16 %_4), !dbg !4887
  br label %bb1, !dbg !4887

bb1:                                              ; preds = %start
  ret void, !dbg !4888
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<u32> for f128_internal::f128_t::f128>::shl
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shl$LT$u32$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h6acb313782bfdc7cE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i32 %other) unnamed_addr #0 !dbg !4889 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i32, align 4
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4892, metadata !DIExpression()), !dbg !4894
  store i32 %other, i32* %other.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %other.dbg.spill, metadata !4893, metadata !DIExpression()), !dbg !4895
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !4896
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4898
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !4898
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4898
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4898
  br label %bb1, !dbg !4899

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !4900
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !4900
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !4900
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !4900
  %_4 = load i128, i128* %1, align 8, !dbg !4900
  br label %bb2, !dbg !4900

bb2:                                              ; preds = %bb1
  %7 = and i32 %other, -128, !dbg !4900
  %_8.1 = icmp ne i32 %7, 0, !dbg !4900
  %8 = zext i32 %other to i128, !dbg !4900
  %9 = and i128 %8, 127, !dbg !4900
  %_8.0 = shl i128 %_4, %9, !dbg !4900
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4900
  br i1 %10, label %panic, label %bb3, !dbg !4900

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !4901
  store i128 %_8.0, i128* %11, align 1, !dbg !4901
  br label %bb4, !dbg !4901

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([35 x i8]* @str.3 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1230 to %"core::panic::location::Location"*)) #12, !dbg !4900
  unreachable, !dbg !4900

bb4:                                              ; preds = %bb3
  ret void, !dbg !4902
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<&u32> for &f128_internal::f128_t::f128>::shl
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$u32$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17h33322a3cd4d3915eE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i32* align 4 %other) unnamed_addr #1 !dbg !4903 {
start:
  %other.dbg.spill = alloca i32*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4906, metadata !DIExpression()), !dbg !4908
  store i32* %other, i32** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %other.dbg.spill, metadata !4907, metadata !DIExpression()), !dbg !4909
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4910
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4910
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4910
  %_4 = load i32, i32* %other, align 4, !dbg !4911
; call f128_internal::f128_impl::<impl core::ops::bit::Shl<u32> for f128_internal::f128_t::f128>::shl
  call void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shl$LT$u32$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h6acb313782bfdc7cE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i32 %_4), !dbg !4912
  br label %bb1, !dbg !4912

bb1:                                              ; preds = %start
  ret void, !dbg !4913
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<u64> for f128_internal::f128_t::f128>::shl
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shl$LT$u64$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17hb8a4e59707af75f2E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i64 %other) unnamed_addr #0 !dbg !4914 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i64, align 8
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4917, metadata !DIExpression()), !dbg !4919
  store i64 %other, i64* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %other.dbg.spill, metadata !4918, metadata !DIExpression()), !dbg !4920
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !4921
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4923
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !4923
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4923
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4923
  br label %bb1, !dbg !4924

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !4925
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !4925
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !4925
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !4925
  %_4 = load i128, i128* %1, align 8, !dbg !4925
  br label %bb2, !dbg !4925

bb2:                                              ; preds = %bb1
  %7 = and i64 %other, -128, !dbg !4925
  %_8.1 = icmp ne i64 %7, 0, !dbg !4925
  %8 = zext i64 %other to i128, !dbg !4925
  %9 = and i128 %8, 127, !dbg !4925
  %_8.0 = shl i128 %_4, %9, !dbg !4925
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4925
  br i1 %10, label %panic, label %bb3, !dbg !4925

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !4926
  store i128 %_8.0, i128* %11, align 1, !dbg !4926
  br label %bb4, !dbg !4926

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([35 x i8]* @str.3 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1232 to %"core::panic::location::Location"*)) #12, !dbg !4925
  unreachable, !dbg !4925

bb4:                                              ; preds = %bb3
  ret void, !dbg !4927
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<&u64> for &f128_internal::f128_t::f128>::shl
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$u64$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17h6f9deaef3b7e19b6E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i64* align 8 %other) unnamed_addr #1 !dbg !4928 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4931, metadata !DIExpression()), !dbg !4933
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !4932, metadata !DIExpression()), !dbg !4934
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4935
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4935
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4935
  %_4 = load i64, i64* %other, align 8, !dbg !4936
; call f128_internal::f128_impl::<impl core::ops::bit::Shl<u64> for f128_internal::f128_t::f128>::shl
  call void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shl$LT$u64$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17hb8a4e59707af75f2E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i64 %_4), !dbg !4937
  br label %bb1, !dbg !4937

bb1:                                              ; preds = %start
  ret void, !dbg !4938
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<u128> for f128_internal::f128_t::f128>::shl
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$core..ops..bit..Shl$LT$u128$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17ha43bfca0dde555b6E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i128 %other) unnamed_addr #0 !dbg !4939 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i128, align 8
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4942, metadata !DIExpression()), !dbg !4944
  store i128 %other, i128* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i128* %other.dbg.spill, metadata !4943, metadata !DIExpression()), !dbg !4945
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !4946
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4948
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !4948
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4948
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4948
  br label %bb1, !dbg !4949

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !4950
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !4950
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !4950
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !4950
  %_4 = load i128, i128* %1, align 8, !dbg !4950
  br label %bb2, !dbg !4950

bb2:                                              ; preds = %bb1
  %7 = and i128 %other, -128, !dbg !4950
  %_8.1 = icmp ne i128 %7, 0, !dbg !4950
  %8 = and i128 %other, 127, !dbg !4950
  %_8.0 = shl i128 %_4, %8, !dbg !4950
  %9 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4950
  br i1 %9, label %panic, label %bb3, !dbg !4950

bb3:                                              ; preds = %bb2
  %10 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !4951
  store i128 %_8.0, i128* %10, align 1, !dbg !4951
  br label %bb4, !dbg !4951

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([35 x i8]* @str.3 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1234 to %"core::panic::location::Location"*)) #12, !dbg !4950
  unreachable, !dbg !4950

bb4:                                              ; preds = %bb3
  ret void, !dbg !4952
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<&u128> for &f128_internal::f128_t::f128>::shl
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl97_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$u128$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17h281536b0088cfee3E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i128* align 8 %other) unnamed_addr #1 !dbg !4953 {
start:
  %other.dbg.spill = alloca i128*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4956, metadata !DIExpression()), !dbg !4958
  store i128* %other, i128** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i128** %other.dbg.spill, metadata !4957, metadata !DIExpression()), !dbg !4959
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4960
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4960
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4960
  %_4 = load i128, i128* %other, align 8, !dbg !4961
; call f128_internal::f128_impl::<impl core::ops::bit::Shl<u128> for f128_internal::f128_t::f128>::shl
  call void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$core..ops..bit..Shl$LT$u128$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17ha43bfca0dde555b6E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i128 %_4), !dbg !4962
  br label %bb1, !dbg !4962

bb1:                                              ; preds = %start
  ret void, !dbg !4963
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<usize> for f128_internal::f128_t::f128>::shl
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl90_$LT$impl$u20$core..ops..bit..Shl$LT$usize$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h15c7958c3b75fccdE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i64 %other) unnamed_addr #0 !dbg !4964 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i64, align 8
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4967, metadata !DIExpression()), !dbg !4969
  store i64 %other, i64* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %other.dbg.spill, metadata !4968, metadata !DIExpression()), !dbg !4970
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !4971
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4973
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !4973
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4973
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4973
  br label %bb1, !dbg !4974

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !4975
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !4975
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !4975
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !4975
  %_4 = load i128, i128* %1, align 8, !dbg !4975
  br label %bb2, !dbg !4975

bb2:                                              ; preds = %bb1
  %7 = and i64 %other, -128, !dbg !4975
  %_8.1 = icmp ne i64 %7, 0, !dbg !4975
  %8 = zext i64 %other to i128, !dbg !4975
  %9 = and i128 %8, 127, !dbg !4975
  %_8.0 = shl i128 %_4, %9, !dbg !4975
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4975
  br i1 %10, label %panic, label %bb3, !dbg !4975

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !4976
  store i128 %_8.0, i128* %11, align 1, !dbg !4976
  br label %bb4, !dbg !4976

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([35 x i8]* @str.3 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1236 to %"core::panic::location::Location"*)) #12, !dbg !4975
  unreachable, !dbg !4975

bb4:                                              ; preds = %bb3
  ret void, !dbg !4977
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<&usize> for &f128_internal::f128_t::f128>::shl
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl98_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$usize$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17hbabc170e400e2a36E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i64* align 8 %other) unnamed_addr #1 !dbg !4978 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !4981, metadata !DIExpression()), !dbg !4983
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !4982, metadata !DIExpression()), !dbg !4984
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !4985
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !4985
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !4985
  %_4 = load i64, i64* %other, align 8, !dbg !4986
; call f128_internal::f128_impl::<impl core::ops::bit::Shl<usize> for f128_internal::f128_t::f128>::shl
  call void @"_ZN13f128_internal9f128_impl90_$LT$impl$u20$core..ops..bit..Shl$LT$usize$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h15c7958c3b75fccdE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i64 %_4), !dbg !4987
  br label %bb1, !dbg !4987

bb1:                                              ; preds = %start
  ret void, !dbg !4988
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<i8> for f128_internal::f128_t::f128>::shl
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$core..ops..bit..Shl$LT$i8$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h02e7dd6688a3af5bE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i8 %other) unnamed_addr #0 !dbg !4989 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i8, align 1
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !4992, metadata !DIExpression()), !dbg !4994
  store i8 %other, i8* %other.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %other.dbg.spill, metadata !4993, metadata !DIExpression()), !dbg !4995
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !4996
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !4998
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !4998
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !4998
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !4998
  br label %bb1, !dbg !4999

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !5000
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !5000
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !5000
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !5000
  %_4 = load i128, i128* %1, align 8, !dbg !5000
  br label %bb2, !dbg !5000

bb2:                                              ; preds = %bb1
  %7 = and i8 %other, -128, !dbg !5000
  %_8.1 = icmp ne i8 %7, 0, !dbg !5000
  %8 = zext i8 %other to i128, !dbg !5000
  %9 = and i128 %8, 127, !dbg !5000
  %_8.0 = shl i128 %_4, %9, !dbg !5000
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !5000
  br i1 %10, label %panic, label %bb3, !dbg !5000

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !5001
  store i128 %_8.0, i128* %11, align 1, !dbg !5001
  br label %bb4, !dbg !5001

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([35 x i8]* @str.3 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1238 to %"core::panic::location::Location"*)) #12, !dbg !5000
  unreachable, !dbg !5000

bb4:                                              ; preds = %bb3
  ret void, !dbg !5002
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<&i8> for &f128_internal::f128_t::f128>::shl
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl95_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$i8$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17hcc2153ace349cef6E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i8* align 1 %other) unnamed_addr #1 !dbg !5003 {
start:
  %other.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !5006, metadata !DIExpression()), !dbg !5008
  store i8* %other, i8** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !5007, metadata !DIExpression()), !dbg !5009
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !5010
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !5010
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !5010
  %_4 = load i8, i8* %other, align 1, !dbg !5011
; call f128_internal::f128_impl::<impl core::ops::bit::Shl<i8> for f128_internal::f128_t::f128>::shl
  call void @"_ZN13f128_internal9f128_impl87_$LT$impl$u20$core..ops..bit..Shl$LT$i8$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h02e7dd6688a3af5bE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i8 %_4), !dbg !5012
  br label %bb1, !dbg !5012

bb1:                                              ; preds = %start
  ret void, !dbg !5013
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<i16> for f128_internal::f128_t::f128>::shl
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shl$LT$i16$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17hc0faefeb19a6911dE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i16 %other) unnamed_addr #0 !dbg !5014 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i16, align 2
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !5017, metadata !DIExpression()), !dbg !5019
  store i16 %other, i16* %other.dbg.spill, align 2
  call void @llvm.dbg.declare(metadata i16* %other.dbg.spill, metadata !5018, metadata !DIExpression()), !dbg !5020
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !5021
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !5023
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !5023
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !5023
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !5023
  br label %bb1, !dbg !5024

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !5025
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !5025
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !5025
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !5025
  %_4 = load i128, i128* %1, align 8, !dbg !5025
  br label %bb2, !dbg !5025

bb2:                                              ; preds = %bb1
  %7 = and i16 %other, -128, !dbg !5025
  %_8.1 = icmp ne i16 %7, 0, !dbg !5025
  %8 = zext i16 %other to i128, !dbg !5025
  %9 = and i128 %8, 127, !dbg !5025
  %_8.0 = shl i128 %_4, %9, !dbg !5025
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !5025
  br i1 %10, label %panic, label %bb3, !dbg !5025

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !5026
  store i128 %_8.0, i128* %11, align 1, !dbg !5026
  br label %bb4, !dbg !5026

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([35 x i8]* @str.3 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1240 to %"core::panic::location::Location"*)) #12, !dbg !5025
  unreachable, !dbg !5025

bb4:                                              ; preds = %bb3
  ret void, !dbg !5027
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<&i16> for &f128_internal::f128_t::f128>::shl
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$i16$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17ha8faf2c463cb7f40E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i16* align 2 %other) unnamed_addr #1 !dbg !5028 {
start:
  %other.dbg.spill = alloca i16*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !5031, metadata !DIExpression()), !dbg !5033
  store i16* %other, i16** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i16** %other.dbg.spill, metadata !5032, metadata !DIExpression()), !dbg !5034
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !5035
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !5035
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !5035
  %_4 = load i16, i16* %other, align 2, !dbg !5036
; call f128_internal::f128_impl::<impl core::ops::bit::Shl<i16> for f128_internal::f128_t::f128>::shl
  call void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shl$LT$i16$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17hc0faefeb19a6911dE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i16 %_4), !dbg !5037
  br label %bb1, !dbg !5037

bb1:                                              ; preds = %start
  ret void, !dbg !5038
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<i32> for f128_internal::f128_t::f128>::shl
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shl$LT$i32$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17hffa311d222f638d2E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i32 %other) unnamed_addr #0 !dbg !5039 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i32, align 4
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !5042, metadata !DIExpression()), !dbg !5044
  store i32 %other, i32* %other.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %other.dbg.spill, metadata !5043, metadata !DIExpression()), !dbg !5045
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !5046
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !5048
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !5048
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !5048
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !5048
  br label %bb1, !dbg !5049

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !5050
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !5050
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !5050
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !5050
  %_4 = load i128, i128* %1, align 8, !dbg !5050
  br label %bb2, !dbg !5050

bb2:                                              ; preds = %bb1
  %7 = and i32 %other, -128, !dbg !5050
  %_8.1 = icmp ne i32 %7, 0, !dbg !5050
  %8 = zext i32 %other to i128, !dbg !5050
  %9 = and i128 %8, 127, !dbg !5050
  %_8.0 = shl i128 %_4, %9, !dbg !5050
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !5050
  br i1 %10, label %panic, label %bb3, !dbg !5050

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !5051
  store i128 %_8.0, i128* %11, align 1, !dbg !5051
  br label %bb4, !dbg !5051

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([35 x i8]* @str.3 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1242 to %"core::panic::location::Location"*)) #12, !dbg !5050
  unreachable, !dbg !5050

bb4:                                              ; preds = %bb3
  ret void, !dbg !5052
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<&i32> for &f128_internal::f128_t::f128>::shl
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$i32$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17h8adba397506058c5E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i32* align 4 %other) unnamed_addr #1 !dbg !5053 {
start:
  %other.dbg.spill = alloca i32*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !5056, metadata !DIExpression()), !dbg !5058
  store i32* %other, i32** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %other.dbg.spill, metadata !5057, metadata !DIExpression()), !dbg !5059
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !5060
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !5060
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !5060
  %_4 = load i32, i32* %other, align 4, !dbg !5061
; call f128_internal::f128_impl::<impl core::ops::bit::Shl<i32> for f128_internal::f128_t::f128>::shl
  call void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shl$LT$i32$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17hffa311d222f638d2E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i32 %_4), !dbg !5062
  br label %bb1, !dbg !5062

bb1:                                              ; preds = %start
  ret void, !dbg !5063
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<i64> for f128_internal::f128_t::f128>::shl
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shl$LT$i64$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h63382dcbcad48d32E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i64 %other) unnamed_addr #0 !dbg !5064 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i64, align 8
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !5067, metadata !DIExpression()), !dbg !5069
  store i64 %other, i64* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %other.dbg.spill, metadata !5068, metadata !DIExpression()), !dbg !5070
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !5071
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !5073
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !5073
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !5073
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !5073
  br label %bb1, !dbg !5074

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !5075
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !5075
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !5075
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !5075
  %_4 = load i128, i128* %1, align 8, !dbg !5075
  br label %bb2, !dbg !5075

bb2:                                              ; preds = %bb1
  %7 = and i64 %other, -128, !dbg !5075
  %_8.1 = icmp ne i64 %7, 0, !dbg !5075
  %8 = zext i64 %other to i128, !dbg !5075
  %9 = and i128 %8, 127, !dbg !5075
  %_8.0 = shl i128 %_4, %9, !dbg !5075
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !5075
  br i1 %10, label %panic, label %bb3, !dbg !5075

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !5076
  store i128 %_8.0, i128* %11, align 1, !dbg !5076
  br label %bb4, !dbg !5076

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([35 x i8]* @str.3 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1244 to %"core::panic::location::Location"*)) #12, !dbg !5075
  unreachable, !dbg !5075

bb4:                                              ; preds = %bb3
  ret void, !dbg !5077
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<&i64> for &f128_internal::f128_t::f128>::shl
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$i64$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17hf63f86452e92bec8E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i64* align 8 %other) unnamed_addr #1 !dbg !5078 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !5081, metadata !DIExpression()), !dbg !5083
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !5082, metadata !DIExpression()), !dbg !5084
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !5085
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !5085
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !5085
  %_4 = load i64, i64* %other, align 8, !dbg !5086
; call f128_internal::f128_impl::<impl core::ops::bit::Shl<i64> for f128_internal::f128_t::f128>::shl
  call void @"_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shl$LT$i64$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h63382dcbcad48d32E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i64 %_4), !dbg !5087
  br label %bb1, !dbg !5087

bb1:                                              ; preds = %start
  ret void, !dbg !5088
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<i128> for f128_internal::f128_t::f128>::shl
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$core..ops..bit..Shl$LT$i128$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h9b511e76ebae82b4E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i128 %other) unnamed_addr #0 !dbg !5089 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i128, align 8
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !5092, metadata !DIExpression()), !dbg !5094
  store i128 %other, i128* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i128* %other.dbg.spill, metadata !5093, metadata !DIExpression()), !dbg !5095
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !5096
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !5098
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !5098
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !5098
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !5098
  br label %bb1, !dbg !5099

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !5100
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !5100
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !5100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !5100
  %_4 = load i128, i128* %1, align 8, !dbg !5100
  br label %bb2, !dbg !5100

bb2:                                              ; preds = %bb1
  %7 = and i128 %other, -128, !dbg !5100
  %_8.1 = icmp ne i128 %7, 0, !dbg !5100
  %8 = and i128 %other, 127, !dbg !5100
  %_8.0 = shl i128 %_4, %8, !dbg !5100
  %9 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !5100
  br i1 %9, label %panic, label %bb3, !dbg !5100

bb3:                                              ; preds = %bb2
  %10 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !5101
  store i128 %_8.0, i128* %10, align 1, !dbg !5101
  br label %bb4, !dbg !5101

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([35 x i8]* @str.3 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1246 to %"core::panic::location::Location"*)) #12, !dbg !5100
  unreachable, !dbg !5100

bb4:                                              ; preds = %bb3
  ret void, !dbg !5102
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<&i128> for &f128_internal::f128_t::f128>::shl
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl97_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$i128$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17hd7899c5cc94eeae3E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i128* align 8 %other) unnamed_addr #1 !dbg !5103 {
start:
  %other.dbg.spill = alloca i128*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !5106, metadata !DIExpression()), !dbg !5108
  store i128* %other, i128** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i128** %other.dbg.spill, metadata !5107, metadata !DIExpression()), !dbg !5109
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !5110
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !5110
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !5110
  %_4 = load i128, i128* %other, align 8, !dbg !5111
; call f128_internal::f128_impl::<impl core::ops::bit::Shl<i128> for f128_internal::f128_t::f128>::shl
  call void @"_ZN13f128_internal9f128_impl89_$LT$impl$u20$core..ops..bit..Shl$LT$i128$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h9b511e76ebae82b4E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i128 %_4), !dbg !5112
  br label %bb1, !dbg !5112

bb1:                                              ; preds = %start
  ret void, !dbg !5113
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<isize> for f128_internal::f128_t::f128>::shl
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13f128_internal9f128_impl90_$LT$impl$u20$core..ops..bit..Shl$LT$isize$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h36c651162bd560a6E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %self, i64 %other) unnamed_addr #0 !dbg !5114 {
start:
  %self.dbg.spill.i = alloca %"f128_t::f128"*, align 8
  %1 = alloca i128, align 8
  %other.dbg.spill = alloca i64, align 8
  %_5 = alloca [16 x i8], align 1
  call void @llvm.dbg.declare(metadata %"f128_t::f128"* %self, metadata !5117, metadata !DIExpression()), !dbg !5119
  store i64 %other, i64* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %other.dbg.spill, metadata !5118, metadata !DIExpression()), !dbg !5120
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill.i, metadata !4488, metadata !DIExpression()), !dbg !5121
  %_2.i = bitcast %"f128_t::f128"* %self to [16 x i8]*, !dbg !5123
  %2 = bitcast [16 x i8]* %_5 to i8*, !dbg !5123
  %3 = bitcast [16 x i8]* %_2.i to i8*, !dbg !5123
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false), !dbg !5123
  br label %bb1, !dbg !5124

bb1:                                              ; preds = %start
  %4 = bitcast i128* %1 to [16 x i8]*, !dbg !5125
  %5 = bitcast [16 x i8]* %4 to i8*, !dbg !5125
  %6 = bitcast [16 x i8]* %_5 to i8*, !dbg !5125
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false), !dbg !5125
  %_4 = load i128, i128* %1, align 8, !dbg !5125
  br label %bb2, !dbg !5125

bb2:                                              ; preds = %bb1
  %7 = and i64 %other, -128, !dbg !5125
  %_8.1 = icmp ne i64 %7, 0, !dbg !5125
  %8 = zext i64 %other to i128, !dbg !5125
  %9 = and i128 %8, 127, !dbg !5125
  %_8.0 = shl i128 %_4, %9, !dbg !5125
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !5125
  br i1 %10, label %panic, label %bb3, !dbg !5125

bb3:                                              ; preds = %bb2
  %11 = bitcast %"f128_t::f128"* %0 to i128*, !dbg !5126
  store i128 %_8.0, i128* %11, align 1, !dbg !5126
  br label %bb4, !dbg !5126

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([35 x i8]* @str.3 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc1248 to %"core::panic::location::Location"*)) #12, !dbg !5125
  unreachable, !dbg !5125

bb4:                                              ; preds = %bb3
  ret void, !dbg !5127
}

; f128_internal::f128_impl::<impl core::ops::bit::Shl<&isize> for &f128_internal::f128_t::f128>::shl
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl98_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$isize$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17he45fb26a50c0082eE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, i64* align 8 %other) unnamed_addr #1 !dbg !5128 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !5131, metadata !DIExpression()), !dbg !5133
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !5132, metadata !DIExpression()), !dbg !5134
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !5135
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !5135
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !5135
  %_4 = load i64, i64* %other, align 8, !dbg !5136
; call f128_internal::f128_impl::<impl core::ops::bit::Shl<isize> for f128_internal::f128_t::f128>::shl
  call void @"_ZN13f128_internal9f128_impl90_$LT$impl$u20$core..ops..bit..Shl$LT$isize$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h36c651162bd560a6E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, i64 %_4), !dbg !5137
  br label %bb1, !dbg !5137

bb1:                                              ; preds = %start
  ret void, !dbg !5138
}

; f128_internal::f128_impl::<impl core::ops::arith::Add<&f128_internal::f128_t::f128> for &f128_internal::f128_t::f128>::add
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl122_$LT$impl$u20$core..ops..arith..Add$LT$$RF$f128_internal..f128_t..f128$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3add17hdb42a77de4203acdE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, %"f128_t::f128"* align 1 %other) unnamed_addr #1 !dbg !5139 {
start:
  %other.dbg.spill = alloca %"f128_t::f128"*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_4 = alloca %"f128_t::f128", align 1
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !5144, metadata !DIExpression()), !dbg !5146
  store %"f128_t::f128"* %other, %"f128_t::f128"** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %other.dbg.spill, metadata !5145, metadata !DIExpression()), !dbg !5147
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !5148
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !5148
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !5148
  %3 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !5149
  %4 = bitcast %"f128_t::f128"* %other to i8*, !dbg !5149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !5149
; call f128_internal::f128_impl::<impl core::ops::arith::Add for f128_internal::f128_t::f128>::add
  call void @"_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Add$u20$for$u20$f128_internal..f128_t..f128$GT$3add17h0758a5ffde91ffccE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, %"f128_t::f128"* %_4), !dbg !5150
  br label %bb1, !dbg !5150

bb1:                                              ; preds = %start
  ret void, !dbg !5151
}

; f128_internal::f128_impl::<impl core::ops::arith::Sub<&f128_internal::f128_t::f128> for &f128_internal::f128_t::f128>::sub
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl122_$LT$impl$u20$core..ops..arith..Sub$LT$$RF$f128_internal..f128_t..f128$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3sub17hb6a5f744f97be03dE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, %"f128_t::f128"* align 1 %other) unnamed_addr #1 !dbg !5152 {
start:
  %other.dbg.spill = alloca %"f128_t::f128"*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_4 = alloca %"f128_t::f128", align 1
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !5155, metadata !DIExpression()), !dbg !5157
  store %"f128_t::f128"* %other, %"f128_t::f128"** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %other.dbg.spill, metadata !5156, metadata !DIExpression()), !dbg !5158
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !5159
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !5159
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !5159
  %3 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !5160
  %4 = bitcast %"f128_t::f128"* %other to i8*, !dbg !5160
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !5160
; call f128_internal::f128_impl::<impl core::ops::arith::Sub for f128_internal::f128_t::f128>::sub
  call void @"_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Sub$u20$for$u20$f128_internal..f128_t..f128$GT$3sub17h56595469bd3ea1c7E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, %"f128_t::f128"* %_4), !dbg !5161
  br label %bb1, !dbg !5161

bb1:                                              ; preds = %start
  ret void, !dbg !5162
}

; f128_internal::f128_impl::<impl core::ops::arith::Mul<&f128_internal::f128_t::f128> for &f128_internal::f128_t::f128>::mul
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl122_$LT$impl$u20$core..ops..arith..Mul$LT$$RF$f128_internal..f128_t..f128$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3mul17h5ddc33742295e78eE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, %"f128_t::f128"* align 1 %other) unnamed_addr #1 !dbg !5163 {
start:
  %other.dbg.spill = alloca %"f128_t::f128"*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_4 = alloca %"f128_t::f128", align 1
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !5166, metadata !DIExpression()), !dbg !5168
  store %"f128_t::f128"* %other, %"f128_t::f128"** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %other.dbg.spill, metadata !5167, metadata !DIExpression()), !dbg !5169
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !5170
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !5170
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !5170
  %3 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !5171
  %4 = bitcast %"f128_t::f128"* %other to i8*, !dbg !5171
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !5171
; call f128_internal::f128_impl::<impl core::ops::arith::Mul for f128_internal::f128_t::f128>::mul
  call void @"_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Mul$u20$for$u20$f128_internal..f128_t..f128$GT$3mul17h3dd26f8691880a4fE"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, %"f128_t::f128"* %_4), !dbg !5172
  br label %bb1, !dbg !5172

bb1:                                              ; preds = %start
  ret void, !dbg !5173
}

; f128_internal::f128_impl::<impl core::ops::arith::Div<&f128_internal::f128_t::f128> for &f128_internal::f128_t::f128>::div
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl122_$LT$impl$u20$core..ops..arith..Div$LT$$RF$f128_internal..f128_t..f128$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3div17hdc2aee624ae38a24E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, %"f128_t::f128"* align 1 %other) unnamed_addr #1 !dbg !5174 {
start:
  %other.dbg.spill = alloca %"f128_t::f128"*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_4 = alloca %"f128_t::f128", align 1
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !5177, metadata !DIExpression()), !dbg !5179
  store %"f128_t::f128"* %other, %"f128_t::f128"** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %other.dbg.spill, metadata !5178, metadata !DIExpression()), !dbg !5180
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !5181
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !5181
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !5181
  %3 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !5182
  %4 = bitcast %"f128_t::f128"* %other to i8*, !dbg !5182
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !5182
; call f128_internal::f128_impl::<impl core::ops::arith::Div for f128_internal::f128_t::f128>::div
  call void @"_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Div$u20$for$u20$f128_internal..f128_t..f128$GT$3div17h69144dea03b00355E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, %"f128_t::f128"* %_4), !dbg !5183
  br label %bb1, !dbg !5183

bb1:                                              ; preds = %start
  ret void, !dbg !5184
}

; f128_internal::f128_impl::<impl core::ops::arith::Rem<&f128_internal::f128_t::f128> for &f128_internal::f128_t::f128>::rem
; Function Attrs: nonlazybind uwtable
define void @"_ZN13f128_internal9f128_impl122_$LT$impl$u20$core..ops..arith..Rem$LT$$RF$f128_internal..f128_t..f128$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3rem17h7d96c46d9dd28da2E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self, %"f128_t::f128"* align 1 %other) unnamed_addr #1 !dbg !5185 {
start:
  %other.dbg.spill = alloca %"f128_t::f128"*, align 8
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  %_4 = alloca %"f128_t::f128", align 1
  %_3 = alloca %"f128_t::f128", align 1
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !5188, metadata !DIExpression()), !dbg !5190
  store %"f128_t::f128"* %other, %"f128_t::f128"** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %other.dbg.spill, metadata !5189, metadata !DIExpression()), !dbg !5191
  %1 = bitcast %"f128_t::f128"* %_3 to i8*, !dbg !5192
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !5192
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !5192
  %3 = bitcast %"f128_t::f128"* %_4 to i8*, !dbg !5193
  %4 = bitcast %"f128_t::f128"* %other to i8*, !dbg !5193
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false), !dbg !5193
; call f128_internal::f128_impl::<impl core::ops::arith::Rem for f128_internal::f128_t::f128>::rem
  call void @"_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Rem$u20$for$u20$f128_internal..f128_t..f128$GT$3rem17h730d929bbdbf3669E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* %_3, %"f128_t::f128"* %_4), !dbg !5194
  br label %bb1, !dbg !5194

bb1:                                              ; preds = %start
  ret void, !dbg !5195
}

; <f128_internal::f128_t::f128 as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN66_$LT$f128_internal..f128_t..f128$u20$as$u20$core..clone..Clone$GT$5clone17hc02454b05c891117E"(%"f128_t::f128"* sret(%"f128_t::f128") %0, %"f128_t::f128"* align 1 %self) unnamed_addr #0 !dbg !5196 {
start:
  %self.dbg.spill = alloca %"f128_t::f128"*, align 8
  store %"f128_t::f128"* %self, %"f128_t::f128"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"f128_t::f128"** %self.dbg.spill, metadata !5201, metadata !DIExpression()), !dbg !5202
  %1 = bitcast %"f128_t::f128"* %0 to i8*, !dbg !5202
  %2 = bitcast %"f128_t::f128"* %self to i8*, !dbg !5202
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 16, i1 false), !dbg !5202
  ret void, !dbg !5203
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index22slice_index_order_fail17ha5ea6a931f940f05E(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #3

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index24slice_end_index_len_fail17hc132699ea07ad3eeE(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #3

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
declare { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h027adc00ed696f09E"(i64, i64, [0 x i8]*, i64) unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #1

; <core::fmt::Arguments as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN59_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Display$GT$3fmt17h3acc6455b8791ff2E"(%"core::fmt::Arguments"* align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE"(i64* align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"*, %"core::panic::location::Location"* align 8) unnamed_addr #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #2

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #5

; core::ffi::c_str::CStr::from_bytes_with_nul_unchecked::rt_impl
; Function Attrs: nonlazybind uwtable
declare { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked7rt_impl17h7896654501f3620cE([0 x i8]* align 1, i64) unnamed_addr #1

; core::panicking::panic_no_unwind
; Function Attrs: cold noinline noreturn nounwind nonlazybind uwtable
declare void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() unnamed_addr #6

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1, i64, %"core::panic::location::Location"* align 8) unnamed_addr #3

; <core::str::error::Utf8Error as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hcce91d8033863515E"(%"core::str::error::Utf8Error"* align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::result::unwrap_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6result13unwrap_failed17hff48f82f03d418aeE([0 x i8]* align 1, i64, {}* align 1, [3 x i64]* align 8, %"core::panic::location::Location"* align 8) unnamed_addr #3

; <&str as alloc::ffi::c_str::CString::new::SpecNewImpl>::spec_new_impl
; Function Attrs: nonlazybind uwtable
declare void @"_ZN72_$LT$$RF$str$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17h2b2077657056158aE"(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"), [0 x i8]* align 1, i64) unnamed_addr #1

; alloc::fmt::format::format_inner
; Function Attrs: nonlazybind uwtable
declare void @_ZN5alloc3fmt6format12format_inner17h840d5de64fab0778E(%"alloc::string::String"* sret(%"alloc::string::String"), %"core::fmt::Arguments"*) unnamed_addr #1

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #7

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #8

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc(i64, i64) unnamed_addr #8

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() unnamed_addr #9

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64, i64) unnamed_addr #10

; <str as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17hde81f4d22eef4d42E"([0 x i8]* align 1, i64, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; Function Attrs: nounwind nonlazybind uwtable
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #8

; core::fmt::Formatter::precision
; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @_ZN4core3fmt9Formatter9precision17hf036a45b8bc60186E(%"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::Formatter::write_fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hbc1c5dc5bbe57c4aE(%"core::fmt::Formatter"* align 8, %"core::fmt::Arguments"*) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i64 @f128_to_i64({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i64 @f128_to_u64({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare signext i8 @f128_to_i8({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare signext i16 @f128_to_i16({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i32 @f128_to_i32({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare zeroext i8 @f128_to_u8({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare zeroext i16 @f128_to_u16({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i32 @f128_to_u32({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare float @f128_to_f32({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare double @f128_to_f64({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @f128_to_i128({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @f128_to_u128({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @i64_to_f128(i64) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @u64_to_f128(i64) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @isize_to_f128(i64) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @i8_to_f128(i8 signext) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @i16_to_f128(i16 signext) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @i32_to_f128(i32) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @usize_to_f128(i64) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @u8_to_f128(i8 zeroext) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @u16_to_f128(i16 zeroext) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @u32_to_f128(i32) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @f32_to_f128(float) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @f64_to_f128(double) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @u128_to_f128({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @i128_to_f128({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @floorq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @ceilq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @roundq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @truncq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @frexpq_f({ i64, i64 }, i32*) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @fmaq_f({ i64, i64 }, { i64, i64 }, { i64, i64 }) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #2

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @powq_f({ i64, i64 }, { i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @sqrtq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @expq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @logq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @log2q_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @log10q_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @cbrtq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @hypotq_f({ i64, i64 }, { i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @sinq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @cosq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @tanq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @asinq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @acosq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @atanq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @atan2q_f({ i64, i64 }, { i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @expm1q_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @log1pq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @sinhq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @coshq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @tanhq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @asinhq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @acoshq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @atanhq_f({ i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @f128_add({ i64, i64 }, { i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @f128_sub({ i64, i64 }, { i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @f128_mul({ i64, i64 }, { i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @f128_div({ i64, i64 }, { i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @fmodq_f({ i64, i64 }, { i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare zeroext i8 @lteq({ i64, i64 }, { i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare zeroext i8 @gteq({ i64, i64 }, { i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare zeroext i8 @eqq({ i64, i64 }, { i64, i64 }) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare zeroext i8 @neqq({ i64, i64 }, { i64, i64 }) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #11

; Function Attrs: nonlazybind uwtable
declare i32 @qtostr(i8*, i64, i8*, { i64, i64 }) unnamed_addr #1

; core::str::converts::from_utf8
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3str8converts9from_utf817h44aac8e9d8892328E(%"core::result::Result<&str, core::str::error::Utf8Error>"* sret(%"core::result::Result<&str, core::str::error::Utf8Error>"), [0 x i8]* align 1, i64) unnamed_addr #1

attributes #0 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #4 = { argmemonly nofree nounwind willreturn }
attributes #5 = { nofree nosync nounwind readnone willreturn }
attributes #6 = { cold noinline noreturn nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #7 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #8 = { nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #9 = { noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #10 = { cold noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #11 = { argmemonly nofree nounwind willreturn writeonly }
attributes #12 = { noreturn }
attributes #13 = { noinline }
attributes #14 = { noinline noreturn nounwind }
attributes #15 = { nounwind }

!llvm.module.flags = !{!35, !36, !37, !38}
!llvm.dbg.cu = !{!39}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<core::str::error::Utf8Error as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<core::str::error::Utf8Error as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !12, templateParams: !26, identifier: "2a304378a952e564f9f7c3b0eb1bd68f")
!4 = !{!5, !8, !10, !11}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!12 = !DICompositeType(tag: DW_TAG_structure_type, name: "Utf8Error", scope: !13, file: !2, size: 128, align: 64, elements: !16, templateParams: !26, identifier: "35640da808722046545043bbe2b47af")
!13 = !DINamespace(name: "error", scope: !14)
!14 = !DINamespace(name: "str", scope: !15)
!15 = !DINamespace(name: "core", scope: null)
!16 = !{!17, !18}
!17 = !DIDerivedType(tag: DW_TAG_member, name: "valid_up_to", scope: !12, file: !2, baseType: !9, size: 64, align: 64)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "error_len", scope: !12, file: !2, baseType: !19, size: 16, align: 8, offset: 64)
!19 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u8>", scope: !20, file: !2, size: 16, align: 8, elements: !21, templateParams: !26, identifier: "65ae0e18105bdc577eb3ca49b06b3677")
!20 = !DINamespace(name: "option", scope: !15)
!21 = !{!22}
!22 = !DICompositeType(tag: DW_TAG_variant_part, scope: !19, file: !2, size: 16, align: 8, elements: !23, templateParams: !26, identifier: "88432b888f172e6554107ea8099bcf12", discriminator: !34)
!23 = !{!24, !30}
!24 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !22, file: !2, baseType: !25, size: 16, align: 8, extraData: i64 0)
!25 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !19, file: !2, size: 16, align: 8, elements: !26, templateParams: !27, identifier: "6864665ee9c789837278808653d08bd9")
!26 = !{}
!27 = !{!28}
!28 = !DITemplateTypeParameter(name: "T", type: !29)
!29 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !22, file: !2, baseType: !31, size: 16, align: 8, extraData: i64 1)
!31 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !19, file: !2, size: 16, align: 8, elements: !32, templateParams: !27, identifier: "14747ccbd03bf6e789eba9ee51901f26")
!32 = !{!33}
!33 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !31, file: !2, baseType: !29, size: 8, align: 8, offset: 8)
!34 = !DIDerivedType(tag: DW_TAG_member, scope: !19, file: !2, baseType: !29, size: 8, align: 8, flags: DIFlagArtificial)
!35 = !{i32 7, !"PIC Level", i32 2}
!36 = !{i32 2, !"RtLibUseGOT", i32 1}
!37 = !{i32 2, !"Dwarf Version", i32 4}
!38 = !{i32 2, !"Debug Info Version", i32 3}
!39 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !40, producer: "clang LLVM (rustc version 1.65.0-nightly (d394408fb 2022-08-07))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !41, globals: !141)
!40 = !DIFile(filename: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/f128_internal-0.2.2/src/lib.rs/@/f128_internal.55a143e5-cgu.0", directory: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/f128_internal-0.2.2")
!41 = !{!42, !51, !120, !126, !134}
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !43, file: !2, baseType: !29, size: 8, align: 8, flags: DIFlagEnumClass, elements: !46)
!43 = !DINamespace(name: "v1", scope: !44)
!44 = !DINamespace(name: "rt", scope: !45)
!45 = !DINamespace(name: "fmt", scope: !15)
!46 = !{!47, !48, !49, !50}
!47 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!48 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!49 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!50 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!51 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ValidAlignEnum64", scope: !52, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagEnumClass, elements: !55)
!52 = !DINamespace(name: "valid_align", scope: !53)
!53 = !DINamespace(name: "mem", scope: !15)
!54 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!55 = !{!56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119}
!56 = !DIEnumerator(name: "_Align1Shl0", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "_Align1Shl1", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "_Align1Shl2", value: 4, isUnsigned: true)
!59 = !DIEnumerator(name: "_Align1Shl3", value: 8, isUnsigned: true)
!60 = !DIEnumerator(name: "_Align1Shl4", value: 16, isUnsigned: true)
!61 = !DIEnumerator(name: "_Align1Shl5", value: 32, isUnsigned: true)
!62 = !DIEnumerator(name: "_Align1Shl6", value: 64, isUnsigned: true)
!63 = !DIEnumerator(name: "_Align1Shl7", value: 128, isUnsigned: true)
!64 = !DIEnumerator(name: "_Align1Shl8", value: 256, isUnsigned: true)
!65 = !DIEnumerator(name: "_Align1Shl9", value: 512, isUnsigned: true)
!66 = !DIEnumerator(name: "_Align1Shl10", value: 1024, isUnsigned: true)
!67 = !DIEnumerator(name: "_Align1Shl11", value: 2048, isUnsigned: true)
!68 = !DIEnumerator(name: "_Align1Shl12", value: 4096, isUnsigned: true)
!69 = !DIEnumerator(name: "_Align1Shl13", value: 8192, isUnsigned: true)
!70 = !DIEnumerator(name: "_Align1Shl14", value: 16384, isUnsigned: true)
!71 = !DIEnumerator(name: "_Align1Shl15", value: 32768, isUnsigned: true)
!72 = !DIEnumerator(name: "_Align1Shl16", value: 65536, isUnsigned: true)
!73 = !DIEnumerator(name: "_Align1Shl17", value: 131072, isUnsigned: true)
!74 = !DIEnumerator(name: "_Align1Shl18", value: 262144, isUnsigned: true)
!75 = !DIEnumerator(name: "_Align1Shl19", value: 524288, isUnsigned: true)
!76 = !DIEnumerator(name: "_Align1Shl20", value: 1048576, isUnsigned: true)
!77 = !DIEnumerator(name: "_Align1Shl21", value: 2097152, isUnsigned: true)
!78 = !DIEnumerator(name: "_Align1Shl22", value: 4194304, isUnsigned: true)
!79 = !DIEnumerator(name: "_Align1Shl23", value: 8388608, isUnsigned: true)
!80 = !DIEnumerator(name: "_Align1Shl24", value: 16777216, isUnsigned: true)
!81 = !DIEnumerator(name: "_Align1Shl25", value: 33554432, isUnsigned: true)
!82 = !DIEnumerator(name: "_Align1Shl26", value: 67108864, isUnsigned: true)
!83 = !DIEnumerator(name: "_Align1Shl27", value: 134217728, isUnsigned: true)
!84 = !DIEnumerator(name: "_Align1Shl28", value: 268435456, isUnsigned: true)
!85 = !DIEnumerator(name: "_Align1Shl29", value: 536870912, isUnsigned: true)
!86 = !DIEnumerator(name: "_Align1Shl30", value: 1073741824, isUnsigned: true)
!87 = !DIEnumerator(name: "_Align1Shl31", value: 2147483648, isUnsigned: true)
!88 = !DIEnumerator(name: "_Align1Shl32", value: 4294967296, isUnsigned: true)
!89 = !DIEnumerator(name: "_Align1Shl33", value: 8589934592, isUnsigned: true)
!90 = !DIEnumerator(name: "_Align1Shl34", value: 17179869184, isUnsigned: true)
!91 = !DIEnumerator(name: "_Align1Shl35", value: 34359738368, isUnsigned: true)
!92 = !DIEnumerator(name: "_Align1Shl36", value: 68719476736, isUnsigned: true)
!93 = !DIEnumerator(name: "_Align1Shl37", value: 137438953472, isUnsigned: true)
!94 = !DIEnumerator(name: "_Align1Shl38", value: 274877906944, isUnsigned: true)
!95 = !DIEnumerator(name: "_Align1Shl39", value: 549755813888, isUnsigned: true)
!96 = !DIEnumerator(name: "_Align1Shl40", value: 1099511627776, isUnsigned: true)
!97 = !DIEnumerator(name: "_Align1Shl41", value: 2199023255552, isUnsigned: true)
!98 = !DIEnumerator(name: "_Align1Shl42", value: 4398046511104, isUnsigned: true)
!99 = !DIEnumerator(name: "_Align1Shl43", value: 8796093022208, isUnsigned: true)
!100 = !DIEnumerator(name: "_Align1Shl44", value: 17592186044416, isUnsigned: true)
!101 = !DIEnumerator(name: "_Align1Shl45", value: 35184372088832, isUnsigned: true)
!102 = !DIEnumerator(name: "_Align1Shl46", value: 70368744177664, isUnsigned: true)
!103 = !DIEnumerator(name: "_Align1Shl47", value: 140737488355328, isUnsigned: true)
!104 = !DIEnumerator(name: "_Align1Shl48", value: 281474976710656, isUnsigned: true)
!105 = !DIEnumerator(name: "_Align1Shl49", value: 562949953421312, isUnsigned: true)
!106 = !DIEnumerator(name: "_Align1Shl50", value: 1125899906842624, isUnsigned: true)
!107 = !DIEnumerator(name: "_Align1Shl51", value: 2251799813685248, isUnsigned: true)
!108 = !DIEnumerator(name: "_Align1Shl52", value: 4503599627370496, isUnsigned: true)
!109 = !DIEnumerator(name: "_Align1Shl53", value: 9007199254740992, isUnsigned: true)
!110 = !DIEnumerator(name: "_Align1Shl54", value: 18014398509481984, isUnsigned: true)
!111 = !DIEnumerator(name: "_Align1Shl55", value: 36028797018963968, isUnsigned: true)
!112 = !DIEnumerator(name: "_Align1Shl56", value: 72057594037927936, isUnsigned: true)
!113 = !DIEnumerator(name: "_Align1Shl57", value: 144115188075855872, isUnsigned: true)
!114 = !DIEnumerator(name: "_Align1Shl58", value: 288230376151711744, isUnsigned: true)
!115 = !DIEnumerator(name: "_Align1Shl59", value: 576460752303423488, isUnsigned: true)
!116 = !DIEnumerator(name: "_Align1Shl60", value: 1152921504606846976, isUnsigned: true)
!117 = !DIEnumerator(name: "_Align1Shl61", value: 2305843009213693952, isUnsigned: true)
!118 = !DIEnumerator(name: "_Align1Shl62", value: 4611686018427387904, isUnsigned: true)
!119 = !DIEnumerator(name: "_Align1Shl63", value: 9223372036854775808, isUnsigned: true)
!120 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AllocInit", scope: !121, file: !2, baseType: !29, size: 8, align: 8, flags: DIFlagEnumClass, elements: !123)
!121 = !DINamespace(name: "raw_vec", scope: !122)
!122 = !DINamespace(name: "alloc", scope: null)
!123 = !{!124, !125}
!124 = !DIEnumerator(name: "Uninitialized", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "Zeroed", value: 1, isUnsigned: true)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FpCategory", scope: !127, file: !2, baseType: !29, size: 8, align: 8, flags: DIFlagEnumClass, elements: !128)
!127 = !DINamespace(name: "num", scope: !15)
!128 = !{!129, !130, !131, !132, !133}
!129 = !DIEnumerator(name: "Nan", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "Infinite", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "Zero", value: 2, isUnsigned: true)
!132 = !DIEnumerator(name: "Subnormal", value: 3, isUnsigned: true)
!133 = !DIEnumerator(name: "Normal", value: 4, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !135, file: !2, baseType: !136, size: 8, align: 8, flags: DIFlagEnumClass, elements: !137)
!135 = !DINamespace(name: "cmp", scope: !15)
!136 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!137 = !{!138, !139, !140}
!138 = !DIEnumerator(name: "Less", value: 255)
!139 = !DIEnumerator(name: "Equal", value: 0)
!140 = !DIEnumerator(name: "Greater", value: 1)
!141 = !{!0}
!142 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h3c5f3b3dceabe859E", scope: !144, file: !143, line: 300, type: !147, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !175)
!143 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "22a04328eca3d78fd2bf5357f9150928")
!144 = !DINamespace(name: "{impl#3}", scope: !145)
!145 = !DINamespace(name: "index", scope: !146)
!146 = !DINamespace(name: "slice", scope: !15)
!147 = !DISubroutineType(types: !148)
!148 = !{!149, !154, !149, !162}
!149 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u8]", file: !2, size: 128, align: 64, elements: !150, templateParams: !26, identifier: "7d49e60d2ca720f66806f7375f860e2")
!150 = !{!151, !153}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !149, file: !2, baseType: !152, size: 64, align: 64)
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64, align: 64, dwarfAddressSpace: 0)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !149, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!154 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !155, file: !2, size: 128, align: 64, elements: !157, templateParams: !160, identifier: "855eb37746b15049ea4556b174e97dd7")
!155 = !DINamespace(name: "range", scope: !156)
!156 = !DINamespace(name: "ops", scope: !15)
!157 = !{!158, !159}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !154, file: !2, baseType: !9, size: 64, align: 64)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !154, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!160 = !{!161}
!161 = !DITemplateTypeParameter(name: "Idx", type: !9)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !163, size: 64, align: 64, dwarfAddressSpace: 0)
!163 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !164, file: !2, size: 192, align: 64, elements: !166, templateParams: !26, identifier: "ef576a844c237f54e9e75bf7bba044c0")
!164 = !DINamespace(name: "location", scope: !165)
!165 = !DINamespace(name: "panic", scope: !15)
!166 = !{!167, !172, !174}
!167 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !163, file: !2, baseType: !168, size: 128, align: 64)
!168 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !169, templateParams: !26, identifier: "c603ebb2af364502ef89131a86c6ad9b")
!169 = !{!170, !171}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !168, file: !2, baseType: !152, size: 64, align: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !168, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !163, file: !2, baseType: !173, size: 32, align: 32, offset: 128)
!173 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !163, file: !2, baseType: !173, size: 32, align: 32, offset: 160)
!175 = !{!176, !177}
!176 = !DILocalVariable(name: "self", arg: 1, scope: !142, file: !143, line: 300, type: !154)
!177 = !DILocalVariable(name: "slice", arg: 2, scope: !142, file: !143, line: 300, type: !149)
!178 = !DILocation(line: 300, column: 14, scope: !142)
!179 = !DILocation(line: 300, column: 20, scope: !142)
!180 = !DILocation(line: 301, column: 12, scope: !142)
!181 = !DILocation(line: 303, column: 19, scope: !142)
!182 = !DILocation(line: 302, column: 13, scope: !142)
!183 = !DILocation(line: 307, column: 20, scope: !142)
!184 = !DILocation(line: 304, column: 13, scope: !142)
!185 = !DILocation(line: 308, column: 6, scope: !142)
!186 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17he45df862cf1057e5E", scope: !187, file: !143, line: 350, type: !188, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !193)
!187 = !DINamespace(name: "{impl#4}", scope: !145)
!188 = !DISubroutineType(types: !189)
!189 = !{!149, !190, !149, !162}
!190 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !155, file: !2, size: 64, align: 64, elements: !191, templateParams: !160, identifier: "e254bd9803ca1fe3c70093646958bde2")
!191 = !{!192}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !190, file: !2, baseType: !9, size: 64, align: 64)
!193 = !{!194, !195}
!194 = !DILocalVariable(name: "self", arg: 1, scope: !186, file: !143, line: 350, type: !190)
!195 = !DILocalVariable(name: "slice", arg: 2, scope: !186, file: !143, line: 350, type: !149)
!196 = !DILocation(line: 350, column: 14, scope: !186)
!197 = !DILocation(line: 350, column: 20, scope: !186)
!198 = !DILocation(line: 351, column: 9, scope: !186)
!199 = !DILocation(line: 352, column: 6, scope: !186)
!200 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17hd5d28fb461c84be2E", scope: !202, file: !201, line: 770, type: !205, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !218)
!201 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "856acc92efd7925b83dd1e3c577ddbdc")
!202 = !DINamespace(name: "{impl#16}", scope: !203)
!203 = !DINamespace(name: "non_null", scope: !204)
!204 = !DINamespace(name: "ptr", scope: !15)
!205 = !DISubroutineType(types: !206)
!206 = !{!207, !211}
!207 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !203, file: !2, size: 64, align: 64, elements: !208, templateParams: !27, identifier: "3160283ea80cecf6149fff38a2e996de")
!208 = !{!209}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !207, file: !2, baseType: !210, size: 64, align: 64)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !29, size: 64, align: 64, dwarfAddressSpace: 0)
!211 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<u8>", scope: !212, file: !2, size: 64, align: 64, elements: !213, templateParams: !27, identifier: "7e72c5db004520f6d0779c7d4ace2142")
!212 = !DINamespace(name: "unique", scope: !204)
!213 = !{!214, !215}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !211, file: !2, baseType: !207, size: 64, align: 64)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !211, file: !2, baseType: !216, align: 8)
!216 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<u8>", scope: !217, file: !2, align: 8, elements: !26, templateParams: !27, identifier: "e338a8151f1037c76eadd10ab3c53972")
!217 = !DINamespace(name: "marker", scope: !15)
!218 = !{!219}
!219 = !DILocalVariable(name: "unique", arg: 1, scope: !200, file: !201, line: 770, type: !211)
!220 = !DILocation(line: 770, column: 13, scope: !200)
!221 = !DILocation(line: 773, column: 41, scope: !200)
!222 = !DILocalVariable(name: "self", scope: !223, file: !201, line: 773, type: !211, align: 8)
!223 = !DILexicalBlockFile(scope: !224, file: !201, discriminator: 0)
!224 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf2bd8cc2aef2efdeE", scope: !211, file: !225, line: 103, type: !226, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !229)
!225 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/unique.rs", directory: "", checksumkind: CSK_MD5, checksum: "acdefab5f14df6e5aef1141fd6b768c9")
!226 = !DISubroutineType(types: !227)
!227 = !{!228, !211}
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !29, size: 64, align: 64, dwarfAddressSpace: 0)
!229 = !{!222}
!230 = !DILocation(line: 773, column: 41, scope: !223, inlinedAt: !221)
!231 = !DILocalVariable(name: "self", scope: !232, file: !201, line: 773, type: !207, align: 8)
!232 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hed9bdb025f33c0c7E", scope: !207, file: !201, line: 330, type: !233, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !235)
!233 = !DISubroutineType(types: !234)
!234 = !{!228, !207}
!235 = !{!231}
!236 = !DILocation(line: 773, column: 41, scope: !232, inlinedAt: !237)
!237 = !DILocation(line: 104, column: 9, scope: !224, inlinedAt: !221)
!238 = !DILocalVariable(name: "ptr", scope: !239, file: !201, line: 773, type: !228, align: 8)
!239 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hcde0d87aaafdc539E", scope: !207, file: !201, line: 196, type: !240, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !242)
!240 = !DISubroutineType(types: !241)
!241 = !{!207, !228}
!242 = !{!238}
!243 = !DILocation(line: 773, column: 18, scope: !239, inlinedAt: !244)
!244 = !DILocation(line: 773, column: 18, scope: !200)
!245 = !DILocation(line: 774, column: 6, scope: !200)
!246 = distinct !DISubprogram(name: "forward_unchecked", linkageName: "_ZN47_$LT$i32$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hd7c3dd047be86f92E", scope: !248, file: !247, line: 189, type: !251, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !254)
!247 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "a5e6372fb466d62a237d46ecffb4676a")
!248 = !DINamespace(name: "{impl#34}", scope: !249)
!249 = !DINamespace(name: "range", scope: !250)
!250 = !DINamespace(name: "iter", scope: !15)
!251 = !DISubroutineType(types: !252)
!252 = !{!253, !253, !9}
!253 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!254 = !{!255, !256}
!255 = !DILocalVariable(name: "start", arg: 1, scope: !246, file: !247, line: 189, type: !253)
!256 = !DILocalVariable(name: "n", arg: 2, scope: !246, file: !247, line: 189, type: !9)
!257 = !DILocation(line: 189, column: 37, scope: !246)
!258 = !DILocation(line: 189, column: 50, scope: !246)
!259 = !DILocation(line: 191, column: 22, scope: !246)
!260 = !DILocalVariable(name: "self", scope: !261, file: !247, line: 191, type: !253, align: 4)
!261 = !DILexicalBlockFile(scope: !262, file: !247, discriminator: 0)
!262 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num21_$LT$impl$u20$i32$GT$13unchecked_add17h38773511627d7785E", scope: !264, file: !263, line: 453, type: !265, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !267)
!263 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/int_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "1d4cee595ea848b5e7eb7a8ae38f492d")
!264 = !DINamespace(name: "{impl#2}", scope: !127)
!265 = !DISubroutineType(types: !266)
!266 = !{!253, !253, !253}
!267 = !{!260, !268}
!268 = !DILocalVariable(name: "rhs", scope: !261, file: !247, line: 191, type: !253, align: 4)
!269 = !DILocation(line: 191, column: 22, scope: !261, inlinedAt: !259)
!270 = !DILocation(line: 191, column: 42, scope: !246)
!271 = !DILocation(line: 192, column: 10, scope: !246)
!272 = distinct !DISubprogram(name: "forward_unchecked", linkageName: "_ZN47_$LT$i64$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h4e4bc69ac704d107E", scope: !273, file: !247, line: 189, type: !274, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !277)
!273 = !DINamespace(name: "{impl#36}", scope: !249)
!274 = !DISubroutineType(types: !275)
!275 = !{!276, !276, !9}
!276 = !DIBasicType(name: "i64", size: 64, encoding: DW_ATE_signed)
!277 = !{!278, !279}
!278 = !DILocalVariable(name: "start", arg: 1, scope: !272, file: !247, line: 189, type: !276)
!279 = !DILocalVariable(name: "n", arg: 2, scope: !272, file: !247, line: 189, type: !9)
!280 = !DILocation(line: 189, column: 37, scope: !272)
!281 = !DILocation(line: 189, column: 50, scope: !272)
!282 = !DILocation(line: 191, column: 22, scope: !272)
!283 = !DILocalVariable(name: "self", scope: !284, file: !247, line: 191, type: !276, align: 8)
!284 = !DILexicalBlockFile(scope: !285, file: !247, discriminator: 0)
!285 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num21_$LT$impl$u20$i64$GT$13unchecked_add17hebd01f7b144a49ecE", scope: !286, file: !263, line: 453, type: !287, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !289)
!286 = !DINamespace(name: "{impl#3}", scope: !127)
!287 = !DISubroutineType(types: !288)
!288 = !{!276, !276, !276}
!289 = !{!283, !290}
!290 = !DILocalVariable(name: "rhs", scope: !284, file: !247, line: 191, type: !276, align: 8)
!291 = !DILocation(line: 191, column: 22, scope: !284, inlinedAt: !282)
!292 = !DILocation(line: 191, column: 42, scope: !272)
!293 = !DILocation(line: 192, column: 10, scope: !272)
!294 = distinct !DISubprogram(name: "to_string", linkageName: "_ZN47_$LT$str$u20$as$u20$alloc..string..ToString$GT$9to_string17hb40005f8b224a7a6E", scope: !296, file: !295, line: 2551, type: !298, scopeLine: 2551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !317)
!295 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/string.rs", directory: "", checksumkind: CSK_MD5, checksum: "e1c2cdf24b94f38a53da13b30e8aa8ef")
!296 = !DINamespace(name: "{impl#44}", scope: !297)
!297 = !DINamespace(name: "string", scope: !122)
!298 = !DISubroutineType(types: !299)
!299 = !{!300, !168}
!300 = !DICompositeType(tag: DW_TAG_structure_type, name: "String", scope: !297, file: !2, size: 192, align: 64, elements: !301, templateParams: !26, identifier: "f9be69e76fc784402e5b8eb88fb718b5")
!301 = !{!302}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !300, file: !2, baseType: !303, size: 192, align: 64)
!303 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<u8, alloc::alloc::Global>", scope: !304, file: !2, size: 192, align: 64, elements: !305, templateParams: !314, identifier: "f48a096c1ed19eb7ba15a7173429013")
!304 = !DINamespace(name: "vec", scope: !122)
!305 = !{!306, !316}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !303, file: !2, baseType: !307, size: 128, align: 64)
!307 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<u8, alloc::alloc::Global>", scope: !121, file: !2, size: 128, align: 64, elements: !308, templateParams: !314, identifier: "d09dab1a097018b9dd4dad6f3ce84c27")
!308 = !{!309, !310, !311}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !307, file: !2, baseType: !211, size: 64, align: 64)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !307, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !307, file: !2, baseType: !312, align: 8)
!312 = !DICompositeType(tag: DW_TAG_structure_type, name: "Global", scope: !313, file: !2, align: 8, elements: !26, identifier: "3328ba4994ba07f4a4a3e83fae935932")
!313 = !DINamespace(name: "alloc", scope: !122)
!314 = !{!28, !315}
!315 = !DITemplateTypeParameter(name: "A", type: !312)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !303, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!317 = !{!318}
!318 = !DILocalVariable(name: "self", arg: 1, scope: !294, file: !295, line: 2551, type: !168)
!319 = !DILocation(line: 2551, column: 18, scope: !294)
!320 = !DILocalVariable(name: "bytes", scope: !321, file: !295, line: 2552, type: !303, align: 8)
!321 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN5alloc6string6String19from_utf8_unchecked17h29eca7c03265a7f5E", scope: !300, file: !295, line: 844, type: !322, scopeLine: 844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !324)
!322 = !DISubroutineType(types: !323)
!323 = !{!300, !303}
!324 = !{!320}
!325 = !DILocation(line: 2552, column: 9, scope: !321, inlinedAt: !326)
!326 = !DILocation(line: 227, column: 18, scope: !327, inlinedAt: !334)
!327 = distinct !DISubprogram(name: "to_owned", linkageName: "_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h0448ba9e8f2e7d08E", scope: !329, file: !328, line: 226, type: !298, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !331)
!328 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/str.rs", directory: "", checksumkind: CSK_MD5, checksum: "f5a4e60b6f1008960143e2fa483df20f")
!329 = !DINamespace(name: "{impl#4}", scope: !330)
!330 = !DINamespace(name: "str", scope: !122)
!331 = !{!332}
!332 = !DILocalVariable(name: "self", scope: !333, file: !295, line: 2552, type: !168, align: 8)
!333 = !DILexicalBlockFile(scope: !327, file: !295, discriminator: 0)
!334 = !DILocation(line: 2606, column: 9, scope: !335, inlinedAt: !339)
!335 = distinct !DISubprogram(name: "from", linkageName: "_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h9af8d66671caa2adE", scope: !336, file: !295, line: 2605, type: !298, scopeLine: 2605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !337)
!336 = !DINamespace(name: "{impl#50}", scope: !297)
!337 = !{!338}
!338 = !DILocalVariable(name: "s", scope: !335, file: !295, line: 2552, type: !168, align: 8)
!339 = !DILocation(line: 2552, column: 9, scope: !294)
!340 = !DILocation(line: 2552, column: 22, scope: !294)
!341 = !DILocation(line: 2552, column: 9, scope: !335, inlinedAt: !339)
!342 = !DILocation(line: 2552, column: 9, scope: !333, inlinedAt: !334)
!343 = !DILocalVariable(name: "self", scope: !344, file: !295, line: 2552, type: !168, align: 8)
!344 = !DILexicalBlockFile(scope: !345, file: !295, discriminator: 0)
!345 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !347, file: !346, line: 323, type: !348, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !350)
!346 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "dd49fcee40af5f348df1f9868b20cc92")
!347 = !DINamespace(name: "{impl#0}", scope: !14)
!348 = !DISubroutineType(types: !349)
!349 = !{!149, !168}
!350 = !{!343}
!351 = !DILocation(line: 2552, column: 9, scope: !344, inlinedAt: !352)
!352 = !DILocation(line: 227, column: 46, scope: !327, inlinedAt: !334)
!353 = !{i64 1}
!354 = !DILocation(line: 2553, column: 6, scope: !294)
!355 = distinct !DISubprogram(name: "const_eval_select<(&[u8]), fn(&[u8]) -> &core::ffi::c_str::CStr, fn(&[u8]) -> &core::ffi::c_str::CStr, &core::ffi::c_str::CStr>", linkageName: "_ZN4core10intrinsics17const_eval_select17h9e040f661d44916eE", scope: !357, file: !356, line: 2687, type: !358, scopeLine: 2687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !380, retainedNodes: !376)
!356 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "f96ba730d7cf23ae45fdc72e7caf5f1b")
!357 = !DINamespace(name: "intrinsics", scope: !15)
!358 = !DISubroutineType(types: !359)
!359 = !{!360, !370, !373, !373}
!360 = !DICompositeType(tag: DW_TAG_structure_type, name: "&core::ffi::c_str::CStr", file: !2, size: 128, align: 64, elements: !361, templateParams: !26, identifier: "9a691f075a9e4b9c7e7049abca5ed1fb")
!361 = !{!362, !369}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !360, file: !2, baseType: !363, size: 64, align: 64)
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64, align: 64, dwarfAddressSpace: 0)
!364 = !DICompositeType(tag: DW_TAG_structure_type, name: "CStr", scope: !365, file: !2, align: 8, elements: !367, templateParams: !26, identifier: "2da013c6b133655882cf6258a2093276")
!365 = !DINamespace(name: "c_str", scope: !366)
!366 = !DINamespace(name: "ffi", scope: !15)
!367 = !{!368}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !364, file: !2, baseType: !136, align: 8)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !360, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!370 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&[u8])", file: !2, size: 128, align: 64, elements: !371, templateParams: !26, identifier: "65821ee449d7484056bb2ad385d752b8")
!371 = !{!372}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !370, file: !2, baseType: !149, size: 128, align: 64)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&[u8]) -> &core::ffi::c_str::CStr", baseType: !374, size: 64, align: 64, dwarfAddressSpace: 0)
!374 = !DISubroutineType(types: !375)
!375 = !{!360, !149}
!376 = !{!377, !378, !379}
!377 = !DILocalVariable(name: "arg", arg: 1, scope: !355, file: !356, line: 2688, type: !370)
!378 = !DILocalVariable(name: "_called_in_const", arg: 2, scope: !355, file: !356, line: 2689, type: !373)
!379 = !DILocalVariable(name: "called_at_rt", arg: 3, scope: !355, file: !356, line: 2690, type: !373)
!380 = !{!381, !382, !383, !384}
!381 = !DITemplateTypeParameter(name: "ARG", type: !370)
!382 = !DITemplateTypeParameter(name: "F", type: !373)
!383 = !DITemplateTypeParameter(name: "G", type: !373)
!384 = !DITemplateTypeParameter(name: "RET", type: !360)
!385 = !DILocation(line: 2688, column: 5, scope: !355)
!386 = !DILocation(line: 2689, column: 5, scope: !355)
!387 = !DILocation(line: 2690, column: 5, scope: !355)
!388 = !DILocation(line: 2696, column: 5, scope: !355)
!389 = !DILocation(line: 2697, column: 1, scope: !355)
!390 = !DILocation(line: 2687, column: 1, scope: !355)
!391 = !DILocation(line: 2697, column: 2, scope: !355)
!392 = distinct !DISubprogram(name: "lt", linkageName: "_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i32$GT$2lt17h1ca8a2a386635526E", scope: !394, file: !393, line: 1423, type: !396, scopeLine: 1423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !400)
!393 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "381f61764ec5ac4111e955260ff27c96")
!394 = !DINamespace(name: "{impl#72}", scope: !395)
!395 = !DINamespace(name: "impls", scope: !135)
!396 = !DISubroutineType(types: !397)
!397 = !{!398, !399, !399}
!398 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&i32", baseType: !253, size: 64, align: 64, dwarfAddressSpace: 0)
!400 = !{!401, !402}
!401 = !DILocalVariable(name: "self", arg: 1, scope: !392, file: !393, line: 1423, type: !399)
!402 = !DILocalVariable(name: "other", arg: 2, scope: !392, file: !393, line: 1423, type: !399)
!403 = !DILocation(line: 1423, column: 23, scope: !392)
!404 = !DILocation(line: 1423, column: 30, scope: !392)
!405 = !DILocation(line: 1423, column: 52, scope: !392)
!406 = !DILocation(line: 1423, column: 62, scope: !392)
!407 = !DILocation(line: 1423, column: 72, scope: !392)
!408 = distinct !DISubprogram(name: "lt", linkageName: "_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i64$GT$2lt17hcc3df5354789fbccE", scope: !409, file: !393, line: 1423, type: !410, scopeLine: 1423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !413)
!409 = !DINamespace(name: "{impl#74}", scope: !395)
!410 = !DISubroutineType(types: !411)
!411 = !{!398, !412, !412}
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&i64", baseType: !276, size: 64, align: 64, dwarfAddressSpace: 0)
!413 = !{!414, !415}
!414 = !DILocalVariable(name: "self", arg: 1, scope: !408, file: !393, line: 1423, type: !412)
!415 = !DILocalVariable(name: "other", arg: 2, scope: !408, file: !393, line: 1423, type: !412)
!416 = !DILocation(line: 1423, column: 23, scope: !408)
!417 = !DILocation(line: 1423, column: 30, scope: !408)
!418 = !DILocation(line: 1423, column: 52, scope: !408)
!419 = !DILocation(line: 1423, column: 62, scope: !408)
!420 = !DILocation(line: 1423, column: 72, scope: !408)
!421 = distinct !DISubprogram(name: "as_ptr", linkageName: "_ZN4core3ffi5c_str4CStr6as_ptr17h5d031a68d4be8406E", scope: !364, file: !422, line: 475, type: !423, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !426)
!422 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ffi/c_str.rs", directory: "", checksumkind: CSK_MD5, checksum: "a50c941e663797b3cd132afeffc32d87")
!423 = !DISubroutineType(types: !424)
!424 = !{!425, !360}
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const i8", baseType: !136, size: 64, align: 64, dwarfAddressSpace: 0)
!426 = !{!427}
!427 = !DILocalVariable(name: "self", arg: 1, scope: !421, file: !422, line: 475, type: !360)
!428 = !DILocation(line: 475, column: 25, scope: !421)
!429 = !DILocation(line: 476, column: 9, scope: !421)
!430 = !DILocalVariable(name: "self", scope: !431, file: !422, line: 476, type: !437, align: 8)
!431 = !DILexicalBlockFile(scope: !432, file: !422, discriminator: 0)
!432 = distinct !DISubprogram(name: "as_ptr<i8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hbf829bfffeda8c36E", scope: !434, file: !433, line: 476, type: !435, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !443, retainedNodes: !442)
!433 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "7e4712ab5341970456c5be6b0829b712")
!434 = !DINamespace(name: "{impl#0}", scope: !146)
!435 = !DISubroutineType(types: !436)
!436 = !{!425, !437}
!437 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[i8]", file: !2, size: 128, align: 64, elements: !438, templateParams: !26, identifier: "cc2ad320ed202ac3c13bb57e7e44d101")
!438 = !{!439, !441}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !437, file: !2, baseType: !440, size: 64, align: 64)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64, align: 64, dwarfAddressSpace: 0)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !437, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!442 = !{!430}
!443 = !{!444}
!444 = !DITemplateTypeParameter(name: "T", type: !136)
!445 = !DILocation(line: 476, column: 9, scope: !431, inlinedAt: !429)
!446 = !DILocation(line: 477, column: 6, scope: !421)
!447 = distinct !DISubprogram(name: "new_display<alloc::string::String>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17h8f611a8e12f0c43cE", scope: !449, file: !448, line: 318, type: !510, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !515, retainedNodes: !513)
!448 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "18dcc19de419985ae78d2bd8ed07e5dc")
!449 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArgumentV1", scope: !45, file: !2, size: 128, align: 64, elements: !450, templateParams: !26, identifier: "753c369e46bf484710f4d769a3fba395")
!450 = !{!451, !455}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !449, file: !2, baseType: !452, size: 64, align: 64)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::{extern#0}::Opaque", baseType: !453, size: 64, align: 64, dwarfAddressSpace: 0)
!453 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", scope: !454, file: !2, align: 8, elements: !26, identifier: "83e8d27b51d2e55ae9422e57e00c6cd7")
!454 = !DINamespace(name: "{extern#0}", scope: !45)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !449, file: !2, baseType: !456, size: 64, align: 64, offset: 64)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::{extern#0}::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !457, size: 64, align: 64, dwarfAddressSpace: 0)
!457 = !DISubroutineType(types: !458)
!458 = !{!459, !452, !477}
!459 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !460, file: !2, size: 8, align: 8, elements: !461, templateParams: !26, identifier: "d239d58a8e95223cd52e3ad2c36d40d7")
!460 = !DINamespace(name: "result", scope: !15)
!461 = !{!462}
!462 = !DICompositeType(tag: DW_TAG_variant_part, scope: !459, file: !2, size: 8, align: 8, elements: !463, templateParams: !26, identifier: "1fa2591b965a13cd50e38802b1727ca", discriminator: !476)
!463 = !{!464, !472}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !462, file: !2, baseType: !465, size: 8, align: 8, extraData: i64 0)
!465 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !459, file: !2, size: 8, align: 8, elements: !466, templateParams: !468, identifier: "cea751326735c343faf647063a65ad14")
!466 = !{!467}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !465, file: !2, baseType: !7, align: 8, offset: 8)
!468 = !{!469, !470}
!469 = !DITemplateTypeParameter(name: "T", type: !7)
!470 = !DITemplateTypeParameter(name: "E", type: !471)
!471 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !45, file: !2, align: 8, elements: !26, identifier: "87e319c059f1d372f32b0a49f33ec3cc")
!472 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !462, file: !2, baseType: !473, size: 8, align: 8, extraData: i64 1)
!473 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !459, file: !2, size: 8, align: 8, elements: !474, templateParams: !468, identifier: "6c6eb84ed910506586b60ba90dbaa2c")
!474 = !{!475}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !473, file: !2, baseType: !471, align: 8, offset: 8)
!476 = !DIDerivedType(tag: DW_TAG_member, scope: !459, file: !2, baseType: !29, size: 8, align: 8, flags: DIFlagArtificial)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !478, size: 64, align: 64, dwarfAddressSpace: 0)
!478 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !45, file: !2, size: 512, align: 64, elements: !479, templateParams: !26, identifier: "6e9ffaec9b89ebb810272bb66e7b2042")
!479 = !{!480, !481, !483, !484, !498, !499}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !478, file: !2, baseType: !173, size: 32, align: 32, offset: 384)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !478, file: !2, baseType: !482, size: 32, align: 32, offset: 416)
!482 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !478, file: !2, baseType: !42, size: 8, align: 8, offset: 448)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !478, file: !2, baseType: !485, size: 128, align: 64)
!485 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !20, file: !2, size: 128, align: 64, elements: !486, templateParams: !26, identifier: "5190463b0687da274ab794ccaf9d1fd8")
!486 = !{!487}
!487 = !DICompositeType(tag: DW_TAG_variant_part, scope: !485, file: !2, size: 128, align: 64, elements: !488, templateParams: !26, identifier: "db59d501e5f76645f4edce4cdbfeb328", discriminator: !497)
!488 = !{!489, !493}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !487, file: !2, baseType: !490, size: 128, align: 64, extraData: i64 0)
!490 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !485, file: !2, size: 128, align: 64, elements: !26, templateParams: !491, identifier: "a1c5f3dead8f24ccdada7bc2feedd145")
!491 = !{!492}
!492 = !DITemplateTypeParameter(name: "T", type: !9)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !487, file: !2, baseType: !494, size: 128, align: 64, extraData: i64 1)
!494 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !485, file: !2, size: 128, align: 64, elements: !495, templateParams: !491, identifier: "3ad875242c049b8143d7577f4eb10d1a")
!495 = !{!496}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !494, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!497 = !DIDerivedType(tag: DW_TAG_member, scope: !485, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !478, file: !2, baseType: !485, size: 128, align: 64, offset: 128)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !478, file: !2, baseType: !500, size: 128, align: 64, offset: 256)
!500 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !501, templateParams: !26, identifier: "3d4f80cd5361aaff4f795dd09efb8db1")
!501 = !{!502, !505}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !500, file: !2, baseType: !503, size: 64, align: 64)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64, align: 64, dwarfAddressSpace: 0)
!504 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !26, identifier: "abb712b259efc5e79bb67900edf24920")
!505 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !500, file: !2, baseType: !506, size: 64, align: 64, offset: 64)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !507, size: 64, align: 64, dwarfAddressSpace: 0)
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 64, elements: !508)
!508 = !{!509}
!509 = !DISubrange(count: 3, lowerBound: 0)
!510 = !DISubroutineType(types: !511)
!511 = !{!449, !512}
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::string::String", baseType: !300, size: 64, align: 64, dwarfAddressSpace: 0)
!513 = !{!514}
!514 = !DILocalVariable(name: "x", arg: 1, scope: !447, file: !448, line: 318, type: !512)
!515 = !{!516}
!516 = !DITemplateTypeParameter(name: "T", type: !300)
!517 = !DILocation(line: 318, column: 30, scope: !447)
!518 = !DILocation(line: 319, column: 23, scope: !447)
!519 = !DILocalVariable(name: "x", scope: !520, file: !448, line: 319, type: !512, align: 8)
!520 = distinct !DISubprogram(name: "new<alloc::string::String>", linkageName: "_ZN4core3fmt10ArgumentV13new17h77a23c09eaaa433dE", scope: !449, file: !448, line: 329, type: !521, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !515, retainedNodes: !526)
!521 = !DISubroutineType(types: !522)
!522 = !{!449, !512, !523}
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&alloc::string::String, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !524, size: 64, align: 64, dwarfAddressSpace: 0)
!524 = !DISubroutineType(types: !525)
!525 = !{!459, !512, !477}
!526 = !{!519, !527}
!527 = !DILocalVariable(name: "f", scope: !520, file: !448, line: 319, type: !523, align: 8)
!528 = !DILocation(line: 319, column: 13, scope: !520, inlinedAt: !529)
!529 = !DILocation(line: 319, column: 13, scope: !447)
!530 = !DILocation(line: 319, column: 26, scope: !447)
!531 = !DILocation(line: 320, column: 10, scope: !447)
!532 = distinct !DISubprogram(name: "new_display<core::fmt::Arguments>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17hbe3bcef2e7e6b961E", scope: !449, file: !448, line: 318, type: !533, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !597, retainedNodes: !595)
!533 = !DISubroutineType(types: !534)
!534 = !{!449, !535}
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::Arguments", baseType: !536, size: 64, align: 64, dwarfAddressSpace: 0)
!536 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !45, file: !2, size: 384, align: 64, elements: !537, templateParams: !26, identifier: "7e7034295abae01651800c8eb0e9b712")
!537 = !{!538, !544, !589}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !536, file: !2, baseType: !539, size: 128, align: 64)
!539 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !540, templateParams: !26, identifier: "120d786d314e2730a5f45c5e7e56f7d")
!540 = !{!541, !543}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !539, file: !2, baseType: !542, size: 64, align: 64)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64, align: 64, dwarfAddressSpace: 0)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !539, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !536, file: !2, baseType: !545, size: 128, align: 64, offset: 128)
!545 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::v1::Argument]>", scope: !20, file: !2, size: 128, align: 64, elements: !546, templateParams: !26, identifier: "bb69cbb99024f47dbb54317ba8130317")
!546 = !{!547}
!547 = !DICompositeType(tag: DW_TAG_variant_part, scope: !545, file: !2, size: 128, align: 64, elements: !548, templateParams: !26, identifier: "ce02297fe7dbf35f547cc88f131a39b4", discriminator: !588)
!548 = !{!549, !584}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !547, file: !2, baseType: !550, size: 128, align: 64, extraData: i64 0)
!550 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !545, file: !2, size: 128, align: 64, elements: !26, templateParams: !551, identifier: "742dbe7e160661d8ca36fcfff2574850")
!551 = !{!552}
!552 = !DITemplateTypeParameter(name: "T", type: !553)
!553 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::v1::Argument]", file: !2, size: 128, align: 64, elements: !554, templateParams: !26, identifier: "5ac19a4b2fedc0a38075c82d3d698a2e")
!554 = !{!555, !583}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !553, file: !2, baseType: !556, size: 64, align: 64)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64, align: 64, dwarfAddressSpace: 0)
!557 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !43, file: !2, size: 448, align: 64, elements: !558, templateParams: !26, identifier: "fbba22b504f631aebebe5f9a731b4661")
!558 = !{!559, !560}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !557, file: !2, baseType: !9, size: 64, align: 64)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !557, file: !2, baseType: !561, size: 384, align: 64, offset: 64)
!561 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormatSpec", scope: !43, file: !2, size: 384, align: 64, elements: !562, templateParams: !26, identifier: "a89ae7a13a1def66296bab98052f520a")
!562 = !{!563, !564, !565, !566, !582}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !561, file: !2, baseType: !482, size: 32, align: 32, offset: 256)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !561, file: !2, baseType: !42, size: 8, align: 8, offset: 320)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !561, file: !2, baseType: !173, size: 32, align: 32, offset: 288)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !561, file: !2, baseType: !567, size: 128, align: 64)
!567 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !43, file: !2, size: 128, align: 64, elements: !568, templateParams: !26, identifier: "41c6e2a1db95b605a371a090678c1fd8")
!568 = !{!569}
!569 = !DICompositeType(tag: DW_TAG_variant_part, scope: !567, file: !2, size: 128, align: 64, elements: !570, templateParams: !26, identifier: "eff7cdccebc4ba23639a28669cbce86", discriminator: !581)
!570 = !{!571, !575, !579}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !569, file: !2, baseType: !572, size: 128, align: 64, extraData: i64 0)
!572 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !567, file: !2, size: 128, align: 64, elements: !573, templateParams: !26, identifier: "927d86c22d9994b767e51a58b20493")
!573 = !{!574}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !572, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !569, file: !2, baseType: !576, size: 128, align: 64, extraData: i64 1)
!576 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !567, file: !2, size: 128, align: 64, elements: !577, templateParams: !26, identifier: "ce4b8bb3a4200a86c4c06a7570d8ee71")
!577 = !{!578}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !576, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !569, file: !2, baseType: !580, size: 128, align: 64, extraData: i64 2)
!580 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !567, file: !2, size: 128, align: 64, elements: !26, identifier: "b155566b9bd0239ef48aa3b8bcdef75b")
!581 = !DIDerivedType(tag: DW_TAG_member, scope: !567, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !561, file: !2, baseType: !567, size: 128, align: 64, offset: 128)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !553, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !547, file: !2, baseType: !585, size: 128, align: 64)
!585 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !545, file: !2, size: 128, align: 64, elements: !586, templateParams: !551, identifier: "17f2fc106094349c7673abca4839c97a")
!586 = !{!587}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !585, file: !2, baseType: !553, size: 128, align: 64)
!588 = !DIDerivedType(tag: DW_TAG_member, scope: !545, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !536, file: !2, baseType: !590, size: 128, align: 64, offset: 256)
!590 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::ArgumentV1]", file: !2, size: 128, align: 64, elements: !591, templateParams: !26, identifier: "c78588d5439c4eaa18fbaab99f079cbf")
!591 = !{!592, !594}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !590, file: !2, baseType: !593, size: 64, align: 64)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64, align: 64, dwarfAddressSpace: 0)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !590, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!595 = !{!596}
!596 = !DILocalVariable(name: "x", arg: 1, scope: !532, file: !448, line: 318, type: !535)
!597 = !{!598}
!598 = !DITemplateTypeParameter(name: "T", type: !536)
!599 = !DILocation(line: 318, column: 30, scope: !532)
!600 = !DILocation(line: 319, column: 23, scope: !532)
!601 = !DILocalVariable(name: "x", scope: !602, file: !448, line: 319, type: !535, align: 8)
!602 = distinct !DISubprogram(name: "new<core::fmt::Arguments>", linkageName: "_ZN4core3fmt10ArgumentV13new17h72135aed5f8e9177E", scope: !449, file: !448, line: 329, type: !603, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !597, retainedNodes: !608)
!603 = !DISubroutineType(types: !604)
!604 = !{!449, !535, !605}
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::Arguments, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !606, size: 64, align: 64, dwarfAddressSpace: 0)
!606 = !DISubroutineType(types: !607)
!607 = !{!459, !535, !477}
!608 = !{!601, !609}
!609 = !DILocalVariable(name: "f", scope: !602, file: !448, line: 319, type: !605, align: 8)
!610 = !DILocation(line: 319, column: 13, scope: !602, inlinedAt: !611)
!611 = !DILocation(line: 319, column: 13, scope: !532)
!612 = !DILocation(line: 319, column: 26, scope: !532)
!613 = !DILocation(line: 320, column: 10, scope: !532)
!614 = distinct !DISubprogram(name: "new_display<usize>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17hc9388ccaeaed3d47E", scope: !449, file: !448, line: 318, type: !615, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !491, retainedNodes: !618)
!615 = !DISubroutineType(types: !616)
!616 = !{!449, !617}
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!618 = !{!619}
!619 = !DILocalVariable(name: "x", arg: 1, scope: !614, file: !448, line: 318, type: !617)
!620 = !DILocation(line: 318, column: 30, scope: !614)
!621 = !DILocation(line: 319, column: 23, scope: !614)
!622 = !DILocalVariable(name: "x", scope: !623, file: !448, line: 319, type: !617, align: 8)
!623 = distinct !DISubprogram(name: "new<usize>", linkageName: "_ZN4core3fmt10ArgumentV13new17h468cc6a992258f48E", scope: !449, file: !448, line: 329, type: !624, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !491, retainedNodes: !629)
!624 = !DISubroutineType(types: !625)
!625 = !{!449, !617, !626}
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&usize, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !627, size: 64, align: 64, dwarfAddressSpace: 0)
!627 = !DISubroutineType(types: !628)
!628 = !{!459, !617, !477}
!629 = !{!622, !630}
!630 = !DILocalVariable(name: "f", scope: !623, file: !448, line: 319, type: !626, align: 8)
!631 = !DILocation(line: 319, column: 13, scope: !623, inlinedAt: !632)
!632 = !DILocation(line: 319, column: 13, scope: !614)
!633 = !DILocation(line: 319, column: 26, scope: !614)
!634 = !DILocation(line: 320, column: 10, scope: !614)
!635 = distinct !DISubprogram(name: "as_str", linkageName: "_ZN4core3fmt9Arguments6as_str17hc018f819405eaff4E", scope: !536, file: !448, line: 512, type: !636, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !651)
!636 = !DISubroutineType(types: !637)
!637 = !{!638, !535}
!638 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&str>", scope: !20, file: !2, size: 128, align: 64, elements: !639, templateParams: !26, identifier: "f0dceda904e27e7388d0262de24b6976")
!639 = !{!640}
!640 = !DICompositeType(tag: DW_TAG_variant_part, scope: !638, file: !2, size: 128, align: 64, elements: !641, templateParams: !26, identifier: "d9a20f3bc7236076b658193a0ee41dce", discriminator: !650)
!641 = !{!642, !646}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !640, file: !2, baseType: !643, size: 128, align: 64, extraData: i64 0)
!643 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !638, file: !2, size: 128, align: 64, elements: !26, templateParams: !644, identifier: "8b8f8f73f03135e6d73de6ca26c771a5")
!644 = !{!645}
!645 = !DITemplateTypeParameter(name: "T", type: !168)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !640, file: !2, baseType: !647, size: 128, align: 64)
!647 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !638, file: !2, size: 128, align: 64, elements: !648, templateParams: !644, identifier: "5f24cd570c5cc19be11f0051a0b188da")
!648 = !{!649}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !647, file: !2, baseType: !168, size: 128, align: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, scope: !638, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!651 = !{!652, !653}
!652 = !DILocalVariable(name: "self", arg: 1, scope: !635, file: !448, line: 512, type: !535)
!653 = !DILocalVariable(name: "s", scope: !654, file: !448, line: 515, type: !655, align: 8)
!654 = distinct !DILexicalBlock(scope: !635, file: !448, line: 515, column: 13)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&str", baseType: !168, size: 64, align: 64, dwarfAddressSpace: 0)
!656 = !DILocation(line: 512, column: 25, scope: !635)
!657 = !DILocation(line: 513, column: 16, scope: !635)
!658 = !{i64 8}
!659 = !DILocation(line: 513, column: 29, scope: !635)
!660 = !DILocation(line: 513, column: 15, scope: !635)
!661 = !DILocation(line: 514, column: 14, scope: !635)
!662 = !DILocation(line: 515, column: 14, scope: !635)
!663 = !DILocation(line: 514, column: 18, scope: !635)
!664 = !DILocation(line: 516, column: 18, scope: !635)
!665 = !DILocation(line: 514, column: 25, scope: !635)
!666 = !DILocation(line: 514, column: 32, scope: !635)
!667 = !DILocation(line: 518, column: 6, scope: !635)
!668 = !DILocation(line: 515, column: 19, scope: !635)
!669 = !DILocation(line: 515, column: 15, scope: !635)
!670 = !DILocation(line: 515, column: 15, scope: !654)
!671 = !DILocation(line: 515, column: 31, scope: !654)
!672 = !DILocation(line: 515, column: 26, scope: !654)
!673 = !DILocation(line: 515, column: 32, scope: !635)
!674 = distinct !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117h747dba7f8d1ace20E", scope: !536, file: !448, line: 390, type: !675, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !677)
!675 = !DISubroutineType(types: !676)
!676 = !{!536, !539, !590}
!677 = !{!678, !679}
!678 = !DILocalVariable(name: "pieces", arg: 1, scope: !674, file: !448, line: 390, type: !539)
!679 = !DILocalVariable(name: "args", arg: 2, scope: !674, file: !448, line: 390, type: !590)
!680 = !DILocation(line: 390, column: 25, scope: !674)
!681 = !DILocation(line: 390, column: 53, scope: !674)
!682 = !DILocation(line: 391, column: 12, scope: !674)
!683 = !DILocation(line: 391, column: 56, scope: !674)
!684 = !DILocation(line: 391, column: 41, scope: !674)
!685 = !{i8 0, i8 2}
!686 = !DILocation(line: 394, column: 34, scope: !674)
!687 = !DILocation(line: 394, column: 9, scope: !674)
!688 = !DILocation(line: 395, column: 6, scope: !674)
!689 = !DILocation(line: 392, column: 13, scope: !674)
!690 = distinct !DISubprogram(name: "replace<i32>", linkageName: "_ZN4core3mem7replace17h1f2405c7174d7886E", scope: !53, file: !691, line: 913, type: !692, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !700, retainedNodes: !695)
!691 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "27c8869548c9dcb65186c5584c2586f6")
!692 = !DISubroutineType(types: !693)
!693 = !{!253, !694, !253}
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut i32", baseType: !253, size: 64, align: 64, dwarfAddressSpace: 0)
!695 = !{!696, !697, !698}
!696 = !DILocalVariable(name: "dest", arg: 1, scope: !690, file: !691, line: 913, type: !694)
!697 = !DILocalVariable(name: "src", arg: 2, scope: !690, file: !691, line: 913, type: !253)
!698 = !DILocalVariable(name: "result", scope: !699, file: !691, line: 918, type: !253, align: 4)
!699 = distinct !DILexicalBlock(scope: !690, file: !691, line: 918, column: 9)
!700 = !{!701}
!701 = !DITemplateTypeParameter(name: "T", type: !253)
!702 = !DILocation(line: 913, column: 25, scope: !690)
!703 = !DILocation(line: 913, column: 39, scope: !690)
!704 = !DILocalVariable(name: "src", scope: !705, file: !691, line: 919, type: !253, align: 4)
!705 = !DILexicalBlockFile(scope: !706, file: !691, discriminator: 0)
!706 = distinct !DISubprogram(name: "write<i32>", linkageName: "_ZN4core3ptr5write17h6b68d504417fa9a5E", scope: !204, file: !707, line: 1296, type: !708, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !700, retainedNodes: !711)
!707 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "13c32d970b0b4dd38131a1908223a155")
!708 = !DISubroutineType(types: !709)
!709 = !{null, !710, !253}
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut i32", baseType: !253, size: 64, align: 64, dwarfAddressSpace: 0)
!711 = !{!712, !704}
!712 = !DILocalVariable(name: "dst", scope: !705, file: !691, line: 919, type: !710, align: 8)
!713 = !DILocation(line: 919, column: 9, scope: !705, inlinedAt: !714)
!714 = !DILocation(line: 919, column: 9, scope: !699)
!715 = !DILocalVariable(name: "tmp", scope: !716, file: !691, line: 918, type: !725, align: 4)
!716 = !DILexicalBlockFile(scope: !717, file: !691, discriminator: 0)
!717 = distinct !DILexicalBlock(scope: !718, file: !707, line: 1107, column: 5)
!718 = distinct !DISubprogram(name: "read<i32>", linkageName: "_ZN4core3ptr4read17h478941a0b70cdd0bE", scope: !204, file: !707, line: 1099, type: !719, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !700, retainedNodes: !722)
!719 = !DISubroutineType(types: !720)
!720 = !{!253, !721}
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const i32", baseType: !253, size: 64, align: 64, dwarfAddressSpace: 0)
!722 = !{!723, !715}
!723 = !DILocalVariable(name: "src", scope: !724, file: !691, line: 918, type: !721, align: 8)
!724 = !DILexicalBlockFile(scope: !718, file: !691, discriminator: 0)
!725 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<i32>", scope: !726, file: !2, size: 32, align: 32, elements: !727, templateParams: !700, identifier: "749ff49970c59f5b542753e50e0baaa5")
!726 = !DINamespace(name: "maybe_uninit", scope: !53)
!727 = !{!728, !729}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !725, file: !2, baseType: !7, align: 8)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !725, file: !2, baseType: !730, size: 32, align: 32)
!730 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<i32>", scope: !731, file: !2, size: 32, align: 32, elements: !732, templateParams: !700, identifier: "1f7a761321d649b733dfe180fca72385")
!731 = !DINamespace(name: "manually_drop", scope: !53)
!732 = !{!733}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !730, file: !2, baseType: !253, size: 32, align: 32)
!734 = !DILocation(line: 918, column: 22, scope: !716, inlinedAt: !735)
!735 = !DILocation(line: 918, column: 22, scope: !690)
!736 = !DILocation(line: 918, column: 32, scope: !690)
!737 = !DILocation(line: 918, column: 22, scope: !724, inlinedAt: !735)
!738 = !DILocation(line: 918, column: 22, scope: !739, inlinedAt: !744)
!739 = !DILexicalBlockFile(scope: !740, file: !691, discriminator: 0)
!740 = distinct !DISubprogram(name: "uninit<i32>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h1c65ec665d2d2aaaE", scope: !725, file: !741, line: 320, type: !742, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !700, retainedNodes: !26)
!741 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "d75c93d9a93fe65ef19edc0e8e272278")
!742 = !DISubroutineType(types: !743)
!743 = !{!725}
!744 = !DILocation(line: 1107, column: 19, scope: !718, inlinedAt: !735)
!745 = !DILocalVariable(name: "self", scope: !746, file: !691, line: 918, type: !750, align: 8)
!746 = !DILexicalBlockFile(scope: !747, file: !691, discriminator: 0)
!747 = distinct !DISubprogram(name: "as_mut_ptr<i32>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h36a73e0a0de7e31eE", scope: !725, file: !741, line: 574, type: !748, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !700, retainedNodes: !751)
!748 = !DISubroutineType(types: !749)
!749 = !{!710, !750}
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<i32>", baseType: !725, size: 64, align: 64, dwarfAddressSpace: 0)
!751 = !{!745}
!752 = !DILocation(line: 918, column: 22, scope: !746, inlinedAt: !753)
!753 = !DILocation(line: 1115, column: 34, scope: !717, inlinedAt: !735)
!754 = !DILocalVariable(name: "self", scope: !755, file: !691, line: 918, type: !725, align: 4)
!755 = !DILexicalBlockFile(scope: !756, file: !691, discriminator: 0)
!756 = distinct !DISubprogram(name: "assume_init<i32>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h578ef4c1b715a38aE", scope: !725, file: !741, line: 629, type: !757, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !700, retainedNodes: !759)
!757 = !DISubroutineType(types: !758)
!758 = !{!253, !725, !162}
!759 = !{!754}
!760 = !DILocation(line: 918, column: 22, scope: !755, inlinedAt: !761)
!761 = !DILocation(line: 1116, column: 9, scope: !717, inlinedAt: !735)
!762 = !DILocalVariable(name: "slot", scope: !763, file: !691, line: 918, type: !730, align: 4)
!763 = !DILexicalBlockFile(scope: !764, file: !691, discriminator: 0)
!764 = distinct !DISubprogram(name: "into_inner<i32>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h90ba2d98371d8d3cE", scope: !730, file: !765, line: 88, type: !766, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !700, retainedNodes: !768)
!765 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "a34f39f0c1c25c8378cd3f4ec0bf00c3")
!766 = !DISubroutineType(types: !767)
!767 = !{!253, !730}
!768 = !{!762}
!769 = !DILocation(line: 918, column: 22, scope: !763, inlinedAt: !770)
!770 = !DILocation(line: 634, column: 13, scope: !756, inlinedAt: !761)
!771 = !DILocation(line: 918, column: 13, scope: !699)
!772 = !DILocation(line: 919, column: 20, scope: !699)
!773 = !DILocation(line: 919, column: 26, scope: !699)
!774 = !DILocation(line: 922, column: 2, scope: !690)
!775 = !DILocation(line: 922, column: 1, scope: !690)
!776 = !DILocation(line: 913, column: 1, scope: !690)
!777 = distinct !DISubprogram(name: "replace<i64>", linkageName: "_ZN4core3mem7replace17h1fb2341b0515eb1dE", scope: !53, file: !691, line: 913, type: !778, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !786, retainedNodes: !781)
!778 = !DISubroutineType(types: !779)
!779 = !{!276, !780, !276}
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut i64", baseType: !276, size: 64, align: 64, dwarfAddressSpace: 0)
!781 = !{!782, !783, !784}
!782 = !DILocalVariable(name: "dest", arg: 1, scope: !777, file: !691, line: 913, type: !780)
!783 = !DILocalVariable(name: "src", arg: 2, scope: !777, file: !691, line: 913, type: !276)
!784 = !DILocalVariable(name: "result", scope: !785, file: !691, line: 918, type: !276, align: 8)
!785 = distinct !DILexicalBlock(scope: !777, file: !691, line: 918, column: 9)
!786 = !{!787}
!787 = !DITemplateTypeParameter(name: "T", type: !276)
!788 = !DILocation(line: 913, column: 25, scope: !777)
!789 = !DILocation(line: 913, column: 39, scope: !777)
!790 = !DILocalVariable(name: "src", scope: !791, file: !691, line: 919, type: !276, align: 8)
!791 = !DILexicalBlockFile(scope: !792, file: !691, discriminator: 0)
!792 = distinct !DISubprogram(name: "write<i64>", linkageName: "_ZN4core3ptr5write17hc51ff46d6b2738bdE", scope: !204, file: !707, line: 1296, type: !793, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !786, retainedNodes: !796)
!793 = !DISubroutineType(types: !794)
!794 = !{null, !795, !276}
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut i64", baseType: !276, size: 64, align: 64, dwarfAddressSpace: 0)
!796 = !{!797, !790}
!797 = !DILocalVariable(name: "dst", scope: !791, file: !691, line: 919, type: !795, align: 8)
!798 = !DILocation(line: 919, column: 9, scope: !791, inlinedAt: !799)
!799 = !DILocation(line: 919, column: 9, scope: !785)
!800 = !DILocalVariable(name: "tmp", scope: !801, file: !691, line: 918, type: !810, align: 8)
!801 = !DILexicalBlockFile(scope: !802, file: !691, discriminator: 0)
!802 = distinct !DILexicalBlock(scope: !803, file: !707, line: 1107, column: 5)
!803 = distinct !DISubprogram(name: "read<i64>", linkageName: "_ZN4core3ptr4read17hbedb30039d37d135E", scope: !204, file: !707, line: 1099, type: !804, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !786, retainedNodes: !807)
!804 = !DISubroutineType(types: !805)
!805 = !{!276, !806}
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const i64", baseType: !276, size: 64, align: 64, dwarfAddressSpace: 0)
!807 = !{!808, !800}
!808 = !DILocalVariable(name: "src", scope: !809, file: !691, line: 918, type: !806, align: 8)
!809 = !DILexicalBlockFile(scope: !803, file: !691, discriminator: 0)
!810 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<i64>", scope: !726, file: !2, size: 64, align: 64, elements: !811, templateParams: !786, identifier: "8fe4659393c99bedec80c5f65994551b")
!811 = !{!812, !813}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !810, file: !2, baseType: !7, align: 8)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !810, file: !2, baseType: !814, size: 64, align: 64)
!814 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<i64>", scope: !731, file: !2, size: 64, align: 64, elements: !815, templateParams: !786, identifier: "9dd1e0c4717c547188474e2d99f215af")
!815 = !{!816}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !814, file: !2, baseType: !276, size: 64, align: 64)
!817 = !DILocation(line: 918, column: 22, scope: !801, inlinedAt: !818)
!818 = !DILocation(line: 918, column: 22, scope: !777)
!819 = !DILocation(line: 918, column: 32, scope: !777)
!820 = !DILocation(line: 918, column: 22, scope: !809, inlinedAt: !818)
!821 = !DILocation(line: 918, column: 22, scope: !822, inlinedAt: !826)
!822 = !DILexicalBlockFile(scope: !823, file: !691, discriminator: 0)
!823 = distinct !DISubprogram(name: "uninit<i64>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h03e7b39548ffcd46E", scope: !810, file: !741, line: 320, type: !824, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !786, retainedNodes: !26)
!824 = !DISubroutineType(types: !825)
!825 = !{!810}
!826 = !DILocation(line: 1107, column: 19, scope: !803, inlinedAt: !818)
!827 = !DILocalVariable(name: "self", scope: !828, file: !691, line: 918, type: !832, align: 8)
!828 = !DILexicalBlockFile(scope: !829, file: !691, discriminator: 0)
!829 = distinct !DISubprogram(name: "as_mut_ptr<i64>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hb43bd81a50e4f0a9E", scope: !810, file: !741, line: 574, type: !830, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !786, retainedNodes: !833)
!830 = !DISubroutineType(types: !831)
!831 = !{!795, !832}
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<i64>", baseType: !810, size: 64, align: 64, dwarfAddressSpace: 0)
!833 = !{!827}
!834 = !DILocation(line: 918, column: 22, scope: !828, inlinedAt: !835)
!835 = !DILocation(line: 1115, column: 34, scope: !802, inlinedAt: !818)
!836 = !DILocalVariable(name: "self", scope: !837, file: !691, line: 918, type: !810, align: 8)
!837 = !DILexicalBlockFile(scope: !838, file: !691, discriminator: 0)
!838 = distinct !DISubprogram(name: "assume_init<i64>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h62ce5a30d969e542E", scope: !810, file: !741, line: 629, type: !839, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !786, retainedNodes: !841)
!839 = !DISubroutineType(types: !840)
!840 = !{!276, !810, !162}
!841 = !{!836}
!842 = !DILocation(line: 918, column: 22, scope: !837, inlinedAt: !843)
!843 = !DILocation(line: 1116, column: 9, scope: !802, inlinedAt: !818)
!844 = !DILocalVariable(name: "slot", scope: !845, file: !691, line: 918, type: !814, align: 8)
!845 = !DILexicalBlockFile(scope: !846, file: !691, discriminator: 0)
!846 = distinct !DISubprogram(name: "into_inner<i64>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hae9ff1ee1b19233eE", scope: !814, file: !765, line: 88, type: !847, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !786, retainedNodes: !849)
!847 = !DISubroutineType(types: !848)
!848 = !{!276, !814}
!849 = !{!844}
!850 = !DILocation(line: 918, column: 22, scope: !845, inlinedAt: !851)
!851 = !DILocation(line: 634, column: 13, scope: !838, inlinedAt: !843)
!852 = !DILocation(line: 918, column: 13, scope: !785)
!853 = !DILocation(line: 919, column: 20, scope: !785)
!854 = !DILocation(line: 919, column: 26, scope: !785)
!855 = !DILocation(line: 922, column: 2, scope: !777)
!856 = !DILocation(line: 922, column: 1, scope: !777)
!857 = !DILocation(line: 913, column: 1, scope: !777)
!858 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h5440c3808e5cbaa6E", scope: !860, file: !859, line: 555, type: !861, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !863)
!859 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "510cfe98475d713af9de72a29146058c")
!860 = !DINamespace(name: "{impl#11}", scope: !127)
!861 = !DISubroutineType(types: !862)
!862 = !{!485, !9, !9}
!863 = !{!864, !865, !866, !868}
!864 = !DILocalVariable(name: "self", arg: 1, scope: !858, file: !859, line: 555, type: !9)
!865 = !DILocalVariable(name: "rhs", arg: 2, scope: !858, file: !859, line: 555, type: !9)
!866 = !DILocalVariable(name: "a", scope: !867, file: !859, line: 556, type: !9, align: 8)
!867 = distinct !DILexicalBlock(scope: !858, file: !859, line: 556, column: 13)
!868 = !DILocalVariable(name: "b", scope: !867, file: !859, line: 556, type: !398, align: 1)
!869 = !DILocation(line: 555, column: 34, scope: !858)
!870 = !DILocation(line: 555, column: 40, scope: !858)
!871 = !DILocation(line: 556, column: 26, scope: !858)
!872 = !DILocalVariable(name: "self", scope: !873, file: !859, line: 556, type: !9, align: 8)
!873 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17hce0beb250bffdecdE", scope: !860, file: !859, line: 1688, type: !874, scopeLine: 1688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !880)
!874 = !DISubroutineType(types: !875)
!875 = !{!876, !9, !9}
!876 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !877, templateParams: !26, identifier: "23309350ccb628a7900e37caa17b1249")
!877 = !{!878, !879}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !876, file: !2, baseType: !9, size: 64, align: 64)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !876, file: !2, baseType: !398, size: 8, align: 8, offset: 64)
!880 = !{!872, !881, !882, !884}
!881 = !DILocalVariable(name: "rhs", scope: !873, file: !859, line: 556, type: !9, align: 8)
!882 = !DILocalVariable(name: "a", scope: !883, file: !859, line: 556, type: !54, align: 8)
!883 = distinct !DILexicalBlock(scope: !873, file: !859, line: 1689, column: 13)
!884 = !DILocalVariable(name: "b", scope: !883, file: !859, line: 556, type: !398, align: 1)
!885 = !DILocation(line: 556, column: 26, scope: !873, inlinedAt: !871)
!886 = !DILocation(line: 556, column: 47, scope: !858)
!887 = !DILocation(line: 556, column: 26, scope: !883, inlinedAt: !871)
!888 = !DILocation(line: 556, column: 18, scope: !858)
!889 = !DILocation(line: 556, column: 18, scope: !867)
!890 = !DILocation(line: 556, column: 21, scope: !858)
!891 = !DILocation(line: 556, column: 21, scope: !867)
!892 = !DILocation(line: 557, column: 16, scope: !867)
!893 = !DILocation(line: 557, column: 42, scope: !867)
!894 = !DILocation(line: 557, column: 13, scope: !867)
!895 = !DILocation(line: 557, column: 30, scope: !867)
!896 = !DILocation(line: 558, column: 10, scope: !858)
!897 = !{i64 0, i64 2}
!898 = distinct !DISubprogram(name: "call_once<fn(&str) -> alloc::string::String, (&str)>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hc3f16a46991bc285E", scope: !900, file: !899, line: 248, type: !902, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !911, retainedNodes: !905)
!899 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "3100065230267ed2a3b8753c70d752a6")
!900 = !DINamespace(name: "FnOnce", scope: !901)
!901 = !DINamespace(name: "function", scope: !156)
!902 = !DISubroutineType(types: !903)
!903 = !{!300, !904, !168}
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&str) -> alloc::string::String", baseType: !298, size: 64, align: 64, dwarfAddressSpace: 0)
!905 = !{!906, !907}
!906 = !DILocalVariable(arg: 1, scope: !898, file: !899, line: 248, type: !904)
!907 = !DILocalVariable(arg: 2, scope: !898, file: !899, line: 248, type: !908)
!908 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&str)", file: !2, size: 128, align: 64, elements: !909, templateParams: !26, identifier: "e1090039062c1871dd001bf2d88c0044")
!909 = !{!910}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !908, file: !2, baseType: !168, size: 128, align: 64)
!911 = !{!912, !913}
!912 = !DITemplateTypeParameter(name: "Self", type: !904)
!913 = !DITemplateTypeParameter(name: "Args", type: !908)
!914 = !DILocation(line: 248, column: 5, scope: !898)
!915 = distinct !DISubprogram(name: "call_once<fn(&[u8]) -> &core::ffi::c_str::CStr, (&[u8])>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hce1361e6c4a1da9eE", scope: !900, file: !899, line: 248, type: !916, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !921, retainedNodes: !918)
!916 = !DISubroutineType(types: !917)
!917 = !{!360, !373, !149}
!918 = !{!919, !920}
!919 = !DILocalVariable(arg: 1, scope: !915, file: !899, line: 248, type: !373)
!920 = !DILocalVariable(arg: 2, scope: !915, file: !899, line: 248, type: !370)
!921 = !{!922, !923}
!922 = !DITemplateTypeParameter(name: "Self", type: !373)
!923 = !DITemplateTypeParameter(name: "Args", type: !370)
!924 = !DILocation(line: 248, column: 5, scope: !915)
!925 = distinct !DISubprogram(name: "drop_in_place<core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>>", linkageName: "_ZN4core3ptr105drop_in_place$LT$core..result..Result$LT$alloc..ffi..c_str..CString$C$alloc..ffi..c_str..NulError$GT$$GT$17h594fea4b75c17037E", scope: !204, file: !707, line: 487, type: !926, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !960, retainedNodes: !958)
!926 = !DISubroutineType(types: !927)
!927 = !{null, !928}
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", baseType: !929, size: 64, align: 64, dwarfAddressSpace: 0)
!929 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", scope: !460, file: !2, size: 320, align: 64, elements: !930, templateParams: !26, identifier: "753e653043b02265f9cae25fde5c2e00")
!930 = !{!931}
!931 = !DICompositeType(tag: DW_TAG_variant_part, scope: !929, file: !2, size: 320, align: 64, elements: !932, templateParams: !26, identifier: "ce51dc77616053af4739a8709a00c48c", discriminator: !957)
!932 = !{!933, !953}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !931, file: !2, baseType: !934, size: 320, align: 64, extraData: i64 0)
!934 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !929, file: !2, size: 320, align: 64, elements: !935, templateParams: !946, identifier: "36459d4bd7f16063ceede974e05b63bf")
!935 = !{!936}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !934, file: !2, baseType: !937, size: 128, align: 64, offset: 64)
!937 = !DICompositeType(tag: DW_TAG_structure_type, name: "CString", scope: !938, file: !2, size: 128, align: 64, elements: !940, templateParams: !26, identifier: "a4dcbb113228472ac833458ca2f5ee8d")
!938 = !DINamespace(name: "c_str", scope: !939)
!939 = !DINamespace(name: "ffi", scope: !122)
!940 = !{!941}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !937, file: !2, baseType: !942, size: 128, align: 64)
!942 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<[u8], alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !943, templateParams: !26, identifier: "e783b0825321c11fc908377d145707b4")
!943 = !{!944, !945}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !942, file: !2, baseType: !152, size: 64, align: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !942, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!946 = !{!947, !948}
!947 = !DITemplateTypeParameter(name: "T", type: !937)
!948 = !DITemplateTypeParameter(name: "E", type: !949)
!949 = !DICompositeType(tag: DW_TAG_structure_type, name: "NulError", scope: !938, file: !2, size: 256, align: 64, elements: !950, templateParams: !26, identifier: "f0b155880f0e8602fd0be3023df941a4")
!950 = !{!951, !952}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !949, file: !2, baseType: !9, size: 64, align: 64)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !949, file: !2, baseType: !303, size: 192, align: 64, offset: 64)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !931, file: !2, baseType: !954, size: 320, align: 64, extraData: i64 1)
!954 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !929, file: !2, size: 320, align: 64, elements: !955, templateParams: !946, identifier: "d1044761f4770ef356b5dbe359d460f0")
!955 = !{!956}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !954, file: !2, baseType: !949, size: 256, align: 64, offset: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, scope: !929, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!958 = !{!959}
!959 = !DILocalVariable(arg: 1, scope: !925, file: !707, line: 487, type: !928)
!960 = !{!961}
!961 = !DITemplateTypeParameter(name: "T", type: !929)
!962 = !DILocation(line: 487, column: 1, scope: !925)
!963 = distinct !DISubprogram(name: "drop_in_place<alloc::string::String>", linkageName: "_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h323a221d64398080E", scope: !204, file: !707, line: 487, type: !964, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !515, retainedNodes: !967)
!964 = !DISubroutineType(types: !965)
!965 = !{null, !966}
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::string::String", baseType: !300, size: 64, align: 64, dwarfAddressSpace: 0)
!967 = !{!968}
!968 = !DILocalVariable(arg: 1, scope: !963, file: !707, line: 487, type: !966)
!969 = !DILocation(line: 487, column: 1, scope: !963)
!970 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h4ddc41bb3ac5cf34E", scope: !204, file: !707, line: 487, type: !971, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !976, retainedNodes: !974)
!971 = !DISubroutineType(types: !972)
!972 = !{null, !973}
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !303, size: 64, align: 64, dwarfAddressSpace: 0)
!974 = !{!975}
!975 = !DILocalVariable(arg: 1, scope: !970, file: !707, line: 487, type: !973)
!976 = !{!977}
!977 = !DITemplateTypeParameter(name: "T", type: !303)
!978 = !DILocation(line: 487, column: 1, scope: !970)
!979 = distinct !DISubprogram(name: "drop_in_place<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h60597de3fa84e837E", scope: !204, file: !707, line: 487, type: !980, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !985, retainedNodes: !983)
!980 = !DISubroutineType(types: !981)
!981 = !{null, !982}
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::ffi::c_str::CString", baseType: !937, size: 64, align: 64, dwarfAddressSpace: 0)
!983 = !{!984}
!984 = !DILocalVariable(arg: 1, scope: !979, file: !707, line: 487, type: !982)
!985 = !{!947}
!986 = !DILocation(line: 487, column: 1, scope: !979)
!987 = distinct !DISubprogram(name: "drop_in_place<alloc::ffi::c_str::NulError>", linkageName: "_ZN4core3ptr48drop_in_place$LT$alloc..ffi..c_str..NulError$GT$17h298172dc09689c5bE", scope: !204, file: !707, line: 487, type: !988, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !993, retainedNodes: !991)
!988 = !DISubroutineType(types: !989)
!989 = !{null, !990}
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::ffi::c_str::NulError", baseType: !949, size: 64, align: 64, dwarfAddressSpace: 0)
!991 = !{!992}
!992 = !DILocalVariable(arg: 1, scope: !987, file: !707, line: 487, type: !990)
!993 = !{!994}
!994 = !DITemplateTypeParameter(name: "T", type: !949)
!995 = !DILocation(line: 487, column: 1, scope: !987)
!996 = distinct !DISubprogram(name: "drop_in_place<core::str::error::Utf8Error>", linkageName: "_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17h729935f6d7a41ec4E", scope: !204, file: !707, line: 487, type: !997, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1002, retainedNodes: !1000)
!997 = !DISubroutineType(types: !998)
!998 = !{null, !999}
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::str::error::Utf8Error", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!1000 = !{!1001}
!1001 = !DILocalVariable(arg: 1, scope: !996, file: !707, line: 487, type: !999)
!1002 = !{!1003}
!1003 = !DITemplateTypeParameter(name: "T", type: !12)
!1004 = !DILocation(line: 487, column: 1, scope: !996)
!1005 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h56d5e522baa95bd5E", scope: !204, file: !707, line: 487, type: !1006, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1011, retainedNodes: !1009)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{null, !1008}
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !307, size: 64, align: 64, dwarfAddressSpace: 0)
!1009 = !{!1010}
!1010 = !DILocalVariable(arg: 1, scope: !1005, file: !707, line: 487, type: !1008)
!1011 = !{!1012}
!1012 = !DITemplateTypeParameter(name: "T", type: !307)
!1013 = !DILocation(line: 487, column: 1, scope: !1005)
!1014 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h0ae3e14fd2f4545aE", scope: !204, file: !707, line: 487, type: !1015, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1020, retainedNodes: !1018)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{null, !1017}
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<[u8], alloc::alloc::Global>", baseType: !942, size: 64, align: 64, dwarfAddressSpace: 0)
!1018 = !{!1019}
!1019 = !DILocalVariable(arg: 1, scope: !1014, file: !707, line: 487, type: !1017)
!1020 = !{!1021}
!1021 = !DITemplateTypeParameter(name: "T", type: !942)
!1022 = !DILocation(line: 487, column: 1, scope: !1014)
!1023 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hc739bec02c7381b9E", scope: !207, file: !201, line: 218, type: !1024, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1039)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{!1026, !228}
!1026 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::ptr::non_null::NonNull<u8>>", scope: !20, file: !2, size: 64, align: 64, elements: !1027, templateParams: !26, identifier: "73e5c906163f964bd09052518b6d2dc5")
!1027 = !{!1028}
!1028 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1026, file: !2, size: 64, align: 64, elements: !1029, templateParams: !26, identifier: "60204c6c6496841dbff7e7ec5dea5282", discriminator: !1038)
!1029 = !{!1030, !1034}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1028, file: !2, baseType: !1031, size: 64, align: 64, extraData: i64 0)
!1031 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1026, file: !2, size: 64, align: 64, elements: !26, templateParams: !1032, identifier: "b393050474aeb0631755d975367153e1")
!1032 = !{!1033}
!1033 = !DITemplateTypeParameter(name: "T", type: !207)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1028, file: !2, baseType: !1035, size: 64, align: 64)
!1035 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1026, file: !2, size: 64, align: 64, elements: !1036, templateParams: !1032, identifier: "a01a0b695bfd5d94759ea5c77533b9ea")
!1036 = !{!1037}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1035, file: !2, baseType: !207, size: 64, align: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, scope: !1026, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!1039 = !{!1040}
!1040 = !DILocalVariable(name: "ptr", arg: 1, scope: !1023, file: !201, line: 218, type: !228)
!1041 = !DILocation(line: 218, column: 22, scope: !1023)
!1042 = !DILocalVariable(name: "metadata", scope: !1043, file: !201, line: 219, type: !7, align: 1)
!1043 = !DILexicalBlockFile(scope: !1044, file: !201, discriminator: 0)
!1044 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h1040edf79125640dE", scope: !1046, file: !1045, line: 127, type: !1047, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1050)
!1045 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "59565ed3c34dee3e8f8928c29f8f7ce4")
!1046 = !DINamespace(name: "metadata", scope: !204)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!228, !1049, !7}
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!1050 = !{!1051, !1042}
!1051 = !DILocalVariable(name: "data_address", scope: !1043, file: !201, line: 219, type: !1049, align: 8)
!1052 = !DILocation(line: 219, column: 13, scope: !1043, inlinedAt: !1053)
!1053 = !DILocation(line: 668, column: 5, scope: !1054, inlinedAt: !1057)
!1054 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hbd0b2ee3da70add7E", scope: !204, file: !707, line: 667, type: !1055, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !26)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!228}
!1057 = !DILocation(line: 38, column: 41, scope: !1058, inlinedAt: !1067)
!1058 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hcb734016cf9c5334E", scope: !1060, file: !1059, line: 35, type: !1062, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1064)
!1059 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "6672664af50614ec3c026afd55307af7")
!1060 = !DINamespace(name: "{impl#0}", scope: !1061)
!1061 = !DINamespace(name: "mut_ptr", scope: !204)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!398, !228}
!1064 = !{!1065}
!1065 = !DILocalVariable(name: "self", scope: !1066, file: !201, line: 219, type: !228, align: 8)
!1066 = !DILexicalBlockFile(scope: !1058, file: !201, discriminator: 0)
!1067 = !DILocation(line: 219, column: 13, scope: !1023)
!1068 = !DILocation(line: 219, column: 13, scope: !1066, inlinedAt: !1067)
!1069 = !DILocalVariable(name: "self", scope: !1070, file: !201, line: 219, type: !228, align: 8)
!1070 = !DILexicalBlockFile(scope: !1071, file: !201, discriminator: 0)
!1071 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h8e55f4d1e8e5134dE", scope: !1060, file: !1059, line: 707, type: !1072, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1074)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!398, !228, !228}
!1074 = !{!1069, !1075}
!1075 = !DILocalVariable(name: "other", scope: !1070, file: !201, line: 219, type: !228, align: 8)
!1076 = !DILocation(line: 219, column: 13, scope: !1070, inlinedAt: !1077)
!1077 = !DILocation(line: 38, column: 9, scope: !1058, inlinedAt: !1067)
!1078 = !DILocation(line: 219, column: 13, scope: !1079, inlinedAt: !1086)
!1079 = !DILexicalBlockFile(scope: !1080, file: !201, discriminator: 0)
!1080 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h4ddd678888f3e56aE", scope: !204, file: !707, line: 569, type: !1081, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1085, retainedNodes: !1083)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!1049, !9}
!1083 = !{!1084}
!1084 = !DILocalVariable(name: "addr", scope: !1079, file: !201, line: 219, type: !9, align: 8)
!1085 = !{!469}
!1086 = !DILocation(line: 668, column: 24, scope: !1054, inlinedAt: !1057)
!1087 = !DILocation(line: 219, column: 12, scope: !1023)
!1088 = !DILocation(line: 223, column: 13, scope: !1023)
!1089 = !DILocation(line: 219, column: 9, scope: !1023)
!1090 = !DILocation(line: 221, column: 47, scope: !1023)
!1091 = !DILocalVariable(name: "ptr", scope: !1092, file: !201, line: 221, type: !228, align: 8)
!1092 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hcde0d87aaafdc539E", scope: !207, file: !201, line: 196, type: !240, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1093)
!1093 = !{!1091}
!1094 = !DILocation(line: 221, column: 27, scope: !1092, inlinedAt: !1095)
!1095 = !DILocation(line: 221, column: 27, scope: !1023)
!1096 = !DILocation(line: 221, column: 13, scope: !1023)
!1097 = !DILocation(line: 225, column: 6, scope: !1023)
!1098 = distinct !DISubprogram(name: "next<i64>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h4b80e619f85ebbd6E", scope: !1099, file: !247, line: 710, type: !1100, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1122, retainedNodes: !1120)
!1099 = !DINamespace(name: "{impl#3}", scope: !249)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!1102, !1113}
!1102 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<i64>", scope: !20, file: !2, size: 128, align: 64, elements: !1103, templateParams: !26, identifier: "281a02d27e3027cdb92fc974a96444c6")
!1103 = !{!1104}
!1104 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1102, file: !2, size: 128, align: 64, elements: !1105, templateParams: !26, identifier: "4376bdb6497203d8725e8609e7a700de", discriminator: !1112)
!1105 = !{!1106, !1108}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1104, file: !2, baseType: !1107, size: 128, align: 64, extraData: i64 0)
!1107 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1102, file: !2, size: 128, align: 64, elements: !26, templateParams: !786, identifier: "d6fe41c774bfbb95e4561d4a1298b2c")
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1104, file: !2, baseType: !1109, size: 128, align: 64, extraData: i64 1)
!1109 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1102, file: !2, size: 128, align: 64, elements: !1110, templateParams: !786, identifier: "e6cb02de437ce1c4f5ef089c9f654104")
!1110 = !{!1111}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1109, file: !2, baseType: !276, size: 64, align: 64, offset: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, scope: !1102, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ops::range::Range<i64>", baseType: !1114, size: 64, align: 64, dwarfAddressSpace: 0)
!1114 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<i64>", scope: !155, file: !2, size: 128, align: 64, elements: !1115, templateParams: !1118, identifier: "8a41e7ac5b1ec9dc5334fa0c25cba824")
!1115 = !{!1116, !1117}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1114, file: !2, baseType: !276, size: 64, align: 64)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1114, file: !2, baseType: !276, size: 64, align: 64, offset: 64)
!1118 = !{!1119}
!1119 = !DITemplateTypeParameter(name: "Idx", type: !276)
!1120 = !{!1121}
!1121 = !DILocalVariable(name: "self", arg: 1, scope: !1098, file: !247, line: 710, type: !1113)
!1122 = !{!1123}
!1123 = !DITemplateTypeParameter(name: "A", type: !276)
!1124 = !DILocation(line: 710, column: 13, scope: !1098)
!1125 = !DILocation(line: 711, column: 9, scope: !1098)
!1126 = !DILocation(line: 712, column: 6, scope: !1098)
!1127 = distinct !DISubprogram(name: "next<i32>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hb567e932e5e843d6E", scope: !1099, file: !247, line: 710, type: !1128, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1150, retainedNodes: !1148)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!1130, !1141}
!1130 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<i32>", scope: !20, file: !2, size: 64, align: 32, elements: !1131, templateParams: !26, identifier: "6bdf046ca244405c14a34b3e2d629599")
!1131 = !{!1132}
!1132 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1130, file: !2, size: 64, align: 32, elements: !1133, templateParams: !26, identifier: "559485cc0a180799d59c09b1983d68fc", discriminator: !1140)
!1133 = !{!1134, !1136}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1132, file: !2, baseType: !1135, size: 64, align: 32, extraData: i64 0)
!1135 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1130, file: !2, size: 64, align: 32, elements: !26, templateParams: !700, identifier: "ac8a4a068b65e116120724915be2f37c")
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1132, file: !2, baseType: !1137, size: 64, align: 32, extraData: i64 1)
!1137 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1130, file: !2, size: 64, align: 32, elements: !1138, templateParams: !700, identifier: "d6a544ac03d054cdd4d0bb540c69af89")
!1138 = !{!1139}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1137, file: !2, baseType: !253, size: 32, align: 32, offset: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, scope: !1130, file: !2, baseType: !173, size: 32, align: 32, flags: DIFlagArtificial)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ops::range::Range<i32>", baseType: !1142, size: 64, align: 64, dwarfAddressSpace: 0)
!1142 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<i32>", scope: !155, file: !2, size: 64, align: 32, elements: !1143, templateParams: !1146, identifier: "83ecdf3a91dfbabedf377a8d8dc77c39")
!1143 = !{!1144, !1145}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1142, file: !2, baseType: !253, size: 32, align: 32)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1142, file: !2, baseType: !253, size: 32, align: 32, offset: 32)
!1146 = !{!1147}
!1147 = !DITemplateTypeParameter(name: "Idx", type: !253)
!1148 = !{!1149}
!1149 = !DILocalVariable(name: "self", arg: 1, scope: !1127, file: !247, line: 710, type: !1141)
!1150 = !{!1151}
!1151 = !DITemplateTypeParameter(name: "A", type: !253)
!1152 = !DILocation(line: 710, column: 13, scope: !1127)
!1153 = !DILocation(line: 711, column: 9, scope: !1127)
!1154 = !DILocation(line: 712, column: 6, scope: !1127)
!1155 = distinct !DISubprogram(name: "from_size_valid_align", linkageName: "_ZN4core5alloc6layout6Layout21from_size_valid_align17h8781a35eec593f16E", scope: !1157, file: !1156, line: 77, type: !1166, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !1185)
!1156 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/alloc/layout.rs", directory: "", checksumkind: CSK_MD5, checksum: "2d0ac208ee70c69b94b07d38255a5525")
!1157 = !DICompositeType(tag: DW_TAG_structure_type, name: "Layout", scope: !1158, file: !2, size: 128, align: 64, elements: !1160, templateParams: !26, identifier: "6727bf1318ffccbbbfc5e6dc0dfc8722")
!1158 = !DINamespace(name: "layout", scope: !1159)
!1159 = !DINamespace(name: "alloc", scope: !15)
!1160 = !{!1161, !1162}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1157, file: !2, baseType: !9, size: 64, align: 64)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1157, file: !2, baseType: !1163, size: 64, align: 64, offset: 64)
!1163 = !DICompositeType(tag: DW_TAG_structure_type, name: "ValidAlign", scope: !52, file: !2, size: 64, align: 64, elements: !1164, templateParams: !26, identifier: "e392ecbcb8f7df9e6beb2b20857b4b5a")
!1164 = !{!1165}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1163, file: !2, baseType: !51, size: 64, align: 64)
!1166 = !DISubroutineType(types: !1167)
!1167 = !{!1168, !9, !1163}
!1168 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", scope: !460, file: !2, size: 128, align: 64, elements: !1169, templateParams: !26, identifier: "61ed90a3a60bf5c9da25fda9753d7b5")
!1169 = !{!1170}
!1170 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1168, file: !2, size: 128, align: 64, elements: !1171, templateParams: !26, identifier: "e7bb3560bfa0d3445ee2359cfbf9e5fe", discriminator: !1184)
!1171 = !{!1172, !1180}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1170, file: !2, baseType: !1173, size: 128, align: 64)
!1173 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1168, file: !2, size: 128, align: 64, elements: !1174, templateParams: !1176, identifier: "1efd2a987c8fa52528b02bba0275d8c7")
!1174 = !{!1175}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1173, file: !2, baseType: !1157, size: 128, align: 64)
!1176 = !{!1177, !1178}
!1177 = !DITemplateTypeParameter(name: "T", type: !1157)
!1178 = !DITemplateTypeParameter(name: "E", type: !1179)
!1179 = !DICompositeType(tag: DW_TAG_structure_type, name: "LayoutError", scope: !1158, file: !2, align: 8, elements: !26, identifier: "6e89e1d1b17d37435f7b87cb1d5cb26d")
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1170, file: !2, baseType: !1181, size: 128, align: 64, extraData: i64 0)
!1181 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1168, file: !2, size: 128, align: 64, elements: !1182, templateParams: !1176, identifier: "9488fb9df60d2b7e722ab2cffead9e28")
!1182 = !{!1183}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1181, file: !2, baseType: !1179, align: 8)
!1184 = !DIDerivedType(tag: DW_TAG_member, scope: !1168, file: !2, baseType: !54, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!1185 = !{!1186, !1187}
!1186 = !DILocalVariable(name: "size", arg: 1, scope: !1155, file: !1156, line: 77, type: !9)
!1187 = !DILocalVariable(name: "align", arg: 2, scope: !1155, file: !1156, line: 77, type: !1163)
!1188 = !DILocation(line: 77, column: 36, scope: !1155)
!1189 = !DILocation(line: 77, column: 49, scope: !1155)
!1190 = !DILocalVariable(name: "self", scope: !1191, file: !1156, line: 92, type: !1194, align: 8)
!1191 = !DILexicalBlockFile(scope: !1192, file: !1156, discriminator: 0)
!1192 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17hb22125d388e637b0E", scope: !1194, file: !1193, line: 82, type: !1198, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !1200)
!1193 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/nonzero.rs", directory: "", checksumkind: CSK_MD5, checksum: "f51cb88dd069db0b7fcd2123d03b69c9")
!1194 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonZeroUsize", scope: !1195, file: !2, size: 64, align: 64, elements: !1196, templateParams: !26, identifier: "c6c54dffb7a9517405cc55666c804e7")
!1195 = !DINamespace(name: "nonzero", scope: !127)
!1196 = !{!1197}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1194, file: !2, baseType: !9, size: 64, align: 64)
!1198 = !DISubroutineType(types: !1199)
!1199 = !{!9, !1194}
!1200 = !{!1190}
!1201 = !DILocation(line: 92, column: 42, scope: !1191, inlinedAt: !1202)
!1202 = !DILocation(line: 92, column: 42, scope: !1155)
!1203 = !DILocalVariable(name: "self", scope: !1204, file: !1156, line: 92, type: !1163, align: 8)
!1204 = !DILexicalBlockFile(scope: !1205, file: !1156, discriminator: 0)
!1205 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h99ed8069ebe58cd6E", scope: !1163, file: !1206, line: 39, type: !1207, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !1209)
!1206 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/valid_align.rs", directory: "", checksumkind: CSK_MD5, checksum: "681d44917f5a26aec3d3954431def51e")
!1207 = !DISubroutineType(types: !1208)
!1208 = !{!1194, !1163}
!1209 = !{!1203}
!1210 = !DILocation(line: 92, column: 42, scope: !1204, inlinedAt: !1202)
!1211 = !{i64 1, i64 -9223372036854775807}
!1212 = !DILocalVariable(name: "n", scope: !1213, file: !1156, line: 92, type: !9, align: 8)
!1213 = !DILexicalBlockFile(scope: !1214, file: !1156, discriminator: 0)
!1214 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h5f31a20d31332a6bE", scope: !1194, file: !1193, line: 56, type: !1215, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !1217)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{!1194, !9}
!1217 = !{!1212, !1218}
!1218 = !DILocalVariable(name: "runtime", scope: !1219, file: !1156, line: 92, type: !1221, align: 8)
!1219 = !DILexicalBlockFile(scope: !1220, file: !1156, discriminator: 0)
!1220 = distinct !DILexicalBlock(scope: !1214, file: !356, line: 2336, column: 13)
!1221 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1222, file: !2, size: 64, align: 64, elements: !1224, templateParams: !26, identifier: "cbed2d88a1ec7b20c4ad53e8c9863d89")
!1222 = !DINamespace(name: "new_unchecked", scope: !1223)
!1223 = !DINamespace(name: "{impl#35}", scope: !1195)
!1224 = !{!1225}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__n", scope: !1221, file: !2, baseType: !617, size: 64, align: 64)
!1226 = !DILocation(line: 92, column: 42, scope: !1213, inlinedAt: !1227)
!1227 = !DILocation(line: 41, column: 18, scope: !1205, inlinedAt: !1202)
!1228 = !DILocation(line: 92, column: 41, scope: !1155)
!1229 = !DILocation(line: 92, column: 19, scope: !1155)
!1230 = !DILocation(line: 92, column: 12, scope: !1155)
!1231 = !DILocation(line: 97, column: 12, scope: !1155)
!1232 = !DILocation(line: 97, column: 9, scope: !1155)
!1233 = !DILocation(line: 98, column: 6, scope: !1155)
!1234 = !DILocation(line: 93, column: 20, scope: !1155)
!1235 = !{i64 0, i64 -9223372036854775807}
!1236 = distinct !DISubprogram(name: "array<u8>", linkageName: "_ZN4core5alloc6layout6Layout5array17hd3d68a432436475dE", scope: !1157, file: !1156, line: 416, type: !1237, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1239)
!1237 = !DISubroutineType(types: !1238)
!1238 = !{!1168, !9}
!1239 = !{!1240, !1241, !1243, !1263}
!1240 = !DILocalVariable(name: "n", arg: 1, scope: !1236, file: !1156, line: 416, type: !9)
!1241 = !DILocalVariable(name: "array_size", scope: !1242, file: !1156, line: 417, type: !9, align: 8)
!1242 = distinct !DILexicalBlock(scope: !1236, file: !1156, line: 417, column: 9)
!1243 = !DILocalVariable(name: "residual", scope: !1244, file: !1156, line: 417, type: !1245, align: 1)
!1244 = distinct !DILexicalBlock(scope: !1236, file: !1156, line: 417, column: 79)
!1245 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::layout::LayoutError>", scope: !460, file: !2, align: 8, elements: !1246, templateParams: !26, identifier: "2408e7ead4450472646681a937f2eed")
!1246 = !{!1247}
!1247 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1245, file: !2, align: 8, elements: !1248, templateParams: !26, identifier: "6cbcec323d74ab47f813265a09655e1e")
!1248 = !{!1249, !1259}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1247, file: !2, baseType: !1250, align: 8)
!1250 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1245, file: !2, align: 8, elements: !1251, templateParams: !1257, identifier: "40ec0a271e0cb2d34d257ba58fdead82")
!1251 = !{!1252}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1250, file: !2, baseType: !1253, align: 8)
!1253 = !DICompositeType(tag: DW_TAG_structure_type, name: "Infallible", scope: !1254, file: !2, align: 8, elements: !1255, templateParams: !26, identifier: "54da939063c7c2baf203c9f582cd0995")
!1254 = !DINamespace(name: "convert", scope: !15)
!1255 = !{!1256}
!1256 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1253, file: !2, align: 8, elements: !26, identifier: "8a046f69014feadb4a5e941e4277afe9")
!1257 = !{!1258, !1178}
!1258 = !DITemplateTypeParameter(name: "T", type: !1253)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1247, file: !2, baseType: !1260, align: 8)
!1260 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1245, file: !2, align: 8, elements: !1261, templateParams: !1257, identifier: "72611e72c15211a4d55dae520b84155f")
!1261 = !{!1262}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1260, file: !2, baseType: !1179, align: 8)
!1263 = !DILocalVariable(name: "val", scope: !1264, file: !1156, line: 417, type: !9, align: 8)
!1264 = distinct !DILexicalBlock(scope: !1236, file: !1156, line: 417, column: 26)
!1265 = !DILocation(line: 416, column: 21, scope: !1236)
!1266 = !DILocalVariable(name: "self", scope: !1267, file: !1156, line: 417, type: !1290, align: 8)
!1267 = !DILexicalBlockFile(scope: !1268, file: !1156, discriminator: 0)
!1268 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2e21f9fde42ff57bE", scope: !1270, file: !1269, line: 2117, type: !1271, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1298, retainedNodes: !1304)
!1269 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "376d3f50f2b6d030dde9244768e6c6e1")
!1270 = !DINamespace(name: "{impl#27}", scope: !460)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{!1273, !1290}
!1273 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>", scope: !1274, file: !2, size: 128, align: 64, elements: !1275, templateParams: !26, identifier: "ce5c98f9de0798e97388caf7b24b4edc")
!1274 = !DINamespace(name: "control_flow", scope: !156)
!1275 = !{!1276}
!1276 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1273, file: !2, size: 128, align: 64, elements: !1277, templateParams: !26, identifier: "6bdd8e43359c9849ce58ffeff4bb9b82", discriminator: !1289)
!1277 = !{!1278, !1285}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !1276, file: !2, baseType: !1279, size: 128, align: 64, extraData: i64 0)
!1279 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !1273, file: !2, size: 128, align: 64, elements: !1280, templateParams: !1282, identifier: "b6fdadee5e49b7207145efbc9b42a94a")
!1280 = !{!1281}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1279, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1282 = !{!1283, !1284}
!1283 = !DITemplateTypeParameter(name: "B", type: !1245)
!1284 = !DITemplateTypeParameter(name: "C", type: !9)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !1276, file: !2, baseType: !1286, size: 128, align: 64, extraData: i64 1)
!1286 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !1273, file: !2, size: 128, align: 64, elements: !1287, templateParams: !1282, identifier: "b5889c00b354165f6e6f55dba1990157")
!1287 = !{!1288}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1286, file: !2, baseType: !1245, align: 8, offset: 64)
!1289 = !DIDerivedType(tag: DW_TAG_member, scope: !1273, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!1290 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, core::alloc::layout::LayoutError>", scope: !460, file: !2, size: 128, align: 64, elements: !1291, templateParams: !26, identifier: "c2a525df37a04684d727d3bb68e24786")
!1291 = !{!1292}
!1292 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1290, file: !2, size: 128, align: 64, elements: !1293, templateParams: !26, identifier: "59922648ff1b36fe1aa289683c505c74", discriminator: !1303)
!1293 = !{!1294, !1299}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1292, file: !2, baseType: !1295, size: 128, align: 64, extraData: i64 0)
!1295 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1290, file: !2, size: 128, align: 64, elements: !1296, templateParams: !1298, identifier: "98a9acae3d260aa3de9b86f4a7044881")
!1296 = !{!1297}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1295, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1298 = !{!492, !1178}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1292, file: !2, baseType: !1300, size: 128, align: 64, extraData: i64 1)
!1300 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1290, file: !2, size: 128, align: 64, elements: !1301, templateParams: !1298, identifier: "3430eaa712a080f75cd3b02585f182")
!1301 = !{!1302}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1300, file: !2, baseType: !1179, align: 8, offset: 64)
!1303 = !DIDerivedType(tag: DW_TAG_member, scope: !1290, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!1304 = !{!1266, !1305, !1308}
!1305 = !DILocalVariable(name: "v", scope: !1306, file: !1156, line: 417, type: !9, align: 8)
!1306 = !DILexicalBlockFile(scope: !1307, file: !1156, discriminator: 0)
!1307 = distinct !DILexicalBlock(scope: !1268, file: !1269, line: 2119, column: 13)
!1308 = !DILocalVariable(name: "e", scope: !1309, file: !1156, line: 417, type: !1179, align: 1)
!1309 = !DILexicalBlockFile(scope: !1310, file: !1156, discriminator: 0)
!1310 = distinct !DILexicalBlock(scope: !1268, file: !1269, line: 2120, column: 13)
!1311 = !DILocation(line: 417, column: 26, scope: !1267, inlinedAt: !1312)
!1312 = !DILocation(line: 417, column: 26, scope: !1236)
!1313 = !DILocalVariable(name: "self", scope: !1314, file: !1156, line: 417, type: !485, align: 8)
!1314 = !DILexicalBlockFile(scope: !1315, file: !1156, discriminator: 0)
!1315 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h4ee8e754ea52409cE", scope: !485, file: !1316, line: 1051, type: !1317, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1298, retainedNodes: !1319)
!1316 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "86a5483c3993f03690545387e943de77")
!1317 = !DISubroutineType(types: !1318)
!1318 = !{!1290, !485, !1179}
!1319 = !{!1313, !1320, !1321}
!1320 = !DILocalVariable(name: "err", scope: !1314, file: !1156, line: 417, type: !1179, align: 1)
!1321 = !DILocalVariable(name: "v", scope: !1322, file: !1156, line: 417, type: !9, align: 8)
!1322 = !DILexicalBlockFile(scope: !1323, file: !1156, discriminator: 0)
!1323 = distinct !DILexicalBlock(scope: !1315, file: !1316, line: 1056, column: 13)
!1324 = !DILocation(line: 417, column: 26, scope: !1314, inlinedAt: !1312)
!1325 = !DILocation(line: 417, column: 79, scope: !1244)
!1326 = !DILocalVariable(name: "residual", scope: !1327, file: !1156, line: 417, type: !1245, align: 1)
!1327 = !DILexicalBlockFile(scope: !1328, file: !1156, discriminator: 0)
!1328 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h14427836087e992bE", scope: !1329, file: !1269, line: 2132, type: !1330, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1336, retainedNodes: !1332)
!1329 = !DINamespace(name: "{impl#28}", scope: !460)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!1168, !1245, !162}
!1332 = !{!1326, !1333}
!1333 = !DILocalVariable(name: "e", scope: !1334, file: !1156, line: 417, type: !1179, align: 1)
!1334 = !DILexicalBlockFile(scope: !1335, file: !1156, discriminator: 0)
!1335 = distinct !DILexicalBlock(scope: !1328, file: !1269, line: 2134, column: 13)
!1336 = !{!1177, !1178, !1337}
!1337 = !DITemplateTypeParameter(name: "F", type: !1179)
!1338 = !DILocation(line: 417, column: 26, scope: !1327, inlinedAt: !1339)
!1339 = !DILocation(line: 417, column: 26, scope: !1244)
!1340 = !DILocation(line: 417, column: 26, scope: !1309, inlinedAt: !1312)
!1341 = !DILocation(line: 417, column: 26, scope: !1334, inlinedAt: !1339)
!1342 = !DILocation(line: 417, column: 26, scope: !1322, inlinedAt: !1312)
!1343 = !DILocation(line: 417, column: 26, scope: !1306, inlinedAt: !1312)
!1344 = !DILocation(line: 417, column: 26, scope: !1264)
!1345 = !DILocation(line: 417, column: 13, scope: !1242)
!1346 = !DILocation(line: 419, column: 51, scope: !1347, inlinedAt: !1351)
!1347 = !DILexicalBlockFile(scope: !1348, file: !1156, discriminator: 0)
!1348 = distinct !DISubprogram(name: "align_of<u8>", linkageName: "_ZN4core3mem8align_of17h719fa9d0f32ce13fE", scope: !53, file: !691, line: 464, type: !1349, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !26)
!1349 = !DISubroutineType(types: !1350)
!1350 = !{!9}
!1351 = !DILocation(line: 56, column: 44, scope: !1352, inlinedAt: !1355)
!1352 = distinct !DISubprogram(name: "of<u8>", linkageName: "_ZN4core3mem11valid_align10ValidAlign2of17h49f534fe299c5ef0E", scope: !1163, file: !1206, line: 54, type: !1353, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !26)
!1353 = !DISubroutineType(types: !1354)
!1354 = !{!1163}
!1355 = !DILocation(line: 419, column: 51, scope: !1242)
!1356 = !DILocalVariable(name: "align", scope: !1357, file: !1156, line: 419, type: !9, align: 8)
!1357 = !DILexicalBlockFile(scope: !1358, file: !1156, discriminator: 0)
!1358 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h8f8be6852eff3069E", scope: !1163, file: !1206, line: 29, type: !1359, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !1361)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{!1163, !9}
!1361 = !{!1356, !1362}
!1362 = !DILocalVariable(name: "runtime", scope: !1363, file: !1156, line: 419, type: !1365, align: 8)
!1363 = !DILexicalBlockFile(scope: !1364, file: !1156, discriminator: 0)
!1364 = distinct !DILexicalBlock(scope: !1358, file: !356, line: 2336, column: 13)
!1365 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1366, file: !2, size: 64, align: 64, elements: !1368, templateParams: !26, identifier: "a24236e50785a0359acaebf14a869a84")
!1366 = !DINamespace(name: "new_unchecked", scope: !1367)
!1367 = !DINamespace(name: "{impl#0}", scope: !52)
!1368 = !{!1369}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__align", scope: !1365, file: !2, baseType: !617, size: 64, align: 64)
!1370 = !DILocation(line: 419, column: 51, scope: !1357, inlinedAt: !1371)
!1371 = !DILocation(line: 56, column: 18, scope: !1352, inlinedAt: !1355)
!1372 = !DILocation(line: 420, column: 6, scope: !1236)
!1373 = !DILocation(line: 419, column: 9, scope: !1242)
!1374 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeTo<usize>, 128>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h3df2678a0c5e8f1eE", scope: !1376, file: !1375, line: 285, type: !1378, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1387, retainedNodes: !1384)
!1375 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/array/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e237aff39bff30ac55984ee183267020")
!1376 = !DINamespace(name: "{impl#15}", scope: !1377)
!1377 = !DINamespace(name: "array", scope: !15)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{!149, !1380, !190, !162}
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[u8; 128]", baseType: !1381, size: 64, align: 64, dwarfAddressSpace: 0)
!1381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 1024, align: 8, elements: !1382)
!1382 = !{!1383}
!1383 = !DISubrange(count: 128, lowerBound: 0)
!1384 = !{!1385, !1386}
!1385 = !DILocalVariable(name: "self", arg: 1, scope: !1374, file: !1375, line: 285, type: !1380)
!1386 = !DILocalVariable(name: "index", arg: 2, scope: !1374, file: !1375, line: 285, type: !190)
!1387 = !{!28, !1388}
!1388 = !DITemplateTypeParameter(name: "I", type: !190)
!1389 = !DILocation(line: 285, column: 14, scope: !1374)
!1390 = !DILocation(line: 285, column: 21, scope: !1374)
!1391 = !DILocation(line: 286, column: 22, scope: !1374)
!1392 = !DILocation(line: 286, column: 9, scope: !1374)
!1393 = !DILocation(line: 287, column: 6, scope: !1374)
!1394 = distinct !DISubprogram(name: "eq<u8, u8, 16>", linkageName: "_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17hc6d3ce497554ef29E", scope: !1396, file: !1395, line: 11, type: !1398, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1407, retainedNodes: !1404)
!1395 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/array/equality.rs", directory: "", checksumkind: CSK_MD5, checksum: "0b2a6ef978d2ec8f60a33a03ff9f5cb8")
!1396 = !DINamespace(name: "{impl#0}", scope: !1397)
!1397 = !DINamespace(name: "equality", scope: !1377)
!1398 = !DISubroutineType(types: !1399)
!1399 = !{!398, !1400, !1400}
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[u8; 16]", baseType: !1401, size: 64, align: 64, dwarfAddressSpace: 0)
!1401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 128, align: 8, elements: !1402)
!1402 = !{!1403}
!1403 = !DISubrange(count: 16, lowerBound: 0)
!1404 = !{!1405, !1406}
!1405 = !DILocalVariable(name: "self", arg: 1, scope: !1394, file: !1395, line: 11, type: !1400)
!1406 = !DILocalVariable(name: "other", arg: 2, scope: !1394, file: !1395, line: 11, type: !1400)
!1407 = !{!1408, !1409}
!1408 = !DITemplateTypeParameter(name: "A", type: !29)
!1409 = !DITemplateTypeParameter(name: "B", type: !29)
!1410 = !DILocation(line: 11, column: 11, scope: !1394)
!1411 = !DILocation(line: 11, column: 18, scope: !1394)
!1412 = !DILocation(line: 12, column: 9, scope: !1394)
!1413 = !DILocation(line: 13, column: 6, scope: !1394)
!1414 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i32$GT$5clone17h9b2bddbc476572d1E", scope: !1416, file: !1415, line: 189, type: !1419, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !1421)
!1415 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/clone.rs", directory: "", checksumkind: CSK_MD5, checksum: "3792fef4e5cf0c1ef2457d8c192d163d")
!1416 = !DINamespace(name: "{impl#14}", scope: !1417)
!1417 = !DINamespace(name: "impls", scope: !1418)
!1418 = !DINamespace(name: "clone", scope: !15)
!1419 = !DISubroutineType(types: !1420)
!1420 = !{!253, !399}
!1421 = !{!1422}
!1422 = !DILocalVariable(name: "self", arg: 1, scope: !1414, file: !1415, line: 189, type: !399)
!1423 = !DILocation(line: 189, column: 30, scope: !1414)
!1424 = !DILocation(line: 190, column: 25, scope: !1414)
!1425 = !DILocation(line: 191, column: 22, scope: !1414)
!1426 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i64$GT$5clone17h83f44c00881ad16fE", scope: !1427, file: !1415, line: 189, type: !1428, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !1430)
!1427 = !DINamespace(name: "{impl#15}", scope: !1417)
!1428 = !DISubroutineType(types: !1429)
!1429 = !{!276, !412}
!1430 = !{!1431}
!1431 = !DILocalVariable(name: "self", arg: 1, scope: !1426, file: !1415, line: 189, type: !412)
!1432 = !DILocation(line: 189, column: 30, scope: !1426)
!1433 = !DILocation(line: 190, column: 25, scope: !1426)
!1434 = !DILocation(line: 191, column: 22, scope: !1426)
!1435 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17he1bead3ba556669aE", scope: !434, file: !433, line: 506, type: !1436, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1442)
!1436 = !DISubroutineType(types: !1437)
!1437 = !{!228, !1438}
!1438 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [u8]", file: !2, size: 128, align: 64, elements: !1439, templateParams: !26, identifier: "188333407bebfa65121ceca786627665")
!1439 = !{!1440, !1441}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1438, file: !2, baseType: !152, size: 64, align: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1438, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1442 = !{!1443}
!1443 = !DILocalVariable(name: "self", arg: 1, scope: !1435, file: !433, line: 506, type: !1438)
!1444 = !DILocation(line: 506, column: 29, scope: !1435)
!1445 = !DILocation(line: 507, column: 9, scope: !1435)
!1446 = !DILocation(line: 508, column: 6, scope: !1435)
!1447 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h2265d1d1eefd74aeE", scope: !1448, file: !143, line: 17, type: !1449, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1387, retainedNodes: !1451)
!1448 = !DINamespace(name: "{impl#0}", scope: !145)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{!149, !149, !190, !162}
!1451 = !{!1452, !1453}
!1452 = !DILocalVariable(name: "self", arg: 1, scope: !1447, file: !143, line: 17, type: !149)
!1453 = !DILocalVariable(name: "index", arg: 2, scope: !1447, file: !143, line: 17, type: !190)
!1454 = !DILocation(line: 17, column: 14, scope: !1447)
!1455 = !DILocation(line: 17, column: 21, scope: !1447)
!1456 = !DILocation(line: 18, column: 9, scope: !1447)
!1457 = !DILocation(line: 19, column: 6, scope: !1447)
!1458 = distinct !DISubprogram(name: "map_or_else<&str, alloc::string::String, alloc::fmt::format::{closure_env#0}, fn(&str) -> alloc::string::String>", linkageName: "_ZN4core6option15Option$LT$T$GT$11map_or_else17h2b746e8d475aa0c8E", scope: !638, file: !1316, line: 1014, type: !1459, scopeLine: 1014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1472, retainedNodes: !1466)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{!300, !638, !1461, !904}
!1461 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1462, file: !2, size: 64, align: 64, elements: !1464, templateParams: !26, identifier: "412eac7ee577f472c7d5b63e6295002")
!1462 = !DINamespace(name: "format", scope: !1463)
!1463 = !DINamespace(name: "fmt", scope: !122)
!1464 = !{!1465}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__args", scope: !1461, file: !2, baseType: !535, size: 64, align: 64)
!1466 = !{!1467, !1468, !1469, !1470}
!1467 = !DILocalVariable(name: "self", arg: 1, scope: !1458, file: !1316, line: 1014, type: !638)
!1468 = !DILocalVariable(name: "default", arg: 2, scope: !1458, file: !1316, line: 1014, type: !1461)
!1469 = !DILocalVariable(name: "f", arg: 3, scope: !1458, file: !1316, line: 1014, type: !904)
!1470 = !DILocalVariable(name: "t", scope: !1471, file: !1316, line: 1022, type: !168, align: 8)
!1471 = distinct !DILexicalBlock(scope: !1458, file: !1316, line: 1022, column: 13)
!1472 = !{!645, !1473, !1474, !1475}
!1473 = !DITemplateTypeParameter(name: "U", type: !300)
!1474 = !DITemplateTypeParameter(name: "D", type: !1461)
!1475 = !DITemplateTypeParameter(name: "F", type: !904)
!1476 = !DILocation(line: 1014, column: 39, scope: !1458)
!1477 = !DILocation(line: 1014, column: 45, scope: !1458)
!1478 = !DILocation(line: 1014, column: 57, scope: !1458)
!1479 = !DILocation(line: 1021, column: 15, scope: !1458)
!1480 = !DILocation(line: 1021, column: 9, scope: !1458)
!1481 = !DILocation(line: 1023, column: 21, scope: !1458)
!1482 = !DILocation(line: 1022, column: 18, scope: !1458)
!1483 = !DILocation(line: 1022, column: 18, scope: !1471)
!1484 = !DILocation(line: 1022, column: 24, scope: !1471)
!1485 = !DILocation(line: 1025, column: 5, scope: !1458)
!1486 = !DILocation(line: 1022, column: 27, scope: !1458)
!1487 = !DILocation(line: 1023, column: 29, scope: !1458)
!1488 = !DILocation(line: 1014, column: 5, scope: !1458)
!1489 = !DILocation(line: 1025, column: 6, scope: !1458)
!1490 = distinct !DISubprogram(name: "unwrap<f128_internal::f128_t::f128>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17h09baf5fcc786da84E", scope: !1491, file: !1316, line: 772, type: !1509, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1497, retainedNodes: !1511)
!1491 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<f128_internal::f128_t::f128>", scope: !20, file: !2, size: 136, align: 8, elements: !1492, templateParams: !26, identifier: "bab92a01173344f0f1d6a34b61305b52")
!1492 = !{!1493}
!1493 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1491, file: !2, size: 136, align: 8, elements: !1494, templateParams: !26, identifier: "5ae70116c4c7839b5f19f1f2f0bd89ea", discriminator: !1508)
!1494 = !{!1495, !1504}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1493, file: !2, baseType: !1496, size: 136, align: 8, extraData: i64 0)
!1496 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1491, file: !2, size: 136, align: 8, elements: !26, templateParams: !1497, identifier: "e9081804e6e7824090ab1f9b0b9950de")
!1497 = !{!1498}
!1498 = !DITemplateTypeParameter(name: "T", type: !1499)
!1499 = !DICompositeType(tag: DW_TAG_structure_type, name: "f128", scope: !1500, file: !2, size: 128, align: 8, elements: !1502, templateParams: !26, identifier: "28631f457d6ea86b5cdf0afd2e10880f")
!1500 = !DINamespace(name: "f128_t", scope: !1501)
!1501 = !DINamespace(name: "f128_internal", scope: null)
!1502 = !{!1503}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1499, file: !2, baseType: !1401, size: 128, align: 8)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1493, file: !2, baseType: !1505, size: 136, align: 8, extraData: i64 1)
!1505 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1491, file: !2, size: 136, align: 8, elements: !1506, templateParams: !1497, identifier: "adc2a9dc429e83796d7d97ba60a79959")
!1506 = !{!1507}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1505, file: !2, baseType: !1499, size: 128, align: 8, offset: 8)
!1508 = !DIDerivedType(tag: DW_TAG_member, scope: !1491, file: !2, baseType: !29, size: 8, align: 8, flags: DIFlagArtificial)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!1499, !1491, !162}
!1511 = !{!1512, !1513}
!1512 = !DILocalVariable(name: "self", arg: 1, scope: !1490, file: !1316, line: 772, type: !1491)
!1513 = !DILocalVariable(name: "val", scope: !1514, file: !1316, line: 774, type: !1499, align: 1)
!1514 = distinct !DILexicalBlock(scope: !1490, file: !1316, line: 774, column: 13)
!1515 = !DILocation(line: 774, column: 18, scope: !1514)
!1516 = !DILocation(line: 772, column: 25, scope: !1490)
!1517 = !DILocation(line: 773, column: 15, scope: !1490)
!1518 = !DILocation(line: 773, column: 9, scope: !1490)
!1519 = !DILocation(line: 775, column: 21, scope: !1490)
!1520 = !DILocation(line: 774, column: 18, scope: !1490)
!1521 = !DILocation(line: 777, column: 6, scope: !1490)
!1522 = distinct !DISubprogram(name: "unwrap<&str, core::str::error::Utf8Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h7c6a2d7f63435a18E", scope: !1523, file: !1269, line: 1101, type: !1538, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1531, retainedNodes: !1540)
!1523 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<&str, core::str::error::Utf8Error>", scope: !460, file: !2, size: 192, align: 64, elements: !1524, templateParams: !26, identifier: "e56ee9ab965eba8823c2d17d14d86186")
!1524 = !{!1525}
!1525 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1523, file: !2, size: 192, align: 64, elements: !1526, templateParams: !26, identifier: "3bd39bafb9bf83a4b2331b62105c3372", discriminator: !1537)
!1526 = !{!1527, !1533}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1525, file: !2, baseType: !1528, size: 192, align: 64, extraData: i64 0)
!1528 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1523, file: !2, size: 192, align: 64, elements: !1529, templateParams: !1531, identifier: "f41479adf37107fdcb555eabe746b169")
!1529 = !{!1530}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1528, file: !2, baseType: !168, size: 128, align: 64, offset: 64)
!1531 = !{!645, !1532}
!1532 = !DITemplateTypeParameter(name: "E", type: !12)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1525, file: !2, baseType: !1534, size: 192, align: 64, extraData: i64 1)
!1534 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1523, file: !2, size: 192, align: 64, elements: !1535, templateParams: !1531, identifier: "169407a4202f9203438ab924204e1324")
!1535 = !{!1536}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1534, file: !2, baseType: !12, size: 128, align: 64, offset: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, scope: !1523, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{!168, !1523, !162}
!1540 = !{!1541, !1542, !1544}
!1541 = !DILocalVariable(name: "self", arg: 1, scope: !1522, file: !1269, line: 1101, type: !1523)
!1542 = !DILocalVariable(name: "t", scope: !1543, file: !1269, line: 1106, type: !168, align: 8)
!1543 = distinct !DILexicalBlock(scope: !1522, file: !1269, line: 1106, column: 13)
!1544 = !DILocalVariable(name: "e", scope: !1545, file: !1269, line: 1107, type: !12, align: 8)
!1545 = distinct !DILexicalBlock(scope: !1522, file: !1269, line: 1107, column: 13)
!1546 = !DILocation(line: 1101, column: 19, scope: !1522)
!1547 = !DILocation(line: 1107, column: 17, scope: !1545)
!1548 = !DILocation(line: 1105, column: 15, scope: !1522)
!1549 = !DILocation(line: 1105, column: 9, scope: !1522)
!1550 = !DILocation(line: 1106, column: 16, scope: !1522)
!1551 = !DILocation(line: 1106, column: 16, scope: !1543)
!1552 = !DILocation(line: 1109, column: 6, scope: !1522)
!1553 = !DILocation(line: 1107, column: 17, scope: !1522)
!1554 = !DILocation(line: 1107, column: 84, scope: !1545)
!1555 = !DILocation(line: 1107, column: 23, scope: !1545)
!1556 = !DILocation(line: 1107, column: 86, scope: !1522)
!1557 = !DILocation(line: 1101, column: 5, scope: !1522)
!1558 = distinct !DISubprogram(name: "from<core::alloc::layout::LayoutError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2bed783e04bb68bcE", scope: !1560, file: !1559, line: 559, type: !1561, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1565, retainedNodes: !1563)
!1559 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e9a22d2b51b4cfd278a09c9d531e27c4")
!1560 = !DINamespace(name: "{impl#4}", scope: !1254)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{null, !1179}
!1563 = !{!1564}
!1564 = !DILocalVariable(name: "t", arg: 1, scope: !1558, file: !1559, line: 559, type: !1179)
!1565 = !{!1566}
!1566 = !DITemplateTypeParameter(name: "T", type: !1179)
!1567 = !DILocation(line: 559, column: 13, scope: !1558)
!1568 = !DILocation(line: 561, column: 6, scope: !1558)
!1569 = distinct !DISubprogram(name: "from<core::alloc::AllocError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h5a2efa16e49566acE", scope: !1560, file: !1559, line: 559, type: !1570, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1575, retainedNodes: !1573)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{null, !1572}
!1572 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !1159, file: !2, align: 8, elements: !26, identifier: "34d6c5a45c099706becbbcb30500973a")
!1573 = !{!1574}
!1574 = !DILocalVariable(name: "t", arg: 1, scope: !1569, file: !1559, line: 559, type: !1572)
!1575 = !{!1576}
!1576 = !DITemplateTypeParameter(name: "T", type: !1572)
!1577 = !DILocation(line: 559, column: 13, scope: !1569)
!1578 = !DILocation(line: 561, column: 6, scope: !1569)
!1579 = distinct !DISubprogram(name: "into<core::ptr::unique::Unique<u8>, core::ptr::non_null::NonNull<u8>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h54abd76d613f16f4E", scope: !1580, file: !1559, line: 549, type: !205, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1583, retainedNodes: !1581)
!1580 = !DINamespace(name: "{impl#3}", scope: !1254)
!1581 = !{!1582}
!1582 = !DILocalVariable(name: "self", arg: 1, scope: !1579, file: !1559, line: 549, type: !211)
!1583 = !{!1584, !1585}
!1584 = !DITemplateTypeParameter(name: "T", type: !211)
!1585 = !DITemplateTypeParameter(name: "U", type: !207)
!1586 = !DILocation(line: 549, column: 13, scope: !1579)
!1587 = !DILocation(line: 550, column: 9, scope: !1579)
!1588 = !DILocation(line: 551, column: 6, scope: !1579)
!1589 = distinct !DISubprogram(name: "to_vec<u8, alloc::alloc::Global>", linkageName: "_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17hb7bb30850b3c25e0E", scope: !1591, file: !1590, line: 228, type: !1594, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !314, retainedNodes: !1596)
!1590 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/slice.rs", directory: "", checksumkind: CSK_MD5, checksum: "a8fd291b91f3283bd7dca3e6d9be9bc7")
!1591 = !DINamespace(name: "{impl#1}", scope: !1592)
!1592 = !DINamespace(name: "hack", scope: !1593)
!1593 = !DINamespace(name: "slice", scope: !122)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{!303, !149, !312}
!1596 = !{!1597, !1598, !1599}
!1597 = !DILocalVariable(name: "s", arg: 1, scope: !1589, file: !1590, line: 228, type: !149)
!1598 = !DILocalVariable(name: "alloc", arg: 2, scope: !1589, file: !1590, line: 228, type: !312)
!1599 = !DILocalVariable(name: "v", scope: !1600, file: !1590, line: 229, type: !303, align: 8)
!1600 = distinct !DILexicalBlock(scope: !1589, file: !1590, line: 229, column: 13)
!1601 = !DILocation(line: 229, column: 17, scope: !1600)
!1602 = !DILocation(line: 228, column: 33, scope: !1589)
!1603 = !DILocation(line: 228, column: 45, scope: !1589)
!1604 = !DILocalVariable(name: "alloc", scope: !1605, file: !1590, line: 229, type: !312, align: 1)
!1605 = !DILexicalBlockFile(scope: !1606, file: !1590, discriminator: 0)
!1606 = distinct !DISubprogram(name: "with_capacity_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h6852ee0bc5fc144dE", scope: !303, file: !1607, line: 640, type: !1608, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !314, retainedNodes: !1610)
!1607 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "ccced07f4d2284e276bdff9c5cb81e82")
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!303, !9, !312}
!1610 = !{!1611, !1604}
!1611 = !DILocalVariable(name: "capacity", scope: !1605, file: !1590, line: 229, type: !9, align: 8)
!1612 = !DILocation(line: 229, column: 25, scope: !1605, inlinedAt: !1613)
!1613 = !DILocation(line: 229, column: 25, scope: !1589)
!1614 = !DILocalVariable(name: "alloc", scope: !1615, file: !1590, line: 229, type: !312, align: 1)
!1615 = !DILexicalBlockFile(scope: !1616, file: !1590, discriminator: 0)
!1616 = distinct !DISubprogram(name: "with_capacity_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h85b9e9327d945320E", scope: !307, file: !1617, line: 130, type: !1618, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !314, retainedNodes: !1620)
!1617 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/raw_vec.rs", directory: "", checksumkind: CSK_MD5, checksum: "7882a816b01a8bc5234f4586c1b0290b")
!1618 = !DISubroutineType(types: !1619)
!1619 = !{!307, !9, !312}
!1620 = !{!1621, !1614}
!1621 = !DILocalVariable(name: "capacity", scope: !1615, file: !1590, line: 229, type: !9, align: 8)
!1622 = !DILocation(line: 229, column: 25, scope: !1615, inlinedAt: !1623)
!1623 = !DILocation(line: 641, column: 20, scope: !1606, inlinedAt: !1613)
!1624 = !DILocalVariable(name: "runtime", scope: !1625, file: !1590, line: 234, type: !1635, align: 8)
!1625 = !DILexicalBlockFile(scope: !1626, file: !1590, discriminator: 0)
!1626 = distinct !DILexicalBlock(scope: !1627, file: !356, line: 2336, column: 13)
!1627 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17hb696a68cb163bccbE", scope: !357, file: !356, line: 2458, type: !1628, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1630)
!1628 = !DISubroutineType(types: !1629)
!1629 = !{null, !210, !228, !9}
!1630 = !{!1631, !1633, !1634, !1624}
!1631 = !DILocalVariable(name: "src", scope: !1632, file: !1590, line: 234, type: !210, align: 8)
!1632 = !DILexicalBlockFile(scope: !1627, file: !1590, discriminator: 0)
!1633 = !DILocalVariable(name: "dst", scope: !1632, file: !1590, line: 234, type: !228, align: 8)
!1634 = !DILocalVariable(name: "count", scope: !1632, file: !1590, line: 234, type: !9, align: 8)
!1635 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !1636, file: !2, size: 192, align: 64, elements: !1637, templateParams: !26, identifier: "fb5d8c4998ddcc045cba0da9a8307400")
!1636 = !DINamespace(name: "copy_nonoverlapping", scope: !357)
!1637 = !{!1638, !1640, !1642}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__src", scope: !1635, file: !2, baseType: !1639, size: 64, align: 64)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const u8", baseType: !210, size: 64, align: 64, dwarfAddressSpace: 0)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__dst", scope: !1635, file: !2, baseType: !1641, size: 64, align: 64, offset: 64)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut u8", baseType: !228, size: 64, align: 64, dwarfAddressSpace: 0)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__count", scope: !1635, file: !2, baseType: !617, size: 64, align: 64, offset: 128)
!1643 = !DILocation(line: 234, column: 17, scope: !1625, inlinedAt: !1644)
!1644 = !DILocation(line: 1243, column: 18, scope: !1645, inlinedAt: !1654)
!1645 = distinct !DISubprogram(name: "copy_to_nonoverlapping<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17h4f0a1238a6300dfcE", scope: !1647, file: !1646, line: 1238, type: !1628, scopeLine: 1238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1649)
!1646 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "1874e43cb83f8af3048974827047cb9c")
!1647 = !DINamespace(name: "{impl#0}", scope: !1648)
!1648 = !DINamespace(name: "const_ptr", scope: !204)
!1649 = !{!1650, !1652, !1653}
!1650 = !DILocalVariable(name: "self", scope: !1651, file: !1590, line: 234, type: !210, align: 8)
!1651 = !DILexicalBlockFile(scope: !1645, file: !1590, discriminator: 0)
!1652 = !DILocalVariable(name: "dest", scope: !1651, file: !1590, line: 234, type: !228, align: 8)
!1653 = !DILocalVariable(name: "count", scope: !1651, file: !1590, line: 234, type: !9, align: 8)
!1654 = !DILocation(line: 234, column: 17, scope: !1600)
!1655 = !DILocation(line: 229, column: 47, scope: !1589)
!1656 = !DILocalVariable(name: "self", scope: !1657, file: !1590, line: 229, type: !149, align: 8)
!1657 = !DILexicalBlockFile(scope: !1658, file: !1590, discriminator: 0)
!1658 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17haff7b293a75a5288E", scope: !434, file: !433, line: 129, type: !1659, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1661)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!9, !149}
!1661 = !{!1656}
!1662 = !DILocation(line: 229, column: 47, scope: !1657, inlinedAt: !1655)
!1663 = !DILocation(line: 238, column: 9, scope: !1589)
!1664 = !DILocalVariable(name: "self", scope: !1665, file: !1590, line: 234, type: !149, align: 8)
!1665 = !DILexicalBlockFile(scope: !1666, file: !1590, discriminator: 0)
!1666 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h3efe064128de42beE", scope: !434, file: !433, line: 476, type: !1667, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1669)
!1667 = !DISubroutineType(types: !1668)
!1668 = !{!210, !149}
!1669 = !{!1664}
!1670 = !DILocation(line: 234, column: 17, scope: !1665, inlinedAt: !1654)
!1671 = !DILocation(line: 234, column: 17, scope: !1651, inlinedAt: !1654)
!1672 = !DILocation(line: 234, column: 51, scope: !1600)
!1673 = !DILocation(line: 234, column: 67, scope: !1600)
!1674 = !DILocalVariable(name: "self", scope: !1675, file: !1590, line: 234, type: !149, align: 8)
!1675 = !DILexicalBlockFile(scope: !1676, file: !1590, discriminator: 0)
!1676 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17haff7b293a75a5288E", scope: !434, file: !433, line: 129, type: !1659, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1677)
!1677 = !{!1674}
!1678 = !DILocation(line: 234, column: 67, scope: !1675, inlinedAt: !1673)
!1679 = !DILocation(line: 234, column: 17, scope: !1632, inlinedAt: !1644)
!1680 = !DILocation(line: 235, column: 17, scope: !1600)
!1681 = !DILocalVariable(name: "self", scope: !1682, file: !1590, line: 235, type: !1686, align: 8)
!1682 = !DILexicalBlockFile(scope: !1683, file: !1590, discriminator: 0)
!1683 = distinct !DISubprogram(name: "set_len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hd61c7185c8f7ebffE", scope: !303, file: !1607, line: 1301, type: !1684, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !314, retainedNodes: !1687)
!1684 = !DISubroutineType(types: !1685)
!1685 = !{null, !1686, !9}
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !303, size: 64, align: 64, dwarfAddressSpace: 0)
!1687 = !{!1681, !1688}
!1688 = !DILocalVariable(name: "new_len", scope: !1682, file: !1590, line: 235, type: !9, align: 8)
!1689 = !DILocation(line: 235, column: 17, scope: !1682, inlinedAt: !1680)
!1690 = !DILocation(line: 235, column: 27, scope: !1600)
!1691 = !DILocalVariable(name: "self", scope: !1692, file: !1590, line: 235, type: !149, align: 8)
!1692 = !DILexicalBlockFile(scope: !1693, file: !1590, discriminator: 0)
!1693 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17haff7b293a75a5288E", scope: !434, file: !433, line: 129, type: !1659, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1694)
!1694 = !{!1691}
!1695 = !DILocation(line: 235, column: 27, scope: !1692, inlinedAt: !1690)
!1696 = !DILocation(line: 238, column: 10, scope: !1589)
!1697 = !DILocation(line: 228, column: 9, scope: !1589)
!1698 = distinct !DISubprogram(name: "as_ref<str, str>", linkageName: "_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h070ed05afd8b3047E", scope: !1699, file: !1559, line: 491, type: !1700, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1704, retainedNodes: !1702)
!1699 = !DINamespace(name: "{impl#0}", scope: !1254)
!1700 = !DISubroutineType(types: !1701)
!1701 = !{!168, !655}
!1702 = !{!1703}
!1703 = !DILocalVariable(name: "self", arg: 1, scope: !1698, file: !1559, line: 491, type: !655)
!1704 = !{!28, !1705}
!1705 = !DITemplateTypeParameter(name: "U", type: !29)
!1706 = !DILocation(line: 491, column: 15, scope: !1698)
!1707 = !DILocation(line: 492, column: 33, scope: !1698)
!1708 = !DILocation(line: 492, column: 9, scope: !1698)
!1709 = !DILocation(line: 493, column: 6, scope: !1698)
!1710 = distinct !DISubprogram(name: "as_ref", linkageName: "_ZN55_$LT$str$u20$as$u20$core..convert..AsRef$LT$str$GT$$GT$6as_ref17h1d480eb17f735610E", scope: !1711, file: !1559, line: 630, type: !1712, scopeLine: 630, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !1714)
!1711 = !DINamespace(name: "{impl#10}", scope: !1254)
!1712 = !DISubroutineType(types: !1713)
!1713 = !{!168, !168}
!1714 = !{!1715}
!1715 = !DILocalVariable(name: "self", arg: 1, scope: !1710, file: !1559, line: 630, type: !168)
!1716 = !DILocation(line: 630, column: 15, scope: !1710)
!1717 = !DILocation(line: 632, column: 6, scope: !1710)
!1718 = distinct !DISubprogram(name: "new<&str>", linkageName: "_ZN5alloc3ffi5c_str7CString3new17h0cecf027ce58c664E", scope: !937, file: !1719, line: 261, type: !1720, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !644, retainedNodes: !1722)
!1719 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/ffi/c_str.rs", directory: "", checksumkind: CSK_MD5, checksum: "6e5500bcb59fd49c7b9dab08f5bff02d")
!1720 = !DISubroutineType(types: !1721)
!1721 = !{!929, !168}
!1722 = !{!1723}
!1723 = !DILocalVariable(name: "t", arg: 1, scope: !1718, file: !1719, line: 261, type: !168)
!1724 = !DILocation(line: 261, column: 34, scope: !1718)
!1725 = !DILocation(line: 316, column: 9, scope: !1718)
!1726 = !DILocation(line: 317, column: 6, scope: !1718)
!1727 = distinct !DISubprogram(name: "format", linkageName: "_ZN5alloc3fmt6format17heb80f0ac00635400E", scope: !1463, file: !1728, line: 608, type: !1729, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !1731)
!1728 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/fmt.rs", directory: "", checksumkind: CSK_MD5, checksum: "5cf4c81759cfd6af80611f9a04f1c150")
!1729 = !DISubroutineType(types: !1730)
!1730 = !{!300, !536}
!1731 = !{!1732}
!1732 = !DILocalVariable(name: "args", arg: 1, scope: !1727, file: !1728, line: 608, type: !536)
!1733 = !DILocation(line: 608, column: 15, scope: !1727)
!1734 = !DILocation(line: 616, column: 5, scope: !1727)
!1735 = !DILocation(line: 616, column: 31, scope: !1727)
!1736 = !DILocation(line: 617, column: 2, scope: !1727)
!1737 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc3fmt6format28_$u7b$$u7b$closure$u7d$$u7d$17ha9d3c5d1098fc22eE", scope: !1462, file: !1728, line: 616, type: !1738, scopeLine: 616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !1740)
!1738 = !DISubroutineType(types: !1739)
!1739 = !{!300, !1461}
!1740 = !{!1741}
!1741 = !DILocalVariable(name: "args", scope: !1737, file: !1728, line: 608, type: !536, align: 8)
!1742 = !DILocation(line: 608, column: 15, scope: !1737)
!1743 = !DILocation(line: 616, column: 47, scope: !1737)
!1744 = !DILocation(line: 616, column: 34, scope: !1737)
!1745 = !DILocation(line: 616, column: 33, scope: !1737)
!1746 = distinct !DISubprogram(name: "to_owned", linkageName: "_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h0448ba9e8f2e7d08E", scope: !329, file: !328, line: 226, type: !298, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !1747)
!1747 = !{!1748}
!1748 = !DILocalVariable(name: "self", arg: 1, scope: !1746, file: !328, line: 226, type: !168)
!1749 = !DILocation(line: 226, column: 17, scope: !1746)
!1750 = !DILocalVariable(name: "bytes", scope: !1751, file: !328, line: 227, type: !303, align: 8)
!1751 = !DILexicalBlockFile(scope: !1752, file: !328, discriminator: 0)
!1752 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN5alloc6string6String19from_utf8_unchecked17h29eca7c03265a7f5E", scope: !300, file: !295, line: 844, type: !322, scopeLine: 844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !1753)
!1753 = !{!1750}
!1754 = !DILocation(line: 227, column: 18, scope: !1751, inlinedAt: !1755)
!1755 = !DILocation(line: 227, column: 18, scope: !1746)
!1756 = !DILocation(line: 227, column: 46, scope: !1746)
!1757 = !DILocalVariable(name: "self", scope: !1758, file: !328, line: 227, type: !168, align: 8)
!1758 = !DILexicalBlockFile(scope: !1759, file: !328, discriminator: 0)
!1759 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !347, file: !346, line: 323, type: !348, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !1760)
!1760 = !{!1757}
!1761 = !DILocation(line: 227, column: 46, scope: !1758, inlinedAt: !1756)
!1762 = !DILocation(line: 228, column: 6, scope: !1746)
!1763 = distinct !DISubprogram(name: "as_mut_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h34c25918ba95f615E", scope: !303, file: !1607, line: 1204, type: !1764, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !314, retainedNodes: !1766)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!228, !1686}
!1766 = !{!1767, !1768}
!1767 = !DILocalVariable(name: "self", arg: 1, scope: !1763, file: !1607, line: 1204, type: !1686)
!1768 = !DILocalVariable(name: "ptr", scope: !1769, file: !1607, line: 1207, type: !228, align: 8)
!1769 = distinct !DILexicalBlock(scope: !1763, file: !1607, line: 1207, column: 9)
!1770 = !DILocation(line: 1204, column: 23, scope: !1763)
!1771 = !DILocalVariable(name: "metadata", scope: !1772, file: !1607, line: 1209, type: !7, align: 1)
!1772 = !DILexicalBlockFile(scope: !1773, file: !1607, discriminator: 0)
!1773 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h1040edf79125640dE", scope: !1046, file: !1045, line: 127, type: !1047, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1774)
!1774 = !{!1775, !1771}
!1775 = !DILocalVariable(name: "data_address", scope: !1772, file: !1607, line: 1209, type: !1049, align: 8)
!1776 = !DILocation(line: 1209, column: 21, scope: !1772, inlinedAt: !1777)
!1777 = !DILocation(line: 668, column: 5, scope: !1778, inlinedAt: !1779)
!1778 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hbd0b2ee3da70add7E", scope: !204, file: !707, line: 667, type: !1055, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !26)
!1779 = !DILocation(line: 38, column: 41, scope: !1780, inlinedAt: !1784)
!1780 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hcb734016cf9c5334E", scope: !1060, file: !1059, line: 35, type: !1062, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1781)
!1781 = !{!1782}
!1782 = !DILocalVariable(name: "self", scope: !1783, file: !1607, line: 1209, type: !228, align: 8)
!1783 = !DILexicalBlockFile(scope: !1780, file: !1607, discriminator: 0)
!1784 = !DILocation(line: 1209, column: 21, scope: !1769)
!1785 = !DILocation(line: 1207, column: 19, scope: !1763)
!1786 = !DILocalVariable(name: "self", scope: !1787, file: !1607, line: 1207, type: !1791, align: 8)
!1787 = !DILexicalBlockFile(scope: !1788, file: !1607, discriminator: 0)
!1788 = distinct !DISubprogram(name: "ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hf284f0f165756554E", scope: !307, file: !1617, line: 223, type: !1789, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !314, retainedNodes: !1792)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{!228, !1791}
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !307, size: 64, align: 64, dwarfAddressSpace: 0)
!1792 = !{!1786}
!1793 = !DILocation(line: 1207, column: 19, scope: !1787, inlinedAt: !1785)
!1794 = !DILocalVariable(name: "self", scope: !1795, file: !1607, line: 1207, type: !211, align: 8)
!1795 = !DILexicalBlockFile(scope: !1796, file: !1607, discriminator: 0)
!1796 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf2bd8cc2aef2efdeE", scope: !211, file: !225, line: 103, type: !226, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1797)
!1797 = !{!1794}
!1798 = !DILocation(line: 1207, column: 19, scope: !1795, inlinedAt: !1799)
!1799 = !DILocation(line: 224, column: 9, scope: !1788, inlinedAt: !1785)
!1800 = !DILocalVariable(name: "self", scope: !1801, file: !1607, line: 1207, type: !207, align: 8)
!1801 = !DILexicalBlockFile(scope: !1802, file: !1607, discriminator: 0)
!1802 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hed9bdb025f33c0c7E", scope: !207, file: !201, line: 330, type: !233, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1803)
!1803 = !{!1800}
!1804 = !DILocation(line: 1207, column: 19, scope: !1801, inlinedAt: !1805)
!1805 = !DILocation(line: 104, column: 9, scope: !1796, inlinedAt: !1799)
!1806 = !DILocation(line: 1207, column: 13, scope: !1769)
!1807 = !DILocation(line: 1209, column: 21, scope: !1783, inlinedAt: !1784)
!1808 = !DILocalVariable(name: "self", scope: !1809, file: !1607, line: 1209, type: !228, align: 8)
!1809 = !DILexicalBlockFile(scope: !1810, file: !1607, discriminator: 0)
!1810 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h8e55f4d1e8e5134dE", scope: !1060, file: !1059, line: 707, type: !1072, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1811)
!1811 = !{!1808, !1812}
!1812 = !DILocalVariable(name: "other", scope: !1809, file: !1607, line: 1209, type: !228, align: 8)
!1813 = !DILocation(line: 1209, column: 21, scope: !1809, inlinedAt: !1814)
!1814 = !DILocation(line: 38, column: 9, scope: !1780, inlinedAt: !1784)
!1815 = !DILocation(line: 1209, column: 21, scope: !1816, inlinedAt: !1820)
!1816 = !DILexicalBlockFile(scope: !1817, file: !1607, discriminator: 0)
!1817 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h4ddd678888f3e56aE", scope: !204, file: !707, line: 569, type: !1081, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1085, retainedNodes: !1818)
!1818 = !{!1819}
!1819 = !DILocalVariable(name: "addr", scope: !1816, file: !1607, line: 1209, type: !9, align: 8)
!1820 = !DILocation(line: 668, column: 24, scope: !1778, inlinedAt: !1779)
!1821 = !DILocation(line: 1209, column: 20, scope: !1769)
!1822 = !DILocation(line: 1209, column: 13, scope: !1769)
!1823 = !DILocation(line: 1212, column: 6, scope: !1763)
!1824 = distinct !DISubprogram(name: "as_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf5c71e8a33b2e895E", scope: !303, file: !1607, line: 1167, type: !1825, scopeLine: 1167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !314, retainedNodes: !1828)
!1825 = !DISubroutineType(types: !1826)
!1826 = !{!210, !1827}
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !303, size: 64, align: 64, dwarfAddressSpace: 0)
!1828 = !{!1829, !1830}
!1829 = !DILocalVariable(name: "self", arg: 1, scope: !1824, file: !1607, line: 1167, type: !1827)
!1830 = !DILocalVariable(name: "ptr", scope: !1831, file: !1607, line: 1170, type: !228, align: 8)
!1831 = distinct !DILexicalBlock(scope: !1824, file: !1607, line: 1170, column: 9)
!1832 = !DILocation(line: 1167, column: 19, scope: !1824)
!1833 = !DILocalVariable(name: "metadata", scope: !1834, file: !1607, line: 1172, type: !7, align: 1)
!1834 = !DILexicalBlockFile(scope: !1835, file: !1607, discriminator: 0)
!1835 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h1040edf79125640dE", scope: !1046, file: !1045, line: 127, type: !1047, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1836)
!1836 = !{!1837, !1833}
!1837 = !DILocalVariable(name: "data_address", scope: !1834, file: !1607, line: 1172, type: !1049, align: 8)
!1838 = !DILocation(line: 1172, column: 21, scope: !1834, inlinedAt: !1839)
!1839 = !DILocation(line: 668, column: 5, scope: !1840, inlinedAt: !1841)
!1840 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hbd0b2ee3da70add7E", scope: !204, file: !707, line: 667, type: !1055, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !26)
!1841 = !DILocation(line: 38, column: 41, scope: !1842, inlinedAt: !1846)
!1842 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hcb734016cf9c5334E", scope: !1060, file: !1059, line: 35, type: !1062, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1843)
!1843 = !{!1844}
!1844 = !DILocalVariable(name: "self", scope: !1845, file: !1607, line: 1172, type: !228, align: 8)
!1845 = !DILexicalBlockFile(scope: !1842, file: !1607, discriminator: 0)
!1846 = !DILocation(line: 1172, column: 21, scope: !1831)
!1847 = !DILocation(line: 1170, column: 19, scope: !1824)
!1848 = !DILocalVariable(name: "self", scope: !1849, file: !1607, line: 1170, type: !1791, align: 8)
!1849 = !DILexicalBlockFile(scope: !1850, file: !1607, discriminator: 0)
!1850 = distinct !DISubprogram(name: "ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hf284f0f165756554E", scope: !307, file: !1617, line: 223, type: !1789, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !314, retainedNodes: !1851)
!1851 = !{!1848}
!1852 = !DILocation(line: 1170, column: 19, scope: !1849, inlinedAt: !1847)
!1853 = !DILocalVariable(name: "self", scope: !1854, file: !1607, line: 1170, type: !211, align: 8)
!1854 = !DILexicalBlockFile(scope: !1855, file: !1607, discriminator: 0)
!1855 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf2bd8cc2aef2efdeE", scope: !211, file: !225, line: 103, type: !226, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1856)
!1856 = !{!1853}
!1857 = !DILocation(line: 1170, column: 19, scope: !1854, inlinedAt: !1858)
!1858 = !DILocation(line: 224, column: 9, scope: !1850, inlinedAt: !1847)
!1859 = !DILocalVariable(name: "self", scope: !1860, file: !1607, line: 1170, type: !207, align: 8)
!1860 = !DILexicalBlockFile(scope: !1861, file: !1607, discriminator: 0)
!1861 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hed9bdb025f33c0c7E", scope: !207, file: !201, line: 330, type: !233, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1862)
!1862 = !{!1859}
!1863 = !DILocation(line: 1170, column: 19, scope: !1860, inlinedAt: !1864)
!1864 = !DILocation(line: 104, column: 9, scope: !1855, inlinedAt: !1858)
!1865 = !DILocation(line: 1170, column: 13, scope: !1831)
!1866 = !DILocation(line: 1172, column: 21, scope: !1845, inlinedAt: !1846)
!1867 = !DILocalVariable(name: "self", scope: !1868, file: !1607, line: 1172, type: !228, align: 8)
!1868 = !DILexicalBlockFile(scope: !1869, file: !1607, discriminator: 0)
!1869 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h8e55f4d1e8e5134dE", scope: !1060, file: !1059, line: 707, type: !1072, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1870)
!1870 = !{!1867, !1871}
!1871 = !DILocalVariable(name: "other", scope: !1868, file: !1607, line: 1172, type: !228, align: 8)
!1872 = !DILocation(line: 1172, column: 21, scope: !1868, inlinedAt: !1873)
!1873 = !DILocation(line: 38, column: 9, scope: !1842, inlinedAt: !1846)
!1874 = !DILocation(line: 1172, column: 21, scope: !1875, inlinedAt: !1879)
!1875 = !DILexicalBlockFile(scope: !1876, file: !1607, discriminator: 0)
!1876 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h4ddd678888f3e56aE", scope: !204, file: !707, line: 569, type: !1081, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1085, retainedNodes: !1877)
!1877 = !{!1878}
!1878 = !DILocalVariable(name: "addr", scope: !1875, file: !1607, line: 1172, type: !9, align: 8)
!1879 = !DILocation(line: 668, column: 24, scope: !1840, inlinedAt: !1841)
!1880 = !DILocation(line: 1172, column: 20, scope: !1831)
!1881 = !DILocation(line: 1172, column: 13, scope: !1831)
!1882 = !DILocation(line: 1175, column: 6, scope: !1824)
!1883 = distinct !DISubprogram(name: "alloc_impl", linkageName: "_ZN5alloc5alloc6Global10alloc_impl17h80dd30419e3b1a23E", scope: !312, file: !1884, line: 172, type: !1885, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !1911)
!1884 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/alloc.rs", directory: "", checksumkind: CSK_MD5, checksum: "b6c7758b12bd6b7f0705d9bc90e671ea")
!1885 = !DISubroutineType(types: !1886)
!1886 = !{!1887, !1910, !1157, !398}
!1887 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", scope: !460, file: !2, size: 128, align: 64, elements: !1888, templateParams: !26, identifier: "326c2eceea8ace7e7c754e4033de99df")
!1888 = !{!1889}
!1889 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1887, file: !2, size: 128, align: 64, elements: !1890, templateParams: !26, identifier: "55535437789a1bb6b6e72f8531454ed7", discriminator: !1909)
!1890 = !{!1891, !1905}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1889, file: !2, baseType: !1892, size: 128, align: 64)
!1892 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1887, file: !2, size: 128, align: 64, elements: !1893, templateParams: !1902, identifier: "ba797c89d5b07ad053fbf7cf4701a55")
!1893 = !{!1894}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1892, file: !2, baseType: !1895, size: 128, align: 64)
!1895 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8]>", scope: !203, file: !2, size: 128, align: 64, elements: !1896, templateParams: !27, identifier: "5fc58ef498feac33c505ded838596228")
!1896 = !{!1897}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1895, file: !2, baseType: !1898, size: 128, align: 64)
!1898 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !2, size: 128, align: 64, elements: !1899, templateParams: !26, identifier: "7b54d414f2f329e57c9aa3e4ca07f4")
!1899 = !{!1900, !1901}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1898, file: !2, baseType: !152, size: 64, align: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1898, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1902 = !{!1903, !1904}
!1903 = !DITemplateTypeParameter(name: "T", type: !1895)
!1904 = !DITemplateTypeParameter(name: "E", type: !1572)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1889, file: !2, baseType: !1906, size: 128, align: 64, extraData: i64 0)
!1906 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1887, file: !2, size: 128, align: 64, elements: !1907, templateParams: !1902, identifier: "136305b53d5a9b78b331b3b0fa91ec26")
!1907 = !{!1908}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1906, file: !2, baseType: !1572, align: 8)
!1909 = !DIDerivedType(tag: DW_TAG_member, scope: !1887, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::alloc::Global", baseType: !312, size: 64, align: 64, dwarfAddressSpace: 0)
!1911 = !{!1912, !1913, !1914, !1915, !1917, !1919, !1921, !1936}
!1912 = !DILocalVariable(name: "self", arg: 1, scope: !1883, file: !1884, line: 172, type: !1910)
!1913 = !DILocalVariable(name: "layout", arg: 2, scope: !1883, file: !1884, line: 172, type: !1157)
!1914 = !DILocalVariable(name: "zeroed", arg: 3, scope: !1883, file: !1884, line: 172, type: !398)
!1915 = !DILocalVariable(name: "size", scope: !1916, file: !1884, line: 176, type: !9, align: 8)
!1916 = distinct !DILexicalBlock(scope: !1883, file: !1884, line: 176, column: 13)
!1917 = !DILocalVariable(name: "raw_ptr", scope: !1918, file: !1884, line: 177, type: !228, align: 8)
!1918 = distinct !DILexicalBlock(scope: !1916, file: !1884, line: 177, column: 17)
!1919 = !DILocalVariable(name: "ptr", scope: !1920, file: !1884, line: 178, type: !207, align: 8)
!1920 = distinct !DILexicalBlock(scope: !1918, file: !1884, line: 178, column: 17)
!1921 = !DILocalVariable(name: "residual", scope: !1922, file: !1884, line: 178, type: !1923, align: 1)
!1922 = distinct !DILexicalBlock(scope: !1918, file: !1884, line: 178, column: 66)
!1923 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::AllocError>", scope: !460, file: !2, align: 8, elements: !1924, templateParams: !26, identifier: "572d358f2a12b97961cfb71e38e53f04")
!1924 = !{!1925}
!1925 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1923, file: !2, align: 8, elements: !1926, templateParams: !26, identifier: "88663002e18d2fe1148d606c86c1d5ff")
!1926 = !{!1927, !1932}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1925, file: !2, baseType: !1928, align: 8)
!1928 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1923, file: !2, align: 8, elements: !1929, templateParams: !1931, identifier: "be577e6defde51b29863ecc8d4e2e22a")
!1929 = !{!1930}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1928, file: !2, baseType: !1253, align: 8)
!1931 = !{!1258, !1904}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1925, file: !2, baseType: !1933, align: 8)
!1933 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1923, file: !2, align: 8, elements: !1934, templateParams: !1931, identifier: "1bce49b0456cc0581bfad8a74808f72")
!1934 = !{!1935}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1933, file: !2, baseType: !1572, align: 8)
!1936 = !DILocalVariable(name: "val", scope: !1937, file: !1884, line: 178, type: !207, align: 8)
!1937 = distinct !DILexicalBlock(scope: !1918, file: !1884, line: 178, column: 27)
!1938 = !DILocation(line: 172, column: 19, scope: !1883)
!1939 = !DILocation(line: 172, column: 26, scope: !1883)
!1940 = !DILocation(line: 172, column: 42, scope: !1883)
!1941 = !DILocalVariable(name: "data", scope: !1942, file: !1884, line: 174, type: !207, align: 8)
!1942 = !DILexicalBlockFile(scope: !1943, file: !1884, discriminator: 0)
!1943 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h3dfc795d7bf8eac0E", scope: !1895, file: !201, line: 487, type: !1944, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !1946)
!1944 = !DISubroutineType(types: !1945)
!1945 = !{!1895, !207, !9}
!1946 = !{!1941, !1947}
!1947 = !DILocalVariable(name: "len", scope: !1942, file: !1884, line: 174, type: !9, align: 8)
!1948 = !DILocation(line: 174, column: 21, scope: !1942, inlinedAt: !1949)
!1949 = !DILocation(line: 174, column: 21, scope: !1883)
!1950 = !DILocation(line: 177, column: 21, scope: !1918)
!1951 = !DILocalVariable(name: "layout", scope: !1952, file: !1884, line: 177, type: !1157, align: 8)
!1952 = distinct !DISubprogram(name: "alloc_zeroed", linkageName: "_ZN5alloc5alloc12alloc_zeroed17hda7b414803212715E", scope: !313, file: !1884, line: 165, type: !1953, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !1955)
!1953 = !DISubroutineType(types: !1954)
!1954 = !{!228, !1157}
!1955 = !{!1951}
!1956 = !DILocation(line: 177, column: 43, scope: !1952, inlinedAt: !1957)
!1957 = !DILocation(line: 177, column: 43, scope: !1916)
!1958 = !DILocalVariable(name: "layout", scope: !1959, file: !1884, line: 177, type: !1157, align: 8)
!1959 = distinct !DISubprogram(name: "alloc", linkageName: "_ZN5alloc5alloc5alloc17h8cf63d10a02a89ddE", scope: !313, file: !1884, line: 94, type: !1953, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !1960)
!1960 = !{!1958}
!1961 = !DILocation(line: 177, column: 73, scope: !1959, inlinedAt: !1962)
!1962 = !DILocation(line: 177, column: 73, scope: !1916)
!1963 = !DILocalVariable(name: "self", scope: !1964, file: !1884, line: 178, type: !1984, align: 8)
!1964 = !DILexicalBlockFile(scope: !1965, file: !1884, discriminator: 0)
!1965 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h94e1cf562a41ff2eE", scope: !1270, file: !1269, line: 2117, type: !1966, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1992, retainedNodes: !1998)
!1966 = !DISubroutineType(types: !1967)
!1967 = !{!1968, !1984}
!1968 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>", scope: !1274, file: !2, size: 64, align: 64, elements: !1969, templateParams: !26, identifier: "7f8c65b25026163a60482c903b940372")
!1969 = !{!1970}
!1970 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1968, file: !2, size: 64, align: 64, elements: !1971, templateParams: !26, identifier: "a5a8c50ac5e6502472acbdda15ae7613", discriminator: !1983)
!1971 = !{!1972, !1979}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !1970, file: !2, baseType: !1973, size: 64, align: 64)
!1973 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !1968, file: !2, size: 64, align: 64, elements: !1974, templateParams: !1976, identifier: "d2ac067f6845ce1e8a08fbb330350406")
!1974 = !{!1975}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1973, file: !2, baseType: !207, size: 64, align: 64)
!1976 = !{!1977, !1978}
!1977 = !DITemplateTypeParameter(name: "B", type: !1923)
!1978 = !DITemplateTypeParameter(name: "C", type: !207)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !1970, file: !2, baseType: !1980, size: 64, align: 64, extraData: i64 0)
!1980 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !1968, file: !2, size: 64, align: 64, elements: !1981, templateParams: !1976, identifier: "81bddfbc89a9f0c5cc1c72e49b9ff534")
!1981 = !{!1982}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1980, file: !2, baseType: !1923, align: 8)
!1983 = !DIDerivedType(tag: DW_TAG_member, scope: !1968, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!1984 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", scope: !460, file: !2, size: 64, align: 64, elements: !1985, templateParams: !26, identifier: "e71566aa277061ca8abc5a83ae5b9729")
!1985 = !{!1986}
!1986 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1984, file: !2, size: 64, align: 64, elements: !1987, templateParams: !26, identifier: "4a74327c407a883ea599f67b3290ba83", discriminator: !1997)
!1987 = !{!1988, !1993}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1986, file: !2, baseType: !1989, size: 64, align: 64)
!1989 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1984, file: !2, size: 64, align: 64, elements: !1990, templateParams: !1992, identifier: "71a196ee6c186d8bac41245f54989593")
!1990 = !{!1991}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1989, file: !2, baseType: !207, size: 64, align: 64)
!1992 = !{!1033, !1904}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1986, file: !2, baseType: !1994, size: 64, align: 64, extraData: i64 0)
!1994 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1984, file: !2, size: 64, align: 64, elements: !1995, templateParams: !1992, identifier: "fc861602d066f2f1f51a40a0537349e6")
!1995 = !{!1996}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1994, file: !2, baseType: !1572, align: 8)
!1997 = !DIDerivedType(tag: DW_TAG_member, scope: !1984, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!1998 = !{!1963, !1999, !2002}
!1999 = !DILocalVariable(name: "v", scope: !2000, file: !1884, line: 178, type: !207, align: 8)
!2000 = !DILexicalBlockFile(scope: !2001, file: !1884, discriminator: 0)
!2001 = distinct !DILexicalBlock(scope: !1965, file: !1269, line: 2119, column: 13)
!2002 = !DILocalVariable(name: "e", scope: !2003, file: !1884, line: 178, type: !1572, align: 1)
!2003 = !DILexicalBlockFile(scope: !2004, file: !1884, discriminator: 0)
!2004 = distinct !DILexicalBlock(scope: !1965, file: !1269, line: 2120, column: 13)
!2005 = !DILocation(line: 178, column: 27, scope: !1964, inlinedAt: !2006)
!2006 = !DILocation(line: 178, column: 27, scope: !1918)
!2007 = !DILocalVariable(name: "self", scope: !2008, file: !1884, line: 178, type: !1026, align: 8)
!2008 = !DILexicalBlockFile(scope: !2009, file: !1884, discriminator: 0)
!2009 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h153689f001c6f2ccE", scope: !1026, file: !1316, line: 1051, type: !2010, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1992, retainedNodes: !2012)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!1984, !1026, !1572}
!2012 = !{!2007, !2013, !2014}
!2013 = !DILocalVariable(name: "err", scope: !2008, file: !1884, line: 178, type: !1572, align: 1)
!2014 = !DILocalVariable(name: "v", scope: !2015, file: !1884, line: 178, type: !207, align: 8)
!2015 = !DILexicalBlockFile(scope: !2016, file: !1884, discriminator: 0)
!2016 = distinct !DILexicalBlock(scope: !2009, file: !1316, line: 1056, column: 13)
!2017 = !DILocation(line: 178, column: 27, scope: !2008, inlinedAt: !2006)
!2018 = !DILocation(line: 178, column: 66, scope: !1922)
!2019 = !DILocalVariable(name: "residual", scope: !2020, file: !1884, line: 178, type: !1923, align: 1)
!2020 = !DILexicalBlockFile(scope: !2021, file: !1884, discriminator: 0)
!2021 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h57214a2602d9c5f9E", scope: !1329, file: !1269, line: 2132, type: !2022, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !2028, retainedNodes: !2024)
!2022 = !DISubroutineType(types: !2023)
!2023 = !{!1887, !1923, !162}
!2024 = !{!2019, !2025}
!2025 = !DILocalVariable(name: "e", scope: !2026, file: !1884, line: 178, type: !1572, align: 1)
!2026 = !DILexicalBlockFile(scope: !2027, file: !1884, discriminator: 0)
!2027 = distinct !DILexicalBlock(scope: !2021, file: !1269, line: 2134, column: 13)
!2028 = !{!1903, !1904, !2029}
!2029 = !DITemplateTypeParameter(name: "F", type: !1572)
!2030 = !DILocation(line: 178, column: 27, scope: !2020, inlinedAt: !2031)
!2031 = !DILocation(line: 178, column: 27, scope: !1922)
!2032 = !DILocalVariable(name: "self", scope: !2033, file: !1884, line: 174, type: !1194, align: 8)
!2033 = !DILexicalBlockFile(scope: !2034, file: !1884, discriminator: 0)
!2034 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17hb22125d388e637b0E", scope: !1194, file: !1193, line: 82, type: !1198, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2035)
!2035 = !{!2032}
!2036 = !DILocation(line: 174, column: 51, scope: !2033, inlinedAt: !2037)
!2037 = !DILocation(line: 131, column: 9, scope: !2038, inlinedAt: !2045)
!2038 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h9c31b47a7d62661aE", scope: !1157, file: !1156, line: 130, type: !2039, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2042)
!2039 = !DISubroutineType(types: !2040)
!2040 = !{!9, !2041}
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::alloc::layout::Layout", baseType: !1157, size: 64, align: 64, dwarfAddressSpace: 0)
!2042 = !{!2043}
!2043 = !DILocalVariable(name: "self", scope: !2044, file: !1884, line: 174, type: !2041, align: 8)
!2044 = !DILexicalBlockFile(scope: !2038, file: !1884, discriminator: 0)
!2045 = !DILocation(line: 205, column: 71, scope: !2046, inlinedAt: !2052)
!2046 = distinct !DISubprogram(name: "dangling", linkageName: "_ZN4core5alloc6layout6Layout8dangling17h69f9c1c8ea164768E", scope: !1157, file: !1156, line: 203, type: !2047, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2049)
!2047 = !DISubroutineType(types: !2048)
!2048 = !{!207, !2041}
!2049 = !{!2050}
!2050 = !DILocalVariable(name: "self", scope: !2051, file: !1884, line: 174, type: !2041, align: 8)
!2051 = !DILexicalBlockFile(scope: !2046, file: !1884, discriminator: 0)
!2052 = !DILocation(line: 174, column: 51, scope: !1883)
!2053 = !DILocalVariable(name: "self", scope: !2054, file: !1884, line: 174, type: !1163, align: 8)
!2054 = !DILexicalBlockFile(scope: !2055, file: !1884, discriminator: 0)
!2055 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h99ed8069ebe58cd6E", scope: !1163, file: !1206, line: 39, type: !1207, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2056)
!2056 = !{!2053}
!2057 = !DILocation(line: 174, column: 51, scope: !2054, inlinedAt: !2037)
!2058 = !DILocalVariable(name: "self", scope: !2059, file: !1884, line: 177, type: !1194, align: 8)
!2059 = !DILexicalBlockFile(scope: !2060, file: !1884, discriminator: 0)
!2060 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17hb22125d388e637b0E", scope: !1194, file: !1193, line: 82, type: !1198, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2061)
!2061 = !{!2058}
!2062 = !DILocation(line: 177, column: 43, scope: !2059, inlinedAt: !2063)
!2063 = !DILocation(line: 131, column: 9, scope: !2064, inlinedAt: !2068)
!2064 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h9c31b47a7d62661aE", scope: !1157, file: !1156, line: 130, type: !2039, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2065)
!2065 = !{!2066}
!2066 = !DILocalVariable(name: "self", scope: !2067, file: !1884, line: 177, type: !2041, align: 8)
!2067 = !DILexicalBlockFile(scope: !2064, file: !1884, discriminator: 0)
!2068 = !DILocation(line: 166, column: 49, scope: !1952, inlinedAt: !1957)
!2069 = !DILocalVariable(name: "self", scope: !2070, file: !1884, line: 177, type: !1163, align: 8)
!2070 = !DILexicalBlockFile(scope: !2071, file: !1884, discriminator: 0)
!2071 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h99ed8069ebe58cd6E", scope: !1163, file: !1206, line: 39, type: !1207, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2072)
!2072 = !{!2069}
!2073 = !DILocation(line: 177, column: 43, scope: !2070, inlinedAt: !2063)
!2074 = !DILocalVariable(name: "self", scope: !2075, file: !1884, line: 177, type: !1194, align: 8)
!2075 = !DILexicalBlockFile(scope: !2076, file: !1884, discriminator: 0)
!2076 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17hb22125d388e637b0E", scope: !1194, file: !1193, line: 82, type: !1198, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2077)
!2077 = !{!2074}
!2078 = !DILocation(line: 177, column: 73, scope: !2075, inlinedAt: !2079)
!2079 = !DILocation(line: 131, column: 9, scope: !2080, inlinedAt: !2084)
!2080 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h9c31b47a7d62661aE", scope: !1157, file: !1156, line: 130, type: !2039, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2081)
!2081 = !{!2082}
!2082 = !DILocalVariable(name: "self", scope: !2083, file: !1884, line: 177, type: !2041, align: 8)
!2083 = !DILexicalBlockFile(scope: !2080, file: !1884, discriminator: 0)
!2084 = !DILocation(line: 95, column: 42, scope: !1959, inlinedAt: !1962)
!2085 = !DILocalVariable(name: "self", scope: !2086, file: !1884, line: 177, type: !1163, align: 8)
!2086 = !DILexicalBlockFile(scope: !2087, file: !1884, discriminator: 0)
!2087 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h99ed8069ebe58cd6E", scope: !1163, file: !1206, line: 39, type: !1207, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2088)
!2088 = !{!2085}
!2089 = !DILocation(line: 177, column: 73, scope: !2086, inlinedAt: !2079)
!2090 = !DILocation(line: 178, column: 27, scope: !2003, inlinedAt: !2006)
!2091 = !DILocation(line: 178, column: 27, scope: !2026, inlinedAt: !2031)
!2092 = !DILocation(line: 173, column: 15, scope: !1883)
!2093 = !DILocalVariable(name: "self", scope: !2094, file: !1884, line: 173, type: !2041, align: 8)
!2094 = !DILexicalBlockFile(scope: !2095, file: !1884, discriminator: 0)
!2095 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h0f790119b9b9ee79E", scope: !1157, file: !1156, line: 120, type: !2039, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2096)
!2096 = !{!2093}
!2097 = !DILocation(line: 173, column: 15, scope: !2094, inlinedAt: !2092)
!2098 = !DILocation(line: 173, column: 9, scope: !1883)
!2099 = !DILocation(line: 174, column: 51, scope: !2051, inlinedAt: !2052)
!2100 = !DILocation(line: 174, column: 51, scope: !2044, inlinedAt: !2045)
!2101 = !DILocalVariable(name: "n", scope: !2102, file: !1884, line: 174, type: !9, align: 8)
!2102 = !DILexicalBlockFile(scope: !2103, file: !1884, discriminator: 0)
!2103 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h5f31a20d31332a6bE", scope: !1194, file: !1193, line: 56, type: !1215, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2104)
!2104 = !{!2101, !2105}
!2105 = !DILocalVariable(name: "runtime", scope: !2106, file: !1884, line: 174, type: !1221, align: 8)
!2106 = !DILexicalBlockFile(scope: !2107, file: !1884, discriminator: 0)
!2107 = distinct !DILexicalBlock(scope: !2103, file: !356, line: 2336, column: 13)
!2108 = !DILocation(line: 174, column: 51, scope: !2102, inlinedAt: !2109)
!2109 = !DILocation(line: 41, column: 18, scope: !2055, inlinedAt: !2037)
!2110 = !DILocalVariable(name: "addr", scope: !2111, file: !1884, line: 174, type: !9, align: 8)
!2111 = !DILexicalBlockFile(scope: !2112, file: !1884, discriminator: 0)
!2112 = distinct !DISubprogram(name: "invalid_mut<u8>", linkageName: "_ZN4core3ptr11invalid_mut17h94279fd2ab17d968E", scope: !204, file: !707, line: 569, type: !2113, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2115)
!2113 = !DISubroutineType(types: !2114)
!2114 = !{!228, !9}
!2115 = !{!2110}
!2116 = !DILocation(line: 174, column: 51, scope: !2111, inlinedAt: !2117)
!2117 = !DILocation(line: 205, column: 41, scope: !2046, inlinedAt: !2052)
!2118 = !DILocalVariable(name: "ptr", scope: !2119, file: !1884, line: 174, type: !228, align: 8)
!2119 = !DILexicalBlockFile(scope: !2120, file: !1884, discriminator: 0)
!2120 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hcde0d87aaafdc539E", scope: !207, file: !201, line: 196, type: !240, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2121)
!2121 = !{!2118}
!2122 = !DILocation(line: 174, column: 51, scope: !2119, inlinedAt: !2123)
!2123 = !DILocation(line: 205, column: 18, scope: !2046, inlinedAt: !2052)
!2124 = !DILocation(line: 176, column: 13, scope: !1883)
!2125 = !DILocation(line: 176, column: 13, scope: !1916)
!2126 = !DILocation(line: 177, column: 34, scope: !1916)
!2127 = !DILocation(line: 177, column: 79, scope: !1916)
!2128 = !DILocalVariable(name: "self", scope: !2129, file: !1884, line: 177, type: !2041, align: 8)
!2129 = !DILexicalBlockFile(scope: !2130, file: !1884, discriminator: 0)
!2130 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h0f790119b9b9ee79E", scope: !1157, file: !1156, line: 120, type: !2039, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2131)
!2131 = !{!2128}
!2132 = !DILocation(line: 177, column: 73, scope: !2129, inlinedAt: !2133)
!2133 = !DILocation(line: 95, column: 27, scope: !1959, inlinedAt: !1962)
!2134 = !DILocation(line: 177, column: 73, scope: !2083, inlinedAt: !2084)
!2135 = !DILocalVariable(name: "n", scope: !2136, file: !1884, line: 177, type: !9, align: 8)
!2136 = !DILexicalBlockFile(scope: !2137, file: !1884, discriminator: 0)
!2137 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h5f31a20d31332a6bE", scope: !1194, file: !1193, line: 56, type: !1215, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2138)
!2138 = !{!2135, !2139}
!2139 = !DILocalVariable(name: "runtime", scope: !2140, file: !1884, line: 177, type: !1221, align: 8)
!2140 = !DILexicalBlockFile(scope: !2141, file: !1884, discriminator: 0)
!2141 = distinct !DILexicalBlock(scope: !2137, file: !356, line: 2336, column: 13)
!2142 = !DILocation(line: 177, column: 73, scope: !2136, inlinedAt: !2143)
!2143 = !DILocation(line: 41, column: 18, scope: !2087, inlinedAt: !2079)
!2144 = !DILocation(line: 177, column: 56, scope: !1916)
!2145 = !DILocalVariable(name: "self", scope: !2146, file: !1884, line: 177, type: !2041, align: 8)
!2146 = !DILexicalBlockFile(scope: !2147, file: !1884, discriminator: 0)
!2147 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h0f790119b9b9ee79E", scope: !1157, file: !1156, line: 120, type: !2039, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2148)
!2148 = !{!2145}
!2149 = !DILocation(line: 177, column: 43, scope: !2146, inlinedAt: !2150)
!2150 = !DILocation(line: 166, column: 34, scope: !1952, inlinedAt: !1957)
!2151 = !DILocation(line: 177, column: 43, scope: !2067, inlinedAt: !2068)
!2152 = !DILocalVariable(name: "n", scope: !2153, file: !1884, line: 177, type: !9, align: 8)
!2153 = !DILexicalBlockFile(scope: !2154, file: !1884, discriminator: 0)
!2154 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h5f31a20d31332a6bE", scope: !1194, file: !1193, line: 56, type: !1215, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2155)
!2155 = !{!2152, !2156}
!2156 = !DILocalVariable(name: "runtime", scope: !2157, file: !1884, line: 177, type: !1221, align: 8)
!2157 = !DILexicalBlockFile(scope: !2158, file: !1884, discriminator: 0)
!2158 = distinct !DILexicalBlock(scope: !2154, file: !356, line: 2336, column: 13)
!2159 = !DILocation(line: 177, column: 43, scope: !2153, inlinedAt: !2160)
!2160 = !DILocation(line: 41, column: 18, scope: !2071, inlinedAt: !2063)
!2161 = !DILocation(line: 177, column: 31, scope: !1916)
!2162 = !DILocation(line: 178, column: 40, scope: !1918)
!2163 = !DILocation(line: 178, column: 27, scope: !2015, inlinedAt: !2006)
!2164 = !DILocation(line: 178, column: 27, scope: !2000, inlinedAt: !2006)
!2165 = !DILocation(line: 178, column: 27, scope: !1937)
!2166 = !DILocation(line: 178, column: 21, scope: !1920)
!2167 = !DILocation(line: 179, column: 50, scope: !1920)
!2168 = !DILocalVariable(name: "data", scope: !2169, file: !1884, line: 179, type: !207, align: 8)
!2169 = !DILexicalBlockFile(scope: !2170, file: !1884, discriminator: 0)
!2170 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h3dfc795d7bf8eac0E", scope: !1895, file: !201, line: 487, type: !1944, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2171)
!2171 = !{!2168, !2172}
!2172 = !DILocalVariable(name: "len", scope: !2169, file: !1884, line: 179, type: !9, align: 8)
!2173 = !DILocation(line: 179, column: 20, scope: !2169, inlinedAt: !2174)
!2174 = !DILocation(line: 179, column: 20, scope: !1920)
!2175 = !DILocation(line: 179, column: 55, scope: !1920)
!2176 = !DILocalVariable(name: "self", scope: !2177, file: !1884, line: 179, type: !207, align: 8)
!2177 = !DILexicalBlockFile(scope: !2178, file: !1884, discriminator: 0)
!2178 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hed9bdb025f33c0c7E", scope: !207, file: !201, line: 330, type: !233, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2179)
!2179 = !{!2176}
!2180 = !DILocation(line: 179, column: 20, scope: !2177, inlinedAt: !2181)
!2181 = !DILocation(line: 489, column: 70, scope: !2170, inlinedAt: !2174)
!2182 = !DILocalVariable(name: "data", scope: !2183, file: !1884, line: 179, type: !228, align: 8)
!2183 = !DILexicalBlockFile(scope: !2184, file: !1884, discriminator: 0)
!2184 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h1d40c9e8453759e2E", scope: !204, file: !707, line: 727, type: !2185, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2191)
!2185 = !DISubroutineType(types: !2186)
!2186 = !{!2187, !228, !9}
!2187 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [u8]", file: !2, size: 128, align: 64, elements: !2188, templateParams: !26, identifier: "2081d302591cc0e6b89f57ab75a79c1e")
!2188 = !{!2189, !2190}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2187, file: !2, baseType: !152, size: 64, align: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2187, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2191 = !{!2182, !2192}
!2192 = !DILocalVariable(name: "len", scope: !2183, file: !1884, line: 179, type: !9, align: 8)
!2193 = !DILocation(line: 179, column: 20, scope: !2183, inlinedAt: !2194)
!2194 = !DILocation(line: 489, column: 38, scope: !2170, inlinedAt: !2174)
!2195 = !DILocalVariable(name: "self", scope: !2196, file: !1884, line: 179, type: !228, align: 8)
!2196 = !DILexicalBlockFile(scope: !2197, file: !1884, discriminator: 0)
!2197 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h82ccaa95e77f183eE", scope: !1060, file: !1059, line: 45, type: !2198, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !2201, retainedNodes: !2200)
!2198 = !DISubroutineType(types: !2199)
!2199 = !{!1049, !228}
!2200 = !{!2195}
!2201 = !{!28, !2202}
!2202 = !DITemplateTypeParameter(name: "U", type: !7)
!2203 = !DILocation(line: 179, column: 20, scope: !2196, inlinedAt: !2204)
!2204 = !DILocation(line: 728, column: 24, scope: !2184, inlinedAt: !2194)
!2205 = !DILocalVariable(name: "data_address", scope: !2206, file: !1884, line: 179, type: !1049, align: 8)
!2206 = !DILexicalBlockFile(scope: !2207, file: !1884, discriminator: 0)
!2207 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h24d5d8ed65e6d977E", scope: !1046, file: !1045, line: 127, type: !2208, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2210)
!2208 = !DISubroutineType(types: !2209)
!2209 = !{!2187, !1049, !9}
!2210 = !{!2205, !2211}
!2211 = !DILocalVariable(name: "metadata", scope: !2206, file: !1884, line: 179, type: !9, align: 8)
!2212 = !DILocation(line: 179, column: 20, scope: !2206, inlinedAt: !2213)
!2213 = !DILocation(line: 728, column: 5, scope: !2184, inlinedAt: !2194)
!2214 = !DILocalVariable(name: "ptr", scope: !2215, file: !1884, line: 179, type: !2187, align: 8)
!2215 = !DILexicalBlockFile(scope: !2216, file: !1884, discriminator: 0)
!2216 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hc83c7fd4c1e0c80aE", scope: !1895, file: !201, line: 196, type: !2217, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2219)
!2217 = !DISubroutineType(types: !2218)
!2218 = !{!1895, !2187}
!2219 = !{!2214}
!2220 = !DILocation(line: 179, column: 20, scope: !2215, inlinedAt: !2221)
!2221 = !DILocation(line: 489, column: 18, scope: !2170, inlinedAt: !2174)
!2222 = !DILocation(line: 179, column: 17, scope: !1920)
!2223 = !DILocation(line: 180, column: 13, scope: !1883)
!2224 = !DILocation(line: 182, column: 6, scope: !1883)
!2225 = !DILocalVariable(name: "self", scope: !2226, file: !1884, line: 174, type: !207, align: 8)
!2226 = !DILexicalBlockFile(scope: !2227, file: !1884, discriminator: 0)
!2227 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hed9bdb025f33c0c7E", scope: !207, file: !201, line: 330, type: !233, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2228)
!2228 = !{!2225}
!2229 = !DILocation(line: 174, column: 21, scope: !2226, inlinedAt: !2230)
!2230 = !DILocation(line: 489, column: 70, scope: !1943, inlinedAt: !1949)
!2231 = !DILocalVariable(name: "data", scope: !2232, file: !1884, line: 174, type: !228, align: 8)
!2232 = !DILexicalBlockFile(scope: !2233, file: !1884, discriminator: 0)
!2233 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h1d40c9e8453759e2E", scope: !204, file: !707, line: 727, type: !2185, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2234)
!2234 = !{!2231, !2235}
!2235 = !DILocalVariable(name: "len", scope: !2232, file: !1884, line: 174, type: !9, align: 8)
!2236 = !DILocation(line: 174, column: 21, scope: !2232, inlinedAt: !2237)
!2237 = !DILocation(line: 489, column: 38, scope: !1943, inlinedAt: !1949)
!2238 = !DILocalVariable(name: "self", scope: !2239, file: !1884, line: 174, type: !228, align: 8)
!2239 = !DILexicalBlockFile(scope: !2240, file: !1884, discriminator: 0)
!2240 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h82ccaa95e77f183eE", scope: !1060, file: !1059, line: 45, type: !2198, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !2201, retainedNodes: !2241)
!2241 = !{!2238}
!2242 = !DILocation(line: 174, column: 21, scope: !2239, inlinedAt: !2243)
!2243 = !DILocation(line: 728, column: 24, scope: !2233, inlinedAt: !2237)
!2244 = !DILocalVariable(name: "data_address", scope: !2245, file: !1884, line: 174, type: !1049, align: 8)
!2245 = !DILexicalBlockFile(scope: !2246, file: !1884, discriminator: 0)
!2246 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h24d5d8ed65e6d977E", scope: !1046, file: !1045, line: 127, type: !2208, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2247)
!2247 = !{!2244, !2248}
!2248 = !DILocalVariable(name: "metadata", scope: !2245, file: !1884, line: 174, type: !9, align: 8)
!2249 = !DILocation(line: 174, column: 21, scope: !2245, inlinedAt: !2250)
!2250 = !DILocation(line: 728, column: 5, scope: !2233, inlinedAt: !2237)
!2251 = !DILocalVariable(name: "ptr", scope: !2252, file: !1884, line: 174, type: !2187, align: 8)
!2252 = !DILexicalBlockFile(scope: !2253, file: !1884, discriminator: 0)
!2253 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hc83c7fd4c1e0c80aE", scope: !1895, file: !201, line: 196, type: !2217, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2254)
!2254 = !{!2251}
!2255 = !DILocation(line: 174, column: 21, scope: !2252, inlinedAt: !2256)
!2256 = !DILocation(line: 489, column: 18, scope: !1943, inlinedAt: !1949)
!2257 = !DILocation(line: 174, column: 18, scope: !1883)
!2258 = !DILocation(line: 174, column: 72, scope: !1883)
!2259 = distinct !DISubprogram(name: "box_free<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17ha9bd49e80e121074E", scope: !313, file: !1884, line: 340, type: !2260, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !314, retainedNodes: !2267)
!2260 = !DISubroutineType(types: !2261)
!2261 = !{null, !2262, !312}
!2262 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<[u8]>", scope: !212, file: !2, size: 128, align: 64, elements: !2263, templateParams: !27, identifier: "1d2099a8a4c8cae7160ee7e4073563b1")
!2263 = !{!2264, !2265}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2262, file: !2, baseType: !1895, size: 128, align: 64)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !2262, file: !2, baseType: !2266, align: 8)
!2266 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<[u8]>", scope: !217, file: !2, align: 8, elements: !26, templateParams: !27, identifier: "a99a42a9ed7127b2f458504cb45b588")
!2267 = !{!2268, !2269, !2270, !2272, !2274}
!2268 = !DILocalVariable(name: "ptr", arg: 1, scope: !2259, file: !1884, line: 341, type: !2262)
!2269 = !DILocalVariable(name: "alloc", arg: 2, scope: !2259, file: !1884, line: 342, type: !312)
!2270 = !DILocalVariable(name: "size", scope: !2271, file: !1884, line: 345, type: !9, align: 8)
!2271 = distinct !DILexicalBlock(scope: !2259, file: !1884, line: 345, column: 9)
!2272 = !DILocalVariable(name: "align", scope: !2273, file: !1884, line: 346, type: !9, align: 8)
!2273 = distinct !DILexicalBlock(scope: !2271, file: !1884, line: 346, column: 9)
!2274 = !DILocalVariable(name: "layout", scope: !2275, file: !1884, line: 347, type: !1157, align: 8)
!2275 = distinct !DILexicalBlock(scope: !2273, file: !1884, line: 347, column: 9)
!2276 = !DILocation(line: 341, column: 5, scope: !2259)
!2277 = !DILocation(line: 342, column: 5, scope: !2259)
!2278 = !DILocation(line: 347, column: 13, scope: !2275)
!2279 = !DILocalVariable(name: "unique", scope: !2280, file: !1884, line: 348, type: !211, align: 8)
!2280 = !DILexicalBlockFile(scope: !2281, file: !1884, discriminator: 0)
!2281 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17hd5d28fb461c84be2E", scope: !202, file: !201, line: 770, type: !205, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2282)
!2282 = !{!2279}
!2283 = !DILocation(line: 348, column: 26, scope: !2280, inlinedAt: !2284)
!2284 = !DILocation(line: 348, column: 26, scope: !2275)
!2285 = !DILocalVariable(name: "pointer", scope: !2286, file: !1884, line: 348, type: !207, align: 8)
!2286 = !DILexicalBlockFile(scope: !2287, file: !1884, discriminator: 0)
!2287 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h808ef7217bbbee25E", scope: !2288, file: !225, line: 190, type: !2289, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2291)
!2288 = !DINamespace(name: "{impl#11}", scope: !212)
!2289 = !DISubroutineType(types: !2290)
!2290 = !{!211, !207}
!2291 = !{!2285}
!2292 = !DILocation(line: 348, column: 37, scope: !2286, inlinedAt: !2293)
!2293 = !DILocation(line: 137, column: 9, scope: !2294, inlinedAt: !2300)
!2294 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h46cb4baa29439d95E", scope: !2262, file: !225, line: 136, type: !2295, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1704, retainedNodes: !2297)
!2295 = !DISubroutineType(types: !2296)
!2296 = !{!211, !2262}
!2297 = !{!2298}
!2298 = !DILocalVariable(name: "self", scope: !2299, file: !1884, line: 348, type: !2262, align: 8)
!2299 = !DILexicalBlockFile(scope: !2294, file: !1884, discriminator: 0)
!2300 = !DILocation(line: 348, column: 37, scope: !2275)
!2301 = !DILocation(line: 345, column: 32, scope: !2259)
!2302 = !DILocalVariable(name: "self", scope: !2303, file: !1884, line: 345, type: !2307, align: 8)
!2303 = !DILexicalBlockFile(scope: !2304, file: !1884, discriminator: 0)
!2304 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h47f24117cc65453fE", scope: !2262, file: !225, line: 114, type: !2305, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2308)
!2305 = !DISubroutineType(types: !2306)
!2306 = !{!149, !2307}
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<[u8]>", baseType: !2262, size: 64, align: 64, dwarfAddressSpace: 0)
!2308 = !{!2302}
!2309 = !DILocation(line: 345, column: 32, scope: !2303, inlinedAt: !2301)
!2310 = !DILocalVariable(name: "self", scope: !2311, file: !1884, line: 345, type: !2315, align: 8)
!2311 = !DILexicalBlockFile(scope: !2312, file: !1884, discriminator: 0)
!2312 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hffe63d0e13959d51E", scope: !1895, file: !201, line: 378, type: !2313, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2316)
!2313 = !DISubroutineType(types: !2314)
!2314 = !{!149, !2315}
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<[u8]>", baseType: !1895, size: 64, align: 64, dwarfAddressSpace: 0)
!2316 = !{!2310}
!2317 = !DILocation(line: 345, column: 32, scope: !2311, inlinedAt: !2318)
!2318 = !DILocation(line: 117, column: 18, scope: !2304, inlinedAt: !2301)
!2319 = !DILocalVariable(name: "self", scope: !2320, file: !1884, line: 345, type: !1895, align: 8)
!2320 = !DILexicalBlockFile(scope: !2321, file: !1884, discriminator: 0)
!2321 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hde2013d16b8a265aE", scope: !1895, file: !201, line: 330, type: !2322, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2324)
!2322 = !DISubroutineType(types: !2323)
!2323 = !{!2187, !1895}
!2324 = !{!2319}
!2325 = !DILocation(line: 345, column: 32, scope: !2320, inlinedAt: !2326)
!2326 = !DILocation(line: 381, column: 20, scope: !2312, inlinedAt: !2318)
!2327 = !DILocation(line: 345, column: 20, scope: !2259)
!2328 = !DILocation(line: 345, column: 13, scope: !2271)
!2329 = !DILocation(line: 346, column: 38, scope: !2271)
!2330 = !DILocalVariable(name: "self", scope: !2331, file: !1884, line: 346, type: !2307, align: 8)
!2331 = !DILexicalBlockFile(scope: !2332, file: !1884, discriminator: 0)
!2332 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h47f24117cc65453fE", scope: !2262, file: !225, line: 114, type: !2305, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2333)
!2333 = !{!2330}
!2334 = !DILocation(line: 346, column: 38, scope: !2331, inlinedAt: !2329)
!2335 = !DILocalVariable(name: "self", scope: !2336, file: !1884, line: 346, type: !2315, align: 8)
!2336 = !DILexicalBlockFile(scope: !2337, file: !1884, discriminator: 0)
!2337 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hffe63d0e13959d51E", scope: !1895, file: !201, line: 378, type: !2313, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2338)
!2338 = !{!2335}
!2339 = !DILocation(line: 346, column: 38, scope: !2336, inlinedAt: !2340)
!2340 = !DILocation(line: 117, column: 18, scope: !2332, inlinedAt: !2329)
!2341 = !DILocalVariable(name: "self", scope: !2342, file: !1884, line: 346, type: !1895, align: 8)
!2342 = !DILexicalBlockFile(scope: !2343, file: !1884, discriminator: 0)
!2343 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hde2013d16b8a265aE", scope: !1895, file: !201, line: 330, type: !2322, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2344)
!2344 = !{!2341}
!2345 = !DILocation(line: 346, column: 38, scope: !2342, inlinedAt: !2346)
!2346 = !DILocation(line: 381, column: 20, scope: !2337, inlinedAt: !2340)
!2347 = !DILocation(line: 346, column: 21, scope: !2271)
!2348 = !DILocation(line: 346, column: 13, scope: !2273)
!2349 = !DILocation(line: 347, column: 56, scope: !2273)
!2350 = !DILocalVariable(name: "size", scope: !2351, file: !1884, line: 347, type: !9, align: 8)
!2351 = !DILexicalBlockFile(scope: !2352, file: !1884, discriminator: 0)
!2352 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h972ca0f353bedad3E", scope: !1157, file: !1156, line: 110, type: !2353, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2355)
!2353 = !DISubroutineType(types: !2354)
!2354 = !{!1157, !9, !9}
!2355 = !{!2350, !2356}
!2356 = !DILocalVariable(name: "align", scope: !2351, file: !1884, line: 347, type: !9, align: 8)
!2357 = !DILocation(line: 347, column: 22, scope: !2351, inlinedAt: !2358)
!2358 = !DILocation(line: 347, column: 22, scope: !2273)
!2359 = !DILocation(line: 347, column: 62, scope: !2273)
!2360 = !DILocalVariable(name: "align", scope: !2361, file: !1884, line: 347, type: !9, align: 8)
!2361 = !DILexicalBlockFile(scope: !2362, file: !1884, discriminator: 0)
!2362 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h8f8be6852eff3069E", scope: !1163, file: !1206, line: 29, type: !1359, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2363)
!2363 = !{!2360, !2364}
!2364 = !DILocalVariable(name: "runtime", scope: !2365, file: !1884, line: 347, type: !1365, align: 8)
!2365 = !DILexicalBlockFile(scope: !2366, file: !1884, discriminator: 0)
!2366 = distinct !DILexicalBlock(scope: !2362, file: !356, line: 2336, column: 13)
!2367 = !DILocation(line: 347, column: 22, scope: !2361, inlinedAt: !2368)
!2368 = !DILocation(line: 112, column: 40, scope: !2352, inlinedAt: !2358)
!2369 = !DILocation(line: 348, column: 37, scope: !2299, inlinedAt: !2300)
!2370 = !DILocalVariable(name: "self", scope: !2371, file: !1884, line: 348, type: !1895, align: 8)
!2371 = !DILexicalBlockFile(scope: !2372, file: !1884, discriminator: 0)
!2372 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hf01ab53e64a281beE", scope: !1895, file: !201, line: 453, type: !2373, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1704, retainedNodes: !2375)
!2373 = !DISubroutineType(types: !2374)
!2374 = !{!207, !1895}
!2375 = !{!2370}
!2376 = !DILocation(line: 348, column: 37, scope: !2371, inlinedAt: !2377)
!2377 = !DILocation(line: 137, column: 22, scope: !2294, inlinedAt: !2300)
!2378 = !DILocalVariable(name: "self", scope: !2379, file: !1884, line: 348, type: !1895, align: 8)
!2379 = !DILexicalBlockFile(scope: !2380, file: !1884, discriminator: 0)
!2380 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hde2013d16b8a265aE", scope: !1895, file: !201, line: 330, type: !2322, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2381)
!2381 = !{!2378}
!2382 = !DILocation(line: 348, column: 37, scope: !2379, inlinedAt: !2383)
!2383 = !DILocation(line: 455, column: 41, scope: !2372, inlinedAt: !2377)
!2384 = !DILocalVariable(name: "ptr", scope: !2385, file: !1884, line: 348, type: !228, align: 8)
!2385 = !DILexicalBlockFile(scope: !2386, file: !1884, discriminator: 0)
!2386 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hcde0d87aaafdc539E", scope: !207, file: !201, line: 196, type: !240, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2387)
!2387 = !{!2384}
!2388 = !DILocation(line: 348, column: 37, scope: !2385, inlinedAt: !2389)
!2389 = !DILocation(line: 455, column: 18, scope: !2372, inlinedAt: !2377)
!2390 = !DILocalVariable(name: "self", scope: !2391, file: !1884, line: 348, type: !211, align: 8)
!2391 = !DILexicalBlockFile(scope: !2392, file: !1884, discriminator: 0)
!2392 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf2bd8cc2aef2efdeE", scope: !211, file: !225, line: 103, type: !226, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2393)
!2393 = !{!2390}
!2394 = !DILocation(line: 348, column: 26, scope: !2391, inlinedAt: !2395)
!2395 = !DILocation(line: 773, column: 41, scope: !2281, inlinedAt: !2284)
!2396 = !DILocalVariable(name: "self", scope: !2397, file: !1884, line: 348, type: !207, align: 8)
!2397 = !DILexicalBlockFile(scope: !2398, file: !1884, discriminator: 0)
!2398 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hed9bdb025f33c0c7E", scope: !207, file: !201, line: 330, type: !233, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2399)
!2399 = !{!2396}
!2400 = !DILocation(line: 348, column: 26, scope: !2397, inlinedAt: !2401)
!2401 = !DILocation(line: 104, column: 9, scope: !2392, inlinedAt: !2395)
!2402 = !DILocalVariable(name: "ptr", scope: !2403, file: !1884, line: 348, type: !228, align: 8)
!2403 = !DILexicalBlockFile(scope: !2404, file: !1884, discriminator: 0)
!2404 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hcde0d87aaafdc539E", scope: !207, file: !201, line: 196, type: !240, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2405)
!2405 = !{!2402}
!2406 = !DILocation(line: 348, column: 26, scope: !2403, inlinedAt: !2407)
!2407 = !DILocation(line: 773, column: 18, scope: !2281, inlinedAt: !2284)
!2408 = !DILocation(line: 348, column: 50, scope: !2275)
!2409 = !DILocation(line: 348, column: 9, scope: !2275)
!2410 = !DILocation(line: 350, column: 1, scope: !2259)
!2411 = !DILocation(line: 340, column: 1, scope: !2259)
!2412 = !DILocation(line: 350, column: 2, scope: !2259)
!2413 = distinct !DISubprogram(name: "to_owned<u8>", linkageName: "_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17hd771beb52e788fccE", scope: !2414, file: !1590, line: 857, type: !2415, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2417)
!2414 = !DINamespace(name: "{impl#7}", scope: !1593)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{!303, !149}
!2417 = !{!2418}
!2418 = !DILocalVariable(name: "self", arg: 1, scope: !2413, file: !1590, line: 857, type: !149)
!2419 = !DILocation(line: 857, column: 17, scope: !2413)
!2420 = !DILocalVariable(name: "alloc", scope: !2421, file: !1590, line: 858, type: !312, align: 1)
!2421 = distinct !DISubprogram(name: "to_vec_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17hdb2ac1d2f7b92991E", scope: !2422, file: !1590, line: 503, type: !1594, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !314, retainedNodes: !2423)
!2422 = !DINamespace(name: "{impl#0}", scope: !1593)
!2423 = !{!2424, !2420}
!2424 = !DILocalVariable(name: "self", scope: !2421, file: !1590, line: 858, type: !149, align: 8)
!2425 = !DILocation(line: 858, column: 9, scope: !2421, inlinedAt: !2426)
!2426 = !DILocation(line: 483, column: 9, scope: !2427, inlinedAt: !2430)
!2427 = distinct !DISubprogram(name: "to_vec<u8>", linkageName: "_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17hbd1cbc3c5c4c022eE", scope: !2422, file: !1590, line: 479, type: !2415, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2428)
!2428 = !{!2429}
!2429 = !DILocalVariable(name: "self", scope: !2427, file: !1590, line: 858, type: !149, align: 8)
!2430 = !DILocation(line: 858, column: 9, scope: !2413)
!2431 = !DILocalVariable(name: "alloc", scope: !2432, file: !1590, line: 858, type: !312, align: 1)
!2432 = distinct !DISubprogram(name: "to_vec<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc5slice4hack6to_vec17hf69f23d09c38c759E", scope: !1592, file: !1590, line: 177, type: !1594, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !314, retainedNodes: !2433)
!2433 = !{!2434, !2431}
!2434 = !DILocalVariable(name: "s", scope: !2432, file: !1590, line: 858, type: !149, align: 8)
!2435 = !DILocation(line: 858, column: 9, scope: !2432, inlinedAt: !2436)
!2436 = !DILocation(line: 508, column: 9, scope: !2421, inlinedAt: !2426)
!2437 = !DILocation(line: 858, column: 9, scope: !2427, inlinedAt: !2430)
!2438 = !DILocation(line: 859, column: 6, scope: !2413)
!2439 = distinct !DISubprogram(name: "as_str", linkageName: "_ZN5alloc6string6String6as_str17h74b8ff1aa7ae436aE", scope: !300, file: !295, line: 883, type: !2440, scopeLine: 883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2442)
!2440 = !DISubroutineType(types: !2441)
!2441 = !{!168, !512}
!2442 = !{!2443}
!2443 = !DILocalVariable(name: "self", arg: 1, scope: !2439, file: !295, line: 883, type: !512)
!2444 = !DILocation(line: 883, column: 19, scope: !2439)
!2445 = !DILocation(line: 884, column: 9, scope: !2439)
!2446 = !DILocation(line: 885, column: 6, scope: !2439)
!2447 = distinct !DISubprogram(name: "allocate_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hb7853e13fe7466c9E", scope: !307, file: !1617, line: 169, type: !2448, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !314, retainedNodes: !2450)
!2448 = !DISubroutineType(types: !2449)
!2449 = !{!307, !9, !120, !312}
!2450 = !{!2451, !2452, !2453, !2454, !2456, !2458, !2460, !2462}
!2451 = !DILocalVariable(name: "capacity", arg: 1, scope: !2447, file: !1617, line: 169, type: !9)
!2452 = !DILocalVariable(name: "init", arg: 2, scope: !2447, file: !1617, line: 169, type: !120)
!2453 = !DILocalVariable(name: "alloc", arg: 3, scope: !2447, file: !1617, line: 169, type: !312)
!2454 = !DILocalVariable(name: "layout", scope: !2455, file: !1617, line: 176, type: !1157, align: 8)
!2455 = distinct !DILexicalBlock(scope: !2447, file: !1617, line: 176, column: 13)
!2456 = !DILocalVariable(name: "layout", scope: !2457, file: !1617, line: 177, type: !1157, align: 8)
!2457 = distinct !DILexicalBlock(scope: !2447, file: !1617, line: 177, column: 17)
!2458 = !DILocalVariable(name: "result", scope: !2459, file: !1617, line: 184, type: !1887, align: 8)
!2459 = distinct !DILexicalBlock(scope: !2455, file: !1617, line: 184, column: 13)
!2460 = !DILocalVariable(name: "ptr", scope: !2461, file: !1617, line: 188, type: !1895, align: 8)
!2461 = distinct !DILexicalBlock(scope: !2459, file: !1617, line: 188, column: 13)
!2462 = !DILocalVariable(name: "ptr", scope: !2463, file: !1617, line: 189, type: !1895, align: 8)
!2463 = distinct !DILexicalBlock(scope: !2459, file: !1617, line: 189, column: 17)
!2464 = !DILocation(line: 169, column: 20, scope: !2447)
!2465 = !DILocation(line: 169, column: 37, scope: !2447)
!2466 = !DILocation(line: 169, column: 54, scope: !2447)
!2467 = !DILocation(line: 184, column: 17, scope: !2459)
!2468 = !DILocalVariable(name: "self", scope: !2469, file: !1617, line: 197, type: !207, align: 8)
!2469 = !DILexicalBlockFile(scope: !2470, file: !1617, discriminator: 0)
!2470 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hed9bdb025f33c0c7E", scope: !207, file: !201, line: 330, type: !233, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2471)
!2471 = !{!2468}
!2472 = !DILocation(line: 197, column: 53, scope: !2469, inlinedAt: !2473)
!2473 = !DILocation(line: 197, column: 53, scope: !2461)
!2474 = !DILocation(line: 171, column: 12, scope: !2447)
!2475 = !DILocation(line: 171, column: 40, scope: !2447)
!2476 = !DILocation(line: 176, column: 32, scope: !2447)
!2477 = !DILocation(line: 172, column: 26, scope: !2447)
!2478 = !DILocation(line: 172, column: 13, scope: !2447)
!2479 = !DILocation(line: 202, column: 5, scope: !2447)
!2480 = !DILocation(line: 171, column: 9, scope: !2447)
!2481 = !DILocation(line: 202, column: 6, scope: !2447)
!2482 = !DILocation(line: 176, column: 26, scope: !2447)
!2483 = !DILocation(line: 177, column: 20, scope: !2447)
!2484 = !DILocation(line: 177, column: 20, scope: !2457)
!2485 = !DILocation(line: 177, column: 31, scope: !2457)
!2486 = !DILocation(line: 176, column: 17, scope: !2455)
!2487 = !DILocation(line: 180, column: 19, scope: !2488, inlinedAt: !2524)
!2488 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17hd414011b7f666115E", scope: !121, file: !1617, line: 505, type: !2489, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2522)
!2489 = !DISubroutineType(types: !2490)
!2490 = !{!2491, !9}
!2491 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveError>", scope: !460, file: !2, size: 128, align: 64, elements: !2492, templateParams: !26, identifier: "4b89620c7f2c166f553026a950f3f2d2")
!2492 = !{!2493}
!2493 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2491, file: !2, size: 128, align: 64, elements: !2494, templateParams: !26, identifier: "7cb265f2a07c8821328b46cc3c388b7f", discriminator: !2521)
!2494 = !{!2495, !2517}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2493, file: !2, baseType: !2496, size: 128, align: 64, extraData: i64 -9223372036854775807)
!2496 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2491, file: !2, size: 128, align: 64, elements: !2497, templateParams: !2499, identifier: "fdce6ff40bcf3f7ab3b51ba04b7afc44")
!2497 = !{!2498}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2496, file: !2, baseType: !7, align: 8)
!2499 = !{!469, !2500}
!2500 = !DITemplateTypeParameter(name: "E", type: !2501)
!2501 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveError", scope: !2502, file: !2, size: 128, align: 64, elements: !2503, templateParams: !26, identifier: "9329beb58cfce2a468bff9d53d352901")
!2502 = !DINamespace(name: "collections", scope: !122)
!2503 = !{!2504}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !2501, file: !2, baseType: !2505, size: 128, align: 64)
!2505 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveErrorKind", scope: !2502, file: !2, size: 128, align: 64, elements: !2506, templateParams: !26, identifier: "b80f03a2018170445eea4dcb9e8ba251")
!2506 = !{!2507}
!2507 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2505, file: !2, size: 128, align: 64, elements: !2508, templateParams: !26, identifier: "dd437972ee979c0cb5a8f1e81729b7e4", discriminator: !2516)
!2508 = !{!2509, !2511}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "CapacityOverflow", scope: !2507, file: !2, baseType: !2510, size: 128, align: 64, extraData: i64 0)
!2510 = !DICompositeType(tag: DW_TAG_structure_type, name: "CapacityOverflow", scope: !2505, file: !2, size: 128, align: 64, elements: !26, identifier: "9b997f4b8909a73a8576324b89f9b258")
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "AllocError", scope: !2507, file: !2, baseType: !2512, size: 128, align: 64)
!2512 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !2505, file: !2, size: 128, align: 64, elements: !2513, templateParams: !26, identifier: "43ad075de287371ebe4e53de3e5ecf3d")
!2513 = !{!2514, !2515}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !2512, file: !2, baseType: !1157, size: 128, align: 64)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "non_exhaustive", scope: !2512, file: !2, baseType: !7, align: 8)
!2516 = !DIDerivedType(tag: DW_TAG_member, scope: !2505, file: !2, baseType: !54, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2493, file: !2, baseType: !2518, size: 128, align: 64)
!2518 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2491, file: !2, size: 128, align: 64, elements: !2519, templateParams: !2499, identifier: "d84ca0f977a325112ceaab4e30797620")
!2519 = !{!2520}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2518, file: !2, baseType: !2501, size: 128, align: 64)
!2521 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !2, baseType: !54, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!2522 = !{!2523}
!2523 = !DILocalVariable(name: "alloc_size", scope: !2488, file: !1617, line: 180, type: !9, align: 8)
!2524 = !DILocation(line: 180, column: 19, scope: !2455)
!2525 = !{i64 0, i64 -9223372036854775806}
!2526 = !DILocation(line: 180, column: 13, scope: !2455)
!2527 = !DILocation(line: 178, column: 27, scope: !2447)
!2528 = !DILocation(line: 184, column: 32, scope: !2455)
!2529 = !DILocation(line: 184, column: 26, scope: !2455)
!2530 = !DILocation(line: 182, column: 27, scope: !2455)
!2531 = !DILocation(line: 185, column: 45, scope: !2455)
!2532 = !DILocation(line: 186, column: 38, scope: !2455)
!2533 = !DILocation(line: 186, column: 66, scope: !2455)
!2534 = !DILocation(line: 188, column: 29, scope: !2459)
!2535 = !DILocation(line: 188, column: 23, scope: !2459)
!2536 = !DILocation(line: 185, column: 66, scope: !2455)
!2537 = !DILocation(line: 189, column: 20, scope: !2459)
!2538 = !DILocation(line: 189, column: 20, scope: !2463)
!2539 = !DILocation(line: 189, column: 28, scope: !2463)
!2540 = !DILocation(line: 188, column: 17, scope: !2461)
!2541 = !DILocalVariable(name: "self", scope: !2542, file: !1617, line: 197, type: !1895, align: 8)
!2542 = !DILexicalBlockFile(scope: !2543, file: !1617, discriminator: 0)
!2543 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hf01ab53e64a281beE", scope: !1895, file: !201, line: 453, type: !2373, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1704, retainedNodes: !2544)
!2544 = !{!2541}
!2545 = !DILocation(line: 197, column: 53, scope: !2542, inlinedAt: !2473)
!2546 = !DILocalVariable(name: "self", scope: !2547, file: !1617, line: 197, type: !1895, align: 8)
!2547 = !DILexicalBlockFile(scope: !2548, file: !1617, discriminator: 0)
!2548 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hde2013d16b8a265aE", scope: !1895, file: !201, line: 330, type: !2322, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2549)
!2549 = !{!2546}
!2550 = !DILocation(line: 197, column: 53, scope: !2547, inlinedAt: !2551)
!2551 = !DILocation(line: 455, column: 41, scope: !2543, inlinedAt: !2473)
!2552 = !DILocalVariable(name: "ptr", scope: !2553, file: !1617, line: 197, type: !228, align: 8)
!2553 = !DILexicalBlockFile(scope: !2554, file: !1617, discriminator: 0)
!2554 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hcde0d87aaafdc539E", scope: !207, file: !201, line: 196, type: !240, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2555)
!2555 = !{!2552}
!2556 = !DILocation(line: 197, column: 53, scope: !2553, inlinedAt: !2557)
!2557 = !DILocation(line: 455, column: 18, scope: !2543, inlinedAt: !2473)
!2558 = !DILocalVariable(name: "ptr", scope: !2559, file: !1617, line: 197, type: !228, align: 8)
!2559 = !DILexicalBlockFile(scope: !2560, file: !1617, discriminator: 0)
!2560 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hc8de90f48658bcdfE", scope: !211, file: !225, line: 85, type: !2561, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2563)
!2561 = !DISubroutineType(types: !2562)
!2562 = !{!211, !228}
!2563 = !{!2558}
!2564 = !DILocation(line: 197, column: 31, scope: !2559, inlinedAt: !2565)
!2565 = !DILocation(line: 197, column: 31, scope: !2461)
!2566 = !DILocalVariable(name: "ptr", scope: !2567, file: !1617, line: 197, type: !228, align: 8)
!2567 = !DILexicalBlockFile(scope: !2568, file: !1617, discriminator: 0)
!2568 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hcde0d87aaafdc539E", scope: !207, file: !201, line: 196, type: !240, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2569)
!2569 = !{!2566}
!2570 = !DILocation(line: 197, column: 31, scope: !2567, inlinedAt: !2571)
!2571 = !DILocation(line: 87, column: 36, scope: !2560, inlinedAt: !2565)
!2572 = !DILocation(line: 196, column: 13, scope: !2461)
!2573 = !DILocation(line: 190, column: 27, scope: !2459)
!2574 = !DILocation(line: 169, column: 5, scope: !2447)
!2575 = distinct !DISubprogram(name: "current_memory<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hb676db2ab53775bbE", scope: !307, file: !1617, line: 240, type: !2576, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !314, retainedNodes: !2595)
!2576 = !DISubroutineType(types: !2577)
!2577 = !{!2578, !1791}
!2578 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", scope: !20, file: !2, size: 192, align: 64, elements: !2579, templateParams: !26, identifier: "2441bf159aec13ad0ba597f59aeb1a1")
!2579 = !{!2580}
!2580 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2578, file: !2, size: 192, align: 64, elements: !2581, templateParams: !26, identifier: "d785942d6e728cf8ed28d4d1a571b7a3", discriminator: !2594)
!2581 = !{!2582, !2590}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2580, file: !2, baseType: !2583, size: 192, align: 64, extraData: i64 0)
!2583 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2578, file: !2, size: 192, align: 64, elements: !26, templateParams: !2584, identifier: "4d71821a6a04b7dadd5f931d25e98cb2")
!2584 = !{!2585}
!2585 = !DITemplateTypeParameter(name: "T", type: !2586)
!2586 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)", file: !2, size: 192, align: 64, elements: !2587, templateParams: !26, identifier: "c358a41279bc49b48121f0f71b1b3c8")
!2587 = !{!2588, !2589}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2586, file: !2, baseType: !207, size: 64, align: 64)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !2586, file: !2, baseType: !1157, size: 128, align: 64, offset: 64)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2580, file: !2, baseType: !2591, size: 192, align: 64)
!2591 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2578, file: !2, size: 192, align: 64, elements: !2592, templateParams: !2584, identifier: "3a54c5b1a06a194b358330f440d65fe5")
!2592 = !{!2593}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2591, file: !2, baseType: !2586, size: 192, align: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, scope: !2578, file: !2, baseType: !54, size: 64, align: 64, offset: 128, flags: DIFlagArtificial)
!2595 = !{!2596, !2597}
!2596 = !DILocalVariable(name: "self", arg: 1, scope: !2575, file: !1617, line: 240, type: !1791)
!2597 = !DILocalVariable(name: "layout", scope: !2598, file: !1617, line: 247, type: !1157, align: 8)
!2598 = distinct !DILexicalBlock(scope: !2575, file: !1617, line: 247, column: 17)
!2599 = !DILocation(line: 240, column: 23, scope: !2575)
!2600 = !DILocalVariable(name: "self", scope: !2601, file: !1617, line: 247, type: !1168, align: 8)
!2601 = !DILexicalBlockFile(scope: !2602, file: !1617, discriminator: 0)
!2602 = distinct !DISubprogram(name: "unwrap_unchecked<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h5406b6c60a5bee85E", scope: !1168, file: !1269, line: 1520, type: !2603, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1176, retainedNodes: !2605)
!2603 = !DISubroutineType(types: !2604)
!2604 = !{!1157, !1168, !162}
!2605 = !{!2600, !2606}
!2606 = !DILocalVariable(name: "t", scope: !2607, file: !1617, line: 247, type: !1157, align: 8)
!2607 = !DILexicalBlockFile(scope: !2608, file: !1617, discriminator: 0)
!2608 = distinct !DILexicalBlock(scope: !2602, file: !1269, line: 1523, column: 13)
!2609 = !DILocation(line: 247, column: 30, scope: !2601, inlinedAt: !2610)
!2610 = !DILocation(line: 247, column: 30, scope: !2575)
!2611 = !DILocalVariable(name: "pointer", scope: !2612, file: !1617, line: 248, type: !207, align: 8)
!2612 = !DILexicalBlockFile(scope: !2613, file: !1617, discriminator: 0)
!2613 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h808ef7217bbbee25E", scope: !2288, file: !225, line: 190, type: !2289, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2614)
!2614 = !{!2611}
!2615 = !DILocation(line: 248, column: 23, scope: !2612, inlinedAt: !2616)
!2616 = !DILocation(line: 137, column: 9, scope: !2617, inlinedAt: !2623)
!2617 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17haf1b18e4842d8dc9E", scope: !211, file: !225, line: 136, type: !2618, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1704, retainedNodes: !2620)
!2618 = !DISubroutineType(types: !2619)
!2619 = !{!211, !211}
!2620 = !{!2621}
!2621 = !DILocalVariable(name: "self", scope: !2622, file: !1617, line: 248, type: !211, align: 8)
!2622 = !DILexicalBlockFile(scope: !2617, file: !1617, discriminator: 0)
!2623 = !DILocation(line: 248, column: 23, scope: !2598)
!2624 = !DILocation(line: 241, column: 12, scope: !2575)
!2625 = !DILocation(line: 241, column: 40, scope: !2575)
!2626 = !DILocation(line: 247, column: 49, scope: !2575)
!2627 = !DILocation(line: 242, column: 13, scope: !2575)
!2628 = !DILocation(line: 241, column: 9, scope: !2575)
!2629 = !DILocation(line: 251, column: 6, scope: !2575)
!2630 = !DILocation(line: 247, column: 30, scope: !2607, inlinedAt: !2610)
!2631 = !DILocation(line: 247, column: 21, scope: !2598)
!2632 = !DILocation(line: 248, column: 23, scope: !2622, inlinedAt: !2623)
!2633 = !DILocalVariable(name: "self", scope: !2634, file: !1617, line: 248, type: !207, align: 8)
!2634 = !DILexicalBlockFile(scope: !2635, file: !1617, discriminator: 0)
!2635 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hc8edb8d1dded537cE", scope: !207, file: !201, line: 453, type: !2636, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1704, retainedNodes: !2638)
!2636 = !DISubroutineType(types: !2637)
!2637 = !{!207, !207}
!2638 = !{!2633}
!2639 = !DILocation(line: 248, column: 23, scope: !2634, inlinedAt: !2640)
!2640 = !DILocation(line: 137, column: 22, scope: !2617, inlinedAt: !2623)
!2641 = !DILocalVariable(name: "self", scope: !2642, file: !1617, line: 248, type: !207, align: 8)
!2642 = !DILexicalBlockFile(scope: !2643, file: !1617, discriminator: 0)
!2643 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hed9bdb025f33c0c7E", scope: !207, file: !201, line: 330, type: !233, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2644)
!2644 = !{!2641}
!2645 = !DILocation(line: 248, column: 23, scope: !2642, inlinedAt: !2646)
!2646 = !DILocation(line: 455, column: 41, scope: !2635, inlinedAt: !2640)
!2647 = !DILocalVariable(name: "ptr", scope: !2648, file: !1617, line: 248, type: !228, align: 8)
!2648 = !DILexicalBlockFile(scope: !2649, file: !1617, discriminator: 0)
!2649 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hcde0d87aaafdc539E", scope: !207, file: !201, line: 196, type: !240, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2650)
!2650 = !{!2647}
!2651 = !DILocation(line: 248, column: 23, scope: !2648, inlinedAt: !2652)
!2652 = !DILocation(line: 455, column: 18, scope: !2635, inlinedAt: !2640)
!2653 = !DILocation(line: 247, column: 30, scope: !2654, inlinedAt: !2660)
!2654 = !DILexicalBlockFile(scope: !2655, file: !1617, discriminator: 0)
!2655 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h9de22063d05957d4E", scope: !2657, file: !2656, line: 100, type: !2658, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!2656 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/hint.rs", directory: "", checksumkind: CSK_MD5, checksum: "b50bd4586a98539d3cdc821cfaa5e2e7")
!2657 = !DINamespace(name: "hint", scope: !15)
!2658 = !DISubroutineType(types: !2659)
!2659 = !{null}
!2660 = !DILocation(line: 1525, column: 32, scope: !2602, inlinedAt: !2610)
!2661 = !DILocation(line: 248, column: 22, scope: !2598)
!2662 = !DILocation(line: 248, column: 17, scope: !2598)
!2663 = distinct !DISubprogram(name: "new_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h62b6c4e7cf57a6ceE", scope: !307, file: !1617, line: 121, type: !2664, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !314, retainedNodes: !2666)
!2664 = !DISubroutineType(types: !2665)
!2665 = !{!307, !312}
!2666 = !{!2667}
!2667 = !DILocalVariable(name: "alloc", arg: 1, scope: !2663, file: !1617, line: 121, type: !312)
!2668 = !DILocation(line: 121, column: 25, scope: !2663)
!2669 = !DILocalVariable(name: "pointer", scope: !2670, file: !1617, line: 123, type: !207, align: 8)
!2670 = !DILexicalBlockFile(scope: !2671, file: !1617, discriminator: 0)
!2671 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h808ef7217bbbee25E", scope: !2288, file: !225, line: 190, type: !2289, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2672)
!2672 = !{!2669}
!2673 = !DILocation(line: 123, column: 21, scope: !2670, inlinedAt: !2674)
!2674 = !DILocation(line: 73, column: 9, scope: !2675, inlinedAt: !2678)
!2675 = distinct !DISubprogram(name: "dangling<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h1f3301128a170b30E", scope: !211, file: !225, line: 72, type: !2676, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !26)
!2676 = !DISubroutineType(types: !2677)
!2677 = !{!211}
!2678 = !DILocation(line: 123, column: 21, scope: !2663)
!2679 = !DILocation(line: 123, column: 21, scope: !2680, inlinedAt: !2682)
!2680 = !DILexicalBlockFile(scope: !2681, file: !1617, discriminator: 0)
!2681 = distinct !DISubprogram(name: "align_of<u8>", linkageName: "_ZN4core3mem8align_of17h719fa9d0f32ce13fE", scope: !53, file: !691, line: 464, type: !1349, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !26)
!2682 = !DILocation(line: 95, column: 52, scope: !2683, inlinedAt: !2690)
!2683 = distinct !DISubprogram(name: "dangling<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17hd9a588d0628c68eeE", scope: !207, file: !201, line: 90, type: !2684, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2686)
!2684 = !DISubroutineType(types: !2685)
!2685 = !{!207}
!2686 = !{!2687}
!2687 = !DILocalVariable(name: "ptr", scope: !2688, file: !1617, line: 123, type: !228, align: 8)
!2688 = !DILexicalBlockFile(scope: !2689, file: !1617, discriminator: 0)
!2689 = distinct !DILexicalBlock(scope: !2683, file: !201, line: 95, column: 13)
!2690 = !DILocation(line: 73, column: 20, scope: !2675, inlinedAt: !2678)
!2691 = !DILocalVariable(name: "addr", scope: !2692, file: !1617, line: 123, type: !9, align: 8)
!2692 = !DILexicalBlockFile(scope: !2693, file: !1617, discriminator: 0)
!2693 = distinct !DISubprogram(name: "invalid_mut<u8>", linkageName: "_ZN4core3ptr11invalid_mut17h94279fd2ab17d968E", scope: !204, file: !707, line: 569, type: !2113, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2694)
!2694 = !{!2691}
!2695 = !DILocation(line: 123, column: 21, scope: !2692, inlinedAt: !2696)
!2696 = !DILocation(line: 95, column: 23, scope: !2683, inlinedAt: !2690)
!2697 = !DILocation(line: 123, column: 21, scope: !2688, inlinedAt: !2690)
!2698 = !DILocalVariable(name: "ptr", scope: !2699, file: !1617, line: 123, type: !228, align: 8)
!2699 = !DILexicalBlockFile(scope: !2700, file: !1617, discriminator: 0)
!2700 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hcde0d87aaafdc539E", scope: !207, file: !201, line: 196, type: !240, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2701)
!2701 = !{!2698}
!2702 = !DILocation(line: 123, column: 21, scope: !2699, inlinedAt: !2703)
!2703 = !DILocation(line: 96, column: 13, scope: !2689, inlinedAt: !2690)
!2704 = !DILocation(line: 123, column: 9, scope: !2663)
!2705 = !DILocation(line: 124, column: 6, scope: !2663)
!2706 = !DILocation(line: 124, column: 5, scope: !2663)
!2707 = !DILocation(line: 121, column: 5, scope: !2663)
!2708 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h85117fc00f0a3c97E", scope: !2709, file: !295, line: 2227, type: !524, scopeLine: 2227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2710)
!2709 = !DINamespace(name: "{impl#20}", scope: !297)
!2710 = !{!2711, !2712}
!2711 = !DILocalVariable(name: "self", arg: 1, scope: !2708, file: !295, line: 2227, type: !512)
!2712 = !DILocalVariable(name: "f", arg: 2, scope: !2708, file: !295, line: 2227, type: !477)
!2713 = !DILocation(line: 2227, column: 12, scope: !2708)
!2714 = !DILocation(line: 2227, column: 19, scope: !2708)
!2715 = !DILocation(line: 2228, column: 28, scope: !2708)
!2716 = !DILocation(line: 2228, column: 9, scope: !2708)
!2717 = !DILocation(line: 2229, column: 6, scope: !2708)
!2718 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<i32>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h37df8f59f75fdd3cE", scope: !2720, file: !2719, line: 271, type: !2723, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !2727, retainedNodes: !2725)
!2719 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "73b4070628f6fcec74cccccb11afa9ef")
!2720 = !DINamespace(name: "{impl#0}", scope: !2721)
!2721 = !DINamespace(name: "collect", scope: !2722)
!2722 = !DINamespace(name: "traits", scope: !250)
!2723 = !DISubroutineType(types: !2724)
!2724 = !{!1142, !1142}
!2725 = !{!2726}
!2726 = !DILocalVariable(name: "self", arg: 1, scope: !2718, file: !2719, line: 271, type: !1142)
!2727 = !{!2728}
!2728 = !DITemplateTypeParameter(name: "I", type: !1142)
!2729 = !DILocation(line: 271, column: 18, scope: !2718)
!2730 = !DILocation(line: 273, column: 6, scope: !2718)
!2731 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<i64>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h514bad8e1237f4f8E", scope: !2720, file: !2719, line: 271, type: !2732, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !2736, retainedNodes: !2734)
!2732 = !DISubroutineType(types: !2733)
!2733 = !{!1114, !1114}
!2734 = !{!2735}
!2735 = !DILocalVariable(name: "self", arg: 1, scope: !2731, file: !2719, line: 271, type: !1114)
!2736 = !{!2737}
!2737 = !DITemplateTypeParameter(name: "I", type: !1114)
!2738 = !DILocation(line: 271, column: 18, scope: !2731)
!2739 = !DILocation(line: 273, column: 6, scope: !2731)
!2740 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h45bd1516edcc9d3bE", scope: !2741, file: !1884, line: 246, type: !2742, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2744)
!2741 = !DINamespace(name: "{impl#1}", scope: !313)
!2742 = !DISubroutineType(types: !2743)
!2743 = !{null, !1910, !207, !1157}
!2744 = !{!2745, !2746, !2747}
!2745 = !DILocalVariable(name: "self", arg: 1, scope: !2740, file: !1884, line: 246, type: !1910)
!2746 = !DILocalVariable(name: "ptr", arg: 2, scope: !2740, file: !1884, line: 246, type: !207)
!2747 = !DILocalVariable(name: "layout", arg: 3, scope: !2740, file: !1884, line: 246, type: !1157)
!2748 = !DILocation(line: 246, column: 26, scope: !2740)
!2749 = !DILocation(line: 246, column: 33, scope: !2740)
!2750 = !DILocation(line: 246, column: 51, scope: !2740)
!2751 = !DILocalVariable(name: "layout", scope: !2752, file: !1884, line: 250, type: !1157, align: 8)
!2752 = distinct !DISubprogram(name: "dealloc", linkageName: "_ZN5alloc5alloc7dealloc17hfa9c337aa1e9058aE", scope: !313, file: !1884, line: 112, type: !2753, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2755)
!2753 = !DISubroutineType(types: !2754)
!2754 = !{null, !228, !1157}
!2755 = !{!2756, !2751}
!2756 = !DILocalVariable(name: "ptr", scope: !2752, file: !1884, line: 250, type: !228, align: 8)
!2757 = !DILocation(line: 250, column: 22, scope: !2752, inlinedAt: !2758)
!2758 = !DILocation(line: 250, column: 22, scope: !2740)
!2759 = !DILocalVariable(name: "self", scope: !2760, file: !1884, line: 250, type: !1194, align: 8)
!2760 = !DILexicalBlockFile(scope: !2761, file: !1884, discriminator: 0)
!2761 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17hb22125d388e637b0E", scope: !1194, file: !1193, line: 82, type: !1198, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2762)
!2762 = !{!2759}
!2763 = !DILocation(line: 250, column: 22, scope: !2760, inlinedAt: !2764)
!2764 = !DILocation(line: 131, column: 9, scope: !2765, inlinedAt: !2769)
!2765 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h9c31b47a7d62661aE", scope: !1157, file: !1156, line: 130, type: !2039, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2766)
!2766 = !{!2767}
!2767 = !DILocalVariable(name: "self", scope: !2768, file: !1884, line: 250, type: !2041, align: 8)
!2768 = !DILexicalBlockFile(scope: !2765, file: !1884, discriminator: 0)
!2769 = !DILocation(line: 113, column: 49, scope: !2752, inlinedAt: !2758)
!2770 = !DILocalVariable(name: "self", scope: !2771, file: !1884, line: 250, type: !1163, align: 8)
!2771 = !DILexicalBlockFile(scope: !2772, file: !1884, discriminator: 0)
!2772 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h99ed8069ebe58cd6E", scope: !1163, file: !1206, line: 39, type: !1207, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2773)
!2773 = !{!2770}
!2774 = !DILocation(line: 250, column: 22, scope: !2771, inlinedAt: !2764)
!2775 = !DILocation(line: 247, column: 12, scope: !2740)
!2776 = !DILocalVariable(name: "self", scope: !2777, file: !1884, line: 247, type: !2041, align: 8)
!2777 = !DILexicalBlockFile(scope: !2778, file: !1884, discriminator: 0)
!2778 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h0f790119b9b9ee79E", scope: !1157, file: !1156, line: 120, type: !2039, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2779)
!2779 = !{!2776}
!2780 = !DILocation(line: 247, column: 12, scope: !2777, inlinedAt: !2775)
!2781 = !DILocation(line: 247, column: 9, scope: !2740)
!2782 = !DILocation(line: 250, column: 30, scope: !2740)
!2783 = !DILocalVariable(name: "self", scope: !2784, file: !1884, line: 250, type: !207, align: 8)
!2784 = !DILexicalBlockFile(scope: !2785, file: !1884, discriminator: 0)
!2785 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hed9bdb025f33c0c7E", scope: !207, file: !201, line: 330, type: !233, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2786)
!2786 = !{!2783}
!2787 = !DILocation(line: 250, column: 30, scope: !2784, inlinedAt: !2782)
!2788 = !DILocation(line: 250, column: 44, scope: !2740)
!2789 = !DILocalVariable(name: "self", scope: !2790, file: !1884, line: 250, type: !2041, align: 8)
!2790 = !DILexicalBlockFile(scope: !2791, file: !1884, discriminator: 0)
!2791 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h0f790119b9b9ee79E", scope: !1157, file: !1156, line: 120, type: !2039, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2792)
!2792 = !{!2789}
!2793 = !DILocation(line: 250, column: 22, scope: !2790, inlinedAt: !2794)
!2794 = !DILocation(line: 113, column: 34, scope: !2752, inlinedAt: !2758)
!2795 = !DILocation(line: 250, column: 22, scope: !2768, inlinedAt: !2769)
!2796 = !DILocalVariable(name: "n", scope: !2797, file: !1884, line: 250, type: !9, align: 8)
!2797 = !DILexicalBlockFile(scope: !2798, file: !1884, discriminator: 0)
!2798 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h5f31a20d31332a6bE", scope: !1194, file: !1193, line: 56, type: !1215, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2799)
!2799 = !{!2796, !2800}
!2800 = !DILocalVariable(name: "runtime", scope: !2801, file: !1884, line: 250, type: !1221, align: 8)
!2801 = !DILexicalBlockFile(scope: !2802, file: !1884, discriminator: 0)
!2802 = distinct !DILexicalBlock(scope: !2798, file: !356, line: 2336, column: 13)
!2803 = !DILocation(line: 250, column: 22, scope: !2797, inlinedAt: !2804)
!2804 = !DILocation(line: 41, column: 18, scope: !2772, inlinedAt: !2764)
!2805 = !DILocation(line: 252, column: 6, scope: !2740)
!2806 = distinct !DISubprogram(name: "allocate_zeroed", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hf8e946c7d2929672E", scope: !2741, file: !1884, line: 241, type: !2807, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2809)
!2807 = !DISubroutineType(types: !2808)
!2808 = !{!1887, !1910, !1157}
!2809 = !{!2810, !2811}
!2810 = !DILocalVariable(name: "self", arg: 1, scope: !2806, file: !1884, line: 241, type: !1910)
!2811 = !DILocalVariable(name: "layout", arg: 2, scope: !2806, file: !1884, line: 241, type: !1157)
!2812 = !DILocation(line: 241, column: 24, scope: !2806)
!2813 = !DILocation(line: 241, column: 31, scope: !2806)
!2814 = !DILocation(line: 242, column: 9, scope: !2806)
!2815 = !DILocation(line: 243, column: 6, scope: !2806)
!2816 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h4eaa9050a9471fcfE", scope: !2741, file: !1884, line: 236, type: !2807, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2817)
!2817 = !{!2818, !2819}
!2818 = !DILocalVariable(name: "self", arg: 1, scope: !2816, file: !1884, line: 236, type: !1910)
!2819 = !DILocalVariable(name: "layout", arg: 2, scope: !2816, file: !1884, line: 236, type: !1157)
!2820 = !DILocation(line: 236, column: 17, scope: !2816)
!2821 = !DILocation(line: 236, column: 24, scope: !2816)
!2822 = !DILocation(line: 237, column: 9, scope: !2816)
!2823 = !DILocation(line: 238, column: 6, scope: !2816)
!2824 = distinct !DISubprogram(name: "deref", linkageName: "_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h747584ef08f8105aE", scope: !2825, file: !295, line: 2412, type: !2440, scopeLine: 2412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2826)
!2825 = !DINamespace(name: "{impl#37}", scope: !297)
!2826 = !{!2827}
!2827 = !DILocalVariable(name: "self", arg: 1, scope: !2824, file: !295, line: 2412, type: !512)
!2828 = !DILocation(line: 2412, column: 14, scope: !2824)
!2829 = !DILocation(line: 2413, column: 43, scope: !2824)
!2830 = !DILocalVariable(name: "self", scope: !2831, file: !295, line: 2413, type: !1827, align: 8)
!2831 = !DILexicalBlockFile(scope: !2832, file: !295, discriminator: 0)
!2832 = distinct !DISubprogram(name: "deref<u8, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5a9d9826010df119E", scope: !2833, file: !1607, line: 2531, type: !2834, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !314, retainedNodes: !2836)
!2833 = !DINamespace(name: "{impl#10}", scope: !304)
!2834 = !DISubroutineType(types: !2835)
!2835 = !{!149, !1827}
!2836 = !{!2830}
!2837 = !DILocation(line: 2413, column: 43, scope: !2831, inlinedAt: !2829)
!2838 = !DILocalVariable(name: "data", scope: !2839, file: !295, line: 2413, type: !210, align: 8)
!2839 = !DILexicalBlockFile(scope: !2840, file: !295, discriminator: 0)
!2840 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17h12c49faf885fdaaaE", scope: !2842, file: !2841, line: 90, type: !2843, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2845)
!2841 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "bc05ab33aeb77226885613c6dc511a0a")
!2842 = !DINamespace(name: "raw", scope: !146)
!2843 = !DISubroutineType(types: !2844)
!2844 = !{!149, !210, !9}
!2845 = !{!2838, !2846, !2847}
!2846 = !DILocalVariable(name: "len", scope: !2839, file: !295, line: 2413, type: !9, align: 8)
!2847 = !DILocalVariable(name: "runtime", scope: !2848, file: !295, line: 2413, type: !2850, align: 8)
!2848 = !DILexicalBlockFile(scope: !2849, file: !295, discriminator: 0)
!2849 = distinct !DILexicalBlock(scope: !2840, file: !356, line: 2336, column: 13)
!2850 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !2851, file: !2, size: 128, align: 64, elements: !2852, templateParams: !26, identifier: "ca6adac9bf5585e57d20f143c4c8a4b5")
!2851 = !DINamespace(name: "from_raw_parts", scope: !2842)
!2852 = !{!2853, !2854}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__data", scope: !2850, file: !2, baseType: !1639, size: 64, align: 64)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__len", scope: !2850, file: !2, baseType: !617, size: 64, align: 64, offset: 64)
!2855 = !DILocation(line: 2413, column: 43, scope: !2839, inlinedAt: !2856)
!2856 = !DILocation(line: 2532, column: 18, scope: !2832, inlinedAt: !2829)
!2857 = !DILocalVariable(name: "data", scope: !2858, file: !295, line: 2413, type: !210, align: 8)
!2858 = !DILexicalBlockFile(scope: !2859, file: !295, discriminator: 0)
!2859 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17hc47cf9aff11d411dE", scope: !204, file: !707, line: 695, type: !2860, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2862)
!2860 = !DISubroutineType(types: !2861)
!2861 = !{!1898, !210, !9}
!2862 = !{!2857, !2863}
!2863 = !DILocalVariable(name: "len", scope: !2858, file: !295, line: 2413, type: !9, align: 8)
!2864 = !DILocation(line: 2413, column: 43, scope: !2858, inlinedAt: !2865)
!2865 = !DILocation(line: 97, column: 11, scope: !2840, inlinedAt: !2856)
!2866 = !DILocalVariable(name: "self", scope: !2867, file: !295, line: 2413, type: !210, align: 8)
!2867 = !DILexicalBlockFile(scope: !2868, file: !295, discriminator: 0)
!2868 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h79ff14a885c0d234E", scope: !1647, file: !1646, line: 46, type: !2869, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !2201, retainedNodes: !2871)
!2869 = !DISubroutineType(types: !2870)
!2870 = !{!6, !210}
!2871 = !{!2866}
!2872 = !DILocation(line: 2413, column: 43, scope: !2867, inlinedAt: !2873)
!2873 = !DILocation(line: 696, column: 20, scope: !2859, inlinedAt: !2865)
!2874 = !DILocalVariable(name: "data_address", scope: !2875, file: !295, line: 2413, type: !6, align: 8)
!2875 = !DILexicalBlockFile(scope: !2876, file: !295, discriminator: 0)
!2876 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hec3e4dfd70bf823dE", scope: !1046, file: !1045, line: 110, type: !2877, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2879)
!2877 = !DISubroutineType(types: !2878)
!2878 = !{!1898, !6, !9}
!2879 = !{!2874, !2880}
!2880 = !DILocalVariable(name: "metadata", scope: !2875, file: !295, line: 2413, type: !9, align: 8)
!2881 = !DILocation(line: 2413, column: 43, scope: !2875, inlinedAt: !2882)
!2882 = !DILocation(line: 696, column: 5, scope: !2859, inlinedAt: !2865)
!2883 = !DILocalVariable(name: "v", scope: !2884, file: !295, line: 2413, type: !149, align: 8)
!2884 = !DILexicalBlockFile(scope: !2885, file: !295, discriminator: 0)
!2885 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN4core3str8converts19from_utf8_unchecked17h2bf744e80a0fd3f0E", scope: !2887, file: !2886, line: 170, type: !2888, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2890)
!2886 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/converts.rs", directory: "", checksumkind: CSK_MD5, checksum: "459d256946ab11c35b95264d728167a0")
!2887 = !DINamespace(name: "converts", scope: !14)
!2888 = !DISubroutineType(types: !2889)
!2889 = !{!168, !149}
!2890 = !{!2883}
!2891 = !DILocation(line: 2413, column: 18, scope: !2884, inlinedAt: !2892)
!2892 = !DILocation(line: 2413, column: 18, scope: !2824)
!2893 = !DILocation(line: 2414, column: 6, scope: !2824)
!2894 = distinct !DISubprogram(name: "drop", linkageName: "_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfe011c84af25418aE", scope: !2895, file: !1719, line: 701, type: !2896, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2899)
!2895 = !DINamespace(name: "{impl#2}", scope: !938)
!2896 = !DISubroutineType(types: !2897)
!2897 = !{null, !2898}
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::ffi::c_str::CString", baseType: !937, size: 64, align: 64, dwarfAddressSpace: 0)
!2899 = !{!2900}
!2900 = !DILocalVariable(name: "self", arg: 1, scope: !2894, file: !1719, line: 701, type: !2898)
!2901 = !DILocation(line: 701, column: 13, scope: !2894)
!2902 = !DILocation(line: 703, column: 14, scope: !2894)
!2903 = !DILocalVariable(name: "self", scope: !2904, file: !1719, line: 703, type: !1438, align: 8)
!2904 = !DILexicalBlockFile(scope: !2905, file: !1719, discriminator: 0)
!2905 = distinct !DISubprogram(name: "get_unchecked_mut<u8, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hd916fe501469f0c4E", scope: !434, file: !433, line: 436, type: !2906, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !2911, retainedNodes: !2909)
!2906 = !DISubroutineType(types: !2907)
!2907 = !{!2908, !1438, !9}
!2908 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut u8", baseType: !29, size: 64, align: 64, dwarfAddressSpace: 0)
!2909 = !{!2903, !2910}
!2910 = !DILocalVariable(name: "index", scope: !2904, file: !1719, line: 703, type: !9, align: 8)
!2911 = !{!28, !2912}
!2912 = !DITemplateTypeParameter(name: "I", type: !9)
!2913 = !DILocation(line: 703, column: 14, scope: !2904, inlinedAt: !2902)
!2914 = !DILocalVariable(name: "slice", scope: !2915, file: !1719, line: 703, type: !2187, align: 8)
!2915 = !DILexicalBlockFile(scope: !2916, file: !1719, discriminator: 0)
!2916 = distinct !DISubprogram(name: "get_unchecked_mut<u8>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he53419ff598978a4E", scope: !2917, file: !143, line: 231, type: !2918, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2920)
!2917 = !DINamespace(name: "{impl#2}", scope: !145)
!2918 = !DISubroutineType(types: !2919)
!2919 = !{!228, !9, !2187}
!2920 = !{!2921, !2914, !2922}
!2921 = !DILocalVariable(name: "self", scope: !2915, file: !1719, line: 703, type: !9, align: 8)
!2922 = !DILocalVariable(name: "runtime", scope: !2923, file: !1719, line: 703, type: !2925, align: 8)
!2923 = !DILexicalBlockFile(scope: !2924, file: !1719, discriminator: 0)
!2924 = distinct !DILexicalBlock(scope: !2916, file: !356, line: 2336, column: 13)
!2925 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !2926, file: !2, size: 128, align: 64, elements: !2927, templateParams: !26, identifier: "d62b7ba1fd49927eee591e95c4576f60")
!2926 = !DINamespace(name: "get_unchecked_mut", scope: !2917)
!2927 = !{!2928, !2929}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !2925, file: !2, baseType: !617, size: 64, align: 64)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !2925, file: !2, baseType: !2930, size: 64, align: 64, offset: 64)
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut [u8]", baseType: !2187, size: 64, align: 64, dwarfAddressSpace: 0)
!2931 = !DILocation(line: 703, column: 14, scope: !2915, inlinedAt: !2932)
!2932 = !DILocation(line: 443, column: 24, scope: !2905, inlinedAt: !2902)
!2933 = !DILocalVariable(name: "self", scope: !2934, file: !1719, line: 703, type: !2187, align: 8)
!2934 = !DILexicalBlockFile(scope: !2935, file: !1719, discriminator: 0)
!2935 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hd15615b334cadd36E", scope: !2936, file: !1059, line: 1778, type: !2937, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2939)
!2936 = !DINamespace(name: "{impl#1}", scope: !1061)
!2937 = !DISubroutineType(types: !2938)
!2938 = !{!228, !2187}
!2939 = !{!2933}
!2940 = !DILocation(line: 703, column: 14, scope: !2934, inlinedAt: !2941)
!2941 = !DILocation(line: 235, column: 13, scope: !2916, inlinedAt: !2932)
!2942 = !DILocalVariable(name: "self", scope: !2943, file: !1719, line: 703, type: !228, align: 8)
!2943 = !DILexicalBlockFile(scope: !2944, file: !1719, discriminator: 0)
!2944 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17haeac5df5466eb156E", scope: !1060, file: !1059, line: 985, type: !2945, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2947)
!2945 = !DISubroutineType(types: !2946)
!2946 = !{!228, !228, !9}
!2947 = !{!2942, !2948}
!2948 = !DILocalVariable(name: "count", scope: !2943, file: !1719, line: 703, type: !9, align: 8)
!2949 = !DILocation(line: 703, column: 14, scope: !2943, inlinedAt: !2941)
!2950 = !DILocalVariable(name: "self", scope: !2951, file: !1719, line: 703, type: !228, align: 8)
!2951 = !DILexicalBlockFile(scope: !2952, file: !1719, discriminator: 0)
!2952 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h428b7124034281fbE", scope: !1060, file: !1059, line: 465, type: !2953, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2956)
!2953 = !DISubroutineType(types: !2954)
!2954 = !{!228, !228, !2955}
!2955 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!2956 = !{!2950, !2957}
!2957 = !DILocalVariable(name: "count", scope: !2951, file: !1719, line: 703, type: !2955, align: 8)
!2958 = !DILocation(line: 703, column: 14, scope: !2951, inlinedAt: !2959)
!2959 = !DILocation(line: 990, column: 18, scope: !2944, inlinedAt: !2941)
!2960 = !DILocation(line: 703, column: 13, scope: !2894)
!2961 = !DILocation(line: 705, column: 6, scope: !2894)
!2962 = distinct !DISubprogram(name: "spec_eq<u8, u8, 16>", linkageName: "_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h66243477bd61f162E", scope: !2963, file: !1395, line: 148, type: !1398, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !1704, retainedNodes: !2964)
!2963 = !DINamespace(name: "{impl#9}", scope: !1397)
!2964 = !{!2965, !2966, !2967}
!2965 = !DILocalVariable(name: "a", arg: 1, scope: !2962, file: !1395, line: 148, type: !1400)
!2966 = !DILocalVariable(name: "b", arg: 2, scope: !2962, file: !1395, line: 148, type: !1400)
!2967 = !DILocalVariable(name: "b", scope: !2968, file: !1395, line: 151, type: !1400, align: 8)
!2968 = distinct !DILexicalBlock(scope: !2962, file: !1395, line: 151, column: 13)
!2969 = !DILocation(line: 148, column: 16, scope: !2962)
!2970 = !DILocation(line: 148, column: 28, scope: !2962)
!2971 = !DILocation(line: 151, column: 23, scope: !2962)
!2972 = !DILocalVariable(name: "self", scope: !2973, file: !1395, line: 151, type: !149, align: 8)
!2973 = !DILexicalBlockFile(scope: !2974, file: !1395, discriminator: 0)
!2974 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h3efe064128de42beE", scope: !434, file: !433, line: 476, type: !1667, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !2975)
!2975 = !{!2972}
!2976 = !DILocation(line: 151, column: 23, scope: !2973, inlinedAt: !2971)
!2977 = !DILocalVariable(name: "self", scope: !2978, file: !1395, line: 151, type: !210, align: 8)
!2978 = !DILexicalBlockFile(scope: !2979, file: !1395, discriminator: 0)
!2979 = distinct !DISubprogram(name: "cast<u8, [u8; 16]>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h7dd5077767788ed1E", scope: !1647, file: !1646, line: 46, type: !2980, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !2984, retainedNodes: !2983)
!2980 = !DISubroutineType(types: !2981)
!2981 = !{!2982, !210}
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const [u8; 16]", baseType: !1401, size: 64, align: 64, dwarfAddressSpace: 0)
!2983 = !{!2977}
!2984 = !{!28, !2985}
!2985 = !DITemplateTypeParameter(name: "U", type: !1401)
!2986 = !DILocation(line: 151, column: 23, scope: !2978, inlinedAt: !2971)
!2987 = !DILocation(line: 151, column: 21, scope: !2962)
!2988 = !DILocation(line: 151, column: 17, scope: !2968)
!2989 = !DILocation(line: 152, column: 13, scope: !2968)
!2990 = !DILocation(line: 154, column: 6, scope: !2962)
!2991 = distinct !DISubprogram(name: "deref", linkageName: "_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17ha1630efc3d7688f4E", scope: !2992, file: !1719, line: 713, type: !2993, scopeLine: 713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !2996)
!2992 = !DINamespace(name: "{impl#3}", scope: !938)
!2993 = !DISubroutineType(types: !2994)
!2994 = !{!360, !2995}
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::ffi::c_str::CString", baseType: !937, size: 64, align: 64, dwarfAddressSpace: 0)
!2996 = !{!2997}
!2997 = !DILocalVariable(name: "self", arg: 1, scope: !2991, file: !1719, line: 713, type: !2995)
!2998 = !DILocation(line: 713, column: 14, scope: !2991)
!2999 = !DILocation(line: 714, column: 54, scope: !2991)
!3000 = !DILocalVariable(name: "self", scope: !3001, file: !1719, line: 714, type: !2995, align: 8)
!3001 = distinct !DISubprogram(name: "as_bytes_with_nul", linkageName: "_ZN5alloc3ffi5c_str7CString17as_bytes_with_nul17h562276a4f3a95d5dE", scope: !937, file: !1719, line: 561, type: !3002, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3004)
!3002 = !DISubroutineType(types: !3003)
!3003 = !{!149, !2995}
!3004 = !{!3000}
!3005 = !DILocation(line: 714, column: 54, scope: !3001, inlinedAt: !2999)
!3006 = !DILocalVariable(name: "bytes", scope: !3007, file: !1719, line: 714, type: !149, align: 8)
!3007 = !DILexicalBlockFile(scope: !3008, file: !1719, discriminator: 0)
!3008 = distinct !DISubprogram(name: "from_bytes_with_nul_unchecked", linkageName: "_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked17hb16db5a01b010559E", scope: !364, file: !422, line: 389, type: !374, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3009)
!3009 = !{!3006}
!3010 = !DILocation(line: 714, column: 18, scope: !3007, inlinedAt: !3011)
!3011 = !DILocation(line: 714, column: 18, scope: !2991)
!3012 = !DILocation(line: 715, column: 6, scope: !2991)
!3013 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha99a412e3048bf79E", scope: !3014, file: !1607, line: 2915, type: !3015, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !314, retainedNodes: !3017)
!3014 = !DINamespace(name: "{impl#28}", scope: !304)
!3015 = !DISubroutineType(types: !3016)
!3016 = !{null, !1686}
!3017 = !{!3018}
!3018 = !DILocalVariable(name: "self", arg: 1, scope: !3013, file: !1607, line: 2915, type: !1686)
!3019 = !DILocation(line: 2915, column: 13, scope: !3013)
!3020 = !DILocation(line: 2920, column: 62, scope: !3013)
!3021 = !DILocalVariable(name: "data", scope: !3022, file: !1607, line: 2920, type: !228, align: 8)
!3022 = !DILexicalBlockFile(scope: !3023, file: !1607, discriminator: 0)
!3023 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h1d40c9e8453759e2E", scope: !204, file: !707, line: 727, type: !2185, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !3024)
!3024 = !{!3021, !3025}
!3025 = !DILocalVariable(name: "len", scope: !3022, file: !1607, line: 2920, type: !9, align: 8)
!3026 = !DILocation(line: 2920, column: 32, scope: !3022, inlinedAt: !3027)
!3027 = !DILocation(line: 2920, column: 32, scope: !3013)
!3028 = !DILocation(line: 2920, column: 81, scope: !3013)
!3029 = !DILocalVariable(name: "self", scope: !3030, file: !1607, line: 2920, type: !228, align: 8)
!3030 = !DILexicalBlockFile(scope: !3031, file: !1607, discriminator: 0)
!3031 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h82ccaa95e77f183eE", scope: !1060, file: !1059, line: 45, type: !2198, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !2201, retainedNodes: !3032)
!3032 = !{!3029}
!3033 = !DILocation(line: 2920, column: 32, scope: !3030, inlinedAt: !3034)
!3034 = !DILocation(line: 728, column: 24, scope: !3023, inlinedAt: !3027)
!3035 = !DILocalVariable(name: "data_address", scope: !3036, file: !1607, line: 2920, type: !1049, align: 8)
!3036 = !DILexicalBlockFile(scope: !3037, file: !1607, discriminator: 0)
!3037 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h24d5d8ed65e6d977E", scope: !1046, file: !1045, line: 127, type: !2208, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !27, retainedNodes: !3038)
!3038 = !{!3035, !3039}
!3039 = !DILocalVariable(name: "metadata", scope: !3036, file: !1607, line: 2920, type: !9, align: 8)
!3040 = !DILocation(line: 2920, column: 32, scope: !3036, inlinedAt: !3041)
!3041 = !DILocation(line: 728, column: 5, scope: !3023, inlinedAt: !3027)
!3042 = !DILocation(line: 2920, column: 13, scope: !3013)
!3043 = !DILocation(line: 2923, column: 6, scope: !3013)
!3044 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h38c49a3d7a5525cfE", scope: !3045, file: !1617, line: 477, type: !3046, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !314, retainedNodes: !3049)
!3045 = !DINamespace(name: "{impl#3}", scope: !121)
!3046 = !DISubroutineType(types: !3047)
!3047 = !{null, !3048}
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !307, size: 64, align: 64, dwarfAddressSpace: 0)
!3049 = !{!3050, !3051, !3053}
!3050 = !DILocalVariable(name: "self", arg: 1, scope: !3044, file: !1617, line: 477, type: !3048)
!3051 = !DILocalVariable(name: "ptr", scope: !3052, file: !1617, line: 478, type: !207, align: 8)
!3052 = distinct !DILexicalBlock(scope: !3044, file: !1617, line: 478, column: 60)
!3053 = !DILocalVariable(name: "layout", scope: !3052, file: !1617, line: 478, type: !1157, align: 8)
!3054 = !DILocation(line: 477, column: 13, scope: !3044)
!3055 = !DILocation(line: 478, column: 38, scope: !3052)
!3056 = !DILocation(line: 478, column: 16, scope: !3052)
!3057 = !DILocation(line: 478, column: 22, scope: !3052)
!3058 = !DILocation(line: 478, column: 27, scope: !3052)
!3059 = !DILocation(line: 479, column: 22, scope: !3052)
!3060 = !DILocation(line: 481, column: 6, scope: !3044)
!3061 = !DILocation(line: 478, column: 9, scope: !3044)
!3062 = distinct !DISubprogram(name: "spec_next<i32>", linkageName: "_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h8803c82250012bf8E", scope: !3063, file: !247, line: 620, type: !1128, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !700, retainedNodes: !3064)
!3063 = !DINamespace(name: "{impl#2}", scope: !249)
!3064 = !{!3065, !3066}
!3065 = !DILocalVariable(name: "self", arg: 1, scope: !3062, file: !247, line: 620, type: !1141)
!3066 = !DILocalVariable(name: "n", scope: !3067, file: !247, line: 623, type: !253, align: 4)
!3067 = distinct !DILexicalBlock(scope: !3062, file: !247, line: 623, column: 13)
!3068 = !DILocation(line: 620, column: 18, scope: !3062)
!3069 = !DILocation(line: 621, column: 12, scope: !3062)
!3070 = !DILocation(line: 621, column: 25, scope: !3062)
!3071 = !DILocation(line: 626, column: 13, scope: !3062)
!3072 = !DILocation(line: 621, column: 9, scope: !3062)
!3073 = !DILocation(line: 623, column: 54, scope: !3062)
!3074 = !DILocation(line: 623, column: 30, scope: !3062)
!3075 = !DILocation(line: 623, column: 17, scope: !3067)
!3076 = !DILocation(line: 624, column: 31, scope: !3067)
!3077 = !DILocation(line: 624, column: 18, scope: !3067)
!3078 = !DILocation(line: 624, column: 13, scope: !3067)
!3079 = !DILocation(line: 628, column: 6, scope: !3062)
!3080 = !{i32 0, i32 2}
!3081 = distinct !DISubprogram(name: "spec_next<i64>", linkageName: "_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17he230a9875d2c47c9E", scope: !3063, file: !247, line: 620, type: !1100, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !786, retainedNodes: !3082)
!3082 = !{!3083, !3084}
!3083 = !DILocalVariable(name: "self", arg: 1, scope: !3081, file: !247, line: 620, type: !1113)
!3084 = !DILocalVariable(name: "n", scope: !3085, file: !247, line: 623, type: !276, align: 8)
!3085 = distinct !DILexicalBlock(scope: !3081, file: !247, line: 623, column: 13)
!3086 = !DILocation(line: 620, column: 18, scope: !3081)
!3087 = !DILocation(line: 621, column: 12, scope: !3081)
!3088 = !DILocation(line: 621, column: 25, scope: !3081)
!3089 = !DILocation(line: 626, column: 13, scope: !3081)
!3090 = !DILocation(line: 621, column: 9, scope: !3081)
!3091 = !DILocation(line: 623, column: 54, scope: !3081)
!3092 = !DILocation(line: 623, column: 30, scope: !3081)
!3093 = !DILocation(line: 623, column: 17, scope: !3085)
!3094 = !DILocation(line: 624, column: 31, scope: !3085)
!3095 = !DILocation(line: 624, column: 18, scope: !3085)
!3096 = !DILocation(line: 624, column: 13, scope: !3085)
!3097 = !DILocation(line: 628, column: 6, scope: !3081)
!3098 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN13f128_internal9f128_impl74_$LT$impl$u20$core..fmt..Debug$u20$for$u20$f128_internal..f128_t..f128$GT$3fmt17ha65970577a7c543cE", scope: !3100, file: !3099, line: 19, type: !3102, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3105)
!3099 = !DIFile(filename: "src/f128_impl.rs", directory: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/f128_internal-0.2.2", checksumkind: CSK_MD5, checksum: "9d51e45b18c076d7be80b3cbce7922a2")
!3100 = !DINamespace(name: "{impl#0}", scope: !3101)
!3101 = !DINamespace(name: "f128_impl", scope: !1501)
!3102 = !DISubroutineType(types: !3103)
!3103 = !{!459, !3104, !477}
!3104 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&f128_internal::f128_t::f128", baseType: !1499, size: 64, align: 64, dwarfAddressSpace: 0)
!3105 = !{!3106, !3107}
!3106 = !DILocalVariable(name: "self", arg: 1, scope: !3098, file: !3099, line: 19, type: !3104)
!3107 = !DILocalVariable(name: "f", arg: 2, scope: !3098, file: !3099, line: 19, type: !477)
!3108 = !DILocation(line: 19, column: 12, scope: !3098)
!3109 = !DILocation(line: 19, column: 19, scope: !3098)
!3110 = !DILocation(line: 20, column: 9, scope: !3098)
!3111 = !DILocation(line: 21, column: 6, scope: !3098)
!3112 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN13f128_internal9f128_impl76_$LT$impl$u20$core..fmt..Display$u20$for$u20$f128_internal..f128_t..f128$GT$3fmt17had32567ccc59b64dE", scope: !3113, file: !3099, line: 25, type: !3102, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3114)
!3113 = !DINamespace(name: "{impl#1}", scope: !3101)
!3114 = !{!3115, !3116, !3117, !3119, !3121, !3125}
!3115 = !DILocalVariable(name: "self", arg: 1, scope: !3112, file: !3099, line: 25, type: !3104)
!3116 = !DILocalVariable(name: "f", arg: 2, scope: !3112, file: !3099, line: 25, type: !477)
!3117 = !DILocalVariable(name: "format", scope: !3118, file: !3099, line: 26, type: !300, align: 8)
!3118 = distinct !DILexicalBlock(scope: !3112, file: !3099, line: 26, column: 9)
!3119 = !DILocalVariable(name: "precision", scope: !3120, file: !3099, line: 27, type: !9, align: 8)
!3120 = distinct !DILexicalBlock(scope: !3112, file: !3099, line: 27, column: 52)
!3121 = !DILocalVariable(name: "res", scope: !3122, file: !3099, line: 28, type: !300, align: 8)
!3122 = !DILexicalBlockFile(scope: !3123, file: !3099, discriminator: 0)
!3123 = distinct !DILexicalBlock(scope: !3120, file: !3124, line: 116, column: 9)
!3124 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "01273458e8d6db9c7d8d25445bca74ed")
!3125 = !DILocalVariable(name: "s", scope: !3126, file: !3099, line: 34, type: !300, align: 8)
!3126 = distinct !DILexicalBlock(scope: !3118, file: !3099, line: 34, column: 13)
!3127 = !DILocation(line: 25, column: 12, scope: !3112)
!3128 = !DILocation(line: 25, column: 19, scope: !3112)
!3129 = !DILocation(line: 26, column: 13, scope: !3118)
!3130 = !DILocation(line: 27, column: 25, scope: !3120)
!3131 = !DILocation(line: 28, column: 17, scope: !3122)
!3132 = !DILocation(line: 34, column: 18, scope: !3126)
!3133 = !DILocation(line: 27, column: 38, scope: !3120)
!3134 = !DILocation(line: 27, column: 20, scope: !3120)
!3135 = !DILocation(line: 28, column: 17, scope: !3120)
!3136 = !DILocation(line: 30, column: 17, scope: !3112)
!3137 = !DILocation(line: 33, column: 34, scope: !3118)
!3138 = !DILocation(line: 27, column: 13, scope: !3112)
!3139 = !DILocation(line: 38, column: 5, scope: !3112)
!3140 = !DILocation(line: 33, column: 15, scope: !3118)
!3141 = !DILocation(line: 33, column: 9, scope: !3118)
!3142 = !DILocation(line: 25, column: 5, scope: !3112)
!3143 = !DILocation(line: 35, column: 21, scope: !3118)
!3144 = !DILocation(line: 35, column: 35, scope: !3118)
!3145 = !DILocation(line: 34, column: 18, scope: !3118)
!3146 = !DILocation(line: 34, column: 24, scope: !3126)
!3147 = !DILocation(line: 34, column: 41, scope: !3118)
!3148 = !DILocation(line: 38, column: 6, scope: !3112)
!3149 = distinct !DISubprogram(name: "is_zero", linkageName: "_ZN13f128_internal9f128_impl86_$LT$impl$u20$num_traits..identities..Zero$u20$for$u20$f128_internal..f128_t..f128$GT$7is_zero17h2c35eb98ddb9f669E", scope: !3150, file: !3099, line: 42, type: !3151, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3153)
!3150 = !DINamespace(name: "{impl#2}", scope: !3101)
!3151 = !DISubroutineType(types: !3152)
!3152 = !{!398, !3104}
!3153 = !{!3154}
!3154 = !DILocalVariable(name: "self", arg: 1, scope: !3149, file: !3099, line: 42, type: !3104)
!3155 = !DILocation(line: 42, column: 16, scope: !3149)
!3156 = !DILocation(line: 43, column: 9, scope: !3149)
!3157 = !DILocation(line: 43, column: 35, scope: !3149)
!3158 = !DILocation(line: 44, column: 6, scope: !3149)
!3159 = distinct !DISubprogram(name: "zero", linkageName: "_ZN13f128_internal9f128_impl86_$LT$impl$u20$num_traits..identities..Zero$u20$for$u20$f128_internal..f128_t..f128$GT$4zero17hd26a5f32ebeb35c9E", scope: !3150, file: !3099, line: 45, type: !3160, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3160 = !DISubroutineType(types: !3161)
!3161 = !{!1499}
!3162 = !DILocation(line: 46, column: 9, scope: !3159)
!3163 = !DILocation(line: 47, column: 6, scope: !3159)
!3164 = distinct !DISubprogram(name: "one", linkageName: "_ZN13f128_internal9f128_impl85_$LT$impl$u20$num_traits..identities..One$u20$for$u20$f128_internal..f128_t..f128$GT$3one17h923e42da922abdcdE", scope: !3165, file: !3099, line: 51, type: !3160, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3165 = !DINamespace(name: "{impl#3}", scope: !3101)
!3166 = !DILocation(line: 52, column: 9, scope: !3164)
!3167 = !DILocation(line: 53, column: 6, scope: !3164)
!3168 = distinct !DISubprogram(name: "to_i64", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$6to_i6417h1ab6f6bb05e145ecE", scope: !3169, file: !3099, line: 57, type: !3170, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3172)
!3169 = !DINamespace(name: "{impl#4}", scope: !3101)
!3170 = !DISubroutineType(types: !3171)
!3171 = !{!1102, !3104}
!3172 = !{!3173}
!3173 = !DILocalVariable(name: "self", arg: 1, scope: !3168, file: !3099, line: 57, type: !3104)
!3174 = !DILocation(line: 57, column: 15, scope: !3168)
!3175 = !DILocation(line: 58, column: 35, scope: !3168)
!3176 = !DILocation(line: 58, column: 23, scope: !3168)
!3177 = !DILocation(line: 58, column: 9, scope: !3168)
!3178 = !DILocation(line: 59, column: 6, scope: !3168)
!3179 = distinct !DISubprogram(name: "to_u64", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$6to_u6417h7129a47eb00e8b01E", scope: !3169, file: !3099, line: 60, type: !3180, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3195)
!3180 = !DISubroutineType(types: !3181)
!3181 = !{!3182, !3104}
!3182 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u64>", scope: !20, file: !2, size: 128, align: 64, elements: !3183, templateParams: !26, identifier: "16e153c2fe52db6a1dfc345930bd0217")
!3183 = !{!3184}
!3184 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3182, file: !2, size: 128, align: 64, elements: !3185, templateParams: !26, identifier: "b3956402942b10598bd4a19f6c646804", discriminator: !3194)
!3185 = !{!3186, !3190}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3184, file: !2, baseType: !3187, size: 128, align: 64, extraData: i64 0)
!3187 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3182, file: !2, size: 128, align: 64, elements: !26, templateParams: !3188, identifier: "e1b9c0ac5f4b9eb1b4dff91b1fcb2bb3")
!3188 = !{!3189}
!3189 = !DITemplateTypeParameter(name: "T", type: !54)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3184, file: !2, baseType: !3191, size: 128, align: 64, extraData: i64 1)
!3191 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3182, file: !2, size: 128, align: 64, elements: !3192, templateParams: !3188, identifier: "aa0e85c23318717771faa5f022ef9a7a")
!3192 = !{!3193}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3191, file: !2, baseType: !54, size: 64, align: 64, offset: 64)
!3194 = !DIDerivedType(tag: DW_TAG_member, scope: !3182, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!3195 = !{!3196}
!3196 = !DILocalVariable(name: "self", arg: 1, scope: !3179, file: !3099, line: 60, type: !3104)
!3197 = !DILocation(line: 60, column: 15, scope: !3179)
!3198 = !DILocation(line: 61, column: 35, scope: !3179)
!3199 = !DILocation(line: 61, column: 23, scope: !3179)
!3200 = !DILocation(line: 61, column: 9, scope: !3179)
!3201 = !DILocation(line: 62, column: 6, scope: !3179)
!3202 = distinct !DISubprogram(name: "to_isize", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8to_isize17h9ad16e7d2371dbccE", scope: !3169, file: !3099, line: 63, type: !3203, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3218)
!3203 = !DISubroutineType(types: !3204)
!3204 = !{!3205, !3104}
!3205 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<isize>", scope: !20, file: !2, size: 128, align: 64, elements: !3206, templateParams: !26, identifier: "5d1f91ecc6be94321ec06b4511dca90d")
!3206 = !{!3207}
!3207 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3205, file: !2, size: 128, align: 64, elements: !3208, templateParams: !26, identifier: "762532889cfaf43c3ce51697c9bd6188", discriminator: !3217)
!3208 = !{!3209, !3213}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3207, file: !2, baseType: !3210, size: 128, align: 64, extraData: i64 0)
!3210 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3205, file: !2, size: 128, align: 64, elements: !26, templateParams: !3211, identifier: "7c880d26d637db84d4205d5a83450e60")
!3211 = !{!3212}
!3212 = !DITemplateTypeParameter(name: "T", type: !2955)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3207, file: !2, baseType: !3214, size: 128, align: 64, extraData: i64 1)
!3214 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3205, file: !2, size: 128, align: 64, elements: !3215, templateParams: !3211, identifier: "52406c785c5c450a3d2ce8306843894a")
!3215 = !{!3216}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3214, file: !2, baseType: !2955, size: 64, align: 64, offset: 64)
!3217 = !DIDerivedType(tag: DW_TAG_member, scope: !3205, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!3218 = !{!3219}
!3219 = !DILocalVariable(name: "self", arg: 1, scope: !3202, file: !3099, line: 63, type: !3104)
!3220 = !DILocation(line: 63, column: 17, scope: !3202)
!3221 = !DILocation(line: 64, column: 35, scope: !3202)
!3222 = !DILocation(line: 64, column: 23, scope: !3202)
!3223 = !DILocation(line: 64, column: 9, scope: !3202)
!3224 = !DILocation(line: 65, column: 6, scope: !3202)
!3225 = distinct !DISubprogram(name: "to_i8", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$5to_i817h5fec4ce59a698ae3E", scope: !3169, file: !3099, line: 66, type: !3226, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3239)
!3226 = !DISubroutineType(types: !3227)
!3227 = !{!3228, !3104}
!3228 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<i8>", scope: !20, file: !2, size: 16, align: 8, elements: !3229, templateParams: !26, identifier: "3e7be2b746668a1c321f3b244dc2abdd")
!3229 = !{!3230}
!3230 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3228, file: !2, size: 16, align: 8, elements: !3231, templateParams: !26, identifier: "a898da60d2be46d7c50e8fc58fdeb5d3", discriminator: !3238)
!3231 = !{!3232, !3234}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3230, file: !2, baseType: !3233, size: 16, align: 8, extraData: i64 0)
!3233 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3228, file: !2, size: 16, align: 8, elements: !26, templateParams: !443, identifier: "8024fe5577e738a623696376b5bcc348")
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3230, file: !2, baseType: !3235, size: 16, align: 8, extraData: i64 1)
!3235 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3228, file: !2, size: 16, align: 8, elements: !3236, templateParams: !443, identifier: "c777bd9a2297d474835618102caa93e8")
!3236 = !{!3237}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3235, file: !2, baseType: !136, size: 8, align: 8, offset: 8)
!3238 = !DIDerivedType(tag: DW_TAG_member, scope: !3228, file: !2, baseType: !29, size: 8, align: 8, flags: DIFlagArtificial)
!3239 = !{!3240}
!3240 = !DILocalVariable(name: "self", arg: 1, scope: !3225, file: !3099, line: 66, type: !3104)
!3241 = !DILocation(line: 66, column: 14, scope: !3225)
!3242 = !DILocation(line: 67, column: 34, scope: !3225)
!3243 = !DILocation(line: 67, column: 23, scope: !3225)
!3244 = !DILocation(line: 67, column: 9, scope: !3225)
!3245 = !DILocation(line: 68, column: 6, scope: !3225)
!3246 = distinct !DISubprogram(name: "to_i16", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$6to_i1617h7c153f2cb76e538dE", scope: !3169, file: !3099, line: 69, type: !3247, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3264)
!3247 = !DISubroutineType(types: !3248)
!3248 = !{!3249, !3104}
!3249 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<i16>", scope: !20, file: !2, size: 32, align: 16, elements: !3250, templateParams: !26, identifier: "256c93bd09d1abe511171bbcc4037f81")
!3250 = !{!3251}
!3251 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3249, file: !2, size: 32, align: 16, elements: !3252, templateParams: !26, identifier: "a95eb1916729e7503bee1b5709555b78", discriminator: !3262)
!3252 = !{!3253, !3258}
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3251, file: !2, baseType: !3254, size: 32, align: 16, extraData: i64 0)
!3254 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3249, file: !2, size: 32, align: 16, elements: !26, templateParams: !3255, identifier: "7f15b172364cbc2b6a382750b77507ee")
!3255 = !{!3256}
!3256 = !DITemplateTypeParameter(name: "T", type: !3257)
!3257 = !DIBasicType(name: "i16", size: 16, encoding: DW_ATE_signed)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3251, file: !2, baseType: !3259, size: 32, align: 16, extraData: i64 1)
!3259 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3249, file: !2, size: 32, align: 16, elements: !3260, templateParams: !3255, identifier: "c1c962d4b4820b8428c85f6f52f26117")
!3260 = !{!3261}
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3259, file: !2, baseType: !3257, size: 16, align: 16, offset: 16)
!3262 = !DIDerivedType(tag: DW_TAG_member, scope: !3249, file: !2, baseType: !3263, size: 16, align: 16, flags: DIFlagArtificial)
!3263 = !DIBasicType(name: "u16", size: 16, encoding: DW_ATE_unsigned)
!3264 = !{!3265}
!3265 = !DILocalVariable(name: "self", arg: 1, scope: !3246, file: !3099, line: 69, type: !3104)
!3266 = !DILocation(line: 69, column: 15, scope: !3246)
!3267 = !DILocation(line: 70, column: 35, scope: !3246)
!3268 = !DILocation(line: 70, column: 23, scope: !3246)
!3269 = !DILocation(line: 70, column: 9, scope: !3246)
!3270 = !DILocation(line: 71, column: 6, scope: !3246)
!3271 = !{i16 0, i16 2}
!3272 = distinct !DISubprogram(name: "to_i32", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$6to_i3217h26967de9ee03624fE", scope: !3169, file: !3099, line: 72, type: !3273, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3275)
!3273 = !DISubroutineType(types: !3274)
!3274 = !{!1130, !3104}
!3275 = !{!3276}
!3276 = !DILocalVariable(name: "self", arg: 1, scope: !3272, file: !3099, line: 72, type: !3104)
!3277 = !DILocation(line: 72, column: 15, scope: !3272)
!3278 = !DILocation(line: 73, column: 35, scope: !3272)
!3279 = !DILocation(line: 73, column: 23, scope: !3272)
!3280 = !DILocation(line: 73, column: 9, scope: !3272)
!3281 = !DILocation(line: 74, column: 6, scope: !3272)
!3282 = distinct !DISubprogram(name: "to_usize", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8to_usize17hc53527b89f8f322cE", scope: !3169, file: !3099, line: 75, type: !3283, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3285)
!3283 = !DISubroutineType(types: !3284)
!3284 = !{!485, !3104}
!3285 = !{!3286}
!3286 = !DILocalVariable(name: "self", arg: 1, scope: !3282, file: !3099, line: 75, type: !3104)
!3287 = !DILocation(line: 75, column: 17, scope: !3282)
!3288 = !DILocation(line: 76, column: 35, scope: !3282)
!3289 = !DILocation(line: 76, column: 23, scope: !3282)
!3290 = !DILocation(line: 76, column: 9, scope: !3282)
!3291 = !DILocation(line: 77, column: 6, scope: !3282)
!3292 = distinct !DISubprogram(name: "to_u8", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$5to_u817he6eec2db2d7fd82dE", scope: !3169, file: !3099, line: 78, type: !3293, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3295)
!3293 = !DISubroutineType(types: !3294)
!3294 = !{!19, !3104}
!3295 = !{!3296}
!3296 = !DILocalVariable(name: "self", arg: 1, scope: !3292, file: !3099, line: 78, type: !3104)
!3297 = !DILocation(line: 78, column: 14, scope: !3292)
!3298 = !DILocation(line: 79, column: 34, scope: !3292)
!3299 = !DILocation(line: 79, column: 23, scope: !3292)
!3300 = !DILocation(line: 79, column: 9, scope: !3292)
!3301 = !DILocation(line: 80, column: 6, scope: !3292)
!3302 = distinct !DISubprogram(name: "to_u16", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$6to_u1617hb8b2b4f2600ae24aE", scope: !3169, file: !3099, line: 81, type: !3303, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3318)
!3303 = !DISubroutineType(types: !3304)
!3304 = !{!3305, !3104}
!3305 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u16>", scope: !20, file: !2, size: 32, align: 16, elements: !3306, templateParams: !26, identifier: "ab6dbc35ffcd7cae5c924c9c6a2d00b")
!3306 = !{!3307}
!3307 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3305, file: !2, size: 32, align: 16, elements: !3308, templateParams: !26, identifier: "f7d5614d5a63d1904577348ec8836236", discriminator: !3317)
!3308 = !{!3309, !3313}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3307, file: !2, baseType: !3310, size: 32, align: 16, extraData: i64 0)
!3310 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3305, file: !2, size: 32, align: 16, elements: !26, templateParams: !3311, identifier: "7de8ea70881a5d25d4b0ae422ce24d6a")
!3311 = !{!3312}
!3312 = !DITemplateTypeParameter(name: "T", type: !3263)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3307, file: !2, baseType: !3314, size: 32, align: 16, extraData: i64 1)
!3314 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3305, file: !2, size: 32, align: 16, elements: !3315, templateParams: !3311, identifier: "bf7b4cd628b26074419e3797f0e2827a")
!3315 = !{!3316}
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3314, file: !2, baseType: !3263, size: 16, align: 16, offset: 16)
!3317 = !DIDerivedType(tag: DW_TAG_member, scope: !3305, file: !2, baseType: !3263, size: 16, align: 16, flags: DIFlagArtificial)
!3318 = !{!3319}
!3319 = !DILocalVariable(name: "self", arg: 1, scope: !3302, file: !3099, line: 81, type: !3104)
!3320 = !DILocation(line: 81, column: 15, scope: !3302)
!3321 = !DILocation(line: 82, column: 35, scope: !3302)
!3322 = !DILocation(line: 82, column: 23, scope: !3302)
!3323 = !DILocation(line: 82, column: 9, scope: !3302)
!3324 = !DILocation(line: 83, column: 6, scope: !3302)
!3325 = distinct !DISubprogram(name: "to_u32", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$6to_u3217h5b464c1b3ed8e54eE", scope: !3169, file: !3099, line: 84, type: !3326, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3341)
!3326 = !DISubroutineType(types: !3327)
!3327 = !{!3328, !3104}
!3328 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u32>", scope: !20, file: !2, size: 64, align: 32, elements: !3329, templateParams: !26, identifier: "433c36b652ea33482ffe8be57ab7893")
!3329 = !{!3330}
!3330 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3328, file: !2, size: 64, align: 32, elements: !3331, templateParams: !26, identifier: "e01b299968261779c422a7e1febecddf", discriminator: !3340)
!3331 = !{!3332, !3336}
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3330, file: !2, baseType: !3333, size: 64, align: 32, extraData: i64 0)
!3333 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3328, file: !2, size: 64, align: 32, elements: !26, templateParams: !3334, identifier: "8b9fb7e5d8df9aebeeccf870281c03a8")
!3334 = !{!3335}
!3335 = !DITemplateTypeParameter(name: "T", type: !173)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3330, file: !2, baseType: !3337, size: 64, align: 32, extraData: i64 1)
!3337 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3328, file: !2, size: 64, align: 32, elements: !3338, templateParams: !3334, identifier: "4b24779e750ae7c21f70b77320a16b9")
!3338 = !{!3339}
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3337, file: !2, baseType: !173, size: 32, align: 32, offset: 32)
!3340 = !DIDerivedType(tag: DW_TAG_member, scope: !3328, file: !2, baseType: !173, size: 32, align: 32, flags: DIFlagArtificial)
!3341 = !{!3342}
!3342 = !DILocalVariable(name: "self", arg: 1, scope: !3325, file: !3099, line: 84, type: !3104)
!3343 = !DILocation(line: 84, column: 15, scope: !3325)
!3344 = !DILocation(line: 85, column: 35, scope: !3325)
!3345 = !DILocation(line: 85, column: 23, scope: !3325)
!3346 = !DILocation(line: 85, column: 9, scope: !3325)
!3347 = !DILocation(line: 86, column: 6, scope: !3325)
!3348 = distinct !DISubprogram(name: "to_f32", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$6to_f3217h43ef597661efaa91E", scope: !3169, file: !3099, line: 87, type: !3349, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3365)
!3349 = !DISubroutineType(types: !3350)
!3350 = !{!3351, !3104}
!3351 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<f32>", scope: !20, file: !2, size: 64, align: 32, elements: !3352, templateParams: !26, identifier: "6f8430e8115d3b4ff389f567af163f")
!3352 = !{!3353}
!3353 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3351, file: !2, size: 64, align: 32, elements: !3354, templateParams: !26, identifier: "cd207624308c3e385c2e67fb4241ffc", discriminator: !3364)
!3354 = !{!3355, !3360}
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3353, file: !2, baseType: !3356, size: 64, align: 32, extraData: i64 0)
!3356 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3351, file: !2, size: 64, align: 32, elements: !26, templateParams: !3357, identifier: "adc8a8c4836991b3bb7e6ba67a494fe1")
!3357 = !{!3358}
!3358 = !DITemplateTypeParameter(name: "T", type: !3359)
!3359 = !DIBasicType(name: "f32", size: 32, encoding: DW_ATE_float)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3353, file: !2, baseType: !3361, size: 64, align: 32, extraData: i64 1)
!3361 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3351, file: !2, size: 64, align: 32, elements: !3362, templateParams: !3357, identifier: "4e574d0c19de39f4ab87b007d377c1fa")
!3362 = !{!3363}
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3361, file: !2, baseType: !3359, size: 32, align: 32, offset: 32)
!3364 = !DIDerivedType(tag: DW_TAG_member, scope: !3351, file: !2, baseType: !173, size: 32, align: 32, flags: DIFlagArtificial)
!3365 = !{!3366}
!3366 = !DILocalVariable(name: "self", arg: 1, scope: !3348, file: !3099, line: 87, type: !3104)
!3367 = !DILocation(line: 87, column: 15, scope: !3348)
!3368 = !DILocation(line: 88, column: 35, scope: !3348)
!3369 = !DILocation(line: 88, column: 23, scope: !3348)
!3370 = !DILocation(line: 88, column: 9, scope: !3348)
!3371 = !DILocation(line: 89, column: 6, scope: !3348)
!3372 = distinct !DISubprogram(name: "to_f64", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$6to_f6417hfa3162fcde8d41efE", scope: !3169, file: !3099, line: 90, type: !3373, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3389)
!3373 = !DISubroutineType(types: !3374)
!3374 = !{!3375, !3104}
!3375 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<f64>", scope: !20, file: !2, size: 128, align: 64, elements: !3376, templateParams: !26, identifier: "7cf3ecb3e95297685509d54ac59b1c6d")
!3376 = !{!3377}
!3377 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3375, file: !2, size: 128, align: 64, elements: !3378, templateParams: !26, identifier: "8974dbcdaa9bf243e5e01a5e27bb1720", discriminator: !3388)
!3378 = !{!3379, !3384}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3377, file: !2, baseType: !3380, size: 128, align: 64, extraData: i64 0)
!3380 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3375, file: !2, size: 128, align: 64, elements: !26, templateParams: !3381, identifier: "cda08badc52341cf50d1337ffc59d1fa")
!3381 = !{!3382}
!3382 = !DITemplateTypeParameter(name: "T", type: !3383)
!3383 = !DIBasicType(name: "f64", size: 64, encoding: DW_ATE_float)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3377, file: !2, baseType: !3385, size: 128, align: 64, extraData: i64 1)
!3385 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3375, file: !2, size: 128, align: 64, elements: !3386, templateParams: !3381, identifier: "f2bfa15d90d1d0b8f5dcc98dc5fa7b19")
!3386 = !{!3387}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3385, file: !2, baseType: !3383, size: 64, align: 64, offset: 64)
!3388 = !DIDerivedType(tag: DW_TAG_member, scope: !3375, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!3389 = !{!3390}
!3390 = !DILocalVariable(name: "self", arg: 1, scope: !3372, file: !3099, line: 90, type: !3104)
!3391 = !DILocation(line: 90, column: 15, scope: !3372)
!3392 = !DILocation(line: 91, column: 35, scope: !3372)
!3393 = !DILocation(line: 91, column: 23, scope: !3372)
!3394 = !DILocation(line: 91, column: 9, scope: !3372)
!3395 = !DILocation(line: 92, column: 6, scope: !3372)
!3396 = distinct !DISubprogram(name: "to_i128", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$7to_i12817he019db56214c0823E", scope: !3169, file: !3099, line: 93, type: !3397, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3413)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{!3399, !3104}
!3399 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<i128>", scope: !20, file: !2, size: 192, align: 64, elements: !3400, templateParams: !26, identifier: "824ee6be6252de621efba387b17d6e7a")
!3400 = !{!3401}
!3401 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3399, file: !2, size: 192, align: 64, elements: !3402, templateParams: !26, identifier: "450453e95bd7d26fff68b60c1af9e9b2", discriminator: !3412)
!3402 = !{!3403, !3408}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3401, file: !2, baseType: !3404, size: 192, align: 64, extraData: i64 0)
!3404 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3399, file: !2, size: 192, align: 64, elements: !26, templateParams: !3405, identifier: "b4ee4ea7104c04d36a8121599bbd1ba7")
!3405 = !{!3406}
!3406 = !DITemplateTypeParameter(name: "T", type: !3407)
!3407 = !DIBasicType(name: "i128", size: 128, encoding: DW_ATE_signed)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3401, file: !2, baseType: !3409, size: 192, align: 64, extraData: i64 1)
!3409 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3399, file: !2, size: 192, align: 64, elements: !3410, templateParams: !3405, identifier: "a7fd86ed16113d8cc3f29c5508a15c1b")
!3410 = !{!3411}
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3409, file: !2, baseType: !3407, size: 128, align: 64, offset: 64)
!3412 = !DIDerivedType(tag: DW_TAG_member, scope: !3399, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!3413 = !{!3414}
!3414 = !DILocalVariable(name: "self", arg: 1, scope: !3396, file: !3099, line: 93, type: !3104)
!3415 = !DILocation(line: 93, column: 16, scope: !3396)
!3416 = !DILocation(line: 94, column: 51, scope: !3396)
!3417 = !DILocation(line: 94, column: 38, scope: !3396)
!3418 = !DILocation(line: 94, column: 23, scope: !3396)
!3419 = !DILocation(line: 94, column: 9, scope: !3396)
!3420 = !DILocation(line: 95, column: 6, scope: !3396)
!3421 = distinct !DISubprogram(name: "to_u128", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$7to_u12817h4596ff8ce2c10d02E", scope: !3169, file: !3099, line: 96, type: !3422, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3438)
!3422 = !DISubroutineType(types: !3423)
!3423 = !{!3424, !3104}
!3424 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u128>", scope: !20, file: !2, size: 192, align: 64, elements: !3425, templateParams: !26, identifier: "64e281581f826b4419802c54d02666c2")
!3425 = !{!3426}
!3426 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3424, file: !2, size: 192, align: 64, elements: !3427, templateParams: !26, identifier: "cf07da5b94942f9c56cc1170a1b75159", discriminator: !3437)
!3427 = !{!3428, !3433}
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3426, file: !2, baseType: !3429, size: 192, align: 64, extraData: i64 0)
!3429 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3424, file: !2, size: 192, align: 64, elements: !26, templateParams: !3430, identifier: "14f656da5f415453528f7e476944acbf")
!3430 = !{!3431}
!3431 = !DITemplateTypeParameter(name: "T", type: !3432)
!3432 = !DIBasicType(name: "u128", size: 128, encoding: DW_ATE_unsigned)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3426, file: !2, baseType: !3434, size: 192, align: 64, extraData: i64 1)
!3434 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3424, file: !2, size: 192, align: 64, elements: !3435, templateParams: !3430, identifier: "bdae7b9cd4558c10938997fee7ac2fc4")
!3435 = !{!3436}
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3434, file: !2, baseType: !3432, size: 128, align: 64, offset: 64)
!3437 = !DIDerivedType(tag: DW_TAG_member, scope: !3424, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!3438 = !{!3439}
!3439 = !DILocalVariable(name: "self", arg: 1, scope: !3421, file: !3099, line: 96, type: !3104)
!3440 = !DILocation(line: 96, column: 16, scope: !3421)
!3441 = !DILocation(line: 97, column: 51, scope: !3421)
!3442 = !DILocation(line: 97, column: 38, scope: !3421)
!3443 = !DILocation(line: 97, column: 23, scope: !3421)
!3444 = !DILocation(line: 97, column: 9, scope: !3421)
!3445 = !DILocation(line: 98, column: 6, scope: !3421)
!3446 = distinct !DISubprogram(name: "from_i64", linkageName: "_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8from_i6417h1c78b85aba3fc5eeE", scope: !3447, file: !3099, line: 102, type: !3448, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3450)
!3447 = !DINamespace(name: "{impl#5}", scope: !3101)
!3448 = !DISubroutineType(types: !3449)
!3449 = !{!1491, !276}
!3450 = !{!3451}
!3451 = !DILocalVariable(name: "n", arg: 1, scope: !3446, file: !3099, line: 102, type: !276)
!3452 = !DILocation(line: 102, column: 17, scope: !3446)
!3453 = !DILocation(line: 103, column: 23, scope: !3446)
!3454 = !DILocation(line: 103, column: 9, scope: !3446)
!3455 = !DILocation(line: 104, column: 6, scope: !3446)
!3456 = distinct !DISubprogram(name: "from_u64", linkageName: "_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8from_u6417hac0286a6f38c0490E", scope: !3447, file: !3099, line: 105, type: !3457, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3459)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{!1491, !54}
!3459 = !{!3460}
!3460 = !DILocalVariable(name: "n", arg: 1, scope: !3456, file: !3099, line: 105, type: !54)
!3461 = !DILocation(line: 105, column: 17, scope: !3456)
!3462 = !DILocation(line: 106, column: 23, scope: !3456)
!3463 = !DILocation(line: 106, column: 9, scope: !3456)
!3464 = !DILocation(line: 107, column: 6, scope: !3456)
!3465 = distinct !DISubprogram(name: "from_isize", linkageName: "_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$10from_isize17h075e47b91b250e51E", scope: !3447, file: !3099, line: 108, type: !3466, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3468)
!3466 = !DISubroutineType(types: !3467)
!3467 = !{!1491, !2955}
!3468 = !{!3469}
!3469 = !DILocalVariable(name: "n", arg: 1, scope: !3465, file: !3099, line: 108, type: !2955)
!3470 = !DILocation(line: 108, column: 19, scope: !3465)
!3471 = !DILocation(line: 109, column: 23, scope: !3465)
!3472 = !DILocation(line: 109, column: 9, scope: !3465)
!3473 = !DILocation(line: 110, column: 6, scope: !3465)
!3474 = distinct !DISubprogram(name: "from_i8", linkageName: "_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$7from_i817h12bf0bc69ba15603E", scope: !3447, file: !3099, line: 111, type: !3475, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3477)
!3475 = !DISubroutineType(types: !3476)
!3476 = !{!1491, !136}
!3477 = !{!3478}
!3478 = !DILocalVariable(name: "n", arg: 1, scope: !3474, file: !3099, line: 111, type: !136)
!3479 = !DILocation(line: 111, column: 16, scope: !3474)
!3480 = !DILocation(line: 112, column: 23, scope: !3474)
!3481 = !DILocation(line: 112, column: 9, scope: !3474)
!3482 = !DILocation(line: 113, column: 6, scope: !3474)
!3483 = distinct !DISubprogram(name: "from_i16", linkageName: "_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8from_i1617hce43932f3966a542E", scope: !3447, file: !3099, line: 114, type: !3484, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3486)
!3484 = !DISubroutineType(types: !3485)
!3485 = !{!1491, !3257}
!3486 = !{!3487}
!3487 = !DILocalVariable(name: "n", arg: 1, scope: !3483, file: !3099, line: 114, type: !3257)
!3488 = !DILocation(line: 114, column: 17, scope: !3483)
!3489 = !DILocation(line: 115, column: 23, scope: !3483)
!3490 = !DILocation(line: 115, column: 9, scope: !3483)
!3491 = !DILocation(line: 116, column: 6, scope: !3483)
!3492 = distinct !DISubprogram(name: "from_i32", linkageName: "_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8from_i3217hab0bfa6cf34135e6E", scope: !3447, file: !3099, line: 117, type: !3493, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3495)
!3493 = !DISubroutineType(types: !3494)
!3494 = !{!1491, !253}
!3495 = !{!3496}
!3496 = !DILocalVariable(name: "n", arg: 1, scope: !3492, file: !3099, line: 117, type: !253)
!3497 = !DILocation(line: 117, column: 17, scope: !3492)
!3498 = !DILocation(line: 118, column: 23, scope: !3492)
!3499 = !DILocation(line: 118, column: 9, scope: !3492)
!3500 = !DILocation(line: 119, column: 6, scope: !3492)
!3501 = distinct !DISubprogram(name: "from_usize", linkageName: "_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$10from_usize17h388ab638ef870dfcE", scope: !3447, file: !3099, line: 120, type: !3502, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3504)
!3502 = !DISubroutineType(types: !3503)
!3503 = !{!1491, !9}
!3504 = !{!3505}
!3505 = !DILocalVariable(name: "n", arg: 1, scope: !3501, file: !3099, line: 120, type: !9)
!3506 = !DILocation(line: 120, column: 19, scope: !3501)
!3507 = !DILocation(line: 121, column: 23, scope: !3501)
!3508 = !DILocation(line: 121, column: 9, scope: !3501)
!3509 = !DILocation(line: 122, column: 6, scope: !3501)
!3510 = distinct !DISubprogram(name: "from_u8", linkageName: "_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$7from_u817h18dfc0580027cd2fE", scope: !3447, file: !3099, line: 123, type: !3511, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3513)
!3511 = !DISubroutineType(types: !3512)
!3512 = !{!1491, !29}
!3513 = !{!3514}
!3514 = !DILocalVariable(name: "n", arg: 1, scope: !3510, file: !3099, line: 123, type: !29)
!3515 = !DILocation(line: 123, column: 16, scope: !3510)
!3516 = !DILocation(line: 124, column: 23, scope: !3510)
!3517 = !DILocation(line: 124, column: 9, scope: !3510)
!3518 = !DILocation(line: 125, column: 6, scope: !3510)
!3519 = distinct !DISubprogram(name: "from_u16", linkageName: "_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8from_u1617h0391065416554e13E", scope: !3447, file: !3099, line: 126, type: !3520, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3522)
!3520 = !DISubroutineType(types: !3521)
!3521 = !{!1491, !3263}
!3522 = !{!3523}
!3523 = !DILocalVariable(name: "n", arg: 1, scope: !3519, file: !3099, line: 126, type: !3263)
!3524 = !DILocation(line: 126, column: 17, scope: !3519)
!3525 = !DILocation(line: 127, column: 23, scope: !3519)
!3526 = !DILocation(line: 127, column: 9, scope: !3519)
!3527 = !DILocation(line: 128, column: 6, scope: !3519)
!3528 = distinct !DISubprogram(name: "from_u32", linkageName: "_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8from_u3217h90cc582233a891feE", scope: !3447, file: !3099, line: 129, type: !3529, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3531)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{!1491, !173}
!3531 = !{!3532}
!3532 = !DILocalVariable(name: "n", arg: 1, scope: !3528, file: !3099, line: 129, type: !173)
!3533 = !DILocation(line: 129, column: 17, scope: !3528)
!3534 = !DILocation(line: 130, column: 23, scope: !3528)
!3535 = !DILocation(line: 130, column: 9, scope: !3528)
!3536 = !DILocation(line: 131, column: 6, scope: !3528)
!3537 = distinct !DISubprogram(name: "from_f32", linkageName: "_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8from_f3217h446d77124bd87119E", scope: !3447, file: !3099, line: 132, type: !3538, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3540)
!3538 = !DISubroutineType(types: !3539)
!3539 = !{!1491, !3359}
!3540 = !{!3541}
!3541 = !DILocalVariable(name: "n", arg: 1, scope: !3537, file: !3099, line: 132, type: !3359)
!3542 = !DILocation(line: 132, column: 17, scope: !3537)
!3543 = !DILocation(line: 133, column: 23, scope: !3537)
!3544 = !DILocation(line: 133, column: 9, scope: !3537)
!3545 = !DILocation(line: 134, column: 6, scope: !3537)
!3546 = distinct !DISubprogram(name: "from_f64", linkageName: "_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$8from_f6417h405d983fbd52dc09E", scope: !3447, file: !3099, line: 135, type: !3547, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3549)
!3547 = !DISubroutineType(types: !3548)
!3548 = !{!1491, !3383}
!3549 = !{!3550}
!3550 = !DILocalVariable(name: "n", arg: 1, scope: !3546, file: !3099, line: 135, type: !3383)
!3551 = !DILocation(line: 135, column: 17, scope: !3546)
!3552 = !DILocation(line: 136, column: 23, scope: !3546)
!3553 = !DILocation(line: 136, column: 9, scope: !3546)
!3554 = !DILocation(line: 137, column: 6, scope: !3546)
!3555 = distinct !DISubprogram(name: "from_u128", linkageName: "_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$9from_u12817hd9c070e72081bc8cE", scope: !3447, file: !3099, line: 138, type: !3556, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3558)
!3556 = !DISubroutineType(types: !3557)
!3557 = !{!1491, !3432}
!3558 = !{!3559}
!3559 = !DILocalVariable(name: "n", arg: 1, scope: !3555, file: !3099, line: 138, type: !3432)
!3560 = !DILocation(line: 138, column: 18, scope: !3555)
!3561 = !DILocation(line: 139, column: 36, scope: !3555)
!3562 = !DILocation(line: 139, column: 23, scope: !3555)
!3563 = !DILocation(line: 139, column: 9, scope: !3555)
!3564 = !DILocation(line: 140, column: 6, scope: !3555)
!3565 = distinct !DISubprogram(name: "from_i128", linkageName: "_ZN13f128_internal9f128_impl89_$LT$impl$u20$num_traits..cast..FromPrimitive$u20$for$u20$f128_internal..f128_t..f128$GT$9from_i12817haff305b21a312c8fE", scope: !3447, file: !3099, line: 141, type: !3566, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3568)
!3566 = !DISubroutineType(types: !3567)
!3567 = !{!1491, !3407}
!3568 = !{!3569}
!3569 = !DILocalVariable(name: "n", arg: 1, scope: !3565, file: !3099, line: 141, type: !3407)
!3570 = !DILocation(line: 141, column: 18, scope: !3565)
!3571 = !DILocation(line: 142, column: 36, scope: !3565)
!3572 = !DILocation(line: 142, column: 23, scope: !3565)
!3573 = !DILocation(line: 142, column: 9, scope: !3565)
!3574 = !DILocation(line: 143, column: 6, scope: !3565)
!3575 = distinct !DISubprogram(name: "from_str_radix", linkageName: "_ZN13f128_internal9f128_impl73_$LT$impl$u20$num_traits..Num$u20$for$u20$f128_internal..f128_t..f128$GT$14from_str_radix17ha6dc7b930115e4feE", scope: !3576, file: !3099, line: 148, type: !3577, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3594)
!3576 = !DINamespace(name: "{impl#6}", scope: !3101)
!3577 = !DISubroutineType(types: !3578)
!3578 = !{!3579, !168, !173}
!3579 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<f128_internal::f128_t::f128, ()>", scope: !460, file: !2, size: 136, align: 8, elements: !3580, templateParams: !26, identifier: "20e3a09796261ddaeb53e3f09faa1883")
!3580 = !{!3581}
!3581 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3579, file: !2, size: 136, align: 8, elements: !3582, templateParams: !26, identifier: "b49139e9b62ce329930eb8a112eb06f2", discriminator: !3593)
!3582 = !{!3583, !3589}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !3581, file: !2, baseType: !3584, size: 136, align: 8, extraData: i64 0)
!3584 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !3579, file: !2, size: 136, align: 8, elements: !3585, templateParams: !3587, identifier: "3bd993ee9a8617e4d122939717acd9a0")
!3585 = !{!3586}
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3584, file: !2, baseType: !1499, size: 128, align: 8, offset: 8)
!3587 = !{!1498, !3588}
!3588 = !DITemplateTypeParameter(name: "E", type: !7)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !3581, file: !2, baseType: !3590, size: 136, align: 8, extraData: i64 1)
!3590 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !3579, file: !2, size: 136, align: 8, elements: !3591, templateParams: !3587, identifier: "eec12f5d72cd34ad89016f7bcb25579")
!3591 = !{!3592}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3590, file: !2, baseType: !7, align: 8, offset: 8)
!3593 = !DIDerivedType(tag: DW_TAG_member, scope: !3579, file: !2, baseType: !29, size: 8, align: 8, flags: DIFlagArtificial)
!3594 = !{!3595, !3596}
!3595 = !DILocalVariable(name: "_s", arg: 1, scope: !3575, file: !3099, line: 148, type: !168)
!3596 = !DILocalVariable(name: "_radix", arg: 2, scope: !3575, file: !3099, line: 148, type: !173)
!3597 = !DILocation(line: 148, column: 23, scope: !3575)
!3598 = !DILocation(line: 148, column: 33, scope: !3575)
!3599 = !DILocation(line: 149, column: 9, scope: !3575)
!3600 = distinct !DISubprogram(name: "E", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$1E17ha8ea8ebb48591d3eE", scope: !3601, file: !3099, line: 161, type: !3160, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3601 = !DINamespace(name: "{impl#8}", scope: !3101)
!3602 = !DILocation(line: 161, column: 27, scope: !3600)
!3603 = !DILocation(line: 161, column: 22, scope: !3600)
!3604 = !DILocation(line: 161, column: 126, scope: !3600)
!3605 = distinct !DISubprogram(name: "FRAC_1_PI", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$9FRAC_1_PI17h61710fd7fdbe3a74E", scope: !3601, file: !3099, line: 166, type: !3160, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3606 = !DILocation(line: 166, column: 35, scope: !3605)
!3607 = !DILocation(line: 166, column: 30, scope: !3605)
!3608 = !DILocation(line: 166, column: 134, scope: !3605)
!3609 = distinct !DISubprogram(name: "FRAC_1_SQRT_2", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$13FRAC_1_SQRT_217hd2280f09f5a10864E", scope: !3601, file: !3099, line: 171, type: !3160, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3610 = !DILocation(line: 171, column: 39, scope: !3609)
!3611 = !DILocation(line: 171, column: 34, scope: !3609)
!3612 = !DILocation(line: 171, column: 138, scope: !3609)
!3613 = distinct !DISubprogram(name: "FRAC_2_PI", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$9FRAC_2_PI17ha1fa2dfe04a89d23E", scope: !3601, file: !3099, line: 176, type: !3160, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3614 = !DILocation(line: 176, column: 35, scope: !3613)
!3615 = !DILocation(line: 176, column: 30, scope: !3613)
!3616 = !DILocation(line: 176, column: 134, scope: !3613)
!3617 = distinct !DISubprogram(name: "FRAC_2_SQRT_PI", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$14FRAC_2_SQRT_PI17h4cbb21ceb255ba1eE", scope: !3601, file: !3099, line: 181, type: !3160, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3618 = !DILocation(line: 181, column: 40, scope: !3617)
!3619 = !DILocation(line: 181, column: 35, scope: !3617)
!3620 = !DILocation(line: 181, column: 139, scope: !3617)
!3621 = distinct !DISubprogram(name: "FRAC_PI_2", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$9FRAC_PI_217hdb28c3241ffbcfb6E", scope: !3601, file: !3099, line: 186, type: !3160, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3622 = !DILocation(line: 186, column: 35, scope: !3621)
!3623 = !DILocation(line: 186, column: 30, scope: !3621)
!3624 = !DILocation(line: 186, column: 134, scope: !3621)
!3625 = distinct !DISubprogram(name: "FRAC_PI_3", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$9FRAC_PI_317hb0f3959f681b2d92E", scope: !3601, file: !3099, line: 191, type: !3160, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3626 = !DILocation(line: 191, column: 35, scope: !3625)
!3627 = !DILocation(line: 191, column: 30, scope: !3625)
!3628 = !DILocation(line: 191, column: 134, scope: !3625)
!3629 = distinct !DISubprogram(name: "FRAC_PI_4", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$9FRAC_PI_417h36e94dbb41f88258E", scope: !3601, file: !3099, line: 196, type: !3160, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3630 = !DILocation(line: 196, column: 35, scope: !3629)
!3631 = !DILocation(line: 196, column: 30, scope: !3629)
!3632 = !DILocation(line: 196, column: 134, scope: !3629)
!3633 = distinct !DISubprogram(name: "FRAC_PI_6", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$9FRAC_PI_617h356050d9d0a12813E", scope: !3601, file: !3099, line: 201, type: !3160, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3634 = !DILocation(line: 201, column: 35, scope: !3633)
!3635 = !DILocation(line: 201, column: 30, scope: !3633)
!3636 = !DILocation(line: 201, column: 134, scope: !3633)
!3637 = distinct !DISubprogram(name: "FRAC_PI_8", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$9FRAC_PI_817h8ef52dc9f4935a3fE", scope: !3601, file: !3099, line: 206, type: !3160, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3638 = !DILocation(line: 206, column: 35, scope: !3637)
!3639 = !DILocation(line: 206, column: 30, scope: !3637)
!3640 = !DILocation(line: 206, column: 134, scope: !3637)
!3641 = distinct !DISubprogram(name: "LN_10", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$5LN_1017h0d0271e64249a955E", scope: !3601, file: !3099, line: 211, type: !3160, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3642 = !DILocation(line: 211, column: 31, scope: !3641)
!3643 = !DILocation(line: 211, column: 26, scope: !3641)
!3644 = !DILocation(line: 211, column: 130, scope: !3641)
!3645 = distinct !DISubprogram(name: "LN_2", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$4LN_217h8c17141f17d1579eE", scope: !3601, file: !3099, line: 216, type: !3160, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3646 = !DILocation(line: 216, column: 30, scope: !3645)
!3647 = !DILocation(line: 216, column: 25, scope: !3645)
!3648 = !DILocation(line: 216, column: 129, scope: !3645)
!3649 = distinct !DISubprogram(name: "LOG10_E", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$7LOG10_E17h20616c6ca03dac2aE", scope: !3601, file: !3099, line: 221, type: !3160, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3650 = !DILocation(line: 221, column: 33, scope: !3649)
!3651 = !DILocation(line: 221, column: 28, scope: !3649)
!3652 = !DILocation(line: 221, column: 132, scope: !3649)
!3653 = distinct !DISubprogram(name: "LOG2_E", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$6LOG2_E17h75e19559e7d45773E", scope: !3601, file: !3099, line: 226, type: !3160, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3654 = !DILocation(line: 226, column: 32, scope: !3653)
!3655 = !DILocation(line: 226, column: 27, scope: !3653)
!3656 = !DILocation(line: 226, column: 131, scope: !3653)
!3657 = distinct !DISubprogram(name: "PI", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$2PI17he649ebbf1e5b1378E", scope: !3601, file: !3099, line: 231, type: !3160, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3658 = !DILocation(line: 231, column: 28, scope: !3657)
!3659 = !DILocation(line: 231, column: 23, scope: !3657)
!3660 = !DILocation(line: 231, column: 127, scope: !3657)
!3661 = distinct !DISubprogram(name: "SQRT_2", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$num_traits..float..FloatConst$u20$for$u20$f128_internal..f128_t..f128$GT$6SQRT_217hccf676fe74174e54E", scope: !3601, file: !3099, line: 236, type: !3160, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3662 = !DILocation(line: 236, column: 32, scope: !3661)
!3663 = !DILocation(line: 236, column: 27, scope: !3661)
!3664 = !DILocation(line: 236, column: 131, scope: !3661)
!3665 = distinct !DISubprogram(name: "nan", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3nan17h7841df5582b757caE", scope: !3666, file: !3099, line: 243, type: !3160, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3666 = !DINamespace(name: "{impl#9}", scope: !3101)
!3667 = !DILocation(line: 244, column: 9, scope: !3665)
!3668 = !DILocation(line: 245, column: 6, scope: !3665)
!3669 = distinct !DISubprogram(name: "infinity", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$8infinity17h143bfcb3f4ba3027E", scope: !3666, file: !3099, line: 247, type: !3160, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3670 = !DILocation(line: 248, column: 9, scope: !3669)
!3671 = !DILocation(line: 249, column: 6, scope: !3669)
!3672 = distinct !DISubprogram(name: "neg_infinity", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$12neg_infinity17hd9e5733ed9f34120E", scope: !3666, file: !3099, line: 251, type: !3160, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3673 = !DILocation(line: 252, column: 9, scope: !3672)
!3674 = !DILocation(line: 253, column: 6, scope: !3672)
!3675 = distinct !DISubprogram(name: "neg_zero", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$8neg_zero17h5e955291bfd24d5eE", scope: !3666, file: !3099, line: 255, type: !3160, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3676 = !DILocation(line: 256, column: 9, scope: !3675)
!3677 = !DILocation(line: 257, column: 6, scope: !3675)
!3678 = distinct !DISubprogram(name: "min_value", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$9min_value17h814a33de68f9c568E", scope: !3666, file: !3099, line: 259, type: !3160, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3679 = !DILocation(line: 260, column: 9, scope: !3678)
!3680 = !DILocation(line: 261, column: 6, scope: !3678)
!3681 = distinct !DISubprogram(name: "max_value", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$9max_value17hfce5978f0cdaa722E", scope: !3666, file: !3099, line: 263, type: !3160, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3682 = !DILocation(line: 264, column: 9, scope: !3681)
!3683 = !DILocation(line: 265, column: 6, scope: !3681)
!3684 = distinct !DISubprogram(name: "min_positive_value", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$18min_positive_value17hebae1d7504a8d679E", scope: !3666, file: !3099, line: 267, type: !3160, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !26)
!3685 = !DILocation(line: 268, column: 9, scope: !3684)
!3686 = !DILocation(line: 269, column: 6, scope: !3684)
!3687 = distinct !DISubprogram(name: "is_finite", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$9is_finite17h514ec869881acaceE", scope: !3666, file: !3099, line: 271, type: !3688, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3690)
!3688 = !DISubroutineType(types: !3689)
!3689 = !{!398, !1499}
!3690 = !{!3691}
!3691 = !DILocalVariable(name: "self", arg: 1, scope: !3687, file: !3099, line: 271, type: !1499)
!3692 = !DILocation(line: 271, column: 18, scope: !3687)
!3693 = !DILocation(line: 272, column: 10, scope: !3687)
!3694 = !DILocation(line: 272, column: 9, scope: !3687)
!3695 = !DILocation(line: 272, column: 33, scope: !3687)
!3696 = !DILocation(line: 272, column: 32, scope: !3687)
!3697 = !DILocation(line: 273, column: 6, scope: !3687)
!3698 = distinct !DISubprogram(name: "is_infinite", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$11is_infinite17hc1d32e8901a0755fE", scope: !3666, file: !3099, line: 275, type: !3688, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3699)
!3699 = !{!3700, !3701}
!3700 = !DILocalVariable(name: "self", arg: 1, scope: !3698, file: !3099, line: 275, type: !1499)
!3701 = !DILocalVariable(name: "res", scope: !3702, file: !3099, line: 278, type: !3432, align: 8)
!3702 = distinct !DILexicalBlock(scope: !3698, file: !3099, line: 278, column: 9)
!3703 = !DILocation(line: 275, column: 20, scope: !3698)
!3704 = !DILocalVariable(name: "self", arg: 1, scope: !3705, file: !3706, line: 193, type: !3104)
!3705 = distinct !DISubprogram(name: "inner_as_u128", linkageName: "_ZN13f128_internal6f128_t4f12813inner_as_u12817h6f421a3e1c94f62aE", scope: !1499, file: !3706, line: 193, type: !3707, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3709)
!3706 = !DIFile(filename: "src/f128_t.rs", directory: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/f128_internal-0.2.2", checksumkind: CSK_MD5, checksum: "eec7f5b35a3217960a2aa39a9f68e650")
!3707 = !DISubroutineType(types: !3708)
!3708 = !{!3432, !3104}
!3709 = !{!3704}
!3710 = !DILocation(line: 193, column: 33, scope: !3705, inlinedAt: !3711)
!3711 = distinct !DILocation(line: 278, column: 19, scope: !3698)
!3712 = !DILocation(line: 194, column: 51, scope: !3705, inlinedAt: !3711)
!3713 = !DILocation(line: 194, column: 18, scope: !3705, inlinedAt: !3711)
!3714 = !DILocation(line: 278, column: 19, scope: !3698)
!3715 = !DILocation(line: 278, column: 13, scope: !3702)
!3716 = !DILocation(line: 193, column: 33, scope: !3705, inlinedAt: !3717)
!3717 = distinct !DILocation(line: 279, column: 16, scope: !3702)
!3718 = !DILocation(line: 194, column: 51, scope: !3705, inlinedAt: !3717)
!3719 = !DILocation(line: 194, column: 18, scope: !3705, inlinedAt: !3717)
!3720 = !DILocation(line: 279, column: 16, scope: !3702)
!3721 = !DILocation(line: 279, column: 9, scope: !3702)
!3722 = !DILocation(line: 280, column: 6, scope: !3698)
!3723 = distinct !DISubprogram(name: "is_nan", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$6is_nan17h9ffa941bc536160eE", scope: !3666, file: !3099, line: 282, type: !3688, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3724)
!3724 = !{!3725}
!3725 = !DILocalVariable(name: "self", arg: 1, scope: !3723, file: !3099, line: 282, type: !1499)
!3726 = !DILocation(line: 282, column: 15, scope: !3723)
!3727 = !DILocation(line: 193, column: 33, scope: !3705, inlinedAt: !3728)
!3728 = distinct !DILocation(line: 283, column: 10, scope: !3723)
!3729 = !DILocation(line: 194, column: 51, scope: !3705, inlinedAt: !3728)
!3730 = !DILocation(line: 194, column: 18, scope: !3705, inlinedAt: !3728)
!3731 = !DILocation(line: 283, column: 10, scope: !3723)
!3732 = !DILocation(line: 283, column: 9, scope: !3723)
!3733 = !DILocation(line: 193, column: 33, scope: !3705, inlinedAt: !3734)
!3734 = distinct !DILocation(line: 284, column: 15, scope: !3723)
!3735 = !DILocation(line: 194, column: 51, scope: !3705, inlinedAt: !3734)
!3736 = !DILocation(line: 194, column: 18, scope: !3705, inlinedAt: !3734)
!3737 = !DILocation(line: 284, column: 15, scope: !3723)
!3738 = !DILocation(line: 285, column: 6, scope: !3723)
!3739 = distinct !DISubprogram(name: "is_normal", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$9is_normal17h057f4785ab1edaefE", scope: !3666, file: !3099, line: 292, type: !3688, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3740)
!3740 = !{!3741, !3742}
!3741 = !DILocalVariable(name: "self", arg: 1, scope: !3739, file: !3099, line: 292, type: !1499)
!3742 = !DILocalVariable(name: "exp_bits", scope: !3743, file: !3099, line: 294, type: !173, align: 4)
!3743 = distinct !DILexicalBlock(scope: !3739, file: !3099, line: 294, column: 9)
!3744 = !DILocation(line: 292, column: 18, scope: !3739)
!3745 = !DILocation(line: 294, column: 24, scope: !3739)
!3746 = !DILocation(line: 294, column: 13, scope: !3743)
!3747 = !DILocation(line: 193, column: 33, scope: !3705, inlinedAt: !3748)
!3748 = distinct !DILocation(line: 295, column: 9, scope: !3743)
!3749 = !DILocation(line: 194, column: 51, scope: !3705, inlinedAt: !3748)
!3750 = !DILocation(line: 194, column: 18, scope: !3705, inlinedAt: !3748)
!3751 = !DILocation(line: 295, column: 9, scope: !3743)
!3752 = !DILocation(line: 295, column: 38, scope: !3743)
!3753 = !DILocation(line: 295, column: 56, scope: !3743)
!3754 = !DILocation(line: 296, column: 6, scope: !3739)
!3755 = distinct !DISubprogram(name: "classify", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$8classify17h35ada12151f97b7dE", scope: !3666, file: !3099, line: 298, type: !3756, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3758)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{!126, !1499}
!3758 = !{!3759, !3760}
!3759 = !DILocalVariable(name: "self", arg: 1, scope: !3755, file: !3099, line: 298, type: !1499)
!3760 = !DILocalVariable(name: "x", scope: !3761, file: !3099, line: 299, type: !3762, align: 1)
!3761 = distinct !DILexicalBlock(scope: !3755, file: !3099, line: 299, column: 9)
!3762 = !DICompositeType(tag: DW_TAG_structure_type, name: "(bool, bool, bool)", file: !2, size: 24, align: 8, elements: !3763, templateParams: !26, identifier: "a93cb83c859ddc01624ec782b4ff636")
!3763 = !{!3764, !3765, !3766}
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3762, file: !2, baseType: !398, size: 8, align: 8)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !3762, file: !2, baseType: !398, size: 8, align: 8, offset: 8)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "__2", scope: !3762, file: !2, baseType: !398, size: 8, align: 8, offset: 16)
!3767 = !DILocation(line: 298, column: 17, scope: !3755)
!3768 = !DILocation(line: 299, column: 13, scope: !3761)
!3769 = !DILocation(line: 299, column: 18, scope: !3755)
!3770 = !DILocation(line: 299, column: 36, scope: !3755)
!3771 = !DILocation(line: 299, column: 54, scope: !3755)
!3772 = !DILocation(line: 299, column: 17, scope: !3755)
!3773 = !DILocation(line: 300, column: 9, scope: !3761)
!3774 = !DILocation(line: 301, column: 36, scope: !3761)
!3775 = !DILocation(line: 306, column: 6, scope: !3755)
!3776 = !{i8 0, i8 5}
!3777 = !DILocation(line: 302, column: 37, scope: !3761)
!3778 = !DILocation(line: 303, column: 29, scope: !3761)
!3779 = !DILocation(line: 304, column: 30, scope: !3761)
!3780 = !DILocation(line: 300, column: 15, scope: !3761)
!3781 = distinct !DISubprogram(name: "floor", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5floor17hb7383015855688baE", scope: !3666, file: !3099, line: 308, type: !3782, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3784)
!3782 = !DISubroutineType(types: !3783)
!3783 = !{!1499, !1499}
!3784 = !{!3785}
!3785 = !DILocalVariable(name: "self", arg: 1, scope: !3781, file: !3099, line: 308, type: !1499)
!3786 = !DILocation(line: 308, column: 14, scope: !3781)
!3787 = !DILocation(line: 309, column: 27, scope: !3781)
!3788 = !DILocation(line: 309, column: 18, scope: !3781)
!3789 = !DILocation(line: 310, column: 6, scope: !3781)
!3790 = distinct !DISubprogram(name: "ceil", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4ceil17hcfc4eae11b94c21dE", scope: !3666, file: !3099, line: 312, type: !3782, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3791)
!3791 = !{!3792}
!3792 = !DILocalVariable(name: "self", arg: 1, scope: !3790, file: !3099, line: 312, type: !1499)
!3793 = !DILocation(line: 312, column: 13, scope: !3790)
!3794 = !DILocation(line: 313, column: 26, scope: !3790)
!3795 = !DILocation(line: 313, column: 18, scope: !3790)
!3796 = !DILocation(line: 314, column: 6, scope: !3790)
!3797 = distinct !DISubprogram(name: "round", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5round17h95e12bbddccf3f32E", scope: !3666, file: !3099, line: 316, type: !3782, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3798)
!3798 = !{!3799}
!3799 = !DILocalVariable(name: "self", arg: 1, scope: !3797, file: !3099, line: 316, type: !1499)
!3800 = !DILocation(line: 316, column: 14, scope: !3797)
!3801 = !DILocation(line: 317, column: 27, scope: !3797)
!3802 = !DILocation(line: 317, column: 18, scope: !3797)
!3803 = !DILocation(line: 318, column: 6, scope: !3797)
!3804 = distinct !DISubprogram(name: "trunc", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5trunc17hd2b69f9f3278d777E", scope: !3666, file: !3099, line: 320, type: !3782, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3805)
!3805 = !{!3806}
!3806 = !DILocalVariable(name: "self", arg: 1, scope: !3804, file: !3099, line: 320, type: !1499)
!3807 = !DILocation(line: 320, column: 14, scope: !3804)
!3808 = !DILocation(line: 321, column: 27, scope: !3804)
!3809 = !DILocation(line: 321, column: 18, scope: !3804)
!3810 = !DILocation(line: 322, column: 6, scope: !3804)
!3811 = distinct !DISubprogram(name: "fract", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5fract17h6b2d6a02f3cc3d39E", scope: !3666, file: !3099, line: 324, type: !3782, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3812)
!3812 = !{!3813, !3814}
!3813 = !DILocalVariable(name: "self", arg: 1, scope: !3811, file: !3099, line: 324, type: !1499)
!3814 = !DILocalVariable(name: "x", scope: !3815, file: !3099, line: 325, type: !253, align: 4)
!3815 = distinct !DILexicalBlock(scope: !3811, file: !3099, line: 325, column: 9)
!3816 = !DILocation(line: 324, column: 14, scope: !3811)
!3817 = !DILocation(line: 325, column: 13, scope: !3815)
!3818 = !DILocation(line: 325, column: 28, scope: !3811)
!3819 = !DILocation(line: 326, column: 27, scope: !3815)
!3820 = !DILocation(line: 326, column: 18, scope: !3815)
!3821 = !DILocation(line: 327, column: 6, scope: !3811)
!3822 = distinct !DISubprogram(name: "abs", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3abs17h0a2a4ce13a36e709E", scope: !3666, file: !3099, line: 335, type: !3782, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3823)
!3823 = !{!3824}
!3824 = !DILocalVariable(name: "self", arg: 1, scope: !3822, file: !3099, line: 335, type: !1499)
!3825 = !DILocation(line: 335, column: 12, scope: !3822)
!3826 = !DILocation(line: 336, column: 9, scope: !3822)
!3827 = !DILocation(line: 337, column: 9, scope: !3822)
!3828 = !DILocation(line: 338, column: 6, scope: !3822)
!3829 = distinct !DISubprogram(name: "signum", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$6signum17hc417a441e7d77aa7E", scope: !3666, file: !3099, line: 340, type: !3782, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3830)
!3830 = !{!3831}
!3831 = !DILocalVariable(name: "self", arg: 1, scope: !3829, file: !3099, line: 340, type: !1499)
!3832 = !DILocation(line: 340, column: 15, scope: !3829)
!3833 = !DILocation(line: 341, column: 12, scope: !3829)
!3834 = !DILocation(line: 344, column: 16, scope: !3829)
!3835 = !DILocation(line: 342, column: 20, scope: !3829)
!3836 = !DILocation(line: 350, column: 6, scope: !3829)
!3837 = !DILocation(line: 347, column: 17, scope: !3829)
!3838 = !DILocation(line: 345, column: 17, scope: !3829)
!3839 = !DILocation(line: 344, column: 13, scope: !3829)
!3840 = distinct !DISubprogram(name: "is_sign_positive", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$16is_sign_positive17h3a00f4b008e30b09E", scope: !3666, file: !3099, line: 384, type: !3688, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3841)
!3841 = !{!3842}
!3842 = !DILocalVariable(name: "self", arg: 1, scope: !3840, file: !3099, line: 384, type: !1499)
!3843 = !DILocation(line: 384, column: 25, scope: !3840)
!3844 = !DILocation(line: 385, column: 15, scope: !3840)
!3845 = !DILocation(line: 385, column: 9, scope: !3840)
!3846 = !DILocation(line: 388, column: 18, scope: !3840)
!3847 = !DILocation(line: 386, column: 18, scope: !3840)
!3848 = !DILocation(line: 387, column: 21, scope: !3840)
!3849 = !DILocation(line: 390, column: 6, scope: !3840)
!3850 = distinct !DISubprogram(name: "mul_add", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$7mul_add17hd3134a8c746b338cE", scope: !3666, file: !3099, line: 392, type: !3851, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3853)
!3851 = !DISubroutineType(types: !3852)
!3852 = !{!1499, !1499, !1499, !1499}
!3853 = !{!3854, !3855, !3856}
!3854 = !DILocalVariable(name: "self", arg: 1, scope: !3850, file: !3099, line: 392, type: !1499)
!3855 = !DILocalVariable(name: "a", arg: 2, scope: !3850, file: !3099, line: 392, type: !1499)
!3856 = !DILocalVariable(name: "b", arg: 3, scope: !3850, file: !3099, line: 392, type: !1499)
!3857 = !DILocation(line: 392, column: 16, scope: !3850)
!3858 = !DILocation(line: 392, column: 22, scope: !3850)
!3859 = !DILocation(line: 392, column: 31, scope: !3850)
!3860 = !DILocation(line: 393, column: 25, scope: !3850)
!3861 = !DILocation(line: 393, column: 31, scope: !3850)
!3862 = !DILocation(line: 393, column: 34, scope: !3850)
!3863 = !DILocation(line: 393, column: 18, scope: !3850)
!3864 = !DILocation(line: 394, column: 6, scope: !3850)
!3865 = distinct !DISubprogram(name: "recip", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5recip17hfbfc7661aea573caE", scope: !3666, file: !3099, line: 396, type: !3782, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3866)
!3866 = !{!3867}
!3867 = !DILocalVariable(name: "self", arg: 1, scope: !3865, file: !3099, line: 396, type: !1499)
!3868 = !DILocation(line: 396, column: 14, scope: !3865)
!3869 = !DILocation(line: 397, column: 21, scope: !3865)
!3870 = !DILocation(line: 397, column: 9, scope: !3865)
!3871 = !DILocation(line: 398, column: 6, scope: !3865)
!3872 = distinct !DISubprogram(name: "powi", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4powi17h2aa002d93846b6b6E", scope: !3666, file: !3099, line: 400, type: !3873, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3875)
!3873 = !DISubroutineType(types: !3874)
!3874 = !{!1499, !1499, !253}
!3875 = !{!3876, !3877, !3878, !3880, !3882}
!3876 = !DILocalVariable(name: "self", arg: 1, scope: !3872, file: !3099, line: 400, type: !1499)
!3877 = !DILocalVariable(name: "n", arg: 2, scope: !3872, file: !3099, line: 400, type: !253)
!3878 = !DILocalVariable(name: "i", scope: !3879, file: !3099, line: 401, type: !1499, align: 1)
!3879 = distinct !DILexicalBlock(scope: !3872, file: !3099, line: 401, column: 9)
!3880 = !DILocalVariable(name: "iter", scope: !3881, file: !3099, line: 406, type: !1114, align: 8)
!3881 = distinct !DILexicalBlock(scope: !3879, file: !3099, line: 406, column: 13)
!3882 = !DILocalVariable(name: "iter", scope: !3883, file: !3099, line: 410, type: !1142, align: 4)
!3883 = distinct !DILexicalBlock(scope: !3879, file: !3099, line: 410, column: 13)
!3884 = !DILocation(line: 400, column: 13, scope: !3872)
!3885 = !DILocation(line: 400, column: 19, scope: !3872)
!3886 = !DILocation(line: 401, column: 13, scope: !3879)
!3887 = !DILocation(line: 406, column: 22, scope: !3881)
!3888 = !DILocation(line: 410, column: 22, scope: !3883)
!3889 = !DILocation(line: 401, column: 21, scope: !3872)
!3890 = !DILocation(line: 402, column: 12, scope: !3879)
!3891 = !DILocation(line: 403, column: 20, scope: !3879)
!3892 = !DILocation(line: 415, column: 6, scope: !3872)
!3893 = !DILocation(line: 405, column: 12, scope: !3879)
!3894 = !DILocation(line: 410, column: 22, scope: !3879)
!3895 = !DILocation(line: 406, column: 22, scope: !3879)
!3896 = !DILocation(line: 406, column: 13, scope: !3881)
!3897 = !DILocation(line: 414, column: 9, scope: !3879)
!3898 = !DILocation(line: 407, column: 22, scope: !3881)
!3899 = !DILocation(line: 407, column: 17, scope: !3881)
!3900 = !DILocation(line: 410, column: 13, scope: !3883)
!3901 = !DILocation(line: 411, column: 22, scope: !3883)
!3902 = !DILocation(line: 411, column: 17, scope: !3883)
!3903 = distinct !DISubprogram(name: "powf", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4powf17h459b9509ea339f35E", scope: !3666, file: !3099, line: 417, type: !3904, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3906)
!3904 = !DISubroutineType(types: !3905)
!3905 = !{!1499, !1499, !1499}
!3906 = !{!3907, !3908}
!3907 = !DILocalVariable(name: "self", arg: 1, scope: !3903, file: !3099, line: 417, type: !1499)
!3908 = !DILocalVariable(name: "n", arg: 2, scope: !3903, file: !3099, line: 417, type: !1499)
!3909 = !DILocation(line: 417, column: 13, scope: !3903)
!3910 = !DILocation(line: 417, column: 19, scope: !3903)
!3911 = !DILocation(line: 418, column: 25, scope: !3903)
!3912 = !DILocation(line: 418, column: 31, scope: !3903)
!3913 = !DILocation(line: 418, column: 18, scope: !3903)
!3914 = !DILocation(line: 419, column: 6, scope: !3903)
!3915 = distinct !DISubprogram(name: "sqrt", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4sqrt17ha2692d021e03e427E", scope: !3666, file: !3099, line: 421, type: !3782, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3916)
!3916 = !{!3917}
!3917 = !DILocalVariable(name: "self", arg: 1, scope: !3915, file: !3099, line: 421, type: !1499)
!3918 = !DILocation(line: 421, column: 13, scope: !3915)
!3919 = !DILocation(line: 422, column: 26, scope: !3915)
!3920 = !DILocation(line: 422, column: 18, scope: !3915)
!3921 = !DILocation(line: 423, column: 6, scope: !3915)
!3922 = distinct !DISubprogram(name: "exp", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3exp17hf73abe3fc12e4606E", scope: !3666, file: !3099, line: 425, type: !3782, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3923)
!3923 = !{!3924}
!3924 = !DILocalVariable(name: "self", arg: 1, scope: !3922, file: !3099, line: 425, type: !1499)
!3925 = !DILocation(line: 425, column: 12, scope: !3922)
!3926 = !DILocation(line: 426, column: 25, scope: !3922)
!3927 = !DILocation(line: 426, column: 18, scope: !3922)
!3928 = !DILocation(line: 427, column: 6, scope: !3922)
!3929 = distinct !DISubprogram(name: "exp2", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4exp217hd44edf77565ffd0bE", scope: !3666, file: !3099, line: 429, type: !3782, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3930)
!3930 = !{!3931}
!3931 = !DILocalVariable(name: "self", arg: 1, scope: !3929, file: !3099, line: 429, type: !1499)
!3932 = !DILocation(line: 429, column: 13, scope: !3929)
!3933 = !DILocation(line: 431, column: 22, scope: !3929)
!3934 = !DILocation(line: 431, column: 9, scope: !3929)
!3935 = !DILocation(line: 431, column: 54, scope: !3929)
!3936 = !DILocation(line: 432, column: 6, scope: !3929)
!3937 = distinct !DISubprogram(name: "ln", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$2ln17h0d31451d0b7e071eE", scope: !3666, file: !3099, line: 434, type: !3782, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3938)
!3938 = !{!3939}
!3939 = !DILocalVariable(name: "self", arg: 1, scope: !3937, file: !3099, line: 434, type: !1499)
!3940 = !DILocation(line: 434, column: 11, scope: !3937)
!3941 = !DILocation(line: 435, column: 25, scope: !3937)
!3942 = !DILocation(line: 435, column: 18, scope: !3937)
!3943 = !DILocation(line: 436, column: 6, scope: !3937)
!3944 = distinct !DISubprogram(name: "log", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3log17h0db57e4c362f4ef4E", scope: !3666, file: !3099, line: 438, type: !3904, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3945)
!3945 = !{!3946, !3947, !3948, !3950}
!3946 = !DILocalVariable(name: "self", arg: 1, scope: !3944, file: !3099, line: 438, type: !1499)
!3947 = !DILocalVariable(name: "base", arg: 2, scope: !3944, file: !3099, line: 438, type: !1499)
!3948 = !DILocalVariable(name: "numr", scope: !3949, file: !3099, line: 440, type: !1499, align: 1)
!3949 = distinct !DILexicalBlock(scope: !3944, file: !3099, line: 440, column: 9)
!3950 = !DILocalVariable(name: "denm", scope: !3951, file: !3099, line: 441, type: !1499, align: 1)
!3951 = distinct !DILexicalBlock(scope: !3949, file: !3099, line: 441, column: 9)
!3952 = !DILocation(line: 438, column: 12, scope: !3944)
!3953 = !DILocation(line: 438, column: 18, scope: !3944)
!3954 = !DILocation(line: 440, column: 13, scope: !3949)
!3955 = !DILocation(line: 441, column: 13, scope: !3951)
!3956 = !DILocation(line: 440, column: 20, scope: !3944)
!3957 = !DILocation(line: 441, column: 20, scope: !3949)
!3958 = !DILocation(line: 442, column: 9, scope: !3951)
!3959 = !DILocation(line: 442, column: 16, scope: !3951)
!3960 = !DILocation(line: 443, column: 6, scope: !3944)
!3961 = distinct !DISubprogram(name: "log2", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4log217hc7c04a0d11ed539bE", scope: !3666, file: !3099, line: 445, type: !3782, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3962)
!3962 = !{!3963}
!3963 = !DILocalVariable(name: "self", arg: 1, scope: !3961, file: !3099, line: 445, type: !1499)
!3964 = !DILocation(line: 445, column: 13, scope: !3961)
!3965 = !DILocation(line: 446, column: 26, scope: !3961)
!3966 = !DILocation(line: 446, column: 18, scope: !3961)
!3967 = !DILocation(line: 447, column: 6, scope: !3961)
!3968 = distinct !DISubprogram(name: "log10", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5log1017h4d2eda8116a83d44E", scope: !3666, file: !3099, line: 449, type: !3782, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3969)
!3969 = !{!3970}
!3970 = !DILocalVariable(name: "self", arg: 1, scope: !3968, file: !3099, line: 449, type: !1499)
!3971 = !DILocation(line: 449, column: 14, scope: !3968)
!3972 = !DILocation(line: 450, column: 27, scope: !3968)
!3973 = !DILocation(line: 450, column: 18, scope: !3968)
!3974 = !DILocation(line: 451, column: 6, scope: !3968)
!3975 = distinct !DISubprogram(name: "max", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3max17h5236e0bc9ac53512E", scope: !3666, file: !3099, line: 453, type: !3904, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3976)
!3976 = !{!3977, !3978, !3979, !3981}
!3977 = !DILocalVariable(name: "self", arg: 1, scope: !3975, file: !3099, line: 453, type: !1499)
!3978 = !DILocalVariable(name: "other", arg: 2, scope: !3975, file: !3099, line: 453, type: !1499)
!3979 = !DILocalVariable(name: "a", scope: !3980, file: !3099, line: 455, type: !3407, align: 8)
!3980 = distinct !DILexicalBlock(scope: !3975, file: !3099, line: 455, column: 13)
!3981 = !DILocalVariable(name: "b", scope: !3982, file: !3099, line: 456, type: !3407, align: 8)
!3982 = distinct !DILexicalBlock(scope: !3980, file: !3099, line: 456, column: 13)
!3983 = !DILocation(line: 453, column: 12, scope: !3975)
!3984 = !DILocation(line: 453, column: 18, scope: !3975)
!3985 = !DILocation(line: 455, column: 50, scope: !3975)
!3986 = !DILocation(line: 455, column: 21, scope: !3975)
!3987 = !DILocation(line: 455, column: 17, scope: !3980)
!3988 = !DILocation(line: 456, column: 50, scope: !3980)
!3989 = !DILocation(line: 456, column: 21, scope: !3980)
!3990 = !DILocation(line: 456, column: 17, scope: !3982)
!3991 = !DILocation(line: 457, column: 45, scope: !3982)
!3992 = !DILocation(line: 457, column: 64, scope: !3982)
!3993 = !DILocation(line: 457, column: 42, scope: !3982)
!3994 = !DILocation(line: 457, column: 53, scope: !3982)
!3995 = !DILocation(line: 457, column: 13, scope: !3982)
!3996 = !DILocation(line: 459, column: 6, scope: !3975)
!3997 = distinct !DISubprogram(name: "min", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3min17h09717e0510d45688E", scope: !3666, file: !3099, line: 461, type: !3904, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !3998)
!3998 = !{!3999, !4000, !4001, !4003}
!3999 = !DILocalVariable(name: "self", arg: 1, scope: !3997, file: !3099, line: 461, type: !1499)
!4000 = !DILocalVariable(name: "other", arg: 2, scope: !3997, file: !3099, line: 461, type: !1499)
!4001 = !DILocalVariable(name: "a", scope: !4002, file: !3099, line: 463, type: !3407, align: 8)
!4002 = distinct !DILexicalBlock(scope: !3997, file: !3099, line: 463, column: 13)
!4003 = !DILocalVariable(name: "b", scope: !4004, file: !3099, line: 464, type: !3407, align: 8)
!4004 = distinct !DILexicalBlock(scope: !4002, file: !3099, line: 464, column: 13)
!4005 = !DILocation(line: 461, column: 12, scope: !3997)
!4006 = !DILocation(line: 461, column: 18, scope: !3997)
!4007 = !DILocation(line: 463, column: 50, scope: !3997)
!4008 = !DILocation(line: 463, column: 21, scope: !3997)
!4009 = !DILocation(line: 463, column: 17, scope: !4002)
!4010 = !DILocation(line: 464, column: 50, scope: !4002)
!4011 = !DILocation(line: 464, column: 21, scope: !4002)
!4012 = !DILocation(line: 464, column: 17, scope: !4004)
!4013 = !DILocation(line: 465, column: 45, scope: !4004)
!4014 = !DILocation(line: 465, column: 64, scope: !4004)
!4015 = !DILocation(line: 465, column: 42, scope: !4004)
!4016 = !DILocation(line: 465, column: 53, scope: !4004)
!4017 = !DILocation(line: 465, column: 13, scope: !4004)
!4018 = !DILocation(line: 467, column: 6, scope: !3997)
!4019 = distinct !DISubprogram(name: "abs_sub", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$7abs_sub17h3d7ad60d378837a9E", scope: !3666, file: !3099, line: 469, type: !3904, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4020)
!4020 = !{!4021, !4022}
!4021 = !DILocalVariable(name: "self", arg: 1, scope: !4019, file: !3099, line: 469, type: !1499)
!4022 = !DILocalVariable(name: "other", arg: 2, scope: !4019, file: !3099, line: 469, type: !1499)
!4023 = !DILocation(line: 469, column: 16, scope: !4019)
!4024 = !DILocation(line: 469, column: 22, scope: !4019)
!4025 = !DILocation(line: 470, column: 10, scope: !4019)
!4026 = !DILocation(line: 470, column: 17, scope: !4019)
!4027 = !DILocation(line: 470, column: 9, scope: !4019)
!4028 = !DILocation(line: 471, column: 6, scope: !4019)
!4029 = distinct !DISubprogram(name: "cbrt", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4cbrt17h8c637a1d211002d9E", scope: !3666, file: !3099, line: 473, type: !3782, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4030)
!4030 = !{!4031}
!4031 = !DILocalVariable(name: "self", arg: 1, scope: !4029, file: !3099, line: 473, type: !1499)
!4032 = !DILocation(line: 473, column: 13, scope: !4029)
!4033 = !DILocation(line: 474, column: 26, scope: !4029)
!4034 = !DILocation(line: 474, column: 18, scope: !4029)
!4035 = !DILocation(line: 475, column: 6, scope: !4029)
!4036 = distinct !DISubprogram(name: "hypot", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5hypot17h0d37e92ae249db61E", scope: !3666, file: !3099, line: 477, type: !3904, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4037)
!4037 = !{!4038, !4039}
!4038 = !DILocalVariable(name: "self", arg: 1, scope: !4036, file: !3099, line: 477, type: !1499)
!4039 = !DILocalVariable(name: "other", arg: 2, scope: !4036, file: !3099, line: 477, type: !1499)
!4040 = !DILocation(line: 477, column: 14, scope: !4036)
!4041 = !DILocation(line: 477, column: 20, scope: !4036)
!4042 = !DILocation(line: 478, column: 27, scope: !4036)
!4043 = !DILocation(line: 478, column: 33, scope: !4036)
!4044 = !DILocation(line: 478, column: 18, scope: !4036)
!4045 = !DILocation(line: 479, column: 6, scope: !4036)
!4046 = distinct !DISubprogram(name: "sin", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3sin17hf811bf06d209b841E", scope: !3666, file: !3099, line: 481, type: !3782, scopeLine: 481, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4047)
!4047 = !{!4048}
!4048 = !DILocalVariable(name: "self", arg: 1, scope: !4046, file: !3099, line: 481, type: !1499)
!4049 = !DILocation(line: 481, column: 12, scope: !4046)
!4050 = !DILocation(line: 482, column: 25, scope: !4046)
!4051 = !DILocation(line: 482, column: 18, scope: !4046)
!4052 = !DILocation(line: 483, column: 6, scope: !4046)
!4053 = distinct !DISubprogram(name: "cos", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3cos17hfb45880dea05706eE", scope: !3666, file: !3099, line: 485, type: !3782, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4054)
!4054 = !{!4055}
!4055 = !DILocalVariable(name: "self", arg: 1, scope: !4053, file: !3099, line: 485, type: !1499)
!4056 = !DILocation(line: 485, column: 12, scope: !4053)
!4057 = !DILocation(line: 486, column: 25, scope: !4053)
!4058 = !DILocation(line: 486, column: 18, scope: !4053)
!4059 = !DILocation(line: 487, column: 6, scope: !4053)
!4060 = distinct !DISubprogram(name: "tan", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$3tan17hdb542bc68ca237b7E", scope: !3666, file: !3099, line: 489, type: !3782, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4061)
!4061 = !{!4062}
!4062 = !DILocalVariable(name: "self", arg: 1, scope: !4060, file: !3099, line: 489, type: !1499)
!4063 = !DILocation(line: 489, column: 12, scope: !4060)
!4064 = !DILocation(line: 490, column: 25, scope: !4060)
!4065 = !DILocation(line: 490, column: 18, scope: !4060)
!4066 = !DILocation(line: 491, column: 6, scope: !4060)
!4067 = distinct !DISubprogram(name: "asin", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4asin17ha845703df54690abE", scope: !3666, file: !3099, line: 493, type: !3782, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4068)
!4068 = !{!4069}
!4069 = !DILocalVariable(name: "self", arg: 1, scope: !4067, file: !3099, line: 493, type: !1499)
!4070 = !DILocation(line: 493, column: 13, scope: !4067)
!4071 = !DILocation(line: 494, column: 26, scope: !4067)
!4072 = !DILocation(line: 494, column: 18, scope: !4067)
!4073 = !DILocation(line: 495, column: 6, scope: !4067)
!4074 = distinct !DISubprogram(name: "acos", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4acos17h1ba413df410d7458E", scope: !3666, file: !3099, line: 497, type: !3782, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4075)
!4075 = !{!4076}
!4076 = !DILocalVariable(name: "self", arg: 1, scope: !4074, file: !3099, line: 497, type: !1499)
!4077 = !DILocation(line: 497, column: 13, scope: !4074)
!4078 = !DILocation(line: 498, column: 26, scope: !4074)
!4079 = !DILocation(line: 498, column: 18, scope: !4074)
!4080 = !DILocation(line: 499, column: 6, scope: !4074)
!4081 = distinct !DISubprogram(name: "atan", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4atan17h47b3d890455ebc28E", scope: !3666, file: !3099, line: 501, type: !3782, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4082)
!4082 = !{!4083}
!4083 = !DILocalVariable(name: "self", arg: 1, scope: !4081, file: !3099, line: 501, type: !1499)
!4084 = !DILocation(line: 501, column: 13, scope: !4081)
!4085 = !DILocation(line: 502, column: 26, scope: !4081)
!4086 = !DILocation(line: 502, column: 18, scope: !4081)
!4087 = !DILocation(line: 503, column: 6, scope: !4081)
!4088 = distinct !DISubprogram(name: "atan2", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5atan217h9533c437e646dd40E", scope: !3666, file: !3099, line: 505, type: !3904, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4089)
!4089 = !{!4090, !4091}
!4090 = !DILocalVariable(name: "self", arg: 1, scope: !4088, file: !3099, line: 505, type: !1499)
!4091 = !DILocalVariable(name: "other", arg: 2, scope: !4088, file: !3099, line: 505, type: !1499)
!4092 = !DILocation(line: 505, column: 14, scope: !4088)
!4093 = !DILocation(line: 505, column: 20, scope: !4088)
!4094 = !DILocation(line: 506, column: 27, scope: !4088)
!4095 = !DILocation(line: 506, column: 33, scope: !4088)
!4096 = !DILocation(line: 506, column: 18, scope: !4088)
!4097 = !DILocation(line: 507, column: 6, scope: !4088)
!4098 = distinct !DISubprogram(name: "sin_cos", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$7sin_cos17h5b413e6528b1b9eeE", scope: !3666, file: !3099, line: 509, type: !4099, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4105)
!4099 = !DISubroutineType(types: !4100)
!4100 = !{!4101, !1499}
!4101 = !DICompositeType(tag: DW_TAG_structure_type, name: "(f128_internal::f128_t::f128, f128_internal::f128_t::f128)", file: !2, size: 256, align: 8, elements: !4102, templateParams: !26, identifier: "22b29d461b0a13faa2a25e3ccf8a2970")
!4102 = !{!4103, !4104}
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4101, file: !2, baseType: !1499, size: 128, align: 8)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !4101, file: !2, baseType: !1499, size: 128, align: 8, offset: 128)
!4105 = !{!4106}
!4106 = !DILocalVariable(name: "self", arg: 1, scope: !4098, file: !3099, line: 509, type: !1499)
!4107 = !DILocation(line: 509, column: 16, scope: !4098)
!4108 = !DILocation(line: 510, column: 10, scope: !4098)
!4109 = !DILocation(line: 510, column: 22, scope: !4098)
!4110 = !DILocation(line: 510, column: 9, scope: !4098)
!4111 = !DILocation(line: 511, column: 6, scope: !4098)
!4112 = distinct !DISubprogram(name: "exp_m1", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$6exp_m117h82b81ce9bea1a15bE", scope: !3666, file: !3099, line: 513, type: !3782, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4113)
!4113 = !{!4114}
!4114 = !DILocalVariable(name: "self", arg: 1, scope: !4112, file: !3099, line: 513, type: !1499)
!4115 = !DILocation(line: 513, column: 15, scope: !4112)
!4116 = !DILocation(line: 514, column: 27, scope: !4112)
!4117 = !DILocation(line: 514, column: 18, scope: !4112)
!4118 = !DILocation(line: 515, column: 6, scope: !4112)
!4119 = distinct !DISubprogram(name: "ln_1p", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5ln_1p17hcf0e618eea82bcd6E", scope: !3666, file: !3099, line: 517, type: !3782, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4120)
!4120 = !{!4121}
!4121 = !DILocalVariable(name: "self", arg: 1, scope: !4119, file: !3099, line: 517, type: !1499)
!4122 = !DILocation(line: 517, column: 14, scope: !4119)
!4123 = !DILocation(line: 518, column: 27, scope: !4119)
!4124 = !DILocation(line: 518, column: 18, scope: !4119)
!4125 = !DILocation(line: 519, column: 6, scope: !4119)
!4126 = distinct !DISubprogram(name: "sinh", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4sinh17h5adabc10dce7788bE", scope: !3666, file: !3099, line: 521, type: !3782, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4127)
!4127 = !{!4128}
!4128 = !DILocalVariable(name: "self", arg: 1, scope: !4126, file: !3099, line: 521, type: !1499)
!4129 = !DILocation(line: 521, column: 13, scope: !4126)
!4130 = !DILocation(line: 522, column: 26, scope: !4126)
!4131 = !DILocation(line: 522, column: 18, scope: !4126)
!4132 = !DILocation(line: 523, column: 6, scope: !4126)
!4133 = distinct !DISubprogram(name: "cosh", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4cosh17h3759c11d162a702fE", scope: !3666, file: !3099, line: 525, type: !3782, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4134)
!4134 = !{!4135}
!4135 = !DILocalVariable(name: "self", arg: 1, scope: !4133, file: !3099, line: 525, type: !1499)
!4136 = !DILocation(line: 525, column: 13, scope: !4133)
!4137 = !DILocation(line: 526, column: 26, scope: !4133)
!4138 = !DILocation(line: 526, column: 18, scope: !4133)
!4139 = !DILocation(line: 527, column: 6, scope: !4133)
!4140 = distinct !DISubprogram(name: "tanh", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$4tanh17h67ccd297e54cdbddE", scope: !3666, file: !3099, line: 529, type: !3782, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4141)
!4141 = !{!4142}
!4142 = !DILocalVariable(name: "self", arg: 1, scope: !4140, file: !3099, line: 529, type: !1499)
!4143 = !DILocation(line: 529, column: 13, scope: !4140)
!4144 = !DILocation(line: 530, column: 26, scope: !4140)
!4145 = !DILocation(line: 530, column: 18, scope: !4140)
!4146 = !DILocation(line: 531, column: 6, scope: !4140)
!4147 = distinct !DISubprogram(name: "asinh", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5asinh17ha7d150724145b718E", scope: !3666, file: !3099, line: 533, type: !3782, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4148)
!4148 = !{!4149}
!4149 = !DILocalVariable(name: "self", arg: 1, scope: !4147, file: !3099, line: 533, type: !1499)
!4150 = !DILocation(line: 533, column: 14, scope: !4147)
!4151 = !DILocation(line: 534, column: 27, scope: !4147)
!4152 = !DILocation(line: 534, column: 18, scope: !4147)
!4153 = !DILocation(line: 535, column: 6, scope: !4147)
!4154 = distinct !DISubprogram(name: "acosh", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5acosh17h55ea5299d1fff320E", scope: !3666, file: !3099, line: 537, type: !3782, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4155)
!4155 = !{!4156}
!4156 = !DILocalVariable(name: "self", arg: 1, scope: !4154, file: !3099, line: 537, type: !1499)
!4157 = !DILocation(line: 537, column: 14, scope: !4154)
!4158 = !DILocation(line: 538, column: 27, scope: !4154)
!4159 = !DILocation(line: 538, column: 18, scope: !4154)
!4160 = !DILocation(line: 539, column: 6, scope: !4154)
!4161 = distinct !DISubprogram(name: "atanh", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$5atanh17hf29cda5e546198bcE", scope: !3666, file: !3099, line: 541, type: !3782, scopeLine: 541, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4162)
!4162 = !{!4163}
!4163 = !DILocalVariable(name: "self", arg: 1, scope: !4161, file: !3099, line: 541, type: !1499)
!4164 = !DILocation(line: 541, column: 14, scope: !4161)
!4165 = !DILocation(line: 542, column: 27, scope: !4161)
!4166 = !DILocation(line: 542, column: 18, scope: !4161)
!4167 = !DILocation(line: 543, column: 6, scope: !4161)
!4168 = distinct !DISubprogram(name: "integer_decode", linkageName: "_ZN13f128_internal9f128_impl82_$LT$impl$u20$num_traits..float..Float$u20$for$u20$f128_internal..f128_t..f128$GT$14integer_decode17h2e322606532f65abE", scope: !3666, file: !3099, line: 545, type: !4169, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4176)
!4169 = !DISubroutineType(types: !4170)
!4170 = !{!4171, !1499}
!4171 = !DICompositeType(tag: DW_TAG_structure_type, name: "(u64, i16, i8)", file: !2, size: 128, align: 64, elements: !4172, templateParams: !26, identifier: "4337c68391f3fa6dfa540dcc23eee406")
!4172 = !{!4173, !4174, !4175}
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4171, file: !2, baseType: !54, size: 64, align: 64)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !4171, file: !2, baseType: !3257, size: 16, align: 16, offset: 64)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "__2", scope: !4171, file: !2, baseType: !136, size: 8, align: 8, offset: 80)
!4176 = !{!4177}
!4177 = !DILocalVariable(name: "self", arg: 1, scope: !4168, file: !3099, line: 545, type: !1499)
!4178 = !DILocation(line: 545, column: 23, scope: !4168)
!4179 = !DILocation(line: 546, column: 9, scope: !4168)
!4180 = distinct !DISubprogram(name: "neg", linkageName: "_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Neg$u20$for$u20$f128_internal..f128_t..f128$GT$3neg17h526233a1fa0b3b88E", scope: !4181, file: !3099, line: 553, type: !3782, scopeLine: 553, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4182)
!4181 = !DINamespace(name: "{impl#10}", scope: !3101)
!4182 = !{!4183, !4184}
!4183 = !DILocalVariable(name: "self", arg: 1, scope: !4180, file: !3099, line: 553, type: !1499)
!4184 = !DILocalVariable(name: "bits", scope: !4185, file: !3099, line: 554, type: !3432, align: 8)
!4185 = distinct !DILexicalBlock(scope: !4180, file: !3099, line: 554, column: 9)
!4186 = !DILocation(line: 553, column: 12, scope: !4180)
!4187 = !DILocation(line: 554, column: 13, scope: !4185)
!4188 = !DILocation(line: 193, column: 33, scope: !3705, inlinedAt: !4189)
!4189 = distinct !DILocation(line: 554, column: 24, scope: !4180)
!4190 = !DILocation(line: 194, column: 51, scope: !3705, inlinedAt: !4189)
!4191 = !DILocation(line: 194, column: 18, scope: !3705, inlinedAt: !4189)
!4192 = !DILocation(line: 554, column: 24, scope: !4180)
!4193 = !DILocation(line: 193, column: 33, scope: !3705, inlinedAt: !4194)
!4194 = distinct !DILocation(line: 555, column: 17, scope: !4185)
!4195 = !DILocation(line: 194, column: 51, scope: !3705, inlinedAt: !4194)
!4196 = !DILocation(line: 194, column: 18, scope: !3705, inlinedAt: !4194)
!4197 = !DILocation(line: 555, column: 17, scope: !4185)
!4198 = !DILocation(line: 555, column: 9, scope: !4185)
!4199 = !DILocation(line: 556, column: 29, scope: !4185)
!4200 = !DILocalVariable(name: "d", arg: 1, scope: !4201, file: !3706, line: 188, type: !3432)
!4201 = distinct !DISubprogram(name: "from_raw_u128", linkageName: "_ZN13f128_internal6f128_t4f12813from_raw_u12817hc6261b6e235382f6E", scope: !1499, file: !3706, line: 188, type: !4202, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4204)
!4202 = !DISubroutineType(types: !4203)
!4203 = !{!1499, !3432}
!4204 = !{!4200}
!4205 = !DILocation(line: 188, column: 33, scope: !4201, inlinedAt: !4206)
!4206 = distinct !DILocation(line: 556, column: 9, scope: !4185)
!4207 = !DILocation(line: 189, column: 33, scope: !4201, inlinedAt: !4206)
!4208 = !DILocalVariable(name: "d", arg: 1, scope: !4209, file: !3706, line: 183, type: !1401)
!4209 = distinct !DISubprogram(name: "from_arr", linkageName: "_ZN13f128_internal6f128_t4f1288from_arr17h5615f4eba24f23e5E", scope: !1499, file: !3706, line: 183, type: !4210, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4212)
!4210 = !DISubroutineType(types: !4211)
!4211 = !{!1499, !1401}
!4212 = !{!4208}
!4213 = !DILocation(line: 183, column: 28, scope: !4209, inlinedAt: !4214)
!4214 = distinct !DILocation(line: 189, column: 9, scope: !4201, inlinedAt: !4206)
!4215 = !DILocation(line: 184, column: 14, scope: !4209, inlinedAt: !4214)
!4216 = !DILocation(line: 184, column: 9, scope: !4209, inlinedAt: !4214)
!4217 = !DILocation(line: 556, column: 9, scope: !4185)
!4218 = !DILocation(line: 557, column: 6, scope: !4180)
!4219 = distinct !DISubprogram(name: "add", linkageName: "_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Add$u20$for$u20$f128_internal..f128_t..f128$GT$3add17h0758a5ffde91ffccE", scope: !4220, file: !3099, line: 720, type: !3904, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4221)
!4220 = !DINamespace(name: "{impl#11}", scope: !3101)
!4221 = !{!4222, !4223}
!4222 = !DILocalVariable(name: "self", arg: 1, scope: !4219, file: !3099, line: 720, type: !1499)
!4223 = !DILocalVariable(name: "other", arg: 2, scope: !4219, file: !3099, line: 720, type: !1499)
!4224 = !DILocation(line: 720, column: 12, scope: !4219)
!4225 = !DILocation(line: 720, column: 18, scope: !4219)
!4226 = !DILocation(line: 721, column: 32, scope: !4219)
!4227 = !DILocation(line: 721, column: 38, scope: !4219)
!4228 = !DILocation(line: 721, column: 18, scope: !4219)
!4229 = !DILocation(line: 722, column: 6, scope: !4219)
!4230 = distinct !DISubprogram(name: "sub", linkageName: "_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Sub$u20$for$u20$f128_internal..f128_t..f128$GT$3sub17h56595469bd3ea1c7E", scope: !4231, file: !3099, line: 739, type: !3904, scopeLine: 739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4232)
!4231 = !DINamespace(name: "{impl#13}", scope: !3101)
!4232 = !{!4233, !4234}
!4233 = !DILocalVariable(name: "self", arg: 1, scope: !4230, file: !3099, line: 739, type: !1499)
!4234 = !DILocalVariable(name: "other", arg: 2, scope: !4230, file: !3099, line: 739, type: !1499)
!4235 = !DILocation(line: 739, column: 12, scope: !4230)
!4236 = !DILocation(line: 739, column: 18, scope: !4230)
!4237 = !DILocation(line: 740, column: 32, scope: !4230)
!4238 = !DILocation(line: 740, column: 38, scope: !4230)
!4239 = !DILocation(line: 740, column: 18, scope: !4230)
!4240 = !DILocation(line: 741, column: 6, scope: !4230)
!4241 = distinct !DISubprogram(name: "mul", linkageName: "_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Mul$u20$for$u20$f128_internal..f128_t..f128$GT$3mul17h3dd26f8691880a4fE", scope: !4242, file: !3099, line: 758, type: !3904, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4243)
!4242 = !DINamespace(name: "{impl#15}", scope: !3101)
!4243 = !{!4244, !4245}
!4244 = !DILocalVariable(name: "self", arg: 1, scope: !4241, file: !3099, line: 758, type: !1499)
!4245 = !DILocalVariable(name: "other", arg: 2, scope: !4241, file: !3099, line: 758, type: !1499)
!4246 = !DILocation(line: 758, column: 12, scope: !4241)
!4247 = !DILocation(line: 758, column: 18, scope: !4241)
!4248 = !DILocation(line: 759, column: 32, scope: !4241)
!4249 = !DILocation(line: 759, column: 38, scope: !4241)
!4250 = !DILocation(line: 759, column: 18, scope: !4241)
!4251 = !DILocation(line: 760, column: 6, scope: !4241)
!4252 = distinct !DISubprogram(name: "mul_assign", linkageName: "_ZN13f128_internal9f128_impl85_$LT$impl$u20$core..ops..arith..MulAssign$u20$for$u20$f128_internal..f128_t..f128$GT$10mul_assign17h11b5717fe6e93731E", scope: !4253, file: !3099, line: 765, type: !4254, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4257)
!4253 = !DINamespace(name: "{impl#16}", scope: !3101)
!4254 = !DISubroutineType(types: !4255)
!4255 = !{null, !4256, !1499}
!4256 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut f128_internal::f128_t::f128", baseType: !1499, size: 64, align: 64, dwarfAddressSpace: 0)
!4257 = !{!4258, !4259}
!4258 = !DILocalVariable(name: "self", arg: 1, scope: !4252, file: !3099, line: 765, type: !4256)
!4259 = !DILocalVariable(name: "other", arg: 2, scope: !4252, file: !3099, line: 765, type: !1499)
!4260 = !DILocation(line: 765, column: 19, scope: !4252)
!4261 = !DILocation(line: 765, column: 30, scope: !4252)
!4262 = !DILocation(line: 766, column: 17, scope: !4252)
!4263 = !DILocation(line: 766, column: 25, scope: !4252)
!4264 = !DILocation(line: 766, column: 9, scope: !4252)
!4265 = !DILocation(line: 767, column: 6, scope: !4252)
!4266 = distinct !DISubprogram(name: "div", linkageName: "_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Div$u20$for$u20$f128_internal..f128_t..f128$GT$3div17h69144dea03b00355E", scope: !4267, file: !3099, line: 777, type: !3904, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4268)
!4267 = !DINamespace(name: "{impl#17}", scope: !3101)
!4268 = !{!4269, !4270}
!4269 = !DILocalVariable(name: "self", arg: 1, scope: !4266, file: !3099, line: 777, type: !1499)
!4270 = !DILocalVariable(name: "other", arg: 2, scope: !4266, file: !3099, line: 777, type: !1499)
!4271 = !DILocation(line: 777, column: 12, scope: !4266)
!4272 = !DILocation(line: 777, column: 18, scope: !4266)
!4273 = !DILocation(line: 778, column: 32, scope: !4266)
!4274 = !DILocation(line: 778, column: 38, scope: !4266)
!4275 = !DILocation(line: 778, column: 18, scope: !4266)
!4276 = !DILocation(line: 779, column: 6, scope: !4266)
!4277 = distinct !DISubprogram(name: "div_assign", linkageName: "_ZN13f128_internal9f128_impl85_$LT$impl$u20$core..ops..arith..DivAssign$u20$for$u20$f128_internal..f128_t..f128$GT$10div_assign17hab154d055fe8b7d5E", scope: !4278, file: !3099, line: 784, type: !4254, scopeLine: 784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4279)
!4278 = !DINamespace(name: "{impl#18}", scope: !3101)
!4279 = !{!4280, !4281}
!4280 = !DILocalVariable(name: "self", arg: 1, scope: !4277, file: !3099, line: 784, type: !4256)
!4281 = !DILocalVariable(name: "other", arg: 2, scope: !4277, file: !3099, line: 784, type: !1499)
!4282 = !DILocation(line: 784, column: 19, scope: !4277)
!4283 = !DILocation(line: 784, column: 30, scope: !4277)
!4284 = !DILocation(line: 785, column: 17, scope: !4277)
!4285 = !DILocation(line: 785, column: 25, scope: !4277)
!4286 = !DILocation(line: 785, column: 9, scope: !4277)
!4287 = !DILocation(line: 786, column: 6, scope: !4277)
!4288 = distinct !DISubprogram(name: "rem", linkageName: "_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..ops..arith..Rem$u20$for$u20$f128_internal..f128_t..f128$GT$3rem17h730d929bbdbf3669E", scope: !4289, file: !3099, line: 796, type: !3904, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4290)
!4289 = !DINamespace(name: "{impl#19}", scope: !3101)
!4290 = !{!4291, !4292}
!4291 = !DILocalVariable(name: "self", arg: 1, scope: !4288, file: !3099, line: 796, type: !1499)
!4292 = !DILocalVariable(name: "other", arg: 2, scope: !4288, file: !3099, line: 796, type: !1499)
!4293 = !DILocation(line: 796, column: 12, scope: !4288)
!4294 = !DILocation(line: 796, column: 18, scope: !4288)
!4295 = !DILocation(line: 797, column: 31, scope: !4288)
!4296 = !DILocation(line: 797, column: 37, scope: !4288)
!4297 = !DILocation(line: 797, column: 18, scope: !4288)
!4298 = !DILocation(line: 798, column: 6, scope: !4288)
!4299 = distinct !DISubprogram(name: "partial_cmp", linkageName: "_ZN13f128_internal9f128_impl79_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$f128_internal..f128_t..f128$GT$11partial_cmp17h3d89024f8e082b9aE", scope: !4300, file: !3099, line: 871, type: !4301, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4316)
!4300 = !DINamespace(name: "{impl#25}", scope: !3101)
!4301 = !DISubroutineType(types: !4302)
!4302 = !{!4303, !3104, !3104}
!4303 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::cmp::Ordering>", scope: !20, file: !2, size: 8, align: 8, elements: !4304, templateParams: !26, identifier: "2b66775db5ca937736cbad385ee209")
!4304 = !{!4305}
!4305 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4303, file: !2, size: 8, align: 8, elements: !4306, templateParams: !26, identifier: "78caa977839461808114ebcc6ed80103", discriminator: !4315)
!4306 = !{!4307, !4311}
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4305, file: !2, baseType: !4308, size: 8, align: 8, extraData: i64 2)
!4308 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4303, file: !2, size: 8, align: 8, elements: !26, templateParams: !4309, identifier: "683c46f73a26eb433cfebf80669c3c85")
!4309 = !{!4310}
!4310 = !DITemplateTypeParameter(name: "T", type: !134)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4305, file: !2, baseType: !4312, size: 8, align: 8)
!4312 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4303, file: !2, size: 8, align: 8, elements: !4313, templateParams: !4309, identifier: "255dc62751041749fe6981cbd4b4720")
!4313 = !{!4314}
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4312, file: !2, baseType: !134, size: 8, align: 8)
!4315 = !DIDerivedType(tag: DW_TAG_member, scope: !4303, file: !2, baseType: !29, size: 8, align: 8, flags: DIFlagArtificial)
!4316 = !{!4317, !4318, !4319, !4321}
!4317 = !DILocalVariable(name: "self", arg: 1, scope: !4299, file: !3099, line: 871, type: !3104)
!4318 = !DILocalVariable(name: "other", arg: 2, scope: !4299, file: !3099, line: 871, type: !3104)
!4319 = !DILocalVariable(name: "lte", scope: !4320, file: !3099, line: 872, type: !29, align: 1)
!4320 = distinct !DILexicalBlock(scope: !4299, file: !3099, line: 872, column: 9)
!4321 = !DILocalVariable(name: "gte", scope: !4322, file: !3099, line: 873, type: !29, align: 1)
!4322 = distinct !DILexicalBlock(scope: !4320, file: !3099, line: 873, column: 9)
!4323 = !DILocation(line: 871, column: 20, scope: !4299)
!4324 = !DILocation(line: 871, column: 27, scope: !4299)
!4325 = !DILocation(line: 872, column: 33, scope: !4299)
!4326 = !DILocation(line: 872, column: 40, scope: !4299)
!4327 = !DILocation(line: 872, column: 28, scope: !4299)
!4328 = !DILocation(line: 872, column: 13, scope: !4320)
!4329 = !DILocation(line: 873, column: 33, scope: !4320)
!4330 = !DILocation(line: 873, column: 40, scope: !4320)
!4331 = !DILocation(line: 873, column: 28, scope: !4320)
!4332 = !DILocation(line: 873, column: 13, scope: !4322)
!4333 = !DILocation(line: 875, column: 16, scope: !4322)
!4334 = !DILocation(line: 875, column: 26, scope: !4322)
!4335 = !DILocation(line: 875, column: 15, scope: !4322)
!4336 = !DILocation(line: 875, column: 9, scope: !4322)
!4337 = !DILocation(line: 878, column: 30, scope: !4322)
!4338 = !DILocation(line: 878, column: 39, scope: !4322)
!4339 = !DILocation(line: 879, column: 29, scope: !4322)
!4340 = !DILocation(line: 879, column: 39, scope: !4322)
!4341 = !DILocation(line: 881, column: 6, scope: !4299)
!4342 = !{i8 -1, i8 3}
!4343 = !DILocation(line: 876, column: 31, scope: !4322)
!4344 = !DILocation(line: 877, column: 30, scope: !4322)
!4345 = !DILocation(line: 877, column: 42, scope: !4322)
!4346 = distinct !DISubprogram(name: "eq", linkageName: "_ZN13f128_internal9f128_impl78_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$f128_internal..f128_t..f128$GT$2eq17h64eb881a5d546e65E", scope: !4347, file: !3099, line: 885, type: !4348, scopeLine: 885, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4350)
!4347 = !DINamespace(name: "{impl#26}", scope: !3101)
!4348 = !DISubroutineType(types: !4349)
!4349 = !{!398, !3104, !3104}
!4350 = !{!4351, !4352}
!4351 = !DILocalVariable(name: "self", arg: 1, scope: !4346, file: !3099, line: 885, type: !3104)
!4352 = !DILocalVariable(name: "other", arg: 2, scope: !4346, file: !3099, line: 885, type: !3104)
!4353 = !DILocation(line: 885, column: 11, scope: !4346)
!4354 = !DILocation(line: 885, column: 18, scope: !4346)
!4355 = !DILocation(line: 886, column: 22, scope: !4346)
!4356 = !DILocation(line: 886, column: 29, scope: !4346)
!4357 = !DILocation(line: 886, column: 18, scope: !4346)
!4358 = !DILocation(line: 887, column: 6, scope: !4346)
!4359 = distinct !DISubprogram(name: "ne", linkageName: "_ZN13f128_internal9f128_impl78_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$f128_internal..f128_t..f128$GT$2ne17hc22ed94833ae6761E", scope: !4347, file: !3099, line: 889, type: !4348, scopeLine: 889, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4360)
!4360 = !{!4361, !4362}
!4361 = !DILocalVariable(name: "self", arg: 1, scope: !4359, file: !3099, line: 889, type: !3104)
!4362 = !DILocalVariable(name: "other", arg: 2, scope: !4359, file: !3099, line: 889, type: !3104)
!4363 = !DILocation(line: 889, column: 11, scope: !4359)
!4364 = !DILocation(line: 889, column: 18, scope: !4359)
!4365 = !DILocation(line: 890, column: 23, scope: !4359)
!4366 = !DILocation(line: 890, column: 30, scope: !4359)
!4367 = !DILocation(line: 890, column: 18, scope: !4359)
!4368 = !DILocation(line: 891, column: 6, scope: !4359)
!4369 = distinct !DISubprogram(name: "to_string_fmt<&str>", linkageName: "_ZN13f128_internal6f128_t4f12813to_string_fmt17h23da4fb8c9f33463E", scope: !1499, file: !3706, line: 206, type: !4370, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !644, retainedNodes: !4383)
!4370 = !DISubroutineType(types: !4371)
!4371 = !{!4372, !3104, !168}
!4372 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::string::String>", scope: !20, file: !2, size: 192, align: 64, elements: !4373, templateParams: !26, identifier: "e57ba4b2645742ac80028345ae3e3b7e")
!4373 = !{!4374}
!4374 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4372, file: !2, size: 192, align: 64, elements: !4375, templateParams: !26, identifier: "543e21bd6ff6b14b475ba99e29f0198a", discriminator: !4382)
!4375 = !{!4376, !4378}
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4374, file: !2, baseType: !4377, size: 192, align: 64, extraData: i64 0)
!4377 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4372, file: !2, size: 192, align: 64, elements: !26, templateParams: !515, identifier: "ec22a260f66480db9e9c99b9abc35989")
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4374, file: !2, baseType: !4379, size: 192, align: 64)
!4379 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4372, file: !2, size: 192, align: 64, elements: !4380, templateParams: !515, identifier: "10653187bab481cceda9c29be1112f74")
!4380 = !{!4381}
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4379, file: !2, baseType: !300, size: 192, align: 64)
!4382 = !DIDerivedType(tag: DW_TAG_member, scope: !4372, file: !2, baseType: !54, size: 64, align: 64, flags: DIFlagArtificial)
!4383 = !{!4384, !4385, !4386, !4388, !4390, !4392, !4394, !4396}
!4384 = !DILocalVariable(name: "self", arg: 1, scope: !4369, file: !3706, line: 206, type: !3104)
!4385 = !DILocalVariable(name: "fmt", arg: 2, scope: !4369, file: !3706, line: 206, type: !168)
!4386 = !DILocalVariable(name: "buf", scope: !4387, file: !3706, line: 207, type: !1381, align: 1)
!4387 = distinct !DILexicalBlock(scope: !4369, file: !3706, line: 207, column: 9)
!4388 = !DILocalVariable(name: "cstr", scope: !4389, file: !3706, line: 208, type: !937, align: 8)
!4389 = distinct !DILexicalBlock(scope: !4387, file: !3706, line: 208, column: 9)
!4390 = !DILocalVariable(name: "e", scope: !4391, file: !3706, line: 210, type: !937, align: 8)
!4391 = distinct !DILexicalBlock(scope: !4389, file: !3706, line: 210, column: 13)
!4392 = !DILocalVariable(name: "n", scope: !4393, file: !3706, line: 213, type: !253, align: 4)
!4393 = distinct !DILexicalBlock(scope: !4389, file: !3706, line: 213, column: 9)
!4394 = !DILocalVariable(name: "n", scope: !4395, file: !3706, line: 215, type: !9, align: 8)
!4395 = distinct !DILexicalBlock(scope: !4393, file: !3706, line: 215, column: 9)
!4396 = !DILocalVariable(name: "s", scope: !4397, file: !3706, line: 216, type: !168, align: 8)
!4397 = distinct !DILexicalBlock(scope: !4395, file: !3706, line: 216, column: 9)
!4398 = !DILocation(line: 206, column: 41, scope: !4369)
!4399 = !DILocation(line: 206, column: 48, scope: !4369)
!4400 = !DILocation(line: 207, column: 13, scope: !4387)
!4401 = !DILocation(line: 208, column: 13, scope: !4389)
!4402 = !DILocation(line: 207, column: 13, scope: !4369)
!4403 = !DILocation(line: 207, column: 23, scope: !4369)
!4404 = !DILocation(line: 209, column: 28, scope: !4389)
!4405 = !DILocation(line: 218, column: 5, scope: !4387)
!4406 = !DILocation(line: 209, column: 15, scope: !4389)
!4407 = !DILocation(line: 209, column: 9, scope: !4389)
!4408 = !DILocation(line: 210, column: 16, scope: !4389)
!4409 = !DILocation(line: 210, column: 16, scope: !4391)
!4410 = !DILocation(line: 210, column: 22, scope: !4391)
!4411 = !DILocation(line: 212, column: 10, scope: !4389)
!4412 = !DILocation(line: 211, column: 30, scope: !4389)
!4413 = !DILocation(line: 218, column: 5, scope: !4369)
!4414 = !DILocation(line: 218, column: 6, scope: !4369)
!4415 = !DILocation(line: 213, column: 33, scope: !4389)
!4416 = !DILocation(line: 213, column: 63, scope: !4389)
!4417 = !DILocation(line: 213, column: 78, scope: !4389)
!4418 = !DILocation(line: 213, column: 26, scope: !4389)
!4419 = !DILocation(line: 213, column: 13, scope: !4393)
!4420 = !DILocation(line: 214, column: 17, scope: !4393)
!4421 = !DILocation(line: 214, column: 9, scope: !4393)
!4422 = !DILocation(line: 215, column: 17, scope: !4393)
!4423 = !DILocation(line: 215, column: 13, scope: !4395)
!4424 = !DILocation(line: 216, column: 37, scope: !4395)
!4425 = !DILocation(line: 216, column: 33, scope: !4395)
!4426 = !DILocation(line: 216, column: 17, scope: !4395)
!4427 = !DILocation(line: 216, column: 13, scope: !4397)
!4428 = !DILocation(line: 217, column: 14, scope: !4397)
!4429 = !DILocation(line: 217, column: 9, scope: !4397)
!4430 = !DILocation(line: 206, column: 5, scope: !4369)
!4431 = distinct !DISubprogram(name: "exp_bits", linkageName: "_ZN13f128_internal6f128_t4f1288exp_bits17hb4918e3c047f86c3E", scope: !1499, file: !3706, line: 236, type: !4432, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4434)
!4432 = !DISubroutineType(types: !4433)
!4433 = !{!173, !3104}
!4434 = !{!4435, !4436}
!4435 = !DILocalVariable(name: "self", arg: 1, scope: !4431, file: !3706, line: 236, type: !3104)
!4436 = !DILocalVariable(name: "exp_bits", scope: !4437, file: !3706, line: 237, type: !3432, align: 8)
!4437 = distinct !DILexicalBlock(scope: !4431, file: !3706, line: 237, column: 9)
!4438 = !DILocation(line: 236, column: 21, scope: !4431)
!4439 = !DILocation(line: 193, column: 33, scope: !3705, inlinedAt: !4440)
!4440 = distinct !DILocation(line: 237, column: 24, scope: !4431)
!4441 = !DILocation(line: 194, column: 51, scope: !3705, inlinedAt: !4440)
!4442 = !DILocation(line: 194, column: 18, scope: !3705, inlinedAt: !4440)
!4443 = !DILocation(line: 237, column: 24, scope: !4431)
!4444 = !DILocation(line: 237, column: 13, scope: !4437)
!4445 = !DILocation(line: 193, column: 33, scope: !3705, inlinedAt: !4446)
!4446 = distinct !DILocation(line: 238, column: 11, scope: !4437)
!4447 = !DILocation(line: 194, column: 51, scope: !3705, inlinedAt: !4446)
!4448 = !DILocation(line: 194, column: 18, scope: !3705, inlinedAt: !4446)
!4449 = !DILocation(line: 238, column: 11, scope: !4437)
!4450 = !DILocation(line: 238, column: 10, scope: !4437)
!4451 = !DILocation(line: 238, column: 9, scope: !4437)
!4452 = !DILocation(line: 239, column: 6, scope: !4431)
!4453 = distinct !DISubprogram(name: "fract_bits", linkageName: "_ZN13f128_internal6f128_t4f12810fract_bits17hb63fd840d969f861E", scope: !1499, file: !3706, line: 241, type: !3707, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4454)
!4454 = !{!4455}
!4455 = !DILocalVariable(name: "self", arg: 1, scope: !4453, file: !3706, line: 241, type: !3104)
!4456 = !DILocation(line: 241, column: 23, scope: !4453)
!4457 = !DILocation(line: 193, column: 33, scope: !3705, inlinedAt: !4458)
!4458 = distinct !DILocation(line: 242, column: 9, scope: !4453)
!4459 = !DILocation(line: 194, column: 51, scope: !3705, inlinedAt: !4458)
!4460 = !DILocation(line: 194, column: 18, scope: !3705, inlinedAt: !4458)
!4461 = !DILocation(line: 242, column: 9, scope: !4453)
!4462 = !DILocation(line: 193, column: 33, scope: !3705, inlinedAt: !4463)
!4463 = distinct !DILocation(line: 242, column: 32, scope: !4453)
!4464 = !DILocation(line: 194, column: 51, scope: !3705, inlinedAt: !4463)
!4465 = !DILocation(line: 194, column: 18, scope: !3705, inlinedAt: !4463)
!4466 = !DILocation(line: 242, column: 32, scope: !4453)
!4467 = !DILocation(line: 243, column: 6, scope: !4453)
!4468 = distinct !DISubprogram(name: "bitwise_eq", linkageName: "_ZN13f128_internal6f128_t4f12810bitwise_eq17hbf16f9dc3eac3866E", scope: !1499, file: !3706, line: 245, type: !4469, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4471)
!4469 = !DISubroutineType(types: !4470)
!4470 = !{!398, !1499, !1499}
!4471 = !{!4472, !4473}
!4472 = !DILocalVariable(name: "self", arg: 1, scope: !4468, file: !3706, line: 245, type: !1499)
!4473 = !DILocalVariable(name: "other", arg: 2, scope: !4468, file: !3706, line: 245, type: !1499)
!4474 = !DILocation(line: 245, column: 23, scope: !4468)
!4475 = !DILocation(line: 245, column: 29, scope: !4468)
!4476 = !DILocation(line: 246, column: 9, scope: !4468)
!4477 = !DILocation(line: 246, column: 19, scope: !4468)
!4478 = !DILocation(line: 247, column: 6, scope: !4468)
!4479 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$core..ops..bit..Shr$LT$u8$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17he1e0aebb8af27d58E", scope: !4480, file: !3099, line: 608, type: !4481, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4483)
!4480 = !DINamespace(name: "{impl#27}", scope: !3101)
!4481 = !DISubroutineType(types: !4482)
!4482 = !{!1499, !1499, !29}
!4483 = !{!4484, !4485}
!4484 = !DILocalVariable(name: "self", arg: 1, scope: !4479, file: !3099, line: 608, type: !1499)
!4485 = !DILocalVariable(name: "other", arg: 2, scope: !4479, file: !3099, line: 608, type: !29)
!4486 = !DILocation(line: 608, column: 20, scope: !4479)
!4487 = !DILocation(line: 608, column: 26, scope: !4479)
!4488 = !DILocalVariable(name: "self", arg: 1, scope: !4489, file: !3706, line: 221, type: !3104)
!4489 = distinct !DISubprogram(name: "inner", linkageName: "_ZN13f128_internal6f128_t4f1285inner17hc6ced4f900df77f5E", scope: !1499, file: !3706, line: 221, type: !4490, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4492)
!4490 = !DISubroutineType(types: !4491)
!4491 = !{!1401, !3104}
!4492 = !{!4488}
!4493 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !4494)
!4494 = distinct !DILocation(line: 611, column: 58, scope: !4479)
!4495 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !4494)
!4496 = !DILocation(line: 611, column: 58, scope: !4479)
!4497 = !DILocation(line: 611, column: 25, scope: !4479)
!4498 = !DILocation(line: 610, column: 21, scope: !4479)
!4499 = !DILocation(line: 614, column: 14, scope: !4479)
!4500 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl95_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$u8$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h1cb486e9bb7ad6bdE", scope: !4501, file: !3099, line: 583, type: !4502, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4505)
!4501 = !DINamespace(name: "{impl#30}", scope: !3101)
!4502 = !DISubroutineType(types: !4503)
!4503 = !{!1499, !3104, !4504}
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !29, size: 64, align: 64, dwarfAddressSpace: 0)
!4505 = !{!4506, !4507}
!4506 = !DILocalVariable(name: "self", arg: 1, scope: !4500, file: !3099, line: 583, type: !3104)
!4507 = !DILocalVariable(name: "other", arg: 2, scope: !4500, file: !3099, line: 583, type: !4504)
!4508 = !DILocation(line: 583, column: 24, scope: !4500)
!4509 = !DILocation(line: 583, column: 30, scope: !4500)
!4510 = !DILocation(line: 584, column: 31, scope: !4500)
!4511 = !DILocation(line: 584, column: 38, scope: !4500)
!4512 = !DILocation(line: 584, column: 17, scope: !4500)
!4513 = !DILocation(line: 585, column: 14, scope: !4500)
!4514 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shr$LT$u16$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h2a82f1d573427cf2E", scope: !4515, file: !3099, line: 608, type: !4516, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4518)
!4515 = !DINamespace(name: "{impl#31}", scope: !3101)
!4516 = !DISubroutineType(types: !4517)
!4517 = !{!1499, !1499, !3263}
!4518 = !{!4519, !4520}
!4519 = !DILocalVariable(name: "self", arg: 1, scope: !4514, file: !3099, line: 608, type: !1499)
!4520 = !DILocalVariable(name: "other", arg: 2, scope: !4514, file: !3099, line: 608, type: !3263)
!4521 = !DILocation(line: 608, column: 20, scope: !4514)
!4522 = !DILocation(line: 608, column: 26, scope: !4514)
!4523 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !4524)
!4524 = distinct !DILocation(line: 611, column: 58, scope: !4514)
!4525 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !4524)
!4526 = !DILocation(line: 611, column: 58, scope: !4514)
!4527 = !DILocation(line: 611, column: 25, scope: !4514)
!4528 = !DILocation(line: 610, column: 21, scope: !4514)
!4529 = !DILocation(line: 614, column: 14, scope: !4514)
!4530 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$u16$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h94c492346ef93255E", scope: !4531, file: !3099, line: 583, type: !4532, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4535)
!4531 = !DINamespace(name: "{impl#34}", scope: !3101)
!4532 = !DISubroutineType(types: !4533)
!4533 = !{!1499, !3104, !4534}
!4534 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u16", baseType: !3263, size: 64, align: 64, dwarfAddressSpace: 0)
!4535 = !{!4536, !4537}
!4536 = !DILocalVariable(name: "self", arg: 1, scope: !4530, file: !3099, line: 583, type: !3104)
!4537 = !DILocalVariable(name: "other", arg: 2, scope: !4530, file: !3099, line: 583, type: !4534)
!4538 = !DILocation(line: 583, column: 24, scope: !4530)
!4539 = !DILocation(line: 583, column: 30, scope: !4530)
!4540 = !DILocation(line: 584, column: 31, scope: !4530)
!4541 = !DILocation(line: 584, column: 38, scope: !4530)
!4542 = !DILocation(line: 584, column: 17, scope: !4530)
!4543 = !DILocation(line: 585, column: 14, scope: !4530)
!4544 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shr$LT$u32$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h4309ae0b3b19be72E", scope: !4545, file: !3099, line: 608, type: !4546, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4548)
!4545 = !DINamespace(name: "{impl#35}", scope: !3101)
!4546 = !DISubroutineType(types: !4547)
!4547 = !{!1499, !1499, !173}
!4548 = !{!4549, !4550}
!4549 = !DILocalVariable(name: "self", arg: 1, scope: !4544, file: !3099, line: 608, type: !1499)
!4550 = !DILocalVariable(name: "other", arg: 2, scope: !4544, file: !3099, line: 608, type: !173)
!4551 = !DILocation(line: 608, column: 20, scope: !4544)
!4552 = !DILocation(line: 608, column: 26, scope: !4544)
!4553 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !4554)
!4554 = distinct !DILocation(line: 611, column: 58, scope: !4544)
!4555 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !4554)
!4556 = !DILocation(line: 611, column: 58, scope: !4544)
!4557 = !DILocation(line: 611, column: 25, scope: !4544)
!4558 = !DILocation(line: 610, column: 21, scope: !4544)
!4559 = !DILocation(line: 614, column: 14, scope: !4544)
!4560 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$u32$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h5cd407f4cd73e4c9E", scope: !4561, file: !3099, line: 583, type: !4562, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4565)
!4561 = !DINamespace(name: "{impl#38}", scope: !3101)
!4562 = !DISubroutineType(types: !4563)
!4563 = !{!1499, !3104, !4564}
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u32", baseType: !173, size: 64, align: 64, dwarfAddressSpace: 0)
!4565 = !{!4566, !4567}
!4566 = !DILocalVariable(name: "self", arg: 1, scope: !4560, file: !3099, line: 583, type: !3104)
!4567 = !DILocalVariable(name: "other", arg: 2, scope: !4560, file: !3099, line: 583, type: !4564)
!4568 = !DILocation(line: 583, column: 24, scope: !4560)
!4569 = !DILocation(line: 583, column: 30, scope: !4560)
!4570 = !DILocation(line: 584, column: 31, scope: !4560)
!4571 = !DILocation(line: 584, column: 38, scope: !4560)
!4572 = !DILocation(line: 584, column: 17, scope: !4560)
!4573 = !DILocation(line: 585, column: 14, scope: !4560)
!4574 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shr$LT$u64$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17he12954cd475c0c3bE", scope: !4575, file: !3099, line: 608, type: !4576, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4578)
!4575 = !DINamespace(name: "{impl#39}", scope: !3101)
!4576 = !DISubroutineType(types: !4577)
!4577 = !{!1499, !1499, !54}
!4578 = !{!4579, !4580}
!4579 = !DILocalVariable(name: "self", arg: 1, scope: !4574, file: !3099, line: 608, type: !1499)
!4580 = !DILocalVariable(name: "other", arg: 2, scope: !4574, file: !3099, line: 608, type: !54)
!4581 = !DILocation(line: 608, column: 20, scope: !4574)
!4582 = !DILocation(line: 608, column: 26, scope: !4574)
!4583 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !4584)
!4584 = distinct !DILocation(line: 611, column: 58, scope: !4574)
!4585 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !4584)
!4586 = !DILocation(line: 611, column: 58, scope: !4574)
!4587 = !DILocation(line: 611, column: 25, scope: !4574)
!4588 = !DILocation(line: 610, column: 21, scope: !4574)
!4589 = !DILocation(line: 614, column: 14, scope: !4574)
!4590 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$u64$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17hd9cdd1f7a552e6c9E", scope: !4591, file: !3099, line: 583, type: !4592, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4595)
!4591 = !DINamespace(name: "{impl#42}", scope: !3101)
!4592 = !DISubroutineType(types: !4593)
!4593 = !{!1499, !3104, !4594}
!4594 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u64", baseType: !54, size: 64, align: 64, dwarfAddressSpace: 0)
!4595 = !{!4596, !4597}
!4596 = !DILocalVariable(name: "self", arg: 1, scope: !4590, file: !3099, line: 583, type: !3104)
!4597 = !DILocalVariable(name: "other", arg: 2, scope: !4590, file: !3099, line: 583, type: !4594)
!4598 = !DILocation(line: 583, column: 24, scope: !4590)
!4599 = !DILocation(line: 583, column: 30, scope: !4590)
!4600 = !DILocation(line: 584, column: 31, scope: !4590)
!4601 = !DILocation(line: 584, column: 38, scope: !4590)
!4602 = !DILocation(line: 584, column: 17, scope: !4590)
!4603 = !DILocation(line: 585, column: 14, scope: !4590)
!4604 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl89_$LT$impl$u20$core..ops..bit..Shr$LT$u128$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17ha0fc1fa06b96eef9E", scope: !4605, file: !3099, line: 608, type: !4606, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4608)
!4605 = !DINamespace(name: "{impl#43}", scope: !3101)
!4606 = !DISubroutineType(types: !4607)
!4607 = !{!1499, !1499, !3432}
!4608 = !{!4609, !4610}
!4609 = !DILocalVariable(name: "self", arg: 1, scope: !4604, file: !3099, line: 608, type: !1499)
!4610 = !DILocalVariable(name: "other", arg: 2, scope: !4604, file: !3099, line: 608, type: !3432)
!4611 = !DILocation(line: 608, column: 20, scope: !4604)
!4612 = !DILocation(line: 608, column: 26, scope: !4604)
!4613 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !4614)
!4614 = distinct !DILocation(line: 611, column: 58, scope: !4604)
!4615 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !4614)
!4616 = !DILocation(line: 611, column: 58, scope: !4604)
!4617 = !DILocation(line: 611, column: 25, scope: !4604)
!4618 = !DILocation(line: 610, column: 21, scope: !4604)
!4619 = !DILocation(line: 614, column: 14, scope: !4604)
!4620 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl97_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$u128$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h0545889b09938a7eE", scope: !4621, file: !3099, line: 583, type: !4622, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4625)
!4621 = !DINamespace(name: "{impl#46}", scope: !3101)
!4622 = !DISubroutineType(types: !4623)
!4623 = !{!1499, !3104, !4624}
!4624 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u128", baseType: !3432, size: 64, align: 64, dwarfAddressSpace: 0)
!4625 = !{!4626, !4627}
!4626 = !DILocalVariable(name: "self", arg: 1, scope: !4620, file: !3099, line: 583, type: !3104)
!4627 = !DILocalVariable(name: "other", arg: 2, scope: !4620, file: !3099, line: 583, type: !4624)
!4628 = !DILocation(line: 583, column: 24, scope: !4620)
!4629 = !DILocation(line: 583, column: 30, scope: !4620)
!4630 = !DILocation(line: 584, column: 31, scope: !4620)
!4631 = !DILocation(line: 584, column: 38, scope: !4620)
!4632 = !DILocation(line: 584, column: 17, scope: !4620)
!4633 = !DILocation(line: 585, column: 14, scope: !4620)
!4634 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl90_$LT$impl$u20$core..ops..bit..Shr$LT$usize$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17hdd7de2446dae2c6dE", scope: !4635, file: !3099, line: 608, type: !4636, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4638)
!4635 = !DINamespace(name: "{impl#47}", scope: !3101)
!4636 = !DISubroutineType(types: !4637)
!4637 = !{!1499, !1499, !9}
!4638 = !{!4639, !4640}
!4639 = !DILocalVariable(name: "self", arg: 1, scope: !4634, file: !3099, line: 608, type: !1499)
!4640 = !DILocalVariable(name: "other", arg: 2, scope: !4634, file: !3099, line: 608, type: !9)
!4641 = !DILocation(line: 608, column: 20, scope: !4634)
!4642 = !DILocation(line: 608, column: 26, scope: !4634)
!4643 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !4644)
!4644 = distinct !DILocation(line: 611, column: 58, scope: !4634)
!4645 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !4644)
!4646 = !DILocation(line: 611, column: 58, scope: !4634)
!4647 = !DILocation(line: 611, column: 25, scope: !4634)
!4648 = !DILocation(line: 610, column: 21, scope: !4634)
!4649 = !DILocation(line: 614, column: 14, scope: !4634)
!4650 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl98_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$usize$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h1ff629f3751db810E", scope: !4651, file: !3099, line: 583, type: !4652, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4654)
!4651 = !DINamespace(name: "{impl#50}", scope: !3101)
!4652 = !DISubroutineType(types: !4653)
!4653 = !{!1499, !3104, !617}
!4654 = !{!4655, !4656}
!4655 = !DILocalVariable(name: "self", arg: 1, scope: !4650, file: !3099, line: 583, type: !3104)
!4656 = !DILocalVariable(name: "other", arg: 2, scope: !4650, file: !3099, line: 583, type: !617)
!4657 = !DILocation(line: 583, column: 24, scope: !4650)
!4658 = !DILocation(line: 583, column: 30, scope: !4650)
!4659 = !DILocation(line: 584, column: 31, scope: !4650)
!4660 = !DILocation(line: 584, column: 38, scope: !4650)
!4661 = !DILocation(line: 584, column: 17, scope: !4650)
!4662 = !DILocation(line: 585, column: 14, scope: !4650)
!4663 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$core..ops..bit..Shr$LT$i8$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h1ee5fff5c4a474d5E", scope: !4664, file: !3099, line: 608, type: !4665, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4667)
!4664 = !DINamespace(name: "{impl#51}", scope: !3101)
!4665 = !DISubroutineType(types: !4666)
!4666 = !{!1499, !1499, !136}
!4667 = !{!4668, !4669}
!4668 = !DILocalVariable(name: "self", arg: 1, scope: !4663, file: !3099, line: 608, type: !1499)
!4669 = !DILocalVariable(name: "other", arg: 2, scope: !4663, file: !3099, line: 608, type: !136)
!4670 = !DILocation(line: 608, column: 20, scope: !4663)
!4671 = !DILocation(line: 608, column: 26, scope: !4663)
!4672 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !4673)
!4673 = distinct !DILocation(line: 611, column: 58, scope: !4663)
!4674 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !4673)
!4675 = !DILocation(line: 611, column: 58, scope: !4663)
!4676 = !DILocation(line: 611, column: 25, scope: !4663)
!4677 = !DILocation(line: 610, column: 21, scope: !4663)
!4678 = !DILocation(line: 614, column: 14, scope: !4663)
!4679 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl95_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$i8$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17hba2198c21959888bE", scope: !4680, file: !3099, line: 583, type: !4681, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4684)
!4680 = !DINamespace(name: "{impl#54}", scope: !3101)
!4681 = !DISubroutineType(types: !4682)
!4682 = !{!1499, !3104, !4683}
!4683 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&i8", baseType: !136, size: 64, align: 64, dwarfAddressSpace: 0)
!4684 = !{!4685, !4686}
!4685 = !DILocalVariable(name: "self", arg: 1, scope: !4679, file: !3099, line: 583, type: !3104)
!4686 = !DILocalVariable(name: "other", arg: 2, scope: !4679, file: !3099, line: 583, type: !4683)
!4687 = !DILocation(line: 583, column: 24, scope: !4679)
!4688 = !DILocation(line: 583, column: 30, scope: !4679)
!4689 = !DILocation(line: 584, column: 31, scope: !4679)
!4690 = !DILocation(line: 584, column: 38, scope: !4679)
!4691 = !DILocation(line: 584, column: 17, scope: !4679)
!4692 = !DILocation(line: 585, column: 14, scope: !4679)
!4693 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shr$LT$i16$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17haa097268bf2e596aE", scope: !4694, file: !3099, line: 608, type: !4695, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4697)
!4694 = !DINamespace(name: "{impl#55}", scope: !3101)
!4695 = !DISubroutineType(types: !4696)
!4696 = !{!1499, !1499, !3257}
!4697 = !{!4698, !4699}
!4698 = !DILocalVariable(name: "self", arg: 1, scope: !4693, file: !3099, line: 608, type: !1499)
!4699 = !DILocalVariable(name: "other", arg: 2, scope: !4693, file: !3099, line: 608, type: !3257)
!4700 = !DILocation(line: 608, column: 20, scope: !4693)
!4701 = !DILocation(line: 608, column: 26, scope: !4693)
!4702 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !4703)
!4703 = distinct !DILocation(line: 611, column: 58, scope: !4693)
!4704 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !4703)
!4705 = !DILocation(line: 611, column: 58, scope: !4693)
!4706 = !DILocation(line: 611, column: 25, scope: !4693)
!4707 = !DILocation(line: 610, column: 21, scope: !4693)
!4708 = !DILocation(line: 614, column: 14, scope: !4693)
!4709 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$i16$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h78b571a3f0b0410aE", scope: !4710, file: !3099, line: 583, type: !4711, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4714)
!4710 = !DINamespace(name: "{impl#58}", scope: !3101)
!4711 = !DISubroutineType(types: !4712)
!4712 = !{!1499, !3104, !4713}
!4713 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&i16", baseType: !3257, size: 64, align: 64, dwarfAddressSpace: 0)
!4714 = !{!4715, !4716}
!4715 = !DILocalVariable(name: "self", arg: 1, scope: !4709, file: !3099, line: 583, type: !3104)
!4716 = !DILocalVariable(name: "other", arg: 2, scope: !4709, file: !3099, line: 583, type: !4713)
!4717 = !DILocation(line: 583, column: 24, scope: !4709)
!4718 = !DILocation(line: 583, column: 30, scope: !4709)
!4719 = !DILocation(line: 584, column: 31, scope: !4709)
!4720 = !DILocation(line: 584, column: 38, scope: !4709)
!4721 = !DILocation(line: 584, column: 17, scope: !4709)
!4722 = !DILocation(line: 585, column: 14, scope: !4709)
!4723 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shr$LT$i32$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h0bc2139897889324E", scope: !4724, file: !3099, line: 608, type: !3873, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4725)
!4724 = !DINamespace(name: "{impl#59}", scope: !3101)
!4725 = !{!4726, !4727}
!4726 = !DILocalVariable(name: "self", arg: 1, scope: !4723, file: !3099, line: 608, type: !1499)
!4727 = !DILocalVariable(name: "other", arg: 2, scope: !4723, file: !3099, line: 608, type: !253)
!4728 = !DILocation(line: 608, column: 20, scope: !4723)
!4729 = !DILocation(line: 608, column: 26, scope: !4723)
!4730 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !4731)
!4731 = distinct !DILocation(line: 611, column: 58, scope: !4723)
!4732 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !4731)
!4733 = !DILocation(line: 611, column: 58, scope: !4723)
!4734 = !DILocation(line: 611, column: 25, scope: !4723)
!4735 = !DILocation(line: 610, column: 21, scope: !4723)
!4736 = !DILocation(line: 614, column: 14, scope: !4723)
!4737 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$i32$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h2a1038d5ac56a581E", scope: !4738, file: !3099, line: 583, type: !4739, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4741)
!4738 = !DINamespace(name: "{impl#62}", scope: !3101)
!4739 = !DISubroutineType(types: !4740)
!4740 = !{!1499, !3104, !399}
!4741 = !{!4742, !4743}
!4742 = !DILocalVariable(name: "self", arg: 1, scope: !4737, file: !3099, line: 583, type: !3104)
!4743 = !DILocalVariable(name: "other", arg: 2, scope: !4737, file: !3099, line: 583, type: !399)
!4744 = !DILocation(line: 583, column: 24, scope: !4737)
!4745 = !DILocation(line: 583, column: 30, scope: !4737)
!4746 = !DILocation(line: 584, column: 31, scope: !4737)
!4747 = !DILocation(line: 584, column: 38, scope: !4737)
!4748 = !DILocation(line: 584, column: 17, scope: !4737)
!4749 = !DILocation(line: 585, column: 14, scope: !4737)
!4750 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shr$LT$i64$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h17a07f74147e5956E", scope: !4751, file: !3099, line: 608, type: !4752, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4754)
!4751 = !DINamespace(name: "{impl#63}", scope: !3101)
!4752 = !DISubroutineType(types: !4753)
!4753 = !{!1499, !1499, !276}
!4754 = !{!4755, !4756}
!4755 = !DILocalVariable(name: "self", arg: 1, scope: !4750, file: !3099, line: 608, type: !1499)
!4756 = !DILocalVariable(name: "other", arg: 2, scope: !4750, file: !3099, line: 608, type: !276)
!4757 = !DILocation(line: 608, column: 20, scope: !4750)
!4758 = !DILocation(line: 608, column: 26, scope: !4750)
!4759 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !4760)
!4760 = distinct !DILocation(line: 611, column: 58, scope: !4750)
!4761 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !4760)
!4762 = !DILocation(line: 611, column: 58, scope: !4750)
!4763 = !DILocation(line: 611, column: 25, scope: !4750)
!4764 = !DILocation(line: 610, column: 21, scope: !4750)
!4765 = !DILocation(line: 614, column: 14, scope: !4750)
!4766 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$i64$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h3ff27fed31bd5ad4E", scope: !4767, file: !3099, line: 583, type: !4768, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4770)
!4767 = !DINamespace(name: "{impl#66}", scope: !3101)
!4768 = !DISubroutineType(types: !4769)
!4769 = !{!1499, !3104, !412}
!4770 = !{!4771, !4772}
!4771 = !DILocalVariable(name: "self", arg: 1, scope: !4766, file: !3099, line: 583, type: !3104)
!4772 = !DILocalVariable(name: "other", arg: 2, scope: !4766, file: !3099, line: 583, type: !412)
!4773 = !DILocation(line: 583, column: 24, scope: !4766)
!4774 = !DILocation(line: 583, column: 30, scope: !4766)
!4775 = !DILocation(line: 584, column: 31, scope: !4766)
!4776 = !DILocation(line: 584, column: 38, scope: !4766)
!4777 = !DILocation(line: 584, column: 17, scope: !4766)
!4778 = !DILocation(line: 585, column: 14, scope: !4766)
!4779 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl89_$LT$impl$u20$core..ops..bit..Shr$LT$i128$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h6686fd6b8b230e25E", scope: !4780, file: !3099, line: 608, type: !4781, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4783)
!4780 = !DINamespace(name: "{impl#67}", scope: !3101)
!4781 = !DISubroutineType(types: !4782)
!4782 = !{!1499, !1499, !3407}
!4783 = !{!4784, !4785}
!4784 = !DILocalVariable(name: "self", arg: 1, scope: !4779, file: !3099, line: 608, type: !1499)
!4785 = !DILocalVariable(name: "other", arg: 2, scope: !4779, file: !3099, line: 608, type: !3407)
!4786 = !DILocation(line: 608, column: 20, scope: !4779)
!4787 = !DILocation(line: 608, column: 26, scope: !4779)
!4788 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !4789)
!4789 = distinct !DILocation(line: 611, column: 58, scope: !4779)
!4790 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !4789)
!4791 = !DILocation(line: 611, column: 58, scope: !4779)
!4792 = !DILocation(line: 611, column: 25, scope: !4779)
!4793 = !DILocation(line: 610, column: 21, scope: !4779)
!4794 = !DILocation(line: 614, column: 14, scope: !4779)
!4795 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl97_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$i128$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h57b58e0cb98f1493E", scope: !4796, file: !3099, line: 583, type: !4797, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4800)
!4796 = !DINamespace(name: "{impl#70}", scope: !3101)
!4797 = !DISubroutineType(types: !4798)
!4798 = !{!1499, !3104, !4799}
!4799 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&i128", baseType: !3407, size: 64, align: 64, dwarfAddressSpace: 0)
!4800 = !{!4801, !4802}
!4801 = !DILocalVariable(name: "self", arg: 1, scope: !4795, file: !3099, line: 583, type: !3104)
!4802 = !DILocalVariable(name: "other", arg: 2, scope: !4795, file: !3099, line: 583, type: !4799)
!4803 = !DILocation(line: 583, column: 24, scope: !4795)
!4804 = !DILocation(line: 583, column: 30, scope: !4795)
!4805 = !DILocation(line: 584, column: 31, scope: !4795)
!4806 = !DILocation(line: 584, column: 38, scope: !4795)
!4807 = !DILocation(line: 584, column: 17, scope: !4795)
!4808 = !DILocation(line: 585, column: 14, scope: !4795)
!4809 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl90_$LT$impl$u20$core..ops..bit..Shr$LT$isize$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shr17h4309a0ae273898fcE", scope: !4810, file: !3099, line: 608, type: !4811, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4813)
!4810 = !DINamespace(name: "{impl#71}", scope: !3101)
!4811 = !DISubroutineType(types: !4812)
!4812 = !{!1499, !1499, !2955}
!4813 = !{!4814, !4815}
!4814 = !DILocalVariable(name: "self", arg: 1, scope: !4809, file: !3099, line: 608, type: !1499)
!4815 = !DILocalVariable(name: "other", arg: 2, scope: !4809, file: !3099, line: 608, type: !2955)
!4816 = !DILocation(line: 608, column: 20, scope: !4809)
!4817 = !DILocation(line: 608, column: 26, scope: !4809)
!4818 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !4819)
!4819 = distinct !DILocation(line: 611, column: 58, scope: !4809)
!4820 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !4819)
!4821 = !DILocation(line: 611, column: 58, scope: !4809)
!4822 = !DILocation(line: 611, column: 25, scope: !4809)
!4823 = !DILocation(line: 610, column: 21, scope: !4809)
!4824 = !DILocation(line: 614, column: 14, scope: !4809)
!4825 = distinct !DISubprogram(name: "shr", linkageName: "_ZN13f128_internal9f128_impl98_$LT$impl$u20$core..ops..bit..Shr$LT$$RF$isize$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shr17h80743e564968f7e4E", scope: !4826, file: !3099, line: 583, type: !4827, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4830)
!4826 = !DINamespace(name: "{impl#74}", scope: !3101)
!4827 = !DISubroutineType(types: !4828)
!4828 = !{!1499, !3104, !4829}
!4829 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&isize", baseType: !2955, size: 64, align: 64, dwarfAddressSpace: 0)
!4830 = !{!4831, !4832}
!4831 = !DILocalVariable(name: "self", arg: 1, scope: !4825, file: !3099, line: 583, type: !3104)
!4832 = !DILocalVariable(name: "other", arg: 2, scope: !4825, file: !3099, line: 583, type: !4829)
!4833 = !DILocation(line: 583, column: 24, scope: !4825)
!4834 = !DILocation(line: 583, column: 30, scope: !4825)
!4835 = !DILocation(line: 584, column: 31, scope: !4825)
!4836 = !DILocation(line: 584, column: 38, scope: !4825)
!4837 = !DILocation(line: 584, column: 17, scope: !4825)
!4838 = !DILocation(line: 585, column: 14, scope: !4825)
!4839 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$core..ops..bit..Shl$LT$u8$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17hce4bf9da801814e4E", scope: !4840, file: !3099, line: 665, type: !4481, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4841)
!4840 = !DINamespace(name: "{impl#87}", scope: !3101)
!4841 = !{!4842, !4843}
!4842 = !DILocalVariable(name: "self", arg: 1, scope: !4839, file: !3099, line: 665, type: !1499)
!4843 = !DILocalVariable(name: "other", arg: 2, scope: !4839, file: !3099, line: 665, type: !29)
!4844 = !DILocation(line: 665, column: 20, scope: !4839)
!4845 = !DILocation(line: 665, column: 26, scope: !4839)
!4846 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !4847)
!4847 = distinct !DILocation(line: 668, column: 58, scope: !4839)
!4848 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !4847)
!4849 = !DILocation(line: 668, column: 58, scope: !4839)
!4850 = !DILocation(line: 668, column: 25, scope: !4839)
!4851 = !DILocation(line: 667, column: 21, scope: !4839)
!4852 = !DILocation(line: 671, column: 14, scope: !4839)
!4853 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl95_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$u8$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17h5f821a9c8cecd4dbE", scope: !4854, file: !3099, line: 583, type: !4502, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4855)
!4854 = !DINamespace(name: "{impl#90}", scope: !3101)
!4855 = !{!4856, !4857}
!4856 = !DILocalVariable(name: "self", arg: 1, scope: !4853, file: !3099, line: 583, type: !3104)
!4857 = !DILocalVariable(name: "other", arg: 2, scope: !4853, file: !3099, line: 583, type: !4504)
!4858 = !DILocation(line: 583, column: 24, scope: !4853)
!4859 = !DILocation(line: 583, column: 30, scope: !4853)
!4860 = !DILocation(line: 584, column: 31, scope: !4853)
!4861 = !DILocation(line: 584, column: 38, scope: !4853)
!4862 = !DILocation(line: 584, column: 17, scope: !4853)
!4863 = !DILocation(line: 585, column: 14, scope: !4853)
!4864 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shl$LT$u16$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h3e3c54ff9b731297E", scope: !4865, file: !3099, line: 665, type: !4516, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4866)
!4865 = !DINamespace(name: "{impl#91}", scope: !3101)
!4866 = !{!4867, !4868}
!4867 = !DILocalVariable(name: "self", arg: 1, scope: !4864, file: !3099, line: 665, type: !1499)
!4868 = !DILocalVariable(name: "other", arg: 2, scope: !4864, file: !3099, line: 665, type: !3263)
!4869 = !DILocation(line: 665, column: 20, scope: !4864)
!4870 = !DILocation(line: 665, column: 26, scope: !4864)
!4871 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !4872)
!4872 = distinct !DILocation(line: 668, column: 58, scope: !4864)
!4873 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !4872)
!4874 = !DILocation(line: 668, column: 58, scope: !4864)
!4875 = !DILocation(line: 668, column: 25, scope: !4864)
!4876 = !DILocation(line: 667, column: 21, scope: !4864)
!4877 = !DILocation(line: 671, column: 14, scope: !4864)
!4878 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$u16$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17h6bddbe291312f9c9E", scope: !4879, file: !3099, line: 583, type: !4532, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4880)
!4879 = !DINamespace(name: "{impl#94}", scope: !3101)
!4880 = !{!4881, !4882}
!4881 = !DILocalVariable(name: "self", arg: 1, scope: !4878, file: !3099, line: 583, type: !3104)
!4882 = !DILocalVariable(name: "other", arg: 2, scope: !4878, file: !3099, line: 583, type: !4534)
!4883 = !DILocation(line: 583, column: 24, scope: !4878)
!4884 = !DILocation(line: 583, column: 30, scope: !4878)
!4885 = !DILocation(line: 584, column: 31, scope: !4878)
!4886 = !DILocation(line: 584, column: 38, scope: !4878)
!4887 = !DILocation(line: 584, column: 17, scope: !4878)
!4888 = !DILocation(line: 585, column: 14, scope: !4878)
!4889 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shl$LT$u32$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h6acb313782bfdc7cE", scope: !4890, file: !3099, line: 665, type: !4546, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4891)
!4890 = !DINamespace(name: "{impl#95}", scope: !3101)
!4891 = !{!4892, !4893}
!4892 = !DILocalVariable(name: "self", arg: 1, scope: !4889, file: !3099, line: 665, type: !1499)
!4893 = !DILocalVariable(name: "other", arg: 2, scope: !4889, file: !3099, line: 665, type: !173)
!4894 = !DILocation(line: 665, column: 20, scope: !4889)
!4895 = !DILocation(line: 665, column: 26, scope: !4889)
!4896 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !4897)
!4897 = distinct !DILocation(line: 668, column: 58, scope: !4889)
!4898 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !4897)
!4899 = !DILocation(line: 668, column: 58, scope: !4889)
!4900 = !DILocation(line: 668, column: 25, scope: !4889)
!4901 = !DILocation(line: 667, column: 21, scope: !4889)
!4902 = !DILocation(line: 671, column: 14, scope: !4889)
!4903 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$u32$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17h33322a3cd4d3915eE", scope: !4904, file: !3099, line: 583, type: !4562, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4905)
!4904 = !DINamespace(name: "{impl#98}", scope: !3101)
!4905 = !{!4906, !4907}
!4906 = !DILocalVariable(name: "self", arg: 1, scope: !4903, file: !3099, line: 583, type: !3104)
!4907 = !DILocalVariable(name: "other", arg: 2, scope: !4903, file: !3099, line: 583, type: !4564)
!4908 = !DILocation(line: 583, column: 24, scope: !4903)
!4909 = !DILocation(line: 583, column: 30, scope: !4903)
!4910 = !DILocation(line: 584, column: 31, scope: !4903)
!4911 = !DILocation(line: 584, column: 38, scope: !4903)
!4912 = !DILocation(line: 584, column: 17, scope: !4903)
!4913 = !DILocation(line: 585, column: 14, scope: !4903)
!4914 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shl$LT$u64$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17hb8a4e59707af75f2E", scope: !4915, file: !3099, line: 665, type: !4576, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4916)
!4915 = !DINamespace(name: "{impl#99}", scope: !3101)
!4916 = !{!4917, !4918}
!4917 = !DILocalVariable(name: "self", arg: 1, scope: !4914, file: !3099, line: 665, type: !1499)
!4918 = !DILocalVariable(name: "other", arg: 2, scope: !4914, file: !3099, line: 665, type: !54)
!4919 = !DILocation(line: 665, column: 20, scope: !4914)
!4920 = !DILocation(line: 665, column: 26, scope: !4914)
!4921 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !4922)
!4922 = distinct !DILocation(line: 668, column: 58, scope: !4914)
!4923 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !4922)
!4924 = !DILocation(line: 668, column: 58, scope: !4914)
!4925 = !DILocation(line: 668, column: 25, scope: !4914)
!4926 = !DILocation(line: 667, column: 21, scope: !4914)
!4927 = !DILocation(line: 671, column: 14, scope: !4914)
!4928 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$u64$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17h6f9deaef3b7e19b6E", scope: !4929, file: !3099, line: 583, type: !4592, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4930)
!4929 = !DINamespace(name: "{impl#102}", scope: !3101)
!4930 = !{!4931, !4932}
!4931 = !DILocalVariable(name: "self", arg: 1, scope: !4928, file: !3099, line: 583, type: !3104)
!4932 = !DILocalVariable(name: "other", arg: 2, scope: !4928, file: !3099, line: 583, type: !4594)
!4933 = !DILocation(line: 583, column: 24, scope: !4928)
!4934 = !DILocation(line: 583, column: 30, scope: !4928)
!4935 = !DILocation(line: 584, column: 31, scope: !4928)
!4936 = !DILocation(line: 584, column: 38, scope: !4928)
!4937 = !DILocation(line: 584, column: 17, scope: !4928)
!4938 = !DILocation(line: 585, column: 14, scope: !4928)
!4939 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl89_$LT$impl$u20$core..ops..bit..Shl$LT$u128$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17ha43bfca0dde555b6E", scope: !4940, file: !3099, line: 665, type: !4606, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4941)
!4940 = !DINamespace(name: "{impl#103}", scope: !3101)
!4941 = !{!4942, !4943}
!4942 = !DILocalVariable(name: "self", arg: 1, scope: !4939, file: !3099, line: 665, type: !1499)
!4943 = !DILocalVariable(name: "other", arg: 2, scope: !4939, file: !3099, line: 665, type: !3432)
!4944 = !DILocation(line: 665, column: 20, scope: !4939)
!4945 = !DILocation(line: 665, column: 26, scope: !4939)
!4946 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !4947)
!4947 = distinct !DILocation(line: 668, column: 58, scope: !4939)
!4948 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !4947)
!4949 = !DILocation(line: 668, column: 58, scope: !4939)
!4950 = !DILocation(line: 668, column: 25, scope: !4939)
!4951 = !DILocation(line: 667, column: 21, scope: !4939)
!4952 = !DILocation(line: 671, column: 14, scope: !4939)
!4953 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl97_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$u128$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17h281536b0088cfee3E", scope: !4954, file: !3099, line: 583, type: !4622, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4955)
!4954 = !DINamespace(name: "{impl#106}", scope: !3101)
!4955 = !{!4956, !4957}
!4956 = !DILocalVariable(name: "self", arg: 1, scope: !4953, file: !3099, line: 583, type: !3104)
!4957 = !DILocalVariable(name: "other", arg: 2, scope: !4953, file: !3099, line: 583, type: !4624)
!4958 = !DILocation(line: 583, column: 24, scope: !4953)
!4959 = !DILocation(line: 583, column: 30, scope: !4953)
!4960 = !DILocation(line: 584, column: 31, scope: !4953)
!4961 = !DILocation(line: 584, column: 38, scope: !4953)
!4962 = !DILocation(line: 584, column: 17, scope: !4953)
!4963 = !DILocation(line: 585, column: 14, scope: !4953)
!4964 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl90_$LT$impl$u20$core..ops..bit..Shl$LT$usize$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h15c7958c3b75fccdE", scope: !4965, file: !3099, line: 665, type: !4636, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4966)
!4965 = !DINamespace(name: "{impl#107}", scope: !3101)
!4966 = !{!4967, !4968}
!4967 = !DILocalVariable(name: "self", arg: 1, scope: !4964, file: !3099, line: 665, type: !1499)
!4968 = !DILocalVariable(name: "other", arg: 2, scope: !4964, file: !3099, line: 665, type: !9)
!4969 = !DILocation(line: 665, column: 20, scope: !4964)
!4970 = !DILocation(line: 665, column: 26, scope: !4964)
!4971 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !4972)
!4972 = distinct !DILocation(line: 668, column: 58, scope: !4964)
!4973 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !4972)
!4974 = !DILocation(line: 668, column: 58, scope: !4964)
!4975 = !DILocation(line: 668, column: 25, scope: !4964)
!4976 = !DILocation(line: 667, column: 21, scope: !4964)
!4977 = !DILocation(line: 671, column: 14, scope: !4964)
!4978 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl98_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$usize$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17hbabc170e400e2a36E", scope: !4979, file: !3099, line: 583, type: !4652, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4980)
!4979 = !DINamespace(name: "{impl#110}", scope: !3101)
!4980 = !{!4981, !4982}
!4981 = !DILocalVariable(name: "self", arg: 1, scope: !4978, file: !3099, line: 583, type: !3104)
!4982 = !DILocalVariable(name: "other", arg: 2, scope: !4978, file: !3099, line: 583, type: !617)
!4983 = !DILocation(line: 583, column: 24, scope: !4978)
!4984 = !DILocation(line: 583, column: 30, scope: !4978)
!4985 = !DILocation(line: 584, column: 31, scope: !4978)
!4986 = !DILocation(line: 584, column: 38, scope: !4978)
!4987 = !DILocation(line: 584, column: 17, scope: !4978)
!4988 = !DILocation(line: 585, column: 14, scope: !4978)
!4989 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl87_$LT$impl$u20$core..ops..bit..Shl$LT$i8$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h02e7dd6688a3af5bE", scope: !4990, file: !3099, line: 665, type: !4665, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !4991)
!4990 = !DINamespace(name: "{impl#111}", scope: !3101)
!4991 = !{!4992, !4993}
!4992 = !DILocalVariable(name: "self", arg: 1, scope: !4989, file: !3099, line: 665, type: !1499)
!4993 = !DILocalVariable(name: "other", arg: 2, scope: !4989, file: !3099, line: 665, type: !136)
!4994 = !DILocation(line: 665, column: 20, scope: !4989)
!4995 = !DILocation(line: 665, column: 26, scope: !4989)
!4996 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !4997)
!4997 = distinct !DILocation(line: 668, column: 58, scope: !4989)
!4998 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !4997)
!4999 = !DILocation(line: 668, column: 58, scope: !4989)
!5000 = !DILocation(line: 668, column: 25, scope: !4989)
!5001 = !DILocation(line: 667, column: 21, scope: !4989)
!5002 = !DILocation(line: 671, column: 14, scope: !4989)
!5003 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl95_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$i8$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17hcc2153ace349cef6E", scope: !5004, file: !3099, line: 583, type: !4681, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !5005)
!5004 = !DINamespace(name: "{impl#114}", scope: !3101)
!5005 = !{!5006, !5007}
!5006 = !DILocalVariable(name: "self", arg: 1, scope: !5003, file: !3099, line: 583, type: !3104)
!5007 = !DILocalVariable(name: "other", arg: 2, scope: !5003, file: !3099, line: 583, type: !4683)
!5008 = !DILocation(line: 583, column: 24, scope: !5003)
!5009 = !DILocation(line: 583, column: 30, scope: !5003)
!5010 = !DILocation(line: 584, column: 31, scope: !5003)
!5011 = !DILocation(line: 584, column: 38, scope: !5003)
!5012 = !DILocation(line: 584, column: 17, scope: !5003)
!5013 = !DILocation(line: 585, column: 14, scope: !5003)
!5014 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shl$LT$i16$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17hc0faefeb19a6911dE", scope: !5015, file: !3099, line: 665, type: !4695, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !5016)
!5015 = !DINamespace(name: "{impl#115}", scope: !3101)
!5016 = !{!5017, !5018}
!5017 = !DILocalVariable(name: "self", arg: 1, scope: !5014, file: !3099, line: 665, type: !1499)
!5018 = !DILocalVariable(name: "other", arg: 2, scope: !5014, file: !3099, line: 665, type: !3257)
!5019 = !DILocation(line: 665, column: 20, scope: !5014)
!5020 = !DILocation(line: 665, column: 26, scope: !5014)
!5021 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !5022)
!5022 = distinct !DILocation(line: 668, column: 58, scope: !5014)
!5023 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !5022)
!5024 = !DILocation(line: 668, column: 58, scope: !5014)
!5025 = !DILocation(line: 668, column: 25, scope: !5014)
!5026 = !DILocation(line: 667, column: 21, scope: !5014)
!5027 = !DILocation(line: 671, column: 14, scope: !5014)
!5028 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$i16$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17ha8faf2c463cb7f40E", scope: !5029, file: !3099, line: 583, type: !4711, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !5030)
!5029 = !DINamespace(name: "{impl#118}", scope: !3101)
!5030 = !{!5031, !5032}
!5031 = !DILocalVariable(name: "self", arg: 1, scope: !5028, file: !3099, line: 583, type: !3104)
!5032 = !DILocalVariable(name: "other", arg: 2, scope: !5028, file: !3099, line: 583, type: !4713)
!5033 = !DILocation(line: 583, column: 24, scope: !5028)
!5034 = !DILocation(line: 583, column: 30, scope: !5028)
!5035 = !DILocation(line: 584, column: 31, scope: !5028)
!5036 = !DILocation(line: 584, column: 38, scope: !5028)
!5037 = !DILocation(line: 584, column: 17, scope: !5028)
!5038 = !DILocation(line: 585, column: 14, scope: !5028)
!5039 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shl$LT$i32$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17hffa311d222f638d2E", scope: !5040, file: !3099, line: 665, type: !3873, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !5041)
!5040 = !DINamespace(name: "{impl#119}", scope: !3101)
!5041 = !{!5042, !5043}
!5042 = !DILocalVariable(name: "self", arg: 1, scope: !5039, file: !3099, line: 665, type: !1499)
!5043 = !DILocalVariable(name: "other", arg: 2, scope: !5039, file: !3099, line: 665, type: !253)
!5044 = !DILocation(line: 665, column: 20, scope: !5039)
!5045 = !DILocation(line: 665, column: 26, scope: !5039)
!5046 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !5047)
!5047 = distinct !DILocation(line: 668, column: 58, scope: !5039)
!5048 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !5047)
!5049 = !DILocation(line: 668, column: 58, scope: !5039)
!5050 = !DILocation(line: 668, column: 25, scope: !5039)
!5051 = !DILocation(line: 667, column: 21, scope: !5039)
!5052 = !DILocation(line: 671, column: 14, scope: !5039)
!5053 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$i32$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17h8adba397506058c5E", scope: !5054, file: !3099, line: 583, type: !4739, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !5055)
!5054 = !DINamespace(name: "{impl#122}", scope: !3101)
!5055 = !{!5056, !5057}
!5056 = !DILocalVariable(name: "self", arg: 1, scope: !5053, file: !3099, line: 583, type: !3104)
!5057 = !DILocalVariable(name: "other", arg: 2, scope: !5053, file: !3099, line: 583, type: !399)
!5058 = !DILocation(line: 583, column: 24, scope: !5053)
!5059 = !DILocation(line: 583, column: 30, scope: !5053)
!5060 = !DILocation(line: 584, column: 31, scope: !5053)
!5061 = !DILocation(line: 584, column: 38, scope: !5053)
!5062 = !DILocation(line: 584, column: 17, scope: !5053)
!5063 = !DILocation(line: 585, column: 14, scope: !5053)
!5064 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl88_$LT$impl$u20$core..ops..bit..Shl$LT$i64$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h63382dcbcad48d32E", scope: !5065, file: !3099, line: 665, type: !4752, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !5066)
!5065 = !DINamespace(name: "{impl#123}", scope: !3101)
!5066 = !{!5067, !5068}
!5067 = !DILocalVariable(name: "self", arg: 1, scope: !5064, file: !3099, line: 665, type: !1499)
!5068 = !DILocalVariable(name: "other", arg: 2, scope: !5064, file: !3099, line: 665, type: !276)
!5069 = !DILocation(line: 665, column: 20, scope: !5064)
!5070 = !DILocation(line: 665, column: 26, scope: !5064)
!5071 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !5072)
!5072 = distinct !DILocation(line: 668, column: 58, scope: !5064)
!5073 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !5072)
!5074 = !DILocation(line: 668, column: 58, scope: !5064)
!5075 = !DILocation(line: 668, column: 25, scope: !5064)
!5076 = !DILocation(line: 667, column: 21, scope: !5064)
!5077 = !DILocation(line: 671, column: 14, scope: !5064)
!5078 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl96_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$i64$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17hf63f86452e92bec8E", scope: !5079, file: !3099, line: 583, type: !4768, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !5080)
!5079 = !DINamespace(name: "{impl#126}", scope: !3101)
!5080 = !{!5081, !5082}
!5081 = !DILocalVariable(name: "self", arg: 1, scope: !5078, file: !3099, line: 583, type: !3104)
!5082 = !DILocalVariable(name: "other", arg: 2, scope: !5078, file: !3099, line: 583, type: !412)
!5083 = !DILocation(line: 583, column: 24, scope: !5078)
!5084 = !DILocation(line: 583, column: 30, scope: !5078)
!5085 = !DILocation(line: 584, column: 31, scope: !5078)
!5086 = !DILocation(line: 584, column: 38, scope: !5078)
!5087 = !DILocation(line: 584, column: 17, scope: !5078)
!5088 = !DILocation(line: 585, column: 14, scope: !5078)
!5089 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl89_$LT$impl$u20$core..ops..bit..Shl$LT$i128$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h9b511e76ebae82b4E", scope: !5090, file: !3099, line: 665, type: !4781, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !5091)
!5090 = !DINamespace(name: "{impl#127}", scope: !3101)
!5091 = !{!5092, !5093}
!5092 = !DILocalVariable(name: "self", arg: 1, scope: !5089, file: !3099, line: 665, type: !1499)
!5093 = !DILocalVariable(name: "other", arg: 2, scope: !5089, file: !3099, line: 665, type: !3407)
!5094 = !DILocation(line: 665, column: 20, scope: !5089)
!5095 = !DILocation(line: 665, column: 26, scope: !5089)
!5096 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !5097)
!5097 = distinct !DILocation(line: 668, column: 58, scope: !5089)
!5098 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !5097)
!5099 = !DILocation(line: 668, column: 58, scope: !5089)
!5100 = !DILocation(line: 668, column: 25, scope: !5089)
!5101 = !DILocation(line: 667, column: 21, scope: !5089)
!5102 = !DILocation(line: 671, column: 14, scope: !5089)
!5103 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl97_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$i128$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17hd7899c5cc94eeae3E", scope: !5104, file: !3099, line: 583, type: !4797, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !5105)
!5104 = !DINamespace(name: "{impl#130}", scope: !3101)
!5105 = !{!5106, !5107}
!5106 = !DILocalVariable(name: "self", arg: 1, scope: !5103, file: !3099, line: 583, type: !3104)
!5107 = !DILocalVariable(name: "other", arg: 2, scope: !5103, file: !3099, line: 583, type: !4799)
!5108 = !DILocation(line: 583, column: 24, scope: !5103)
!5109 = !DILocation(line: 583, column: 30, scope: !5103)
!5110 = !DILocation(line: 584, column: 31, scope: !5103)
!5111 = !DILocation(line: 584, column: 38, scope: !5103)
!5112 = !DILocation(line: 584, column: 17, scope: !5103)
!5113 = !DILocation(line: 585, column: 14, scope: !5103)
!5114 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl90_$LT$impl$u20$core..ops..bit..Shl$LT$isize$GT$$u20$for$u20$f128_internal..f128_t..f128$GT$3shl17h36c651162bd560a6E", scope: !5115, file: !3099, line: 665, type: !4811, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !5116)
!5115 = !DINamespace(name: "{impl#131}", scope: !3101)
!5116 = !{!5117, !5118}
!5117 = !DILocalVariable(name: "self", arg: 1, scope: !5114, file: !3099, line: 665, type: !1499)
!5118 = !DILocalVariable(name: "other", arg: 2, scope: !5114, file: !3099, line: 665, type: !2955)
!5119 = !DILocation(line: 665, column: 20, scope: !5114)
!5120 = !DILocation(line: 665, column: 26, scope: !5114)
!5121 = !DILocation(line: 221, column: 18, scope: !4489, inlinedAt: !5122)
!5122 = distinct !DILocation(line: 668, column: 58, scope: !5114)
!5123 = !DILocation(line: 222, column: 9, scope: !4489, inlinedAt: !5122)
!5124 = !DILocation(line: 668, column: 58, scope: !5114)
!5125 = !DILocation(line: 668, column: 25, scope: !5114)
!5126 = !DILocation(line: 667, column: 21, scope: !5114)
!5127 = !DILocation(line: 671, column: 14, scope: !5114)
!5128 = distinct !DISubprogram(name: "shl", linkageName: "_ZN13f128_internal9f128_impl98_$LT$impl$u20$core..ops..bit..Shl$LT$$RF$isize$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3shl17he45fb26a50c0082eE", scope: !5129, file: !3099, line: 583, type: !4827, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !5130)
!5129 = !DINamespace(name: "{impl#134}", scope: !3101)
!5130 = !{!5131, !5132}
!5131 = !DILocalVariable(name: "self", arg: 1, scope: !5128, file: !3099, line: 583, type: !3104)
!5132 = !DILocalVariable(name: "other", arg: 2, scope: !5128, file: !3099, line: 583, type: !4829)
!5133 = !DILocation(line: 583, column: 24, scope: !5128)
!5134 = !DILocation(line: 583, column: 30, scope: !5128)
!5135 = !DILocation(line: 584, column: 31, scope: !5128)
!5136 = !DILocation(line: 584, column: 38, scope: !5128)
!5137 = !DILocation(line: 584, column: 17, scope: !5128)
!5138 = !DILocation(line: 585, column: 14, scope: !5128)
!5139 = distinct !DISubprogram(name: "add", linkageName: "_ZN13f128_internal9f128_impl122_$LT$impl$u20$core..ops..arith..Add$LT$$RF$f128_internal..f128_t..f128$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3add17hdb42a77de4203acdE", scope: !5140, file: !3099, line: 583, type: !5141, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !5143)
!5140 = !DINamespace(name: "{impl#149}", scope: !3101)
!5141 = !DISubroutineType(types: !5142)
!5142 = !{!1499, !3104, !3104}
!5143 = !{!5144, !5145}
!5144 = !DILocalVariable(name: "self", arg: 1, scope: !5139, file: !3099, line: 583, type: !3104)
!5145 = !DILocalVariable(name: "other", arg: 2, scope: !5139, file: !3099, line: 583, type: !3104)
!5146 = !DILocation(line: 583, column: 24, scope: !5139)
!5147 = !DILocation(line: 583, column: 30, scope: !5139)
!5148 = !DILocation(line: 584, column: 31, scope: !5139)
!5149 = !DILocation(line: 584, column: 38, scope: !5139)
!5150 = !DILocation(line: 584, column: 17, scope: !5139)
!5151 = !DILocation(line: 585, column: 14, scope: !5139)
!5152 = distinct !DISubprogram(name: "sub", linkageName: "_ZN13f128_internal9f128_impl122_$LT$impl$u20$core..ops..arith..Sub$LT$$RF$f128_internal..f128_t..f128$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3sub17hb6a5f744f97be03dE", scope: !5153, file: !3099, line: 583, type: !5141, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !5154)
!5153 = !DINamespace(name: "{impl#153}", scope: !3101)
!5154 = !{!5155, !5156}
!5155 = !DILocalVariable(name: "self", arg: 1, scope: !5152, file: !3099, line: 583, type: !3104)
!5156 = !DILocalVariable(name: "other", arg: 2, scope: !5152, file: !3099, line: 583, type: !3104)
!5157 = !DILocation(line: 583, column: 24, scope: !5152)
!5158 = !DILocation(line: 583, column: 30, scope: !5152)
!5159 = !DILocation(line: 584, column: 31, scope: !5152)
!5160 = !DILocation(line: 584, column: 38, scope: !5152)
!5161 = !DILocation(line: 584, column: 17, scope: !5152)
!5162 = !DILocation(line: 585, column: 14, scope: !5152)
!5163 = distinct !DISubprogram(name: "mul", linkageName: "_ZN13f128_internal9f128_impl122_$LT$impl$u20$core..ops..arith..Mul$LT$$RF$f128_internal..f128_t..f128$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3mul17h5ddc33742295e78eE", scope: !5164, file: !3099, line: 583, type: !5141, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !5165)
!5164 = !DINamespace(name: "{impl#157}", scope: !3101)
!5165 = !{!5166, !5167}
!5166 = !DILocalVariable(name: "self", arg: 1, scope: !5163, file: !3099, line: 583, type: !3104)
!5167 = !DILocalVariable(name: "other", arg: 2, scope: !5163, file: !3099, line: 583, type: !3104)
!5168 = !DILocation(line: 583, column: 24, scope: !5163)
!5169 = !DILocation(line: 583, column: 30, scope: !5163)
!5170 = !DILocation(line: 584, column: 31, scope: !5163)
!5171 = !DILocation(line: 584, column: 38, scope: !5163)
!5172 = !DILocation(line: 584, column: 17, scope: !5163)
!5173 = !DILocation(line: 585, column: 14, scope: !5163)
!5174 = distinct !DISubprogram(name: "div", linkageName: "_ZN13f128_internal9f128_impl122_$LT$impl$u20$core..ops..arith..Div$LT$$RF$f128_internal..f128_t..f128$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3div17hdc2aee624ae38a24E", scope: !5175, file: !3099, line: 583, type: !5141, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !5176)
!5175 = !DINamespace(name: "{impl#161}", scope: !3101)
!5176 = !{!5177, !5178}
!5177 = !DILocalVariable(name: "self", arg: 1, scope: !5174, file: !3099, line: 583, type: !3104)
!5178 = !DILocalVariable(name: "other", arg: 2, scope: !5174, file: !3099, line: 583, type: !3104)
!5179 = !DILocation(line: 583, column: 24, scope: !5174)
!5180 = !DILocation(line: 583, column: 30, scope: !5174)
!5181 = !DILocation(line: 584, column: 31, scope: !5174)
!5182 = !DILocation(line: 584, column: 38, scope: !5174)
!5183 = !DILocation(line: 584, column: 17, scope: !5174)
!5184 = !DILocation(line: 585, column: 14, scope: !5174)
!5185 = distinct !DISubprogram(name: "rem", linkageName: "_ZN13f128_internal9f128_impl122_$LT$impl$u20$core..ops..arith..Rem$LT$$RF$f128_internal..f128_t..f128$GT$$u20$for$u20$$RF$f128_internal..f128_t..f128$GT$3rem17h7d96c46d9dd28da2E", scope: !5186, file: !3099, line: 583, type: !5141, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !5187)
!5186 = !DINamespace(name: "{impl#165}", scope: !3101)
!5187 = !{!5188, !5189}
!5188 = !DILocalVariable(name: "self", arg: 1, scope: !5185, file: !3099, line: 583, type: !3104)
!5189 = !DILocalVariable(name: "other", arg: 2, scope: !5185, file: !3099, line: 583, type: !3104)
!5190 = !DILocation(line: 583, column: 24, scope: !5185)
!5191 = !DILocation(line: 583, column: 30, scope: !5185)
!5192 = !DILocation(line: 584, column: 31, scope: !5185)
!5193 = !DILocation(line: 584, column: 38, scope: !5185)
!5194 = !DILocation(line: 584, column: 17, scope: !5185)
!5195 = !DILocation(line: 585, column: 14, scope: !5185)
!5196 = distinct !DISubprogram(name: "clone", linkageName: "_ZN66_$LT$f128_internal..f128_t..f128$u20$as$u20$core..clone..Clone$GT$5clone17hc02454b05c891117E", scope: !5197, file: !3706, line: 10, type: !5198, scopeLine: 10, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !39, templateParams: !26, retainedNodes: !5200)
!5197 = !DINamespace(name: "{impl#1}", scope: !1500)
!5198 = !DISubroutineType(types: !5199)
!5199 = !{!1499, !3104}
!5200 = !{!5201}
!5201 = !DILocalVariable(name: "self", arg: 1, scope: !5196, file: !3706, line: 10, type: !3104)
!5202 = !DILocation(line: 10, column: 10, scope: !5196)
!5203 = !DILocation(line: 10, column: 15, scope: !5196)
